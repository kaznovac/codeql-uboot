declaration of SSL_CTX_dane_enabledeclaration of SSL_set_hostflagsdeclaration of SSL_get0_peernamedeclaration of SSL_add1_hostdeclaration of hostnamedeclaration of SSL_set1_hostdeclaration of SSL_set_trustdeclaration of SSL_CTX_set_trustdeclaration of SSL_set_purposedeclaration of SSL_CTX_set_purposedeclaration of SSL_set_session_id_contextdeclaration of sid_ctxdeclaration of sid_ctx_lendeclaration of SSL_is_dtlsdeclaration of SSL_up_refdeclaration of SSL_newdeclaration of SSL_CTX_set_session_id_contextdeclaration of SSL_check_private_keydeclaration of SSL_CTX_check_private_keydeclaration of SSL_get_default_passwd_cb_userdatadeclaration of SSL_get_default_passwd_cbdeclaration of SSL_set_default_passwd_cb_userdatadeclaration of SSL_set_default_passwd_cbdeclaration of SSL_CTX_get_default_passwd_cb_userdatadeclaration of SSL_CTX_get_default_passwd_cbdeclaration of SSL_CTX_set_default_passwd_cb_userdatadeclaration of SSL_CTX_set_default_passwd_cbdeclaration of SSL_CTX_use_cert_and_keydeclaration of privatekeydeclaration of overridedeclaration of SSL_CTX_use_certificate_ASN1declaration of SSL_CTX_use_certificatedeclaration of SSL_CTX_use_PrivateKey_ASN1declaration of SSL_CTX_use_PrivateKeydeclaration of SSL_CTX_use_RSAPrivateKey_ASN1declaration of SSL_CTX_use_RSAPrivateKeydeclaration of SSL_CTX_set_cert_cbdeclaration of SSL_CTX_set_cert_verify_callbackdeclaration of SSL_CTX_set_verify_depthdeclaration of SSL_CTX_set_verifydeclaration of SSL_CTX_get_verify_callbackdeclaration of SSL_CTX_get_verify_depthdeclaration of SSL_CTX_get_verify_modedeclaration of SSL_get_peer_cert_chaindeclaration of SSL_get_peer_certificatedeclaration of d2i_SSL_SESSIONdeclaration of SSL_has_matching_session_iddeclaration of id_lendeclaration of SSL_set_generate_session_iddeclaration of SSL_CTX_set_generate_session_iddeclaration of SSL_CTX_remove_sessiondeclaration of SSL_CTX_add_sessiondeclaration of SSL_set_sessiondeclaration of i2d_SSL_SESSIONdeclaration of SSL_SESSION_freedeclaration of sesdeclaration of SSL_SESSION_up_refdeclaration of SSL_SESSION_print_keylogdeclaration of SSL_SESSION_printdeclaration of SSL_SESSION_print_fpdeclaration of SSL_SESSION_get_compress_iddeclaration of SSL_SESSION_get0_id_contextdeclaration of SSL_SESSION_get_iddeclaration of SSL_SESSION_dupdeclaration of SSL_SESSION_newdeclaration of SSL_SESSION_is_resumabledeclaration of SSL_SESSION_set1_iddeclaration of siddeclaration of sid_lendeclaration of SSL_SESSION_set1_id_contextdeclaration of SSL_SESSION_get0_peerdeclaration of SSL_copy_session_iddeclaration of SSL_SESSION_set_max_early_datadeclaration of max_early_datadeclaration of SSL_SESSION_get_max_early_datadeclaration of SSL_SESSION_get0_ticketdeclaration of tickdeclaration of SSL_SESSION_get_ticket_lifetime_hintdeclaration of SSL_SESSION_has_ticketdeclaration of SSL_SESSION_set_cipherdeclaration of SSL_SESSION_get0_cipherdeclaration of SSL_SESSION_set1_alpn_selecteddeclaration of alpndeclaration of SSL_SESSION_get0_alpn_selecteddeclaration of SSL_SESSION_set1_hostnamedeclaration of SSL_SESSION_get0_hostnamedeclaration of SSL_SESSION_set_protocol_versiondeclaration of SSL_SESSION_get_protocol_versiondeclaration of SSL_SESSION_set_timeoutdeclaration of SSL_SESSION_get_timeoutdeclaration of SSL_SESSION_set_timedeclaration of SSL_SESSION_get_timedeclaration of SSL_rstate_string_longdeclaration of SSL_state_string_longdeclaration of SSL_rstate_stringdeclaration of SSL_state_stringdeclaration of SSL_add_dir_cert_subjects_to_stackdeclaration of stackCAsdeclaration of SSL_add_file_cert_subjects_to_stackdeclaration of SSL_load_client_CA_filedeclaration of SSL_use_certificate_chain_filedeclaration of SSL_CTX_use_certificate_chain_filedeclaration of SSL_CTX_use_certificate_filedeclaration of SSL_CTX_use_PrivateKey_filedeclaration of SSL_CTX_use_RSAPrivateKey_filedeclaration of SSL_use_certificate_filedeclaration of SSL_use_PrivateKey_filedeclaration of SSL_use_RSAPrivateKey_filedeclaration of SSL_CTX_use_serverinfo_filedeclaration of SSL_CTX_use_serverinfo_exdeclaration of serverinfodeclaration of serverinfo_lengthdeclaration of SSL_CTX_use_serverinfodeclaration of SSL_use_cert_and_keydeclaration of SSL_use_certificate_ASN1declaration of SSL_use_certificatedeclaration of SSL_use_PrivateKey_ASN1declaration of SSL_use_PrivateKeydeclaration of SSL_use_RSAPrivateKey_ASN1declaration of SSL_use_RSAPrivateKeydeclaration of SSL_set_cert_cbdeclaration of SSL_set_verify_depthdeclaration of SSL_set_verifydeclaration of SSL_get_verify_callbackdeclaration of SSL_get_verify_depthdeclaration of SSL_get_verify_modedeclaration of SSL_set_read_aheaddeclaration of yesdeclaration of SSL_set_ciphersuitesdeclaration of SSL_CTX_set_ciphersuitesdeclaration of SSL_set_cipher_listdeclaration of SSL_get_wbiodeclaration of SSL_get_rbiodeclaration of SSL_set_biodeclaration of rbiodeclaration of wbiodeclaration of SSL_set0_wbiodeclaration of SSL_set0_rbiodeclaration of SSL_set_wfddeclaration of SSL_set_rfddeclaration of SSL_set_fddeclaration of SSL_has_pendingdeclaration of SSL_pendingdeclaration of SSL_get_read_aheaddeclaration of SSL_get_shared_ciphersdeclaration of SSL_get_cipher_listdeclaration of SSL_get_wfddeclaration of SSL_get_rfddeclaration of SSL_get_fddeclaration of SSL_CIPHER_is_aeaddeclaration of SSL_CIPHER_get_handshake_digestdeclaration of SSL_CIPHER_get_auth_niddeclaration of SSL_CIPHER_get_kx_niddeclaration of SSL_CIPHER_get_protocol_iddeclaration of SSL_CIPHER_get_iddeclaration of OPENSSL_cipher_namedeclaration of rfc_namedeclaration of SSL_CIPHER_standard_namedeclaration of SSL_CIPHER_get_namedeclaration of SSL_CIPHER_get_versiondeclaration of SSL_CIPHER_get_bitsdeclaration of alg_bitsdeclaration of SSL_get_pending_cipherdeclaration of SSL_get_current_cipherdeclaration of SSL_CTX_flush_sessionsdeclaration of SSL_cleardeclaration of SSL_wantdeclaration of SSL_CTX_set1_cert_storedeclaration of SSL_CTX_set_cert_storedeclaration of SSL_CTX_get_cert_storedeclaration of SSL_CTX_get_timeoutdeclaration of SSL_CTX_set_timeoutdeclaration of SSL_CTX_freedeclaration of SSL_CTX_up_refdeclaration of SSL_CTX_newdeclaration of SSL_CTX_set_cipher_listdeclaration of BIO_ssl_shutdowndeclaration of ssl_biodeclaration of BIO_ssl_copy_session_iddeclaration of BIO_new_buffer_ssl_connectdeclaration of BIO_new_ssl_connectdeclaration of BIO_new_ssldeclaration of BIO_f_ssldeclaration of PEM_write_SSL_SESSIONdeclaration of PEM_write_bio_SSL_SESSIONdeclaration of PEM_read_SSL_SESSIONdeclaration of PEM_read_bio_SSL_SESSIONdeclaration of SSL_get_peer_finisheddeclaration of SSL_get_finisheddeclaration of SSL_is_init_finisheddeclaration of SSL_in_beforedeclaration of SSL_in_initdeclaration of SSL_set_debugdeclaration of debugdeclaration of SSL_get_recv_max_early_datadeclaration of SSL_set_recv_max_early_datadeclaration of recv_max_early_datadeclaration of SSL_CTX_get_recv_max_early_datadeclaration of SSL_CTX_set_recv_max_early_datadeclaration of SSL_get_max_early_datadeclaration of SSL_set_max_early_datadeclaration of SSL_CTX_get_max_early_datadeclaration of SSL_CTX_set_max_early_datadeclaration of SSL_CTX_get_keylog_callbackdeclaration of SSL_CTX_set_keylog_callbackdeclaration of SSL_extension_supporteddeclaration of ext_typedeclaration of SSL_CTX_add_custom_extdeclaration of add_cbdeclaration of free_cbdeclaration of add_argdeclaration of parse_cbdeclaration of parse_argdeclaration of SSL_CTX_add_server_custom_extdeclaration of SSL_CTX_add_client_custom_extdeclaration of SSL_CTX_has_client_custom_extdeclaration of SSL_CTX_set_psk_use_session_callbackdeclaration of SSL_set_psk_use_session_callbackdeclaration of SSL_CTX_set_psk_find_session_callbackdeclaration of SSL_set_psk_find_session_callbackdeclaration of SSL_get_psk_identitydeclaration of SSL_get_psk_identity_hintdeclaration of SSL_use_psk_identity_hintdeclaration of identity_hintdeclaration of SSL_CTX_use_psk_identity_hintdeclaration of SSL_set_psk_server_callbackdeclaration of SSL_CTX_set_psk_server_callbackdeclaration of SSL_set_psk_client_callbackdeclaration of SSL_CTX_set_psk_client_callbackdeclaration of SSL_get0_alpn_selecteddeclaration of SSL_CTX_set_alpn_select_cbdeclaration of SSL_set_alpn_protosdeclaration of protosdeclaration of protos_lendeclaration of SSL_CTX_set_alpn_protosdeclaration of SSL_select_next_protodeclaration of client_lendeclaration of SSL_get0_next_proto_negotiateddeclaration of SSL_CTX_set_next_proto_select_cbdeclaration of SSL_CTX_set_next_protos_advertised_cbdeclaration of SSL_CTX_set_stateless_cookie_verify_cbdeclaration of verify_stateless_cookie_cbdeclaration of SSL_CTX_set_stateless_cookie_generate_cbdeclaration of gen_stateless_cookie_cbdeclaration of SSL_CTX_set_cookie_verify_cbdeclaration of app_verify_cookie_cbdeclaration of SSL_CTX_set_cookie_generate_cbdeclaration of app_gen_cookie_cbdeclaration of SSL_CTX_set_client_cert_enginedeclaration of SSL_CTX_get_client_cert_cbdeclaration of SSL_CTX_set_client_cert_cbdeclaration of client_cert_cbdeclaration of SSL_CTX_get_info_callbackdeclaration of SSL_CTX_set_info_callbackdeclaration of SSL_CTX_sess_get_get_cbdeclaration of SSL_CTX_sess_set_get_cbdeclaration of get_session_cbdeclaration of SSL_CTX_sess_get_remove_cbdeclaration of SSL_CTX_sess_set_remove_cbdeclaration of remove_session_cbdeclaration of SSL_CTX_sess_get_new_cbdeclaration of SSL_CTX_sess_set_new_cbdeclaration of new_session_cbdeclaration of SSL_CTX_sessionsdeclaration of SRP_Calc_A_paramdeclaration of SSL_srp_server_param_with_usernamedeclaration of SSL_CTX_SRP_CTX_freedeclaration of SSL_SRP_CTX_freedeclaration of SSL_CTX_SRP_CTX_initdeclaration of SSL_SRP_CTX_initdeclaration of SSL_set_msg_callbackdeclaration of SSL_CTX_set_msg_callbackdeclaration of SSL_set_optionsdeclaration of SSL_CTX_set_optionsdeclaration of SSL_clear_optionsdeclaration of SSL_CTX_clear_optionsdeclaration of SSL_get_optionsdeclaration of SSL_CTX_get_optionsdeclaration of tls_session_ticket_ext_stdeclaration of ERR_load_RAND_stringsdeclaration of RAND_polldeclaration of RAND_statusdeclaration of RAND_file_namedeclaration of RAND_write_filedeclaration of RAND_load_filedeclaration of max_bytesdeclaration of RAND_adddeclaration of randomnessdeclaration of RAND_keep_random_devices_opendeclaration of keepdeclaration of RAND_seeddeclaration of RAND_pseudo_bytesdeclaration of RAND_priv_bytesdeclaration of RAND_bytesdeclaration of RAND_OpenSSLdeclaration of RAND_set_rand_enginedeclaration of RAND_get_rand_methoddeclaration of RAND_set_rand_methoddeclaration of ERR_load_UI_stringsdeclaration of sk_UI_STRING_copyfuncdeclaration of sk_UI_STRING_freefuncdeclaration of sk_UI_STRING_compfuncdeclaration of stack_st_UI_STRINGdeclaration of UI_STRINGdeclaration of ui_string_stdeclaration of UI_UTIL_wrap_read_pem_callbackdeclaration of UI_UTIL_read_pwdeclaration of UI_UTIL_read_pw_stringdeclaration of UI_set_result_exdeclaration of uideclaration of uisdeclaration of UI_set_resultdeclaration of UI_get_result_maxsizedeclaration of UI_get_result_minsizedeclaration of UI_get0_test_stringdeclaration of UI_get_result_string_lengthdeclaration of UI_get0_result_stringdeclaration of UI_get0_action_stringdeclaration of UI_get0_output_stringdeclaration of UI_get_input_flagsdeclaration of UI_get_string_typedeclaration of UI_method_get_ex_datadeclaration of UI_method_get_data_destructordeclaration of UI_method_get_data_duplicatordeclaration of UI_method_get_prompt_constructordeclaration of UI_method_get_closerdeclaration of UI_method_get_readerdeclaration of UI_method_get_flusherdeclaration of UI_method_get_writerdeclaration of UI_method_get_openerdeclaration of UI_method_set_ex_datadeclaration of UI_method_set_prompt_constructordeclaration of prompt_constructordeclaration of UI_method_set_data_duplicatordeclaration of duplicatordeclaration of destructordeclaration of UI_method_set_closerdeclaration of closerdeclaration of UI_method_set_readerdeclaration of readerdeclaration of UI_method_set_flusherdeclaration of flusherdeclaration of UI_method_set_writerdeclaration of writerdeclaration of UI_method_set_openerdeclaration of openerdeclaration of UI_destroy_methoddeclaration of ui_methoddeclaration of UI_create_methoddeclaration of UI_nulldeclaration of UI_OpenSSLdeclaration of UI_set_methoddeclaration of UI_get_methoddeclaration of UI_get_default_methoddeclaration of UI_set_default_methoddeclaration of UI_get_ex_datadeclaration of UI_set_ex_datadeclaration of UI_ctrldeclaration of UI_processdeclaration of UI_get_result_lengthdeclaration of UI_get0_resultdeclaration of UI_get0_user_datadeclaration of UI_dup_user_datadeclaration of UI_add_user_datadeclaration of UI_construct_promptdeclaration of object_descdeclaration of object_namedeclaration of UI_dup_error_stringdeclaration of UI_add_error_stringdeclaration of UI_dup_info_stringdeclaration of UI_add_info_stringdeclaration of UI_dup_input_booleandeclaration of action_descdeclaration of ok_charsdeclaration of cancel_charsdeclaration of result_bufdeclaration of UI_add_input_booleandeclaration of UI_dup_verify_stringdeclaration of test_bufdeclaration of UI_add_verify_stringdeclaration of UI_dup_input_stringdeclaration of UI_add_input_stringdeclaration of UI_freedeclaration of UI_new_methoddeclaration of UI_newdeclaration of ERR_load_ENGINE_stringsdeclaration of dynamic_bind_enginedeclaration of dynamic_v_check_fndeclaration of dynamic_fnsdeclaration of dynamic_MEM_fnsdeclaration of dyn_MEM_free_fndeclaration of dyn_MEM_realloc_fndeclaration of dyn_MEM_malloc_fndeclaration of ENGINE_PKEY_ASN1_METHS_PTRdeclaration of ENGINE_PKEY_METHS_PTRdeclaration of ENGINE_DIGESTS_PTRdeclaration of ENGINE_CIPHERS_PTRdeclaration of ENGINE_SSL_CLIENT_CERT_PTRdeclaration of ENGINE_LOAD_KEY_PTRdeclaration of ENGINE_CTRL_FUNC_PTRdeclaration of ENGINE_GEN_INT_FUNC_PTRdeclaration of ENGINE_GEN_FUNC_PTRdeclaration of ENGINE_CMD_DEFNdeclaration of ENGINE_get_static_statedeclaration of ENGINE_add_conf_moduledeclaration of ENGINE_set_defaultdeclaration of ENGINE_set_default_pkey_asn1_methsdeclaration of ENGINE_set_default_pkey_methsdeclaration of ENGINE_set_default_digestsdeclaration of ENGINE_set_default_ciphersdeclaration of ENGINE_set_default_RANDdeclaration of ENGINE_set_default_DHdeclaration of ENGINE_set_default_ECdeclaration of ENGINE_set_default_DSAdeclaration of ENGINE_set_default_stringdeclaration of def_listdeclaration of ENGINE_set_default_RSAdeclaration of ENGINE_get_pkey_asn1_meth_enginedeclaration of ENGINE_get_pkey_meth_enginedeclaration of ENGINE_get_digest_enginedeclaration of ENGINE_get_cipher_enginedeclaration of ENGINE_get_default_RANDdeclaration of ENGINE_get_default_DHdeclaration of ENGINE_get_default_ECdeclaration of ENGINE_get_default_DSAdeclaration of ENGINE_get_default_RSAdeclaration of ENGINE_load_ssl_client_certdeclaration of ca_dndeclaration of potherdeclaration of callback_datadeclaration of ENGINE_load_public_keydeclaration of ENGINE_load_private_keydeclaration of ENGINE_finishdeclaration of ENGINE_initdeclaration of ENGINE_get_flagsdeclaration of ENGINE_get_cmd_defnsdeclaration of ENGINE_pkey_asn1_find_strdeclaration of ENGINE_get_pkey_asn1_meth_strdeclaration of ENGINE_get_pkey_asn1_methdeclaration of ENGINE_get_pkey_methdeclaration of ENGINE_get_digestdeclaration of ENGINE_get_cipherdeclaration of ENGINE_get_pkey_asn1_methsdeclaration of ENGINE_get_pkey_methsdeclaration of ENGINE_get_digestsdeclaration of ENGINE_get_ciphersdeclaration of ENGINE_get_ssl_client_cert_functiondeclaration of ENGINE_get_load_pubkey_functiondeclaration of ENGINE_get_load_privkey_functiondeclaration of ENGINE_get_ctrl_functiondeclaration of ENGINE_get_finish_functiondeclaration of ENGINE_get_init_functiondeclaration of ENGINE_get_destroy_functiondeclaration of ENGINE_get_RANDdeclaration of ENGINE_get_DHdeclaration of ENGINE_get_ECdeclaration of ENGINE_get_DSAdeclaration of ENGINE_get_RSAdeclaration of ENGINE_get_namedeclaration of ENGINE_get_iddeclaration of ENGINE_get_ex_datadeclaration of ENGINE_set_ex_datadeclaration of ENGINE_set_cmd_defnsdeclaration of defnsdeclaration of ENGINE_set_flagsdeclaration of ENGINE_set_pkey_asn1_methsdeclaration of ENGINE_set_pkey_methsdeclaration of ENGINE_set_digestsdeclaration of ENGINE_set_ciphersdeclaration of ENGINE_set_load_ssl_client_cert_functiondeclaration of loadssl_fdeclaration of ENGINE_set_load_pubkey_functiondeclaration of loadpub_fdeclaration of ENGINE_set_load_privkey_functiondeclaration of loadpriv_fdeclaration of ENGINE_set_ctrl_functiondeclaration of ctrl_fdeclaration of ENGINE_set_finish_functiondeclaration of finish_fdeclaration of ENGINE_set_init_functiondeclaration of init_fdeclaration of ENGINE_set_destroy_functiondeclaration of destroy_fdeclaration of ENGINE_set_RANDdeclaration of rand_methdeclaration of ENGINE_set_DHdeclaration of dh_methdeclaration of ENGINE_set_ECdeclaration of ecdsa_methdeclaration of ENGINE_set_DSAdeclaration of dsa_methdeclaration of ENGINE_set_RSAdeclaration of rsa_methdeclaration of ENGINE_set_namedeclaration of ENGINE_set_iddeclaration of ENGINE_up_refdeclaration of ENGINE_freedeclaration of ENGINE_newdeclaration of ENGINE_ctrl_cmd_stringdeclaration of cmd_namedeclaration of cmd_optionaldeclaration of ENGINE_ctrl_cmddeclaration of ENGINE_cmd_is_executabledeclaration of ENGINE_ctrldeclaration of ENGINE_register_all_completedeclaration of ENGINE_register_completedeclaration of ENGINE_register_all_pkey_asn1_methsdeclaration of ENGINE_unregister_pkey_asn1_methsdeclaration of ENGINE_register_pkey_asn1_methsdeclaration of ENGINE_register_all_pkey_methsdeclaration of ENGINE_unregister_pkey_methsdeclaration of ENGINE_register_pkey_methsdeclaration of ENGINE_register_all_digestsdeclaration of ENGINE_unregister_digestsdeclaration of ENGINE_register_digestsdeclaration of ENGINE_register_all_ciphersdeclaration of ENGINE_unregister_ciphersdeclaration of ENGINE_register_ciphersdeclaration of ENGINE_register_all_RANDdeclaration of ENGINE_unregister_RANDdeclaration of ENGINE_register_RANDdeclaration of ENGINE_register_all_DHdeclaration of ENGINE_unregister_DHdeclaration of ENGINE_register_DHdeclaration of ENGINE_register_all_ECdeclaration of ENGINE_unregister_ECdeclaration of ENGINE_register_ECdeclaration of ENGINE_register_all_DSAdeclaration of ENGINE_unregister_DSAdeclaration of ENGINE_register_DSAdeclaration of ENGINE_register_all_RSAdeclaration of ENGINE_unregister_RSAdeclaration of ENGINE_register_RSAdeclaration of ENGINE_set_table_flagsdeclaration of ENGINE_get_table_flagsdeclaration of ENGINE_load_builtin_enginesdeclaration of ENGINE_by_iddeclaration of ENGINE_removedeclaration of ENGINE_adddeclaration of ENGINE_get_prevdeclaration of ENGINE_get_nextdeclaration of ENGINE_get_lastdeclaration of ENGINE_get_firstdeclaration of __xpg_basenamedeclaration of copy_filedeclaration of pbl_crc32declaration of in_crcdeclaration of gpimage_check_paramsdeclaration of gph_set_headerdeclaration of gphdeclaration of bedeclaration of gph_print_headerdeclaration of gph_verify_headerdeclaration of valid_gph_load_addrdeclaration of valid_gph_sizedeclaration of regmatch_tdeclaration of regoff_tdeclaration of regex_tdeclaration of re_dfa_tdeclaration of reg_errcode_tdeclaration of reg_syntax_tdeclaration of active_reg_tdeclaration of s_reg_tdeclaration of __re_long_size_tdeclaration of __re_size_tdeclaration of regfreedeclaration of __pregdeclaration of regerrordeclaration of __errcodedeclaration of __errbufdeclaration of __errbuf_sizedeclaration of regexecdeclaration of __Stringdeclaration of __nmatchdeclaration of __pmatchdeclaration of __eflagsdeclaration of regcompdeclaration of __patterndeclaration of __cflagsdeclaration of re_set_registersdeclaration of __regsdeclaration of __num_regsdeclaration of __startsdeclaration of __endsdeclaration of re_match_2declaration of __string1declaration of __length1declaration of __string2declaration of __length2declaration of __stopdeclaration of re_matchdeclaration of re_search_2declaration of __rangedeclaration of re_searchdeclaration of re_compile_fastmapdeclaration of re_compile_patterndeclaration of re_set_syntaxdeclaration of __syntaxdeclaration of re_syntax_optionsdeclaration of sig_atomic_tdeclaration of __sigval_tdeclaration of siginfo_tdeclaration of sigval_tdeclaration of sigevent_tdeclaration of stack_tdeclaration of ucontext_tdeclaration of mcontext_tdeclaration of fpregset_tdeclaration of gregset_tdeclaration of greg_tdeclaration of pthread_sigqueuedeclaration of __threadiddeclaration of __signodeclaration of pthread_killdeclaration of pthread_sigmaskdeclaration of __newmaskdeclaration of __oldmaskdeclaration of sig_tdeclaration of sighandler_tdeclaration of __sighandler_tdeclaration of __libc_current_sigrtmaxdeclaration of __libc_current_sigrtmindeclaration of sigsetdeclaration of __dispdeclaration of sigignoredeclaration of sigrelsedeclaration of sigholddeclaration of sigstackdeclaration of __ssdeclaration of __ossdeclaration of sigaltstackdeclaration of siginterruptdeclaration of __interruptdeclaration of sigreturndeclaration of __scpdeclaration of sys_siglistdeclaration of _sys_siglistdeclaration of sigqueuedeclaration of sigtimedwaitdeclaration of __infodeclaration of sigwaitinfodeclaration of sigwaitdeclaration of sigpendingdeclaration of sigactiondeclaration of __actdeclaration of __oactdeclaration of sigsuspenddeclaration of sigprocmaskdeclaration of __osetdeclaration of sigorsetdeclaration of __leftdeclaration of __rightdeclaration of sigandsetdeclaration of sigisemptysetdeclaration of sigismemberdeclaration of sigdelsetdeclaration of sigaddsetdeclaration of sigfillsetdeclaration of sigemptysetdeclaration of siggetmaskdeclaration of sigsetmaskdeclaration of sigblockdeclaration of sigpausedeclaration of psiginfodeclaration of __pinfodeclaration of psignaldeclaration of gsignaldeclaration of ssignaldeclaration of __handlerdeclaration of raisedeclaration of killpgdeclaration of __pgrpdeclaration of killdeclaration of signaldeclaration of sysv_signaldeclaration of __sysv_signaldeclaration of objsection_infodeclaration of outfdeclaration of rkcommon_vrec_headerdeclaration of rkcommon_rc4_encode_spldeclaration of rkcommon_need_rc4_spldeclaration of rkcommon_print_headerdeclaration of rkcommon_verify_headerdeclaration of rkcommon_set_headerdeclaration of file_sizedeclaration of rkcommon_get_spl_sizedeclaration of rkcommon_get_spl_hdrdeclaration of rkcommon_check_paramsdeclaration of zynqmpimage_print_headerdeclaration of zynqmpimage_default_headeralignas(...)empty argument(global namespace)3rddeclaration of 3rd parameter1stdeclaration of 1st parameterdeclaration of p1 as anonymous 1st parameter2nddeclaration of 2nd parameterdeclaration of p2 as anonymous 2nd parameterdeclaration of dst as anonymous 1st parameterdeclaration of dstlen as anonymous 2nd parameterdeclaration of src as anonymous 3rd parameter4thdeclaration of 4th parameterdeclaration of lenp as anonymous 4th parameterdeclaration of start as anonymous 1st parameterdeclaration of size as anonymous 2nd parameterdeclaration of val as anonymous 1st parameterdeclaration of str as anonymous 1st parameterdeclaration of ch as anonymous 1st parameterdeclaration of base as anonymous 1st parameterdeclaration of maxsize as anonymous 2nd parameterdeclaration of s1 as anonymous 1st parameterdeclaration of i2 as anonymous 2nd parameterdeclaration of cmdtp as anonymous 1st parameterdeclaration of flag as anonymous 2nd parameterdeclaration of argc as anonymous 3rd parameterdeclaration of argv as anonymous 4th parameterdeclaration of param_number as anonymous 1st parameterdeclaration of value as anonymous 2nd parameterdeclaration of mem as anonymous 1st parameterdeclaration of pad as anonymous 1st parameterdeclaration of n as anonymous 1st parameterdeclaration of elem_size as anonymous 2nd parameterdeclaration of bytes as anonymous 1st parameterdeclaration of alignment as anonymous 1st parameterdeclaration of bytes as anonymous 2nd parameterdeclaration of oldmem as anonymous 1st parameterdeclaration of increment as anonymous 1st parameterdeclaration of dest as anonymous 1st parameterdeclaration of __dest as anonymous 1st parameterdeclaration of src as anonymous 2nd parameterdeclaration of __src as anonymous 2nd parameterdeclaration of count as anonymous 3rd parameterdeclaration of __len as anonymous 3rd parameterdeclaration of s as anonymous 1st parameterdeclaration of c as anonymous 2nd parameterdeclaration of __ch as anonymous 2nd parameterdeclaration of x as anonymous 1st parameterdeclaration of addr as anonymous 2nd parameterdeclaration of nb as anonymous 3rd parameterdeclaration of items as anonymous 2nd parameterdeclaration of size as anonymous 3rd parameter5thdeclaration of 5th parameterdeclaration of datestr as anonymous 1st parameterdeclaration of tmp as anonymous 2nd parameterdeclaration of flags as anonymous 1st parameterdeclaration of name as anonymous 2nd parameterdeclaration of console as anonymous 1st parameterdeclaration of arg as anonymous 2nd parameterdeclaration of disable as anonymous 1st parameterdeclaration of fmt as anonymous 1st parameterdeclaration of __fmt as anonymous 1st parameterdeclaration of args as anonymous 2nd parameterdeclaration of __ap as anonymous 2nd parameterdeclaration of usec as anonymous 1st parameterdeclaration of c as anonymous 1st parameterdeclaration of addr as anonymous 1st parameterdeclaration of incrflag as anonymous 2nd parameterdeclaration of flag as anonymous 3rd parameterdeclaration of argc as anonymous 4th parameterdeclaration of argv as anonymous 5th parameterdeclaration of proto as anonymous 1st parameterdeclaration of cmdtp as anonymous 2nd parameterdeclaration of r as anonymous 1st parameterdeclaration of cmd_parameter as anonymous 1st parameterdeclaration of response as anonymous 2nd parameterdeclaration of mtd as anonymous 1st parameterdeclaration of parts as anonymous 2nd parameterdeclaration of nparts as anonymous 3rd parameterdeclaration of p as anonymous 1st parameterdeclaration of root as anonymous 1st parameterdeclaration of key as anonymous 2nd parameterdeclaration of p as anonymous 3rd parameterdeclaration of slot as anonymous 3rd parameterdeclaration of a as anonymous 1st parameterdeclaration of b as anonymous 2nd parameterdeclaration of path as anonymous 1st parameterdeclaration of extent as anonymous 2nd parameterdeclaration of offset as anonymous 3rd parameterdeclaration of size as anonymous 4th parameterdeclaration of out as anonymous 5th parameterdeclaration of inr as anonymous 2nd parameterdeclaration of buf as anonymous 5th parameterdeclaration of path as anonymous 3rd parameterdeclaration of type_p as anonymous 4th parameterdeclaration of inode_item_p as anonymous 5th parameter6thdeclaration of symlink_limit as anonymous 6th parameterdeclaration of target as anonymous 3rd parameterdeclaration of location as anonymous 2nd parameterdeclaration of item as anonymous 3rd parameterdeclaration of new_root as anonymous 4th parameterdeclaration of refp as anonymous 3rd parameterdeclaration of name as anonymous 4th parameterdeclaration of subvolid as anonymous 1st parameterdeclaration of refp as anonymous 2nd parameterdeclaration of name as anonymous 3rd parameterdeclaration of objectid as anonymous 1st parameterdeclaration of root as anonymous 2nd parameterdeclaration of root_item as anonymous 3rd parameterdeclaration of dir as anonymous 2nd parameterdeclaration of callback as anonymous 3rd parameterdeclaration of name_len as anonymous 4th parameterdeclaration of item as anonymous 5th parameterdeclaration of clen as anonymous 3rd parameterdeclaration of d as anonymous 4th parameterdeclaration of dlen as anonymous 5th parameterdeclaration of logical as anonymous 1st parameterdeclaration of address as anonymous 1st parameterdeclaration of byte_len as anonymous 2nd parameterdeclaration of buf as anonymous 3rd parameterdeclaration of crc as anonymous 1st parameterdeclaration of result as anonymous 2nd parameterdeclaration of data as anonymous 1st parameterdeclaration of seed as anonymous 2nd parameterdeclaration of len as anonymous 3rd parameterdeclaration of data as anonymous 2nd parameterdeclaration of length as anonymous 3rd parameterdeclaration of 6th parameterdeclaration of bytes as anonymous 3rd parameterdeclaration of n as anonymous 3rd parameterdeclaration of cs as anonymous 1st parameterdeclaration of ct as anonymous 2nd parameterdeclaration of n as anonymous 2nd parameterdeclaration of count as anonymous 2nd parameterdeclaration of s2 as anonymous 2nd parameterdeclaration of accept as anonymous 2nd parameterdeclaration of crc32c_table as anonymous 4th parameterdeclaration of crc32c_table as anonymous 1st parameterdeclaration of pol as anonymous 2nd parameterdeclaration of buf as anonymous 2nd parameterdeclaration of chunk_sz as anonymous 4th parameterdeclaration of p as anonymous 2nd parameterdeclaration of var as anonymous 1st parameterdeclaration of iv as anonymous 1st parameterdeclaration of f as anonymous 2nd parameterdeclaration of f as anonymous 1st parameterdeclaration of protocol as anonymous 1st parameterdeclaration of limit as anonymous 1st parameterdeclaration of base as anonymous 2nd parameterdeclaration of perm as anonymous 3rd parameterdeclaration of length as anonymous 4th parameterdeclaration of minLen as anonymous 5th parameterdeclaration of maxLen as anonymous 6th parameter7thdeclaration of alphaSize as anonymous 7th parameterdeclaration of indx as anonymous 1st parameterdeclaration of cftab as anonymous 2nd parameterdeclaration of len as anonymous 1st parameterdeclaration of freq as anonymous 2nd parameterdeclaration of alphaSize as anonymous 3rd parameterdeclaration of maxLen as anonymous 4th parameterdeclaration of code as anonymous 1st parameterdeclaration of length as anonymous 2nd parameterdeclaration of minLen as anonymous 3rd parameterdeclaration of alphaSize as anonymous 5th parameterdeclaration of is_last_block as anonymous 2nd parameterdeclaration of Arr_1_Par_Ref as anonymous 1st parameterdeclaration of Arr_2_Par_Ref as anonymous 2nd parameterdeclaration of Int_1_Par_Val as anonymous 3rd parameterdeclaration of Int_2_Par_Val as anonymous 4th parameterdeclaration of Int_1_Par_Val as anonymous 1st parameterdeclaration of Int_2_Par_Val as anonymous 2nd parameterdeclaration of Int_Par_Ref as anonymous 3rd parameterdeclaration of Enum_Val_Par as anonymous 1st parameterdeclaration of Enum_Ref_Par as anonymous 2nd parameterdeclaration of Str_1_Par_Ref as anonymous 1st parameterdeclaration of Str_2_Par_Ref as anonymous 2nd parameterdeclaration of Enum_Par_Val as anonymous 1st parameterdeclaration of Ch_1_Par_Val as anonymous 1st parameterdeclaration of Ch_2_Par_Val as anonymous 2nd parameterdeclaration of node as anonymous 1st parameterdeclaration of pc as anonymous 2nd parameterdeclaration of s as anonymous 3rd parameterdeclaration of len as anonymous 4th parameterdeclaration of ofs as anonymous 5th parameterdeclaration of caps as anonymous 6th parameterdeclaration of ptr as anonymous 1st parameterdeclaration of size as anonymous 1st parameterdeclaration of 7th parameterdeclaration of ifd as anonymous 1st parameterdeclaration of datafile as anonymous 2nd parameterdeclaration of pad as anonymous 3rd parameter! ...* ...- ...~ ...& ...++ ...-- ...... ++... --... + ...... - ...... << ...... & ...... | ...... >> ...... != ...... == ...... && ...... >= ...... || ...... / ...... > ...... * ...... < ...... <= ...... % ...... ^ ...({...})(...)<error expr>__assume(...)... , ...(reference to)(reference dereference)new[]delete[](statement expression)noexcept(...)call to pci_read_config8call to pci_read_config16call to pci_read_config32call to pci_write_config8call to pci_write_config16call to pci_write_config32call to fdt_setprop_u32call to string_to_ipcall to env_getcall to env_set_hexcall to of_read_numbercall to __builtin_constant_pcall to __fswab32call to ofnode_read_u32call to of_live_activecall to ofnode_validcall to __builtin_expectcall to freecall to kzalloccall to kmalloc_arraycall to kmalloccall to devm_kmalloc_arraycall to devm_kmalloccall to device_get_uclass_idcall to offset_to_ofnodecall to ofnode_to_offsetcall to dev_ofnodecall to ofnode_to_npcall to unmap_physmemcall to map_physmemcall to os_get_nseccall to map_sysmemcall to state_get_currentcall to fdt_create_empty_treecall to printfcall to fdt_strerrorcall to os_get_filesizecall to os_opencall to os_readcall to os_closecall to is_in_sandbox_memcall to find_tagcall to malloccall to os_exitcall to list_add_tailcall to _logcall to pci_unmap_physmemcall to pci_map_physmemcall to phys_to_virtcall to os_abortcall to prefetchcall to os_usleepcall to os_fd_restorecall to state_uninitcall to dm_uninitcall to __getdelimcall to __overflowcall to putccall to __uflowcall to getccall to vfprintfcall to strtollcall to strtolcall to os_freecall to closecall to recvfromcall to __errno_locationcall to socketcall to strerrorcall to bindcall to sendtocall to _local_inet_startcall to _raw_packet_startcall to os_malloccall to memsetcall to __bswap_32call to fcntlcall to setsockoptcall to if_nametoindexcall to memcpycall to __bswap_16call to strlencall to strncpycall to ioctlcall to if_indextonamecall to if_freenameindexcall to if_nameindexcall to __fxstatat64call to __fxstat64call to __lxstat64call to __xstat64call to __xmknodatcall to __xmknodcall to __fxstatatcall to __fxstatcall to __lxstatcall to __xstatcall to hlist_unhashedcall to __hlist_delcall to INIT_HLIST_NODEcall to list_emptycall to __list_splicecall to INIT_LIST_HEADcall to list_is_singularcall to __list_cut_positioncall to __list_delcall to list_addcall to list_replacecall to __list_addcall to opencall to readcall to memchrcall to sscanfcall to getpagesizecall to mprotectcall to abortcall to localtimecall to timecall to os_jump_to_filecall to strcpycall to strcmpcall to strstrcall to memmovecall to make_execcall to mkstempcall to os_write_ram_bufcall to add_argscall to execvcall to perrorcall to unlinkcall to writecall to chmodcall to os_putccall to putcharcall to statcall to opendircall to readdircall to os_dirent_freecall to os_realloccall to snprintfcall to closedircall to __u_boot_sandbox_option_countcall to getopt_longcall to clock_gettimecall to gettimeofdaycall to usleepcall to munmapcall to mmapcall to tcgetattrcall to tcsetattrcall to atexitcall to os_lseekcall to os_writecall to exitcall to lseekcall to __wcstoul_internalcall to __wcstol_internalcall to __strtoul_internalcall to __strtol_internalcall to SDL_PauseAudiocall to sandbox_sdl_ensure_initcall to SDL_InitSubSystemcall to SDL_GetErrorcall to SDL_OpenAudiocall to SDL_MixAudiocall to sandbox_sdl_scan_keyscall to sandbox_sdl_poll_eventscall to SDL_GetKeyStatecall to SDL_CreateRGBSurfaceFromcall to SDL_UpperBlitcall to SDL_FreeSurfacecall to SDL_UpdateRectcall to SDL_WM_SetCaptioncall to SDL_SetVideoModecall to SDL_Initcall to SDL_PollEventcall to putscall to reset_cpucall to os_find_text_basecall to state_initcall to os_parse_argscall to sandbox_read_statecall to setup_ram_bufcall to board_init_fcall to board_init_rcall to simple_strtolcall to os_read_ram_bufcall to cli_initcall to run_command_listcall to cli_simple_run_commandcall to sandbox_early_getopt_checkcall to sandbox_write_statecall to os_unlinkcall to __assert_failcall to state_reset_for_testcall to fdt_getpropcall to state_ensure_spacecall to fdt_setpropcall to fdt_get_namecall to sandbox_write_state_nodecall to fdt_packcall to fdt_node_offset_by_compatiblecall to fdt_add_subnodecall to state_read_filecall to sandbox_read_state_nodescall to fdt_open_intocall to bootstage_markcall to memcmpcall to unmap_sysmemcall to pci_io_writecall to pci_io_readcall to uclass_first_devicecall to uclass_next_devicecall to pci_get_ffcall to uclass_first_device_errcall to paniccall to led_default_statecall to part_get_info_by_dev_and_name_or_numcall to ab_select_slotcall to env_setcall to find_cmd_tblcall to simple_strtoulcall to avb_version_stringcall to avb_slot_verifycall to avb_set_statecall to append_cmd_linecall to avb_ops_freecall to avb_ops_alloccall to axi_writecall to axi_readcall to print_buffercall to ctrlccall to axi_get_cur_buscall to axi_set_cur_buscall to show_buscall to uclass_get_device_by_seqcall to device_find_first_childcall to device_find_next_childcall to print_bi_boot_paramscall to print_bi_dramcall to print_eth_ip_addrcall to print_bi_memcall to print_bi_flashcall to print_baudratecall to print_ethcall to print_numcall to print_lnumcall to strmhzcall to sprintfcall to bind_by_node_pathcall to unbind_by_node_pathcall to bind_by_class_indexcall to unbind_by_class_indexcall to unbind_child_by_class_indexcall to ofnode_pathcall to device_find_global_by_ofnodecall to device_removecall to device_unbindcall to lists_driver_lookup_namecall to ofnode_get_parentcall to device_bind_with_driver_datacall to ofnode_get_namecall to find_devcall to device_chld_removecall to device_chld_unbindcall to uclass_get_by_namecall to uclass_find_devicecall to ofnode_nullcall to strncmpcall to blk_list_devicescall to blk_print_device_numcall to blk_get_if_type_namecall to blk_list_partcall to blk_show_devicecall to blk_print_part_devnumcall to blk_read_devnumcall to blk_write_devnumcall to fixup_cmdtablecall to blkcache_configurecall to blkcache_statscall to gunzip_bmpcall to map_to_sysmemcall to video_bmp_displaycall to splash_get_poscall to bmp_displaycall to bmp_infocall to do_go_execcall to bootcount_storecall to bootcount_loadcall to env_set_ulongcall to env_get_ulongcall to iotrace_readlcall to iotrace_writelcall to u16_strlencall to memaligncall to efi_free_poolcall to efi_dp_from_namecall to efi_dp_split_file_pathcall to efi_init_obj_listcall to efi_install_fdtcall to do_efibootmgrcall to do_bootefi_imagecall to efi_dp_from_memcall to efi_create_handlecall to efi_add_protocolcall to efi_dp_appendcall to efi_load_imagecall to __efi_nesting_inccall to __efi_exit_checkcall to __efi_entry_checkcall to __efi_nesting_deccall to do_bootefi_execcall to efi_delete_handlecall to efi_bootmgr_loadcall to set_load_optionscall to efi_start_imagecall to efi_restore_gdcall to get_config_tablecall to fdt_check_headercall to efi_carve_out_dt_rsvcall to copy_fdtcall to image_setup_libfdtcall to efi_install_configuration_tablecall to guidcmpcall to fdt_num_mem_rsvcall to fdt_get_mem_rsvcall to efi_add_memory_mapcall to efi_allocate_pagescall to fdt_set_totalsizecall to utf8_utf16_strnlencall to calloccall to utf8_utf16_strncpycall to __ilog2_u32call to __ilog2_u64call to fls_longcall to fls64call to generic_flscall to is_power_of_2call to __arch_xprod_64call to __div64_32call to mtd_is_bitflipcall to mtd_is_eccerrcall to ERR_PTRcall to mtd_erasecall to mtd_block_isbadcall to mtd_writecall to mtd_readcall to genimg_get_formatcall to android_print_contentscall to fit_check_formatcall to fit_print_contentscall to fit_all_image_verifycall to image_infocall to run_commandcall to do_bootmcall to do_bootm_subcommandcall to do_bootm_statescall to get_base_sizecall to bootstage_stashcall to bootstage_unstashcall to bootstage_reportcall to bootz_startcall to bootm_disable_interruptscall to bootz_setupcall to lmb_reservecall to bootm_find_imagescall to fs_set_blk_devcall to btrfs_list_subvolscall to file_cbfs_get_headercall to file_cbfs_errorcall to file_cbfs_get_firstcall to file_cbfs_typecall to file_cbfs_namecall to file_cbfs_sizecall to file_cbfs_get_nextcall to file_cbfs_findcall to file_cbfs_readcall to file_cbfs_initcall to gunzipcall to stdio_get_listcall to print_cpu_listcall to dev_get_parent_platdatacall to cpu_get_desccall to cpu_get_infocall to print_freqcall to cramfs_checkcall to cramfs_lscall to cramfs_loadcall to uclass_get_devicecall to cros_ec_read_idcall to cros_ec_infocall to cros_ec_read_current_imagecall to cros_ec_read_hashcall to cros_ec_decode_regioncall to cros_ec_rebootcall to cros_ec_get_host_eventscall to cros_ec_clear_host_eventscall to do_read_writecall to cros_ec_flash_offsetcall to cros_ec_flash_erasecall to cros_ec_read_flashinfocall to cros_ec_read_nvdatacall to strict_strtoulcall to cros_ec_write_nvdatacall to cros_ec_testcall to cros_ec_read_versioncall to cros_ec_read_build_infocall to cros_ec_set_ldocall to cros_ec_get_ldocall to cros_ec_flash_writecall to cros_ec_flash_readcall to strchrcall to cnvrt2call to rtc_calc_weekdaycall to dm_rtc_resetcall to dm_rtc_setcall to dm_rtc_getcall to mk_datecall to cmd_process_errorcall to dev_get_platdatacall to demo_set_lightcall to demo_get_lightcall to demo_statuscall to demo_hellocall to bootstage_errorcall to blk_get_device_part_strcall to blk_dreadcall to fit_get_sizecall to flush_cachecall to bootm_maybe_autostartcall to dm_dump_devrescall to dm_dump_uclasscall to dm_dump_allcall to command_def_initcall to keywords_findcall to cmd_keywords_opt_checkcall to cmd_keywords_checkcall to keyword_match_gencall to is_broadcast_ethaddrcall to eth_validate_ethaddr_strcall to eth_parse_enetaddrcall to do_loadcall to do_lscall to __put_unaligned_le64call to __put_unaligned_le32call to __put_unaligned_le16call to __get_unaligned_le64call to __get_unaligned_le32call to __get_unaligned_le16call to __put_unaligned_be64call to __put_unaligned_be32call to __put_unaligned_be16call to __get_unaligned_be64call to __get_unaligned_be32call to __get_unaligned_be16call to get_unaligned_le16call to get_unaligned_le32call to get_unaligned_le64call to __bad_unaligned_access_sizecall to usb_endpoint_xfer_isoccall to usb_endpoint_dir_outcall to usb_endpoint_dir_incall to usb_endpoint_xfer_intcall to usb_endpoint_xfer_bulkcall to do_savecall to do_sizecall to board_usb_cleanupcall to board_usb_initcall to gadget_is_dualspeedcall to fastboot_initcall to do_fastboot_udpcall to do_fastboot_usbcall to net_loopcall to ata_id_major_versioncall to ata_id_is_satacall to ata_prot_flagscall to do_mkdircall to do_rmcall to cmd_usagecall to fat_set_blk_devcall to file_fat_writecall to file_fat_detectfscall to fdt_path_offsetcall to print_datacall to fdt_next_tagcall to fdt_offset_ptrcall to fdt_stringcall to is_printable_stringcall to fdt_validcall to env_get_hexcall to set_working_fdt_addrcall to fdt_parse_propcall to fdt_node_depthcall to fdt_next_nodecall to fdt_value_env_setcall to fdt_printcall to fdt_delpropcall to fdt_del_nodecall to fdt_get_header_valuecall to fdt_set_boot_cpuid_physcall to simple_strtoullcall to fdt_fixup_memorycall to fdt_add_mem_rsvcall to fdt_del_mem_rsvcall to fdt_chosencall to fdt_initrdcall to fit_conf_get_nodecall to fit_config_verifycall to fdt_overlay_apply_verbosecall to fdt_shrink_to_minimumcall to do_fs_typecall to do_lncall to get_timercall to do_gpio_statuscall to gpio_lookup_namecall to gpio_requestcall to gpio_direction_inputcall to gpio_get_valuecall to gpio_direction_outputcall to gpio_freecall to gpio_get_bank_infocall to strncasecmpcall to gpio_get_descriptioncall to gpio_get_functioncall to gpio_get_statuscall to blk_get_devcall to gpt_defaultcall to gpt_verifycall to do_disk_guidcall to do_get_gpt_infocall to do_rename_gpt_partscall to get_disk_guidcall to get_gpt_infocall to calc_parts_list_lencall to del_gpt_infocall to create_gpt_partitions_listcall to set_gpt_infocall to set_gpt_cleanupcall to part_get_infocall to gpt_restorecall to print_gpt_infocall to gpt_verify_headerscall to gpt_verify_partitionscall to strdupcall to extract_valcall to gen_rand_uuid_strcall to strsepcall to extract_envcall to strnlencall to ustrtoullcall to lldivcall to found_keycall to allocate_disk_partcall to IS_ERRcall to strncatcall to strcatcall to prettyprint_part_sizecall to list_delcall to __tolowercall to hash_commandcall to _do_helpcall to host_get_dev_errcall to dev_get_privcall to host_dev_bindcall to i2c_get_cur_buscall to i2c_deblockcall to mod_i2c_memcall to dm_i2c_get_bus_speedcall to dm_i2c_set_bus_speedcall to cmd_i2c_set_bus_numcall to uclass_getcall to i2c_get_cur_bus_chipcall to dm_i2c_readcall to i2c_report_errcall to edid_check_infocall to edid_print_infocall to get_alencall to i2c_set_chip_offset_lencall to udelaycall to dm_i2c_probecall to bootretry_reset_cmd_timeoutcall to cmd_get_data_sizecall to cli_readlinecall to dm_i2c_writecall to crc32call to i2c_get_chip_offset_lencall to i2c_set_chip_flagscall to i2c_get_chip_flagscall to i2c_get_chipcall to common_diskbootcall to ide_initcall to blk_common_cmdcall to outlcall to outwcall to outbcall to inlcall to inwcall to inbcall to do_set_buffercall to do_set_regioncall to iotrace_set_enabledcall to do_print_statscall to do_print_tracecall to iotrace_set_regioncall to iotrace_set_buffercall to iotrace_get_buffercall to iotrace_get_enabledcall to iotrace_get_regioncall to iotrace_get_checksumcall to binary_testcall to stringcompcall to arithcompcall to evalexpcall to evalstrcall to list_ledscall to get_led_cmdcall to led_get_by_labelcall to led_set_statecall to led_set_periodcall to show_led_statecall to dev_get_uclass_platdatacall to uclass_find_first_devicecall to uclass_find_next_devicecall to led_get_statecall to xyzModem_stream_opencall to xyzModem_stream_readcall to xyzModem_errorcall to xyzModem_stream_closecall to xyzModem_stream_terminatecall to tstccall to k_data_initcall to k_data_savecall to k_data_restorecall to k_data_charcall to send_nackcall to handle_send_packetcall to send_ackcall to ktranscall to chk1call to s1_sendpacketcall to os_data_restorecall to os_data_savecall to send_padcall to set_kerm_bin_modecall to k_recvcall to serial_setbrgcall to load_serial_ymodemcall to load_serial_bincall to read_recordcall to srec_decodecall to load_serialcall to log_get_cat_by_namecall to log_get_level_by_namecall to lzmaBuffToBuffDecompresscall to md5_wdcall to store_resultcall to dm_mdio_probe_devicescall to mdio_get_current_devcall to mdio_phydev_for_ethnamecall to extract_reg_rangecall to extract_phy_rangecall to mdio_list_devicescall to miiphy_set_current_devcall to mdio_write_rangescall to mdio_read_rangescall to miiphy_get_dev_by_namecall to extract_rangecall to strrchrcall to phy_read_mmdcall to phy_write_mmdcall to board_show_dramcall to print_sizecall to randcall to srandcall to mem_test_altcall to mem_test_quickcall to watchdog_resetcall to mod_memcall to mii_nway_resultcall to phy_writecall to phy_mmd_start_indirectcall to phy_readcall to miiphy_get_current_devcall to miiphy_infocall to miiphy_speedcall to miiphy_is_1000base_xcall to miiphy_duplexcall to miiphy_readcall to miiphy_writecall to MII_dumpcall to miiphy_listdevcall to dump_fieldcall to special_fieldcall to dump_regcall to mtdparts_initcall to mtd_devices_initcall to list_partitionscall to mtd_id_parsecall to id_findcall to device_parsecall to device_findcall to device_addcall to part_addcall to device_delcall to generate_mtdparts_savecall to delete_partitioncall to find_dev_and_partcall to current_savecall to env_get_mtdpartscall to parse_mtdidscall to parse_mtdpartscall to mtd_device_validatecall to device_delallcall to env_get_fcall to part_delcall to mtd_part_infocall to print_partition_tablecall to generate_mtdpartscall to memsize_formatcall to id_find_by_mtd_idcall to part_parsecall to part_validatecall to part_delallcall to part_sort_addcall to index_partitionscall to get_mtd_infocall to memsize_parsecall to part_validate_eraseblockcall to get_mtd_device_nmcall to put_mtd_devicecall to ip_to_stringcall to env_get_ipcall to cdp_update_envcall to __fswab16call to vlan_to_stringcall to copy_filenamecall to netboot_update_envcall to netboot_commoncall to bootstage_mark_namecall to hsearch_rcall to himport_rcall to hexport_rcall to hdelete_rcall to set_default_envcall to set_default_varscall to env_get_charcall to envmatchcall to cli_readline_into_buffercall to _do_env_setcall to env_flags_print_vartypescall to env_flags_print_varaccesscall to env_attr_walkcall to hwalk_rcall to env_flags_parse_varaccess_from_binflagscall to env_flags_get_vartype_namecall to env_flags_get_varaccess_namecall to env_flags_parse_vartypecall to env_flags_parse_varaccesscall to eth_env_get_enetaddrcall to is_valid_ethaddrcall to simple_itoacall to do_env_set_eficall to do_env_print_eficall to env_printcall to hex_byte_packcall to hex_to_bincall to append_valuecall to efi_set_variablecall to hex2bincall to realloccall to efi_dump_varscall to efi_dump_var_allcall to efi_get_next_variable_namecall to efi_dump_single_varcall to efi_get_variablecall to print_hex_dumpcall to nvme_scan_namespacecall to blk_get_devicecall to nvme_print_infocall to osd_get_osd_curcall to cmd_osd_set_osd_numcall to show_osdcall to video_osd_set_sizecall to video_osd_printcall to video_osd_set_memcall to do_part_uuidcall to do_part_listcall to do_part_startcall to do_part_sizecall to do_part_numbercall to do_part_infocall to blk_get_device_by_strcall to part_get_info_by_namecall to part_printcall to get_pci_devcall to pci_initcall to pci_show_regionscall to pciinfocall to dm_pci_bus_find_bdfcall to pci_header_showcall to pci_cfg_displaycall to pci_cfg_modifycall to dm_pci_write_configcall to pci_bar_showcall to dev_get_uclass_privcall to dm_pci_read_configcall to pci_field_widthcall to pci_byte_sizecall to pciinfo_headercall to pci_header_show_briefcall to pci_class_strcall to pci_show_regscall to dm_pci_read_config8call to dm_pci_read_config32call to dm_pci_write_config32call to uclass_next_device_errcall to show_pinmuxcall to pinctrl_get_pins_countcall to pinctrl_get_pin_namecall to pinctrl_get_pin_muxingcall to uclass_get_device_by_namecall to pmic_reg_countcall to failurecall to pmic_reg_writecall to pmic_reg_readcall to dev_get_uclass_namecall to pmic_getcall to errno_strcall to from_envcall to get_pxe_filecall to parse_pxefilecall to handle_pxe_menucall to destroy_pxe_menucall to get_relfilecall to pxe_menu_to_menucall to menu_get_choicecall to menu_destroycall to label_bootcall to boot_unattempted_labelscall to menu_createcall to menu_item_addcall to menu_default_setcall to parse_pxefile_topcall to label_destroycall to get_tokencall to parse_menucall to parse_integercall to parse_labelcall to parse_sliteralcall to handle_includecall to eol_or_eofcall to label_createcall to parse_label_menucall to parse_label_kernelcall to get_stringcall to get_keywordcall to label_printcall to label_localbootcall to get_relfile_envaddrcall to format_mac_pxecall to cli_simple_process_macroscall to genimg_get_kernel_addrcall to do_bootzcall to pxe_uuid_pathcall to pxe_mac_pathcall to pxe_ipaddr_pathscall to get_pxelinux_pathcall to get_bootfile_pathcall to do_fat_fsloadcall to do_ext2loadcall to do_tftpbcall to eth_env_get_enetaddr_by_indexcall to eth_get_dev_indexcall to qemu_fwcfg_presentcall to qemu_fwcfg_setup_kernelcall to qemu_fwcfg_online_cpuscall to qemu_fwcfg_list_firmwarecall to qemu_fwcfg_read_firmware_listcall to qemu_fwcfg_file_iter_endcall to qemu_fwcfg_file_iter_initcall to qemu_fwcfg_file_iter_nextcall to qemu_fwcfg_read_entrycall to curr_dev_and_platdatacall to regulator_set_enablecall to regulator_get_modecall to regulator_set_modecall to regulator_get_currentcall to regulator_set_currentcall to regulator_get_valuecall to regulator_set_valuecall to regulator_set_value_forcecall to do_status_detailcall to do_status_linecall to regulator_get_enablecall to get_mode_namecall to constraintcall to regulator_modecall to regulator_get_by_platnamecall to rproc_startcall to rproc_stopcall to rproc_resetcall to rproc_is_runningcall to rproc_pingcall to rproc_loadcall to print_remoteproc_listcall to rproc_is_initializedcall to rproc_initcall to rproc_dev_initcall to sata_removecall to sata_probecall to sata_initializecall to sata_stopcall to state_showcall to scsi_bus_resetcall to scsi_scancall to get_argcall to regex_subcall to slre_compilecall to slre_matchcall to memstrcall to substitutecall to spi_xfercall to mtd_get_of_nodecall to mtd_set_of_nodecall to spi_nor_get_protocol_data_nbitscall to spi_flash_erase_dmcall to spi_flash_write_dmcall to spi_flash_read_dmcall to do_spi_flash_probecall to do_spi_flash_read_writecall to do_spi_flash_erasecall to do_spi_protectcall to do_spi_flash_testcall to spi_flash_testcall to spi_flash_erasecall to spi_test_next_stagecall to spi_flash_readcall to spi_flash_writecall to show_timecall to str2offcall to spi_flash_protectcall to mtd_arg_offcall to sf_parse_len_argcall to mtd_arg_off_sizecall to spi_flash_updatecall to bytes_per_secondcall to spi_flash_update_blockcall to spi_find_bus_and_cscall to spi_flash_probe_bus_cscall to sound_beepcall to sound_setupcall to fit_parse_subimagecall to sourcecall to env_get_yesnocall to get_default_imagecall to fit_image_get_nodecall to fit_image_check_typecall to fit_image_verifycall to fit_image_get_datacall to do_spi_xfercall to spi_get_bus_and_cscall to spi_claim_buscall to spi_release_buscall to file_existscall to cmd_processcall to report_timecall to get_tpmcall to get_tpm1_commandscall to get_tpm2_commandscall to report_return_codecall to tpm_initcall to tpm_get_desccall to get_unaligned_be16call to get_unaligned_be32call to put_unaligned_be16call to put_unaligned_be32call to type_string_get_space_sizecall to tpm_physical_disablecall to tpm_physical_enablecall to tpm_force_clearcall to tpm_continue_self_testcall to tpm_self_test_fullcall to type_string_get_num_valuescall to type_string_alloccall to type_string_packcall to tpm_nv_write_valuecall to tpm_nv_read_valuecall to type_string_write_varscall to tpm_nv_define_spacecall to parse_byte_stringcall to tpm_xfercall to print_byte_stringcall to tpm_get_capabilitycall to tpm_physical_set_deactivatedcall to tpm_read_pubekcall to tpm_tsc_physical_presencecall to tpm_pcr_readcall to tpm_extendcall to strcasecmpcall to tpm_startupcall to tpm2_pcr_setauthvaluecall to tpm2_pcr_setauthpolicycall to tpm2_change_authcall to tpm2_dam_parameterscall to tpm2_dam_resetcall to tpm2_get_capabilitycall to tpm2_pcr_readcall to tpm2_pcr_extendcall to tpm2_clearcall to tpm2_self_testcall to tpm2_startupcall to test_timercall to test_write_limitcall to test_timingcall to test_startupcall to test_space_permcall to test_redefine_unownedcall to test_readonlycall to test_lockcall to test_global_lockcall to test_fast_enablecall to test_enablecall to test_early_nvram2call to test_early_nvramcall to test_early_extendcall to TlclStartupIfNeededcall to tpm_set_global_lockcall to tpm_get_flagscall to tpm_get_permissionscall to tpm_is_ownedcall to initialise_spacescall to tpm_nv_write_value_lockcall to tpm_nv_set_lockedcall to tpm_get_permanent_flagscall to do_usb_startcall to do_usb_stop_keyboardcall to usb_stopcall to console_assigncall to usb_show_treecall to usb_for_each_root_devcall to usb_find_devicecall to usb_display_desccall to usb_display_configcall to usb_testcall to usb_stor_infocall to dev_get_parent_privcall to usb_show_infocall to usb_initcall to usb_stor_scancall to usb_control_msgcall to usb_show_tree_graphcall to device_has_active_childrencall to device_is_last_siblingcall to usb_get_class_desccall to portspeedcall to usb_display_conf_desccall to usb_display_if_desccall to usb_display_ep_desccall to usb_display_class_subcall to usb_display_stringcall to usb_stringcall to display_options_get_bannercall to cpu_to_virtio64call to virtio_set_configcall to __virtio_cread_manycall to virtio64_to_cpucall to cpu_to_virtio32call to virtio_get_configcall to virtio32_to_cpucall to cpu_to_virtio16call to virtio16_to_cpucall to virtio_generationcall to __cpu_to_virtio64call to virtio_is_little_endiancall to __virtio64_to_cpucall to __cpu_to_virtio32call to __virtio32_to_cpucall to __cpu_to_virtio16call to __virtio16_to_cpucall to virtio_legacy_is_little_endiancall to __virtio_test_bitcall to __compiletime_assert_473call to __compiletime_assert_452call to __compiletime_assert_431call to __fswab64call to virtio_initcall to w1_buscall to w1_readcall to w1_get_buscall to device_probecall to w1_eeprom_read_bufcall to w1_get_device_familycall to fit_image_check_compcall to fit_image_get_data_and_sizecall to fit_image_get_compcall to ab_control_create_from_diskcall to ab_control_compute_crccall to ab_control_defaultcall to ab_compare_slotscall to ab_control_storecall to blk_dwritecall to malloc_cache_alignedcall to abortbootcall to bootcount_inccall to fdtdec_get_config_intcall to bootretry_init_cmd_timeoutcall to bootcount_errorcall to process_fdt_optionscall to env_set_addrcall to __abortbootcall to tee_close_sessioncall to avb_freecall to avb_calloccall to get_open_sessioncall to tee_shm_alloccall to invoke_funccall to tee_shm_freecall to get_partitioncall to tee_invoke_funccall to tee_find_devicecall to tee_optee_ta_uuid_to_octetscall to tee_open_sessioncall to mmc_byte_iocall to calc_offsetcall to get_sector_bufcall to mmc_read_and_flushcall to mmc_writecall to get_boot_devicecall to find_mmc_devicecall to mmc_initcall to mmc_switch_partcall to mmc_get_blk_desccall to is_buf_unalignedcall to get_sector_buf_sizecall to avb_set_enforce_optioncall to strtokcall to avb_find_dm_argscall to avb_strdupvcall to u_boot_first_phasecall to bloblist_checkcall to bloblist_newcall to bloblist_calc_chksumcall to bloblist_first_blobcall to bloblist_next_blobcall to bloblist_ensurereccall to bloblist_addreccall to bloblist_findreccall to initcall_run_listcall to hangcall to bootstage_startcall to dm_init_and_scancall to bootstage_accumcall to dm_timer_initcall to console_record_initcall to bootstage_initcall to bootstage_get_sizecall to arch_reserve_stackscall to video_reservecall to get_effective_memsizecall to board_get_usable_ram_topcall to board_add_ram_infocall to sysreset_get_statuscall to checkboardcall to dev_read_u32_defaultcall to wdt_startcall to sandbox_main_loop_initcall to main_loopcall to eth_initializecall to scsi_initcall to jumptable_initcall to should_load_envcall to env_relocatecall to mmc_initializecall to of_live_buildcall to mem_malloc_initcall to serial_initializecall to efi_save_gdcall to efi_runtime_relocatecall to cpu_secondary_init_rcall to genimg_get_kernel_addr_fitcall to fit_image_loadcall to android_image_get_kernelcall to bootm_startcall to bootm_find_oscall to bootm_find_othercall to bootm_load_oscall to boot_fdt_add_mem_rsv_regionscall to boot_relocate_fdtcall to bootm_os_get_boot_funccall to enable_interruptscall to genimg_get_os_namecall to fixup_silent_linuxcall to boot_selected_oscall to do_resetcall to disable_interruptscall to eth_haltcall to image_decompcall to handle_decomp_errorcall to image_get_typecall to genimg_get_comp_namecall to boot_get_ramdiskcall to boot_get_fdtcall to boot_get_loadablecall to boot_get_kernelcall to fit_image_get_typecall to fit_image_get_oscall to fit_image_get_archcall to fit_get_endcall to fit_image_get_loadcall to android_image_get_kcompcall to android_image_get_endcall to android_image_get_kloadcall to boot_get_setupcall to image_get_epcall to fit_image_get_entrycall to booti_setupcall to boot_start_lmbcall to env_get_bootm_lowcall to env_get_bootm_sizecall to lmb_init_and_reserve_rangecall to optee_image_get_entry_pointcall to arch_preboot_oscall to board_preboot_oscall to copy_argscall to image_check_typecall to image_multi_getimgcall to bootstage_add_recordcall to append_datacall to get_record_namecall to print_time_recordcall to qsortcall to add_bootstages_devicetreecall to fdt_setprop_cellcall to print_grouped_ullcall to ensure_idcall to timer_get_boot_uscall to find_idcall to show_boot_progresscall to u_boot_hush_startcall to parse_file_outercall to disable_ctrlccall to find_cmdcall to fdtdec_get_config_stringcall to parse_string_outercall to get_local_varcall to insert_var_value_subcall to xrealloccall to xmalloccall to insert_var_valuecall to lookup_paramcall to setup_file_in_strcall to parse_stream_outercall to setup_string_in_strcall to initialize_contextcall to update_ifs_mapcall to mapsetcall to parse_streamcall to syntax_errcall to done_wordcall to done_pipecall to run_listcall to b_freecall to b_resetcall to free_pipe_listcall to debug_printfcall to b_addqchrcall to handle_dollarcall to b_addchrcall to set_local_varcall to done_commandcall to new_pipecall to reserved_wordcall to get_dollar_varcall to run_list_realcall to indentercall to free_pipecall to had_ctrlccall to make_list_incall to run_pipe_realcall to is_assignmentcall to make_stringcall to get_user_inputcall to uboot_cli_readlinecall to clear_ctrlccall to b_check_spacecall to hist_initcall to cread_linecall to bootretry_tstc_timeoutcall to delete_charcall to cmd_auto_completecall to cread_add_strcall to get_tickscall to get_tbclkcall to hist_prevcall to hist_nextcall to cread_add_charcall to cread_add_to_histcall to strlcpycall to run_command_repeatablecall to cli_simple_parse_linecall to cmd_callcall to make_argvcall to dollar_completecall to complete_cmdvcall to find_common_prefixcall to print_argvcall to complete_subcmdvcall to env_completecall to search_devicecall to iomux_doenvcall to console_doenvcall to stdio_print_current_devicescall to print_pre_console_buffercall to console_update_silentcall to console_setfilecall to stdio_get_by_namecall to console_record_resetcall to membuff_purgecall to membuff_newcall to os_putscall to printchcall to membuff_putcall to pre_console_putscall to fputscall to serial_putscall to membuff_putbytecall to pre_console_putccall to fputccall to serial_putccall to console_puts_noserialcall to membuff_peekbytecall to ftstccall to serial_tstccall to membuff_getbytecall to fgetccall to serial_getccall to vscnprintfcall to console_putscall to console_putccall to console_tstccall to console_getccall to console_dev_is_serialcall to malloc_update_mallinfocall to do_check_free_chunkcall to do_check_inuse_chunkcall to sbrkcall to do_check_chunkcall to memalign_simplecall to malloc_trimcall to malloc_simplecall to do_check_malloced_chunkcall to malloc_extend_topcall to malloc_bin_reloccall to edid_get_manufacturer_namecall to edid_print_dtdcall to snipcall to edid_get_timing_validatecall to decode_timingcall to cea_is_hdmi_vsdb_presentcall to set_entrycall to fdt_overlay_applycall to fdt_subnode_offsetcall to fdt_get_phandlecall to fdt_first_subnodecall to fdt_next_subnodecall to fdt_support_default_count_cellscall to fdt_parent_offsetcall to fdt_set_namecall to fdt_getprop_u32_default_nodecall to fdt_read_propcall to fdt_translate_addresscall to fdt_set_node_statuscall to fdt_alloc_phandlecall to fdt_set_phandlecall to __of_translate_addresscall to of_match_buscall to of_dump_addrcall to fdt_read_numbercall to of_translate_onecall to fdt_address_cellscall to __be32_to_cpupcall to fdt_getprop_u32_defaultcall to fdt_find_or_add_subnodecall to fdt_first_property_offsetcall to fdt_next_property_offsetcall to fdt_getprop_by_offsetcall to trailing_strtolcall to do_fixup_by_pathcall to fdt_fixup_memory_bankscall to fdt_pack_regcall to fdt_size_cellscall to do_fixup_by_compatcall to fdt_get_propertycall to do_fixup_by_propcall to fdt_node_offset_by_prop_valuecall to fdt_find_and_setpropcall to fdt_fixup_stdoutcall to fdt_setprop_uxxcall to fdt_setprop_u64call to hash_lookup_algocall to parse_verify_sumcall to hash_showcall to crc32_wdcall to hash_parse_stringcall to crc16_ccittcall to sha256_finishcall to sha256_updatecall to sha256_startscall to sha1_finishcall to sha1_updatecall to sha1_startscall to fit_image_check_archcall to image_check_archcall to image_get_oscall to image_get_archcall to image_get_magiccall to image_get_namecall to image_get_image_sizecall to image_get_sizecall to image_get_header_sizecall to image_get_compcall to android_image_get_kernel_addrcall to image_get_datacall to image_get_data_sizecall to fdt_rootcall to arch_fixup_fdtcall to fdt_fixup_ethernetcall to ft_board_setupcall to ft_system_setupcall to lmb_freecall to ft_verify_fdtcall to genimg_has_configcall to fit_parse_confcall to fit_get_node_from_configcall to boot_get_fdt_fitcall to fdt_errorcall to android_image_get_secondcall to lmb_alloc_basecall to lmb_alloccall to env_get_bootm_mapsizecall to boot_fdt_reserve_regioncall to fdt_get_resourcecall to fit_conf_get_prop_node_countcall to fit_conf_get_prop_node_indexcall to fit_get_namecall to fit_get_image_type_propertycall to fit_conf_find_compatcall to fit_conf_get_prop_nodecall to fit_image_selectcall to fit_image_check_oscall to genimg_get_arch_namecall to genimg_get_type_namecall to fit_image_printcall to fdt_stringlist_getcall to fdt_stringlist_countcall to fit_get_debugcall to fdt_node_check_compatiblecall to fit_image_verify_with_datacall to fit_image_verify_required_sigscall to fit_image_check_hashcall to fit_image_check_sigcall to fit_image_hash_get_algocall to fit_image_hash_get_ignorecall to fit_image_hash_get_valuecall to calculate_hashcall to sha1_csum_wdcall to sha256_csum_wdcall to fit_image_get_data_positioncall to fit_image_get_data_offsetcall to fit_image_get_data_sizecall to fit_image_get_addresscall to genimg_get_comp_idcall to genimg_get_type_idcall to genimg_get_arch_idcall to genimg_get_os_idcall to fit_get_desccall to fit_get_timestampcall to genimg_print_timecall to genimg_print_sizecall to fit_image_print_verification_datacall to fit_conf_printcall to fit_image_print_datacall to fit_parse_speccall to fit_config_verify_required_sigscall to fit_config_verify_sigcall to fit_config_check_sigcall to fit_image_setup_verifycall to fdt_find_regionscall to fit_region_make_listcall to fit_image_verify_sigcall to image_get_checksum_algocall to image_get_crypto_algocall to image_get_padding_algocall to boot_get_cmdlinecall to fit_loadable_processcall to boot_get_setup_fitcall to android_image_get_ramdiskcall to android_image_check_headercall to get_table_entry_idcall to genimg_get_short_namecall to get_table_entry_namecall to get_table_entrycall to unknown_msgcall to rtc_to_tmcall to print_decomp_msgcall to memmove_wdcall to BZ2_bzBuffToBuffDecompresscall to lzop_decompresscall to ulz4fncall to image_get_timecall to image_print_typecall to image_get_loadcall to image_multi_countcall to image_get_dcrccall to image_set_hcrccall to image_get_hcrccall to arch_setup_gdcall to add_recordcall to timer_get_uscall to log_device_find_by_namecall to vsnprintfcall to log_dispatchcall to log_passes_filterscall to log_has_catcall to log_has_filecall to strchrnulcall to uclass_get_namecall to log_get_level_namecall to log_get_cat_namecall to run_preboot_environment_commandcall to update_tftpcall to bootdelay_processcall to cli_process_fdtcall to cli_secure_boot_cmdcall to autoboot_commandcall to cli_loopcall to rand_rcall to is_multicast_ethaddrcall to is_zero_ethaddrcall to eth_sendcall to alloc_simplecall to menu_items_itercall to menu_item_by_keycall to menu_default_choicecall to menu_interactive_choicecall to menu_displaycall to menu_display_statuslinecall to miiphy_get_active_devcall to mdio_registercall to hex1_bincall to hex2_bincall to splash_source_loadcall to stdio_init_tablescall to stdio_add_devicescall to drv_system_initcall to serial_stdio_initcall to drv_nc_initcall to stdio_deregister_devcall to stdio_register_devcall to stdio_clonecall to stdio_probe_devicecall to trailing_strtolncall to stdio_registercall to usb_prepare_devicecall to usb_select_configcall to get_descriptor_lencall to mdelaycall to usb_get_configuration_lencall to usb_get_configuration_nocall to usb_parse_configcall to usb_set_maxpacketcall to usb_set_configurationcall to usb_alloc_devicecall to usb_setup_descriptorcall to usb_hub_port_resetcall to usb_set_addresscall to usb_get_descriptorcall to usb_reset_root_portcall to usb_string_subcall to usb_get_stringcall to usb_try_string_workaroundscall to put_unaligned_le16call to put_unaligned_le32call to put_unaligned_le64call to usb_set_maxpacket_epcall to submit_bulk_msgcall to submit_control_msgcall to submit_int_msgcall to usb_hub_scancall to usb_hub_configurecall to usb_hub_checkcall to usb_get_hub_devicecall to usb_get_hub_descriptorcall to usb_set_interfacecall to usb_get_hub_statuscall to usb_update_hub_devicecall to usb_hub_is_root_hubcall to usb_hub_is_superspeedcall to usb_set_hub_depthcall to usb_hub_power_oncall to usb_hub_reset_devicescall to usb_device_list_scancall to usb_scan_portcall to usb_get_port_statuscall to usb_clear_port_featurecall to usb_hub_port_connect_changecall to usb_device_has_child_on_portcall to usb_set_port_featurecall to usb_scan_devicecall to state_get_skip_delayscall to probe_usb_keyboardcall to usb_kbd_probe_devcall to usb_maxpacketcall to usb_set_protocolcall to usb_set_idlecall to usb_submit_int_msgcall to usb_kbd_poll_for_eventcall to usb_kbd_irq_workercall to usb_kbd_service_keycall to usb_kbd_translatecall to usb_kbd_setledcall to memscancall to usb_kbd_put_sequencecall to usb_kbd_put_queuecall to usb_disable_asynchcall to usb_stor_probe_devicecall to usb_inquirycall to usb_test_unit_readycall to usb_read_capacitycall to usb_stor_set_max_xfer_blkcall to dev_get_parentcall to usb_show_progresscall to usb_write_10call to usb_request_sensecall to usb_read_10call to usb_get_max_xfer_sizecall to usb_stor_CB_comdatcall to usb_stor_CBI_get_statuscall to usb_stor_BBB_comdatcall to usb_stor_BBB_resetcall to usb_bulk_msgcall to usb_stor_BBB_clear_endpt_stallcall to usb_clear_haltcall to us_one_transfercall to usb_storage_probecall to usb_get_max_luncall to blk_create_devicefcall to usb_stor_get_infocall to dev_printcall to blk_first_devicecall to blk_next_devicecall to CYGACC_COMM_IF_PUTCcall to xyzModem_flushcall to xyzModem_get_hdrcall to parse_numcall to CYGACC_COMM_IF_GETC_TIMEOUTcall to _tolowercall to _is_hexcall to _from_hexcall to part_get_info_by_dev_and_namecall to part_get_info_by_name_typecall to part_driver_lookup_typecall to part_get_info_whole_diskcall to get_dev_hwpartcall to part_initcall to print_part_headercall to blkcache_invalidatecall to lba512_muldivcall to blk_get_devnum_by_typenamecall to blk_dselect_hwpartcall to get_rdiskcall to sum_blockcall to print_part_infocall to get_bootcodecall to find_partitioncall to bcpl_strcpycall to bstr_printcall to print_disk_typecall to is_valid_dos_bufcall to test_block_typecall to part_get_info_extendedcall to print_partition_extendedcall to le32_to_intcall to is_extendedcall to part_set_generic_namecall to is_bootablecall to print_one_partcall to validate_gpt_headercall to alloc_read_gpt_entriescall to validate_gpt_entriescall to pmbr_part_validcall to is_valid_gpt_bufcall to prepare_backup_gpt_headercall to gpt_convert_efi_name_to_charcall to is_gpt_validcall to gpt_fill_headercall to gpt_fill_ptecall to write_gpt_tablecall to partition_entries_offsetcall to uuid_str_to_bincall to set_protective_mbrcall to efi_crc32call to is_pmbr_validcall to is_pte_validcall to print_efinamecall to uuid_bin_to_strcall to part_get_info_iso_verbcall to iso_dreadcall to part_mac_read_ddbcall to part_mac_read_pdbcall to ldivcall to adc_vdd_platdata_setcall to adc_vss_platdata_setcall to dev_read_boolcall to device_get_supply_regulatorcall to adc_vss_platdata_updatecall to adc_vdd_platdata_updatecall to adc_vdd_valuecall to adc_vss_valuecall to adc_data_maskcall to adc_start_channelscall to adc_channels_datacall to _adc_channels_single_shotcall to adc_start_channelcall to adc_channel_datacall to dev_get_driver_opscall to check_channelcall to adc_supply_enablecall to reset_satacall to init_satacall to scan_satacall to dev_read_u32_arraycall to axi_sandbox_get_emulcall to copy_axi_datacall to blk_create_devicecall to device_set_name_allocedcall to blk_next_free_devnumcall to blk_claim_devnumcall to device_bind_drivercall to blk_find_max_devnumcall to blkcache_readcall to blkcache_fillcall to blk_find_devicecall to blk_select_hwpartcall to get_desccall to if_typename_to_iftypecall to if_type_to_uclass_idcall to cache_findcall to ide_outbcall to ide_waitcall to ide_output_datacall to ide_inbcall to ide_input_datacall to _inswcall to _outswcall to ide_identcall to ide_input_swap_datacall to ident_cpycall to strswabcall to ofnode_get_chosen_nodecall to uclass_get_device_by_ofnodecall to dm_bootcount_getcall to dm_bootcount_setcall to dev_read_phandle_with_argscall to rtc_read16call to rtc_write16call to _register_dividercall to ERR_CASTcall to clk_registercall to kfreecall to dev_get_clk_ptrcall to divider_recalc_ratecall to clk_get_parent_ratecall to _get_divcall to clk_hw_get_namecall to _get_table_divcall to clk_hw_register_fixed_factorcall to clk_register_mux_tablecall to clk_hw_register_mux_tablecall to generic_ffscall to clk_mux_get_parentcall to clk_mux_val_to_indexcall to clk_disablecall to clk_dev_opscall to clk_enablecall to clk_get_parentcall to clk_get_ratecall to clk_freecall to dev_read_stringlist_searchcall to clk_get_by_indexcall to dev_read_namecall to clk_set_default_parentscall to clk_set_default_ratescall to dev_read_sizecall to clk_get_by_indexed_propcall to clk_set_ratecall to dev_count_phandle_with_argscall to clk_set_parentcall to devm_kcalloccall to clk_release_allcall to ofnode_parse_phandle_with_argscall to clk_get_by_index_tailcall to clk_of_xlate_defaultcall to clk_requestcall to device_bindcall to clk_register_muxcall to sandbox_clk_register_gate2call to clk_register_dividercall to clk_register_fixed_factorcall to clk_dmcall to sandbox_clk_pllv3call to sandbox_clk_fixed_factorcall to sandbox_clk_dividercall to sandbox_clk_gate2call to sandbox_clk_muxcall to clk_validcall to clk_release_bulkcall to clk_disable_bulkcall to clk_enable_bulkcall to clk_get_bulkcall to clk_get_by_namecall to clk_register_gate2call to uclass_pre_remove_devicecall to flags_removecall to dm_warncall to device_freecall to uclass_post_probe_devicecall to devres_release_probecall to uclass_unbind_devicecall to devres_release_allcall to of_property_read_string_helpercall to of_find_node_opts_by_pathcall to device_find_by_ofnodecall to ofnode_set_enabledcall to lists_bind_fdtcall to uclass_find_device_by_ofnodecall to ofnode_device_is_compatiblecall to list_is_lastcall to _device_find_global_by_ofnodecall to device_get_device_tailcall to ofnode_equalcall to device_find_child_by_of_offsetcall to dev_of_offsetcall to device_find_child_by_seqcall to alloc_privcall to uclass_resolve_seqcall to pinctrl_select_statecall to power_domain_getcall to power_domain_oncall to uclass_pre_probe_devicecall to dev_has_of_nodecall to dev_of_validcall to clk_set_defaultscall to flush_dcache_rangecall to device_bind_commoncall to dev_read_alias_seqcall to uclass_find_next_free_req_seqcall to uclass_bind_devicecall to devres_destroycall to __devres_alloccall to devres_addcall to dm_rootcall to dump_resourcescall to release_nodescall to devres_logcall to devres_removecall to devres_freecall to devres_findcall to list_del_initcall to set_node_dbginfocall to dm_display_linecall to show_devicescall to dev_get_uclass_indexcall to devfdt_get_addrcall to devfdt_remap_addr_indexcall to devfdt_get_addr_namecall to devfdt_get_addr_indexcall to fdt_stringlist_searchcall to fdtdec_get_addr_size_auto_noparentcall to fdtdec_get_addr_size_auto_parentcall to simple_bus_translatecall to ofnode_get_propertycall to driver_check_compatiblecall to dm_ofnode_pre_reloccall to device_bind_driver_to_nodecall to device_bind_by_namecall to __check_regioncall to of_find_node_by_pathcall to of_get_propertycall to of_alias_addcall to of_node_full_namecall to __of_parse_phandle_with_argscall to of_find_node_by_phandlecall to of_read_u32call to of_node_putcall to of_find_propertycall to of_find_property_value_of_sizecall to PTR_ERRcall to __be64_to_cpupcall to of_find_all_nodescall to of_device_has_prop_valuecall to of_device_is_compatiblecall to __of_find_node_by_pathcall to strcspncall to __of_get_next_childcall to of_prop_next_stringcall to of_get_addresscall to of_property_read_string_indexcall to __of_address_to_resourcecall to of_translate_addresscall to of_get_parentcall to of_empty_ranges_quirkcall to dev_count_cellscall to of_bus_default_count_cellscall to of_n_addr_cellscall to of_n_size_cellscall to ofnode_read_stringcall to ofnode_decode_regioncall to ofnode_read_s32_defaultcall to ofnode_write_stringcall to ofnode_write_propcall to np_to_ofnodecall to of_find_node_by_prop_valuecall to of_find_compatible_nodecall to ofnode_is_npcall to of_translate_dma_addresscall to fdt_translate_dma_addresscall to ofnode_stringlist_searchcall to ofnode_read_resourcecall to of_address_to_resourcecall to ofnode_read_boolcall to of_simple_size_cellscall to of_simple_addr_cellscall to fdtdec_locate_byte_arraycall to fdtdec_get_addr_sizecall to of_device_is_availablecall to fdtdec_get_is_enabledcall to ofnode_find_subnodecall to ofnode_first_subnodecall to ofnode_next_subnodecall to decode_timing_propertycall to ofnode_read_u32_defaultcall to ofnode_read_sizecall to ofnode_read_u32_arraycall to ofnode_get_chosen_propcall to of_count_phandle_with_argscall to fdtdec_parse_phandle_with_argscall to of_parse_phandle_with_argscall to ofnode_from_of_phandle_argscall to ofnode_from_fdtdec_phandle_argscall to of_property_count_stringscall to of_property_match_stringcall to ofnode_get_addr_indexcall to ofnode_get_addr_size_indexcall to ofnode_read_simple_addr_cellscall to ofnode_read_simple_size_cellscall to fdtdec_get_addr_size_fixedcall to fdt_node_offset_by_phandlecall to of_read_u32_arraycall to fdtdec_get_int_arraycall to ofnode_read_u64call to of_read_u64call to of_alias_get_highest_idcall to fdtdec_get_alias_highest_idcall to ofnode_translate_dma_addresscall to ofnode_translate_addresscall to ofnode_read_resource_bynamecall to ofnode_read_u8_array_ptrcall to of_alias_get_idcall to fdtdec_get_alias_seqcall to ofnode_read_size_cellscall to ofnode_read_addr_cellscall to ofnode_count_phandle_with_argscall to ofnode_read_string_countcall to ofnode_read_string_indexcall to ofnode_get_addr_sizecall to dev_remap_addr_indexcall to dev_read_addrcall to dev_read_addr_indexcall to dev_read_addr_namecall to regmap_readcall to regmap_writecall to regmap_raw_writecall to regmap_raw_write_rangecall to __write_8call to __write_16call to __write_32call to iotrace_writewcall to iotrace_writebcall to regmap_raw_readcall to regmap_raw_read_rangecall to __read_8call to __read_16call to __read_32call to iotrace_readwcall to iotrace_readbcall to regmap_alloccall to init_rangecall to dm_initcall to dm_scan_platdatacall to dm_extended_scan_fdtcall to dm_scan_othercall to dm_scan_fdtcall to dm_scan_fdt_ofnode_pathcall to dm_scan_fdt_livecall to dm_scan_fdt_nodecall to dev_npcall to lists_bind_driverscall to dm_scan_fdt_devcall to syscon_probe_by_ofnodecall to syscon_get_regmapcall to syscon_get_regmap_by_driver_datacall to regmap_get_rangecall to syscon_get_by_driver_datacall to uclass_get_device_by_phandlecall to ofnode_get_by_phandlecall to regmap_init_memcall to uclass_find_device_by_seqcall to uclass_get_device_tailcall to uclass_find_device_by_phandlecall to dev_read_phandlecall to uclass_find_device_by_of_offsetcall to uclass_find_device_by_namecall to lists_uclass_lookupcall to uclass_findcall to uclass_addcall to vprintfcall to rsa_mod_exp_swcall to gpio_free_listcall to gpio_request_list_by_namecall to demo_parse_dtcall to fdtdec_get_intcall to dm_gpio_get_valuecall to dm_gpio_set_valuecall to dma_get_devicecall to invalidate_dcache_rangecall to dma_dev_opscall to dma_get_by_indexcall to dma_of_xlate_defaultcall to dma_requestcall to fastboot_set_reboot_flagcall to fastboot_failcall to fastboot_okaycall to fastboot_responsecall to fastboot_getvarcall to fastboot_set_progress_callbackcall to dev_read_first_subnodecall to gpio_request_tailcall to gpio_renumbercall to dm_gpio_freecall to _dm_gpio_freecall to gpio_request_list_by_name_nodevcall to _gpio_request_by_name_nodevcall to gpio_free_list_nodevcall to gpio_find_and_xlatecall to dm_gpio_requestfcall to dm_gpio_set_dir_flagscall to gpio_requestfcall to __compiletime_assert_670call to gpio_get_raw_functioncall to get_functioncall to __compiletime_assert_628call to gpio_to_devicecall to check_reservedcall to dm_gpio_is_validcall to dm_gpio_requestcall to gpio_xlate_offs_flagscall to dm_gpio_lookup_namecall to dev_read_stringcall to pmic_clrsetbitscall to pm8916_gpio_set_directioncall to get_gpio_flagcall to sandbox_gpio_get_directioncall to sandbox_gpio_set_open_draincall to sandbox_gpio_get_open_draincall to sandbox_gpio_set_valuecall to sandbox_gpio_get_valuecall to sandbox_gpio_set_directioncall to set_gpio_flagcall to get_gpio_flagscall to hwspinlock_dev_opscall to hwspinlock_of_xlate_defaultcall to fdtdec_get_uintcall to cros_ec_i2c_tunnelcall to i2c_gpio_send_resetcall to i2c_gpio_send_startcall to i2c_gpio_write_bytecall to i2c_gpio_send_stopcall to i2c_gpio_read_datacall to i2c_gpio_write_datacall to i2c_gpio_read_bytecall to i2c_send_slave_addrcall to i2c_gpio_sda_highcall to i2c_gpio_read_bitcall to i2c_gpio_send_ackcall to i2c_gpio_write_bitcall to i2c_gpio_scl_setcall to i2c_gpio_sda_setcall to i2c_gpio_sda_getcall to dev_read_alias_highest_idcall to i2c_chip_ofdata_to_platdatacall to i2c_deblock_gpiocall to i2c_deblock_gpio_loopcall to i2c_gpio_set_pincall to i2c_gpio_get_pincall to i2c_probe_chipcall to i2c_bind_drivercall to i2c_write_bytewisecall to i2c_setup_offsetcall to i2c_read_bytewisecall to gpio_request_by_namecall to i2c_mux_selectcall to i2c_mux_deselectcall to get_emulcall to i2c_emul_findcall to cros_ec_keyb_decode_fdtcall to input_set_delayscall to key_matrix_initcall to key_matrix_decode_fdtcall to input_add_tablescall to input_stdio_registercall to cros_ec_interrupt_pendingcall to check_for_keyscall to key_matrix_decodecall to input_send_keycodescall to cros_ec_scan_keyboardcall to fdtdec_get_boolcall to input_allow_repeatscall to i8042_disablecall to i8042_flushcall to kbd_controller_presentcall to kbd_resetcall to i8042_kbd_update_ledscall to input_add_keycodecall to kbd_input_emptycall to kbd_cmd_readcall to kbd_writecall to kbd_readcall to kbd_cmd_writecall to kbd_output_fullcall to input_add_tablecall to _input_send_keycodescall to input_check_keycodescall to input_keycodes_to_asciicall to input_queue_asciicall to process_modifiercall to input_keycode_to_ansi364call to sort_array_by_orderingcall to array_searchcall to dev_read_propcall to create_keymapcall to has_ghostingcall to input_initcall to input_getccall to input_tstccall to mbox_dev_opscall to mbox_get_by_indexcall to mbox_of_xlate_defaultcall to mbox_freecall to mbox_recvcall to mbox_sendcall to mbox_get_by_namecall to cros_ec_get_event_maskcall to cros_ec_set_event_maskcall to ec_commandcall to cros_ec_clear_maskcall to cros_ec_get_maskcall to cros_ec_is_uhepi_supportedcall to cros_ec_uhepi_cmdcall to cros_ec_handle_non_uhepi_cmdcall to cros_ec_check_featurecall to dev_read_subnodecall to ofnode_read_fmap_entrycall to cros_ec_check_versioncall to ec_command_inptrcall to cros_ec_invalidate_hashcall to cros_ec_flash_read_blockcall to cros_ec_flash_write_burst_sizecall to cros_ec_data_is_erasedcall to cros_ec_flash_write_blockcall to cros_ec_wait_on_hash_donecall to send_commandcall to send_command_proto3call to create_proto3_requestcall to prepare_proto3_response_buffercall to handle_proto3_responsecall to cros_ec_dump_datacall to cros_ec_calc_checksumcall to cros_ec_registercall to dm_i2c_xfercall to wait_for_synccall to cros_ec_decode_ec_flashcall to keyscan_read_fdt_matrixcall to sandbox_sdl_key_pressedcall to process_cmdcall to get_image_usedcall to hash_blockcall to cros_ec_keyscancall to state_setpropcall to dev_read_u32call to dev_get_driver_datacall to qemu_fwcfg_read_entry_piocall to qemu_fwcfg_read_entry_dmacall to sandbox_swap_case_do_opcall to sandbox_swap_case_use_eacall to sandbox_swap_case_find_barcall to __touppercall to sandbox_swap_case_read_eacall to mmc_get_mmc_devcall to mmc_start_initcall to dm_mmc_get_cdcall to dm_mmc_get_wpcall to dm_mmc_wait_dat0call to dm_mmc_set_ioscall to dm_mmc_send_cmdcall to mmmc_trace_before_sendcall to mmmc_trace_after_sendcall to mmc_probecall to print_mmc_devicescall to mmc_do_preinitcall to mmc_complete_initcall to mmc_complete_op_condcall to mmc_startupcall to mmc_getcdcall to mmc_get_op_condcall to mmc_power_initcall to mmc_power_cyclecall to supports_uhscall to mmc_power_oncall to mmc_set_initial_statecall to mmc_go_idlecall to mmc_send_if_condcall to sd_send_op_condcall to mmc_send_op_condcall to mmc_power_offcall to mmc_set_clockcall to mmc_set_signal_voltagecall to mmc_select_modecall to mmc_set_bus_widthcall to mmc_send_cmdcall to mmc_startup_v4call to mmc_set_capacitycall to sd_get_capabilitiescall to sd_select_mode_and_widthcall to mmc_get_capabilitiescall to mmc_select_mode_and_widthcall to mmc_send_ext_csdcall to mmc_switchcall to mmc_is_mode_ddrcall to mmc_mode_namecall to bus_widthcall to mmc_mode2freqcall to mmc_set_lowest_voltagecall to mmc_select_hs400call to mmc_select_hs400escall to mmc_set_card_speedcall to mmc_read_and_compare_ext_csdcall to sd_select_bus_widthcall to sd_set_card_speedcall to sd_read_ssrcall to mmc_set_ioscall to sd_switchcall to __mmc_switchcall to mmc_wait_dat0call to mmc_send_statuscall to mmc_send_op_cond_itercall to mmc_set_blocklencall to mmc_read_blockscall to mmc_trace_statecall to mul_u32_u32call to div_s64_remcall to div_u64_remcall to blk_select_hwpart_devnumcall to mmc_write_blockscall to mmc_poll_for_busycall to mmc_erase_tcall to mmc_unbindcall to mmc_bindcall to get_partcall to mtd_probe_uclass_mtd_devscall to get_mtdidscall to ubi_leb_read_sgcall to ubi_leb_readcall to ubi_io_writecall to ubi_io_readcall to rb_erasecall to mtd_ooblayout_count_bytescall to mtd_ooblayout_set_bytescall to mtd_ooblayout_get_bytescall to mtd_ooblayout_find_regioncall to mtd_check_oob_opscall to mtd_oobavailcall to mtd_div_by_wscall to mtd_erase_callbackcall to __put_mtd_devicecall to __mtd_next_devicecall to __get_mtd_devicecall to idr_findcall to del_mtd_partitionscall to idr_removecall to idr_alloccall to mtd_unlockcall to idr_get_nextcall to spi_chip_selectcall to sandbox_sf_bind_emulcall to device_bind_ofnodecall to sandbox_sf_state_namecall to sandbox_sf_cs_activatecall to sandbox_sf_process_cmdcall to sandbox_spi_tristatecall to sandbox_erase_partcall to sandbox_sf_cs_deactivatecall to sandbox_spi_get_emulcall to spi_flash_probe_slavecall to spi_flash_cmd_get_sw_write_protcall to spi_nor_scancall to read_srcall to spi_nor_read_idcall to IS_ERR_OR_NULLcall to spi_nor_init_paramscall to spi_nor_setupcall to spi_nor_set_4byte_opcodescall to spi_nor_initcall to write_enablecall to write_srcall to spi_nor_wait_till_readycall to set_4bytecall to spi_nor_select_readcall to spi_nor_select_ppcall to spi_nor_select_erasecall to spi_nor_get_protocol_widthcall to spi_nor_hwcaps_pp2cmdcall to spi_nor_hwcaps_read2cmdcall to spi_nor_hwcaps2cmdcall to spi_nor_set_read_settingscall to spi_nor_set_pp_settingscall to spi_nor_parse_sfdpcall to read_crcall to write_sr_crcall to generic_hweight32call to mtd_to_spi_norcall to sst_write_byteprogramcall to write_disablecall to stm_is_locked_srcall to stm_is_unlocked_srcall to __order_base_2call to write_sr_and_checkcall to stm_check_lock_status_srcall to stm_get_locked_rangecall to spi_nor_erase_sectorcall to spi_mem_exec_opcall to spi_nor_wait_till_ready_with_timeoutcall to spi_nor_readycall to spi_nor_sr_readycall to spi_nor_fsr_readycall to read_fsrcall to spi_nor_convert_3to4_readcall to spi_nor_convert_3to4_programcall to spi_nor_convert_3to4_erasecall to spi_nor_convert_opcodecall to spi_nor_get_protocol_inst_nbitscall to spi_nor_get_protocol_addr_nbitscall to spi_mem_adjust_op_sizecall to spi_nor_read_write_regcall to mdio_mux_sandbox_mark_selectioncall to eth_get_devcall to eth_is_activecall to nc_send_packetcall to refresh_settings_from_envcall to net_initcall to eth_is_on_demand_initcall to eth_initcall to eth_set_last_protocolcall to eth_init_state_onlycall to net_eth_hdr_sizecall to net_send_udp_packetcall to eth_halt_state_onlycall to is_broadcastcall to net_set_udp_handlercall to net_set_timeout_handlercall to net_set_arp_handlercall to get_env_idcall to net_set_statecall to board_phy_configcall to phy_find_by_maskcall to phy_connect_devcall to phy_resetcall to get_phy_device_by_maskcall to get_phy_devicecall to search_for_existing_phycall to create_phy_by_maskcall to get_phy_idcall to phy_device_createcall to get_phy_drivercall to phy_probecall to generic_for_interfacecall to genphy_update_linkcall to genphy_parse_linkcall to genphy_config_anegcall to genphy_setup_forcedcall to genphy_config_advertcall to genphy_restart_anegcall to sandbox_eth_raw_if_nameindexcall to sandbox_eth_raw_os_is_localcall to sandbox_eth_raw_if_freenameindexcall to sandbox_eth_raw_os_idx_to_namecall to net_random_ethaddrcall to sandbox_eth_raw_os_stopcall to net_write_ipcall to sandbox_eth_raw_os_recvcall to net_read_ipcall to sandbox_eth_raw_os_sendcall to sandbox_eth_raw_os_startcall to dev_read_u8_array_ptrcall to timer_test_add_offsetcall to sandbox_eth_arp_req_to_replycall to sandbox_eth_ping_req_to_replycall to compute_ip_checksumcall to net_copy_ipcall to dm_pci_map_barcall to nvme_readqcall to nvme_configure_admin_queuecall to nvme_setup_io_queuescall to nvme_get_info_from_identifycall to device_set_namecall to nvme_blk_rwcall to nvme_setup_prpscall to nvme_submit_sync_cmdcall to nvme_identifycall to nvme_set_queue_countcall to nvme_free_queuescall to nvme_create_io_queuescall to nvme_alloc_queuecall to nvme_create_queuecall to nvme_set_featurescall to nvme_alloc_cqcall to nvme_alloc_sqcall to nvme_init_queuecall to nvme_delete_sqcall to nvme_delete_cqcall to nvme_submit_admin_cmdcall to nvme_disable_ctrlcall to nvme_writeqcall to nvme_enable_ctrlcall to nvme_free_queuecall to nvme_wait_readycall to nvme_delete_queuecall to nvme_get_cmd_idcall to nvme_submit_cmdcall to nvme_read_completion_statuscall to print_optional_admin_cmdcall to print_optional_nvm_cmdcall to print_format_nvme_attributescall to print_formatscall to print_data_protect_capcall to print_metadata_capcall to print_formatcall to dm_pci_write_config8call to sandbox_set_enable_pci_mapcall to pci_bus_find_devfncall to uclass_first_device_checkcall to uclass_next_device_checkcall to dm_pci_find_capabilitycall to dm_pci_clrset_config16call to dm_pci_find_next_ext_capabilitycall to dm_pci_read_config16call to _dm_pci_find_next_capabilitycall to dm_pci_map_ea_barcall to dm_pci_bus_to_physcall to _dm_pci_phys_to_buscall to pci_get_controllercall to _dm_pci_bus_to_physcall to skip_to_next_devicecall to pci_bus_write_configcall to pci_bus_read_configcall to ofnode_read_pci_vendevcall to pci_get_devfncall to ofnode_read_pci_addrcall to pci_bind_bus_devicescall to pci_auto_config_devicescall to device_is_on_pci_buscall to decode_regionscall to fdtdec_get_numbercall to pci_set_regioncall to pci_find_and_bind_drivercall to pci_dev_find_ofnodecall to pci_match_one_idcall to pci_get_bus_maxcall to dm_pciauto_prescan_setup_bridgecall to dm_pciauto_postscan_setup_bridgecall to pciauto_config_initcall to dm_pciauto_config_devicecall to set_vga_bridge_bitscall to dm_pci_write_config16call to pci_read_configcall to dm_pci_get_bdfcall to pci_get_buscall to pci_write_configcall to pci_find_first_devicecall to pci_find_next_devicecall to dm_pci_bus_find_devicecall to pci_bus_find_devicescall to pci_device_matches_idscall to dm_pciauto_setup_devicecall to dm_pci_hose_probe_buscall to pciauto_region_aligncall to pciauto_region_allocatecall to pciauto_show_regioncall to pciauto_region_initcall to pci_last_busnocall to pci_read_config_dwordcall to pci_skip_devcall to pci_read_config_bytecall to pci_read_config_wordcall to pci_find_devicescall to __pci_hose_phys_to_buscall to __pci_hose_bus_to_physcall to pci_hose_read_config_dwordcall to pci_hose_write_config_dwordcall to pci_hose_bus_to_physcall to pci_bus_to_hosecall to pci_find_device_idcall to dm_pci_run_vga_bioscall to vbe_setup_video_privcall to board_should_load_opromcall to pci_rom_probecall to pci_rom_loadcall to board_should_run_opromcall to board_map_oprom_vendevcall to sandbox_pci_get_emulcall to phy_dev_opscall to generic_phy_get_by_indexcall to generic_phy_xlate_offs_flagscall to pinctrl_generic_set_state_subnodecall to pinctrl_group_name_to_selectorcall to pinctrl_pin_name_to_selectorcall to pinctrl_generic_set_state_onecall to pinmux_func_name_to_selectorcall to pinmux_enable_settingcall to pinconf_prop_name_to_paramcall to pinconf_enable_settingcall to sandbox_get_group_namecall to sandbox_get_pin_namecall to sandbox_get_function_namecall to pinconfig_post_bindcall to pinctrl_requestcall to pinctrl_select_state_fullcall to pinctrl_select_state_simplecall to pinctrl_gpio_get_pinctrl_and_offsetcall to ofnode_pre_reloccall to uclass_get_device_by_phandle_idcall to pinctrl_config_onecall to power_domain_dev_opscall to power_domain_get_by_indexcall to power_domain_of_xlate_defaultcall to power_domain_freecall to power_domain_offcall to pmic_bind_childrencall to i2c_emul_get_devicecall to sandbox_i2c_pmic_read_datacall to sandbox_i2c_pmic_write_datacall to spmi_reg_readcall to spmi_reg_writecall to pmic_readcall to pmic_writecall to rk8xx_readcall to check_volt_tablecall to regulator_common_set_enablecall to regulator_common_get_enablecall to regulator_common_ofdata_to_platdatacall to max77686_buck_modecall to max77686_buck_enablecall to max77686_buck_valcall to max77686_buck_modescall to max77686_ldo_modecall to max77686_ldo_enablecall to max77686_ldo_valcall to max77686_ldo_modescall to max77686_buck_hex2modecall to max77686_ldo_hex2modecall to max77686_buck_hex2voltcall to max77686_buck_volt2hexcall to max77686_ldo_hex2voltcall to max77686_ldo_volt2hexcall to pfuze100_regulator_modecall to pfuze100_regulator_enablecall to pfuze100_regulator_valcall to se_desccall to regulator_autosetcall to regulator_showcall to regulator_name_is_uniquecall to regulator_autoset_by_namecall to regulator_set_value_ramp_delaycall to _buck_set_valuecall to _buck_set_enablecall to get_ldo_regcall to get_buck_regcall to reg_set_enablecall to reg_get_enablecall to reg_set_valuecall to reg_get_valuecall to out_set_modecall to out_get_modecall to out_set_valuecall to out_get_valuecall to tps65090_fet_setcall to _rproc_ops_wrappercall to for_each_remoteproc_devicecall to rproc_name_is_uniquecall to sandbox_dev_move_to_statecall to reset_release_allcall to reset_assertcall to reset_freecall to reset_dev_opscall to reset_deassertcall to reset_get_by_indexcall to reset_get_by_index_tailcall to reset_of_xlate_defaultcall to reset_release_bulkcall to reset_deassert_bulkcall to reset_assert_bulkcall to reset_get_bulkcall to reset_get_by_namecall to reset_timecall to sandbox_i2c_rtc_prepare_readcall to sandbox_i2c_rtc_complete_writecall to sandbox_i2c_rtc_setcall to sandbox_i2c_rtc_getcall to os_localtimecall to rtc_mktimecall to is_leap_yearcall to rtc_month_dayscall to rtc_write8call to rtc_read8call to dm_i2c_reg_writecall to rv8803_rtc_setcall to dm_i2c_reg_readcall to bcd2bincall to bin2bcdcall to scsi_init_dev_desccall to scsi_detect_devcall to scsi_setup_inquirycall to scsi_execcall to scsi_print_errorcall to scsi_ident_cpycall to scsi_setup_test_unit_readycall to scsi_read_capacitycall to scsi_init_dev_desc_privcall to scsi_setup_write_extcall to scsi_setup_read_extcall to board_debug_uart_initcall to _debug_uart_initcall to printdeccall to _debug_uart_putccall to printhexcall to printhex1call to _printchcall to sandbox_serial_pendingcall to increment_buffer_indexcall to video_sync_allcall to output_ansi_colourcall to output_ansi_resetcall to os_tty_rawcall to _serial_tstccall to _serial_getccall to _serial_putscall to _serial_putccall to __serial_tstccall to __serial_getccall to serial_initcall to serial_find_console_or_paniccall to of_get_stdoutcall to serial_check_stdoutcall to panic_strcall to fdtdec_get_chosen_nodecall to fdtdec_get_chosen_propcall to fdt_get_alias_namelencall to uclass_get_device_by_of_offsetcall to sound_find_codec_i2scall to i2s_tx_datacall to sandbox_sdl_sound_initcall to sandbox_sdl_sound_playcall to sound_start_beepcall to sound_stop_beepcall to sound_create_square_wavecall to sound_playcall to spi_mem_supports_opcall to spi_mem_default_supports_opcall to spi_check_buswidth_reqcall to spi_find_chip_selectcall to spi_set_speed_modecall to spi_cs_infocall to spi_slave_ofdata_to_platdatacall to dm_spi_xfercall to dm_spi_release_buscall to dm_spi_claim_buscall to check_address_validcall to sysreset_walk_haltcall to sysreset_walkcall to sysreset_get_lastcall to sysreset_requestcall to sandbox_exitcall to hcreate_rcall to hdestroy_rcall to find_ta_entrycall to tee_optee_ta_uuid_from_octetscall to check_paramscall to get_attrcall to tee_get_opscall to __tee_shm_addcall to timer_early_get_countcall to tpm_tis_i2c_calc_ordinal_durationcall to sandbox_tpm2_fill_bufcall to sandbox_tpm2_check_readynesscall to sandbox_tpm2_check_sessioncall to sandbox_tpm2_extendcall to handle_cap_flag_spacecall to index_to_seqcall to crc8call to usb_emul_setup_devicecall to handle_ufi_commandcall to setup_responsecall to handle_readcall to setup_fail_responsecall to clrset_post_statecall to hub_find_devicecall to usb_emul_find_descriptorcall to usb_emul_get_descriptorcall to usb_emul_find_devnumcall to usb_emul_get_stringcall to copy_to_unicodecall to usb_emul_findcall to usbmon_tracecall to usb_emul_intcall to usb_emul_bulkcall to usb_emul_controlcall to usb_get_buscall to usb_setup_devicecall to usb_find_childcall to usb_find_and_bind_drivercall to usb_match_one_idcall to usb_match_devicecall to usb_match_one_id_intfcall to usb_scan_buscall to remove_inactive_childrencall to usb_stor_resetcall to stbtt_GetFontOffsetForIndexcall to stbtt__matchescall to stbtt__isfontcall to stbtt__find_tablecall to ttUSHORTcall to stbtt__matchpaircall to stbtt__CompareUTF8toUTF16_bigendian_prefixcall to stbtt_CompareUTF8toUTF16_bigendiancall to tt_floorcall to stbtt_PackFontRangescall to stbtt_InitFontcall to stbtt_PackFontRangesGatherRectscall to stbtt_PackFontRangesPackRectscall to stbtt_PackFontRangesRenderIntoRectscall to stbrp_pack_rectscall to stbtt_ScaleForPixelHeightcall to stbtt_ScaleForMappingEmToPixelscall to stbtt__oversample_shiftcall to stbtt_FindGlyphIndexcall to stbtt_GetGlyphHMetricscall to stbtt_GetGlyphBitmapBoxcall to stbtt_MakeGlyphBitmapSubpixelcall to stbtt__h_prefiltercall to stbtt__v_prefiltercall to stbtt_GetGlyphBitmapBoxSubpixelcall to stbrp_init_targetcall to stbtt_MakeGlyphBitmapcall to stbtt_MakeCodepointBitmapSubpixelcall to stbtt_GetCodepointBitmapSubpixelcall to stbtt_GetGlyphBitmapSubpixelcall to stbtt_Rasterizecall to stbtt_GetGlyphShapecall to stbtt_FlattenCurvescall to stbtt__rasterizecall to stbtt__add_pointcall to stbtt__tesselate_curvecall to stbtt__sort_edgescall to stbtt__rasterize_sorted_edgescall to stbtt__sort_edges_quicksortcall to stbtt__sort_edges_ins_sortcall to stbtt__hheap_freecall to stbtt__new_activecall to stbtt__fill_active_edges_newcall to tt_fabscall to stbtt__hheap_cleanupcall to stbtt__handle_clipped_edgecall to stbtt__hheap_alloccall to stbtt_GetCodepointBitmapBoxSubpixelcall to stbtt_GetGlyphBoxcall to tt_ceilcall to ttSHORTcall to stbtt_GetGlyphKernAdvancecall to ttULONGcall to stbtt__GetGlyfOffsetcall to stbtt__close_shapecall to stbtt_setvertexcall to tt_sqrtcall to ttLONGcall to console_truetype_find_fontcall to stbtt_GetFontVMetricscall to console_truetype_erasecall to stbtt_GetCodepointHMetricscall to fraccall to stbtt_GetCodepointKernAdvancecall to enable_sequencecall to set_pwmcall to pwm_set_enablecall to pwm_set_configcall to pwm_set_invertcall to _sandbox_osd_set_sizecall to make_memvalcall to sandbox_sdl_init_displaycall to backlight_set_brightnesscall to backlight_enablecall to vidconsole_put_charcall to video_synccall to vidconsole_position_cursorcall to vidconsole_put_stringcall to vidconsole_escape_charcall to vidconsole_newlinecall to vidconsole_entry_startcall to vidconsole_backcall to vidconsole_output_glyphcall to vidconsole_putc_xycall to get_cursor_positioncall to set_cursor_positioncall to parsenumcall to video_clearcall to vidconsole_set_rowcall to video_set_default_colorscall to vid_console_colorcall to vidconsole_move_rowscall to alloc_fbcall to sandbox_sdl_synccall to video_set_cmapcall to video_splash_align_axiscall to video_display_rle8_bitmapcall to fb_put_bytecall to draw_unencoded_bitmapcall to draw_encoded_bitmapcall to virtio_add_statuscall to virtio_resetcall to virtio_get_featurescall to __virtio_set_bitcall to virtio_finalize_featurescall to virtio_set_featurescall to virtio_get_statuscall to virtio_set_statuscall to virtio_find_vqscall to virtio_cread8call to virtio_cread16call to virtio_cread32call to virtio_cread64call to virtio_driver_features_initcall to virtio_blk_do_reqcall to virtqueue_addcall to virtqueue_kickcall to virtqueue_get_bufcall to virtio_mmio_setup_vqcall to virtio_mmio_del_vqscall to virtio_mmio_del_vqcall to vring_del_virtqueuecall to vring_create_virtqueuecall to virtqueue_get_vring_sizecall to virtqueue_get_desc_addrcall to virtqueue_get_avail_addrcall to virtqueue_get_used_addrcall to virtio_has_featurecall to virtio_cread_bytescall to virtio_cwrite8call to iowrite16call to virtio_pci_setup_vqcall to virtio_pci_del_vqscall to virtio_pci_del_vqcall to iowrite32call to ioread16call to ioread32call to iowrite8call to ioread8call to virtio_pci_find_capabilitycall to virtio_pci_map_capabilitycall to dm_pci_read_bar32call to dm_pci_find_next_capabilitycall to __write_once_sizecall to virtio_mbcall to vring_sizecall to vring_initcall to __vring_new_virtqueuecall to more_usedcall to virtio_rmbcall to detach_bufcall to virtio_store_mbcall to virtqueue_kick_preparecall to virtio_notifycall to vring_need_eventcall to virtio_wmbcall to virtio_sandbox_setup_vqcall to virtio_sandbox_del_vqscall to virtio_sandbox_del_vqcall to w1_gpio_read_bitcall to w1_gpio_write_bitcall to w1_enumeratecall to w1_read_bytecall to w1_eeprom_register_new_devicecall to w1_reset_selectcall to w1_write_bytecall to w1_read_bufcall to w1_eeprom_get_idcall to sandbox_wdt_startcall to wdt_resetcall to strimcall to find_env_callbackcall to env_attr_lookupcall to hmatch_rcall to env_loadcall to env_driver_lookupcall to env_set_initedcall to env_has_initedcall to env_get_locationcall to env_get_char_speccall to _env_driver_lookupcall to __compiletime_assert_102call to _env_flags_validate_typecall to env_get_defaultcall to env_parse_flags_to_bincall to env_flags_lookupcall to skip_numcall to is_hex_prefixcall to btrfs_leaf_datacall to btrfs_search_treecall to btrfs_path_leaf_keycall to btrfs_comp_keys_typecall to btrfs_free_pathcall to btrfs_crc32ccall to asctime_rcall to localtime_rcall to btrfs_chunk_map_exitcall to btrfs_lookup_pathcall to btrfs_file_readcall to btrfs_readdircall to btrfs_hash_initcall to btrfs_read_superblockcall to btrfs_chunk_map_initcall to btrfs_read_chunk_treecall to btrfs_find_rootcall to btrfs_get_default_subvol_objectidcall to btrfs_lookup_inodecall to ctime_rcall to btrfs_readlinkcall to btrfs_next_slotcall to btrfs_path_leaf_datacall to btrfs_chunk_to_cpucall to add_chunk_mappingcall to btrfs_key_to_cpucall to rb_next_postordercall to rb_first_postordercall to btrfs_stripe_to_cpucall to rb_link_nodecall to rb_insert_colorcall to ZSTD_isErrorcall to decompress_zlibcall to decompress_lzocall to decompress_zstdcall to ZSTD_DStreamWorkspaceBoundcall to ZSTD_initDStreamcall to ZSTD_decompressStreamcall to ZSTD_getErrorCodecall to inflateInit2_call to inflatecall to inflateEndcall to lzo1x_decompress_safecall to jump_leafcall to btrfs_map_logical_to_physicalcall to read_tree_nodecall to clear_pathcall to btrfs_bin_searchcall to btrfs_devreadcall to btrfs_header_to_cpucall to btrfs_key_ptr_to_cpucall to btrfs_item_to_cpucall to generic_bin_searchcall to btrfs_comp_keyscall to fs_devreadcall to btrfs_dir_item_to_cpucall to verify_dir_itemcall to btrfs_name_hashcall to btrfs_match_dir_item_namecall to btrfs_path_item_sizecall to btrfs_decompresscall to crc32c_calcall to crc32c_initcall to btrfs_prev_slotcall to btrfs_file_extent_item_to_cpu_inlcall to btrfs_read_extent_inlinecall to btrfs_file_extent_item_to_cpucall to btrfs_read_extent_regcall to skip_current_directoriescall to next_lengthcall to get_parent_inodecall to btrfs_lookup_dir_itemcall to btrfs_lookup_root_refcall to btrfs_lookup_inode_refcall to btrfs_inode_item_to_cpucall to btrfs_search_tree_key_typecall to btrfs_inode_ref_to_cpucall to btrfs_root_ref_to_cpucall to read_root_itemcall to btrfs_root_item_to_cpucall to list_subvolscall to get_subvol_namecall to btrfs_check_super_csumcall to btrfs_super_block_to_cpucall to btrfs_check_supercall to btrfs_check_super_rootscall to btrfs_csum_datacall to btrfs_csum_finalcall to file_cbfs_load_headercall to file_cbfs_next_filecall to file_cbfs_fill_cachecall to swap_headercall to swap_file_headercall to cramfs_read_supercall to cramfs_resolvecall to cramfs_list_inodecall to mkmodestrcall to cramfs_uncompress_linkcall to cramfs_uncompresscall to cramfs_uncompress_initcall to cramfs_uncompress_blockcall to cramfs_uncompress_exitcall to inflateInit_call to inflateResetcall to ext4fs_devreadcall to get_fscall to zalloccall to ext4_read_superblockcall to ext4fs_read_inodecall to ext4fs_find_filecall to ext4fs_free_nodecall to ext4fs_find_file1call to ext4fs_iterate_dircall to ext4fs_read_symlinkcall to ext4fs_read_filecall to ext4fs_reinit_globalcall to ext_cache_initcall to ext4fs_get_extent_blockcall to ext_cache_finicall to ext4fs_blockgroupcall to ext4fs_bg_get_inode_table_idcall to ext_cache_readcall to ext4fs_get_new_blk_nocall to alloc_single_indirect_blockcall to alloc_double_indirect_blockcall to alloc_triple_indirect_blockcall to put_ext4call to ext4fs_get_group_descriptorcall to ext4fs_bg_get_free_inodescall to ext4fs_bg_get_flagscall to ext4fs_bg_get_inode_idcall to ext4fs_bg_set_flagscall to _get_new_inode_nocall to ext4fs_bg_free_inodes_deccall to ext4fs_bg_itable_unused_deccall to ext4fs_sb_free_inodes_deccall to ext4fs_log_journalcall to ext4fs_set_inode_bmapcall to ext4fs_bg_get_free_blockscall to ext4fs_bg_get_block_idcall to _get_new_blk_nocall to ext4fs_bg_free_blocks_deccall to ext4fs_sb_free_blocks_deccall to ext4fs_set_block_bmapcall to read_allocated_blockcall to unlink_filenamecall to ext4fs_put_metadatacall to find_dir_depthcall to parse_pathcall to search_dircall to ext4fs_igetcall to check_void_in_dentrycall to ext4fs_get_new_inode_nocall to ext2fs_crc16call to update_descriptor_blockcall to update_commit_blockcall to print_jrnl_statuscall to recover_transactioncall to ext4fs_push_revoke_blkcall to ext4fs_free_revoke_blkscall to check_blknr_for_revokecall to _get_nodecall to ext4fs_check_journal_statecall to ext4fs_writecall to ext4fs_initcall to ext4fs_get_parent_inode_numcall to ext4fs_filename_unlinkcall to ext4fs_delete_filecall to ext4fs_update_parent_dentrycall to ext4fs_allocate_blockscall to ext4fs_write_filecall to ext4fs_updatecall to ext4fs_deinitcall to ext4fs_free_journalcall to ext4fs_init_journalcall to ext4fs_div_roundupcall to ext4fs_get_bgdtablecall to ext4fs_sb_get_free_blockscall to ext4fs_sb_set_free_blockscall to delete_single_indirect_blockcall to delete_double_indirect_blockcall to delete_triple_indirect_blockcall to ext4fs_reset_block_bmapcall to ext4fs_bg_free_blocks_inccall to ext4fs_sb_free_blocks_inccall to ext4fs_reset_inode_bmapcall to ext4fs_bg_free_inodes_inccall to ext4fs_sb_free_inodes_inccall to ext4fs_log_gdtcall to ext4fs_update_journalcall to ext4fs_checksum_updatecall to ext4fs_dump_metadatacall to ext4fs_opencall to ext4fs_readcall to ext4fs_set_blk_devcall to ext4fs_mountcall to ext4fs_closecall to fat_itr_nextcall to fat_itr_isdircall to fat_itr_rootcall to fat_itr_resolvecall to file_fat_read_atcall to get_contentscall to read_bootsectandvicall to fat_itr_childcall to next_dentcall to extract_vfat_namecall to get_namecall to slot2strcall to mkcksumcall to next_clustercall to clust_to_sectcall to disk_readcall to get_fatentcall to get_fs_infocall to get_clustercall to flush_dirty_fat_buffercall to downcasecall to split_filenamecall to normalize_longnamecall to find_directory_entrycall to set_namecall to fill_dir_slotcall to fill_dentrycall to set_start_clustercall to set_contentscall to flush_dircall to fat_dir_entriescall to delete_dentrycall to clear_fatentcall to file_fat_write_atcall to new_dir_tablecall to get_set_clustercall to set_fatent_valuecall to find_empty_clustercall to determine_fatentcall to check_overflowcall to set_clustercall to disk_writecall to set_sectorscall to str2slotcall to uppercasecall to fs_lncall to fs_mkdircall to fs_unlinkcall to fs_get_infocall to fs_closecall to fs_uuidcall to fs_writecall to div_u64call to fs_existscall to fs_lscall to efi_set_bootdevcall to _fs_readcall to fs_sizecall to fs_set_blk_dev_with_partcall to fs_read_lmb_checkcall to lmb_init_and_reservecall to lmb_dump_allcall to lmb_alloc_addrcall to fs_opendircall to fs_readdircall to fs_closedircall to sandbox_fs_write_atcall to sandbox_fs_read_atcall to os_dirent_lscall to os_dirent_get_typenamecall to __builtin_memcpycall to flscall to __test_and_clear_bitcall to __test_and_set_bitcall to __ffscall to __swab64pcall to __swab32pcall to __swab16pcall to fdt_appendprop_u32call to fdt_appendpropcall to fdt_property_u32call to fdt_propertycall to fdt_setprop_inplace_u32call to fdt_setprop_inplacecall to fdt_getprop_namelencall to fdt_set_status_by_aliascall to __bitrev16call to __bitrev8call to BZ2_bzDecompressInitcall to BZ2_bzDecompresscall to BZ2_bzDecompressEndcall to BZ2_bzCompressInitcall to BZ2_bzCompresscall to BZ2_bzCompressEndcall to unRLE_obuf_to_output_SMALLcall to unRLE_obuf_to_output_FASTcall to BZ2_decompresscall to bz_internal_errorcall to BZ2_indexIntoFcall to bz_config_okcall to handle_compresscall to isempty_RLcall to copy_output_until_stopcall to prepare_new_blockcall to copy_input_until_stopcall to flush_RLcall to BZ2_compressBlockcall to add_pair_to_blockcall to init_RLcall to fallbackSortcall to mainSortcall to mainQSort3call to mainSimpleSortcall to mmed3call to mainGtUcall to fallbackQSort3call to fallbackSimpleSortcall to BZ2_blockSortcall to BZ2_bsInitWritecall to bsPutUCharcall to bsPutUInt32call to bsWcall to generateMTFValuescall to sendMTFValuescall to bsFinishWritecall to BZ2_hbMakeCodeLengthscall to BZ2_hbAssignCodescall to makeMaps_ecall to makeMaps_dcall to BZ2_hbCreateDecodeTablescall to utf16_getcall to utf8_putcall to utf8_getcall to utf16_putcall to get_codecall to crc32_no_compcall to crc7_bytecall to _crc8call to dhrycall to Proc_7call to Proc_3call to Proc_6call to Proc_5call to Proc_4call to Func_2call to Proc_8call to Proc_1call to Func_1call to Proc_2call to Func_3call to display_options_get_banner_privcall to __iter_div_u64_remcall to div64_u64call to __efi_nestingcall to efi_search_objcall to efi_bl_bind_partitionscall to efi_disk_create_partitionscall to efi_add_drivercall to disconnect_childcall to efi_dp_strcall to check_node_typecall to efi_dp_last_nodecall to try_load_entrycall to get_varcall to efi_deserialize_load_optioncall to efi_unload_imagecall to efi_allocate_poolcall to efi_update_table_header_crc32call to efi_disconnect_all_driverscall to efi_get_child_controllerscall to efi_open_protocolcall to efi_close_protocolcall to efi_uninstall_protocolcall to efi_connect_controllercall to efi_connect_single_controllercall to efi_locate_handle_buffercall to efi_bind_controllercall to efi_delete_imagecall to efi_update_exit_datacall to longjmpcall to efi_free_pagescall to setjmpcall to efi_search_protocolcall to efi_protocol_opencall to efi_disconnect_controllercall to efi_create_open_infocall to __builtin_ms_va_startcall to __builtin_ms_va_endcall to efi_install_protocol_interfacecall to efi_locate_device_pathcall to efi_uninstall_protocol_interfacecall to efi_dp_instance_sizecall to efi_check_register_notify_eventcall to efi_locate_handlecall to efi_delete_open_infocall to efi_set_watchdogcall to usec_to_tickcall to efi_timer_checkcall to efi_signal_eventcall to efi_variables_boot_exit_notifycall to board_quiesce_devicescall to efi_runtime_detachcall to efi_exit_cachescall to efi_load_image_from_pathcall to efi_setup_loaded_imagecall to efi_load_pecall to efi_file_from_pathcall to efi_add_handlecall to efi_dp_find_objcall to efi_remove_configuration_tablecall to efi_searchcall to efi_remove_protocolcall to efi_get_driverscall to efi_is_eventcall to efi_queue_eventcall to efi_event_is_queuedcall to efi_set_timercall to efi_process_event_queuecall to efi_create_eventcall to is_valid_tplcall to efi_remove_all_protocolscall to efi_get_memory_mapcall to indent_stringcall to query_console_sizecall to efi_cin_checkcall to efi_cin_empty_buffercall to efi_cin_read_keycall to efi_cin_notifycall to console_read_unicodecall to set_shift_maskcall to analyze_modifierscall to efi_cout_clear_screencall to query_console_serialcall to cout_mode_matchescall to term_read_replycall to utf16_utf8_strnlencall to utf16_utf8_strncpycall to term_get_charcall to efi_dp_from_partcall to efi_dp_from_ethcall to efi_dp_from_filecall to efi_dp_dupcall to efi_dp_nextcall to dp_alloccall to dp_sizecall to dp_fillcall to dp_part_sizecall to dp_part_fillcall to path_to_ueficall to allow_unalignedcall to dp_part_nodecall to is_sdcall to efi_dp_sizecall to find_objcall to efi_dp_matchcall to shorten_pathcall to efi_convert_device_path_to_textcall to efi_convert_single_device_node_to_textcall to efi_str_to_u16call to dp_hardwarecall to dp_acpicall to dp_msgingcall to dp_mediacall to dp_unknowncall to ascii2unicodecall to efi_dp_create_device_nodecall to efi_dp_is_multi_instancecall to efi_dp_get_next_instancecall to efi_dp_append_instancecall to efi_dp_append_nodecall to efi_disk_add_devcall to efi_dp_part_nodecall to efi_simple_file_systemcall to efi_disk_rw_blockscall to file_opencall to efi_fs_from_pathcall to u16_strdupcall to basenamecall to set_blk_devcall to dir_readcall to file_readcall to fs_readcall to file_closecall to utf16_to_utf8call to sanitize_pathcall to efi_create_filecall to is_dircall to video_get_xsizecall to video_get_ysizecall to gop_get_bppcall to gop_blt_video_fillcall to gop_blt_buf_to_vid32call to gop_blt_buf_to_vid16call to gop_blt_vid_to_vidcall to gop_blt_vid_to_bufcall to gop_blt_intcall to __builtin_assume_alignedcall to efi_vid16_to_blt_colcall to efi_blt_col_to_vid16call to efi_hii_packagelist_existscall to language_matchcall to efi_hii_package_typecall to efi_hii_package_lencall to remove_guid_packagecall to remove_strings_packagecall to remove_keyboard_packagecall to add_packagescall to free_packagelistcall to new_packagelistcall to add_guid_packagecall to add_strings_packagecall to add_keyboard_packagecall to free_keyboard_layoutscall to efi_hii_sibt_string_ucs2_block_nextcall to free_strings_tablecall to efi_set_code_and_data_typecall to efi_alloccall to efi_loader_relocatecall to invalidate_icache_allcall to efi_print_image_infocall to efi_add_known_memorycall to add_u_boot_and_runtimecall to efi_check_allocatedcall to checksumcall to efi_find_free_memorycall to efi_mem_carve_outcall to efi_mem_sortcall to list_sortcall to desc_get_endcall to eth_get_ethaddrcall to eth_rxcall to net_send_packetcall to efi_net_initializecall to eth_set_currentcall to efi_install_multiple_protocol_interfacescall to efi_relocate_runtime_tablecall to efi_is_runtime_service_pointercall to switch_to_non_secure_modecall to efi_init_variablescall to efi_init_platform_langcall to efi_init_runtime_supportedcall to efi_initialize_system_tablecall to efi_root_node_registercall to efi_driver_initcall to efi_console_registercall to efi_disk_registercall to efi_gop_registercall to efi_net_registercall to efi_smbios_registercall to efi_watchdog_registercall to efi_reset_system_initcall to write_smbios_tablecall to utf_to_uppercall to utf_to_lowercall to metai_matchcall to next_lowercall to efi_to_nativecall to parse_attrcall to bin2hexcall to parse_uboot_variablecall to prefixcall to get_ram_sizecall to sandbox_read_fdt_from_filecall to fdtdec_prepare_fdtcall to fdtdec_add_reserved_memorycall to fdtdec_init_reserved_memorycall to fdt_generate_phandlecall to fdtdec_set_phandlecall to fdt_get_aliascall to fdtdec_setup_memory_banksize_fdtcall to get_next_memory_nodecall to fdtdec_setup_mem_size_base_fdtcall to get_prop_check_min_lencall to fdtdec_next_compatiblecall to fdt_get_property_by_offsetcall to fdtdec_add_aliases_for_idcall to run_testcall to check_carveoutcall to make_fdt_carveoutcall to check_fdt_carveoutcall to fdt_createcall to fdt_finish_reservemapcall to fdt_begin_nodecall to fdt_end_nodecall to fdt_finishcall to make_fdt_carveout_devicecall to fdtdec_get_carveoutcall to fdtdec_set_carveoutcall to make_fdtcall to fdtdec_find_aliases_for_idcall to fdtdec_get_compatiblecall to gzip_parse_headercall to zunzipcall to deflateInit2_call to deflatecall to deflateEndcall to zzipcall to drop_var_from_setcall to match_entrycall to match_stringcall to _hdeletecall to _compare_and_overwrite_entrycall to env_callback_initcall to env_flags_initcall to isprimecall to hex_dump_to_buffercall to avb_memcpycall to avb_descriptor_validate_and_byteswapcall to avb_printvcall to avb_basenamecall to avb_be32tohcall to avb_safe_add_tocall to avb_strlencall to avb_uppercasecall to avb_bin2hexcall to cmdline_append_optioncall to cmdline_append_versioncall to avb_slot_verify_data_calculate_vbmeta_digestcall to cmdline_append_uint64_base10call to cmdline_append_hexcall to avb_replacecall to uint64_to_base10call to avb_div_by_10call to avb_str_concatcall to avb_descriptor_foreachcall to avb_memcmpcall to avb_be64tohcall to avb_safe_memcmpcall to avb_property_lookupcall to avb_property_descriptor_validate_and_byteswapcall to iavb_parse_key_datacall to avb_malloccall to modpowF4call to iavb_free_parsed_keycall to montMulcall to geMcall to subMcall to montMulAddcall to avb_rsa_public_key_header_validate_and_byteswapcall to avb_memsetcall to SHA256_transformcall to SHA512_transformcall to avb_sha256_initcall to avb_sha256_updatecall to avb_sha256_finalcall to avb_sha512_initcall to avb_sha512_updatecall to avb_sha512_finalcall to avb_abortcall to avb_new_cmdline_subst_listcall to load_and_verify_vbmetacall to result_should_continuecall to avb_strcmpcall to avb_vbmeta_image_header_to_host_byte_ordercall to avb_strdupcall to avb_append_optionscall to avb_sub_cmdlinecall to avb_slot_verify_data_freecall to avb_free_cmdline_subst_listcall to avb_validate_utf8call to avb_footer_validate_and_byteswapcall to avb_vbmeta_image_verifycall to avb_vbmeta_verify_result_to_stringcall to load_requested_partitionscall to avb_descriptor_get_allcall to load_and_verify_hash_partitioncall to avb_chain_partition_descriptor_validate_and_byteswapcall to avb_kernel_cmdline_descriptor_validate_and_byteswapcall to avb_hashtree_descriptor_validate_and_byteswapcall to read_persistent_digestcall to avb_add_root_digest_substitutioncall to load_full_partitioncall to avb_hash_descriptor_validate_and_byteswapcall to avb_strv_find_strcall to avb_strstrcall to avb_malloc_call to avb_safe_addcall to avb_get_algorithm_datacall to avb_rsa_verifycall to fdt_mem_rsv_call to fdt_offset_ptr_call to fdt_check_node_offset_call to overlay_adjust_local_phandlescall to fdt_get_max_phandlecall to overlay_update_local_referencescall to overlay_fixup_phandlescall to overlay_mergecall to overlay_symbol_updatecall to fdt_set_magiccall to fdt_subnode_offset_namelencall to overlay_get_targetcall to get_path_lencall to fdt_setprop_placeholdercall to fdt_get_pathcall to overlay_apply_nodecall to overlay_fixup_phandlecall to overlay_fixup_one_phandlecall to fdt_path_offset_namelencall to fdt_setprop_inplace_namelen_partialcall to overlay_update_local_node_referencescall to overlay_adjust_node_phandlescall to overlay_phandle_add_offsetcall to overlay_get_target_phandlecall to fdt_add_regioncall to fdt_include_supernodescall to fdt_next_regioncall to region_list_contains_offsetcall to str_in_listcall to fdt_stringlist_containscall to fdt_supernode_atdepth_offsetcall to fdt_get_property_namelencall to _fdt_string_eqcall to fdt_check_prop_offset_call to _nextpropcall to fdt_path_next_separatorcall to _fdt_nodename_eqcall to fdt_rw_check_header_call to fdt_packblocks_call to fdt_data_size_call to fdt_blocks_misordered_call to fdt_movecall to fdt_set_versioncall to fdt_set_size_dt_structcall to fdt_set_last_comp_versioncall to fdt_set_off_mem_rsvmapcall to fdt_set_off_dt_structcall to fdt_set_off_dt_stringscall to fdt_set_size_dt_stringscall to fdt_node_end_offset_call to fdt_splice_struct_call to fdt_offset_ptr_w_call to fdt_add_subnode_namelencall to fdt_get_property_wcall to fdt_add_property_call to fdt_resize_property_call to fdt_find_add_string_call to fdt_splice_mem_rsv_call to fdt_mem_rsv_w_call to fdt_find_string_call to fdt_splice_string_call to fdt_splice_call to fdt_sw_check_header_call to fdt_grab_space_call to fdt_property_placeholdercall to fdt_add_reservemap_entrycall to fdt_nop_region_call to fdt_offset_ptr_wcall to fdt_getprop_namelen_wcall to skip_spacescall to mergecall to merge_and_restore_back_linkscall to lmb_overlaps_regioncall to lmb_addrs_overlapcall to lmb_align_downcall to lmb_add_regioncall to __lmb_alloc_basecall to lmb_remove_regioncall to lmb_addrs_adjacentcall to lmb_regions_adjacentcall to lmb_coalesce_regionscall to lmb_initcall to lmb_addcall to lmb_reserve_commoncall to arch_lmb_reservecall to board_lmb_reservecall to LZ4_wildCopycall to LZ4_readLE16call to LZ4_copy4call to LZ4_copy8call to LZ4_decompress_genericcall to LzmaDec_AllocateProbscall to LzmaDec_Initcall to LzmaDec_DecodeToDiccall to LzmaDec_FreeProbscall to LzmaProps_Decodecall to LzmaDec_AllocateProbs2call to LzmaDec_FreeDictcall to LzmaDec_WriteRemcall to LzmaDec_InitRccall to LzmaDec_InitStateRealcall to LzmaDec_TryDummycall to LzmaDec_DecodeReal2call to LzmaDec_InitDicAndStatecall to LzmaDec_DecodeRealcall to LzmaDecodecall to parse_headercall to lzop_is_valid_headercall to MD5Initcall to MD5Updatecall to MD5Finalcall to byteReversecall to MD5Transformcall to membuff_uninitcall to membuff_initcall to membuff_availcall to membuff_getrawcall to membuff_putrawcall to membuff_putrawflexcall to unflatten_device_treecall to of_alias_scancall to unflatten_dt_nodecall to unflatten_dt_alloccall to panic_finishcall to __rb_erase_augmentedcall to __rb_erase_colorcall to __rb_change_childcall to rb_set_parentcall to rb_set_parent_colorcall to __rb_insert_augmentedcall to rb_left_deepest_nodecall to __rb_insertcall to ____rb_erase_colorcall to __rb_rotate_set_parentscall to rb_set_blackcall to rb_red_parentcall to hash_progressive_lookup_algocall to rsa_convert_big_endiancall to pow_modcall to num_public_exponent_bitscall to is_public_exponent_bit_setcall to montgomery_mulcall to greater_equal_moduluscall to subtract_moduluscall to montgomery_mul_add_stepcall to rsa_verify_with_keynodecall to rsa_verify_keycall to rsa_mod_expcall to mask_generation_function1call to compute_hash_primecall to u32_i2ospcall to rsa_verify_paddingcall to sha1_processcall to sha256_processcall to matchcall to loop_greedycall to loop_non_greedycall to is_any_ofcall to is_any_butcall to emitcall to compilecall to fixup_branchcall to anyofcall to get_escape_charcall to exact_one_charcall to quantifiercall to relocatecall to set_jump_offsetcall to exactcall to store_char_in_datacall to table_compute_checksumcall to fill_smbios_headercall to smbios_write_type4_dmcall to smbios_string_table_lencall to cpu_get_vendorcall to smbios_add_stringcall to check_bytes8call to strpbrkcall to strspncall to _parse_integer_fixup_radixcall to __udelaycall to tick_to_timecall to timer_get_countcall to timer_early_get_ratecall to timer_get_ratecall to tpm_opencall to tpm_command_sizecall to tpm_return_codecall to pack_byte_stringcall to tpm_sendrecv_commandcall to unpack_byte_stringcall to tpm_get_versioncall to gen_rand_uuidcall to uuid_str_validcall to vsprintfcall to vsnprintf_internalcall to skip_atoicall to string16call to stringcall to pointercall to numbercall to device_path_stringcall to mac_address_stringcall to ip6_addr_stringcall to ip4_addr_stringcall to uuid_stringcall to put_dec_trunccall to utf16_strnlencall to put_deccall to put_dec_fullcall to xxh64_merge_roundcall to xxh64_roundcall to xxh32_roundcall to fill_windowcall to _tr_flush_blockcall to flush_pendingcall to longest_matchcall to read_bufcall to adler32call to putShortMSBcall to deflate_huffcall to deflate_rlecall to _tr_aligncall to _tr_stored_blockcall to _tr_initcall to lm_initcall to deflateResetcall to bi_windupcall to detect_data_typecall to build_treecall to build_bl_treecall to compress_blockcall to send_all_treescall to init_blockcall to bi_flushcall to copy_blockcall to send_treecall to scan_treecall to pqdownheapcall to gen_bitlencall to gen_codescall to bi_reversecall to tr_static_initcall to fixedtablescall to inflate_tablecall to inflate_fastcall to updatewindowcall to xxh32call to __builtin_clzcall to ZSTD_copy8call to ZSTD_resetDStreamcall to ZSTD_getFrameParamscall to ERR_isErrorcall to ZSTD_findFrameCompressedSizecall to ZSTD_decompress_usingDDictcall to ZSTD_refDDictcall to ZSTD_nextSrcSizeToDecompresscall to ZSTD_decompressContinuecall to ZSTD_isSkipFramecall to ZSTD_limitCopycall to ZSTD_nextInputTypecall to ZSTD_freeDCtxcall to ZSTD_freeDDictcall to ZSTD_freecall to ZSTD_createDStream_advancedcall to ZSTD_initStackcall to ZSTD_malloccall to ZSTD_freeDStreamcall to ZSTD_createDCtx_advancedcall to ZSTD_DCtxWorkspaceBoundcall to ZSTD_decompressMultiFramecall to ZSTD_getDictID_fromDictcall to ZSTD_readLE32call to ZSTD_createDDict_advancedcall to ZSTD_loadEntropy_inDDictcall to ZSTD_loadEntropycall to ZSTD_decompressBegincall to ZSTD_decompress_insertDictionarycall to ZSTD_refDictContentcall to HUF_readDTableX4_wkspcall to FSE_readNCountcall to FSE_buildDTable_wkspcall to ZSTD_checkContinuitycall to ZSTD_frameHeaderSizecall to ZSTD_decodeFrameHeadercall to ZSTD_getcBlockSizecall to ZSTD_decompressBlock_internalcall to ZSTD_copyRawBlockcall to ZSTD_setRleBlockcall to xxh64_updatecall to xxh64_digestcall to ZSTD_decompress_usingDictcall to ZSTD_DDictDictContentcall to ZSTD_DDictDictSizecall to ZSTD_decompressBegin_usingDictcall to ZSTD_decompressFramecall to ZSTD_generateNxBytescall to ZSTD_decodeLiteralsBlockcall to ZSTD_decompressSequencesLongcall to ZSTD_decompressSequencescall to ZSTD_decodeSeqHeaderscall to BIT_initDStreamcall to FSE_initDStatecall to BIT_reloadDStreamcall to ZSTD_decodeSequenceLongcall to ZSTD_execSequenceLongcall to __builtin_prefetchcall to ZSTD_execSequenceLast7call to ZSTD_wildcopycall to ZSTD_copy4call to ZSTD_highbit32call to ZSTD_32bitscall to ZSTD_decodeSequenceLong_genericcall to FSE_peekSymbolcall to BIT_readBitsFastcall to FSE_updateStatecall to ZSTD_decodeSequencecall to ZSTD_execSequencecall to ZSTD_readLE16call to ZSTD_buildSeqTablecall to FSE_buildDTable_rlecall to HUF_decompress1X_usingDTablecall to HUF_decompress4X_usingDTablecall to HUF_decompress1X2_DCtx_wkspcall to HUF_decompress4X_hufOnly_wkspcall to ZSTD_readLE24call to xxh64_resetcall to ZSTD_getFrameContentSizecall to ZSTD_readLE64call to FSE_decompress_wkspcall to FSE_isErrorcall to BIT_highbit32call to FSE_decompress_usingDTablecall to FSE_decompress_usingDTable_genericcall to FSE_decodeSymbolFastcall to FSE_decodeSymbolcall to ZSTD_read32call to ZSTD_isLittleEndiancall to ZSTD_writeBE32call to ZSTD_writeBE64call to ZSTD_readBE32call to ZSTD_readBE64call to put_unaligned_be64call to get_unaligned_be64call to ZSTD_writeLE32call to ZSTD_writeLE64call to ZSTD_writeLE16call to ZSTD_readLESTcall to BIT_skipBitscall to BIT_lookBitsFastcall to BIT_lookBitscall to BIT_addBitsFastcall to BIT_flushBitscall to ZSTD_writeLESTcall to BIT_readBitscall to BIT_addBitscall to FSE_initCStatecall to ZSTD_read16call to HUF_selectDecodercall to HUF_decompress1X4_DCtx_wkspcall to HUF_decompress4X4_DCtx_wkspcall to HUF_decompress4X2_DCtx_wkspcall to HUF_getDTableDesccall to HUF_decompress4X4_usingDTable_internalcall to HUF_decompress4X2_usingDTable_internalcall to HUF_decompress1X4_usingDTable_internalcall to HUF_decompress1X2_usingDTable_internalcall to HUF_isErrorcall to ZSTD_64bitscall to HUF_decodeSymbolX4call to HUF_decodeStreamX4call to BIT_endOfDStreamcall to HUF_decodeLastSymbolX4call to HUF_readStats_wkspcall to HUF_fillDTableX4call to HUF_fillDTableX4Level2call to HUF_readDTableX2_wkspcall to HUF_decodeSymbolX2call to HUF_decodeStreamX2call to net_update_ethercall to net_get_async_tx_pkt_bufcall to arp_is_waitingcall to net_get_arp_handlercall to arp_requestcall to arp_raw_requestcall to net_set_ethercall to bootp_requestcall to check_reply_packetcall to dhcp_packet_process_optionscall to efi_net_set_dhcp_ackcall to dhcp_send_request_packetcall to dhcp_message_typecall to store_net_paramscall to net_auto_loadcall to net_copy_u32call to dhcp_extendedcall to net_set_udp_headercall to net_read_u32call to dhcp_process_optionscall to truncate_szcall to bootp_add_idcall to add_vcicall to net_start_againcall to bootp_match_idcall to eth_get_namecall to cdp_send_triggercall to cdp_compute_csumcall to dns_sendcall to random_portcall to eth_dev_get_mac_addresscall to eth_env_set_enetaddr_by_indexcall to eth_write_hwaddrcall to eth_get_uclass_privcall to eth_set_devcall to eth_common_initcall to eth_get_dev_by_namecall to eth_current_changedcall to net_process_received_packetcall to eth_try_anothercall to eth_mac_skipcall to eth_set_current_to_nextcall to miiphy_initcall to phy_initcall to eth_env_set_enetaddrcall to fastboot_sendcall to fastboot_bootcall to fastboot_data_remainingcall to fastboot_data_completecall to fastboot_data_downloadcall to fastboot_handle_commandcall to boot_downloaded_imagecall to seed_maccall to configure_waitcall to pickcall to random_delay_mscall to mmux_get_mdio_parent_opscall to mmux_change_selcall to mmux_get_parent_mdiocall to phy_connectcall to mdio_unregistercall to mdio_freecall to mdio_alloccall to string_to_vlancall to net_set_ip_headercall to is_serverip_in_cmdcall to is_cdp_packetcall to cdp_receivecall to arp_receivecall to rarp_receivecall to ip_checksum_okcall to net_defragmentcall to receive_icmpcall to nc_input_packetcall to ping_receivecall to __net_defragmentcall to net_send_ip_packetcall to net_init_loopcall to net_check_prereqcall to tftp_startcall to tftp_start_servercall to fastboot_start_servercall to bootp_resetcall to dhcp_requestcall to rarp_requestcall to ping_startcall to nfs_startcall to cdp_startcall to nc_startcall to sntp_startcall to dns_startcall to link_local_startcall to arp_timeout_checkcall to net_cleanup_loopcall to net_set_icmp_handlercall to arp_initcall to net_clear_handlerscall to net_parse_bootfilecall to dirnamecall to nfs_sendcall to rpc_lookup_replycall to nfs_mount_replycall to nfs_umountall_replycall to nfs_lookup_replycall to nfs_readlink_replycall to nfs_read_replycall to nfs3_get_attributes_offsetcall to store_blockcall to rpc_lookup_reqcall to nfs_mount_reqcall to nfs_umountall_reqcall to nfs_lookup_reqcall to nfs_read_reqcall to nfs_readlink_reqcall to rpc_add_credentialscall to rpc_reqcall to ping_sendcall to set_icmp_headercall to sntp_sendcall to tftp_init_load_addrcall to new_transfercall to tftp_sendcall to lmb_get_free_sizecall to restartcall to tftp_completecall to update_block_numbercall to load_blockcall to show_block_markercall to getcharcall to run_checkcall to fprintfcall to enable_warning_errorcall to disable_warning_errorcall to diecall to get_propertycall to check_msgcall to node_is_interrupt_providercall to propval_cellcall to get_node_by_phandlecall to prop_is_gpiocall to check_property_phandle_argscall to propval_cell_ncall to check_is_stringcall to get_node_by_pathcall to get_unitnamecall to __ctype_b_loccall to fdt32_to_cpucall to node_is_compatiblecall to check_is_string_listcall to get_node_by_refcall to data_insert_at_markercall to cpu_to_fdt32call to get_node_phandlecall to data_freecall to check_phandle_propcall to check_duplicate_labelcall to get_node_by_labelcall to get_property_by_labelcall to get_marker_labelcall to data_is_one_stringcall to check_nodes_propscall to data_append_markerscall to data_append_zeroescall to data_grow_forcall to data_append_datacall to data_append_integercall to cpu_to_fdt64call to cpu_to_fdt16call to feofcall to freadcall to ferrorcall to srcpos_verrorcall to srcfile_popcall to yypop_buffer_statecall to srcfile_pushcall to yypush_buffer_statecall to yy_create_buffercall to yy_delete_buffercall to yyfreecall to yy_init_globalscall to yyalloccall to yy_fatal_errorcall to yy_scan_buffercall to yy_scan_bytescall to yy_switch_to_buffercall to yyrealloccall to yy_load_buffer_statecall to yyensure_buffer_stackcall to yy_flush_buffercall to yy_init_buffercall to clearerrcall to yyrestartcall to srcpos_updatecall to push_input_filecall to data_copy_escape_stringcall to lexical_errorcall to srcpos_set_linecall to xstrdupcall to atoicall to pop_input_filecall to strtoullcall to fwritecall to yy_get_previous_statecall to yy_try_NUL_transcall to yy_get_next_buffercall to srcpos_errorcall to yylexcall to yy_symbol_printcall to yy_reduce_printcall to build_dt_infocall to guess_boot_cpuidcall to chain_reserve_entrycall to build_reserve_entrycall to add_labelcall to name_nodecall to merge_nodescall to add_orphan_nodecall to build_nodecall to delete_nodecall to chain_propertycall to build_propertycall to build_property_deletecall to data_mergecall to data_add_markercall to srcfile_relative_opencall to fseekcall to data_copy_filecall to fclosecall to data_append_bytecall to chain_nodecall to build_node_deletecall to yy_stack_printcall to yyerrorcall to yydestructcall to yy_symbol_value_printcall to __builtin_object_sizecall to __fread_unlocked_chkcall to __fread_unlocked_chk_warncall to getc_unlockedcall to __fread_unlocked_aliascall to __fread_chkcall to __fread_chk_warncall to __fread_aliascall to __fgets_chkcall to __fgets_chk_warncall to __fgets_aliascall to __vdprintf_chkcall to __dprintf_chkcall to __builtin_va_arg_packcall to __vfprintf_chkcall to __printf_chkcall to __fprintf_chkcall to __builtin___vsnprintf_chkcall to __builtin___snprintf_chkcall to __builtin___vsprintf_chkcall to __builtin___sprintf_chkcall to __builtin___memset_chkcall to __builtin___memmove_chkcall to __builtin___strncat_chkcall to __builtin___strcat_chkcall to __stpncpy_chkcall to __stpncpy_aliascall to __builtin___strncpy_chkcall to __builtin___strcpy_chkcall to __explicit_bzero_chkcall to __builtin___memcpy_chkcall to __builtin_bswap64call to __builtin_bswap32call to __builtin_bswap16call to strtodcall to __wcstombs_chkcall to __wcstombs_chk_warncall to __wcstombs_aliascall to __mbstowcs_chkcall to __mbstowcs_chk_warncall to __mbstowcs_aliascall to __wctomb_chkcall to __wctomb_aliascall to __ptsname_r_chkcall to __ptsname_r_chk_warncall to __ptsname_r_aliascall to __realpath_chkcall to __realpath_aliascall to __ctype_toupper_loccall to __ctype_tolower_loccall to __getdomainname_chkcall to __getdomainname_chk_warncall to __getdomainname_aliascall to __gethostname_chkcall to __gethostname_chk_warncall to __gethostname_aliascall to __getlogin_r_chkcall to __getlogin_r_chk_warncall to __getlogin_r_aliascall to __ttyname_r_chkcall to __ttyname_r_chk_warncall to __ttyname_r_aliascall to __getgroups_chkcall to __getgroups_chk_warncall to __getgroups_aliascall to __confstr_chkcall to __confstr_chk_warncall to __confstr_aliascall to __getwd_chkcall to __getwd_warncall to __getcwd_chkcall to __getcwd_chk_warncall to __getcwd_aliascall to __readlinkat_chkcall to __readlinkat_chk_warncall to __readlinkat_aliascall to __readlink_chkcall to __readlink_chk_warncall to __readlink_aliascall to __read_chkcall to __read_chk_warncall to __read_aliascall to srcfile_add_search_pathcall to util_versioncall to parse_checks_optioncall to util_usagecall to fopencall to guess_input_formatcall to guess_type_by_namecall to dt_from_sourcecall to dt_from_fscall to dt_from_blobcall to fill_fullpathscall to process_checkscall to generate_label_treecall to generate_fixups_treecall to generate_local_fixups_treecall to sort_treecall to dt_to_sourcecall to dt_to_blobcall to dt_to_asmcall to join_pathcall to inbuf_initcall to flat_read_mem_reservecall to flat_read_wordcall to unflatten_treecall to flat_read_stringcall to nodename_from_pathcall to flat_read_propertycall to add_propertycall to add_childcall to flat_read_chunkcall to fdt64_to_cpucall to add_reserve_entrycall to flat_read_stringtablecall to flat_realigncall to flat_read_datacall to emit_labelcall to asm_emit_cellcall to asm_emit_aligncall to flatten_treecall to dump_stringtable_asmcall to bin_emit_cellcall to flatten_reserve_listcall to make_fdt_headercall to data_append_aligncall to data_append_recall to stringtable_insertcall to emit_offset_labelcall to data_append_cellcall to read_fstreecall to lstatcall to any_local_fixup_treecall to generate_local_fixups_tree_internalcall to build_root_nodecall to any_fixup_treecall to generate_fixups_tree_internalcall to any_label_treecall to generate_label_tree_internalcall to add_local_fixup_entrycall to get_subnodecall to build_and_name_child_nodecall to append_to_propertycall to add_fixup_entrycall to xasprintfcall to data_copy_memcall to sort_reserve_entriescall to sort_nodecall to sort_propertiescall to sort_subnodescall to delete_propertycall to delete_labelscall to delete_property_by_namecall to delete_node_by_namecall to reverse_propertiescall to __fgets_unlocked_chkcall to __fgets_unlocked_chk_warncall to __fgets_unlocked_aliascall to __obstack_vprintf_chkcall to __vasprintf_chkcall to __obstack_printf_chkcall to __asprintf_chkcall to __builtin___stpcpy_chkcall to __builtin___mempcpy_chkcall to __pread64_chkcall to __pread64_chk_warncall to __pread64_aliascall to __pread_chkcall to __pread_chk_warncall to __pread_aliascall to srcpos_stringcall to get_dirnamecall to fopen_any_on_pathcall to try_opencall to write_tree_source_nodecall to write_prefixcall to write_propvalcall to isstringcall to write_propval_stringcall to write_propval_cellscall to write_propval_bytescall to yyparsecall to __builtin_va_arg_pack_lencall to __openat_too_many_argscall to __openat_missing_modecall to __openat_2call to __openat_aliascall to __open_too_many_argscall to __open_missing_modecall to __open_2call to __open_aliascall to util_is_printable_stringcall to utilfdt_write_errcall to utilfdt_read_lencall to utilfdt_read_err_lencall to get_oct_charcall to get_hex_charcall to cmd_ut_categorycall to clear_bloblistcall to ut_failfcall to bloblist_finishcall to bloblist_addcall to bloblist_ensurecall to bloblist_findcall to mallinfocall to run_bootm_testcall to ut_failcall to run_test_internalcall to gzipcall to adc_raw_to_uVcall to adc_channels_single_shotcall to adc_channel_single_shotcall to regulator_get_by_devnamecall to adc_channel_maskcall to audio_codec_set_paramscall to sandbox_get_codec_paramscall to axi_get_storecall to blk_get_from_parentcall to state_set_skip_delayscall to count_blk_devicescall to board_getcall to board_get_boolcall to board_detectcall to board_get_strcall to board_get_intcall to os_mprotect_allowcall to test_bus_parent_platdatacall to test_bus_parent_datacall to device_get_child_by_seqcall to device_get_child_by_of_offsetcall to device_get_childcall to list_count_itemscall to dm_check_devicescall to sandbox_clk_test_get_bulkcall to sandbox_clk_query_enablecall to sandbox_clk_test_enable_bulkcall to sandbox_clk_test_disable_bulkcall to sandbox_clk_test_release_bulkcall to sandbox_clk_query_ratecall to sandbox_clk_test_getcall to sandbox_clk_test_validcall to sandbox_clk_test_get_ratecall to sandbox_clk_test_set_ratecall to sandbox_clk_test_enablecall to sandbox_clk_test_disablecall to sandbox_clk_test_freecall to clk_get_by_index_nodevcall to clk_get_by_idcall to device_find_first_inactive_childcall to dm_remove_devices_flagscall to create_childrencall to uclass_destroycall to dm_leak_check_startcall to dm_leak_check_endcall to dm_check_operationscall to testfdt_pingcall to test_pingcall to cpu_probe_allcall to cpu_get_countcall to dma_get_by_namecall to dma_enablecall to dma_prepare_rcv_bufcall to dma_sendcall to dma_receivecall to dma_disablecall to dma_freecall to dma_memcpycall to sandbox_eth_set_tx_handlercall to sandbox_eth_set_privcall to sandbox_eth_recv_ping_reqcall to sb_check_ping_replycall to sandbox_eth_recv_arp_reqcall to sb_check_arp_replycall to _dm_test_net_retrycall to sandbox_eth_disable_responsecall to sandbox_eth_skip_timeoutcall to _dm_test_eth_rotate1call to _dm_test_eth_rotate2call to dm_test_gpiocall to dm_test_gpio_anoncall to dm_test_gpio_requestfcall to hwspinlock_lock_timeoutcall to hwspinlock_unlockcall to i2c_get_chip_for_busnumcall to sandbox_i2c_eeprom_set_offset_lencall to sandbox_i2c_eeprom_set_test_modecall to sandbox_i2c_set_test_modecall to sandbox_get_i2s_sumcall to sandbox_mbox_test_getcall to sandbox_mbox_test_recvcall to sandbox_mbox_test_sendcall to sandbox_mbox_test_freecall to misc_writecall to misc_readcall to misc_callcall to misc_ioctlcall to misc_set_enabledcall to dev_read_next_subnodecall to ofnode_by_prop_valuecall to video_osd_get_infocall to sandbox_osd_get_memcall to splitcall to print_memcall to sandbox_pwm_get_configcall to panel_enable_backlightcall to panel_set_backlightcall to pch_ioctlcall to pch_get_spi_basecall to sandbox_get_pch_spi_protectcall to pch_set_spi_protectcall to pch_get_gpio_basecall to pch_get_io_basecall to dm_pci_find_ext_capabilitycall to pci_ep_write_headercall to pci_ep_read_headercall to pci_ep_set_msicall to pci_ep_get_msicall to pci_ep_set_msixcall to pci_ep_get_msixcall to pci_ep_set_barcall to pci_ep_read_barcall to pci_ep_raise_irqcall to sandbox_get_pci_ep_irq_countcall to generic_phy_get_by_namecall to generic_phy_initcall to generic_phy_power_oncall to generic_phy_power_offcall to generic_phy_exitcall to generic_phy_resetcall to power_pmic_getcall to sandbox_power_domain_querycall to sandbox_power_domain_test_getcall to sandbox_power_domain_test_oncall to sandbox_power_domain_test_offcall to sandbox_power_domain_test_freecall to ram_get_infocall to regmap_update_bitscall to syscon_get_first_rangecall to syscon_node_to_regmapcall to regulator_list_autosetcall to regulator_set_enable_if_allowedcall to rproc_elf32_sanity_checkcall to rproc_elf32_load_imagecall to sandbox_reset_querycall to sandbox_reset_test_get_bulkcall to sandbox_reset_test_assert_bulkcall to sandbox_reset_test_deassert_bulkcall to sandbox_reset_test_release_bulkcall to sandbox_reset_test_getcall to sandbox_reset_test_assertcall to sandbox_reset_test_deassertcall to sandbox_reset_test_freecall to reset_get_by_index_nodevcall to sandbox_i2c_rtc_set_offsetcall to cmp_timescall to sandbox_i2c_rtc_get_set_base_timecall to serial_setconfigcall to serial_getconfigcall to serial_getinfocall to sandbox_sf_unbind_emulcall to os_write_filecall to spl_flash_get_sw_write_protcall to sandbox_sf_set_block_protectcall to smem_alloccall to smem_get_free_spacecall to smem_getcall to sandbox_get_beep_frequencycall to sandbox_set_allow_beepcall to sandbox_get_setup_calledcall to sandbox_get_sound_sumcall to device_has_childrencall to syscon_regmap_lookup_by_phandlecall to sysreset_get_last_walkcall to test_teecall to open_sessioncall to tee_shm_registercall to tee_shm_is_registeredcall to dev_read_s32call to dev_read_s32_defaultcall to dev_read_u32ucall to device_find_first_child_by_uclasscall to device_find_child_by_namecall to dev_enable_by_pathcall to dev_disable_by_pathcall to device_is_compatiblecall to dev_remap_addr_namecall to dev_remap_addrcall to devfdt_remap_addr_namecall to devfdt_remap_addrcall to dev_translate_dma_addresscall to check_devicescall to fdtdec_get_addrcall to dm_test_maincall to dm_do_testcall to dm_test_run_on_flattreecall to dm_test_initcall to do_autoprobecall to dm_test_destroycall to sandbox_usb_keyb_add_stringcall to count_usb_devicescall to compress_frame_buffercall to read_filecall to check_vidconsole_outputcall to select_vidconsolecall to BZ2_bzBuffToBuffCompresscall to virtio_del_vqscall to wdt_stopcall to htab_fillcall to htab_create_deletecall to htab_check_fillcall to test_get_unreserved_sizecall to check_lmbcall to test_alloc_addrcall to test_noreservedcall to test_bigblockcall to test_multi_alloc_512mb_x2call to test_multi_alloc_512mbcall to test_multi_alloccall to init_buffercall to test_memmovecall to test_memsetcall to log_testcall to log_uc_catcall to log_add_filtercall to log_runcall to log_remove_filtercall to ut_fdt_getprop_u32call to ut_fdt_getprop_u32_by_indexcall to fdt_getprop_strcall to efi_ut_printcall to guid_ut_printcall to test_get_timercall to test_timer_get_uscall to test_time_comparisoncall to test_udelaycall to unicode_test_u16_strcmpcall to u16_strcpycall to __swahb32pcall to __swahw32pcall to __fswahb32call to __fswahw32call to __arch_swab64call to __arch_swab32call to OPENSSL_sk_set_cmp_funccall to OPENSSL_sk_deep_copycall to OPENSSL_sk_dupcall to OPENSSL_sk_is_sortedcall to OPENSSL_sk_sortcall to OPENSSL_sk_find_excall to OPENSSL_sk_findcall to OPENSSL_sk_setcall to OPENSSL_sk_insertcall to OPENSSL_sk_pop_freecall to OPENSSL_sk_shiftcall to OPENSSL_sk_popcall to OPENSSL_sk_unshiftcall to OPENSSL_sk_pushcall to OPENSSL_sk_delete_ptrcall to OPENSSL_sk_deletecall to OPENSSL_sk_zerocall to OPENSSL_sk_freecall to OPENSSL_sk_reservecall to OPENSSL_sk_new_reservecall to OPENSSL_sk_new_nullcall to OPENSSL_sk_newcall to OPENSSL_sk_valuecall to OPENSSL_sk_numcall to ais_alloc_buffercall to getlinecall to strtok_rcall to get_cfg_valuecall to ais_insert_cmd_headercall to ais_copy_imagecall to fstatcall to get_ais_table_idcall to strtoulcall to atmel_parse_pmecc_paramscall to atmel_print_pmecc_headercall to atmel_find_pmecc_parameter_in_tokencall to bootm_host_load_imagecall to image_get_host_blobcall to ctimecall to imagetool_save_subimagecall to imagetool_get_source_datecall to optee_image_get_load_addrcall to image_set_magiccall to image_set_timecall to image_set_sizecall to image_set_loadcall to image_set_epcall to image_set_dcrccall to image_set_oscall to image_set_archcall to image_set_typecall to image_set_compcall to image_set_namecall to getoptcall to usagecall to imagetool_get_typecall to dumpimage_extract_subimagecall to imagetool_verify_print_headercall to scan_argscall to isattycall to value_addcall to do_fdtgrepcall to utilfdt_readcall to fdtgrep_find_regionscall to report_errorcall to show_region_listcall to display_fdt_by_regionscall to dump_fdt_regionscall to fdt_remove_unused_stringscall to fdt_first_regioncall to fdt_add_alias_regionscall to check_type_includecall to print_ansi_colourcall to utilfdt_print_datacall to mmap_fdtcall to image_set_host_blobcall to fit_check_signcall to ftruncatecall to fit_get_subimage_countcall to fit_image_extractcall to fit_buildcall to systemcall to fit_import_datacall to fit_add_file_datacall to fit_extract_datacall to renamecall to fit_calc_sizecall to fit_build_fdtcall to fdt_property_strfcall to fit_write_imagescall to fit_write_configscall to genimg_get_type_short_namecall to get_basenamecall to genimg_get_arch_short_namecall to genimg_get_os_short_namecall to genimg_get_comp_short_namecall to fdt_property_filecall to imagetool_get_filesizecall to fit_set_timestampcall to fit_add_verification_datacall to __openat64_too_many_argscall to __openat64_missing_modecall to __openat64_2call to __openat64_aliascall to __open64_too_many_argscall to __open64_missing_modecall to __open64_2call to __open64_aliascall to getpidcall to print_usagecall to process_maccall to tolowercall to nibble_to_hexcall to to_be32call to gph_set_headercall to gph_print_headercall to gph_verify_headercall to ifwi_parsecall to ifwi_repackcall to buffer_seekcall to buffer_set_sizecall to find_type_by_namecall to buffer_sizecall to ifwi_dir_replacecall to ifwi_raw_replacecall to parse_subpart_dircall to buffer_getcall to buffer_from_filecall to alloc_buffercall to buffer_deletecall to calc_checksumcall to subpart_dir_fixup_write_buffercall to ifwi_raw_addcall to bpdt_print_headercall to bpdt_print_entriescall to ifwi_dir_extractcall to ifwi_raw_extractcall to buffer_write_filecall to buffer_splicecall to ifwi_dir_addcall to init_manifest_headercall to init_signed_pkg_info_extcall to create_subpartcall to init_subpart_dir_headercall to init_subpart_dir_entrycall to print_subpart_dircall to fix_membercall to strftimecall to bpdt_resetcall to bpdt_entries_init_header_ordercall to bpdt_entries_init_pack_ordercall to ifwi_writecall to find_entry_by_typecall to bpdt_writecall to bpdt_fixup_write_buffercall to pad_buffercall to __bpdt_resetcall to read_at_le32call to alloc_bpdt_buffercall to parse_sbpdtcall to read_membercall to validate_subpart_dir_without_checksumcall to subpart_dir_sizecall to validate_subpart_dir_with_checksumcall to validate_subpart_dircall to bpdt_read_headercall to get_bpdt_sizecall to bpdt_read_entriescall to read_subpart_bufcall to __find_entry_by_typecall to bpdt_validate_headercall to write_at_le8call to write_at_le16call to write_at_le32call to write_at_le64call to read_at_le8call to read_at_le16call to read_at_le64call to write_le64call to write_le32call to read_le64call to read_le32call to write_le16call to write_le8call to read_le16call to write_at_ble8call to write_ble8call to read_at_ble8call to read_ble8call to buffer_createcall to get_file_sizecall to buffer_get_original_backingcall to buffer_offsetcall to ftellcall to bootm_host_load_imagescall to fit_image_add_verification_datacall to fit_config_add_verification_datacall to fit_config_process_sigcall to fit_config_get_datacall to fit_image_setup_sigcall to fit_image_write_sigcall to fit_config_get_hash_listcall to strlist_freecall to strlist_initcall to strlist_addcall to fit_config_get_image_listcall to fit_image_process_hashcall to fit_image_process_sigcall to fit_set_hash_valuecall to getenvcall to gmtimecall to ConvertELFcall to ExtractNumbercall to ExtractBlockcall to ExtractWordcall to ExtractLongcall to BuildSRecordcall to WriteHexcall to ExtractHexcall to ExtractDecimalcall to parse_cfg_filecall to build_containercall to set_imx_hdr_v3call to get_container_image_start_poscall to check_filecall to set_image_array_entrycall to set_containercall to copy_filecall to flatten_container_headercall to copy_file_alignedcall to set_image_hashcall to read_dcd_offsetcall to popencall to fgetscall to pclosecall to parse_cfg_fldcall to parse_cfg_cmdcall to build_imagecall to fill_zerocall to generate_ivt_for_fitcall to dump_header_v2call to set_hdr_funccall to detect_imximage_versioncall to print_hdr_v1call to print_hdr_v2call to err_imximage_versioncall to copy_plugin_codecall to rewindcall to image_create_config_parsecall to image_get_versioncall to image_headersz_v1call to kwbimage_header_sizecall to main_hdr_checksum_okcall to image_versioncall to image_checksum8call to image_boot_mode_namecall to image_create_v0call to image_create_v1call to image_checksum32call to image_find_optioncall to image_create_config_parse_onelinecall to recognize_keywordcall to image_boot_mode_idcall to image_nand_ecc_mode_idcall to baudrate_to_optioncall to add_binary_header_v1call to filenocall to image_count_optionscall to getcwdcall to __recvfrom_chkcall to __recvfrom_chk_warncall to __recvfrom_aliascall to __recv_chkcall to __recv_chk_warncall to __recv_aliascall to OPENSSL_LH_doallcall to OPENSSL_LH_set_down_loadcall to OPENSSL_LH_get_down_loadcall to OPENSSL_LH_stats_biocall to OPENSSL_LH_node_usage_stats_biocall to OPENSSL_LH_node_stats_biocall to OPENSSL_LH_num_itemscall to OPENSSL_LH_errorcall to OPENSSL_LH_retrievecall to OPENSSL_LH_deletecall to OPENSSL_LH_insertcall to OPENSSL_LH_freecall to OPENSSL_LH_newcall to rsa_engine_initcall to rsa_get_pub_keycall to rsa_get_paramscall to BN_num_bitscall to fdt_add_bignumcall to BN_freecall to RSA_freecall to rsa_engine_removecall to BN_newcall to BN_CTX_newcall to BN_set_wordcall to BN_expcall to BN_divcall to BN_get_wordcall to BN_rshiftcall to rsa_get_exponentcall to RSA_get0_keycall to BN_copycall to BN_mod_inversecall to BN_subcall to BN_mulcall to BN_dupcall to BN_mask_bitscall to rsa_initcall to rsa_get_priv_keycall to rsa_sign_with_keycall to rsa_removecall to EVP_PKEY_newcall to rsa_errcall to EVP_PKEY_set1_RSAcall to EVP_PKEY_sizecall to EVP_MD_CTX_newcall to EVP_MD_CTX_resetcall to EVP_PKEY_CTX_newcall to EVP_DigestSignInitcall to RSA_pkey_ctx_ctrlcall to EVP_DigestUpdatecall to EVP_DigestSignFinalcall to EVP_MD_CTX_freecall to EVP_PKEY_freecall to ENGINE_finishcall to ENGINE_freecall to ENGINE_load_builtin_enginescall to ENGINE_by_idcall to ENGINE_initcall to ENGINE_set_default_RSAcall to OPENSSL_init_sslcall to rsa_engine_get_priv_keycall to rsa_pem_get_priv_keycall to ENGINE_get_idcall to ENGINE_load_private_keycall to EVP_PKEY_get1_RSAcall to PEM_read_RSAPrivateKeycall to rsa_engine_get_pub_keycall to rsa_pem_get_pub_keycall to ENGINE_load_public_keycall to PEM_read_X509call to X509_get_pubkeycall to X509_freecall to ERR_error_stringcall to ERR_get_errorcall to print_hdr_bytecall to __xpg_basenamecall to xstrtolcall to creatcall to process_argscall to imagetool_verify_print_header_by_typecall to pbl_load_ubootcall to zynqmpbif_copy_imagecall to imx8image_copy_imagecall to imx8mimage_copy_imagecall to fdatasynccall to show_valid_optionscall to add_contentcall to genimg_get_cat_countcall to genimg_get_cat_desccall to genimg_get_cat_short_namecall to genimg_get_cat_namecall to mtk_image_set_nand_headercall to mtk_image_set_gen_headercall to put_brom_layout_headercall to put_ghf_headercall to put_hashcall to put_ghf_common_headercall to mtk_image_verify_nand_headercall to mtk_image_verify_gen_headercall to mtk_brom_parse_imagenamecall to sb_build_tree_from_cfgcall to sb_encrypt_imagecall to sb_build_imagecall to sb_free_imagecall to mxsimage_verify_print_headercall to sb_build_tree_from_imgcall to sb_verify_image_headercall to sb_verify_sections_cmdscall to sb_verify_image_endcall to soprintfcall to sb_aes_deinitcall to EVP_DigestFinalcall to sb_aes_reinitcall to sb_aes_cryptcall to sb_encrypt_sb_sections_headercall to sb_decrypt_key_dictionary_keycall to sb_verify_commandscall to sb_decrypt_tagcall to sb_verify_commandcall to sb_command_checksumcall to pbl_crc32call to EVP_DigestInitcall to EVP_sha1call to sb_aes_initcall to sb_encrypt_sb_headercall to sb_get_timecall to sb_load_cmdfilecall to sb_prefill_image_headercall to sb_postfill_image_headercall to sb_fixup_sections_and_tagscall to sb_parse_linecall to sb_build_dcdcall to sb_build_sectioncall to sb_build_command_nopcall to sb_build_command_tagcall to sb_build_command_loadcall to sb_build_command_fillcall to sb_build_command_jumpcall to sb_build_command_callcall to sb_build_command_modecall to sb_build_dcd_blockcall to sb_get_timestampcall to sb_build_command_jump_callcall to sb_token_to_longcall to sb_hab_ivt_headercall to sb_load_filecall to sb_grow_dcdcall to sb_encrypt_key_dictionary_keycall to sb_encrypt_tagcall to gmtime_rcall to mktimecall to EVP_CIPHER_CTX_resetcall to EVP_CipherUpdatecall to EVP_CIPHER_CTX_newcall to EVP_CipherInitcall to EVP_aes_128_cbccall to EVP_CIPHER_CTX_set_paddingcall to toc_offsetcall to omapimage_print_sectioncall to make_crc_tablecall to reverse_bytecall to pbl_parsercall to load_ubootcall to add_end_cmdcall to check_get_hexvalcall to generate_pbl_cmdcall to pbl_fgetcall to outfcall to prof_toolcall to read_map_filecall to read_profile_filecall to read_trace_config_filecall to check_functionscall to make_ftracecall to find_func_by_offsetcall to out_funccall to read_trace_configcall to regcompcall to regex_report_errorcall to check_trace_configcall to check_trace_config_linecall to regexeccall to regerrorcall to read_profilecall to read_system_mapcall to read_datacall to read_callscall to h_cmp_offsetcall to bsearchcall to rc4_encodecall to rkcommon_parse_headercall to rkcommon_get_spl_infocall to rkcommon_offset_to_spicall to rkcommon_get_spl_sizecall to rkcommon_set_header0call to rkcommon_get_spl_hdrcall to rkcommon_need_rc4_splcall to rkcommon_rc4_encode_splcall to rkcommon_vrec_headercall to rkcommon_set_headercall to sfp_set_headercall to sfp_fake_header_sizecall to sfp_sign_buffercall to sfp_vrec_headercall to sfp_pad_sizecall to sfp_verify_buffercall to sfp_verify_headercall to sfp_build_headercall to sfp_hdr_checksumcall to sfp_hdr_sizecall to stm32image_default_headercall to stm32image_checksumcall to print_hdrcall to vybridimage_print_hdr_fieldcall to vybridimage_sw_ecccall to zynqimage_default_headercall to zynqimage_parse_initparamscall to zynqimage_checksumcall to fscanfcall to bif_initcall to read_full_filecall to skip_whitespacecall to find_flagcall to bif_fsbl_configcall to get_file_typecall to zynqmp_csumcall to bif_open_filecall to elf2flat32call to elf2flat64call to bif_add_partcall to bif_add_pmufwcall to bif_add_blobcall to zynqmpimage_default_headercall to fsizecall to zynqmpimage_pmufwcall to zynqmpimage_parse_initparamscall to zynqmpimage_checksumcall to print_partitioncall to expressionthrow ...(vacuous destructor call)param accessaccess to array... ? ... : ...... = ...... |= ...... += ...... -= ...... &= ...... >>= ...... /= ...... <<= ...... ^= ...... *= ...... %= ...(condition decl)(const char *)...(unsigned int)...(ulong)...(unsigned long)...(u64)...(__be32)...(__u32)...(unsigned long long)...(void *)...(device_node *)...(bool)...(u32 *)...(const device_node *)...(long)...(int)...(gfp_t)...(size_t)...(const udevice *)...(phys_addr_t)...(long long)...(const void *)...(u8 *)...(sandbox_mapmem_entry *)...(log_category_t)...(log_level_t)...(udevice *)...(uint)...(uint8_t *)...(const list_head *)...(char *)...(const uint8_t *)...(cmsghdr *)...(unsigned char *)...(unsigned char)...(char)...(char **)...(unsigned short)...(sockaddr *)...(socklen_t *)...(udphdr *)...(iphdr *)...(sa_family_t)...(const sockaddr *)...(socklen_t)...(sockaddr_in *)...(in_addr_t)...(sockaddr_ll *)...(__uint16_t)...(if_nameindex *)...(sandbox_eth_raw_if_nameindex *)...(const hlist_node *)...(hlist_node *)...(hlist_node **)...(list_head *)...(time_t *)...(const time_t *)...(char *const *)...(__mode_t)...(os_dirent_node *)...(os_dirent_t)...(option *)...(int *)...(const option *)...(timezone *)...(uint64_t)...(__useconds_t)...(os_mem_hdr *)...(__off_t)...(tcflag_t)...(const termios *)...(off_t)...(Uint16)...(Uint8)...(Uint32)...(SDL_AudioSpec *)...(const Uint8 *)...(SDL_Rect *)...(__kernel_size_t)...(state_terminal_raw)...(void)...(sysreset_t)...(sandbox_state_io *)...(const fdt_header *)...(bootstage_id)...(uint32_t *)...(__le32)...(arm_z_header *)...(pci_size_t)...(dm_pci_emul_ops *)...(uclass_id)...(phys_size_t)...(..(*)(..))...(AvbOpsData *)...(uintptr_t)...(AvbSlotVerifyFlags)...(AvbHashtreeErrorMode)...(AvbSlotVerifyResult)...(avb_boot_state)...(s64)...(axi_size_t)...(u32)...(const bd_t *)...(const driver *)...(ulong *)...(bmp_image *)...(__le16)...(__u16)...(efi_mem_desc *)...(efi_hii_string_block *)...(u16)...(efi_device_path *)...(uint32_t)...(efi_handle_t)...(const efi_device_path *)...(u16 *)...(efi_status_t)...(image_header_t *)...(lmb *)...(void **)...(u64 *)...(uint64_t *)...(const mtd_info *)...(nand_chip *)...(const nand_sdr_timings *)...(size_t *)...(const u_char *)...(const andr_img_hdr *)...(uint8_t)...(stdio_dev *)...(cmd_tbl_t *)...(cpu_platdata *)...(u8)...(ec_reboot_cmd)...(ec_flash_region)...(lbaint_t)...(ethsw_keyword_id)...(const ethsw_command_def *)...(const int *)...(const u8 *)...(usb_init_type)...(const device *)...(usb_gadget *)...(proto_t)...(const cmd_tbl_t *)...(blk_desc *)...(loff_t)...(const fdt_property *)...(const __be32 *)...(fdt32_t *)...(fdt_header *)...(unsigned int *)...(gpio_cmd)...(udevice **)...(const char **)...(disk_partition_t *)...(disk_part *)...(gpt_header *)...(gpt_entry *)...(uchar)...(host_block_dev *)...(dm_i2c_chip *)...(uchar *)...(i2c_err_op)...(const unsigned char *)...(u_char *)...(if_type)...(iotrace_record *)...(op_tbl_t *)...(const op_tbl_t *)...(led_state_t)...(led_uc_plat *)...(phy_device *)...(vu_long *)...(volatile u64 *)...(volatile u32 *)...(volatile u16 *)...(volatile u8 *)...(phy_interface_t)...(const ushort *)...(ushort)...(mtdids *)...(part_info *)...(mtd_device *)...(mtd_info *)...(__be16)...(ACTION)...(ENTRY *)...(env_t *)...(env_flags_vartype)...(env_clbk_tbl *)...(ssize_t)...(const efi_guid_t *)...(efi_guid_t *)...(cmd_part_info)...(pci_controller *)...(const pci_region *)...(pci_child_platdata *)...(uc_pmic_priv *)...(pxe_menu *)...(pxe_label *)...(menu *)...(lex_state)...(token_type)...(unsigned long *)...(uint16_t)...(dm_regulator_uclass_platdata *)...(dm_rproc_ops *)...(const dm_rproc_ops *)...(dm_rproc_uclass_pdata *)...(rproc_mem_type)...(const slre *)...(ushort *)...(spi_nor *)...(tpm_chip_priv *)...(tpm_version)...(tpm_startup_type)...(tpm2_yes_no)...(tpm2_startup_types)...(usb_device *)...(__virtio64)...(__virtio32)...(__virtio16)...(virtio_dev_priv *)...(__u64)...(__le64)...(__be64)...(const disk_partition_t *)...(bootloader_control *)...(const slot_metadata *)...(AvbOps *)...(AvbIOResult)...(tee_version_data *)...(tee_param *)...(mmc_io_type)...(mmc_part *)...(bloblist_hdr *)...(bloblist_rec *)...(bootstage_data *)...(gd_t *)...(bd_t *)...(init_fnc_t)...(const init_fnc_t *)...(device_node **)...(fit_load_op)...(boot_os_fn *)...(const image_header_t *)...(const ulong *)...(optee_header *)...(bootstage_hdr *)...(const bootstage_hdr *)...(const bootstage_data *)...(const bootstage_record *)...(bootstage_record *)...(variables *)...(pipe_style)...(p_context *)...(child_prog *)...(pipe *)...(reserved_style)...((unnamed enum))...(command_ret_t)...(env_op)...(mbinptr)...(mchunkptr)...(ptrdiff_t)...(signed int)...(malloc_chunk *)...(edid_detailed_timing *)...(edid1_info *)...(const display_timing *)...(edid_cea861_info *)...(display_flags)...(jt_funcs *)...(fdt32_t)...(const fdt32_t *)...(const fdt64_t *)...(fdt_status)...(of_bus *)...(fdt64_t *)...(const uchar *)...(uint16_t *)...(sha256_context *)...(sha1_context *)...(const image_header *)...(andr_img_hdr *)...(const void **)...(time_t)...(const uint32_t *)...(const image_region *)...(image_region *)...(padding_algo *)...(crypto_algo *)...(checksum_algo *)...(fit_loadable_tbl *)...(const table_entry_t *)...(SizeT)...(global_data *)...(stdio_dev **)...(iotrace_flags)...(log_driver *)...(log_device *)...(log_filter *)...(volatile long *)...(menu_item *)...(mii_dev *)...(splash_storage)...(splash_flags)...(__u8)...(usb_device_descriptor *)...(usb_interface *)...(usb_config_descriptor *)...(usb_descriptor_header *)...(usb_interface_descriptor *)...(devrequest *)...(usb_endpoint_descriptor *)...(usb_hub_device *)...(usb_hub_descriptor *)...(short)...(usb_hub_status *)...(usb_device_scan *)...(usb_port_status *)...(usb_device_speed)...(driver *)...(usb_kbd_pdata *)...(us_data *)...(umass_bbb_csw *)...(umass_bbb_cbw *)...(cyg_int32)...(part_driver *)...(lba512_t)...(partition_block *)...(block_header *)...(amiga_part_geometry *)...(bootcode_block *)...(rigid_disk_block *)...(s32 *)...(dos_partition_t *)...(const blk_desc *)...(legacy_mbr *)...(sig_type)...(dos_partition *)...(efi_char16_t)...(iso_pri_rec_t *)...(iso_boot_rec_t *)...(unsigned short *)...(iso_val_entry_t *)...(iso_init_def_entry_t *)...(mac_driver_desc_t *)...(mac_partition_t *)...(adc_uclass_platdata *)...(const adc_ops *)...(sandbox_adc_priv *)...(ahci_ops *)...(axi_emul_ops *)...(axi_ops *)...(sandbox_store_priv *)...(blk_ops *)...(const blk_ops *)...(block_cache_node *)...(const pci_device_id *)...(board_ops *)...(board_sandbox_priv *)...(bootcount_ops *)...(bootcount_rtc_priv *)...(const clk_div_table *)...(clk *)...(clk_divider *)...(const clk *)...(unsigned long long *)...(clk_fixed_factor *)...(clk_mux *)...(const clk_ops *)...(clk_fixed_rate *)...(sandbox_clk_priv *)...(device *)...(sandbox_pllv3_type)...(clk_gate2 *)...(clk_pllv3 *)...(sandbox_clk_test *)...(clk_pfd *)...(imx_pllv3_type)...(uclass *)...(devres *)...(const unsigned long long(*)[])...(uclass **)...(fdt_addr_t)...(fdt_size_t *)...(driver_info *)...(const driver_info *)...(uclass_driver *)...(alias_prop *)...(property *)...(of_phandle_args *)...(const property *)...(const __be64 *)...(resource_size_t)...(const fdt_addr_t *)...(s32)...(fmap_compress_t)...(fmap_hash_t)...(fdt_size_t)...(fdtdec_phandle_args *)...(const u16 *)...(const u32 *)...(regmap_endianness_t)...(regmap *)...(simple_bus_plat *)...(syscon_uc_info *)...(cpu_ops *)...(const mod_exp_ops *)...(shape_data *)...(dm_demo_pdata *)...(const gpio_desc *)...(const dm_demo_pdata *)...(const demo_ops *)...(const dma_ops *)...(dma_dev_priv *)...(dma_ops *)...(sandbox_dma_dev *)...(dma_direction)...(gpio_dev_priv *)...(dm_gpio_ops *)...(pm8916_gpio_bank *)...(gpio_state *)...(const hwspinlock_ops *)...(cros_ec_i2c_bus *)...(i2c_emul_uc_platdata *)...(i2c_gpio_bus *)...(i2c_priv *)...(dm_i2c_bus *)...(dm_i2c_ops *)...(dm_i2c_chip_flags)...(i2c_arbitrator_priv *)...(i2c_mux *)...(i2c_mux_ops *)...(i2c_mux_bus *)...(sandbox_i2c_priv *)...(cros_ec_keyb_priv *)...(keyboard_priv *)...(i8042_kbd_priv *)...(keyboard_ops *)...(led_ops *)...(led_gpio_priv *)...(mbox_ops *)...(sandbox_mbox_test *)...(sandbox_mbox *)...(cros_ec_dev *)...(uint8_t **)...(ec_params_flash_write *)...(dm_cros_ec_ops *)...(ec_current_image)...(ec_response_get_comms_status *)...(ec_host_response *)...(ec_host_request *)...(ec_host_request_i2c *)...(ec_host_response_i2c *)...(ec_state *)...(const ec_params_hello *)...(ec_response_hello *)...(ec_response_get_version *)...(const ec_params_vbnvcontext *)...(ec_response_vbnvcontext *)...(const ec_params_reboot_ec *)...(ec_response_host_event_mask *)...(const ec_params_vboot_hash *)...(ec_response_vboot_hash *)...(const ec_params_flash_protect *)...(ec_response_flash_protect *)...(const ec_params_flash_region_info *)...(ec_response_flash_region_info *)...(const ec_params_flash_erase *)...(const ec_params_flash_write *)...(const ec_keymatrix_entry *)...(ec_keymatrix_entry *)...(spi_slave *)...(i2c_eeprom *)...(const i2c_eeprom_ops *)...(sandbox_i2c_flash *)...(sandbox_i2c_flash_plat_data *)...(sandbox_i2c_eeprom_test_mode)...(const misc_ops *)...(misc_sandbox_priv *)...(pwrseq_ops *)...(fw_cfg_arch_ops *)...(fw_file *)...(swap_case_priv *)...(swap_case_op)...(swap_case_platdata *)...(mmc_uclass_priv *)...(dm_mmc_ops *)...(mmc *)...(bus_mode)...(mmc_data *)...(uint *)...(__be32 *)...(sandbox_mmc_plat *)...(const mmc_config *)...(rb_node *)...(ubi_vid_hdr *)...(u_char)...(sandbox_spi_flash_plat_data *)...(sandbox_spi_flash *)...(sandbox_sf_state)...(dm_spi_slave_platdata *)...(dm_spi_flash_ops *)...(spi_nor_protocol)...(const flash_info *)...(const spi_nor_flash_parameter *)...(const spi_nor_hwcaps *)...(const spi_mem_op *)...(spi_mem_data_dir)...(mdio_mux_sandbox_priv *)...(mdio_ops *)...(mdio_sandbox_priv *)...(net_loop_state)...(phy_driver *)...(eth_sandbox_raw_priv *)...(eth_pdata *)...(arp_hdr *)...(const eth_sandbox_raw_priv *)...(ethernet_hdr *)...(eth_sandbox_priv *)...(ip_udp_hdr *)...(icmp_hdr *)...(__u32 *)...(nvme_dev *)...(nvme_bar *)...(nvme_queue **)...(volatile __le64 *)...(nvme_ns *)...(nvme_id_ns *)...(dma_addr_t)...(nvme_id_ctrl *)...(s16)...(nvme_queue *)...(nvme_completion *)...(nvme_command *)...(pch_ops *)...(pch_req_t)...(sandbox_pch_priv *)...(sandbox_pci_emul_priv *)...(pci_addr_t)...(pci_region *)...(fdt_pci_space)...(pci_driver_entry *)...(dm_pci_ops *)...(video_priv *)...(video_uc_platdata *)...(video_log2_bpp)...(pci_rom_header *)...(pci_rom_data *)...(sandbox_pci_priv *)...(pci_ep_ops *)...(pci_bar *)...(sandbox_pci_ep_priv *)...(const phy_ops *)...(phy_ops *)...(sandbox_phy_priv *)...(pinctrl_ops *)...(const pinctrl_ops *)...(power_domain_ops *)...(sandbox_power_domain_test *)...(sandbox_power_domain *)...(sandbox_i2c_pmic_plat_data *)...(pm8916_priv *)...(const dm_pmic_ops *)...(rk8xx_priv *)...(regulator_type)...(regulator_common_platdata *)...(pfuze100_regulator_platdata *)...(dm_regulator_mode *)...(pfuze100_regulator_desc *)...(const dm_regulator_ops *)...(s8)...(s5m8767_regnum)...(pwm_ops *)...(sandbox_pwm_priv *)...(ram_ops *)...(Elf32_Ehdr *)...(Elf32_Phdr *)...(rproc_ops)...(sandbox_test_devdata *)...(sandbox_state)...(reset_ctl *)...(reset_ops *)...(sandbox_reset_test *)...(sandbox_reset *)...(sandbox_i2c_rtc_plat_data *)...(const rtc_time *)...(rtc_ops *)...(scsi_cmd *)...(sandbox_serial_platdata *)...(serial_chip_type)...(adr_space_type)...(sandbox_serial_priv *)...(serial_dev_priv *)...(dm_serial_ops *)...(smem_ops *)...(audio_codec_ops *)...(i2s_ops *)...(sandbox_sound_priv *)...(sound_uc_priv *)...(i2s_uc_priv *)...(sandbox_i2s_priv *)...(sandbox_codec_priv *)...(sound_ops *)...(dm_spi_emul_ops *)...(dm_spi_ops *)...(dm_spi_bus *)...(sandbox_spmi_priv *)...(const dm_spmi_ops *)...(sysreset_ops *)...(sandbox_tee_state *)...(ta_entry *)...(const ta_entry *)...(tee_uclass_priv *)...(tee_shm *)...(const tee_driver_ops *)...(timer_dev_priv *)...(const timer_ops *)...(tpm_ops *)...(sandbox_tpm2 *)...(tpm2_hierarchy)...(tpm_state *)...(tpm_permanent_flags *)...(usb_dr_mode)...(sandbox_flash_priv *)...(sandbox_flash_plat *)...(cmd_phase)...(const scsi_cmd *)...(scsi_inquiry_resp *)...(scsi_read_capacity_resp *)...(scsi_read10_req *)...(sandbox_hub_platdata *)...(usb_emul_platdata *)...(sandbox_hub_priv *)...(usb_device_descriptor **)...(sandbox_keyb_priv *)...(sandbox_keyb_plat *)...(usb_dev_platdata *)...(usb_generic_descriptor **)...(dm_usb_ops *)...(sandbox_usb_ctrl *)...(usb_bus_priv *)...(const usb_device_id *)...(usb_driver_entry *)...(const usb_device_descriptor *)...(const usb_interface_descriptor *)...(usb_platdata *)...(ehci_ctrl *)...(usb_uclass_priv *)...(int_queue *)...(backlight_ops *)...(const backlight_ops *)...(vidconsole_priv *)...(stbtt_uint8 *)...(stbtt_uint32)...(const stbtt_uint8 *)...(stbtt_int32)...(stbtt_uint16)...(double)...(float)...(stbrp_rect *)...(stbrp_context *)...(const stbtt_fontinfo *)...(stbrp_coord)...(stbtt_int16)...(stbrp_node *)...(stbtt__point *)...(stbtt__edge *)...(float *)...(stbtt__active_edge *)...(stbtt__hheap_chunk *)...(stbtt_vertex *)...(stbtt_uint8)...(stbtt_int8 *)...(console_tt_priv *)...(panel_ops *)...(pwm_backlight_priv *)...(sandbox_osd_priv *)...(sandbox_sdl_plat *)...(simple_panel_priv *)...(vidconsole_ops *)...(bmp_color_table_entry *)...(ushort **)...(video_osd_ops *)...(dm_virtio_ops *)...(virtio_blk_priv *)...(virtio_mmio_priv *)...(virtqueue *)...(virtio_net_priv *)...(virtio_pci_priv *)...(volatile void *)...(const volatile void *)...(virtio_pci_common_cfg *)...(vring_desc *)...(vring_avail *)...(vring_used *)...(const virtqueue *)...(__virtio16 *)...(virtio_sandbox_priv *)...(w1_gpio_pdata *)...(const w1_ops *)...(w1_device *)...(w1_bus *)...(const w1_eeprom_ops *)...(const wdt_ops *)...(regex_callback_priv *)...(env_operation)...(env_driver *)...(env_location)...(env_flags_varaccess)...(btrfs_key *)...(const tm *)...(const btrfs_root *)...(btrfs_inode_item *)...(btrfs_root_item *)...(btrfs_root *)...(btrfs_chunk *)...(const rb_node *)...(chunk_map_item *)...(const rb_root *)...(ZSTD_ErrorCode)...(uLong)...(btrfs_header *)...(btrfs_tree_node *)...(btrfs_dir_item *)...(btrfs_file_extent_item *)...(btrfs_inode_ref *)...(btrfs_root_ref *)...(btrfs_super_block *)...(cbfs_result)...(const cbfs_cachenode *)...(const cbfs_cachenode **)...(const cbfs_header *)...(int32_t)...(cbfs_header *)...(cbfs_cachenode *)...(const cbfs_fileheader *)...(cramfs_super *)...(cramfs_inode *)...(Bytef *)...(uInt)...(cb_func)...(ext2_data *)...(ext2fs_node *)...(ext2fs_node **)...(__le32 *)...(ext4_extent_header *)...(ext4_extent *)...(ext2_block_group *)...(const ext2_block_group *)...(const ext_filesystem *)...(ext4_extent_idx *)...(ext_block_cache *)...(ext2_dirent *)...(ext2_inode *)...(__u8 *)...(journal_superblock_t *)...(journal_header_t *)...(ext3_journal_block_tag *)...(ext2_sblock *)...(revoke_blk_list *)...(journal_revoke_header_t *)...(journal_log *)...(dirty_blocks *)...(unsigned char **)...(const ext2_sblock *)...(fat_dir *)...(fs_dir_stream *)...(fat_itr *)...(dir_entry *)...(dir_slot *)...(volume_info *)...(__u16 *)...(const fsdata *)...(fs_dirent *)...(volatile __u8 *)...(volatile __u16 *)...(volatile __u32 *)...(volatile __u64 *)...(__u64 *)...(const __u64 *)...(const __u32 *)...(const __u16 *)...(fdt_property *)...(bz_stream *)...(DState *)...(UInt32 *)...(UInt16 *)...(UChar *)...(Bool)...(UChar)...(Int32)...(UInt32)...(EState *)...(UInt16)...(Int32 *)...(Rec_Pointer)...(Enumeration)...(Capital_Letter)...(One_Fifty)...(volatile uint32_t *)...(volatile uint64_t *)...(volatile uint16_t *)...(volatile uint8_t *)...(int64_t)...(efi_block_io *)...(efi_blk_platdata *)...(const efi_driver_ops *)...(efi_driver_binding_extended_protocol *)...(const efi_boot_services *)...(const efi_runtime_services *)...(u16 **)...(efi_handle_t *)...(efi_open_protocol_info_item *)...(efi_handler *)...(efi_locate_search_type)...(efi_loaded_image_obj *)...(efi_object_type)...(efi_object *)...(efi_open_protocol_info_entry *)...(efi_protocol_notification *)...(efi_guid_t **)...(efi_event *)...(efi_simple_text_input_protocol *)...(efi_simple_text_output_protocol *)...(efi_boot_services *)...(efi_loaded_image_obj **)...(efi_loaded_image *)...(efi_file_info *)...(efi_device_path **)...(efi_register_notify_event *)...(efi_handler **)...(const efi_event *)...(efi_timer_delay)...(efi_event **)...(efi_configuration_table *)...(efi_cin_notify_function *)...(simple_text_output_mode *)...(efi_device_path_memory *)...(efi_device_path_file_path *)...(efi_device_path_cdrom_path *)...(efi_device_path_hard_drive_path *)...(efi_device_path_vendor *)...(efi_device_path_mac_addr *)...(efi_device_path_atapi *)...(efi_device_path_sd_mmc_path *)...(efi_device_path_usb_class *)...(efi_device_path_scsi *)...(efi_device_path_usb *)...(efi_device_path_acpi_path *)...(efi_disk_obj **)...(efi_disk_obj *)...(efi_simple_file_system_protocol *)...(efi_disk_direction)...(const efi_block_io *)...(file_system *)...(const efi_simple_file_system_protocol *)...(file_handle *)...(efi_file_handle *)...(const efi_file_handle *)...(efi_file_system_info *)...(const uint16_t *)...(efi_gop_obj *)...(const efi_gop *)...(efi_gop_pixel *)...(efi_hii_packagelist *)...(efi_string_table *)...(efi_string_info *)...(efi_string_id_t)...(efi_keyboard_layout_data *)...(efi_hii_handle_t)...(efi_hii_package_header *)...(efi_hii_guid_package *)...(efi_hii_strings_package *)...(efi_hii_keyboard_package *)...(efi_keyboard_package_data *)...(efi_guid_data *)...(efi_hii_sibt_string_ucs2_block *)...(IMAGE_DOS_HEADER *)...(IMAGE_NT_HEADERS32 *)...(IMAGE_SECTION_HEADER *)...(IMAGE_NT_HEADERS64 *)...(const IMAGE_BASE_RELOCATION *)...(efi_mem_list *)...(const char(*)[])...(efi_pool_allocation *)...(efi_net_obj *)...(efi_simple_network_state)...(efi_simple_network *)...(efi_pxe_packet *)...(efi_root_dp *)...(uintptr_t *)...(efi_runtime_mmio_list *)...(elf_rela *)...(efi_reset_type)...(smbios_header *)...(long *)...(const s32 *)...(fdt_compat_id)...(const uint64_t *)...(const fdt_memory *)...(hsearch_data *)...(slre *)...(cap *)...(ENTRY **)...(const ENTRY *)...(_ENTRY *)...(const u64 *)...(const AvbDescriptor *)...(AvbDescriptor *)...(AvbCmdlineSubstList *)...(AvbAlgorithmType)...(AvbDigestType)...(const AvbCmdlineSubstList *)...(const AvbAlgorithmData *)...(const AvbDescriptor **)...(SetDescriptorData *)...(AvbDescriptorForeachFunc *)...(const AvbVBMetaImageHeader *)...(const AvbPropertyDescriptor *)...(PropertyIteratorData *)...(IAvbKey *)...(const IAvbKey *)...(const AvbRSAPublicKeyHeader *)...(AvbVBMetaData *)...(AvbPartitionData *)...(AvbSlotVerifyData **)...(AvbSlotVerifyData *)...(AvbVBMetaImageFlags)...(const AvbFooter *)...(AvbVBMetaVerifyResult)...(AvbVBMetaImageHeader *)...(AvbChainPartitionDescriptor *)...(const AvbChainPartitionDescriptor *)...(AvbAlgorithmType *)...(AvbKernelCmdlineDescriptor *)...(const AvbKernelCmdlineDescriptor *)...(AvbHashtreeDescriptor *)...(const AvbHashtreeDescriptor *)...(const AvbHashDescriptor *)...(const uint8_t **)...(fdt_reserve_entry *)...(const fdt_reserve_entry *)...(want_t)...(fdt_region *)...(const fdt_node_header *)...(fdt_node_header *)...(kmem_cache *)...(BYTE *)...(const BYTE *)...(const lz4_frame_header *)...(Byte *)...(const CLzmaProps *)...(ELzmaFinishMode)...(ELzmaStatus)...(const Byte *)...(const CLzmaDec *)...(ELzmaDummy)...(Byte)...(const LZByte *)...(property **)...(const rsa_public_key *)...(smbios_entry *)...(smbios_type127 *)...(smbios_type32 *)...(smbios_type4 *)...(smbios_type3 *)...(smbios_type2 *)...(smbios_type1 *)...(smbios_type0 *)...(signed char)...(uuid *)...(signed long)...(signed short)...(phys_addr_t *)...(block_state)...(ushf)...(charf *)...(ulg)...(uch)...(ush)...(IPos)...(Pos)...(Posf)...(const Bytef *)...(z_stream *)...(internal_state *)...(deflate_state *)...(Posf *)...(ushf *)...(uchf *)...(voidpf)...(Bytef)...(gz_header *)...(alloc_func)...(free_func)...(gz_headerp)...(tree_desc *)...(ct_data *)...(const ct_data *)...(inflate_state *)...(inflate_mode)...(codetype)...(const unsigned short *)...(const code *)...(U32)...(S16)...(ZSTD_dStreamStage)...(U64)...(ZSTD_DStream *)...(ZSTD_DCtx *)...(ZSTD_DDict *)...(const ZSTD_DDict *)...(HUF_DTable)...(const short *)...(ZSTD_dStage)...(blockType_e)...(const xxh64_state *)...(ZSTD_nextInputType_e)...(seq_t *)...(uPtrDiff)...(const FSE_DState_t *)...(symbolEncodingType_e)...(const FSE_DTable *)...(S16 *)...(U32 *)...(const HUF_DTable *)...(BYTE)...(FSE_DTable *)...(short *)...(const FSE_DTableHeader *)...(FSE_DTableHeader *)...(U16)...(FSE_decode_t *)...(U16 *)...(ERR_enum)...(U64 *)...(const size_t *)...(const U64 *)...(const U32 *)...(const U16 *)...(BIT_DStream_status)...(const BIT_DStream_t *)...(const FSE_decode_t *)...(const FSE_symbolCompressionTransform *)...(const HUF_DEltX4 *)...(rankValCol_t *)...(sortedSymbol_t *)...(HUF_DEltX4 *)...(const sortedSymbol_t *)...(const HUF_DEltX2 *)...(HUF_DEltX2 *)...(ZSTD_stack *)...(ZSTD_allocFunction)...(ZSTD_freeFunction)...(bootp_hdr *)...(dhcp_state_t)...(thand_f *)...(const signed char *)...(header *)...(dns_query_type)...(eth_ops *)...(eth_device_priv *)...(eth_state_t)...(eth_uclass_priv *)...(ll_state_t)...(mdio_mux_perdev_priv *)...(mdio_mux_ch_data *)...(mdio_mux_ops *)...(mdio_perdev_priv *)...(vlan_ethernet_hdr *)...(e802_hdr *)...(hole *)...(rxhand_f *)...(rxhand_icmp_f *)...(sntp_pkt_t *)...(__be16 *)...(checkstatus)...(node *)...(cell_t)...(const provider *)...(provider *)...(cell_t *)...(marker *)...(YY_BUFFER_STATE)...(YY_BUFFER_STATE *)...(FILE *)...(yy_size_t)...(yy_buffer_state **)...(yy_buffer_state *)...(YY_CHAR)...(yy_state_type)...(yytype_int16)...(yyalloc *)...(const YYSTYPE *)...(const srcpos *)...(reserve_info *)...(markertype)...(yytype_uint8)...(yytype_int8)...(yytype_uint16)...(fdt64_t)...(fdt16_t)...(version_info *)...(label *)...(data *)...(dirent *)...(node **)...(const node *const *)...(const property *const *)...(reserve_info **)...(const reserve_info *const *)...(dt_info *)...(srcpos *)...(search_path *)...(srcfile_state *)...(unit_test *)...(dm_test_priv *)...(dm_test_parent_platdata *)...(dm_test_state *)...(dm_test_parent_data *)...(dm_test_pdata *)...(const dm_test_pdata *)...(dm_test_uclass_perdev_priv *)...(dm_test_perdev_uc_pdata *)...(sandbox_eth_tx_hand_f *)...(unit_test_state *)...(pci_interrupt_pin)...(const uint *)...(pci_barno)...(pci_ep_irq_type)...(layout *)...(Elf32_Addr)...(serial_device_info *)...(dm_testprobe_pdata *)...(const test_ops *)...(log_category_t *)...(const u16 **)...(OPENSSL_STACK *)...(OPENSSL_sk_compfunc)...(sk_OPENSSL_BLOCK_compfunc)...(const OPENSSL_STACK *)...(OPENSSL_sk_copyfunc)...(OPENSSL_sk_freefunc)...(stack_st_OPENSSL_BLOCK *)...(sk_OPENSSL_CSTRING_compfunc)...(stack_st_OPENSSL_CSTRING *)...(sk_OPENSSL_STRING_compfunc)...(stack_st_OPENSSL_STRING *)...(sk_void_compfunc)...(stack_st_void *)...(sk_BIO_compfunc)...(stack_st_BIO *)...(BIO *)...(sk_ASN1_OBJECT_compfunc)...(stack_st_ASN1_OBJECT *)...(ASN1_OBJECT *)...(sk_ASN1_TYPE_compfunc)...(stack_st_ASN1_TYPE *)...(ASN1_TYPE *)...(sk_ASN1_UTF8STRING_compfunc)...(stack_st_ASN1_UTF8STRING *)...(ASN1_UTF8STRING *)...(sk_ASN1_GENERALSTRING_compfunc)...(stack_st_ASN1_GENERALSTRING *)...(ASN1_GENERALSTRING *)...(sk_ASN1_INTEGER_compfunc)...(stack_st_ASN1_INTEGER *)...(ASN1_INTEGER *)...(sk_ASN1_STRING_TABLE_compfunc)...(stack_st_ASN1_STRING_TABLE *)...(ASN1_STRING_TABLE *)...(sk_X509_ALGOR_compfunc)...(stack_st_X509_ALGOR *)...(X509_ALGOR *)...(ais_header *)...(ais_cmd_load *)...(ais_cmd_func *)...(image_type_params *)...(output_t)...(const fdt_region *)...(display_info *)...(value_node *)...(uint_fast8_t)...(gp_header *)...(const gp_header *)...(ifwi_ret)...(const buffer *)...(subpart_dir *)...(bpdt *)...(manifest_header *)...(signed_pkg_info_ext *)...(subpart_dir_header *)...(subpart_dir_entry *)...(bpdt_entry *)...(bpdt_entry_type)...(tm *)...(option_type_t)...(const image_t *)...(soc_type_t)...(imx_header *)...(imx_header_v2_t *)...(set_dcd_param_t)...(dcd_v2_cmd *)...(image_cfg_element *)...(ext_hdr_v0 *)...(main_hdr_v0 *)...(image_cfg_type)...(main_hdr_v1 *)...(opt_hdr_v1 *)...(OPENSSL_LHASH *)...(OPENSSL_LH_DOALL_FUNC)...(const OPENSSL_LHASH *)...(OPENSSL_CSTRING *)...(OPENSSL_LH_HASHFUNC)...(OPENSSL_LH_COMPFUNC)...(lhash_st_OPENSSL_CSTRING *)...(OPENSSL_STRING *)...(lhash_st_OPENSSL_STRING *)...(sk_X509_VERIFY_PARAM_compfunc)...(stack_st_X509_VERIFY_PARAM *)...(X509_VERIFY_PARAM *)...(sk_X509_OBJECT_compfunc)...(stack_st_X509_OBJECT *)...(X509_OBJECT *)...(sk_X509_LOOKUP_compfunc)...(stack_st_X509_LOOKUP *)...(X509_LOOKUP *)...(sk_PKCS7_compfunc)...(stack_st_PKCS7 *)...(PKCS7 *)...(sk_PKCS7_RECIP_INFO_compfunc)...(stack_st_PKCS7_RECIP_INFO *)...(PKCS7_RECIP_INFO *)...(sk_PKCS7_SIGNER_INFO_compfunc)...(stack_st_PKCS7_SIGNER_INFO *)...(PKCS7_SIGNER_INFO *)...(sk_X509_INFO_compfunc)...(stack_st_X509_INFO *)...(X509_INFO *)...(sk_X509_CRL_compfunc)...(stack_st_X509_CRL *)...(X509_CRL *)...(sk_X509_REVOKED_compfunc)...(stack_st_X509_REVOKED *)...(X509_REVOKED *)...(sk_X509_TRUST_compfunc)...(stack_st_X509_TRUST *)...(X509_TRUST *)...(sk_X509_compfunc)...(stack_st_X509 *)...(X509 *)...(sk_X509_ATTRIBUTE_compfunc)...(stack_st_X509_ATTRIBUTE *)...(X509_ATTRIBUTE *)...(sk_X509_EXTENSION_compfunc)...(stack_st_X509_EXTENSION *)...(X509_EXTENSION *)...(sk_X509_NAME_compfunc)...(stack_st_X509_NAME *)...(X509_NAME *)...(sk_X509_NAME_ENTRY_compfunc)...(stack_st_X509_NAME_ENTRY *)...(X509_NAME_ENTRY *)...(ERR_STRING_DATA *)...(lhash_st_ERR_STRING_DATA *)...(sk_CTLOG_compfunc)...(stack_st_CTLOG *)...(CTLOG *)...(sk_SCT_compfunc)...(stack_st_SCT *)...(SCT *)...(sk_SSL_COMP_compfunc)...(stack_st_SSL_COMP *)...(SSL_COMP *)...(sk_SSL_CIPHER_compfunc)...(stack_st_SSL_CIPHER *)...(const SSL_CIPHER *)...(sk_SRTP_PROTECTION_PROFILE_compfunc)...(stack_st_SRTP_PROTECTION_PROFILE *)...(SRTP_PROTECTION_PROFILE *)...(sk_UI_STRING_compfunc)...(stack_st_UI_STRING *)...(UI_STRING *)...(ENGINE *)...(const BIGNUM *)...(BIGNUM *)...(const RSA *)...(const BIGNUM **)...(const OPENSSL_INIT_SETTINGS *)...(RSA *)...(const ENGINE *)...(UI_METHOD *)...(RSA **)...(pem_password_cb *)...(nand_page_0_boot_header *)...(mode_t)...(ih_category)...(content_info *)...(lk_hdr *)...(nand_boot_header *)...(brom_layout_header *)...(gfh_header *)...(gen_device_header *)...(gen_boot_header *)...(brlyt_img_type)...(sb_boot_image_header *)...(sb_section_ctx *)...(sb_cmd_ctx *)...(sb_ivt_header *)...(sb_dcd_ctx *)...(__uint32_t)...(ch_toc *)...(ch_settings *)...(const ch_toc *)...(pbl_header *)...(trace_configline_info *)...(trace_line_type)...(const regex_t *)...(regmatch_t *)...(trace_chunk_type)...(trace_call *)...(func_info *)...(const func_info *)...(spl_info *)...(header1_info *)...(header0_info *)...(stm32_header *)...(ubl_header *)...(zynq_header *)...(const bif_file_type *)...(const bif_flags *)...(Elf64_Ehdr *)...(Elf32_Shdr *)...(Elf64_Shdr *)...(image_header_table *)...(partition_header *)...(zynqmp_header *)...(const partition_header *)...typeid ...sizeof...(...)sizeof(<expr>)alignof(<expr>)sizeof(error)alignof(error)sizeof(unknown)alignof(unknown)sizeof(void)alignof(void)sizeof(decltype(nullptr))alignof(decltype(nullptr))sizeof(bool)alignof(bool)sizeof(wchar_t)alignof(wchar_t)sizeof(char16_t)alignof(char16_t)sizeof(char32_t)alignof(char32_t)alignof(char)alignof(unsigned char)sizeof(signed char)alignof(signed char)alignof(short)sizeof(unsigned short)alignof(unsigned short)sizeof(signed short)alignof(signed short)alignof(int)alignof(unsigned int)sizeof(signed int)alignof(signed int)alignof(long)alignof(unsigned long)sizeof(signed long)alignof(signed long)sizeof(long long)alignof(long long)sizeof(unsigned long long)alignof(unsigned long long)sizeof(signed long long)alignof(signed long long)sizeof(__int128)alignof(__int128)sizeof(unsigned __int128)alignof(unsigned __int128)sizeof(signed __int128)alignof(signed __int128)alignof(float)sizeof(double)alignof(double)sizeof(long double)alignof(long double)sizeof(__float128)alignof(__float128)sizeof(_Decimal32)alignof(_Decimal32)sizeof(_Decimal64)alignof(_Decimal64)sizeof(_Decimal128)alignof(_Decimal128)sizeof(_Float32)alignof(_Float32)sizeof(_Float32x)alignof(_Float32x)sizeof(_Float64)alignof(_Float64)sizeof(_Float64x)alignof(_Float64x)sizeof(_Float128)alignof(_Float128)sizeof(_Float128x)alignof(_Float128x)sizeof(_Complex float)alignof(_Complex float)sizeof(_Complex double)alignof(_Complex double)sizeof(_Complex long double)alignof(_Complex long double)sizeof(_Complex __float128)alignof(_Complex __float128)sizeof(_Imaginary float)alignof(_Imaginary float)sizeof(_Imaginary double)alignof(_Imaginary double)sizeof(_Imaginary long double)alignof(_Imaginary long double)sizeof(auto)alignof(auto)sizeof(__va_list_tag)alignof(__va_list_tag)alignof(void *)sizeof(if_type)alignof(if_type)alignof(ulong)alignof(lbaint_t)sizeof(blk_desc)alignof(blk_desc)sizeof(udevice)alignof(udevice)sizeof(block_cache_stats)alignof(block_cache_stats)sizeof(struct <unnamed>)alignof(struct <unnamed>)alignof(efi_guid_t)sizeof(__u32)alignof(__u32)alignof(uint32_t)sizeof(sig_type)alignof(sig_type)alignof(char *)sizeof(char *const)alignof(char *const)sizeof(char *const[])alignof(char *const[])sizeof(char *[])alignof(char *[])sizeof(int *)alignof(int *)sizeof(const char)alignof(const char)sizeof(const char *)alignof(const char *)sizeof(const void)alignof(const void)sizeof(const void *)alignof(const void *)sizeof(blk_desc *)alignof(blk_desc *)sizeof(udevice *)alignof(udevice *)sizeof(udevice **)alignof(udevice **)sizeof(block_cache_stats *)alignof(block_cache_stats *)sizeof(blk_ops)alignof(blk_ops)sizeof(union <unnamed>)alignof(union <unnamed>)sizeof(..()(..))alignof(..()(..))sizeof(..(*)(..))alignof(..(*)(..))sizeof(char[9])alignof(char[9])sizeof(char[21])alignof(char[21])sizeof(char[41])alignof(char[41])sizeof(pci_device_id)alignof(pci_device_id)sizeof(pci_dev_t)alignof(pci_dev_t)alignof(u32)alignof(phys_addr_t)sizeof(pci_size_t)alignof(pci_size_t)sizeof(uint)alignof(uint)sizeof(__u8)alignof(__u8)alignof(u8)sizeof(pci_addr_t)alignof(pci_addr_t)sizeof(pci_region)alignof(pci_region)sizeof(__u16)alignof(__u16)alignof(u16)sizeof(pci_controller)alignof(pci_controller)sizeof(pci_config_table)alignof(pci_config_table)sizeof(pci_region *)alignof(pci_region *)sizeof(pci_region **)alignof(pci_region **)alignof(unsigned char *)sizeof(u8 *)alignof(u8 *)sizeof(unsigned short *)alignof(unsigned short *)sizeof(u16 *)alignof(u16 *)sizeof(unsigned int *)alignof(unsigned int *)sizeof(u32 *)alignof(u32 *)sizeof(void **)alignof(void **)sizeof(ulong *)alignof(ulong *)sizeof(unsigned long *)alignof(unsigned long *)sizeof(pci_device_id *)alignof(pci_device_id *)sizeof(pci_controller *)alignof(pci_controller *)sizeof(pci_addr_t *)alignof(pci_addr_t *)sizeof(pci_config_table *)alignof(pci_config_table *)sizeof(pci_driver_entry)alignof(pci_driver_entry)sizeof(dm_pci_emul_ops)alignof(dm_pci_emul_ops)sizeof(dm_pci_ops)alignof(dm_pci_ops)sizeof(pci_child_platdata)alignof(pci_child_platdata)sizeof(const pci_device_id)alignof(const pci_device_id)sizeof(const pci_device_id *)alignof(const pci_device_id *)sizeof(driver)alignof(driver)sizeof(driver *)alignof(driver *)sizeof(unsigned long[3])alignof(unsigned long[3])sizeof(pci_region[7])alignof(pci_region[7])sizeof(volatile unsigned char)alignof(volatile unsigned char)sizeof(volatile unsigned char *)alignof(volatile unsigned char *)sizeof(volatile unsigned int)alignof(volatile unsigned int)sizeof(volatile unsigned int *)alignof(volatile unsigned int *)sizeof(bd_info)alignof(bd_info)sizeof(phys_size_t)alignof(phys_size_t)sizeof(fdt_memory)alignof(fdt_memory)sizeof(__kernel_size_t)alignof(__kernel_size_t)alignof(size_t)sizeof(display_timing)alignof(display_timing)sizeof(display_flags)alignof(display_flags)sizeof(timing_entry)alignof(timing_entry)sizeof(fdt_resource)alignof(fdt_resource)sizeof(fdt_compat_id)alignof(fdt_compat_id)sizeof(__u64)alignof(__u64)alignof(uint64_t)sizeof(__be32)alignof(__be32)alignof(fdt32_t)alignof(u64)sizeof(__s32)alignof(__s32)sizeof(s32)alignof(s32)sizeof(fdt_pci_addr)alignof(fdt_pci_addr)sizeof(fdt_pci_space)alignof(fdt_pci_space)alignof(fdt_size_t)alignof(fdt_addr_t)sizeof(fdtdec_phandle_args)alignof(fdtdec_phandle_args)sizeof(phys_addr_t *)alignof(phys_addr_t *)sizeof(phys_size_t *)alignof(phys_size_t *)sizeof(bd_info *)alignof(bd_info *)sizeof(const fdt_memory)alignof(const fdt_memory)sizeof(const fdt_memory *)alignof(const fdt_memory *)sizeof(fdt_memory *)alignof(fdt_memory *)sizeof(uint32_t *)alignof(uint32_t *)sizeof(char[8])alignof(char[8])sizeof(const u8)alignof(const u8)sizeof(const u8 *)alignof(const u8 *)sizeof(display_timing *)alignof(display_timing *)sizeof(fdt_resource *)alignof(fdt_resource *)sizeof(const u32)alignof(const u32)sizeof(const u32 *)alignof(const u32 *)sizeof(const fdt32_t)alignof(const fdt32_t)sizeof(const fdt32_t *)alignof(const fdt32_t *)sizeof(fdt_pci_addr *)alignof(fdt_pci_addr *)sizeof(fdt_size_t *)alignof(fdt_size_t *)sizeof(fdtdec_phandle_args *)alignof(fdtdec_phandle_args *)sizeof(const fdt_resource)alignof(const fdt_resource)sizeof(const fdt_resource *)alignof(const fdt_resource *)sizeof(fdt_val_t)alignof(fdt_val_t)sizeof(uint32_t[16])alignof(uint32_t[16])sizeof(unsigned int[16])alignof(unsigned int[16])sizeof(list_head)alignof(list_head)sizeof(membuff)alignof(membuff)sizeof(arch_global_data)alignof(arch_global_data)sizeof(global_data)alignof(global_data)alignof(bd_t)alignof(gd_t)sizeof(bloblist_hdr *)alignof(bloblist_hdr *)sizeof(bootstage_data *)alignof(bootstage_data *)sizeof(char[32])alignof(char[32])sizeof(jt_funcs *)alignof(jt_funcs *)sizeof(device_node)alignof(device_node)sizeof(device_node *)alignof(device_node *)sizeof(global_data *)alignof(global_data *)sizeof(bd_t *)alignof(bd_t *)sizeof(in_addr)alignof(in_addr)sizeof(interrupt_handler_t)alignof(interrupt_handler_t)sizeof(pt_regs)alignof(pt_regs)alignof(uchar)sizeof(cmd_tbl_s)alignof(cmd_tbl_s)sizeof(cmd_tbl_t)alignof(cmd_tbl_t)sizeof(size_t *)alignof(size_t *)sizeof(const unsigned char)alignof(const unsigned char)sizeof(const unsigned char *)alignof(const unsigned char *)sizeof(interrupt_handler_t *)alignof(interrupt_handler_t *)sizeof(pt_regs *)alignof(pt_regs *)sizeof(gd_t *)alignof(gd_t *)sizeof(long *)alignof(long *)sizeof(uchar *)alignof(uchar *)sizeof(cmd_tbl_t *)alignof(cmd_tbl_t *)sizeof(cmd_tbl_s *)alignof(cmd_tbl_s *)sizeof((unnamed enum))alignof((unnamed enum))sizeof(vu_char)alignof(vu_char)sizeof(volatile unsigned short)alignof(volatile unsigned short)sizeof(vu_short)alignof(vu_short)sizeof(volatile unsigned long)alignof(volatile unsigned long)alignof(vu_long)sizeof(u8[])alignof(u8[])sizeof(unsigned char[])alignof(unsigned char[])alignof(property)alignof(phandle)sizeof(const unsigned int)alignof(const unsigned int)sizeof(const unsigned int *)alignof(const unsigned int *)sizeof(const __be32)alignof(const __be32)sizeof(const __be32 *)alignof(const __be32 *)sizeof(const device_node)alignof(const device_node)sizeof(const device_node *)alignof(const device_node *)sizeof(char[10])alignof(char[10])sizeof(of_phandle_args)alignof(of_phandle_args)sizeof(property *)alignof(property *)sizeof(ofnode_union)alignof(ofnode_union)sizeof(ofnode)alignof(ofnode)alignof(uint8_t)sizeof(ofnode_phandle_args)alignof(ofnode_phandle_args)sizeof(resource *)alignof(resource *)sizeof(const uint8_t)alignof(const uint8_t)sizeof(const uint8_t *)alignof(const uint8_t *)sizeof(ofnode_phandle_args *)alignof(ofnode_phandle_args *)sizeof(const char **)alignof(const char **)sizeof(char **)alignof(char **)sizeof(u64 *)alignof(u64 *)sizeof(unsigned long long *)alignof(unsigned long long *)sizeof(signed int *)alignof(signed int *)sizeof(s32 *)alignof(s32 *)sizeof(mallinfo)alignof(mallinfo)sizeof(__kernel_ptrdiff_t)alignof(__kernel_ptrdiff_t)sizeof(ptrdiff_t)alignof(ptrdiff_t)sizeof(gfp_t)alignof(gfp_t)sizeof(writeback_sync_modes)alignof(writeback_sync_modes)sizeof(__kernel_loff_t)alignof(__kernel_loff_t)sizeof(loff_t)alignof(loff_t)sizeof(callback_head)alignof(callback_head)sizeof(__kernel_gid32_t)alignof(__kernel_gid32_t)sizeof(gid_t)alignof(gid_t)sizeof(__kernel_uid32_t)alignof(__kernel_uid32_t)sizeof(uid_t)alignof(uid_t)sizeof(__kernel_dev_t)alignof(__kernel_dev_t)sizeof(dev_t)alignof(dev_t)sizeof(device)alignof(device)sizeof(unused)alignof(unused)sizeof(unused_t)alignof(unused_t)sizeof(led_brightness)alignof(led_brightness)sizeof(led_trigger)alignof(led_trigger)sizeof(kmem_cache)alignof(kmem_cache)sizeof(p_current)alignof(p_current)sizeof(led_trigger *)alignof(led_trigger *)sizeof(led_trigger **)alignof(led_trigger **)sizeof(kmem_cache *)alignof(kmem_cache *)sizeof(dmaaddr_t)alignof(dmaaddr_t)sizeof(notifier_block)alignof(notifier_block)sizeof(timer_list)alignof(timer_list)sizeof(irqreturn_t)alignof(irqreturn_t)sizeof(writeback_control)alignof(writeback_control)sizeof(kgid_t)alignof(kgid_t)sizeof(kuid_t)alignof(kuid_t)sizeof(cdev)alignof(cdev)sizeof(kernel_param)alignof(kernel_param)sizeof(mutex)alignof(mutex)sizeof(class)alignof(class)sizeof(rw_semaphore)alignof(rw_semaphore)sizeof(wait_queue_head_t)alignof(wait_queue_head_t)sizeof(spinlock_t)alignof(spinlock_t)sizeof(work_struct)alignof(work_struct)sizeof(blkcnt_t)alignof(blkcnt_t)sizeof(sector_t)alignof(sector_t)sizeof(callback_head *)alignof(callback_head *)sizeof(device *)alignof(device *)sizeof(class *)alignof(class *)sizeof(p_current *)alignof(p_current *)sizeof(dr_match_t)alignof(dr_match_t)sizeof(dr_release_t)alignof(dr_release_t)sizeof(uclass_id)alignof(uclass_id)sizeof(udevice_id)alignof(udevice_id)sizeof(const udevice)alignof(const udevice)sizeof(const udevice *)alignof(const udevice *)sizeof(uclass)alignof(uclass)sizeof(uclass *)alignof(uclass *)sizeof(const driver)alignof(const driver)sizeof(const driver *)alignof(const driver *)sizeof(const udevice_id)alignof(const udevice_id)sizeof(const udevice_id *)alignof(const udevice_id *)sizeof(udevice_id *)alignof(udevice_id *)sizeof(driver_info)alignof(driver_info)sizeof(uclass **)alignof(uclass **)sizeof(uclass_driver)alignof(uclass_driver)sizeof(uclass_driver *)alignof(uclass_driver *)sizeof(uint *)alignof(uint *)sizeof(os_dirent_t)alignof(os_dirent_t)sizeof(os_dirent_node)alignof(os_dirent_node)sizeof(sandbox_state)alignof(sandbox_state)sizeof(__kernel_off_t)alignof(__kernel_off_t)sizeof(off_t)alignof(off_t)sizeof(__kernel_ssize_t)alignof(__kernel_ssize_t)sizeof(ssize_t)alignof(ssize_t)sizeof(rtc_time *)alignof(rtc_time *)sizeof(loff_t *)alignof(loff_t *)sizeof(long long *)alignof(long long *)sizeof(os_dirent_node *)alignof(os_dirent_node *)sizeof(os_dirent_node **)alignof(os_dirent_node **)sizeof(sandbox_state *)alignof(sandbox_state *)sizeof(char[0])alignof(char[0])sizeof(iovalue_t)alignof(iovalue_t)sizeof(iotrace_flags)alignof(iotrace_flags)sizeof(iotrace_record)alignof(iotrace_record)sizeof(volatile void)alignof(volatile void)sizeof(volatile void *)alignof(volatile void *)sizeof(const volatile void)alignof(const volatile void)sizeof(const volatile void *)alignof(const volatile void *)sizeof(volatile u16)alignof(volatile u16)sizeof(volatile u16 *)alignof(volatile u16 *)sizeof(jmp_buf_data)alignof(jmp_buf_data)sizeof(jmp_buf_data[1])alignof(jmp_buf_data[1])sizeof(jmp_buf)alignof(jmp_buf)sizeof(ulong[128])alignof(ulong[128])sizeof(unsigned long[128])alignof(unsigned long[128])sizeof(sysreset_t)alignof(sysreset_t)sizeof(sysreset_ops)alignof(sysreset_ops)sizeof(sandbox_wdt_info)alignof(sandbox_wdt_info)sizeof(sandbox_spi_info)alignof(sandbox_spi_info)sizeof(state_terminal_raw)alignof(state_terminal_raw)sizeof(sandbox_state_io)alignof(sandbox_state_io)sizeof(sandbox_mapmem_entry)alignof(sandbox_mapmem_entry)sizeof(sandbox_spi_info[10])alignof(sandbox_spi_info[10])sizeof(sandbox_spi_info[1][10])alignof(sandbox_spi_info[1][10])sizeof(bool[4])alignof(bool[4])sizeof(uint8_t *)alignof(uint8_t *)sizeof(char[30])alignof(char[30])sizeof(sandbox_mapmem_entry *)alignof(sandbox_mapmem_entry *)sizeof(char[26])alignof(char[26])sizeof(const char[14])alignof(const char[14])sizeof(char[14])alignof(char[14])sizeof(list_head *)alignof(list_head *)sizeof(log_level_t)alignof(log_level_t)sizeof(log_category_t)alignof(log_category_t)sizeof(char[23])alignof(char[23])sizeof(char[53])alignof(char[53])sizeof(const char[12])alignof(const char[12])sizeof(char[12])alignof(char[12])sizeof(char[57])alignof(char[57])sizeof(const char[13])alignof(const char[13])sizeof(char[13])alignof(char[13])sizeof(char[29])alignof(char[29])sizeof(const char[9])alignof(const char[9])sizeof(const list_head)alignof(const list_head)sizeof(const list_head *)alignof(const list_head *)sizeof(char[58])alignof(char[58])sizeof(eth_sandbox_raw_priv)alignof(eth_sandbox_raw_priv)sizeof(sandbox_eth_raw_if_nameindex)alignof(sandbox_eth_raw_if_nameindex)sizeof(char[16])alignof(char[16])sizeof(eth_sandbox_raw_priv *)alignof(eth_sandbox_raw_priv *)sizeof(const eth_sandbox_raw_priv)alignof(const eth_sandbox_raw_priv)sizeof(const eth_sandbox_raw_priv *)alignof(const eth_sandbox_raw_priv *)sizeof(sandbox_eth_raw_if_nameindex *)alignof(sandbox_eth_raw_if_nameindex *)sizeof(iovec)alignof(iovec)sizeof(file_handle)alignof(file_handle)sizeof(__off64_t)alignof(__off64_t)sizeof(__off_t)alignof(__off_t)sizeof(__ssize_t)alignof(__ssize_t)sizeof(__pid_t)alignof(__pid_t)sizeof(__pid_type)alignof(__pid_type)sizeof(file_handle *)alignof(file_handle *)sizeof(__off64_t *)alignof(__off64_t *)sizeof(const iovec)alignof(const iovec)sizeof(const iovec *)alignof(const iovec *)sizeof(iovec *)alignof(iovec *)sizeof(f_owner_ex)alignof(f_owner_ex)sizeof(unsigned char[0])alignof(unsigned char[0])sizeof(flock64)alignof(flock64)sizeof(flock)alignof(flock)sizeof(__syscall_slong_t)alignof(__syscall_slong_t)sizeof(timespec)alignof(timespec)sizeof(__blkcnt64_t)alignof(__blkcnt64_t)sizeof(__blksize_t)alignof(__blksize_t)sizeof(__dev_t)alignof(__dev_t)sizeof(__gid_t)alignof(__gid_t)sizeof(__uid_t)alignof(__uid_t)sizeof(__mode_t)alignof(__mode_t)sizeof(__nlink_t)alignof(__nlink_t)sizeof(__ino64_t)alignof(__ino64_t)sizeof(__blkcnt_t)alignof(__blkcnt_t)sizeof(__ino_t)alignof(__ino_t)sizeof(stat64)alignof(stat64)sizeof(stat)alignof(stat)sizeof(__syscall_slong_t[3])alignof(__syscall_slong_t[3])sizeof(long[3])alignof(long[3])sizeof(off64_t)alignof(off64_t)sizeof(mode_t)alignof(mode_t)sizeof(pid_t)alignof(pid_t)sizeof(__sigset_t)alignof(__sigset_t)sizeof(fd_set)alignof(fd_set)sizeof(timeval)alignof(timeval)sizeof(__fd_mask)alignof(__fd_mask)sizeof(fd_set *)alignof(fd_set *)sizeof(fd_set *__restrict__)alignof(fd_set *__restrict__)sizeof(struct <unnamed> *)alignof(struct <unnamed> *)sizeof(const timespec)alignof(const timespec)sizeof(const timespec *)alignof(const timespec *)sizeof(const timespec *__restrict__)alignof(const timespec *__restrict__)sizeof(timespec *)alignof(timespec *)sizeof(const __sigset_t)alignof(const __sigset_t)sizeof(const __sigset_t *)alignof(const __sigset_t *)sizeof(const __sigset_t *__restrict__)alignof(const __sigset_t *__restrict__)sizeof(timeval *)alignof(timeval *)sizeof(timeval *__restrict__)alignof(timeval *__restrict__)sizeof(fd_mask)alignof(fd_mask)sizeof(__fd_mask[16])alignof(__fd_mask[16])sizeof(long[16])alignof(long[16])sizeof(__fsfilcnt64_t)alignof(__fsfilcnt64_t)sizeof(__fsblkcnt64_t)alignof(__fsblkcnt64_t)sizeof(__fsfilcnt_t)alignof(__fsfilcnt_t)sizeof(__fsblkcnt_t)alignof(__fsblkcnt_t)sizeof(__suseconds_t)alignof(__suseconds_t)sizeof(__useconds_t)alignof(__useconds_t)sizeof(__key_t)alignof(__key_t)sizeof(__caddr_t)alignof(__caddr_t)sizeof(__daddr_t)alignof(__daddr_t)sizeof(__id_t)alignof(__id_t)sizeof(__loff_t)alignof(__loff_t)sizeof(__fsid_t)alignof(__fsid_t)sizeof(__u_quad_t)alignof(__u_quad_t)sizeof(__quad_t)alignof(__quad_t)sizeof(__u_long)alignof(__u_long)sizeof(__u_int)alignof(__u_int)sizeof(__u_short)alignof(__u_short)sizeof(__u_char)alignof(__u_char)sizeof(fsfilcnt64_t)alignof(fsfilcnt64_t)sizeof(fsblkcnt64_t)alignof(fsblkcnt64_t)sizeof(blkcnt64_t)alignof(blkcnt64_t)sizeof(fsfilcnt_t)alignof(fsfilcnt_t)sizeof(fsblkcnt_t)alignof(fsblkcnt_t)sizeof(blksize_t)alignof(blksize_t)sizeof(register_t)alignof(register_t)sizeof(u_int64_t)alignof(u_int64_t)sizeof(u_int32_t)alignof(u_int32_t)sizeof(u_int16_t)alignof(u_int16_t)sizeof(u_int8_t)alignof(u_int8_t)alignof(ushort)sizeof(suseconds_t)alignof(suseconds_t)sizeof(useconds_t)alignof(useconds_t)sizeof(key_t)alignof(key_t)sizeof(caddr_t)alignof(caddr_t)sizeof(daddr_t)alignof(daddr_t)sizeof(id_t)alignof(id_t)sizeof(nlink_t)alignof(nlink_t)sizeof(ino64_t)alignof(ino64_t)sizeof(ino_t)alignof(ino_t)sizeof(fsid_t)alignof(fsid_t)sizeof(u_quad_t)alignof(u_quad_t)sizeof(quad_t)alignof(quad_t)sizeof(u_long)alignof(u_long)sizeof(u_int)alignof(u_int)sizeof(u_short)alignof(u_short)sizeof(u_char)alignof(u_char)sizeof(__socket_type)alignof(__socket_type)sizeof(sa_family_t)alignof(sa_family_t)sizeof(cmsghdr)alignof(cmsghdr)sizeof(msghdr)alignof(msghdr)sizeof(__socklen_t)alignof(__socklen_t)sizeof(socklen_t)alignof(socklen_t)sizeof(cmsghdr *)alignof(cmsghdr *)sizeof(msghdr *)alignof(msghdr *)sizeof(linger)alignof(linger)sizeof(ucred)alignof(ucred)sizeof(sockaddr_storage)alignof(sockaddr_storage)sizeof(sockaddr)alignof(sockaddr)sizeof(char[118])alignof(char[118])sizeof(osockaddr)alignof(osockaddr)sizeof(unsigned char[14])alignof(unsigned char[14])sizeof(__SOCKADDR_ARG)alignof(__SOCKADDR_ARG)sizeof(mmsghdr)alignof(mmsghdr)sizeof(__CONST_SOCKADDR_ARG)alignof(__CONST_SOCKADDR_ARG)sizeof(socklen_t *)alignof(socklen_t *)sizeof(socklen_t *__restrict__)alignof(socklen_t *__restrict__)sizeof(void *__restrict__)alignof(void *__restrict__)sizeof(mmsghdr *)alignof(mmsghdr *)sizeof(const msghdr)alignof(const msghdr)sizeof(const msghdr *)alignof(const msghdr *)sizeof(int[2])alignof(int[2])sizeof(sockaddr_x25)alignof(sockaddr_x25)sizeof(sockaddr_un)alignof(sockaddr_un)sizeof(sockaddr_ns)alignof(sockaddr_ns)sizeof(sockaddr_iso)alignof(sockaddr_iso)sizeof(sockaddr_ipx)alignof(sockaddr_ipx)sizeof(sockaddr_inarp)alignof(sockaddr_inarp)sizeof(sockaddr_eon)alignof(sockaddr_eon)sizeof(sockaddr_dl)alignof(sockaddr_dl)sizeof(sockaddr_ax25)alignof(sockaddr_ax25)sizeof(sockaddr_at)alignof(sockaddr_at)sizeof(const sockaddr_x25)alignof(const sockaddr_x25)sizeof(const sockaddr_x25 *)alignof(const sockaddr_x25 *)sizeof(const sockaddr_x25 *__restrict__)alignof(const sockaddr_x25 *__restrict__)sizeof(sockaddr_x25 *)alignof(sockaddr_x25 *)sizeof(const sockaddr_un)alignof(const sockaddr_un)sizeof(const sockaddr_un *)alignof(const sockaddr_un *)sizeof(const sockaddr_un *__restrict__)alignof(const sockaddr_un *__restrict__)sizeof(sockaddr_un *)alignof(sockaddr_un *)sizeof(const sockaddr_ns)alignof(const sockaddr_ns)sizeof(const sockaddr_ns *)alignof(const sockaddr_ns *)sizeof(const sockaddr_ns *__restrict__)alignof(const sockaddr_ns *__restrict__)sizeof(sockaddr_ns *)alignof(sockaddr_ns *)sizeof(const sockaddr_iso)alignof(const sockaddr_iso)sizeof(const sockaddr_iso *)alignof(const sockaddr_iso *)sizeof(const sockaddr_iso *__restrict__)alignof(const sockaddr_iso *__restrict__)sizeof(sockaddr_iso *)alignof(sockaddr_iso *)sizeof(const sockaddr_ipx)alignof(const sockaddr_ipx)sizeof(const sockaddr_ipx *)alignof(const sockaddr_ipx *)sizeof(const sockaddr_ipx *__restrict__)alignof(const sockaddr_ipx *__restrict__)sizeof(sockaddr_ipx *)alignof(sockaddr_ipx *)sizeof(const sockaddr_inarp)alignof(const sockaddr_inarp)sizeof(const sockaddr_inarp *)alignof(const sockaddr_inarp *)sizeof(const sockaddr_inarp *__restrict__)alignof(const sockaddr_inarp *__restrict__)sizeof(sockaddr_inarp *)alignof(sockaddr_inarp *)sizeof(sockaddr_in6)alignof(sockaddr_in6)sizeof(const sockaddr_in6)alignof(const sockaddr_in6)sizeof(const sockaddr_in6 *)alignof(const sockaddr_in6 *)sizeof(const sockaddr_in6 *__restrict__)alignof(const sockaddr_in6 *__restrict__)sizeof(sockaddr_in6 *)alignof(sockaddr_in6 *)sizeof(sockaddr_in)alignof(sockaddr_in)sizeof(const sockaddr_in)alignof(const sockaddr_in)sizeof(const sockaddr_in *)alignof(const sockaddr_in *)sizeof(const sockaddr_in *__restrict__)alignof(const sockaddr_in *__restrict__)sizeof(sockaddr_in *)alignof(sockaddr_in *)sizeof(const sockaddr_eon)alignof(const sockaddr_eon)sizeof(const sockaddr_eon *)alignof(const sockaddr_eon *)sizeof(const sockaddr_eon *__restrict__)alignof(const sockaddr_eon *__restrict__)sizeof(sockaddr_eon *)alignof(sockaddr_eon *)sizeof(const sockaddr_dl)alignof(const sockaddr_dl)sizeof(const sockaddr_dl *)alignof(const sockaddr_dl *)sizeof(const sockaddr_dl *__restrict__)alignof(const sockaddr_dl *__restrict__)sizeof(sockaddr_dl *)alignof(sockaddr_dl *)sizeof(const sockaddr_ax25)alignof(const sockaddr_ax25)sizeof(const sockaddr_ax25 *)alignof(const sockaddr_ax25 *)sizeof(const sockaddr_ax25 *__restrict__)alignof(const sockaddr_ax25 *__restrict__)sizeof(sockaddr_ax25 *)alignof(sockaddr_ax25 *)sizeof(const sockaddr_at)alignof(const sockaddr_at)sizeof(const sockaddr_at *)alignof(const sockaddr_at *)sizeof(const sockaddr_at *__restrict__)alignof(const sockaddr_at *__restrict__)sizeof(sockaddr_at *)alignof(sockaddr_at *)sizeof(const sockaddr)alignof(const sockaddr)sizeof(const sockaddr *)alignof(const sockaddr *)sizeof(const sockaddr *__restrict__)alignof(const sockaddr *__restrict__)sizeof(sockaddr *)alignof(sockaddr *)sizeof(sockaddr_x25 *__restrict__)alignof(sockaddr_x25 *__restrict__)sizeof(sockaddr_un *__restrict__)alignof(sockaddr_un *__restrict__)sizeof(sockaddr_ns *__restrict__)alignof(sockaddr_ns *__restrict__)sizeof(sockaddr_iso *__restrict__)alignof(sockaddr_iso *__restrict__)sizeof(sockaddr_ipx *__restrict__)alignof(sockaddr_ipx *__restrict__)sizeof(sockaddr_inarp *__restrict__)alignof(sockaddr_inarp *__restrict__)sizeof(sockaddr_in6 *__restrict__)alignof(sockaddr_in6 *__restrict__)sizeof(sockaddr_in *__restrict__)alignof(sockaddr_in *__restrict__)sizeof(sockaddr_eon *__restrict__)alignof(sockaddr_eon *__restrict__)sizeof(sockaddr_dl *__restrict__)alignof(sockaddr_dl *__restrict__)sizeof(sockaddr_ax25 *__restrict__)alignof(sockaddr_ax25 *__restrict__)sizeof(sockaddr_at *__restrict__)alignof(sockaddr_at *__restrict__)sizeof(sockaddr *__restrict__)alignof(sockaddr *__restrict__)sizeof(if_nameindex)alignof(if_nameindex)sizeof(ifreq)alignof(ifreq)sizeof(ifmap)alignof(ifmap)sizeof(ifaddr)alignof(ifaddr)sizeof(if_nameindex *)alignof(if_nameindex *)sizeof(ifconf)alignof(ifconf)sizeof(iface)alignof(iface)sizeof(ifreq *)alignof(ifreq *)sizeof(ifaddr *)alignof(ifaddr *)sizeof(iface *)alignof(iface *)sizeof(in_pktinfo)alignof(in_pktinfo)sizeof(ip_mreqn)alignof(ip_mreqn)sizeof(ip_opts)alignof(ip_opts)sizeof(char[40])alignof(char[40])sizeof(__uint32_t)alignof(__uint32_t)sizeof(in6_addr)alignof(in6_addr)sizeof(__uint8_t)alignof(__uint8_t)sizeof(__uint16_t)alignof(__uint16_t)alignof(uint16_t)sizeof(in_port_t)alignof(in_port_t)sizeof(in_addr_t)alignof(in_addr_t)sizeof(const sockaddr_storage)alignof(const sockaddr_storage)sizeof(const sockaddr_storage *)alignof(const sockaddr_storage *)sizeof(sockaddr_storage *)alignof(sockaddr_storage *)sizeof(const in_addr)alignof(const in_addr)sizeof(const in_addr *)alignof(const in_addr *)sizeof(in_addr *)alignof(in_addr *)sizeof(in6_addr *)alignof(in6_addr *)sizeof(const in6_addr)alignof(const in6_addr)sizeof(const in6_addr *)alignof(const in6_addr *)sizeof(const cmsghdr)alignof(const cmsghdr)sizeof(const cmsghdr *)alignof(const cmsghdr *)sizeof(uint8_t **)alignof(uint8_t **)sizeof(unsigned char **)alignof(unsigned char **)sizeof(cmsghdr **)alignof(cmsghdr **)sizeof(ip6_mtuinfo)alignof(ip6_mtuinfo)sizeof(in6_pktinfo)alignof(in6_pktinfo)sizeof(group_filter)alignof(group_filter)sizeof(ip_msfilter)alignof(ip_msfilter)sizeof(group_source_req)alignof(group_source_req)sizeof(group_req)alignof(group_req)sizeof(ipv6_mreq)alignof(ipv6_mreq)sizeof(ip_mreq_source)alignof(ip_mreq_source)sizeof(ip_mreq)alignof(ip_mreq)sizeof(sockaddr_storage[1])alignof(sockaddr_storage[1])sizeof(in_addr[1])alignof(in_addr[1])sizeof(uint32_t[4])alignof(uint32_t[4])sizeof(unsigned int[4])alignof(unsigned int[4])sizeof(uint16_t[8])alignof(uint16_t[8])sizeof(unsigned short[8])alignof(unsigned short[8])sizeof(uint8_t[16])alignof(uint8_t[16])sizeof(unsigned char[16])alignof(unsigned char[16])sizeof(unsigned char[8])alignof(unsigned char[8])sizeof(ip_timestamp)alignof(ip_timestamp)alignof(ip)sizeof(iphdr)alignof(iphdr)sizeof(timestamp)alignof(timestamp)sizeof(uint32_t[9])alignof(uint32_t[9])sizeof(unsigned int[9])alignof(unsigned int[9])sizeof(udphdr)alignof(udphdr)sizeof(_IO_FILE)alignof(_IO_FILE)sizeof(FILE)alignof(FILE)sizeof(__va_list_tag[1])alignof(__va_list_tag[1])sizeof(__gnuc_va_list)alignof(__gnuc_va_list)sizeof(FILE *)alignof(FILE *)sizeof(_IO_FILE *)alignof(_IO_FILE *)sizeof(char **__restrict__)alignof(char **__restrict__)sizeof(size_t *__restrict__)alignof(size_t *__restrict__)sizeof(FILE *__restrict__)alignof(FILE *__restrict__)sizeof(const char *__restrict__)alignof(const char *__restrict__)sizeof(__va_list_tag *)alignof(__va_list_tag *)sizeof(obstack)alignof(obstack)sizeof(_G_fpos64_t)alignof(_G_fpos64_t)sizeof(__fpos64_t)alignof(__fpos64_t)sizeof(fpos64_t)alignof(fpos64_t)sizeof(_G_fpos_t)alignof(_G_fpos_t)sizeof(__fpos_t)alignof(__fpos_t)sizeof(fpos_t)alignof(fpos_t)sizeof(_IO_cookie_io_functions_t)alignof(_IO_cookie_io_functions_t)sizeof(cookie_io_functions_t)alignof(cookie_io_functions_t)sizeof(obstack *)alignof(obstack *)sizeof(obstack *__restrict__)alignof(obstack *__restrict__)sizeof(const fpos64_t)alignof(const fpos64_t)sizeof(const fpos64_t *)alignof(const fpos64_t *)sizeof(_G_fpos64_t *)alignof(_G_fpos64_t *)sizeof(fpos64_t *)alignof(fpos64_t *)sizeof(fpos64_t *__restrict__)alignof(fpos64_t *__restrict__)sizeof(const fpos_t)alignof(const fpos_t)sizeof(const fpos_t *)alignof(const fpos_t *)sizeof(_G_fpos_t *)alignof(_G_fpos_t *)sizeof(fpos_t *)alignof(fpos_t *)sizeof(fpos_t *__restrict__)alignof(fpos_t *__restrict__)sizeof(const void *__restrict__)alignof(const void *__restrict__)sizeof(char *__restrict__)alignof(char *__restrict__)sizeof(va_list)alignof(va_list)sizeof(lldiv_t)alignof(lldiv_t)sizeof(ldiv_t)alignof(ldiv_t)sizeof(div_t)alignof(div_t)sizeof(__compar_d_fn_t)alignof(__compar_d_fn_t)sizeof(__compar_fn_t)alignof(__compar_fn_t)sizeof(drand48_data)alignof(drand48_data)sizeof(random_data)alignof(random_data)sizeof(__int32_t)alignof(__int32_t)sizeof(int32_t)alignof(int32_t)sizeof(__locale_struct)alignof(__locale_struct)sizeof(__locale_struct *)alignof(__locale_struct *)sizeof(__locale_t)alignof(__locale_t)sizeof(locale_t)alignof(locale_t)sizeof(double[])alignof(double[])sizeof(char *const *)alignof(char *const *)sizeof(char *const *__restrict__)alignof(char *const *__restrict__)sizeof(const wchar_t)alignof(const wchar_t)sizeof(const wchar_t *)alignof(const wchar_t *)sizeof(const wchar_t *__restrict__)alignof(const wchar_t *__restrict__)sizeof(wchar_t *)alignof(wchar_t *)sizeof(wchar_t *__restrict__)alignof(wchar_t *__restrict__)sizeof(int *__restrict__)alignof(int *__restrict__)sizeof(unsigned short[7])alignof(unsigned short[7])sizeof(drand48_data *)alignof(drand48_data *)sizeof(unsigned short[3])alignof(unsigned short[3])sizeof(drand48_data *__restrict__)alignof(drand48_data *__restrict__)sizeof(long *__restrict__)alignof(long *__restrict__)sizeof(double *)alignof(double *)sizeof(double *__restrict__)alignof(double *__restrict__)sizeof(random_data *)alignof(random_data *)sizeof(random_data *__restrict__)alignof(random_data *__restrict__)sizeof(int32_t *)alignof(int32_t *)sizeof(int32_t *__restrict__)alignof(int32_t *__restrict__)sizeof(comparison_fn_t)alignof(comparison_fn_t)sizeof(termio)alignof(termio)sizeof(winsize)alignof(winsize)sizeof(intptr_t)alignof(intptr_t)sizeof(__gid_t *)alignof(__gid_t *)sizeof(__uid_t *)alignof(__uid_t *)sizeof(__gid_t[])alignof(__gid_t[])sizeof(unsigned int[])alignof(unsigned int[])sizeof(__s64)alignof(__s64)sizeof(__s16)alignof(__s16)sizeof(__s8)alignof(__s8)sizeof(__kernel_long_t)alignof(__kernel_long_t)sizeof(__kernel_ulong_t)alignof(__kernel_ulong_t)sizeof(__kernel_gid16_t)alignof(__kernel_gid16_t)sizeof(__kernel_uid16_t)alignof(__kernel_uid16_t)sizeof(__kernel_caddr_t)alignof(__kernel_caddr_t)sizeof(__kernel_clockid_t)alignof(__kernel_clockid_t)sizeof(__kernel_timer_t)alignof(__kernel_timer_t)sizeof(__kernel_clock_t)alignof(__kernel_clock_t)sizeof(__kernel_time64_t)alignof(__kernel_time64_t)sizeof(__kernel_time_t)alignof(__kernel_time_t)sizeof(__kernel_fsid_t)alignof(__kernel_fsid_t)sizeof(__kernel_daddr_t)alignof(__kernel_daddr_t)sizeof(__kernel_suseconds_t)alignof(__kernel_suseconds_t)sizeof(__kernel_gid_t)alignof(__kernel_gid_t)sizeof(__kernel_uid_t)alignof(__kernel_uid_t)sizeof(__kernel_ipc_pid_t)alignof(__kernel_ipc_pid_t)sizeof(__kernel_pid_t)alignof(__kernel_pid_t)sizeof(__kernel_mode_t)alignof(__kernel_mode_t)sizeof(__kernel_ino_t)alignof(__kernel_ino_t)sizeof(__kernel_old_dev_t)alignof(__kernel_old_dev_t)sizeof(__kernel_old_gid_t)alignof(__kernel_old_gid_t)sizeof(__kernel_old_uid_t)alignof(__kernel_old_uid_t)sizeof(__kernel_mqd_t)alignof(__kernel_mqd_t)sizeof(__kernel_key_t)alignof(__kernel_key_t)sizeof(__kernel_sighandler_t)alignof(__kernel_sighandler_t)sizeof(__kernel_fd_set)alignof(__kernel_fd_set)sizeof(unsigned long[16])alignof(unsigned long[16])sizeof(__poll_t)alignof(__poll_t)sizeof(__wsum)alignof(__wsum)sizeof(__sum16)alignof(__sum16)sizeof(__be64)alignof(__be64)sizeof(__le64)alignof(__le64)sizeof(__le32)alignof(__le32)sizeof(__be16)alignof(__be16)sizeof(__le16)alignof(__le16)sizeof(ethhdr)alignof(ethhdr)sizeof(unsigned char[6])alignof(unsigned char[6])sizeof(tpacket_req3)alignof(tpacket_req3)sizeof(tpacket_req)alignof(tpacket_req)sizeof(tpacket_bd_header_u)alignof(tpacket_bd_header_u)sizeof(tpacket_hdr_v1)alignof(tpacket_hdr_v1)sizeof(tpacket_bd_ts)alignof(tpacket_bd_ts)sizeof(tpacket_hdr_variant1)alignof(tpacket_hdr_variant1)sizeof(tpacket_stats_v3)alignof(tpacket_stats_v3)sizeof(tpacket_stats)alignof(tpacket_stats)sizeof(packet_mreq)alignof(packet_mreq)sizeof(tpacket_req_u)alignof(tpacket_req_u)sizeof(tpacket_versions)alignof(tpacket_versions)sizeof(tpacket_block_desc)alignof(tpacket_block_desc)sizeof(tpacket3_hdr)alignof(tpacket3_hdr)sizeof(tpacket2_hdr)alignof(tpacket2_hdr)sizeof(tpacket_hdr)alignof(tpacket_hdr)sizeof(tpacket_auxdata)alignof(tpacket_auxdata)sizeof(tpacket_stats_u)alignof(tpacket_stats_u)sizeof(tpacket_rollover_stats)alignof(tpacket_rollover_stats)sizeof(sockaddr_ll)alignof(sockaddr_ll)sizeof(sockaddr_pkt)alignof(sockaddr_pkt)sizeof(__u8[8])alignof(__u8[8])sizeof(__u8[4])alignof(__u8[4])sizeof(unsigned char[4])alignof(unsigned char[4])sizeof(__uint64_t)alignof(__uint64_t)sizeof(udphdr *)alignof(udphdr *)sizeof(iphdr *)alignof(iphdr *)sizeof(char[31])alignof(char[31])sizeof(char[44])alignof(char[44])sizeof(sockaddr_ll *)alignof(sockaddr_ll *)sizeof(packet_mreq *)alignof(packet_mreq *)sizeof(char[78])alignof(char[78])sizeof(dirent64)alignof(dirent64)sizeof(dirent)alignof(dirent)sizeof(char[256])alignof(char[256])sizeof(__dirstream)alignof(__dirstream)sizeof(DIR)alignof(DIR)sizeof(const dirent64)alignof(const dirent64)sizeof(const dirent64 *)alignof(const dirent64 *)sizeof(const dirent64 **)alignof(const dirent64 **)sizeof(dirent64 *)alignof(dirent64 *)sizeof(dirent64 **)alignof(dirent64 **)sizeof(const dirent)alignof(const dirent)sizeof(const dirent *)alignof(const dirent *)sizeof(const dirent **)alignof(const dirent **)sizeof(dirent *)alignof(dirent *)sizeof(dirent **)alignof(dirent **)sizeof(__off64_t *__restrict__)alignof(__off64_t *__restrict__)sizeof(__off_t *)alignof(__off_t *)sizeof(__off_t *__restrict__)alignof(__off_t *__restrict__)sizeof(dirent64 ***)alignof(dirent64 ***)sizeof(dirent64 ***__restrict__)alignof(dirent64 ***__restrict__)sizeof(dirent ***)alignof(dirent ***)sizeof(dirent ***__restrict__)alignof(dirent ***__restrict__)sizeof(DIR *)alignof(DIR *)sizeof(__dirstream *)alignof(__dirstream *)sizeof(DIR *__restrict__)alignof(DIR *__restrict__)sizeof(dirent64 *__restrict__)alignof(dirent64 *__restrict__)sizeof(dirent64 **__restrict__)alignof(dirent64 **__restrict__)sizeof(dirent *__restrict__)alignof(dirent *__restrict__)sizeof(dirent **__restrict__)alignof(dirent **__restrict__)sizeof(long[8])alignof(long[8])sizeof(__jmp_buf)alignof(__jmp_buf)sizeof(__jmp_buf_tag)alignof(__jmp_buf_tag)sizeof(__jmp_buf_tag[1])alignof(__jmp_buf_tag[1])sizeof(sigjmp_buf)alignof(sigjmp_buf)sizeof(speed_t)alignof(speed_t)sizeof(cc_t)alignof(cc_t)sizeof(tcflag_t)alignof(tcflag_t)sizeof(termios)alignof(termios)sizeof(cc_t[32])alignof(cc_t[32])sizeof(unsigned char[32])alignof(unsigned char[32])sizeof(termios *)alignof(termios *)sizeof(const termios)alignof(const termios)sizeof(const termios *)alignof(const termios *)sizeof(timex)alignof(timex)sizeof(__clockid_t)alignof(__clockid_t)sizeof(timex *)alignof(timex *)sizeof(tm)alignof(tm)sizeof(itimerspec)alignof(itimerspec)sizeof(__timer_t)alignof(__timer_t)sizeof(timer_t)alignof(timer_t)sizeof(clockid_t)alignof(clockid_t)sizeof(__time_t)alignof(__time_t)sizeof(time_t)alignof(time_t)sizeof(__clock_t)alignof(__clock_t)sizeof(clock_t)alignof(clock_t)sizeof(tm *)alignof(tm *)sizeof(tm *__restrict__)alignof(tm *__restrict__)sizeof(itimerspec *)alignof(itimerspec *)sizeof(const itimerspec)alignof(const itimerspec)sizeof(const itimerspec *)alignof(const itimerspec *)sizeof(const itimerspec *__restrict__)alignof(const itimerspec *__restrict__)sizeof(itimerspec *__restrict__)alignof(itimerspec *__restrict__)sizeof(sigevent *)alignof(sigevent *)sizeof(sigevent *__restrict__)alignof(sigevent *__restrict__)sizeof(timer_t *)alignof(timer_t *)sizeof(timer_t *__restrict__)alignof(timer_t *__restrict__)sizeof(clockid_t *)alignof(clockid_t *)sizeof(const time_t)alignof(const time_t)sizeof(const time_t *)alignof(const time_t *)sizeof(const time_t *__restrict__)alignof(const time_t *__restrict__)sizeof(const tm)alignof(const tm)sizeof(const tm *)alignof(const tm *)sizeof(const tm *__restrict__)alignof(const tm *__restrict__)sizeof(time_t *)alignof(time_t *)sizeof(char *[2])alignof(char *[2])sizeof(statx)alignof(statx)sizeof(statx_timestamp)alignof(statx_timestamp)sizeof(__int64_t)alignof(__int64_t)sizeof(statx *)alignof(statx *)sizeof(statx *__restrict__)alignof(statx *__restrict__)sizeof(__uint64_t[14])alignof(__uint64_t[14])sizeof(unsigned long[14])alignof(unsigned long[14])sizeof(__uint16_t[1])alignof(__uint16_t[1])sizeof(unsigned short[1])alignof(unsigned short[1])sizeof(__int32_t[1])alignof(__int32_t[1])sizeof(signed int[1])alignof(signed int[1])sizeof(stat64 *)alignof(stat64 *)sizeof(__dev_t *)alignof(__dev_t *)sizeof(stat *)alignof(stat *)sizeof(const timespec[2])alignof(const timespec[2])sizeof(timespec[2])alignof(timespec[2])sizeof(stat64 *__restrict__)alignof(stat64 *__restrict__)sizeof(stat *__restrict__)alignof(stat *__restrict__)sizeof(itimerval)alignof(itimerval)sizeof(__itimer_which)alignof(__itimer_which)sizeof(__itimer_which_t)alignof(__itimer_which_t)sizeof(timezone)alignof(timezone)sizeof(timezone *)alignof(timezone *)sizeof(timezone *__restrict__)alignof(timezone *__restrict__)sizeof(__timezone_ptr_t)alignof(__timezone_ptr_t)sizeof(const timeval)alignof(const timeval)sizeof(const timeval[2])alignof(const timeval[2])sizeof(timeval[2])alignof(timeval[2])sizeof(const itimerval)alignof(const itimerval)sizeof(const itimerval *)alignof(const itimerval *)sizeof(const itimerval *__restrict__)alignof(const itimerval *__restrict__)sizeof(itimerval *)alignof(itimerval *)sizeof(itimerval *__restrict__)alignof(itimerval *__restrict__)sizeof(const timeval *)alignof(const timeval *)sizeof(const timezone)alignof(const timezone)sizeof(const timezone *)alignof(const timezone *)sizeof(char[])alignof(char[])sizeof(sandbox_cmdline_option)alignof(sandbox_cmdline_option)sizeof(sandbox_cmdline_option *)alignof(sandbox_cmdline_option *)sizeof(sandbox_cmdline_option *[])alignof(sandbox_cmdline_option *[])sizeof(sandbox_cmdline_option **)alignof(sandbox_cmdline_option **)sizeof(hlist_node)alignof(hlist_node)sizeof(hlist_head)alignof(hlist_head)sizeof(hlist_node *)alignof(hlist_node *)sizeof(hlist_node **)alignof(hlist_node **)sizeof(hlist_head *)alignof(hlist_head *)sizeof(const hlist_node)alignof(const hlist_node)sizeof(const hlist_node *)alignof(const hlist_node *)sizeof(const hlist_head)alignof(const hlist_head)sizeof(const hlist_head *)alignof(const hlist_head *)sizeof(rtc_time)alignof(rtc_time)sizeof(option)alignof(option)sizeof(os_mem_hdr)alignof(os_mem_hdr)sizeof(char[500])alignof(char[500])sizeof(char[5])alignof(char[5])sizeof(char[6])alignof(char[6])sizeof(char *[5])alignof(char *[5])sizeof(char[3])alignof(char[3])sizeof(char ***)alignof(char ***)sizeof(char[20])alignof(char[20])sizeof(char[27])alignof(char[27])sizeof(char[24])alignof(char[24])sizeof(const char *[4])alignof(const char *[4])sizeof(char *[4])alignof(char *[4])sizeof(option *)alignof(option *)sizeof(const option)alignof(const option)sizeof(const option *)alignof(const option *)sizeof(os_mem_hdr *)alignof(os_mem_hdr *)sizeof(char[33])alignof(char[33])sizeof(char[35])alignof(char[35])sizeof(char[37])alignof(char[37])sizeof(char[28])alignof(char[28])sizeof(char[4])alignof(char[4])sizeof(__intptr_t)alignof(__intptr_t)sizeof(ff_rumble_effect)alignof(ff_rumble_effect)sizeof(ff_condition_effect)alignof(ff_condition_effect)sizeof(ff_periodic_effect)alignof(ff_periodic_effect)sizeof(ff_ramp_effect)alignof(ff_ramp_effect)sizeof(ff_constant_effect)alignof(ff_constant_effect)sizeof(ff_replay)alignof(ff_replay)sizeof(ff_trigger)alignof(ff_trigger)sizeof(ff_envelope)alignof(ff_envelope)sizeof(ff_effect)alignof(ff_effect)sizeof(input_mask)alignof(input_mask)sizeof(input_keymap_entry)alignof(input_keymap_entry)sizeof(input_absinfo)alignof(input_absinfo)sizeof(input_id)alignof(input_id)sizeof(input_event)alignof(input_event)sizeof(ff_condition_effect[2])alignof(ff_condition_effect[2])sizeof(__s16 *)alignof(__s16 *)sizeof(signed short *)alignof(signed short *)sizeof(__u8[32])alignof(__u8[32])sizeof(__uintmax_t)alignof(__uintmax_t)sizeof(__intmax_t)alignof(__intmax_t)sizeof(__uint_least64_t)alignof(__uint_least64_t)sizeof(__uint_least32_t)alignof(__uint_least32_t)sizeof(__uint_least16_t)alignof(__uint_least16_t)sizeof(__uint_least8_t)alignof(__uint_least8_t)sizeof(__int_least64_t)alignof(__int_least64_t)sizeof(__int_least32_t)alignof(__int_least32_t)sizeof(__int16_t)alignof(__int16_t)sizeof(__int_least16_t)alignof(__int_least16_t)sizeof(__int8_t)alignof(__int8_t)sizeof(__int_least8_t)alignof(__int_least8_t)sizeof(uintmax_t)alignof(uintmax_t)sizeof(intmax_t)alignof(intmax_t)sizeof(uintptr_t)alignof(uintptr_t)sizeof(uint_fast64_t)alignof(uint_fast64_t)sizeof(uint_fast32_t)alignof(uint_fast32_t)sizeof(uint_fast16_t)alignof(uint_fast16_t)sizeof(uint_fast8_t)alignof(uint_fast8_t)sizeof(int_fast64_t)alignof(int_fast64_t)sizeof(int_fast32_t)alignof(int_fast32_t)sizeof(int_fast16_t)alignof(int_fast16_t)sizeof(int_fast8_t)alignof(int_fast8_t)sizeof(uint_least64_t)alignof(uint_least64_t)sizeof(uint_least32_t)alignof(uint_least32_t)sizeof(uint_least16_t)alignof(uint_least16_t)sizeof(uint_least8_t)alignof(uint_least8_t)sizeof(int_least64_t)alignof(int_least64_t)sizeof(int_least32_t)alignof(int_least32_t)sizeof(int_least16_t)alignof(int_least16_t)sizeof(int_least8_t)alignof(int_least8_t)sizeof(__gwchar_t)alignof(__gwchar_t)sizeof(imaxdiv_t)alignof(imaxdiv_t)sizeof(const __gwchar_t)alignof(const __gwchar_t)sizeof(const __gwchar_t *)alignof(const __gwchar_t *)sizeof(const __gwchar_t *__restrict__)alignof(const __gwchar_t *__restrict__)sizeof(__gwchar_t *)alignof(__gwchar_t *)sizeof(__gwchar_t **)alignof(__gwchar_t **)sizeof(__gwchar_t **__restrict__)alignof(__gwchar_t **__restrict__)sizeof(unsigned short **)alignof(unsigned short **)sizeof(iconv_t)alignof(iconv_t)alignof(Uint64)alignof(int64_t)alignof(Sint64)sizeof(int16_t)alignof(int16_t)sizeof(int8_t)alignof(int8_t)sizeof(int[1])alignof(int[1])sizeof(SDL_dummy_enum)alignof(SDL_dummy_enum)alignof(SDL_DUMMY_ENUM)sizeof(SDL_dummy_sint64)alignof(SDL_dummy_sint64)sizeof(SDL_dummy_uint64)alignof(SDL_dummy_uint64)sizeof(SDL_dummy_sint32)alignof(SDL_dummy_sint32)alignof(Sint32)sizeof(SDL_dummy_uint32)alignof(SDL_dummy_uint32)alignof(Uint32)sizeof(SDL_dummy_sint16)alignof(SDL_dummy_sint16)alignof(Sint16)sizeof(SDL_dummy_uint16)alignof(SDL_dummy_uint16)alignof(Uint16)sizeof(SDL_dummy_sint8)alignof(SDL_dummy_sint8)alignof(Sint8)sizeof(SDL_dummy_uint8)alignof(SDL_dummy_uint8)alignof(Uint8)sizeof(SDL_bool)alignof(SDL_bool)sizeof(SDL_errorcode)alignof(SDL_errorcode)sizeof(SDL_mutex)alignof(SDL_mutex)sizeof(SDL_cond)alignof(SDL_cond)sizeof(SDL_semaphore)alignof(SDL_semaphore)sizeof(SDL_sem)alignof(SDL_sem)sizeof(SDL_cond *)alignof(SDL_cond *)sizeof(SDL_mutex *)alignof(SDL_mutex *)sizeof(SDL_sem *)alignof(SDL_sem *)sizeof(SDL_semaphore *)alignof(SDL_semaphore *)sizeof(SDL_Thread)alignof(SDL_Thread)sizeof(SDL_Thread *)alignof(SDL_Thread *)sizeof(SDL_RWops)alignof(SDL_RWops)sizeof(SDL_RWops *)alignof(SDL_RWops *)sizeof(Uint8 *)alignof(Uint8 *)sizeof(SDL_AudioCVT)alignof(SDL_AudioCVT)sizeof(SDL_AudioSpec)alignof(SDL_AudioSpec)sizeof(SDL_audiostatus)alignof(SDL_audiostatus)sizeof(const Uint8)alignof(const Uint8)sizeof(const Uint8 *)alignof(const Uint8 *)sizeof(SDL_AudioCVT *)alignof(SDL_AudioCVT *)sizeof(SDL_AudioSpec *)alignof(SDL_AudioSpec *)sizeof(Uint8 **)alignof(Uint8 **)sizeof(Uint32 *)alignof(Uint32 *)sizeof(..(*[10])(..))alignof(..(*[10])(..))sizeof(SDL_CD)alignof(SDL_CD)sizeof(CDstatus)alignof(CDstatus)sizeof(SDL_CDtrack)alignof(SDL_CDtrack)sizeof(SDL_CD *)alignof(SDL_CD *)sizeof(SDL_CDtrack[100])alignof(SDL_CDtrack[100])sizeof(SDLMod)alignof(SDLMod)sizeof(SDLKey)alignof(SDLKey)sizeof(SDL_keysym)alignof(SDL_keysym)sizeof(SDL_Rect)alignof(SDL_Rect)sizeof(SDL_Surface)alignof(SDL_Surface)sizeof(SDL_GrabMode)alignof(SDL_GrabMode)sizeof(SDL_GLattr)alignof(SDL_GLattr)sizeof(SDL_Overlay)alignof(SDL_Overlay)sizeof(SDL_PixelFormat)alignof(SDL_PixelFormat)sizeof(SDL_Color)alignof(SDL_Color)sizeof(SDL_VideoInfo)alignof(SDL_VideoInfo)sizeof(SDL_Palette)alignof(SDL_Palette)sizeof(SDL_Surface *)alignof(SDL_Surface *)sizeof(SDL_Rect *)alignof(SDL_Rect *)sizeof(SDL_Overlay *)alignof(SDL_Overlay *)sizeof(SDL_PixelFormat *)alignof(SDL_PixelFormat *)sizeof(const SDL_Rect)alignof(const SDL_Rect)sizeof(const SDL_Rect *)alignof(const SDL_Rect *)sizeof(const SDL_PixelFormat)alignof(const SDL_PixelFormat)sizeof(const SDL_PixelFormat *)alignof(const SDL_PixelFormat *)sizeof(const SDL_PixelFormat *const)alignof(const SDL_PixelFormat *const)sizeof(SDL_Color *)alignof(SDL_Color *)sizeof(Uint16 *)alignof(Uint16 *)sizeof(const Uint16)alignof(const Uint16)sizeof(const Uint16 *)alignof(const Uint16 *)sizeof(SDL_Rect **)alignof(SDL_Rect **)sizeof(const SDL_VideoInfo)alignof(const SDL_VideoInfo)sizeof(const SDL_VideoInfo *)alignof(const SDL_VideoInfo *)sizeof(SDL_VideoInfo *)alignof(SDL_VideoInfo *)sizeof(private_yuvhwdata)alignof(private_yuvhwdata)sizeof(private_yuvhwfuncs)alignof(private_yuvhwfuncs)sizeof(SDL_blit)alignof(SDL_blit)sizeof(SDL_BlitMap)alignof(SDL_BlitMap)sizeof(private_hwdata)alignof(private_hwdata)sizeof(private_yuvhwdata *)alignof(private_yuvhwdata *)sizeof(private_yuvhwfuncs *)alignof(private_yuvhwfuncs *)sizeof(SDL_BlitMap *)alignof(SDL_BlitMap *)sizeof(private_hwdata *)alignof(private_hwdata *)sizeof(SDL_Palette *)alignof(SDL_Palette *)sizeof(SDL_Cursor)alignof(SDL_Cursor)sizeof(WMcursor)alignof(WMcursor)sizeof(SDL_Cursor *)alignof(SDL_Cursor *)sizeof(WMcursor *)alignof(WMcursor *)sizeof(Uint8 *[2])alignof(Uint8 *[2])sizeof(unsigned char *[2])alignof(unsigned char *[2])sizeof(_SDL_Joystick)alignof(_SDL_Joystick)sizeof(SDL_Joystick)alignof(SDL_Joystick)sizeof(SDL_Joystick *)alignof(SDL_Joystick *)sizeof(_SDL_Joystick *)alignof(_SDL_Joystick *)sizeof(SDL_Event)alignof(SDL_Event)sizeof(const SDL_Event)alignof(const SDL_Event)sizeof(const SDL_Event *)alignof(const SDL_Event *)sizeof(SDL_EventFilter)alignof(SDL_EventFilter)sizeof(SDL_eventaction)alignof(SDL_eventaction)sizeof(SDL_SysWMEvent)alignof(SDL_SysWMEvent)sizeof(SDL_UserEvent)alignof(SDL_UserEvent)sizeof(SDL_QuitEvent)alignof(SDL_QuitEvent)sizeof(SDL_ExposeEvent)alignof(SDL_ExposeEvent)sizeof(SDL_ResizeEvent)alignof(SDL_ResizeEvent)sizeof(SDL_JoyButtonEvent)alignof(SDL_JoyButtonEvent)sizeof(SDL_JoyHatEvent)alignof(SDL_JoyHatEvent)sizeof(SDL_JoyBallEvent)alignof(SDL_JoyBallEvent)sizeof(SDL_JoyAxisEvent)alignof(SDL_JoyAxisEvent)sizeof(SDL_MouseButtonEvent)alignof(SDL_MouseButtonEvent)sizeof(SDL_MouseMotionEvent)alignof(SDL_MouseMotionEvent)sizeof(SDL_KeyboardEvent)alignof(SDL_KeyboardEvent)sizeof(SDL_ActiveEvent)alignof(SDL_ActiveEvent)sizeof(SDL_SysWMmsg)alignof(SDL_SysWMmsg)sizeof(SDL_Event *)alignof(SDL_Event *)sizeof(SDL_EventMask)alignof(SDL_EventMask)sizeof(SDL_EventType)alignof(SDL_EventType)sizeof(SDL_SysWMmsg *)alignof(SDL_SysWMmsg *)sizeof(_SDL_TimerID)alignof(_SDL_TimerID)sizeof(_SDL_TimerID *)alignof(_SDL_TimerID *)sizeof(SDL_TimerID)alignof(SDL_TimerID)sizeof(SDL_NewTimerCallback)alignof(SDL_NewTimerCallback)sizeof(SDL_TimerCallback)alignof(SDL_TimerCallback)sizeof(SDL_version)alignof(SDL_version)sizeof(const SDL_version)alignof(const SDL_version)sizeof(const SDL_version *)alignof(const SDL_version *)sizeof(SDL_version *)alignof(SDL_version *)sizeof(buf_info)alignof(buf_info)sizeof(sdl_info)alignof(sdl_info)sizeof(buf_info *)alignof(buf_info *)sizeof(buf_info[2])alignof(buf_info[2])sizeof(char[19])alignof(char[19])sizeof(const char[23])alignof(const char[23])sizeof(char[36])alignof(char[36])sizeof(char[25])alignof(char[25])sizeof(int[8])alignof(int[8])sizeof(int[])alignof(int[])sizeof(int16_t[323])alignof(int16_t[323])sizeof(signed short[323])alignof(signed short[323])sizeof(int16_t *)alignof(int16_t *)sizeof(char[34])alignof(char[34])sizeof(char[7])alignof(char[7])sizeof(const char *const)alignof(const char *const)sizeof(char[2])alignof(char[2])sizeof(const char *[3])alignof(const char *[3])sizeof(char *[3])alignof(char *[3])sizeof(char[1])alignof(char[1])sizeof(char[95])alignof(char[95])sizeof(char[83])alignof(char[83])sizeof(char[17])alignof(char[17])sizeof(char[15])alignof(char[15])sizeof(char[45])alignof(char[45])sizeof(char[59])alignof(char[59])sizeof(const char[11])alignof(const char[11])sizeof(char[11])alignof(char[11])sizeof(bool *)alignof(bool *)sizeof(sandbox_wdt_info *)alignof(sandbox_wdt_info *)sizeof(sandbox_spi_info(*)[10])alignof(sandbox_spi_info(*)[10])sizeof(const char[18])alignof(const char[18])sizeof(char[18])alignof(char[18])sizeof(char[50])alignof(char[50])sizeof(sandbox_state_io *)alignof(sandbox_state_io *)sizeof(char(*)[0])alignof(char(*)[0])sizeof(fdt_header)alignof(fdt_header)sizeof(const fdt_header)alignof(const fdt_header)sizeof(const fdt_header *)alignof(const fdt_header *)sizeof(fdt_header *)alignof(fdt_header *)sizeof(char[38])alignof(char[38])sizeof(const char[20])alignof(const char[20])sizeof(const char[25])alignof(const char[25])sizeof(const char[19])alignof(const char[19])sizeof(bootm_headers)alignof(bootm_headers)sizeof(bootm_headers_t)alignof(bootm_headers_t)sizeof(arm_z_header)alignof(arm_z_header)sizeof(bootm_headers_t *)alignof(bootm_headers_t *)sizeof(bootm_headers *)alignof(bootm_headers *)sizeof(bootstage_id)alignof(bootstage_id)sizeof(char[56])alignof(char[56])sizeof(arm_z_header *)alignof(arm_z_header *)sizeof(dm_pci_emul_ops *)alignof(dm_pci_emul_ops *)sizeof(const char[16])alignof(const char[16])sizeof(mcdp_version)alignof(mcdp_version)sizeof(usb_chg_measures)alignof(usb_chg_measures)sizeof(ec_sb_fw_update_header)alignof(ec_sb_fw_update_header)sizeof(ec_params_i2c_passthru_msg)alignof(ec_params_i2c_passthru_msg)sizeof(ec_response_get_next_data)alignof(ec_response_get_next_data)sizeof(ec_response_motion_sense_fifo_info)alignof(ec_response_motion_sense_fifo_info)sizeof(ec_collect_item)alignof(ec_collect_item)sizeof(ec_mkbp_config)alignof(ec_mkbp_config)sizeof(ec_thermal_config)alignof(ec_thermal_config)sizeof(ec_response_motion_sense_fifo_data)alignof(ec_response_motion_sense_fifo_data)sizeof(ec_response_motion_sensor_data)alignof(ec_response_motion_sensor_data)sizeof(ec_motion_sense_activity)alignof(ec_motion_sense_activity)sizeof(lightbar_params_v2_colors)alignof(lightbar_params_v2_colors)sizeof(lightbar_params_v2_thresholds)alignof(lightbar_params_v2_thresholds)sizeof(lightbar_params_v2_brightness)alignof(lightbar_params_v2_brightness)sizeof(lightbar_params_v2_oscillation)alignof(lightbar_params_v2_oscillation)sizeof(lightbar_params_v2_tap)alignof(lightbar_params_v2_tap)sizeof(lightbar_params_v2_timing)alignof(lightbar_params_v2_timing)sizeof(lightbar_params_v1)alignof(lightbar_params_v1)sizeof(lightbar_params_v0)alignof(lightbar_params_v0)sizeof(lightbar_program)alignof(lightbar_program)sizeof(rgb_s)alignof(rgb_s)sizeof(ec_params_flash_erase)alignof(ec_params_flash_erase)sizeof(ec_flash_bank)alignof(ec_flash_bank)sizeof(ec_params_tp_frame_get)alignof(ec_params_tp_frame_get)sizeof(ec_response_tp_frame_info)alignof(ec_response_tp_frame_info)sizeof(ec_params_fp_frame)alignof(ec_params_fp_frame)sizeof(ec_response_fp_info)alignof(ec_response_fp_info)sizeof(ec_response_fp_mode)alignof(ec_response_fp_mode)sizeof(ec_params_fp_mode)alignof(ec_params_fp_mode)sizeof(ec_params_fp_sensor_config)alignof(ec_params_fp_sensor_config)sizeof(ec_params_fp_passthru)alignof(ec_params_fp_passthru)sizeof(ec_params_set_cbi)alignof(ec_params_set_cbi)sizeof(ec_params_get_cbi)alignof(ec_params_get_cbi)sizeof(cbi_data_tag)alignof(cbi_data_tag)sizeof(ec_params_efs_verify)alignof(ec_params_efs_verify)sizeof(ec_params_rwsig_action)alignof(ec_params_rwsig_action)sizeof(rwsig_action)alignof(rwsig_action)sizeof(ec_response_rwsig_check_status)alignof(ec_response_rwsig_check_status)sizeof(ec_response_pd_chip_info)alignof(ec_response_pd_chip_info)sizeof(ec_params_pd_chip_info)alignof(ec_params_pd_chip_info)sizeof(ec_response_usb_pd_mux_info)alignof(ec_response_usb_pd_mux_info)sizeof(ec_params_usb_pd_mux_info)alignof(ec_params_usb_pd_mux_info)sizeof(ec_params_pd_control)alignof(ec_params_pd_control)sizeof(ec_pd_control_cmd)alignof(ec_pd_control_cmd)sizeof(ec_params_pd_write_log_entry)alignof(ec_params_pd_write_log_entry)sizeof(ec_params_usb_pd_set_mode_request)alignof(ec_params_usb_pd_set_mode_request)sizeof(pd_mode_cmd)alignof(pd_mode_cmd)sizeof(ec_params_usb_pd_get_mode_response)alignof(ec_params_usb_pd_get_mode_response)sizeof(ec_params_usb_pd_get_mode_request)alignof(ec_params_usb_pd_get_mode_request)sizeof(mcdp_info)alignof(mcdp_info)sizeof(ec_response_pd_log)alignof(ec_response_pd_log)sizeof(ec_params_charge_port_override)alignof(ec_params_charge_port_override)sizeof(usb_pd_override_ports)alignof(usb_pd_override_ports)sizeof(ec_params_usb_pd_discovery_entry)alignof(ec_params_usb_pd_discovery_entry)sizeof(ec_params_usb_pd_info_request)alignof(ec_params_usb_pd_info_request)sizeof(ec_params_usb_pd_rw_hash_entry)alignof(ec_params_usb_pd_rw_hash_entry)sizeof(ec_params_usb_pd_fw_update)alignof(ec_params_usb_pd_fw_update)sizeof(usb_pd_fw_update_cmds)alignof(usb_pd_fw_update_cmds)sizeof(ec_response_usb_pd_power_info)alignof(ec_response_usb_pd_power_info)sizeof(usb_power_roles)alignof(usb_power_roles)sizeof(usb_chg_type)alignof(usb_chg_type)sizeof(ec_params_usb_pd_power_info)alignof(ec_params_usb_pd_power_info)sizeof(ec_response_usb_pd_ports)alignof(ec_response_usb_pd_ports)sizeof(ec_response_usb_pd_control_v1)alignof(ec_response_usb_pd_control_v1)sizeof(ec_response_usb_pd_control)alignof(ec_response_usb_pd_control)sizeof(ec_params_usb_pd_control)alignof(ec_params_usb_pd_control)sizeof(usb_pd_control_swap)alignof(usb_pd_control_swap)sizeof(usb_pd_control_mux)alignof(usb_pd_control_mux)sizeof(usb_pd_control_role)alignof(usb_pd_control_role)sizeof(ec_response_host_event_status)alignof(ec_response_host_event_status)sizeof(ec_response_pd_status)alignof(ec_response_pd_status)sizeof(ec_params_pd_status)alignof(ec_params_pd_status)sizeof(pd_charge_state)alignof(pd_charge_state)sizeof(ec_params_reboot_ec)alignof(ec_params_reboot_ec)sizeof(ec_reboot_cmd)alignof(ec_reboot_cmd)sizeof(ec_response_i2c_passthru_protect)alignof(ec_response_i2c_passthru_protect)sizeof(ec_params_i2c_passthru_protect)alignof(ec_params_i2c_passthru_protect)sizeof(ec_i2c_passthru_protect_subcmd)alignof(ec_i2c_passthru_protect_subcmd)sizeof(ec_params_entering_mode)alignof(ec_params_entering_mode)sizeof(ec_response_sb_fw_update)alignof(ec_response_sb_fw_update)sizeof(ec_params_sb_fw_update)alignof(ec_params_sb_fw_update)sizeof(ec_sb_fw_update_subcmd)alignof(ec_sb_fw_update_subcmd)sizeof(ec_response_battery_vendor_param)alignof(ec_response_battery_vendor_param)sizeof(ec_params_battery_vendor_param)alignof(ec_params_battery_vendor_param)sizeof(ec_battery_vendor_param_mode)alignof(ec_battery_vendor_param_mode)sizeof(ec_params_sb_wr_block)alignof(ec_params_sb_wr_block)sizeof(ec_response_sb_rd_block)alignof(ec_response_sb_rd_block)sizeof(ec_params_sb_wr_word)alignof(ec_params_sb_wr_word)sizeof(ec_response_sb_rd_word)alignof(ec_response_sb_rd_word)sizeof(ec_params_sb_rd)alignof(ec_params_sb_rd)sizeof(ec_response_device_event)alignof(ec_response_device_event)sizeof(ec_params_device_event)alignof(ec_params_device_event)sizeof(ec_device_event_param)alignof(ec_device_event_param)sizeof(ec_device_event)alignof(ec_device_event)sizeof(ec_params_host_sleep_event)alignof(ec_params_host_sleep_event)sizeof(host_sleep_event)alignof(host_sleep_event)sizeof(ec_response_hibernation_delay)alignof(ec_response_hibernation_delay)sizeof(ec_params_hibernation_delay)alignof(ec_params_hibernation_delay)sizeof(ec_params_dedicated_charger_limit)alignof(ec_params_dedicated_charger_limit)sizeof(ec_params_external_power_limit_v1)alignof(ec_params_external_power_limit_v1)sizeof(ec_params_current_limit)alignof(ec_params_current_limit)sizeof(ec_response_charge_state)alignof(ec_response_charge_state)sizeof(ec_params_charge_state)alignof(ec_params_charge_state)sizeof(charge_state_params)alignof(charge_state_params)sizeof(charge_state_command)alignof(charge_state_command)sizeof(ec_params_hang_detect)alignof(ec_params_hang_detect)sizeof(ec_response_i2c_passthru)alignof(ec_response_i2c_passthru)sizeof(ec_params_i2c_passthru)alignof(ec_params_i2c_passthru)sizeof(ec_response_power_info)alignof(ec_response_power_info)sizeof(ec_response_ldo_get)alignof(ec_response_ldo_get)sizeof(ec_params_ldo_get)alignof(ec_params_ldo_get)sizeof(ec_params_ldo_set)alignof(ec_params_ldo_set)sizeof(ec_ldo_state)alignof(ec_ldo_state)sizeof(ec_params_usb_mux)alignof(ec_params_usb_mux)sizeof(ec_params_battery_cutoff)alignof(ec_params_battery_cutoff)sizeof(ec_params_console_read_v1)alignof(ec_params_console_read_v1)sizeof(ec_console_read_subcmd)alignof(ec_console_read_subcmd)sizeof(ec_params_charge_control)alignof(ec_params_charge_control)sizeof(ec_charge_control_mode)alignof(ec_charge_control_mode)sizeof(ec_params_i2c_write)alignof(ec_params_i2c_write)sizeof(ec_response_i2c_read)alignof(ec_response_i2c_read)sizeof(ec_params_i2c_read)alignof(ec_params_i2c_read)sizeof(gpio_get_subcmd)alignof(gpio_get_subcmd)sizeof(ec_response_gpio_get_v1)alignof(ec_response_gpio_get_v1)sizeof(ec_params_gpio_get_v1)alignof(ec_params_gpio_get_v1)sizeof(ec_response_gpio_get)alignof(ec_response_gpio_get)sizeof(ec_params_gpio_get)alignof(ec_params_gpio_get)sizeof(ec_params_gpio_set)alignof(ec_params_gpio_set)sizeof(ec_response_switch_enable_wireless_v1)alignof(ec_response_switch_enable_wireless_v1)sizeof(ec_params_switch_enable_wireless_v1)alignof(ec_params_switch_enable_wireless_v1)sizeof(ec_params_switch_enable_wireless_v0)alignof(ec_params_switch_enable_wireless_v0)sizeof(ec_params_switch_enable_backlight)alignof(ec_params_switch_enable_backlight)sizeof(ec_host_event_mask_type)alignof(ec_host_event_mask_type)sizeof(ec_host_event_action)alignof(ec_host_event_action)sizeof(ec_response_host_event)alignof(ec_response_host_event)sizeof(ec_params_host_event)alignof(ec_params_host_event)sizeof(ec_response_host_event_mask)alignof(ec_response_host_event_mask)sizeof(ec_params_host_event_mask)alignof(ec_params_host_event_mask)sizeof(ec_response_temp_sensor_get_info)alignof(ec_response_temp_sensor_get_info)sizeof(ec_params_temp_sensor_get_info)alignof(ec_params_temp_sensor_get_info)sizeof(ec_response_keyboard_factory_test)alignof(ec_response_keyboard_factory_test)sizeof(ec_response_get_next_event)alignof(ec_response_get_next_event)sizeof(ec_mkbp_event)alignof(ec_mkbp_event)sizeof(ec_result_keyscan_seq_ctrl)alignof(ec_result_keyscan_seq_ctrl)sizeof(ec_params_keyscan_seq_ctrl)alignof(ec_params_keyscan_seq_ctrl)sizeof(ec_collect_flags)alignof(ec_collect_flags)sizeof(ec_keyscan_seq_cmd)alignof(ec_keyscan_seq_cmd)sizeof(ec_response_mkbp_get_config)alignof(ec_response_mkbp_get_config)sizeof(ec_params_mkbp_set_config)alignof(ec_params_mkbp_set_config)sizeof(mkbp_config_valid)alignof(mkbp_config_valid)sizeof(mkbp_config_flags)alignof(mkbp_config_flags)sizeof(ec_params_mkbp_simulate_key)alignof(ec_params_mkbp_simulate_key)sizeof(ec_mkbp_info_type)alignof(ec_mkbp_info_type)sizeof(ec_params_mkbp_info)alignof(ec_params_mkbp_info)sizeof(ec_response_mkbp_info)alignof(ec_response_mkbp_info)sizeof(ec_response_tmp006_get_raw)alignof(ec_response_tmp006_get_raw)sizeof(ec_params_tmp006_get_raw)alignof(ec_params_tmp006_get_raw)sizeof(ec_params_tmp006_set_calibration_v1)alignof(ec_params_tmp006_set_calibration_v1)sizeof(ec_response_tmp006_get_calibration_v1)alignof(ec_response_tmp006_get_calibration_v1)sizeof(ec_params_tmp006_set_calibration_v0)alignof(ec_params_tmp006_set_calibration_v0)sizeof(ec_response_tmp006_get_calibration_v0)alignof(ec_response_tmp006_get_calibration_v0)sizeof(ec_params_tmp006_get_calibration)alignof(ec_params_tmp006_get_calibration)sizeof(ec_params_auto_fan_ctrl_v1)alignof(ec_params_auto_fan_ctrl_v1)sizeof(ec_params_thermal_set_threshold_v1)alignof(ec_params_thermal_set_threshold_v1)sizeof(ec_params_thermal_get_threshold_v1)alignof(ec_params_thermal_get_threshold_v1)sizeof(ec_temp_thresholds)alignof(ec_temp_thresholds)sizeof(ec_response_thermal_get_threshold)alignof(ec_response_thermal_get_threshold)sizeof(ec_params_thermal_get_threshold)alignof(ec_params_thermal_get_threshold)sizeof(ec_params_thermal_set_threshold)alignof(ec_params_thermal_set_threshold)sizeof(ec_params_vstore_write)alignof(ec_params_vstore_write)sizeof(ec_response_vstore_read)alignof(ec_response_vstore_read)sizeof(ec_params_vstore_read)alignof(ec_params_vstore_read)sizeof(ec_response_vstore_info)alignof(ec_response_vstore_info)sizeof(ec_response_port80_last_boot)alignof(ec_response_port80_last_boot)sizeof(ec_response_port80_read)alignof(ec_response_port80_read)sizeof(ec_params_port80_read)alignof(ec_params_port80_read)sizeof(ec_port80_subcmd)alignof(ec_port80_subcmd)sizeof(ec_response_rtc)alignof(ec_response_rtc)sizeof(ec_params_rtc)alignof(ec_params_rtc)sizeof(ec_params_pstore_write)alignof(ec_params_pstore_write)sizeof(ec_params_pstore_read)alignof(ec_params_pstore_read)sizeof(ec_response_pstore_info)alignof(ec_response_pstore_info)sizeof(ec_params_usb_charge_set_mode)alignof(ec_params_usb_charge_set_mode)sizeof(ec_params_config_power_button)alignof(ec_params_config_power_button)sizeof(ec_config_power_button_flags)alignof(ec_config_power_button_flags)sizeof(ec_params_force_lid_open)alignof(ec_params_force_lid_open)sizeof(ec_response_motion_sense)alignof(ec_response_motion_sense)sizeof(ec_params_motion_sense)alignof(ec_params_motion_sense)sizeof(motionsense_spoof_mode)alignof(motionsense_spoof_mode)sizeof(motionsensor_activity)alignof(motionsensor_activity)sizeof(motionsensor_chip)alignof(motionsensor_chip)sizeof(motionsensor_location)alignof(motionsensor_location)sizeof(motionsensor_type)alignof(motionsensor_type)sizeof(motionsense_command)alignof(motionsense_command)sizeof(ec_vboot_hash_status)alignof(ec_vboot_hash_status)sizeof(ec_vboot_hash_type)alignof(ec_vboot_hash_type)sizeof(ec_vboot_hash_cmd)alignof(ec_vboot_hash_cmd)sizeof(ec_response_vboot_hash)alignof(ec_response_vboot_hash)sizeof(ec_params_vboot_hash)alignof(ec_params_vboot_hash)sizeof(ec_response_led_control)alignof(ec_response_led_control)sizeof(ec_params_led_control)alignof(ec_params_led_control)sizeof(ec_led_colors)alignof(ec_led_colors)sizeof(ec_led_id)alignof(ec_led_id)sizeof(lightbar_command)alignof(lightbar_command)sizeof(ec_response_lightbar)alignof(ec_response_lightbar)sizeof(ec_params_lightbar)alignof(ec_params_lightbar)sizeof(ec_response_pwm_get_duty)alignof(ec_response_pwm_get_duty)sizeof(ec_params_pwm_get_duty)alignof(ec_params_pwm_get_duty)sizeof(ec_params_pwm_set_duty)alignof(ec_params_pwm_set_duty)sizeof(ec_pwm_type)alignof(ec_pwm_type)sizeof(ec_params_pwm_set_fan_duty_v1)alignof(ec_params_pwm_set_fan_duty_v1)sizeof(ec_params_pwm_set_fan_duty_v0)alignof(ec_params_pwm_set_fan_duty_v0)sizeof(ec_params_pwm_set_keyboard_backlight)alignof(ec_params_pwm_set_keyboard_backlight)sizeof(ec_response_pwm_get_keyboard_backlight)alignof(ec_response_pwm_get_keyboard_backlight)sizeof(ec_params_pwm_set_fan_target_rpm_v1)alignof(ec_params_pwm_set_fan_target_rpm_v1)sizeof(ec_params_pwm_set_fan_target_rpm_v0)alignof(ec_params_pwm_set_fan_target_rpm_v0)sizeof(ec_response_pwm_get_fan_rpm)alignof(ec_response_pwm_get_fan_rpm)sizeof(ec_params_flash_select)alignof(ec_params_flash_select)sizeof(ec_response_flash_spi_info)alignof(ec_response_flash_spi_info)sizeof(ec_response_vbnvcontext)alignof(ec_response_vbnvcontext)sizeof(ec_params_vbnvcontext)alignof(ec_params_vbnvcontext)sizeof(ec_vbnvcontext_op)alignof(ec_vbnvcontext_op)sizeof(ec_response_flash_region_info)alignof(ec_response_flash_region_info)sizeof(ec_params_flash_region_info)alignof(ec_params_flash_region_info)sizeof(ec_flash_region)alignof(ec_flash_region)sizeof(ec_response_flash_protect)alignof(ec_response_flash_protect)sizeof(ec_params_flash_protect)alignof(ec_params_flash_protect)sizeof(ec_params_flash_erase_v1)alignof(ec_params_flash_erase_v1)sizeof(ec_flash_erase_cmd)alignof(ec_flash_erase_cmd)sizeof(ec_params_flash_write)alignof(ec_params_flash_write)sizeof(ec_params_flash_read)alignof(ec_params_flash_read)sizeof(ec_response_flash_info_2)alignof(ec_response_flash_info_2)sizeof(ec_params_flash_info_2)alignof(ec_params_flash_info_2)sizeof(ec_response_flash_info_1)alignof(ec_response_flash_info_1)sizeof(ec_response_flash_info)alignof(ec_response_flash_info)sizeof(ec_sku_id_info)alignof(ec_sku_id_info)sizeof(ec_response_get_features)alignof(ec_response_get_features)sizeof(ec_feature_code)alignof(ec_feature_code)sizeof(ec_response_get_set_value)alignof(ec_response_get_set_value)sizeof(ec_params_get_set_value)alignof(ec_params_get_set_value)sizeof(ec_response_get_protocol_info)alignof(ec_response_get_protocol_info)sizeof(ec_response_test_protocol)alignof(ec_response_test_protocol)sizeof(ec_params_test_protocol)alignof(ec_params_test_protocol)sizeof(ec_response_get_comms_status)alignof(ec_response_get_comms_status)sizeof(ec_comms_status)alignof(ec_comms_status)sizeof(ec_response_get_cmd_versions)alignof(ec_response_get_cmd_versions)sizeof(ec_params_get_cmd_versions_v1)alignof(ec_params_get_cmd_versions_v1)sizeof(ec_params_get_cmd_versions)alignof(ec_params_get_cmd_versions)sizeof(ec_params_read_memmap)alignof(ec_params_read_memmap)sizeof(ec_response_board_version)alignof(ec_response_board_version)sizeof(ec_response_get_chip_info)alignof(ec_response_get_chip_info)sizeof(ec_response_read_test)alignof(ec_response_read_test)sizeof(ec_params_read_test)alignof(ec_params_read_test)sizeof(ec_response_get_version)alignof(ec_response_get_version)sizeof(ec_current_image)alignof(ec_current_image)sizeof(ec_response_hello)alignof(ec_response_hello)sizeof(ec_params_hello)alignof(ec_params_hello)sizeof(ec_response_proto_version)alignof(ec_response_proto_version)sizeof(ec_host_response)alignof(ec_host_response)sizeof(ec_host_request)alignof(ec_host_request)sizeof(ec_lpc_host_args)alignof(ec_lpc_host_args)sizeof(host_event_code)alignof(host_event_code)sizeof(ec_status)alignof(ec_status)sizeof(uint32_t[0])alignof(uint32_t[0])sizeof(unsigned int[0])alignof(unsigned int[0])sizeof(uint8_t[])alignof(uint8_t[])sizeof(uint8_t[8])alignof(uint8_t[8])sizeof(uint32_t[6])alignof(uint32_t[6])sizeof(unsigned int[6])alignof(unsigned int[6])sizeof(uint8_t[2])alignof(uint8_t[2])sizeof(unsigned char[2])alignof(unsigned char[2])sizeof(uint8_t[0])alignof(uint8_t[0])sizeof(uint8_t[20])alignof(uint8_t[20])sizeof(unsigned char[20])alignof(unsigned char[20])sizeof(uint8_t[32])alignof(uint8_t[32])sizeof(uint16_t[32])alignof(uint16_t[32])sizeof(unsigned short[32])alignof(unsigned short[32])sizeof(ec_params_i2c_passthru_msg[])alignof(ec_params_i2c_passthru_msg[])sizeof(uint8_t[13])alignof(uint8_t[13])sizeof(unsigned char[13])alignof(unsigned char[13])sizeof(uint8_t[3])alignof(uint8_t[3])sizeof(unsigned char[3])alignof(unsigned char[3])sizeof(ec_collect_item[0])alignof(ec_collect_item[0])sizeof(float[0])alignof(float[0])sizeof(uint32_t[3])alignof(uint32_t[3])sizeof(unsigned int[3])alignof(unsigned int[3])sizeof(uint8_t[64])alignof(uint8_t[64])sizeof(unsigned char[64])alignof(unsigned char[64])sizeof(int16_t[3])alignof(int16_t[3])sizeof(signed short[3])alignof(signed short[3])sizeof(ec_response_motion_sensor_data[0])alignof(ec_response_motion_sensor_data[0])sizeof(uint16_t[3])alignof(uint16_t[3])sizeof(uint16_t[0])alignof(uint16_t[0])sizeof(unsigned short[0])alignof(unsigned short[0])sizeof(int16_t[2])alignof(int16_t[2])sizeof(signed short[2])alignof(signed short[2])sizeof(uint8_t[6])alignof(uint8_t[6])sizeof(struct <unnamed>[23])alignof(struct <unnamed>[23])sizeof(uint8_t[192])alignof(uint8_t[192])sizeof(unsigned char[192])alignof(unsigned char[192])sizeof(rgb_s[8])alignof(rgb_s[8])sizeof(uint8_t[4])alignof(uint8_t[4])sizeof(uint8_t[2][4])alignof(uint8_t[2][4])sizeof(unsigned char[2][4])alignof(unsigned char[2][4])sizeof(int32_t[2])alignof(int32_t[2])sizeof(signed int[2])alignof(signed int[2])sizeof(ec_flash_bank[0])alignof(ec_flash_bank[0])sizeof(uint32_t[2])alignof(uint32_t[2])sizeof(unsigned int[2])alignof(unsigned int[2])sizeof(uint32_t[32])alignof(uint32_t[32])sizeof(unsigned int[32])alignof(unsigned int[32])sizeof(gpio_desc)alignof(gpio_desc)sizeof(const gpio_desc)alignof(const gpio_desc)sizeof(const gpio_desc *)alignof(const gpio_desc *)sizeof(gpio_desc *)alignof(gpio_desc *)sizeof(const int)alignof(const int)sizeof(const int *)alignof(const int *)sizeof(gpio_desc **)alignof(gpio_desc **)sizeof(gpio_dev_priv)alignof(gpio_dev_priv)sizeof(dm_gpio_ops)alignof(dm_gpio_ops)sizeof(gpio_func_t)alignof(gpio_func_t)sizeof(fmap_entry)alignof(fmap_entry)sizeof(fmap_hash_t)alignof(fmap_hash_t)sizeof(fmap_compress_t)alignof(fmap_compress_t)sizeof(fdt_addr_t *)alignof(fdt_addr_t *)sizeof(fmap_entry *)alignof(fmap_entry *)sizeof(fdt_cros_ec)alignof(fdt_cros_ec)sizeof(mbkp_keyscan)alignof(mbkp_keyscan)sizeof(i2c_msg *)alignof(i2c_msg *)sizeof(fdt_cros_ec *)alignof(fdt_cros_ec *)sizeof(ec_response_get_version *)alignof(ec_response_get_version *)sizeof(ec_response_get_version **)alignof(ec_response_get_version **)sizeof(ec_response_flash_info *)alignof(ec_response_flash_info *)sizeof(ec_response_flash_protect *)alignof(ec_response_flash_protect *)sizeof(ec_response_mkbp_info *)alignof(ec_response_mkbp_info *)sizeof(ec_response_vboot_hash *)alignof(ec_response_vboot_hash *)sizeof(ec_current_image *)alignof(ec_current_image *)sizeof(mbkp_keyscan *)alignof(mbkp_keyscan *)sizeof(dm_cros_ec_ops)alignof(dm_cros_ec_ops)sizeof(cros_ec_dev)alignof(cros_ec_dev)sizeof(fmap_entry[4])alignof(fmap_entry[4])sizeof(uint8_t[272])alignof(uint8_t[272])sizeof(unsigned char[272])alignof(unsigned char[272])sizeof(led_state_t)alignof(led_state_t)sizeof(led_ops)alignof(led_ops)sizeof(led_uc_priv)alignof(led_uc_priv)sizeof(led_uc_plat)alignof(led_uc_plat)sizeof(sandbox_i2c_eeprom_test_mode)alignof(sandbox_i2c_eeprom_test_mode)sizeof(disk_partition)alignof(disk_partition)alignof(disk_partition_t)sizeof(disk_partition_t *)alignof(disk_partition_t *)sizeof(disk_partition *)alignof(disk_partition *)sizeof(command_ret_t)alignof(command_ret_t)sizeof(blk_desc **)alignof(blk_desc **)sizeof(char[65])alignof(char[65])sizeof(char[634])alignof(char[634])sizeof(uint64_t *)alignof(uint64_t *)alignof(AvbDescriptor)sizeof(const AvbDescriptor)alignof(const AvbDescriptor)sizeof(const AvbDescriptor *)alignof(const AvbDescriptor *)sizeof(AvbDescriptorForeachFunc)alignof(AvbDescriptorForeachFunc)sizeof(const AvbDescriptor **)alignof(const AvbDescriptor **)sizeof(AvbDescriptor *)alignof(AvbDescriptor *)sizeof(AvbDescriptor **)alignof(AvbDescriptor **)sizeof(AvbDescriptorTag)alignof(AvbDescriptorTag)alignof(AvbChainPartitionDescriptor)sizeof(const AvbChainPartitionDescriptor)alignof(const AvbChainPartitionDescriptor)sizeof(const AvbChainPartitionDescriptor *)alignof(const AvbChainPartitionDescriptor *)sizeof(AvbChainPartitionDescriptor *)alignof(AvbChainPartitionDescriptor *)alignof(AvbRSAPublicKeyHeader)sizeof(AvbAlgorithmType)alignof(AvbAlgorithmType)sizeof(AvbAlgorithmData)alignof(AvbAlgorithmData)sizeof(const AvbRSAPublicKeyHeader)alignof(const AvbRSAPublicKeyHeader)sizeof(const AvbRSAPublicKeyHeader *)alignof(const AvbRSAPublicKeyHeader *)sizeof(AvbRSAPublicKeyHeader *)alignof(AvbRSAPublicKeyHeader *)sizeof(const AvbAlgorithmData)alignof(const AvbAlgorithmData)sizeof(const AvbAlgorithmData *)alignof(const AvbAlgorithmData *)sizeof(AvbDigestType)alignof(AvbDigestType)alignof(AvbFooter)sizeof(const AvbFooter)alignof(const AvbFooter)sizeof(const AvbFooter *)alignof(const AvbFooter *)sizeof(AvbFooter *)alignof(AvbFooter *)sizeof(uint8_t[28])alignof(uint8_t[28])sizeof(unsigned char[28])alignof(unsigned char[28])alignof(AvbHashDescriptor)sizeof(const AvbHashDescriptor)alignof(const AvbHashDescriptor)sizeof(const AvbHashDescriptor *)alignof(const AvbHashDescriptor *)sizeof(AvbHashDescriptor *)alignof(AvbHashDescriptor *)sizeof(AvbHashDescriptorFlags)alignof(AvbHashDescriptorFlags)sizeof(uint8_t[60])alignof(uint8_t[60])sizeof(unsigned char[60])alignof(unsigned char[60])alignof(AvbHashtreeDescriptor)sizeof(const AvbHashtreeDescriptor)alignof(const AvbHashtreeDescriptor)sizeof(const AvbHashtreeDescriptor *)alignof(const AvbHashtreeDescriptor *)sizeof(AvbHashtreeDescriptor *)alignof(AvbHashtreeDescriptor *)sizeof(AvbHashtreeDescriptorFlags)alignof(AvbHashtreeDescriptorFlags)alignof(AvbKernelCmdlineDescriptor)sizeof(const AvbKernelCmdlineDescriptor)alignof(const AvbKernelCmdlineDescriptor)sizeof(const AvbKernelCmdlineDescriptor *)alignof(const AvbKernelCmdlineDescriptor *)sizeof(AvbKernelCmdlineDescriptor *)alignof(AvbKernelCmdlineDescriptor *)sizeof(AvbKernelCmdlineFlags)alignof(AvbKernelCmdlineFlags)sizeof(AvbOps)alignof(AvbOps)sizeof(AvbIOResult)alignof(AvbIOResult)sizeof(AvbAtxOps)alignof(AvbAtxOps)sizeof(AvbABOps)alignof(AvbABOps)sizeof(AvbOps *)alignof(AvbOps *)sizeof(AvbAtxOps *)alignof(AvbAtxOps *)sizeof(AvbABOps *)alignof(AvbABOps *)alignof(AvbPropertyDescriptor)sizeof(const AvbPropertyDescriptor)alignof(const AvbPropertyDescriptor)sizeof(const AvbPropertyDescriptor *)alignof(const AvbPropertyDescriptor *)sizeof(AvbPropertyDescriptor *)alignof(AvbPropertyDescriptor *)sizeof(AvbVBMetaVerifyResult)alignof(AvbVBMetaVerifyResult)alignof(AvbVBMetaImageHeader)sizeof(const uint8_t **)alignof(const uint8_t **)sizeof(const AvbVBMetaImageHeader)alignof(const AvbVBMetaImageHeader)sizeof(const AvbVBMetaImageHeader *)alignof(const AvbVBMetaImageHeader *)sizeof(AvbVBMetaImageHeader *)alignof(AvbVBMetaImageHeader *)sizeof(AvbVBMetaImageFlags)alignof(AvbVBMetaImageFlags)sizeof(uint8_t[80])alignof(uint8_t[80])sizeof(unsigned char[80])alignof(unsigned char[80])sizeof(uint8_t[48])alignof(uint8_t[48])sizeof(unsigned char[48])alignof(unsigned char[48])alignof(AvbSlotVerifyData)sizeof(AvbHashtreeErrorMode)alignof(AvbHashtreeErrorMode)sizeof(AvbSlotVerifyFlags)alignof(AvbSlotVerifyFlags)sizeof(AvbSlotVerifyResult)alignof(AvbSlotVerifyResult)alignof(AvbPartitionData)alignof(AvbVBMetaData)sizeof(const char *const *)alignof(const char *const *)sizeof(AvbSlotVerifyData *)alignof(AvbSlotVerifyData *)sizeof(AvbSlotVerifyData **)alignof(AvbSlotVerifyData **)sizeof(struct <unnamed> **)alignof(struct <unnamed> **)sizeof(uint64_t[32])alignof(uint64_t[32])sizeof(unsigned long long[32])alignof(unsigned long long[32])sizeof(AvbPartitionData *)alignof(AvbPartitionData *)sizeof(AvbVBMetaData *)alignof(AvbVBMetaData *)sizeof(mmc)alignof(mmc)sizeof(mmc_hwpart_conf_mode)alignof(mmc_hwpart_conf_mode)sizeof(mmc_hwpart_conf)alignof(mmc_hwpart_conf)sizeof(mmc_voltage)alignof(mmc_voltage)sizeof(mmc_config)alignof(mmc_config)sizeof(bus_mode)alignof(bus_mode)sizeof(sd_ssr)alignof(sd_ssr)sizeof(mmc_data)alignof(mmc_data)sizeof(mmc_cmd)alignof(mmc_cmd)sizeof(mmc *)alignof(mmc *)sizeof(const mmc_hwpart_conf)alignof(const mmc_hwpart_conf)sizeof(const mmc_hwpart_conf *)alignof(const mmc_hwpart_conf *)sizeof(mmc_hwpart_conf *)alignof(mmc_hwpart_conf *)sizeof(mmc_config *)alignof(mmc_config *)sizeof(const mmc_config)alignof(const mmc_config)sizeof(const mmc_config *)alignof(const mmc_config *)sizeof(mmc_cmd *)alignof(mmc_cmd *)sizeof(mmc_data *)alignof(mmc_data *)sizeof(dm_mmc_ops)alignof(dm_mmc_ops)sizeof(mmc_cid)alignof(mmc_cid)sizeof(mmc_uclass_priv)alignof(mmc_uclass_priv)sizeof(struct <unnamed>[4])alignof(struct <unnamed>[4])sizeof(uint[4])alignof(uint[4])sizeof(u64[4])alignof(u64[4])sizeof(unsigned long long[4])alignof(unsigned long long[4])sizeof(uint[2])alignof(uint[2])sizeof(AvbOpsData)alignof(AvbOpsData)sizeof(mmc_part)alignof(mmc_part)sizeof(avb_boot_state)alignof(avb_boot_state)sizeof(AvbOpsData *)alignof(AvbOpsData *)sizeof(mmc_part *)alignof(mmc_part *)sizeof(mmc_io_type)alignof(mmc_io_type)sizeof(s64)alignof(s64)sizeof(cmd_tbl_t[11])alignof(cmd_tbl_t[11])sizeof(cmd_tbl_s[11])alignof(cmd_tbl_s[11])sizeof(char[43])alignof(char[43])sizeof(const char *const[])alignof(const char *const[])sizeof(const char *const[4])alignof(const char *const[4])sizeof(char[39])alignof(char[39])sizeof(char[22])alignof(char[22])sizeof(char[51])alignof(char[51])sizeof(char[70])alignof(char[70])sizeof(char[836])alignof(char[836])sizeof(cmd_tbl_t[])alignof(cmd_tbl_t[])sizeof(cmd_tbl_s[])alignof(cmd_tbl_s[])sizeof(axi_size_t)alignof(axi_size_t)sizeof(axi_emul_ops)alignof(axi_emul_ops)sizeof(axi_ops)alignof(axi_ops)sizeof(u8 **)alignof(u8 **)sizeof(cmd_tbl_t[4])alignof(cmd_tbl_t[4])sizeof(cmd_tbl_s[4])alignof(cmd_tbl_s[4])sizeof(const uint)alignof(const uint)sizeof(u8[16])alignof(u8[16])sizeof(char[329])alignof(char[329])sizeof(const bd_t)alignof(const bd_t)sizeof(const bd_t *)alignof(const bd_t *)sizeof(struct <unnamed>[1])alignof(struct <unnamed>[1])sizeof(const struct <unnamed>)alignof(const struct <unnamed>)sizeof(const struct <unnamed> *)alignof(const struct <unnamed> *)sizeof(const driver_info)alignof(const driver_info)sizeof(const driver_info *)alignof(const driver_info *)sizeof(driver_info *)alignof(driver_info *)sizeof(char[46])alignof(char[46])sizeof(char[68])alignof(char[68])sizeof(char[52])alignof(char[52])sizeof(char[48])alignof(char[48])sizeof(char[49])alignof(char[49])sizeof(cmd_tbl_t[2])alignof(cmd_tbl_t[2])sizeof(cmd_tbl_s[2])alignof(cmd_tbl_s[2])sizeof(char[76])alignof(char[76])sizeof(console_t)alignof(console_t)sizeof(console_t *)alignof(console_t *)sizeof(bmp_color_table_entry)alignof(bmp_color_table_entry)sizeof(bmp_header)alignof(bmp_header)sizeof(bmp_image)alignof(bmp_image)sizeof(bmp_color_table_entry[0])alignof(bmp_color_table_entry[0])sizeof(bmp_image *)alignof(bmp_image *)sizeof(splash_location)alignof(splash_location)sizeof(splash_flags)alignof(splash_flags)sizeof(splash_storage)alignof(splash_storage)sizeof(splash_location *)alignof(splash_location *)sizeof(stdio_dev)alignof(stdio_dev)sizeof(stdio_dev *)alignof(stdio_dev *)sizeof(stdio_dev **)alignof(stdio_dev **)sizeof(stdio_dev *[])alignof(stdio_dev *[])sizeof(video_log2_bpp)alignof(video_log2_bpp)sizeof(video_ops)alignof(video_ops)sizeof(video_priv)alignof(video_priv)sizeof(video_polarity)alignof(video_polarity)sizeof(video_uc_platdata)alignof(video_uc_platdata)sizeof(ushort *)alignof(ushort *)sizeof(char[100])alignof(char[100])sizeof(char[90])alignof(char[90])sizeof(volatile u32)alignof(volatile u32)sizeof(volatile u32 *)alignof(volatile u32 *)sizeof(bootcount_ops)alignof(bootcount_ops)sizeof(char[64])alignof(char[64])sizeof(efi_entry_memmap)alignof(efi_entry_memmap)sizeof(efi_entry_t)alignof(efi_entry_t)sizeof(efi_priv)alignof(efi_priv)sizeof(efi_status_t)alignof(efi_status_t)sizeof(efi_system_table)alignof(efi_system_table)sizeof(efi_object)alignof(efi_object)sizeof(efi_object *)alignof(efi_object *)alignof(efi_handle_t)sizeof(efi_info_hdr)alignof(efi_info_hdr)sizeof(efi_device_path)alignof(efi_device_path)sizeof(efi_mem_desc)alignof(efi_mem_desc)sizeof(efi_physical_addr_t)alignof(efi_physical_addr_t)sizeof(s16)alignof(s16)sizeof(efi_virtual_addr_t)alignof(efi_virtual_addr_t)sizeof(efi_entry_memmap *)alignof(efi_entry_memmap *)sizeof(efi_priv *)alignof(efi_priv *)sizeof(efi_status_t *)alignof(efi_status_t *)sizeof(efi_system_table *)alignof(efi_system_table *)sizeof(efi_mem_desc *)alignof(efi_mem_desc *)sizeof(efi_entry_systable)alignof(efi_entry_systable)sizeof(efi_entry_gopmode)alignof(efi_entry_gopmode)sizeof(efi_entry_hdr)alignof(efi_entry_hdr)sizeof(efi_open_protocol_info_entry)alignof(efi_open_protocol_info_entry)sizeof(efi_locate_search_type)alignof(efi_locate_search_type)sizeof(efi_time_cap)alignof(efi_time_cap)sizeof(efi_time)alignof(efi_time)sizeof(efi_mem_type)alignof(efi_mem_type)sizeof(efi_table_hdr)alignof(efi_table_hdr)sizeof(efi_info_hdr *)alignof(efi_info_hdr *)sizeof(efi_runtime_services)alignof(efi_runtime_services)sizeof(efi_runtime_services *)alignof(efi_runtime_services *)sizeof(efi_boot_services)alignof(efi_boot_services)sizeof(efi_boot_services *)alignof(efi_boot_services *)sizeof(efi_device_path *)alignof(efi_device_path *)sizeof(struct <unnamed>[])alignof(struct <unnamed>[])sizeof(u32[4])alignof(u32[4])sizeof(efi_mem_desc[])alignof(efi_mem_desc[])sizeof(u32[5])alignof(u32[5])sizeof(unsigned int[5])alignof(unsigned int[5])sizeof(const uint16_t)alignof(const uint16_t)sizeof(const uint16_t *)alignof(const uint16_t *)sizeof(const u16)alignof(const u16)sizeof(const u16 *)alignof(const u16 *)sizeof(const s32)alignof(const s32)sizeof(u16 **)alignof(u16 **)sizeof(const u16 **)alignof(const u16 **)sizeof(efi_unicode_collation_protocol)alignof(efi_unicode_collation_protocol)sizeof(efi_driver_binding_protocol)alignof(efi_driver_binding_protocol)sizeof(efi_file_handle)alignof(efi_file_handle)sizeof(efi_simple_file_system_protocol)alignof(efi_simple_file_system_protocol)sizeof(efi_pxe_mode)alignof(efi_pxe_mode)sizeof(efi_pxe_packet)alignof(efi_pxe_packet)sizeof(efi_ip_address)alignof(efi_ip_address)sizeof(efi_simple_network_mode)alignof(efi_simple_network_mode)sizeof(efi_event)alignof(efi_event)sizeof(efi_mac_address)alignof(efi_mac_address)sizeof(efi_simple_network)alignof(efi_simple_network)sizeof(efi_simple_network_state)alignof(efi_simple_network_state)sizeof(efi_gop_mode)alignof(efi_gop_mode)sizeof(efi_gop_pixel)alignof(efi_gop_pixel)sizeof(efi_gop)alignof(efi_gop)sizeof(efi_gop_mode_info)alignof(efi_gop_mode_info)sizeof(efi_browser_action_request_t)alignof(efi_browser_action_request_t)sizeof(efi_ifr_type_value)alignof(efi_ifr_type_value)sizeof(efi_question_id_t)alignof(efi_question_id_t)sizeof(efi_browser_action_t)alignof(efi_browser_action_t)sizeof(efi_hii_config_access_protocol)alignof(efi_hii_config_access_protocol)sizeof(efi_string_t)alignof(efi_string_t)sizeof(efi_hii_config_routing_protocol)alignof(efi_hii_config_routing_protocol)sizeof(efi_hii_handle_t)alignof(efi_hii_handle_t)sizeof(efi_hii_database_protocol)alignof(efi_hii_database_protocol)sizeof(efi_hii_keyboard_layout)alignof(efi_hii_keyboard_layout)sizeof(efi_hii_package_list_header)alignof(efi_hii_package_list_header)sizeof(efi_hii_string_protocol)alignof(efi_hii_string_protocol)sizeof(efi_font_info)alignof(efi_font_info)sizeof(efi_string_id_t)alignof(efi_string_id_t)sizeof(efi_hii_font_style_t)alignof(efi_hii_font_style_t)sizeof(efi_hii_package_header)alignof(efi_hii_package_header)sizeof(efi_key_descriptor)alignof(efi_key_descriptor)sizeof(efi_ifr_op_header)alignof(efi_ifr_op_header)sizeof(efi_hii_ref)alignof(efi_hii_ref)sizeof(efi_hii_date)alignof(efi_hii_date)sizeof(efi_hii_time)alignof(efi_hii_time)sizeof(efi_form_id_t)alignof(efi_form_id_t)sizeof(efi_hii_sibt_string_ucs2_block)alignof(efi_hii_sibt_string_ucs2_block)sizeof(efi_hii_string_block)alignof(efi_hii_string_block)sizeof(efi_input_key)alignof(efi_input_key)sizeof(efi_simple_text_input_protocol)alignof(efi_simple_text_input_protocol)sizeof(efi_simple_text_input_ex_protocol)alignof(efi_simple_text_input_ex_protocol)sizeof(efi_key_data)alignof(efi_key_data)sizeof(efi_key_state)alignof(efi_key_state)sizeof(simple_text_output_mode)alignof(simple_text_output_mode)sizeof(efi_simple_text_output_protocol)alignof(efi_simple_text_output_protocol)sizeof(efi_block_io)alignof(efi_block_io)sizeof(efi_block_io_media)alignof(efi_block_io_media)sizeof(efi_mac_addr)alignof(efi_mac_addr)sizeof(efi_configuration_table)alignof(efi_configuration_table)sizeof(efi_capsule_header)alignof(efi_capsule_header)sizeof(efi_reset_type)alignof(efi_reset_type)sizeof(efi_timer_delay)alignof(efi_timer_delay)sizeof(efi_hii_string_block *)alignof(efi_hii_string_block *)sizeof(efi_hii_sibt_string_ucs2_block *)alignof(efi_hii_sibt_string_ucs2_block *)sizeof(u16[])alignof(u16[])sizeof(unsigned short[])alignof(unsigned short[])sizeof(efi_file_system_info)alignof(efi_file_system_info)sizeof(efi_file_info)alignof(efi_file_info)sizeof(efi_pxe)alignof(efi_pxe)sizeof(efi_hii_keyboard_package)alignof(efi_hii_keyboard_package)sizeof(efi_key)alignof(efi_key)sizeof(efi_ifr_one_of_option)alignof(efi_ifr_one_of_option)sizeof(efi_hii_strings_package)alignof(efi_hii_strings_package)sizeof(efi_hii_guid_package)alignof(efi_hii_guid_package)sizeof(efi_device_path_utilities_protocol)alignof(efi_device_path_utilities_protocol)sizeof(efi_device_path_to_text_protocol)alignof(efi_device_path_to_text_protocol)sizeof(efi_device_path_file_path)alignof(efi_device_path_file_path)sizeof(efi_device_path_cdrom_path)alignof(efi_device_path_cdrom_path)sizeof(efi_device_path_hard_drive_path)alignof(efi_device_path_hard_drive_path)sizeof(efi_device_path_sd_mmc_path)alignof(efi_device_path_sd_mmc_path)sizeof(efi_device_path_usb_class)alignof(efi_device_path_usb_class)sizeof(efi_device_path_mac_addr)alignof(efi_device_path_mac_addr)sizeof(efi_device_path_usb)alignof(efi_device_path_usb)sizeof(efi_device_path_scsi)alignof(efi_device_path_scsi)sizeof(efi_device_path_atapi)alignof(efi_device_path_atapi)sizeof(efi_device_path_acpi_path)alignof(efi_device_path_acpi_path)sizeof(efi_device_path_vendor)alignof(efi_device_path_vendor)sizeof(efi_device_path_memory)alignof(efi_device_path_memory)sizeof(efi_loaded_image)alignof(efi_loaded_image)sizeof(efi_image_id_t)alignof(efi_image_id_t)sizeof(efi_unicode_collation_protocol *)alignof(efi_unicode_collation_protocol *)sizeof(efi_driver_binding_protocol *)alignof(efi_driver_binding_protocol *)sizeof(efi_handle_t *)alignof(efi_handle_t *)sizeof(efi_object **)alignof(efi_object **)sizeof(u16[0])alignof(u16[0])sizeof(efi_simple_file_system_protocol *)alignof(efi_simple_file_system_protocol *)sizeof(efi_file_handle *)alignof(efi_file_handle *)sizeof(efi_file_handle **)alignof(efi_file_handle **)sizeof(const efi_guid_t)alignof(const efi_guid_t)sizeof(const efi_guid_t *)alignof(const efi_guid_t *)sizeof(efi_pxe_mode *)alignof(efi_pxe_mode *)sizeof(u8[1472])alignof(u8[1472])sizeof(unsigned char[1472])alignof(unsigned char[1472])sizeof(efi_simple_network_mode *)alignof(efi_simple_network_mode *)sizeof(efi_event *)alignof(efi_event *)sizeof(efi_simple_network *)alignof(efi_simple_network *)sizeof(efi_mac_address *)alignof(efi_mac_address *)sizeof(efi_ip_address *)alignof(efi_ip_address *)sizeof(efi_mac_address[16])alignof(efi_mac_address[16])sizeof(efi_gop_mode *)alignof(efi_gop_mode *)sizeof(efi_gop *)alignof(efi_gop *)sizeof(efi_gop_pixel *)alignof(efi_gop_pixel *)sizeof(efi_gop_mode_info *)alignof(efi_gop_mode_info *)sizeof(efi_gop_mode_info **)alignof(efi_gop_mode_info **)sizeof(const efi_hii_config_access_protocol)alignof(const efi_hii_config_access_protocol)sizeof(const efi_hii_config_access_protocol *)alignof(const efi_hii_config_access_protocol *)sizeof(efi_ifr_type_value *)alignof(efi_ifr_type_value *)sizeof(efi_browser_action_request_t *)alignof(efi_browser_action_request_t *)sizeof(efi_hii_config_access_protocol *)alignof(efi_hii_config_access_protocol *)sizeof(const efi_string_t)alignof(const efi_string_t)sizeof(efi_string_t *)alignof(efi_string_t *)sizeof(const efi_hii_config_routing_protocol)alignof(const efi_hii_config_routing_protocol)sizeof(const efi_hii_config_routing_protocol *)alignof(const efi_hii_config_routing_protocol *)sizeof(const efi_device_path)alignof(const efi_device_path)sizeof(const efi_device_path *)alignof(const efi_device_path *)sizeof(efi_hii_config_routing_protocol *)alignof(efi_hii_config_routing_protocol *)sizeof(const size_t)alignof(const size_t)sizeof(const size_t *)alignof(const size_t *)sizeof(const efi_hii_database_protocol)alignof(const efi_hii_database_protocol)sizeof(const efi_hii_database_protocol *)alignof(const efi_hii_database_protocol *)sizeof(efi_hii_database_protocol *)alignof(efi_hii_database_protocol *)alignof(efi_guid_t *)sizeof(efi_hii_keyboard_layout *)alignof(efi_hii_keyboard_layout *)sizeof(efi_hii_package_list_header *)alignof(efi_hii_package_list_header *)sizeof(efi_hii_handle_t *)alignof(efi_hii_handle_t *)sizeof(const efi_hii_package_list_header)alignof(const efi_hii_package_list_header)sizeof(const efi_hii_package_list_header *)alignof(const efi_hii_package_list_header *)sizeof(const efi_handle_t)alignof(const efi_handle_t)sizeof(const efi_hii_string_protocol)alignof(const efi_hii_string_protocol)sizeof(const efi_hii_string_protocol *)alignof(const efi_hii_string_protocol *)sizeof(efi_hii_string_protocol *)alignof(efi_hii_string_protocol *)sizeof(const efi_font_info)alignof(const efi_font_info)sizeof(const efi_font_info *)alignof(const efi_font_info *)sizeof(efi_font_info *)alignof(efi_font_info *)sizeof(efi_font_info **)alignof(efi_font_info **)sizeof(efi_string_id_t *)alignof(efi_string_id_t *)sizeof(u16[1])alignof(u16[1])sizeof(efi_hii_keyboard_layout[])alignof(efi_hii_keyboard_layout[])sizeof(efi_key_descriptor[])alignof(efi_key_descriptor[])sizeof(u16[16])alignof(u16[16])sizeof(unsigned short[16])alignof(unsigned short[16])sizeof(efi_device_path **)alignof(efi_device_path **)sizeof(uint16_t *)alignof(uint16_t *)sizeof(efi_simple_text_input_ex_protocol *)alignof(efi_simple_text_input_ex_protocol *)sizeof(efi_key_data *)alignof(efi_key_data *)sizeof(efi_block_io *)alignof(efi_block_io *)sizeof(efi_block_io_media *)alignof(efi_block_io_media *)sizeof(u8[4])alignof(u8[4])sizeof(u8[3])alignof(u8[3])sizeof(u8[32])alignof(u8[32])sizeof(efi_configuration_table *)alignof(efi_configuration_table *)sizeof(efi_event **)alignof(efi_event **)sizeof(efi_handle_t **)alignof(efi_handle_t **)sizeof(efi_object ***)alignof(efi_object ***)sizeof(efi_guid_t **)alignof(efi_guid_t **)sizeof(efi_guid_t ***)alignof(efi_guid_t ***)sizeof(struct <unnamed> ***)alignof(struct <unnamed> ***)sizeof(efi_open_protocol_info_entry *)alignof(efi_open_protocol_info_entry *)sizeof(efi_open_protocol_info_entry **)alignof(efi_open_protocol_info_entry **)sizeof(efi_physical_addr_t *)alignof(efi_physical_addr_t *)sizeof(efi_capsule_header *)alignof(efi_capsule_header *)sizeof(efi_capsule_header **)alignof(efi_capsule_header **)sizeof(efi_time *)alignof(efi_time *)sizeof(efi_time_cap *)alignof(efi_time_cap *)sizeof(efi_simple_text_output_protocol *)alignof(efi_simple_text_output_protocol *)sizeof(simple_text_output_mode *)alignof(simple_text_output_mode *)sizeof(efi_simple_text_input_protocol *)alignof(efi_simple_text_input_protocol *)sizeof(efi_input_key *)alignof(efi_input_key *)sizeof(efi_load_option)alignof(efi_load_option)sizeof(efi_loaded_image_obj)alignof(efi_loaded_image_obj)sizeof(efi_handler)alignof(efi_handler)sizeof(efi_object_type)alignof(efi_object_type)sizeof(efi_load_option *)alignof(efi_load_option *)sizeof(efi_table_hdr *)alignof(efi_table_hdr *)sizeof(efi_loaded_image_obj *)alignof(efi_loaded_image_obj *)sizeof(efi_loaded_image_obj **)alignof(efi_loaded_image_obj **)sizeof(efi_loaded_image *)alignof(efi_loaded_image *)sizeof(efi_loaded_image **)alignof(efi_loaded_image **)sizeof(efi_handler *)alignof(efi_handler *)sizeof(efi_handler **)alignof(efi_handler **)sizeof(efi_register_notify_event)alignof(efi_register_notify_event)sizeof(efi_protocol_notification)alignof(efi_protocol_notification)sizeof(efi_open_protocol_info_item)alignof(efi_open_protocol_info_item)sizeof(efi_console_control_protocol)alignof(efi_console_control_protocol)sizeof(const efi_unicode_collation_protocol)alignof(const efi_unicode_collation_protocol)sizeof(const efi_device_path_utilities_protocol)alignof(const efi_device_path_utilities_protocol)sizeof(const efi_device_path_to_text_protocol)alignof(const efi_device_path_to_text_protocol)sizeof(efi_test_phase)alignof(efi_test_phase)sizeof(efi_unit_test)alignof(efi_unit_test)sizeof(const efi_system_table)alignof(const efi_system_table)sizeof(const efi_system_table *)alignof(const efi_system_table *)sizeof(const efi_test_phase)alignof(const efi_test_phase)sizeof(const char[17])alignof(const char[17])sizeof(char[69])alignof(char[69])sizeof(lmb)alignof(lmb)sizeof(lmb *)alignof(lmb *)sizeof(image_header)alignof(image_header)alignof(image_header_t)sizeof(image_header_t *)alignof(image_header_t *)sizeof(image_header *)alignof(image_header *)sizeof(char[147])alignof(char[147])sizeof(char[80])alignof(char[80])sizeof(char[395])alignof(char[395])sizeof(boot_os_fn)alignof(boot_os_fn)sizeof(boot_os_fn *)alignof(boot_os_fn *)sizeof(entry)alignof(entry)sizeof(ENTRY)alignof(ENTRY)sizeof(hsearch_data)alignof(hsearch_data)sizeof(ACTION)alignof(ACTION)sizeof(env_op)alignof(env_op)sizeof(hsearch_data *)alignof(hsearch_data *)alignof(ENTRY *)sizeof(entry *)alignof(entry *)sizeof(ENTRY **)alignof(ENTRY **)sizeof(entry **)alignof(entry **)sizeof(const ENTRY)alignof(const ENTRY)sizeof(const ENTRY *)alignof(const ENTRY *)sizeof(_ENTRY *)alignof(_ENTRY *)sizeof(env_flags_varaccess)alignof(env_flags_varaccess)sizeof(env_flags_vartype)alignof(env_flags_vartype)sizeof(env_clbk_tbl)alignof(env_clbk_tbl)sizeof(environment_s)alignof(environment_s)sizeof(env_t)alignof(env_t)sizeof(env_location)alignof(env_location)sizeof(env_t *)alignof(env_t *)sizeof(environment_s *)alignof(environment_s *)sizeof(env_driver)alignof(env_driver)sizeof(env_operation)alignof(env_operation)sizeof(env_valid)alignof(env_valid)sizeof(unsigned char[8188])alignof(unsigned char[8188])sizeof(const unsigned char[])alignof(const unsigned char[])sizeof(mtd_info_user)alignof(mtd_info_user)sizeof(nand_oobfree)alignof(nand_oobfree)sizeof(const mtd_info_user)alignof(const mtd_info_user)sizeof(const mtd_info_user *)alignof(const mtd_info_user *)sizeof(mtd_info_user *)alignof(mtd_info_user *)sizeof(mtd_file_modes)alignof(mtd_file_modes)sizeof(mtd_ecc_stats)alignof(mtd_ecc_stats)sizeof(nand_ecclayout_user)alignof(nand_ecclayout_user)sizeof(nand_oobinfo)alignof(nand_oobinfo)sizeof(otp_info)alignof(otp_info)sizeof(region_info_user)alignof(region_info_user)sizeof(mtd_write_req)alignof(mtd_write_req)sizeof(mtd_oob_buf64)alignof(mtd_oob_buf64)sizeof(mtd_oob_buf)alignof(mtd_oob_buf)sizeof(erase_info_user64)alignof(erase_info_user64)sizeof(erase_info_user)alignof(erase_info_user)sizeof(nand_oobfree[8])alignof(nand_oobfree[8])sizeof(__u32[64])alignof(__u32[64])sizeof(unsigned int[64])alignof(unsigned int[64])sizeof(__u32[32])alignof(__u32[32])sizeof(__u32[2])alignof(__u32[2])sizeof(__u32[8][2])alignof(__u32[8][2])sizeof(unsigned int[8][2])alignof(unsigned int[8][2])sizeof(__u8[7])alignof(__u8[7])sizeof(unsigned char[7])alignof(unsigned char[7])sizeof(const unsigned long long)alignof(const unsigned long long)sizeof(const u64)alignof(const u64)sizeof(mtd_info)alignof(mtd_info)sizeof(erase_info)alignof(erase_info)sizeof(mtd_part_parser_data)alignof(mtd_part_parser_data)sizeof(mtd_oob_ops)alignof(mtd_oob_ops)sizeof(mtd_ooblayout_ops)alignof(mtd_ooblayout_ops)sizeof(mtd_oob_region)alignof(mtd_oob_region)sizeof(mtd_erase_region_info)alignof(mtd_erase_region_info)sizeof(nand_ecclayout)alignof(nand_ecclayout)sizeof(mtd_info *)alignof(mtd_info *)sizeof(const uint64_t)alignof(const uint64_t)sizeof(const mtd_partition)alignof(const mtd_partition)sizeof(const mtd_partition *)alignof(const mtd_partition *)sizeof(mtd_partition *)alignof(mtd_partition *)sizeof(erase_info *)alignof(erase_info *)sizeof(const mtd_info)alignof(const mtd_info)sizeof(const mtd_info *)alignof(const mtd_info *)sizeof(mtd_part_parser_data *)alignof(mtd_part_parser_data *)sizeof(mtd_oob_ops *)alignof(mtd_oob_ops *)sizeof(u_char *)alignof(u_char *)sizeof(otp_info *)alignof(otp_info *)sizeof(const u_char)alignof(const u_char)sizeof(const u_char *)alignof(const u_char *)sizeof(const mtd_ooblayout_ops)alignof(const mtd_ooblayout_ops)sizeof(const mtd_ooblayout_ops *)alignof(const mtd_ooblayout_ops *)sizeof(mtd_ooblayout_ops *)alignof(mtd_ooblayout_ops *)sizeof(mtd_oob_region *)alignof(mtd_oob_region *)sizeof(module *)alignof(module *)sizeof(mtd_erase_region_info *)alignof(mtd_erase_region_info *)sizeof(nand_ecclayout *)alignof(nand_ecclayout *)sizeof(nand_oobfree[32])alignof(nand_oobfree[32])sizeof(__u32[680])alignof(__u32[680])sizeof(unsigned int[680])alignof(unsigned int[680])sizeof(flchip)alignof(flchip)sizeof(flstate_t)alignof(flstate_t)sizeof(flchip_shared)alignof(flchip_shared)sizeof(flchip *)alignof(flchip *)sizeof(nand_bbt_descr)alignof(nand_bbt_descr)sizeof(nand_bbt_descr *)alignof(nand_bbt_descr *)sizeof(bbm_info)alignof(bbm_info)sizeof(uint8_t[1])alignof(uint8_t[1])sizeof(unsigned char[1])alignof(unsigned char[1])sizeof(nand_chip)alignof(nand_chip)sizeof(nand_ecc_caps)alignof(nand_ecc_caps)sizeof(nand_data_interface)alignof(nand_data_interface)sizeof(nand_sdr_timings)alignof(nand_sdr_timings)sizeof(nand_data_interface_type)alignof(nand_data_interface_type)sizeof(platform_nand_ctrl)alignof(platform_nand_ctrl)sizeof(platform_nand_chip)alignof(platform_nand_chip)sizeof(platform_device)alignof(platform_device)sizeof(nand_manufacturers)alignof(nand_manufacturers)sizeof(nand_flash_dev)alignof(nand_flash_dev)sizeof(nand_hw_control)alignof(nand_hw_control)sizeof(nand_buffers)alignof(nand_buffers)sizeof(nand_ecc_ctrl)alignof(nand_ecc_ctrl)sizeof(nand_jedec_params)alignof(nand_jedec_params)sizeof(nand_onfi_params)alignof(nand_onfi_params)sizeof(nand_ecc_algo)alignof(nand_ecc_algo)sizeof(nand_ecc_modes_t)alignof(nand_ecc_modes_t)sizeof(nand_ecc_step_info)alignof(nand_ecc_step_info)sizeof(jedec_ecc_info)alignof(jedec_ecc_info)sizeof(onfi_ext_section)alignof(onfi_ext_section)sizeof(nand_chip *)alignof(nand_chip *)sizeof(const nand_ecc_caps)alignof(const nand_ecc_caps)sizeof(const nand_ecc_caps *)alignof(const nand_ecc_caps *)sizeof(nand_ecc_caps *)alignof(nand_ecc_caps *)sizeof(const nand_data_interface)alignof(const nand_data_interface)sizeof(const nand_data_interface *)alignof(const nand_data_interface *)sizeof(nand_data_interface *)alignof(nand_data_interface *)sizeof(const nand_sdr_timings)alignof(const nand_sdr_timings)sizeof(const nand_sdr_timings *)alignof(const nand_sdr_timings *)sizeof(nand_sdr_timings *)alignof(nand_sdr_timings *)sizeof(nand_ecc_ctrl *)alignof(nand_ecc_ctrl *)sizeof(nand_hw_control *)alignof(nand_hw_control *)sizeof(nand_flash_dev *)alignof(nand_flash_dev *)sizeof(platform_nand_data)alignof(platform_nand_data)sizeof(nand_onfi_vendor_micron)alignof(nand_onfi_vendor_micron)sizeof(onfi_ext_param_page)alignof(onfi_ext_param_page)sizeof(onfi_ext_ecc_info)alignof(onfi_ext_ecc_info)sizeof(platform_device *)alignof(platform_device *)sizeof(const nand_ecc_step_info)alignof(const nand_ecc_step_info)sizeof(const nand_ecc_step_info *)alignof(const nand_ecc_step_info *)sizeof(nand_ecc_step_info *)alignof(nand_ecc_step_info *)sizeof(nand_buffers *)alignof(nand_buffers *)sizeof(uint8_t[18048])alignof(uint8_t[18048])sizeof(unsigned char[18048])alignof(unsigned char[18048])sizeof(uint8_t[1664])alignof(uint8_t[1664])sizeof(unsigned char[1664])alignof(unsigned char[1664])sizeof(u8[88])alignof(u8[88])sizeof(unsigned char[88])alignof(unsigned char[88])sizeof(u8[148])alignof(u8[148])sizeof(unsigned char[148])alignof(unsigned char[148])sizeof(u8[29])alignof(u8[29])sizeof(unsigned char[29])alignof(unsigned char[29])sizeof(jedec_ecc_info[4])alignof(jedec_ecc_info[4])sizeof(u8[36])alignof(u8[36])sizeof(unsigned char[36])alignof(unsigned char[36])sizeof(u8[38])alignof(u8[38])sizeof(unsigned char[38])alignof(unsigned char[38])sizeof(u8[6])alignof(u8[6])sizeof(u8[10])alignof(u8[10])sizeof(unsigned char[10])alignof(unsigned char[10])sizeof(u8[18])alignof(u8[18])sizeof(unsigned char[18])alignof(unsigned char[18])sizeof(u8[2])alignof(u8[2])sizeof(u8[72])alignof(u8[72])sizeof(unsigned char[72])alignof(unsigned char[72])sizeof(onfi_ext_section[8])alignof(onfi_ext_section[8])sizeof(u8[8])alignof(u8[8])sizeof(u8[13])alignof(u8[13])sizeof(u8[17])alignof(u8[17])sizeof(unsigned char[17])alignof(unsigned char[17])sizeof(nand_manufacturers[])alignof(nand_manufacturers[])sizeof(nand_flash_dev[])alignof(nand_flash_dev[])sizeof(nand_erase_options)alignof(nand_erase_options)sizeof(nand_erase_options_t)alignof(nand_erase_options_t)sizeof(const nand_erase_options_t)alignof(const nand_erase_options_t)sizeof(const nand_erase_options_t *)alignof(const nand_erase_options_t *)sizeof(nand_erase_options *)alignof(nand_erase_options *)sizeof(mtd_oob_ops_t)alignof(mtd_oob_ops_t)alignof(uInt)sizeof(uLong)alignof(uLong)sizeof(gz_header_s)alignof(gz_header_s)sizeof(gz_header)alignof(gz_header)alignof(Byte)sizeof(Bytef)alignof(Bytef)sizeof(z_stream_s)alignof(z_stream_s)alignof(z_stream)sizeof(Bytef *)alignof(Bytef *)sizeof(cb_func)alignof(cb_func)sizeof(voidpf)alignof(voidpf)sizeof(free_func)alignof(free_func)sizeof(alloc_func)alignof(alloc_func)sizeof(internal_state)alignof(internal_state)sizeof(z_stream *)alignof(z_stream *)sizeof(z_streamp)alignof(z_streamp)sizeof(const Bytef)alignof(const Bytef)sizeof(const Bytef *)alignof(const Bytef *)sizeof(gz_header *)alignof(gz_header *)sizeof(gz_headerp)alignof(gz_headerp)sizeof(gz_header_s *)alignof(gz_header_s *)sizeof(z_stream_s *)alignof(z_stream_s *)sizeof(voidp)alignof(voidp)sizeof(voidpc)alignof(voidpc)sizeof(uLongf)alignof(uLongf)sizeof(uIntf)alignof(uIntf)sizeof(intf)alignof(intf)sizeof(charf)alignof(charf)sizeof(internal_state *)alignof(internal_state *)sizeof(const andr_img_hdr)alignof(const andr_img_hdr)sizeof(const andr_img_hdr *)alignof(const andr_img_hdr *)sizeof(andr_img_hdr *)alignof(andr_img_hdr *)sizeof(cmd_tbl_t[8])alignof(cmd_tbl_t[8])sizeof(cmd_tbl_s[8])alignof(cmd_tbl_s[8])sizeof(char[42])alignof(char[42])sizeof(char[47])alignof(char[47])sizeof(char[213])alignof(char[213])sizeof(char[1171])alignof(char[1171])sizeof(cmd_tbl_t[3])alignof(cmd_tbl_t[3])sizeof(cmd_tbl_s[3])alignof(cmd_tbl_s[3])sizeof(char[187])alignof(char[187])sizeof(image_info)alignof(image_info)sizeof(image_info_t)alignof(image_info_t)sizeof(char[520])alignof(char[520])sizeof(fs_dir_stream)alignof(fs_dir_stream)sizeof(fs_dirent)alignof(fs_dirent)sizeof(fs_dir_stream *)alignof(fs_dir_stream *)sizeof(fs_dirent *)alignof(fs_dirent *)sizeof(char[71])alignof(char[71])sizeof(cbfs_cachenode)alignof(cbfs_cachenode)sizeof(cbfs_header)alignof(cbfs_header)sizeof(cbfs_result)alignof(cbfs_result)sizeof(const cbfs_cachenode)alignof(const cbfs_cachenode)sizeof(const cbfs_cachenode *)alignof(const cbfs_cachenode *)sizeof(cbfs_cachenode *)alignof(cbfs_cachenode *)sizeof(const cbfs_cachenode **)alignof(const cbfs_cachenode **)sizeof(cbfs_cachenode **)alignof(cbfs_cachenode **)sizeof(const cbfs_header)alignof(const cbfs_header)sizeof(const cbfs_header *)alignof(const cbfs_header *)sizeof(cbfs_header *)alignof(cbfs_header *)sizeof(cbfs_fileheader)alignof(cbfs_fileheader)sizeof(cbfs_filetype)alignof(cbfs_filetype)sizeof(u32[2])alignof(u32[2])sizeof(char[93])alignof(char[93])sizeof(char[181])alignof(char[181])sizeof(const char[])alignof(const char[])sizeof(char[8031])alignof(char[8031])sizeof(const char[8031])alignof(const char[8031])sizeof(cpu_info)alignof(cpu_info)sizeof(cpu_info *)alignof(cpu_info *)sizeof(cpu_ops)alignof(cpu_ops)sizeof(cpu_platdata)alignof(cpu_platdata)sizeof(cpu_platdata *)alignof(cpu_platdata *)sizeof(cramfs_inode)alignof(cramfs_inode)sizeof(cramfs_info)alignof(cramfs_info)sizeof(cramfs_super)alignof(cramfs_super)sizeof(mtdids)alignof(mtdids)sizeof(mtd_device)alignof(mtd_device)sizeof(part_info)alignof(part_info)sizeof(mtdids *)alignof(mtdids *)sizeof(mtd_device *)alignof(mtd_device *)sizeof(part_info *)alignof(part_info *)sizeof(char[257])alignof(char[257])sizeof(const char *const[3])alignof(const char *const[3])sizeof(const char[22])alignof(const char[22])sizeof(char[856])alignof(char[856])sizeof(const rtc_time)alignof(const rtc_time)sizeof(const rtc_time *)alignof(const rtc_time *)sizeof(rtc_ops)alignof(rtc_ops)sizeof(i2c_msg)alignof(i2c_msg)sizeof(dm_i2c_chip)alignof(dm_i2c_chip)sizeof(dm_i2c_chip *)alignof(dm_i2c_chip *)sizeof(i2c_mux_ops)alignof(i2c_mux_ops)sizeof(dm_i2c_ops)alignof(dm_i2c_ops)sizeof(i2c_msg_list)alignof(i2c_msg_list)sizeof(dm_i2c_msg_flags)alignof(dm_i2c_msg_flags)sizeof(dm_i2c_bus)alignof(dm_i2c_bus)sizeof(dm_i2c_chip_flags)alignof(dm_i2c_chip_flags)sizeof(const char *const[7])alignof(const char *const[7])sizeof(char *[7])alignof(char *[7])sizeof(char[171])alignof(char[171])sizeof(demo_ops)alignof(demo_ops)sizeof(dm_demo_pdata)alignof(dm_demo_pdata)sizeof(uchar[32])alignof(uchar[32])sizeof(char[54])alignof(char[54])sizeof(char[174])alignof(char[174])sizeof(ethsw_command_func)alignof(ethsw_command_func)sizeof(ethsw_command_def)alignof(ethsw_command_def)sizeof(ethsw_keyword_opt_id)alignof(ethsw_keyword_opt_id)sizeof(ethsw_keyword_id)alignof(ethsw_keyword_id)sizeof(ethsw_command_def *)alignof(ethsw_command_def *)sizeof(uchar[6])alignof(uchar[6])sizeof(int[20])alignof(int[20])sizeof(const ethsw_command_func)alignof(const ethsw_command_func)sizeof(const ethsw_command_func *)alignof(const ethsw_command_func *)sizeof(ethsw_command_func *)alignof(ethsw_command_func *)sizeof(keyword_def)alignof(keyword_def)sizeof(keyword_def[26])alignof(keyword_def[26])sizeof(keyword_def *)alignof(keyword_def *)sizeof(const ethsw_command_def)alignof(const ethsw_command_def)sizeof(const ethsw_command_def *)alignof(const ethsw_command_def *)sizeof(keywords_to_function)alignof(keywords_to_function)sizeof(keywords_to_function[51])alignof(keywords_to_function[51])sizeof(keywords_to_function *)alignof(keywords_to_function *)sizeof(ethsw_keyword_id[20])alignof(ethsw_keyword_id[20])sizeof(ethsw_keyword_id *)alignof(ethsw_keyword_id *)sizeof(keywords_optional)alignof(keywords_optional)sizeof(keywords_optional[3])alignof(keywords_optional[3])sizeof(keywords_optional *)alignof(keywords_optional *)sizeof(char[127])alignof(char[127])sizeof(char[92])alignof(char[92])sizeof(char[182])alignof(char[182])sizeof(char[109])alignof(char[109])sizeof(char[117])alignof(char[117])sizeof(char[196])alignof(char[196])sizeof(char[123])alignof(char[123])sizeof(char[94])alignof(char[94])sizeof(char[1333])alignof(char[1333])sizeof(keyword_def[])alignof(keyword_def[])sizeof(keywords_optional[])alignof(keywords_optional[])sizeof(keywords_to_function[])alignof(keywords_to_function[])sizeof(char[165])alignof(char[165])sizeof(char[97])alignof(char[97])sizeof(ext2fs_node)alignof(ext2fs_node)sizeof(ext2_inode)alignof(ext2_inode)sizeof(ext2_sblock)alignof(ext2_sblock)sizeof(ext2_data)alignof(ext2_data)sizeof(ext2_dirent)alignof(ext2_dirent)sizeof(datablocks)alignof(datablocks)sizeof(ext2_block_group)alignof(ext2_block_group)sizeof(ext2_data *)alignof(ext2_data *)sizeof(ext2_inode *)alignof(ext2_inode *)sizeof(__le32[3])alignof(__le32[3])sizeof(char[60])alignof(char[60])sizeof(__le32[12])alignof(__le32[12])sizeof(unsigned int[12])alignof(unsigned int[12])sizeof(__le32[17])alignof(__le32[17])sizeof(unsigned int[17])alignof(unsigned int[17])sizeof(__le32[4])alignof(__le32[4])sizeof(ext_block_cache)alignof(ext_block_cache)sizeof(ext_filesystem)alignof(ext_filesystem)sizeof(ext_block_cache *)alignof(ext_block_cache *)sizeof(ext2fs_node *)alignof(ext2fs_node *)sizeof(ext_filesystem *)alignof(ext_filesystem *)sizeof(ext4_extent_header)alignof(ext4_extent_header)sizeof(ext4_extent_idx)alignof(ext4_extent_idx)sizeof(ext4_extent)alignof(ext4_extent)sizeof(ext2_sblock *)alignof(ext2_sblock *)sizeof(umass_bbb_csw)alignof(umass_bbb_csw)sizeof(umass_bbb_cbw)alignof(umass_bbb_cbw)sizeof(usb_tt)alignof(usb_tt)sizeof(__u8[16])alignof(__u8[16])sizeof(usb_device_speed)alignof(usb_device_speed)sizeof(usb_ss_ep_comp_descriptor)alignof(usb_ss_ep_comp_descriptor)sizeof(usb_endpoint_descriptor)alignof(usb_endpoint_descriptor)sizeof(const usb_ss_ep_comp_descriptor)alignof(const usb_ss_ep_comp_descriptor)sizeof(const usb_ss_ep_comp_descriptor *)alignof(const usb_ss_ep_comp_descriptor *)sizeof(usb_ss_ep_comp_descriptor *)alignof(usb_ss_ep_comp_descriptor *)sizeof(const usb_endpoint_descriptor)alignof(const usb_endpoint_descriptor)sizeof(const usb_endpoint_descriptor *)alignof(const usb_endpoint_descriptor *)sizeof(usb_endpoint_descriptor *)alignof(usb_endpoint_descriptor *)sizeof(const __le16)alignof(const __le16)sizeof(const __le16 *)alignof(const __le16 *)sizeof(usb_string)alignof(usb_string)sizeof(usb_set_sel_req)alignof(usb_set_sel_req)sizeof(usb3_link_state)alignof(usb3_link_state)sizeof(usb_device_state)alignof(usb_device_state)sizeof(usb_connection_context)alignof(usb_connection_context)sizeof(usb_handshake)alignof(usb_handshake)sizeof(usb_wireless_ep_comp_descriptor)alignof(usb_wireless_ep_comp_descriptor)sizeof(usb_ss_container_id_descriptor)alignof(usb_ss_container_id_descriptor)sizeof(usb_ss_cap_descriptor)alignof(usb_ss_cap_descriptor)sizeof(usb_ext_cap_descriptor)alignof(usb_ext_cap_descriptor)sizeof(usb_wireless_cap_descriptor)alignof(usb_wireless_cap_descriptor)sizeof(usb_dev_cap_header)alignof(usb_dev_cap_header)sizeof(usb_bos_descriptor)alignof(usb_bos_descriptor)sizeof(usb_encryption_descriptor)alignof(usb_encryption_descriptor)sizeof(usb_key_descriptor)alignof(usb_key_descriptor)sizeof(usb_security_descriptor)alignof(usb_security_descriptor)sizeof(usb_interface_assoc_descriptor)alignof(usb_interface_assoc_descriptor)sizeof(usb_debug_descriptor)alignof(usb_debug_descriptor)sizeof(usb_otg_descriptor)alignof(usb_otg_descriptor)sizeof(usb_qualifier_descriptor)alignof(usb_qualifier_descriptor)sizeof(usb_class_report_descriptor)alignof(usb_class_report_descriptor)sizeof(usb_class_hid_descriptor)alignof(usb_class_hid_descriptor)sizeof(usb_generic_descriptor)alignof(usb_generic_descriptor)sizeof(usb_interface_descriptor)alignof(usb_interface_descriptor)sizeof(usb_string_descriptor)alignof(usb_string_descriptor)sizeof(usb_config_descriptor)alignof(usb_config_descriptor)sizeof(usb_device_descriptor)alignof(usb_device_descriptor)sizeof(usb_descriptor_header)alignof(usb_descriptor_header)sizeof(usb_ctrlrequest)alignof(usb_ctrlrequest)sizeof(__u8[3])alignof(__u8[3])sizeof(__u8[0])alignof(__u8[0])sizeof(u8[0])alignof(u8[0])sizeof(__le16[1])alignof(__le16[1])sizeof(usb_device)alignof(usb_device)sizeof(devrequest)alignof(devrequest)sizeof(ehci_ctrl)alignof(ehci_ctrl)sizeof(int_queue)alignof(int_queue)sizeof(usb_device_id)alignof(usb_device_id)sizeof(usb_init_type)alignof(usb_init_type)sizeof(usb_hub_descriptor)alignof(usb_hub_descriptor)sizeof(usb_config)alignof(usb_config)sizeof(usb_interface)alignof(usb_interface)sizeof(usb_generic_descriptor *)alignof(usb_generic_descriptor *)sizeof(usb_generic_descriptor **)alignof(usb_generic_descriptor **)sizeof(usb_device *)alignof(usb_device *)sizeof(devrequest *)alignof(devrequest *)sizeof(usb_string *)alignof(usb_string *)sizeof(usb_device **)alignof(usb_device **)sizeof(ehci_ctrl *)alignof(ehci_ctrl *)sizeof(ehci_ctrl **)alignof(ehci_ctrl **)sizeof(int_queue *)alignof(int_queue *)sizeof(dm_usb_ops)alignof(dm_usb_ops)sizeof(usb_emul_platdata)alignof(usb_emul_platdata)sizeof(usb_bus_priv)alignof(usb_bus_priv)sizeof(usb_dev_platdata)alignof(usb_dev_platdata)sizeof(usb_platdata)alignof(usb_platdata)sizeof(usb_hub_device)alignof(usb_hub_device)sizeof(usb_hub_status)alignof(usb_hub_status)sizeof(usb_port_status)alignof(usb_port_status)sizeof(usb_driver_entry)alignof(usb_driver_entry)sizeof(__u8[2])alignof(__u8[2])sizeof(const usb_device_id)alignof(const usb_device_id)sizeof(const usb_device_id *)alignof(const usb_device_id *)sizeof(usb_device_id *)alignof(usb_device_id *)sizeof(int[16])alignof(int[16])sizeof(usb_interface[8])alignof(usb_interface[8])sizeof(usb_ss_ep_comp_descriptor[16])alignof(usb_ss_ep_comp_descriptor[16])sizeof(usb_endpoint_descriptor[16])alignof(usb_endpoint_descriptor[16])sizeof(char[164])alignof(char[164])sizeof(char[119])alignof(char[119])sizeof(char[122])alignof(char[122])sizeof(usb_gadget)alignof(usb_gadget)sizeof(usb_ep)alignof(usb_ep)sizeof(usb_request)alignof(usb_request)sizeof(usb_gadget_driver)alignof(usb_gadget_driver)sizeof(usb_gadget_strings)alignof(usb_gadget_strings)sizeof(usb_gadget_ops)alignof(usb_gadget_ops)sizeof(usb_ep_ops)alignof(usb_ep_ops)sizeof(dma_addr_t)alignof(dma_addr_t)sizeof(usb_gadget *)alignof(usb_gadget *)sizeof(usb_ep *)alignof(usb_ep *)sizeof(usb_request *)alignof(usb_request *)sizeof(usb_gadget_driver *)alignof(usb_gadget_driver *)sizeof(const usb_config_descriptor)alignof(const usb_config_descriptor)sizeof(const usb_config_descriptor *)alignof(const usb_config_descriptor *)sizeof(usb_config_descriptor *)alignof(usb_config_descriptor *)sizeof(const usb_descriptor_header)alignof(const usb_descriptor_header)sizeof(const usb_descriptor_header *)alignof(const usb_descriptor_header *)sizeof(const usb_descriptor_header **)alignof(const usb_descriptor_header **)sizeof(usb_descriptor_header *)alignof(usb_descriptor_header *)sizeof(usb_descriptor_header **)alignof(usb_descriptor_header **)sizeof(usb_gadget_strings *)alignof(usb_gadget_strings *)sizeof(const usb_gadget_ops)alignof(const usb_gadget_ops)sizeof(const usb_gadget_ops *)alignof(const usb_gadget_ops *)sizeof(usb_gadget_ops *)alignof(usb_gadget_ops *)sizeof(const device)alignof(const device)sizeof(const device *)alignof(const device *)sizeof(const usb_ep_ops)alignof(const usb_ep_ops)sizeof(const usb_ep_ops *)alignof(const usb_ep_ops *)sizeof(usb_ep_ops *)alignof(usb_ep_ops *)sizeof(const usb_ctrlrequest)alignof(const usb_ctrlrequest)sizeof(const usb_ctrlrequest *)alignof(const usb_ctrlrequest *)sizeof(usb_ctrlrequest *)alignof(usb_ctrlrequest *)sizeof(usb_composite_dev)alignof(usb_composite_dev)sizeof(usb_composite_driver)alignof(usb_composite_driver)sizeof(usb_configuration)alignof(usb_configuration)sizeof(usb_function)alignof(usb_function)sizeof(usb_composite_dev *)alignof(usb_composite_dev *)sizeof(usb_composite_driver *)alignof(usb_composite_driver *)sizeof(usb_configuration *)alignof(usb_configuration *)sizeof(usb_function *)alignof(usb_function *)sizeof(unsigned long[1])alignof(unsigned long[1])sizeof(usb_function *[16])alignof(usb_function *[16])sizeof(usb_gadget_strings **)alignof(usb_gadget_strings **)sizeof(const usb_device_descriptor)alignof(const usb_device_descriptor)sizeof(const usb_device_descriptor *)alignof(const usb_device_descriptor *)sizeof(usb_device_descriptor *)alignof(usb_device_descriptor *)sizeof(g_dnl_bind_callback_f)alignof(g_dnl_bind_callback_f)sizeof(g_dnl_bind_callback)alignof(g_dnl_bind_callback)sizeof(proto_t)alignof(proto_t)sizeof(char[161])alignof(char[161])sizeof(ata_taskfile)alignof(ata_taskfile)sizeof(ata_taskfile *)alignof(ata_taskfile *)sizeof(const unsigned short)alignof(const unsigned short)sizeof(const unsigned short *)alignof(const unsigned short *)sizeof(ata_tf_protocols)alignof(ata_tf_protocols)sizeof(ata_dev_typed)alignof(ata_dev_typed)sizeof(ata_ioctls)alignof(ata_ioctls)sizeof(pio_config_t)alignof(pio_config_t)sizeof(hd_driveid)alignof(hd_driveid)sizeof(hd_driveid_t)alignof(hd_driveid_t)sizeof(unsigned short[92])alignof(unsigned short[92])sizeof(unsigned short[26])alignof(unsigned short[26])sizeof(unsigned short[22])alignof(unsigned short[22])sizeof(unsigned short[4])alignof(unsigned short[4])sizeof(unsigned short[6])alignof(unsigned short[6])sizeof(unsigned short[2])alignof(unsigned short[2])sizeof(unsigned char[40])alignof(unsigned char[40])sizeof(fsdata)alignof(fsdata)sizeof(fs_dirent **)alignof(fs_dirent **)sizeof(fs_dir_stream **)alignof(fs_dir_stream **)sizeof(fsdata *)alignof(fsdata *)alignof(dir_slot)alignof(dir_entry)alignof(volume_info)alignof(boot_sector)sizeof(__u8 *)alignof(__u8 *)sizeof(__u8[12])alignof(__u8[12])sizeof(unsigned char[12])alignof(unsigned char[12])sizeof(__u8[10])alignof(__u8[10])sizeof(__u16[6])alignof(__u16[6])sizeof(const cmd_tbl_t)alignof(const cmd_tbl_t)sizeof(const cmd_tbl_t *)alignof(const cmd_tbl_t *)sizeof(char[88])alignof(char[88])sizeof(char[84])alignof(char[84])sizeof(char[153])alignof(char[153])sizeof(char[99])alignof(char[99])sizeof(char[565])alignof(char[565])sizeof(fdt_property)alignof(fdt_property)sizeof(const fdt_property)alignof(const fdt_property)sizeof(const fdt_property *)alignof(const fdt_property *)sizeof(fdt_property *)alignof(fdt_property *)sizeof(fdt32_t *)alignof(fdt32_t *)sizeof(fdt_header **)alignof(fdt_header **)sizeof(char[112])alignof(char[112])sizeof(char[1024])alignof(char[1024])sizeof(const char *const[10])alignof(const char *const[10])sizeof(char *[10])alignof(char *[10])sizeof(char[1897])alignof(char[1897])sizeof(mtd_device **)alignof(mtd_device **)sizeof(part_info **)alignof(part_info **)sizeof(jffs2_unknown_node)alignof(jffs2_unknown_node)sizeof(jffs2_raw_summary)alignof(jffs2_raw_summary)sizeof(jffs2_raw_dirent)alignof(jffs2_raw_dirent)sizeof(jffs2_raw_inode)alignof(jffs2_raw_inode)sizeof(jffs2_node_union)alignof(jffs2_node_union)sizeof(__u32[0])alignof(__u32[0])sizeof(char[787])alignof(char[787])sizeof(char[331])alignof(char[331])sizeof(char[111])alignof(char[111])sizeof(char[138])alignof(char[138])sizeof(char[156])alignof(char[156])sizeof(char[150])alignof(char[150])sizeof(char[379])alignof(char[379])sizeof(char[439])alignof(char[439])sizeof(gpio_cmd)alignof(gpio_cmd)sizeof(const char[15])alignof(const char[15])sizeof(char[140])alignof(char[140])sizeof(disk_part)alignof(disk_part)sizeof(_gpt_entry)alignof(_gpt_entry)alignof(gpt_entry)sizeof(const char[7])alignof(const char[7])sizeof(disk_partition_t **)alignof(disk_partition_t **)sizeof(disk_partition **)alignof(disk_partition **)sizeof(disk_part *)alignof(disk_part *)sizeof(_gpt_header)alignof(_gpt_header)alignof(gpt_header)sizeof(gpt_header *)alignof(gpt_header *)sizeof(gpt_entry *)alignof(gpt_entry *)sizeof(gpt_entry **)alignof(gpt_entry **)sizeof(_gpt_header *)alignof(_gpt_header *)sizeof(_gpt_entry *)alignof(_gpt_entry *)sizeof(_gpt_entry **)alignof(_gpt_entry **)sizeof(char[810])alignof(char[810])sizeof(char[227])alignof(char[227])sizeof(char[98])alignof(char[98])sizeof(host_block_dev)alignof(host_block_dev)sizeof(cmd_tbl_t[7])alignof(cmd_tbl_t[7])sizeof(cmd_tbl_s[7])alignof(cmd_tbl_s[7])sizeof(host_block_dev *)alignof(host_block_dev *)sizeof(char[577])alignof(char[577])sizeof(int[3])alignof(int[3])sizeof(stdio_dev **[3])alignof(stdio_dev **[3])sizeof(edid1_info)alignof(edid1_info)sizeof(edid_monitor_descriptor)alignof(edid_monitor_descriptor)sizeof(const display_timing)alignof(const display_timing)sizeof(const display_timing *)alignof(const display_timing *)sizeof(edid1_info *)alignof(edid1_info *)sizeof(edid_cea861_info)alignof(edid_cea861_info)sizeof(edid_cea861_db_types)alignof(edid_cea861_db_types)sizeof(edid_monitor_descriptor_types)alignof(edid_monitor_descriptor_types)sizeof(edid_detailed_timing)alignof(edid_detailed_timing)sizeof(edid_aspect)alignof(edid_aspect)sizeof(unsigned char[124])alignof(unsigned char[124])sizeof(struct <unnamed>[8])alignof(struct <unnamed>[8])sizeof(edid_monitor_descriptor[4])alignof(edid_monitor_descriptor[4])sizeof(i2c_err_op)alignof(i2c_err_op)sizeof(cmd_tbl_t[16])alignof(cmd_tbl_t[16])sizeof(cmd_tbl_s[16])alignof(cmd_tbl_s[16])sizeof(u_char[16])alignof(u_char[16])sizeof(char[1058])alignof(char[1058])sizeof(char[312])alignof(char[312])sizeof(iotrace_record *)alignof(iotrace_record *)sizeof(char[341])alignof(char[341])sizeof(op_tbl_s)alignof(op_tbl_s)sizeof(op_tbl_t)alignof(op_tbl_t)sizeof(const op_tbl_t)alignof(const op_tbl_t)sizeof(const op_tbl_t[13])alignof(const op_tbl_t[13])sizeof(op_tbl_s[13])alignof(op_tbl_s[13])sizeof(const op_tbl_t *)alignof(const op_tbl_t *)sizeof(op_tbl_s *)alignof(op_tbl_s *)sizeof(const op_tbl_t(*)[13])alignof(const op_tbl_t(*)[13])sizeof(op_tbl_s(*)[13])alignof(op_tbl_s(*)[13])sizeof(op_tbl_t *)alignof(op_tbl_t *)sizeof(const op_tbl_t[])alignof(const op_tbl_t[])sizeof(op_tbl_s[])alignof(op_tbl_s[])sizeof(led_uc_plat *)alignof(led_uc_plat *)sizeof(char[128])alignof(char[128])sizeof(char[6825])alignof(char[6825])sizeof(const char[6825])alignof(const char[6825])sizeof(jt_funcs)alignof(jt_funcs)sizeof(spi_slave *)alignof(spi_slave *)sizeof(connection_info_t)alignof(connection_info_t)sizeof(connection_info_t *)alignof(connection_info_t *)sizeof(char[63])alignof(char[63])sizeof(char[517])alignof(char[517])sizeof(char[255])alignof(char[255])sizeof(char[101])alignof(char[101])sizeof(log_fmt)alignof(log_fmt)sizeof(char[371])alignof(char[371])sizeof(UInt64)alignof(UInt64)sizeof(SRes)alignof(SRes)sizeof(CSecToRead)alignof(CSecToRead)sizeof(ILookInStream)alignof(ILookInStream)sizeof(ISeqInStream)alignof(ISeqInStream)sizeof(CSecToLook)alignof(CSecToLook)sizeof(CLookToRead)alignof(CLookToRead)sizeof(ISeekInStream)alignof(ISeekInStream)sizeof(ESzSeek)alignof(ESzSeek)sizeof(Int64)alignof(Int64)sizeof(CSecToRead *)alignof(CSecToRead *)sizeof(CSecToLook *)alignof(CSecToLook *)sizeof(CLookToRead *)alignof(CLookToRead *)sizeof(ILookInStream *)alignof(ILookInStream *)sizeof(ISeqInStream *)alignof(ISeqInStream *)sizeof(LZByte)alignof(LZByte)sizeof(LZByte *)alignof(LZByte *)sizeof(ISzAlloc)alignof(ISzAlloc)sizeof(ICompressProgress)alignof(ICompressProgress)sizeof(ISeqOutStream)alignof(ISeqOutStream)sizeof(IByteOut)alignof(IByteOut)sizeof(IByteIn)alignof(IByteIn)sizeof(Bool)alignof(Bool)alignof(SizeT)alignof(UInt32)alignof(Int32)alignof(UInt16)sizeof(Int16)alignof(Int16)sizeof(WRes)alignof(WRes)sizeof(LZByte[16384])alignof(LZByte[16384])sizeof(unsigned char[16384])alignof(unsigned char[16384])sizeof(ISeekInStream *)alignof(ISeekInStream *)sizeof(Int64 *)alignof(Int64 *)sizeof(const void **)alignof(const void **)sizeof(SizeT *)alignof(SizeT *)sizeof(MD5Context)alignof(MD5Context)sizeof(__u32[4])alignof(__u32[4])sizeof(__u32[16])alignof(__u32[16])sizeof(phy_device)alignof(phy_device)sizeof(mii_dev)alignof(mii_dev)sizeof(mii_dev *)alignof(mii_dev *)sizeof(phy_device *)alignof(phy_device *)sizeof(phy_driver)alignof(phy_driver)sizeof(phy_driver *)alignof(phy_driver *)sizeof(mii_dev **)alignof(mii_dev **)sizeof(phy_device **)alignof(phy_device **)sizeof(phy_device *[32])alignof(phy_device *[32])sizeof(char[473])alignof(char[473])sizeof(vu_long *)alignof(vu_long *)sizeof(volatile unsigned long *)alignof(volatile unsigned long *)sizeof(const ulong)alignof(const ulong)sizeof(const ulong[])alignof(const ulong[])sizeof(unsigned long[])alignof(unsigned long[])sizeof(const ulong[8])alignof(const ulong[8])sizeof(unsigned long[8])alignof(unsigned long[8])sizeof(const ulong *)alignof(const ulong *)sizeof(volatile u64)alignof(volatile u64)sizeof(volatile u64 *)alignof(volatile u64 *)sizeof(volatile u8)alignof(volatile u8)sizeof(volatile u8 *)alignof(volatile u8 *)sizeof(char[91])alignof(char[91])sizeof(ethtool_set_features_block)alignof(ethtool_set_features_block)sizeof(ethtool_get_features_block)alignof(ethtool_get_features_block)sizeof(ethtool_cmd)alignof(ethtool_cmd)sizeof(ethtool_cmd *)alignof(ethtool_cmd *)sizeof(ethtool_reset_flags)alignof(ethtool_reset_flags)sizeof(ethtool_sfeatures_retval_bits)alignof(ethtool_sfeatures_retval_bits)sizeof(ethtool_sfeatures)alignof(ethtool_sfeatures)sizeof(ethtool_gfeatures)alignof(ethtool_gfeatures)sizeof(ethtool_flash)alignof(ethtool_flash)sizeof(ethtool_flash_op_type)alignof(ethtool_flash_op_type)sizeof(ethtool_rxfh_indir)alignof(ethtool_rxfh_indir)sizeof(ethtool_usrip4_spec)alignof(ethtool_usrip4_spec)sizeof(ethtool_ah_espip4_spec)alignof(ethtool_ah_espip4_spec)sizeof(ethtool_tcpip4_spec)alignof(ethtool_tcpip4_spec)sizeof(ethtool_flags)alignof(ethtool_flags)sizeof(ethtool_perm_addr)alignof(ethtool_perm_addr)sizeof(ethtool_stats)alignof(ethtool_stats)sizeof(ethtool_test)alignof(ethtool_test)sizeof(ethtool_test_flags)alignof(ethtool_test_flags)sizeof(ethtool_sset_info)alignof(ethtool_sset_info)sizeof(ethtool_gstrings)alignof(ethtool_gstrings)sizeof(ethtool_stringset)alignof(ethtool_stringset)sizeof(ethtool_pauseparam)alignof(ethtool_pauseparam)sizeof(ethtool_ringparam)alignof(ethtool_ringparam)sizeof(ethtool_coalesce)alignof(ethtool_coalesce)sizeof(ethtool_eeprom)alignof(ethtool_eeprom)sizeof(ethtool_regs)alignof(ethtool_regs)sizeof(ethtool_value)alignof(ethtool_value)sizeof(ethtool_wolinfo)alignof(ethtool_wolinfo)sizeof(ethtool_drvinfo)alignof(ethtool_drvinfo)sizeof(ethtool_set_features_block[0])alignof(ethtool_set_features_block[0])sizeof(ethtool_get_features_block[0])alignof(ethtool_get_features_block[0])sizeof(__u64[0])alignof(__u64[0])sizeof(unsigned long long[0])alignof(unsigned long long[0])sizeof(__u8[6])alignof(__u8[6])sizeof(phy_interface_t)alignof(phy_interface_t)sizeof(const char *const[22])alignof(const char *const[22])sizeof(char *[22])alignof(char *[22])sizeof(fixed_link)alignof(fixed_link)sizeof(mdio_mux_ops)alignof(mdio_mux_ops)sizeof(mdio_ops)alignof(mdio_ops)sizeof(mdio_perdev_priv)alignof(mdio_perdev_priv)sizeof(_MII_field_desc_t)alignof(_MII_field_desc_t)sizeof(MII_field_desc_t)alignof(MII_field_desc_t)sizeof(_MII_reg_desc_t)alignof(_MII_reg_desc_t)sizeof(MII_reg_desc_t)alignof(MII_reg_desc_t)sizeof(ushort[11])alignof(ushort[11])sizeof(unsigned short[11])alignof(unsigned short[11])sizeof(char[73])alignof(char[73])sizeof(const ushort)alignof(const ushort)sizeof(const ushort *)alignof(const ushort *)sizeof(const MII_field_desc_t)alignof(const MII_field_desc_t)sizeof(const MII_field_desc_t *)alignof(const MII_field_desc_t *)sizeof(_MII_field_desc_t *)alignof(_MII_field_desc_t *)sizeof(const MII_reg_desc_t)alignof(const MII_reg_desc_t)sizeof(const MII_reg_desc_t *)alignof(const MII_reg_desc_t *)sizeof(_MII_reg_desc_t *)alignof(_MII_reg_desc_t *)sizeof(const MII_reg_desc_t[8])alignof(const MII_reg_desc_t[8])sizeof(_MII_reg_desc_t[8])alignof(_MII_reg_desc_t[8])sizeof(const uchar)alignof(const uchar)sizeof(char[601])alignof(char[601])sizeof(const MII_reg_desc_t[])alignof(const MII_reg_desc_t[])sizeof(_MII_reg_desc_t[])alignof(_MII_reg_desc_t[])sizeof(const MII_field_desc_t[10])alignof(const MII_field_desc_t[10])sizeof(_MII_field_desc_t[10])alignof(_MII_field_desc_t[10])sizeof(const MII_field_desc_t[16])alignof(const MII_field_desc_t[16])sizeof(_MII_field_desc_t[16])alignof(_MII_field_desc_t[16])sizeof(const MII_field_desc_t[1])alignof(const MII_field_desc_t[1])sizeof(_MII_field_desc_t[1])alignof(_MII_field_desc_t[1])sizeof(const MII_field_desc_t[3])alignof(const MII_field_desc_t[3])sizeof(_MII_field_desc_t[3])alignof(_MII_field_desc_t[3])sizeof(const MII_field_desc_t[12])alignof(const MII_field_desc_t[12])sizeof(_MII_field_desc_t[12])alignof(_MII_field_desc_t[12])sizeof(const MII_field_desc_t[8])alignof(const MII_field_desc_t[8])sizeof(_MII_field_desc_t[8])alignof(_MII_field_desc_t[8])sizeof(const MII_field_desc_t[])alignof(const MII_field_desc_t[])sizeof(_MII_field_desc_t[])alignof(_MII_field_desc_t[])sizeof(char[79])alignof(char[79])sizeof(char[513])alignof(char[513])sizeof(char[62])alignof(char[62])sizeof(char[129])alignof(char[129])sizeof(char[512])alignof(char[512])sizeof(char[66])alignof(char[66])sizeof(char[72])alignof(char[72])sizeof(char[55])alignof(char[55])sizeof(mtd_info **)alignof(mtd_info **)sizeof(char[1246])alignof(char[1246])sizeof(cmd_tbl_t[13])alignof(cmd_tbl_t[13])sizeof(cmd_tbl_s[13])alignof(cmd_tbl_s[13])sizeof(env_clbk_tbl *)alignof(env_clbk_tbl *)sizeof(char[287])alignof(char[287])sizeof(char[342])alignof(char[342])sizeof(char[236])alignof(char[236])sizeof(char[203])alignof(char[203])sizeof(char[941])alignof(char[941])sizeof(char[61])alignof(char[61])sizeof(const struct <unnamed>[5])alignof(const struct <unnamed>[5])sizeof(struct <unnamed>[5])alignof(struct <unnamed>[5])sizeof(const struct <unnamed>[])alignof(const struct <unnamed>[])sizeof(nvme_dev *)alignof(nvme_dev *)sizeof(char[440])alignof(char[440])sizeof(video_osd_info)alignof(video_osd_info)sizeof(video_osd_info *)alignof(video_osd_info *)sizeof(video_osd_ops)alignof(video_osd_ops)sizeof(cmd_tbl_t[5])alignof(cmd_tbl_t[5])sizeof(cmd_tbl_s[5])alignof(cmd_tbl_s[5])sizeof(char[355])alignof(char[355])sizeof(cmd_part_info)alignof(cmd_part_info)sizeof(char[912])alignof(char[912])sizeof(pci_reg_info)alignof(pci_reg_info)sizeof(const pci_region)alignof(const pci_region)sizeof(const pci_region *)alignof(const pci_region *)sizeof(pci_flag_info)alignof(pci_flag_info)sizeof(const pci_flag_info)alignof(const pci_flag_info)sizeof(const pci_flag_info[5])alignof(const pci_flag_info[5])sizeof(pci_flag_info[5])alignof(pci_flag_info[5])sizeof(const pci_flag_info *)alignof(const pci_flag_info *)sizeof(pci_flag_info *)alignof(pci_flag_info *)sizeof(pci_child_platdata *)alignof(pci_child_platdata *)sizeof(pci_reg_info *)alignof(pci_reg_info *)sizeof(pci_reg_info[6])alignof(pci_reg_info[6])sizeof(pci_reg_info[8])alignof(pci_reg_info[8])sizeof(pci_reg_info[14])alignof(pci_reg_info[14])sizeof(pci_reg_info[21])alignof(pci_reg_info[21])sizeof(pci_reg_info[25])alignof(pci_reg_info[25])sizeof(char[591])alignof(char[591])sizeof(const pci_flag_info[])alignof(const pci_flag_info[])sizeof(pci_flag_info[])alignof(pci_flag_info[])sizeof(pci_reg_info[])alignof(pci_reg_info[])sizeof(pinconf_param)alignof(pinconf_param)sizeof(pin_config_param)alignof(pin_config_param)sizeof(pinctrl_ops)alignof(pinctrl_ops)sizeof(const pinconf_param)alignof(const pinconf_param)sizeof(const pinconf_param *)alignof(const pinconf_param *)sizeof(pinconf_param *)alignof(pinconf_param *)sizeof(char[191])alignof(char[191])sizeof(pmic_child_info)alignof(pmic_child_info)sizeof(const pmic_child_info)alignof(const pmic_child_info)sizeof(const pmic_child_info *)alignof(const pmic_child_info *)sizeof(pmic_child_info *)alignof(pmic_child_info *)sizeof(uc_pmic_priv)alignof(uc_pmic_priv)sizeof(pmic_op_type)alignof(pmic_op_type)sizeof(dm_pmic_ops)alignof(dm_pmic_ops)sizeof(uc_pmic_priv *)alignof(uc_pmic_priv *)sizeof(char[237])alignof(char[237])sizeof(menu *)alignof(menu *)sizeof(pxe_menu)alignof(pxe_menu)sizeof(pxe_label)alignof(pxe_label)sizeof(token)alignof(token)sizeof(lex_state)alignof(lex_state)sizeof(token_type)alignof(token_type)sizeof(pxe_menu *)alignof(pxe_menu *)sizeof(pxe_label *)alignof(pxe_label *)sizeof(token *)alignof(token *)sizeof(const token)alignof(const token)sizeof(const token[20])alignof(const token[20])sizeof(token[20])alignof(token[20])sizeof(const token *)alignof(const token *)sizeof(const char *[])alignof(const char *[])sizeof(char[195])alignof(char[195])sizeof(char[114])alignof(char[114])sizeof(const token[])alignof(const token[])sizeof(token[])alignof(token[])sizeof(fw_cfg_file_iter)alignof(fw_cfg_file_iter)sizeof(fw_file)alignof(fw_file)sizeof(fw_cfg_arch_ops)alignof(fw_cfg_arch_ops)sizeof(fw_cfg_dma_access)alignof(fw_cfg_dma_access)sizeof(fw_cfg_file)alignof(fw_cfg_file)sizeof(fw_cfg_file_iter *)alignof(fw_cfg_file_iter *)sizeof(fw_file *)alignof(fw_file *)sizeof(fw_cfg_arch_ops *)alignof(fw_cfg_arch_ops *)sizeof(bios_linker_entry)alignof(bios_linker_entry)sizeof(qemu_fwcfg_items)alignof(qemu_fwcfg_items)sizeof(char[124])alignof(char[124])sizeof(fw_cfg_dma_access *)alignof(fw_cfg_dma_access *)sizeof(char[246])alignof(char[246])sizeof(dm_regulator_mode)alignof(dm_regulator_mode)sizeof(regulator_type)alignof(regulator_type)sizeof(udevice *[])alignof(udevice *[])sizeof(dm_regulator_mode *)alignof(dm_regulator_mode *)sizeof(dm_regulator_mode **)alignof(dm_regulator_mode **)sizeof(dm_regulator_ops)alignof(dm_regulator_ops)sizeof(dm_regulator_uclass_platdata)alignof(dm_regulator_uclass_platdata)sizeof(regulator_flag)alignof(regulator_flag)sizeof(cmd_tbl_t[9])alignof(cmd_tbl_t[9])sizeof(cmd_tbl_s[9])alignof(cmd_tbl_s[9])sizeof(dm_regulator_uclass_platdata *)alignof(dm_regulator_uclass_platdata *)sizeof(dm_regulator_uclass_platdata **)alignof(dm_regulator_uclass_platdata **)sizeof(rproc_mem_type)alignof(rproc_mem_type)sizeof(dm_rproc_ops)alignof(dm_rproc_ops)sizeof(dm_rproc_uclass_pdata)alignof(dm_rproc_uclass_pdata)sizeof(dm_rproc_uclass_pdata *)alignof(dm_rproc_uclass_pdata *)sizeof(const dm_rproc_ops)alignof(const dm_rproc_ops)sizeof(const dm_rproc_ops *)alignof(const dm_rproc_ops *)sizeof(dm_rproc_ops *)alignof(dm_rproc_ops *)sizeof(char[904])alignof(char[904])sizeof(char[154])alignof(char[154])sizeof(ahci_ioports)alignof(ahci_ioports)sizeof(ahci_sg)alignof(ahci_sg)sizeof(ahci_cmd_hdr)alignof(ahci_cmd_hdr)sizeof(ahci_ops)alignof(ahci_ops)sizeof(ahci_uc_priv)alignof(ahci_uc_priv)sizeof(u16 *[32])alignof(u16 *[32])sizeof(unsigned short *[32])alignof(unsigned short *[32])sizeof(ahci_ioports[32])alignof(ahci_ioports[32])sizeof(ahci_sg *)alignof(ahci_sg *)sizeof(ahci_cmd_hdr *)alignof(ahci_cmd_hdr *)sizeof(blk_desc[])alignof(blk_desc[])sizeof(spl_image_info)alignof(spl_image_info)sizeof(spl_boot_device)alignof(spl_boot_device)sizeof(spl_load_info)alignof(spl_load_info)sizeof(spl_image_info *)alignof(spl_image_info *)sizeof(spl_boot_device *)alignof(spl_boot_device *)sizeof(const image_header)alignof(const image_header)sizeof(const image_header *)alignof(const image_header *)sizeof(spl_load_info *)alignof(spl_load_info *)sizeof(spl_image_loader)alignof(spl_image_loader)sizeof(char[86])alignof(char[86])sizeof(scsi_cmd)alignof(scsi_cmd)sizeof(scsi_ops)alignof(scsi_ops)sizeof(scsi_cmd *)alignof(scsi_cmd *)sizeof(scsi_platdata)alignof(scsi_platdata)sizeof(char[419])alignof(char[419])sizeof(cap)alignof(cap)sizeof(slre)alignof(slre)sizeof(const slre)alignof(const slre)sizeof(const slre *)alignof(const slre *)sizeof(slre *)alignof(slre *)sizeof(cap *)alignof(cap *)sizeof(unsigned char[256])alignof(unsigned char[256])sizeof(const char[10])alignof(const char[10])sizeof(char[16384])alignof(char[16384])sizeof(cap[])alignof(cap[])sizeof(char[4096])alignof(char[4096])sizeof(char[681])alignof(char[681])sizeof(spi_cs_info)alignof(spi_cs_info)sizeof(dm_spi_slave_platdata)alignof(dm_spi_slave_platdata)sizeof(spi_slave)alignof(spi_slave)sizeof(spi_cs_info *)alignof(spi_cs_info *)sizeof(dm_spi_slave_platdata *)alignof(dm_spi_slave_platdata *)sizeof(spi_slave **)alignof(spi_slave **)sizeof(dm_spi_emul_ops)alignof(dm_spi_emul_ops)sizeof(dm_spi_ops)alignof(dm_spi_ops)sizeof(dm_spi_bus)alignof(dm_spi_bus)sizeof(const spi_controller_mem_ops)alignof(const spi_controller_mem_ops)sizeof(const spi_controller_mem_ops *)alignof(const spi_controller_mem_ops *)sizeof(spi_controller_mem_ops *)alignof(spi_controller_mem_ops *)sizeof(spi_nor)alignof(spi_nor)sizeof(spi_nor_ops)alignof(spi_nor_ops)sizeof(spi_nor_protocol)alignof(spi_nor_protocol)sizeof(spi_nor *)alignof(spi_nor *)sizeof(spi_nor_hwcaps)alignof(spi_nor_hwcaps)sizeof(spi_nor_option_flags)alignof(spi_nor_option_flags)sizeof(const flash_info)alignof(const flash_info)sizeof(const flash_info *)alignof(const flash_info *)sizeof(flash_info *)alignof(flash_info *)sizeof(dm_spi_flash_ops)alignof(dm_spi_flash_ops)sizeof(test_info)alignof(test_info)sizeof(test_info *)alignof(test_info *)sizeof(char[847])alignof(char[847])sizeof(sound_ops)alignof(sound_ops)sizeof(sound_uc_priv)alignof(sound_uc_priv)sizeof(sound_codec_info)alignof(sound_codec_info)sizeof(sound_compat)alignof(sound_compat)sizeof(char[172])alignof(char[172])sizeof(char[271])alignof(char[271])sizeof(const struct <unnamed>[16])alignof(const struct <unnamed>[16])sizeof(struct <unnamed>[16])alignof(struct <unnamed>[16])sizeof(const char[8])alignof(const char[8])sizeof(tpm_version)alignof(tpm_version)sizeof(tpm_ops)alignof(tpm_ops)sizeof(tpm_chip_priv)alignof(tpm_chip_priv)sizeof(tpm_duration)alignof(tpm_duration)sizeof(u8[1261])alignof(u8[1261])sizeof(unsigned char[1261])alignof(unsigned char[1261])sizeof(tpm_chip_priv *)alignof(tpm_chip_priv *)sizeof(tpm_permanent_flags)alignof(tpm_permanent_flags)sizeof(tpm_startup_type)alignof(tpm_startup_type)sizeof(tpm_nv_attributes)alignof(tpm_nv_attributes)sizeof(tpm_pcr_info_short)alignof(tpm_pcr_info_short)sizeof(tpm_composite_hash)alignof(tpm_composite_hash)sizeof(tpm_pcr_selection)alignof(tpm_pcr_selection)sizeof(tpm_permanent_flags *)alignof(tpm_permanent_flags *)sizeof(tpm_nv_data_public)alignof(tpm_nv_data_public)sizeof(tpm_return_code)alignof(tpm_return_code)sizeof(tmp_cap_flag)alignof(tmp_cap_flag)sizeof(tpm_capability_areas)alignof(tpm_capability_areas)sizeof(tpm_resource_type)alignof(tpm_resource_type)sizeof(tpm_nv_index)alignof(tpm_nv_index)sizeof(tpm_physical_presence)alignof(tpm_physical_presence)sizeof(u8[20])alignof(u8[20])sizeof(cmd_tbl_t[21])alignof(cmd_tbl_t[21])sizeof(cmd_tbl_s[21])alignof(cmd_tbl_s[21])sizeof(u8[1024])alignof(u8[1024])sizeof(unsigned char[1024])alignof(unsigned char[1024])sizeof(char[2715])alignof(char[2715])sizeof(tpm2_yes_no)alignof(tpm2_yes_no)sizeof(tpm2_startup_types)alignof(tpm2_startup_types)sizeof(const ssize_t)alignof(const ssize_t)sizeof(tpm_index_attrs)alignof(tpm_index_attrs)sizeof(tpm2_algorithms)alignof(tpm2_algorithms)sizeof(tpm2_return_codes)alignof(tpm2_return_codes)sizeof(tpm2_command_codes)alignof(tpm2_command_codes)sizeof(tpm2_handles)alignof(tpm2_handles)sizeof(tpm2_structures)alignof(tpm2_structures)sizeof(char[2406])alignof(char[2406])sizeof(cmd_tbl_t[14])alignof(cmd_tbl_t[14])sizeof(cmd_tbl_s[14])alignof(cmd_tbl_s[14])sizeof(char[87])alignof(char[87])sizeof(char[67])alignof(char[67])sizeof(char[75])alignof(char[75])sizeof(uint8_t[256])alignof(uint8_t[256])sizeof(const char[24])alignof(const char[24])sizeof(usb_dev_func_t)alignof(usb_dev_func_t)sizeof(usb_interface *)alignof(usb_interface *)sizeof(usb_config *)alignof(usb_config *)sizeof(usb_interface_descriptor *)alignof(usb_interface_descriptor *)sizeof(__le16 *)alignof(__le16 *)sizeof(char[748])alignof(char[748])sizeof(char[200])alignof(char[200])sizeof(__virtio64)alignof(__virtio64)sizeof(__virtio32)alignof(__virtio32)alignof(__virtio16)sizeof(virtio_dev_priv)alignof(virtio_dev_priv)sizeof(virtio_dev_priv *)alignof(virtio_dev_priv *)sizeof(virtqueue *)alignof(virtqueue *)sizeof(virtqueue *[])alignof(virtqueue *[])sizeof(dm_virtio_ops)alignof(dm_virtio_ops)sizeof(virtio_sg)alignof(virtio_sg)sizeof(virtqueue **)alignof(virtqueue **)sizeof(char[428])alignof(char[428])sizeof(w1_ops)alignof(w1_ops)sizeof(w1_device)alignof(w1_device)sizeof(w1_eeprom_ops)alignof(w1_eeprom_ops)sizeof(u8[512])alignof(u8[512])sizeof(unsigned char[512])alignof(unsigned char[512])sizeof(char[241])alignof(char[241])sizeof(bz_stream)alignof(bz_stream)sizeof(bz_stream *)alignof(bz_stream *)sizeof(char[178])alignof(char[178])sizeof(slot_metadata)alignof(slot_metadata)sizeof(bootloader_message)alignof(bootloader_message)sizeof(bootloader_control)alignof(bootloader_control)sizeof(bootloader_message_ab)alignof(bootloader_message_ab)sizeof(slot_metadata[4])alignof(slot_metadata[4])sizeof(char[1888])alignof(char[1888])sizeof(char[1184])alignof(char[1184])sizeof(char[768])alignof(char[768])sizeof(const disk_partition_t)alignof(const disk_partition_t)sizeof(const disk_partition_t *)alignof(const disk_partition_t *)sizeof(bootloader_control *)alignof(bootloader_control *)sizeof(bootloader_control **)alignof(bootloader_control **)sizeof(slot_metadata *)alignof(slot_metadata *)sizeof(const slot_metadata)alignof(const slot_metadata)sizeof(const slot_metadata *)alignof(const slot_metadata *)sizeof(bootloader_message_ab *)alignof(bootloader_message_ab *)sizeof(const char[28])alignof(const char[28])sizeof(tee_optee_ta_uuid)alignof(tee_optee_ta_uuid)sizeof(tee_param)alignof(tee_param)sizeof(tee_invoke_arg)alignof(tee_invoke_arg)sizeof(tee_open_session_arg)alignof(tee_open_session_arg)sizeof(tee_version_data)alignof(tee_version_data)sizeof(tee_shm)alignof(tee_shm)sizeof(tee_param_value)alignof(tee_param_value)sizeof(tee_param_memref)alignof(tee_param_memref)sizeof(const tee_optee_ta_uuid)alignof(const tee_optee_ta_uuid)sizeof(const tee_optee_ta_uuid *)alignof(const tee_optee_ta_uuid *)sizeof(tee_optee_ta_uuid *)alignof(tee_optee_ta_uuid *)sizeof(const u8[16])alignof(const u8[16])sizeof(tee_invoke_arg *)alignof(tee_invoke_arg *)sizeof(tee_param *)alignof(tee_param *)sizeof(tee_open_session_arg *)alignof(tee_open_session_arg *)sizeof(tee_version_data *)alignof(tee_version_data *)sizeof(tee_shm *)alignof(tee_shm *)sizeof(tee_shm **)alignof(tee_shm **)sizeof(tee_driver_ops)alignof(tee_driver_ops)sizeof(tee_param[2])alignof(tee_param[2])sizeof(const unsigned char[1032])alignof(const unsigned char[1032])sizeof(unsigned char[1032])alignof(unsigned char[1032])sizeof(char *[1024])alignof(char *[1024])sizeof(bloblist_hdr)alignof(bloblist_hdr)sizeof(bloblist_rec)alignof(bloblist_rec)sizeof(bloblist_rec *)alignof(bloblist_rec *)sizeof(bloblist_rec **)alignof(bloblist_rec **)sizeof(bloblist_tag_t)alignof(bloblist_tag_t)sizeof(init_fnc_t)alignof(init_fnc_t)sizeof(const init_fnc_t)alignof(const init_fnc_t)sizeof(const init_fnc_t[])alignof(const init_fnc_t[])sizeof(..(*[])(..))alignof(..(*[])(..))sizeof(const init_fnc_t *)alignof(const init_fnc_t *)sizeof(..(**)(..))alignof(..(**)(..))sizeof(timer_dev_priv)alignof(timer_dev_priv)sizeof(timer_ops)alignof(timer_ops)sizeof(trace_chunk_type)alignof(trace_chunk_type)sizeof(trace_call)alignof(trace_call)sizeof(ftrace_flags)alignof(ftrace_flags)sizeof(trace_output_hdr)alignof(trace_output_hdr)sizeof(trace_output_func)alignof(trace_output_func)sizeof(const init_fnc_t[52])alignof(const init_fnc_t[52])sizeof(..(*[52])(..))alignof(..(*[52])(..))sizeof(char(*)[])alignof(char(*)[])sizeof(device_node **)alignof(device_node **)sizeof(onenand_chip)alignof(onenand_chip)sizeof(onenand_chip *)alignof(onenand_chip *)sizeof(serial_device_info)alignof(serial_device_info)sizeof(adr_space_type)alignof(adr_space_type)sizeof(serial_chip_type)alignof(serial_chip_type)sizeof(serial_device)alignof(serial_device)sizeof(serial_device_info *)alignof(serial_device_info *)sizeof(serial_device *)alignof(serial_device *)sizeof(serial_dev_priv)alignof(serial_dev_priv)sizeof(dm_serial_ops)alignof(dm_serial_ops)sizeof(serial_stop)alignof(serial_stop)sizeof(serial_bits)alignof(serial_bits)sizeof(serial_par)alignof(serial_par)sizeof(wdt_ops)alignof(wdt_ops)sizeof(init_fnc_t[])alignof(init_fnc_t[])sizeof(init_fnc_t[42])alignof(init_fnc_t[42])sizeof(..(*[42])(..))alignof(..(*[42])(..))sizeof(init_fnc_t *)alignof(init_fnc_t *)sizeof(fit_load_op)alignof(fit_load_op)sizeof(const image_header_t)alignof(const image_header_t)sizeof(const image_header_t *)alignof(const image_header_t *)sizeof(ulong *const)alignof(ulong *const)sizeof(efi_gop_info)alignof(efi_gop_info)sizeof(e820_info)alignof(e820_info)sizeof(optee_header)alignof(optee_header)sizeof(optee_header *)alignof(optee_header *)sizeof(boot_os_fn *[24])alignof(boot_os_fn *[24])sizeof(..(*[24])(..))alignof(..(*[24])(..))sizeof(boot_os_fn **)alignof(boot_os_fn **)sizeof(char[74])alignof(char[74])sizeof(boot_os_fn *[])alignof(boot_os_fn *[])sizeof(bootstage_data)alignof(bootstage_data)sizeof(bootstage_hdr)alignof(bootstage_hdr)sizeof(bootstage_record)alignof(bootstage_record)sizeof(const bootstage_hdr)alignof(const bootstage_hdr)sizeof(const bootstage_hdr *)alignof(const bootstage_hdr *)sizeof(bootstage_hdr *)alignof(bootstage_hdr *)sizeof(bootstage_record *)alignof(bootstage_record *)sizeof(char[104])alignof(char[104])sizeof(bootstage_record[30])alignof(bootstage_record[30])sizeof(const bootstage_data)alignof(const bootstage_data)sizeof(const bootstage_data *)alignof(const bootstage_data *)sizeof(const bootstage_record)alignof(const bootstage_record)sizeof(const bootstage_record *)alignof(const bootstage_record *)sizeof(bootstage_flags)alignof(bootstage_flags)sizeof(variables)alignof(variables)sizeof(in_str)alignof(in_str)sizeof(o_string)alignof(o_string)sizeof(p_context)alignof(p_context)sizeof(pipe)alignof(pipe)sizeof(pipe_style)alignof(pipe_style)sizeof(child_prog)alignof(child_prog)sizeof(reserved_combo)alignof(reserved_combo)sizeof(reserved_style)alignof(reserved_style)sizeof(variables *)alignof(variables *)sizeof(in_str *)alignof(in_str *)sizeof(p_context *)alignof(p_context *)sizeof(o_string *)alignof(o_string *)sizeof(pipe *)alignof(pipe *)sizeof(uchar[2])alignof(uchar[2])sizeof(child_prog *)alignof(child_prog *)sizeof(reserved_combo *)alignof(reserved_combo *)sizeof(reserved_combo[11])alignof(reserved_combo[11])sizeof(child_prog **)alignof(child_prog **)sizeof(char[1025])alignof(char[1025])sizeof(reserved_combo[])alignof(reserved_combo[])sizeof(const char[4])alignof(const char[4])sizeof(char *[20])alignof(char *[20])sizeof(char[20][1025])alignof(char[20][1025])sizeof(char(*)[1025])alignof(char(*)[1025])sizeof(char *[17])alignof(char *[17])sizeof(const char[26])alignof(const char[26])sizeof(cmd_tbl_t *[])alignof(cmd_tbl_t *[])sizeof(cmd_tbl_s *[])alignof(cmd_tbl_s *[])sizeof(cmd_tbl_t **)alignof(cmd_tbl_t **)sizeof(cmd_tbl_s **)alignof(cmd_tbl_s **)sizeof(char[85])alignof(char[85])sizeof(membuff *)alignof(membuff *)sizeof(char[4097])alignof(char[4097])sizeof(char[1044])alignof(char[1044])sizeof(stdio_dev ***)alignof(stdio_dev ***)sizeof(malloc_chunk)alignof(malloc_chunk)sizeof(malloc_chunk *)alignof(malloc_chunk *)sizeof(mchunkptr)alignof(mchunkptr)sizeof(mbinptr)alignof(mbinptr)sizeof(mbinptr[258])alignof(mbinptr[258])sizeof(malloc_chunk *[258])alignof(malloc_chunk *[258])sizeof(mbinptr *)alignof(mbinptr *)sizeof(malloc_chunk **)alignof(malloc_chunk **)sizeof(const char[21])alignof(const char[21])sizeof(edid_monitor_descriptor *)alignof(edid_monitor_descriptor *)sizeof(char[103])alignof(char[103])sizeof(edid_detailed_timing *)alignof(edid_detailed_timing *)sizeof(edid_cea861_info *)alignof(edid_cea861_info *)sizeof(timing_entry *)alignof(timing_entry *)sizeof(char[134])alignof(char[134])sizeof(fdt64_t)alignof(fdt64_t)sizeof(fdt_status)alignof(fdt_status)sizeof(of_bus)alignof(of_bus)sizeof(fdt_reserve_entry)alignof(fdt_reserve_entry)sizeof(fdt32_t[4])alignof(fdt32_t[4])sizeof(const fdt64_t)alignof(const fdt64_t)sizeof(const fdt64_t *)alignof(const fdt64_t *)sizeof(char[96])alignof(char[96])sizeof(of_bus *)alignof(of_bus *)sizeof(of_bus[1])alignof(of_bus[1])sizeof(u32[28])alignof(u32[28])sizeof(unsigned int[28])alignof(unsigned int[28])sizeof(unsigned char(*)[6])alignof(unsigned char(*)[6])sizeof(u64[])alignof(u64[])sizeof(unsigned long long[])alignof(unsigned long long[])sizeof(u8[64])alignof(u8[64])sizeof(fdt64_t *)alignof(fdt64_t *)sizeof(of_bus[])alignof(of_bus[])sizeof(hash_algo)alignof(hash_algo)sizeof(hash_algo *)alignof(hash_algo *)sizeof(const uchar *)alignof(const uchar *)alignof(sha256_context)alignof(sha1_context)sizeof(hash_algo **)alignof(hash_algo **)sizeof(hash_algo[4])alignof(hash_algo[4])sizeof(const char[29])alignof(const char[29])sizeof(sha256_context *)alignof(sha256_context *)sizeof(sha1_context *)alignof(sha1_context *)sizeof(hash_algo[])alignof(hash_algo[])sizeof(andr_img_hdr)alignof(andr_img_hdr)sizeof(image_region)alignof(image_region)sizeof(fdt_region)alignof(fdt_region)sizeof(padding_algo)alignof(padding_algo)sizeof(crypto_algo)alignof(crypto_algo)sizeof(checksum_algo)alignof(checksum_algo)sizeof(image_sign_info)alignof(image_sign_info)sizeof(ih_category)alignof(ih_category)sizeof(table_entry)alignof(table_entry)sizeof(table_entry_t)alignof(table_entry_t)sizeof(image_region *)alignof(image_region *)sizeof(fdt_region *)alignof(fdt_region *)sizeof(padding_algo *)alignof(padding_algo *)sizeof(crypto_algo *)alignof(crypto_algo *)sizeof(checksum_algo *)alignof(checksum_algo *)sizeof(const table_entry_t)alignof(const table_entry_t)sizeof(const table_entry_t *)alignof(const table_entry_t *)sizeof(table_entry *)alignof(table_entry *)sizeof(fit_loadable_tbl)alignof(fit_loadable_tbl)sizeof(image_sign_info *)alignof(image_sign_info *)sizeof(const image_region)alignof(const image_region)sizeof(const image_region *)alignof(const image_region *)sizeof(u32[8])alignof(u32[8])sizeof(unsigned int[8])alignof(unsigned int[8])sizeof(const image_region[])alignof(const image_region[])sizeof(image_region[])alignof(image_region[])sizeof(rsa_public_key)alignof(rsa_public_key)sizeof(const char[32])alignof(const char[32])sizeof(char *const[1])alignof(char *const[1])sizeof(char *[1])alignof(char *[1])sizeof(fdt_region[])alignof(fdt_region[])sizeof(const uint32_t)alignof(const uint32_t)sizeof(const uint32_t *)alignof(const uint32_t *)sizeof(const char[31])alignof(const char[31])sizeof(padding_algo[2])alignof(padding_algo[2])sizeof(crypto_algo[2])alignof(crypto_algo[2])sizeof(checksum_algo[2])alignof(checksum_algo[2])sizeof(padding_algo[])alignof(padding_algo[])sizeof(crypto_algo[])alignof(crypto_algo[])sizeof(checksum_algo[])alignof(checksum_algo[])sizeof(const uint8_t[])alignof(const uint8_t[])sizeof(fpga_desc)alignof(fpga_desc)sizeof(bitstream_type)alignof(bitstream_type)sizeof(fpga_secure_info)alignof(fpga_secure_info)sizeof(fpga_fs_info)alignof(fpga_fs_info)sizeof(fpga_type)alignof(fpga_type)sizeof(const fpga_desc)alignof(const fpga_desc)sizeof(const fpga_desc *)alignof(const fpga_desc *)sizeof(const fpga_desc *const)alignof(const fpga_desc *const)sizeof(fpga_secure_info *)alignof(fpga_secure_info *)sizeof(fpga_fs_info *)alignof(fpga_fs_info *)sizeof(xilinx_desc)alignof(xilinx_desc)sizeof(xilinx_iface)alignof(xilinx_iface)sizeof(xilinx_family)alignof(xilinx_family)sizeof(xilinx_desc *)alignof(xilinx_desc *)sizeof(xilinx_bwr_fn)alignof(xilinx_bwr_fn)sizeof(xilinx_post_fn)alignof(xilinx_post_fn)sizeof(xilinx_pre_fn)alignof(xilinx_pre_fn)sizeof(xilinx_abort_fn)alignof(xilinx_abort_fn)sizeof(xilinx_busy_fn)alignof(xilinx_busy_fn)sizeof(xilinx_wdata_fn)alignof(xilinx_wdata_fn)sizeof(xilinx_rdata_fn)alignof(xilinx_rdata_fn)sizeof(xilinx_wr_fn)alignof(xilinx_wr_fn)sizeof(xilinx_cs_fn)alignof(xilinx_cs_fn)sizeof(xilinx_clk_fn)alignof(xilinx_clk_fn)sizeof(xilinx_done_fn)alignof(xilinx_done_fn)sizeof(xilinx_err_fn)alignof(xilinx_err_fn)sizeof(xilinx_init_fn)alignof(xilinx_init_fn)sizeof(xilinx_pgm_fn)alignof(xilinx_pgm_fn)sizeof(xilinx_fpga_op)alignof(xilinx_fpga_op)sizeof(xilinx_fpga_op *)alignof(xilinx_fpga_op *)sizeof(ELzmaStatus)alignof(ELzmaStatus)sizeof(ELzmaFinishMode)alignof(ELzmaFinishMode)sizeof(CLzmaDec)alignof(CLzmaDec)sizeof(_CLzmaProps)alignof(_CLzmaProps)sizeof(CLzmaProps)alignof(CLzmaProps)sizeof(const LZByte)alignof(const LZByte)sizeof(const LZByte *)alignof(const LZByte *)sizeof(ELzmaStatus *)alignof(ELzmaStatus *)sizeof(enum <unnamed> *)alignof(enum <unnamed> *)sizeof(ISzAlloc *)alignof(ISzAlloc *)sizeof(CLzmaDec *)alignof(CLzmaDec *)sizeof(CLzmaProps *)alignof(CLzmaProps *)sizeof(_CLzmaProps *)alignof(_CLzmaProps *)sizeof(LZByte[20])alignof(LZByte[20])sizeof(UInt32[4])alignof(UInt32[4])sizeof(UInt16 *)alignof(UInt16 *)sizeof(table_info)alignof(table_info)sizeof(fit_loadable_tbl *)alignof(fit_loadable_tbl *)sizeof(const char[27])alignof(const char[27])sizeof(const table_entry_t[7])alignof(const table_entry_t[7])sizeof(table_entry[7])alignof(table_entry[7])sizeof(const table_entry_t[39])alignof(const table_entry_t[39])sizeof(table_entry[39])alignof(table_entry[39])sizeof(const table_entry_t[27])alignof(const table_entry_t[27])sizeof(table_entry[27])alignof(table_entry[27])sizeof(const table_entry_t[11])alignof(const table_entry_t[11])sizeof(table_entry[11])alignof(table_entry[11])sizeof(const table_info)alignof(const table_info)sizeof(const table_info[4])alignof(const table_info[4])sizeof(table_info[4])alignof(table_info[4])sizeof(const table_info *)alignof(const table_info *)sizeof(table_info *)alignof(table_info *)sizeof(const table_entry_t[])alignof(const table_entry_t[])sizeof(table_entry[])alignof(table_entry[])sizeof(iotrace)alignof(iotrace)sizeof(log_device)alignof(log_device)sizeof(log_driver)alignof(log_driver)sizeof(log_filter)alignof(log_filter)sizeof(log_rec)alignof(log_rec)sizeof(log_driver *)alignof(log_driver *)sizeof(log_device *)alignof(log_device *)sizeof(log_filter *)alignof(log_filter *)sizeof(log_category_t[])alignof(log_category_t[])sizeof(log_category_t *)alignof(log_category_t *)sizeof(log_filter_flags)alignof(log_filter_flags)sizeof(log_category_t[5])alignof(log_category_t[5])sizeof(log_rec *)alignof(log_rec *)sizeof(const char *[10])alignof(const char *[10])sizeof(net_loop_state)alignof(net_loop_state)sizeof(thand_f)alignof(thand_f)sizeof(rxhand_icmp_f)alignof(rxhand_icmp_f)sizeof(rxhand_f)alignof(rxhand_f)sizeof(ethernet_hdr)alignof(ethernet_hdr)sizeof(thand_f *)alignof(thand_f *)sizeof(rxhand_icmp_f *)alignof(rxhand_icmp_f *)sizeof(rxhand_f *)alignof(rxhand_f *)sizeof(ethernet_hdr *)alignof(ethernet_hdr *)sizeof(const u8[6])alignof(const u8[6])sizeof(icmp_hdr)alignof(icmp_hdr)sizeof(arp_hdr)alignof(arp_hdr)sizeof(ip_udp_hdr)alignof(ip_udp_hdr)sizeof(ip_hdr)alignof(ip_hdr)sizeof(vlan_ethernet_hdr)alignof(vlan_ethernet_hdr)sizeof(e802_hdr)alignof(e802_hdr)sizeof(eth_ops)alignof(eth_ops)sizeof(eth_recv_flags)alignof(eth_recv_flags)sizeof(eth_pdata)alignof(eth_pdata)sizeof(eth_state_t)alignof(eth_state_t)sizeof(uchar **)alignof(uchar **)sizeof(uchar *[4])alignof(uchar *[4])sizeof(unsigned char *[4])alignof(unsigned char *[4])sizeof(volatile long)alignof(volatile long)sizeof(volatile long *)alignof(volatile long *)sizeof(long[31])alignof(long[31])sizeof(menu)alignof(menu)sizeof(menu_item)alignof(menu_item)sizeof(menu_item *)alignof(menu_item *)sizeof(splash_location[4])alignof(splash_location[4])sizeof(splash_location[])alignof(splash_location[])sizeof(stdio_dev *[3])alignof(stdio_dev *[3])sizeof(char[3][16])alignof(char[3][16])sizeof(char(*)[16])alignof(char(*)[16])sizeof(char[527])alignof(char[527])sizeof(usb_device_scan)alignof(usb_device_scan)sizeof(usb_hub_device *)alignof(usb_hub_device *)sizeof(usb_hub_descriptor *)alignof(usb_hub_descriptor *)sizeof(usb_hub_status *)alignof(usb_hub_status *)sizeof(usb_device_scan *)alignof(usb_device_scan *)sizeof(usb_port_status *)alignof(usb_port_status *)sizeof(const usb_device_id[2])alignof(const usb_device_id[2])sizeof(usb_device_id[2])alignof(usb_device_id[2])sizeof(const usb_device_id[])alignof(const usb_device_id[])sizeof(usb_device_id[])alignof(usb_device_id[])sizeof(const udevice_id[2])alignof(const udevice_id[2])sizeof(udevice_id[2])alignof(udevice_id[2])sizeof(const udevice_id[])alignof(const udevice_id[])sizeof(udevice_id[])alignof(udevice_id[])sizeof(usb_kbd_pdata)alignof(usb_kbd_pdata)sizeof(usb_kbd_pdata *)alignof(usb_kbd_pdata *)sizeof(const unsigned char[27])alignof(const unsigned char[27])sizeof(unsigned char[27])alignof(unsigned char[27])sizeof(const unsigned char[4])alignof(const unsigned char[4])sizeof(const unsigned char[20])alignof(const unsigned char[20])sizeof(us_data)alignof(us_data)sizeof(us_data *)alignof(us_data *)sizeof(trans_cmnd)alignof(trans_cmnd)sizeof(trans_reset)alignof(trans_reset)sizeof(const unsigned char[32])alignof(const unsigned char[32])sizeof(umass_bbb_csw *)alignof(umass_bbb_csw *)sizeof(umass_bbb_cbw *)alignof(umass_bbb_cbw *)sizeof(const blk_ops)alignof(const blk_ops)sizeof(const blk_ops *)alignof(const blk_ops *)sizeof(blk_ops *)alignof(blk_ops *)sizeof(cyg_int32)alignof(cyg_int32)sizeof(part_driver)alignof(part_driver)sizeof(lba512_t)alignof(lba512_t)sizeof(const blk_desc)alignof(const blk_desc)sizeof(const blk_desc *)alignof(const blk_desc *)sizeof(part_driver *)alignof(part_driver *)sizeof(amiga_part_geometry)alignof(amiga_part_geometry)sizeof(bootcode_block)alignof(bootcode_block)sizeof(partition_block)alignof(partition_block)sizeof(rigid_disk_block)alignof(rigid_disk_block)sizeof(u32[123])alignof(u32[123])sizeof(unsigned int[123])alignof(unsigned int[123])sizeof(u32[15])alignof(u32[15])sizeof(unsigned int[15])alignof(unsigned int[15])sizeof(u32[17])alignof(u32[17])sizeof(u32[10])alignof(u32[10])sizeof(unsigned int[10])alignof(unsigned int[10])sizeof(u32[3])alignof(u32[3])sizeof(block_header)alignof(block_header)sizeof(rigid_disk_block *)alignof(rigid_disk_block *)sizeof(unsigned char[2048])alignof(unsigned char[2048])sizeof(partition_block *)alignof(partition_block *)sizeof(block_header *)alignof(block_header *)sizeof(bootcode_block *)alignof(bootcode_block *)sizeof(amiga_part_geometry *)alignof(amiga_part_geometry *)sizeof(u32(*)[17])alignof(u32(*)[17])sizeof(unsigned int(*)[17])alignof(unsigned int(*)[17])sizeof(dos_partition)alignof(dos_partition)sizeof(dos_partition_t)alignof(dos_partition_t)sizeof(dos_partition_t *)alignof(dos_partition_t *)sizeof(dos_partition *)alignof(dos_partition *)sizeof(_legacy_mbr)alignof(_legacy_mbr)sizeof(legacy_mbr)alignof(legacy_mbr)sizeof(legacy_mbr *)alignof(legacy_mbr *)sizeof(_legacy_mbr *)alignof(_legacy_mbr *)sizeof(partition)alignof(partition)alignof(efi_char16_t)sizeof(_gpt_entry_attributes)alignof(_gpt_entry_attributes)alignof(gpt_entry_attributes)sizeof(partition *)alignof(partition *)sizeof(partition[4])alignof(partition[4])sizeof(__le32 *)alignof(__le32 *)sizeof(efi_char16_t[36])alignof(efi_char16_t[36])sizeof(unsigned short[36])alignof(unsigned short[36])sizeof(efi_char16_t *)alignof(efi_char16_t *)sizeof(gpt_entry_attributes *)alignof(gpt_entry_attributes *)sizeof(_gpt_entry_attributes *)alignof(_gpt_entry_attributes *)sizeof(iso_init_def_entry)alignof(iso_init_def_entry)sizeof(iso_init_def_entry_t)alignof(iso_init_def_entry_t)sizeof(iso_header_entry)alignof(iso_header_entry)sizeof(iso_header_entry_t)alignof(iso_header_entry_t)sizeof(iso_val_entry)alignof(iso_val_entry)sizeof(iso_val_entry_t)alignof(iso_val_entry_t)sizeof(iso_part_rec)alignof(iso_part_rec)sizeof(iso_part_rec_t)alignof(iso_part_rec_t)sizeof(iso_sup_rec)alignof(iso_sup_rec)sizeof(iso_sup_rec_t)alignof(iso_sup_rec_t)sizeof(iso_pri_rec)alignof(iso_pri_rec)sizeof(iso_pri_rec_t)alignof(iso_pri_rec_t)sizeof(iso_boot_rec)alignof(iso_boot_rec)sizeof(iso_boot_rec_t)alignof(iso_boot_rec_t)sizeof(unsigned char[5])alignof(unsigned char[5])sizeof(unsigned char[34])alignof(unsigned char[34])sizeof(iso_pri_rec_t *)alignof(iso_pri_rec_t *)sizeof(iso_pri_rec *)alignof(iso_pri_rec *)sizeof(iso_boot_rec_t *)alignof(iso_boot_rec_t *)sizeof(iso_boot_rec *)alignof(iso_boot_rec *)sizeof(iso_val_entry_t *)alignof(iso_val_entry_t *)sizeof(iso_val_entry *)alignof(iso_val_entry *)sizeof(iso_init_def_entry_t *)alignof(iso_init_def_entry_t *)sizeof(iso_init_def_entry *)alignof(iso_init_def_entry *)sizeof(mac_partition)alignof(mac_partition)sizeof(mac_partition_t)alignof(mac_partition_t)sizeof(mac_driver_entry)alignof(mac_driver_entry)sizeof(mac_driver_entry_t)alignof(mac_driver_entry_t)sizeof(mac_driver_desc)alignof(mac_driver_desc)sizeof(mac_driver_desc_t)alignof(mac_driver_desc_t)sizeof(uchar[2048])alignof(uchar[2048])sizeof(__u16[188])alignof(__u16[188])sizeof(unsigned short[188])alignof(unsigned short[188])sizeof(uchar[16])alignof(uchar[16])sizeof(__u16[247])alignof(__u16[247])sizeof(unsigned short[247])alignof(unsigned short[247])sizeof(mac_driver_desc_t *)alignof(mac_driver_desc_t *)sizeof(mac_driver_desc *)alignof(mac_driver_desc *)sizeof(mac_partition_t *)alignof(mac_partition_t *)sizeof(mac_partition *)alignof(mac_partition *)sizeof(char[2575])alignof(char[2575])sizeof(char[186])alignof(char[186])sizeof(adc_channel)alignof(adc_channel)sizeof(adc_ops)alignof(adc_ops)sizeof(adc_uclass_platdata)alignof(adc_uclass_platdata)sizeof(adc_data_format)alignof(adc_data_format)sizeof(adc_channel *)alignof(adc_channel *)sizeof(adc_uclass_platdata *)alignof(adc_uclass_platdata *)sizeof(const adc_ops)alignof(const adc_ops)sizeof(const adc_ops *)alignof(const adc_ops *)sizeof(adc_ops *)alignof(adc_ops *)sizeof(sandbox_adc_status)alignof(sandbox_adc_status)sizeof(sandbox_adc_mode)alignof(sandbox_adc_mode)sizeof(sandbox_adc_priv)alignof(sandbox_adc_priv)sizeof(sandbox_adc_priv *)alignof(sandbox_adc_priv *)sizeof(blk_desc[2])alignof(blk_desc[2])sizeof(ahci_ops *)alignof(ahci_ops *)sizeof(axi_emul_ops *)alignof(axi_emul_ops *)sizeof(axi_ops *)alignof(axi_ops *)sizeof(const axi_ops)alignof(const axi_ops)sizeof(const axi_ops *)alignof(const axi_ops *)sizeof(sandbox_store_priv)alignof(sandbox_store_priv)sizeof(sandbox_store_priv *)alignof(sandbox_store_priv *)sizeof(const axi_emul_ops)alignof(const axi_emul_ops)sizeof(const axi_emul_ops *)alignof(const axi_emul_ops *)sizeof(const char *[13])alignof(const char *[13])sizeof(char *[13])alignof(char *[13])sizeof(uclass_id[13])alignof(uclass_id[13])sizeof(uclass_id *)alignof(uclass_id *)sizeof(block_cache_node)alignof(block_cache_node)sizeof(block_cache_node *)alignof(block_cache_node *)sizeof(ulong[1])alignof(ulong[1])sizeof(hd_driveid_t *)alignof(hd_driveid_t *)sizeof(hd_driveid *)alignof(hd_driveid *)sizeof(pci_device_id[2])alignof(pci_device_id[2])sizeof(pci_device_id[])alignof(pci_device_id[])sizeof(board_ops)alignof(board_ops)sizeof(board_ops *)alignof(board_ops *)sizeof(board_sandbox_priv)alignof(board_sandbox_priv)sizeof(char[][64])alignof(char[][64])sizeof(char[6][64])alignof(char[6][64])sizeof(char(*)[64])alignof(char(*)[64])sizeof(board_sandbox_priv *)alignof(board_sandbox_priv *)sizeof(const board_ops)alignof(const board_ops)sizeof(const board_ops *)alignof(const board_ops *)sizeof(bootcount_ops *)alignof(bootcount_ops *)sizeof(bootcount_rtc_priv)alignof(bootcount_rtc_priv)sizeof(bootcount_rtc_priv *)alignof(bootcount_rtc_priv *)sizeof(const bootcount_ops)alignof(const bootcount_ops)sizeof(const bootcount_ops *)alignof(const bootcount_ops *)sizeof(cache_info)alignof(cache_info)sizeof(cache_info *)alignof(cache_info *)sizeof(cache_ops)alignof(cache_ops)sizeof(const cache_ops)alignof(const cache_ops)sizeof(const cache_ops *)alignof(const cache_ops *)sizeof(cache_ops *)alignof(cache_ops *)sizeof(clk)alignof(clk)sizeof(clk_divider)alignof(clk_divider)sizeof(clk_div_table)alignof(clk_div_table)sizeof(clk_ops)alignof(clk_ops)sizeof(clk *)alignof(clk *)sizeof(const clk_div_table)alignof(const clk_div_table)sizeof(const clk_div_table *)alignof(const clk_div_table *)sizeof(clk_div_table *)alignof(clk_div_table *)sizeof(clk_divider *)alignof(clk_divider *)sizeof(const clk)alignof(const clk)sizeof(const clk *)alignof(const clk *)sizeof(const clk_ops)alignof(const clk_ops)sizeof(const clk_ops *)alignof(const clk_ops *)sizeof(clk_ops *)alignof(clk_ops *)sizeof(clk_fixed_factor)alignof(clk_fixed_factor)sizeof(clk_fixed_factor *)alignof(clk_fixed_factor *)sizeof(clk_mux)alignof(clk_mux)sizeof(clk_mux *)alignof(clk_mux *)sizeof(clk_bulk)alignof(clk_bulk)sizeof(clk **)alignof(clk **)sizeof(clk_bulk *)alignof(clk_bulk *)sizeof(clk_fixed_rate)alignof(clk_fixed_rate)sizeof(clk_fixed_rate *)alignof(clk_fixed_rate *)sizeof(sandbox_clk_test_id)alignof(sandbox_clk_test_id)sizeof(sandbox_clk_id)alignof(sandbox_clk_id)sizeof(sandbox_clk_priv)alignof(sandbox_clk_priv)sizeof(sandbox_clk_priv *)alignof(sandbox_clk_priv *)sizeof(bool[2])alignof(bool[2])sizeof(ulong[2])alignof(ulong[2])sizeof(unsigned long[2])alignof(unsigned long[2])sizeof(sandbox_pllv3_type)alignof(sandbox_pllv3_type)sizeof(clk_gate2)alignof(clk_gate2)sizeof(clk_pllv3)alignof(clk_pllv3)sizeof(const char *const[2])alignof(const char *const[2])sizeof(clk_gate2 *)alignof(clk_gate2 *)sizeof(clk_pllv3 *)alignof(clk_pllv3 *)sizeof(sandbox_clk_test)alignof(sandbox_clk_test)sizeof(sandbox_clk_test *)alignof(sandbox_clk_test *)sizeof(clk[3])alignof(clk[3])sizeof(phandle_1_arg)alignof(phandle_1_arg)sizeof(phandle_1_arg *)alignof(phandle_1_arg *)sizeof(imx_pllv3_type)alignof(imx_pllv3_type)sizeof(clk_pfd)alignof(clk_pfd)sizeof(clk_pfd *)alignof(clk_pfd *)sizeof(of_phandle_args *)alignof(of_phandle_args *)sizeof(power_domain)alignof(power_domain)sizeof(power_domain *)alignof(power_domain *)sizeof(devres)alignof(devres)sizeof(devres *)alignof(devres *)sizeof(const unsigned long long[])alignof(const unsigned long long[])sizeof(const unsigned long long(*)[])alignof(const unsigned long long(*)[])sizeof(unsigned long long(*)[])alignof(unsigned long long(*)[])sizeof(const udevice_id **)alignof(const udevice_id **)sizeof(udevice_id **)alignof(udevice_id **)sizeof(resource_size_t)alignof(resource_size_t)sizeof(resource)alignof(resource)sizeof(resource_list)alignof(resource_list)sizeof(const resource)alignof(const resource)sizeof(const resource *)alignof(const resource *)sizeof(pci_dev)alignof(pci_dev)sizeof(pci_dev *)alignof(pci_dev *)sizeof(resource_list *)alignof(resource_list *)sizeof(alias_prop)alignof(alias_prop)sizeof(alias_prop *)alignof(alias_prop *)sizeof(const property)alignof(const property)sizeof(const property *)alignof(const property *)sizeof(const __be64)alignof(const __be64)sizeof(const __be64 *)alignof(const __be64 *)sizeof(__be32[4])alignof(__be32[4])sizeof(__be32 *)alignof(__be32 *)sizeof(const fdt_addr_t)alignof(const fdt_addr_t)sizeof(const fdt_addr_t *)alignof(const fdt_addr_t *)sizeof(regmap)alignof(regmap)sizeof(regmap_range)alignof(regmap_range)sizeof(regmap_endianness_t)alignof(regmap_endianness_t)sizeof(fdt_val_t *)alignof(fdt_val_t *)sizeof(regmap *)alignof(regmap *)sizeof(regmap **)alignof(regmap **)sizeof(regmap_size_t)alignof(regmap_size_t)sizeof(regmap_range[0])alignof(regmap_range[0])sizeof(regmap_range *)alignof(regmap_range *)sizeof(simple_bus_plat)alignof(simple_bus_plat)sizeof(simple_bus_plat *)alignof(simple_bus_plat *)sizeof(const udevice_id[3])alignof(const udevice_id[3])sizeof(udevice_id[3])alignof(udevice_id[3])sizeof(syscon_ops)alignof(syscon_ops)sizeof(syscon_uc_info)alignof(syscon_uc_info)sizeof(syscon_uc_info *)alignof(syscon_uc_info *)sizeof(cpu_ops *)alignof(cpu_ops *)sizeof(const cpu_ops)alignof(const cpu_ops)sizeof(const cpu_ops *)alignof(const cpu_ops *)sizeof(mod_exp_ops)alignof(mod_exp_ops)sizeof(key_prop)alignof(key_prop)sizeof(key_prop *)alignof(key_prop *)sizeof(const mod_exp_ops)alignof(const mod_exp_ops)sizeof(const mod_exp_ops *)alignof(const mod_exp_ops *)sizeof(mod_exp_ops *)alignof(mod_exp_ops *)sizeof(const dm_demo_pdata)alignof(const dm_demo_pdata)sizeof(const dm_demo_pdata *)alignof(const dm_demo_pdata *)sizeof(dm_demo_pdata *)alignof(dm_demo_pdata *)sizeof(shape_data)alignof(shape_data)sizeof(shape)alignof(shape)sizeof(shape_data *)alignof(shape_data *)sizeof(gpio_desc[8])alignof(gpio_desc[8])sizeof(const shape)alignof(const shape)sizeof(const shape[3])alignof(const shape[3])sizeof(shape[3])alignof(shape[3])sizeof(const shape *)alignof(const shape *)sizeof(shape *)alignof(shape *)sizeof(const demo_ops)alignof(const demo_ops)sizeof(const demo_ops *)alignof(const demo_ops *)sizeof(demo_ops *)alignof(demo_ops *)sizeof(dma)alignof(dma)sizeof(dma_dev_priv)alignof(dma_dev_priv)sizeof(dma_direction)alignof(dma_direction)sizeof(dma *)alignof(dma *)sizeof(dma_ops)alignof(dma_ops)sizeof(const dma_ops)alignof(const dma_ops)sizeof(const dma_ops *)alignof(const dma_ops *)sizeof(dma_ops *)alignof(dma_ops *)sizeof(dma_dev_priv *)alignof(dma_dev_priv *)sizeof(sandbox_dma_dev)alignof(sandbox_dma_dev)sizeof(sandbox_dma_chan)alignof(sandbox_dma_chan)sizeof(sandbox_dma_dev *)alignof(sandbox_dma_dev *)sizeof(sandbox_dma_chan *)alignof(sandbox_dma_chan *)sizeof(sandbox_dma_chan[3])alignof(sandbox_dma_chan[3])sizeof(uchar[1024])alignof(uchar[1024])sizeof(const struct <unnamed>[7])alignof(const struct <unnamed>[7])sizeof(struct <unnamed>[7])alignof(struct <unnamed>[7])sizeof(char *const[3])alignof(char *const[3])sizeof(const struct <unnamed>[11])alignof(const struct <unnamed>[11])sizeof(struct <unnamed>[11])alignof(struct <unnamed>[11])sizeof(gpio_dev_priv *)alignof(gpio_dev_priv *)sizeof(const char *const[5])alignof(const char *const[5])sizeof(dm_gpio_ops *)alignof(dm_gpio_ops *)sizeof(pm8916_gpio_bank)alignof(pm8916_gpio_bank)sizeof(pm8916_gpio_bank *)alignof(pm8916_gpio_bank *)sizeof(const dm_gpio_ops)alignof(const dm_gpio_ops)sizeof(const dm_gpio_ops *)alignof(const dm_gpio_ops *)sizeof(gpio_state)alignof(gpio_state)sizeof(gpio_state *)alignof(gpio_state *)sizeof(hwspinlock)alignof(hwspinlock)sizeof(hwspinlock_ops)alignof(hwspinlock_ops)sizeof(hwspinlock *)alignof(hwspinlock *)sizeof(const hwspinlock_ops)alignof(const hwspinlock_ops)sizeof(const hwspinlock_ops *)alignof(const hwspinlock_ops *)sizeof(hwspinlock_ops *)alignof(hwspinlock_ops *)sizeof(const dm_i2c_ops)alignof(const dm_i2c_ops)sizeof(const dm_i2c_ops *)alignof(const dm_i2c_ops *)sizeof(dm_i2c_ops *)alignof(dm_i2c_ops *)sizeof(cros_ec_i2c_bus)alignof(cros_ec_i2c_bus)sizeof(cros_ec_i2c_bus *)alignof(cros_ec_i2c_bus *)sizeof(i2c_emul_uc_platdata)alignof(i2c_emul_uc_platdata)sizeof(i2c_emul_uc_platdata *)alignof(i2c_emul_uc_platdata *)sizeof(i2c_gpio_bus)alignof(i2c_gpio_bus)sizeof(i2c_gpio_bus *)alignof(i2c_gpio_bus *)sizeof(gpio_desc[2])alignof(gpio_desc[2])sizeof(i2c_priv)alignof(i2c_priv)sizeof(i2c_priv *)alignof(i2c_priv *)sizeof(dm_i2c_bus *)alignof(dm_i2c_bus *)sizeof(i2c_msg[1])alignof(i2c_msg[1])sizeof(i2c_msg[2])alignof(i2c_msg[2])sizeof(uint8_t[5])alignof(uint8_t[5])sizeof(i2c_arbitrator_priv)alignof(i2c_arbitrator_priv)sizeof(i2c_arbitrator_priv *)alignof(i2c_arbitrator_priv *)sizeof(const i2c_mux_ops)alignof(const i2c_mux_ops)sizeof(const i2c_mux_ops *)alignof(const i2c_mux_ops *)sizeof(i2c_mux_ops *)alignof(i2c_mux_ops *)sizeof(i2c_mux_bus)alignof(i2c_mux_bus)sizeof(i2c_mux)alignof(i2c_mux)sizeof(i2c_mux *)alignof(i2c_mux *)sizeof(i2c_mux_bus *)alignof(i2c_mux_bus *)sizeof(sandbox_i2c_priv)alignof(sandbox_i2c_priv)sizeof(sandbox_i2c_priv *)alignof(sandbox_i2c_priv *)sizeof(dm_i2c_ops **)alignof(dm_i2c_ops **)sizeof(key_matrix)alignof(key_matrix)sizeof(key_matrix_key)alignof(key_matrix_key)sizeof(key_matrix *)alignof(key_matrix *)sizeof(key_matrix_key *)alignof(key_matrix_key *)sizeof(cros_ec_keyb_priv)alignof(cros_ec_keyb_priv)sizeof(keyboard_ops)alignof(keyboard_ops)sizeof(input_config)alignof(input_config)sizeof(keyboard_priv)alignof(keyboard_priv)sizeof(cros_ec_keyb_priv *)alignof(cros_ec_keyb_priv *)sizeof(input_config *)alignof(input_config *)sizeof(keyboard_priv *)alignof(keyboard_priv *)sizeof(key_matrix_key[8])alignof(key_matrix_key[8])sizeof(const keyboard_ops)alignof(const keyboard_ops)sizeof(const keyboard_ops *)alignof(const keyboard_ops *)sizeof(keyboard_ops *)alignof(keyboard_ops *)sizeof(i8042_kbd_priv)alignof(i8042_kbd_priv)sizeof(i8042_kbd_priv *)alignof(i8042_kbd_priv *)sizeof(input_key_xlate)alignof(input_key_xlate)sizeof(input_key_xlate[4])alignof(input_key_xlate[4])sizeof(kbd_entry)alignof(kbd_entry)sizeof(kbd_mask)alignof(kbd_mask)sizeof(kbd_entry *)alignof(kbd_entry *)sizeof(kbd_entry[7])alignof(kbd_entry[7])sizeof(input_key_xlate *)alignof(input_key_xlate *)sizeof(int[5])alignof(int[5])sizeof(kbd_entry[])alignof(kbd_entry[])sizeof(const uchar[])alignof(const uchar[])sizeof(const uchar[100])alignof(const uchar[100])sizeof(unsigned char[100])alignof(unsigned char[100])sizeof(const uchar[132])alignof(const uchar[132])sizeof(unsigned char[132])alignof(unsigned char[132])sizeof(key_matrix_key[])alignof(key_matrix_key[])sizeof(led_ops *)alignof(led_ops *)sizeof(led_gpio_priv)alignof(led_gpio_priv)sizeof(led_gpio_priv *)alignof(led_gpio_priv *)sizeof(const led_ops)alignof(const led_ops)sizeof(const led_ops *)alignof(const led_ops *)sizeof(mbox_chan)alignof(mbox_chan)sizeof(mbox_chan *)alignof(mbox_chan *)sizeof(mbox_ops)alignof(mbox_ops)sizeof(mbox_ops *)alignof(mbox_ops *)sizeof(sandbox_mbox_test)alignof(sandbox_mbox_test)sizeof(sandbox_mbox_test *)alignof(sandbox_mbox_test *)sizeof(sandbox_mbox)alignof(sandbox_mbox)sizeof(sandbox_mbox_chan)alignof(sandbox_mbox_chan)sizeof(sandbox_mbox *)alignof(sandbox_mbox *)sizeof(sandbox_mbox_chan[2])alignof(sandbox_mbox_chan[2])sizeof(sandbox_mbox_chan *)alignof(sandbox_mbox_chan *)sizeof(ec_params_config_power_button *)alignof(ec_params_config_power_button *)sizeof(ec_params_charge_state *)alignof(ec_params_charge_state *)sizeof(ec_response_charge_state *)alignof(ec_response_charge_state *)sizeof(const struct <unnamed>[9])alignof(const struct <unnamed>[9])sizeof(struct <unnamed>[9])alignof(struct <unnamed>[9])sizeof(ec_params_host_event_mask *)alignof(ec_params_host_event_mask *)sizeof(ec_response_host_event_mask *)alignof(ec_response_host_event_mask *)sizeof(ec_params_host_event *)alignof(ec_params_host_event *)sizeof(ec_response_host_event *)alignof(ec_response_host_event *)sizeof(ec_response_get_features *)alignof(ec_response_get_features *)sizeof(ec_params_i2c_passthru *)alignof(ec_params_i2c_passthru *)sizeof(ec_params_i2c_passthru_msg *)alignof(ec_params_i2c_passthru_msg *)sizeof(ec_response_i2c_passthru *)alignof(ec_response_i2c_passthru *)sizeof(cros_ec_dev *)alignof(cros_ec_dev *)sizeof(ec_params_ldo_get *)alignof(ec_params_ldo_get *)sizeof(ec_response_ldo_get *)alignof(ec_response_ldo_get *)sizeof(ec_response_ldo_get **)alignof(ec_response_ldo_get **)sizeof(ec_params_ldo_set *)alignof(ec_params_ldo_set *)sizeof(ec_params_battery_cutoff *)alignof(ec_params_battery_cutoff *)sizeof(ec_params_vbnvcontext *)alignof(ec_params_vbnvcontext *)sizeof(ec_params_flash_read *)alignof(ec_params_flash_read *)sizeof(ec_params_efs_verify *)alignof(ec_params_efs_verify *)sizeof(ec_params_flash_write *)alignof(ec_params_flash_write *)sizeof(ec_params_flash_erase *)alignof(ec_params_flash_erase *)sizeof(ec_params_flash_region_info *)alignof(ec_params_flash_region_info *)sizeof(ec_response_flash_region_info *)alignof(ec_response_flash_region_info *)sizeof(ec_response_flash_region_info **)alignof(ec_response_flash_region_info **)sizeof(ec_params_hello *)alignof(ec_params_hello *)sizeof(ec_response_hello *)alignof(ec_response_hello *)sizeof(ec_response_hello **)alignof(ec_response_hello **)sizeof(dm_cros_ec_ops *)alignof(dm_cros_ec_ops *)sizeof(ec_params_flash_protect *)alignof(ec_params_flash_protect *)sizeof(ec_response_host_event_mask **)alignof(ec_response_host_event_mask **)sizeof(ec_params_reboot_ec *)alignof(ec_params_reboot_ec *)sizeof(ec_params_vboot_hash *)alignof(ec_params_vboot_hash *)sizeof(ec_response_vboot_hash **)alignof(ec_response_vboot_hash **)sizeof(ec_response_get_comms_status *)alignof(ec_response_get_comms_status *)sizeof(ec_response_get_comms_status **)alignof(ec_response_get_comms_status **)sizeof(ec_host_response *)alignof(ec_host_response *)sizeof(ec_host_request *)alignof(ec_host_request *)sizeof(uint8_t[252])alignof(uint8_t[252])sizeof(unsigned char[252])alignof(unsigned char[252])sizeof(ec_host_response_i2c)alignof(ec_host_response_i2c)sizeof(ec_host_request_i2c)alignof(ec_host_request_i2c)sizeof(ec_host_request_i2c *)alignof(ec_host_request_i2c *)sizeof(ec_host_response_i2c *)alignof(ec_host_response_i2c *)sizeof(ec_lpc_host_args *)alignof(ec_lpc_host_args *)sizeof(ec_state)alignof(ec_state)sizeof(ec_keymatrix_entry)alignof(ec_keymatrix_entry)sizeof(ec_state *)alignof(ec_state *)sizeof(const ec_params_hello)alignof(const ec_params_hello)sizeof(const ec_params_hello *)alignof(const ec_params_hello *)sizeof(const ec_params_vbnvcontext)alignof(const ec_params_vbnvcontext)sizeof(const ec_params_vbnvcontext *)alignof(const ec_params_vbnvcontext *)sizeof(ec_response_vbnvcontext *)alignof(ec_response_vbnvcontext *)sizeof(const ec_params_reboot_ec)alignof(const ec_params_reboot_ec)sizeof(const ec_params_reboot_ec *)alignof(const ec_params_reboot_ec *)sizeof(const ec_params_vboot_hash)alignof(const ec_params_vboot_hash)sizeof(const ec_params_vboot_hash *)alignof(const ec_params_vboot_hash *)sizeof(const ec_params_flash_protect)alignof(const ec_params_flash_protect)sizeof(const ec_params_flash_protect *)alignof(const ec_params_flash_protect *)sizeof(const ec_params_flash_region_info)alignof(const ec_params_flash_region_info)sizeof(const ec_params_flash_region_info *)alignof(const ec_params_flash_region_info *)sizeof(const ec_params_flash_erase)alignof(const ec_params_flash_erase)sizeof(const ec_params_flash_erase *)alignof(const ec_params_flash_erase *)sizeof(const ec_params_flash_write)alignof(const ec_params_flash_write)sizeof(const ec_params_flash_write *)alignof(const ec_params_flash_write *)sizeof(const ec_keymatrix_entry)alignof(const ec_keymatrix_entry)sizeof(const ec_keymatrix_entry *)alignof(const ec_keymatrix_entry *)sizeof(ec_keymatrix_entry *)alignof(ec_keymatrix_entry *)sizeof(i2c_eeprom)alignof(i2c_eeprom)sizeof(i2c_eeprom_ops)alignof(i2c_eeprom_ops)sizeof(i2c_eeprom *)alignof(i2c_eeprom *)sizeof(const i2c_eeprom_ops)alignof(const i2c_eeprom_ops)sizeof(const i2c_eeprom_ops *)alignof(const i2c_eeprom_ops *)sizeof(i2c_eeprom_ops *)alignof(i2c_eeprom_ops *)sizeof(const udevice_id[15])alignof(const udevice_id[15])sizeof(udevice_id[15])alignof(udevice_id[15])sizeof(sandbox_i2c_flash_plat_data)alignof(sandbox_i2c_flash_plat_data)sizeof(sandbox_i2c_flash)alignof(sandbox_i2c_flash)sizeof(sandbox_i2c_flash *)alignof(sandbox_i2c_flash *)sizeof(sandbox_i2c_flash_plat_data *)alignof(sandbox_i2c_flash_plat_data *)sizeof(const char[38])alignof(const char[38])sizeof(misc_ops)alignof(misc_ops)sizeof(const misc_ops)alignof(const misc_ops)sizeof(const misc_ops *)alignof(const misc_ops *)sizeof(misc_ops *)alignof(misc_ops *)sizeof(misc_sandbox_priv)alignof(misc_sandbox_priv)sizeof(misc_sandbox_priv *)alignof(misc_sandbox_priv *)sizeof(u8[128])alignof(u8[128])sizeof(unsigned char[128])alignof(unsigned char[128])sizeof(pwrseq_ops)alignof(pwrseq_ops)sizeof(pwrseq_ops *)alignof(pwrseq_ops *)sizeof(fw_cfg_file *)alignof(fw_cfg_file *)sizeof(swap_case_platdata)alignof(swap_case_platdata)sizeof(swap_case_priv)alignof(swap_case_priv)sizeof(swap_case_op)alignof(swap_case_op)sizeof(swap_case_priv *)alignof(swap_case_priv *)sizeof(swap_case_op *)alignof(swap_case_op *)sizeof(pci_bar)alignof(pci_bar)sizeof(pci_bar[6])alignof(pci_bar[6])sizeof(pci_bar *)alignof(pci_bar *)sizeof(swap_case_platdata *)alignof(swap_case_platdata *)sizeof(u32[6])alignof(u32[6])sizeof(const u32[])alignof(const u32[])sizeof(const u32[15])alignof(const u32[15])sizeof(const char[30])alignof(const char[30])sizeof(pci_bar[])alignof(pci_bar[])sizeof(mmc_uclass_priv *)alignof(mmc_uclass_priv *)sizeof(dm_mmc_ops *)alignof(dm_mmc_ops *)sizeof(ext_csd_bus_width)alignof(ext_csd_bus_width)sizeof(mode_width_tuning)alignof(mode_width_tuning)sizeof(const int[])alignof(const int[])sizeof(const int[4])alignof(const int[4])sizeof(int[4])alignof(int[4])sizeof(const u8[])alignof(const u8[])sizeof(const u32[9])alignof(const u32[9])sizeof(const mode_width_tuning)alignof(const mode_width_tuning)sizeof(const mode_width_tuning *)alignof(const mode_width_tuning *)sizeof(mode_width_tuning *)alignof(mode_width_tuning *)sizeof(const mode_width_tuning[4])alignof(const mode_width_tuning[4])sizeof(mode_width_tuning[4])alignof(mode_width_tuning[4])sizeof(const ext_csd_bus_width)alignof(const ext_csd_bus_width)sizeof(const ext_csd_bus_width *)alignof(const ext_csd_bus_width *)sizeof(ext_csd_bus_width *)alignof(ext_csd_bus_width *)sizeof(const ext_csd_bus_width[5])alignof(const ext_csd_bus_width[5])sizeof(ext_csd_bus_width[5])alignof(ext_csd_bus_width[5])sizeof(const mode_width_tuning[2])alignof(const mode_width_tuning[2])sizeof(mode_width_tuning[2])alignof(mode_width_tuning[2])sizeof(uint[])alignof(uint[])sizeof(const unsigned int[])alignof(const unsigned int[])sizeof(const unsigned int[16])alignof(const unsigned int[16])sizeof(const int[14])alignof(const int[14])sizeof(int[14])alignof(int[14])sizeof(const char *const[14])alignof(const char *const[14])sizeof(char *[14])alignof(char *[14])sizeof(const ext_csd_bus_width[])alignof(const ext_csd_bus_width[])sizeof(ext_csd_bus_width[])alignof(ext_csd_bus_width[])sizeof(const mode_width_tuning[])alignof(const mode_width_tuning[])sizeof(mode_width_tuning[])alignof(mode_width_tuning[])sizeof(sandbox_mmc_plat)alignof(sandbox_mmc_plat)sizeof(sandbox_mmc_plat *)alignof(sandbox_mmc_plat *)sizeof(const dm_mmc_ops)alignof(const dm_mmc_ops)sizeof(const dm_mmc_ops *)alignof(const dm_mmc_ops *)sizeof(rb_node)alignof(rb_node)sizeof(rb_root)alignof(rb_root)sizeof(rb_node *)alignof(rb_node *)sizeof(rb_node **)alignof(rb_node **)sizeof(rb_root *)alignof(rb_root *)sizeof(const rb_node)alignof(const rb_node)sizeof(const rb_node *)alignof(const rb_node *)sizeof(const rb_root)alignof(const rb_root)sizeof(const rb_root *)alignof(const rb_root *)sizeof(mtd_partition)alignof(mtd_partition)sizeof(ubi_sgl)alignof(ubi_sgl)sizeof(ubi_volume_desc)alignof(ubi_volume_desc)sizeof(ubi_volume_info)alignof(ubi_volume_info)sizeof(ubi_device_info)alignof(ubi_device_info)sizeof(ubi_volume_desc *)alignof(ubi_volume_desc *)sizeof(ubi_sgl *)alignof(ubi_sgl *)sizeof(ubi_volume_info *)alignof(ubi_volume_info *)sizeof(ubi_device_info *)alignof(ubi_device_info *)sizeof(ubi_notification)alignof(ubi_notification)sizeof(ubi_fm_eba)alignof(ubi_fm_eba)sizeof(ubi_fm_volhdr)alignof(ubi_fm_volhdr)sizeof(ubi_fm_ec)alignof(ubi_fm_ec)sizeof(ubi_fm_scan_pool)alignof(ubi_fm_scan_pool)sizeof(ubi_fm_hdr)alignof(ubi_fm_hdr)sizeof(ubi_fm_sb)alignof(ubi_fm_sb)sizeof(ubi_vtbl_record)alignof(ubi_vtbl_record)sizeof(ubi_vid_hdr)alignof(ubi_vid_hdr)sizeof(ubi_ec_hdr)alignof(ubi_ec_hdr)sizeof(__be32[0])alignof(__be32[0])sizeof(__be32[256])alignof(__be32[256])sizeof(unsigned int[256])alignof(unsigned int[256])sizeof(__be32[32])alignof(__be32[32])sizeof(__u8[23])alignof(__u8[23])sizeof(unsigned char[23])alignof(unsigned char[23])sizeof(ubi_blkcreate_req)alignof(ubi_blkcreate_req)sizeof(ubi_set_vol_prop_req)alignof(ubi_set_vol_prop_req)sizeof(ubi_map_req)alignof(ubi_map_req)sizeof(ubi_leb_change_req)alignof(ubi_leb_change_req)sizeof(ubi_rnvol_req)alignof(ubi_rnvol_req)sizeof(ubi_rsvol_req)alignof(ubi_rsvol_req)sizeof(ubi_mkvol_req)alignof(ubi_mkvol_req)sizeof(ubi_attach_req)alignof(ubi_attach_req)sizeof(__s8[128])alignof(__s8[128])sizeof(signed char[128])alignof(signed char[128])sizeof(__s8[3])alignof(__s8[3])sizeof(signed char[3])alignof(signed char[3])sizeof(__s8[7])alignof(__s8[7])sizeof(signed char[7])alignof(signed char[7])sizeof(struct <unnamed>[32])alignof(struct <unnamed>[32])sizeof(__s8[12])alignof(__s8[12])sizeof(signed char[12])alignof(signed char[12])sizeof(__s8[2])alignof(__s8[2])sizeof(signed char[2])alignof(signed char[2])sizeof(__s8[4])alignof(__s8[4])sizeof(signed char[4])alignof(signed char[4])sizeof(__s8[10])alignof(__s8[10])sizeof(signed char[10])alignof(signed char[10])sizeof(ubi_device)alignof(ubi_device)sizeof(ubi_ainf_peb)alignof(ubi_ainf_peb)sizeof(ubi_ainf_volume)alignof(ubi_ainf_volume)sizeof(ubi_volume)alignof(ubi_volume)sizeof(ubi_device *)alignof(ubi_device *)sizeof(ubi_debug_info)alignof(ubi_debug_info)sizeof(const ubi_device)alignof(const ubi_device)sizeof(const ubi_device *)alignof(const ubi_device *)sizeof(const ubi_mkvol_req)alignof(const ubi_mkvol_req)sizeof(const ubi_mkvol_req *)alignof(const ubi_mkvol_req *)sizeof(ubi_mkvol_req *)alignof(ubi_mkvol_req *)sizeof(const ubi_ainf_peb)alignof(const ubi_ainf_peb)sizeof(const ubi_ainf_peb *)alignof(const ubi_ainf_peb *)sizeof(ubi_ainf_peb *)alignof(ubi_ainf_peb *)sizeof(const ubi_ainf_volume)alignof(const ubi_ainf_volume)sizeof(const ubi_ainf_volume *)alignof(const ubi_ainf_volume *)sizeof(ubi_ainf_volume *)alignof(ubi_ainf_volume *)sizeof(const ubi_vtbl_record)alignof(const ubi_vtbl_record)sizeof(const ubi_vtbl_record *)alignof(const ubi_vtbl_record *)sizeof(ubi_vtbl_record *)alignof(ubi_vtbl_record *)sizeof(const ubi_volume)alignof(const ubi_volume)sizeof(const ubi_volume *)alignof(const ubi_volume *)sizeof(ubi_volume *)alignof(ubi_volume *)sizeof(const ubi_vid_hdr)alignof(const ubi_vid_hdr)sizeof(const ubi_vid_hdr *)alignof(const ubi_vid_hdr *)sizeof(ubi_vid_hdr *)alignof(ubi_vid_hdr *)sizeof(const ubi_ec_hdr)alignof(const ubi_ec_hdr)sizeof(const ubi_ec_hdr *)alignof(const ubi_ec_hdr *)sizeof(ubi_ec_hdr *)alignof(ubi_ec_hdr *)sizeof(ubi_work)alignof(ubi_work)sizeof(ubi_wl_entry)alignof(ubi_wl_entry)sizeof(ubi_attach_info)alignof(ubi_attach_info)sizeof(file_operations)alignof(file_operations)sizeof(ubi_fm_pool)alignof(ubi_fm_pool)sizeof(ubi_fastmap_layout)alignof(ubi_fastmap_layout)sizeof(dentry)alignof(dentry)sizeof(notifier_block *)alignof(notifier_block *)sizeof(ubi_work *)alignof(ubi_work *)sizeof(ubi_wl_entry *)alignof(ubi_wl_entry *)sizeof(ubi_attach_info *)alignof(ubi_attach_info *)sizeof(const ubi_leb_change_req)alignof(const ubi_leb_change_req)sizeof(const ubi_leb_change_req *)alignof(const ubi_leb_change_req *)sizeof(ubi_leb_change_req *)alignof(ubi_leb_change_req *)sizeof(const ubi_attach_info)alignof(const ubi_attach_info)sizeof(const ubi_attach_info *)alignof(const ubi_attach_info *)sizeof(blocking_notifier_head)alignof(blocking_notifier_head)sizeof(ubi_rename_entry)alignof(ubi_rename_entry)sizeof(task_struct)alignof(task_struct)sizeof(ubi_ltree_entry)alignof(ubi_ltree_entry)sizeof(dentry *)alignof(dentry *)sizeof(task_struct *)alignof(task_struct *)sizeof(ubi_wl_entry **)alignof(ubi_wl_entry **)sizeof(list_head[10])alignof(list_head[10])sizeof(int[256])alignof(int[256])sizeof(ubi_fastmap_layout *)alignof(ubi_fastmap_layout *)sizeof(int[32])alignof(int[32])sizeof(ubi_wl_entry *[32])alignof(ubi_wl_entry *[32])sizeof(ubi_volume *[129])alignof(ubi_volume *[129])sizeof(const file_operations)alignof(const file_operations)sizeof(kernel_param *)alignof(kernel_param *)sizeof(ubi_device *[])alignof(ubi_device *[])sizeof(mtd_partition **)alignof(mtd_partition **)sizeof(idr_layer)alignof(idr_layer)sizeof(idr)alignof(idr)sizeof(idr *)alignof(idr *)sizeof(idr_layer *)alignof(idr_layer *)sizeof(idr_layer[64])alignof(idr_layer[64])sizeof(mtd_info *[32])alignof(mtd_info *[32])sizeof(sandbox_spi_emu_ops)alignof(sandbox_spi_emu_ops)sizeof(sandbox_spi_flash_plat_data)alignof(sandbox_spi_flash_plat_data)sizeof(sandbox_spi_flash)alignof(sandbox_spi_flash)sizeof(sandbox_sf_state)alignof(sandbox_sf_state)sizeof(flash_info)alignof(flash_info)sizeof(sandbox_spi_info *)alignof(sandbox_spi_info *)sizeof(sandbox_spi_flash_plat_data *)alignof(sandbox_spi_flash_plat_data *)sizeof(sandbox_spi_flash *)alignof(sandbox_spi_flash *)sizeof(u8[4096])alignof(u8[4096])sizeof(unsigned char[4096])alignof(unsigned char[4096])sizeof(const flash_info[])alignof(const flash_info[])sizeof(flash_info[])alignof(flash_info[])sizeof(const char *const[9])alignof(const char *const[9])sizeof(char *[9])alignof(char *[9])sizeof(const dm_spi_emul_ops)alignof(const dm_spi_emul_ops)sizeof(const dm_spi_emul_ops *)alignof(const dm_spi_emul_ops *)sizeof(dm_spi_emul_ops *)alignof(dm_spi_emul_ops *)sizeof(dm_spi_flash_ops *)alignof(dm_spi_flash_ops *)sizeof(const dm_spi_flash_ops)alignof(const dm_spi_flash_ops)sizeof(const dm_spi_flash_ops *)alignof(const dm_spi_flash_ops *)sizeof(spi_controller_mem_ops)alignof(spi_controller_mem_ops)sizeof(spi_mem_op)alignof(spi_mem_op)sizeof(spi_mem_data_dir)alignof(spi_mem_data_dir)sizeof(const spi_mem_op)alignof(const spi_mem_op)sizeof(const spi_mem_op *)alignof(const spi_mem_op *)sizeof(spi_mem_op *)alignof(spi_mem_op *)sizeof(spi_nor_flash_parameter)alignof(spi_nor_flash_parameter)sizeof(spi_nor_pp_command)alignof(spi_nor_pp_command)sizeof(spi_nor_read_command)alignof(spi_nor_read_command)sizeof(spi_nor_flash_parameter *)alignof(spi_nor_flash_parameter *)sizeof(const spi_nor_flash_parameter)alignof(const spi_nor_flash_parameter)sizeof(const spi_nor_flash_parameter *)alignof(const spi_nor_flash_parameter *)sizeof(const spi_nor_hwcaps)alignof(const spi_nor_hwcaps)sizeof(const spi_nor_hwcaps *)alignof(const spi_nor_hwcaps *)sizeof(spi_nor_hwcaps *)alignof(spi_nor_hwcaps *)sizeof(char[77])alignof(char[77])sizeof(const spi_nor_pp_command)alignof(const spi_nor_pp_command)sizeof(const spi_nor_pp_command *)alignof(const spi_nor_pp_command *)sizeof(spi_nor_pp_command *)alignof(spi_nor_pp_command *)sizeof(spi_nor_pp_command[7])alignof(spi_nor_pp_command[7])sizeof(spi_nor_pp_command_index)alignof(spi_nor_pp_command_index)sizeof(const spi_nor_read_command)alignof(const spi_nor_read_command)sizeof(const spi_nor_read_command *)alignof(const spi_nor_read_command *)sizeof(spi_nor_read_command *)alignof(spi_nor_read_command *)sizeof(spi_nor_read_command[15])alignof(spi_nor_read_command[15])sizeof(spi_nor_read_command_index)alignof(spi_nor_read_command_index)sizeof(const int[2])alignof(const int[2])sizeof(const int(*)[2])alignof(const int(*)[2])sizeof(int(*)[2])alignof(int(*)[2])sizeof(const int[][2])alignof(const int[][2])sizeof(int[][2])alignof(int[][2])sizeof(const int[7][2])alignof(const int[7][2])sizeof(int[7][2])alignof(int[7][2])sizeof(const int[15][2])alignof(const int[15][2])sizeof(int[15][2])alignof(int[15][2])sizeof(const u8[2])alignof(const u8[2])sizeof(const u8(*)[2])alignof(const u8(*)[2])sizeof(unsigned char(*)[2])alignof(unsigned char(*)[2])sizeof(const u8[][2])alignof(const u8[][2])sizeof(unsigned char[][2])alignof(unsigned char[][2])sizeof(const u8[3][2])alignof(const u8[3][2])sizeof(unsigned char[3][2])alignof(unsigned char[3][2])sizeof(const u8[9][2])alignof(const u8[9][2])sizeof(unsigned char[9][2])alignof(unsigned char[9][2])sizeof(const flash_info[132])alignof(const flash_info[132])sizeof(flash_info[132])alignof(flash_info[132])sizeof(fdt_region_state)alignof(fdt_region_state)sizeof(fdt_region_ptrs)alignof(fdt_region_ptrs)sizeof(fdt_subnode_stack)alignof(fdt_subnode_stack)sizeof(want_t)alignof(want_t)sizeof(fdt_region_state *)alignof(fdt_region_state *)sizeof(fdt_subnode_stack[32])alignof(fdt_subnode_stack[32])sizeof(mdio_mux_sandbox_priv)alignof(mdio_mux_sandbox_priv)sizeof(mdio_mux_sandbox_priv *)alignof(mdio_mux_sandbox_priv *)sizeof(mdio_ops *)alignof(mdio_ops *)sizeof(const mdio_mux_ops)alignof(const mdio_mux_ops)sizeof(const mdio_mux_ops *)alignof(const mdio_mux_ops *)sizeof(mdio_mux_ops *)alignof(mdio_mux_ops *)sizeof(mdio_sandbox_priv)alignof(mdio_sandbox_priv)sizeof(mdio_sandbox_priv *)alignof(mdio_sandbox_priv *)sizeof(u16[2])alignof(u16[2])sizeof(const mdio_ops)alignof(const mdio_ops)sizeof(const mdio_ops *)alignof(const mdio_ops *)sizeof(const char[6])alignof(const char[6])sizeof(eth_pdata *)alignof(eth_pdata *)sizeof(arp_hdr *)alignof(arp_hdr *)sizeof(const eth_ops)alignof(const eth_ops)sizeof(const eth_ops *)alignof(const eth_ops *)sizeof(eth_ops *)alignof(eth_ops *)sizeof(sandbox_eth_tx_hand_f)alignof(sandbox_eth_tx_hand_f)sizeof(eth_sandbox_priv)alignof(eth_sandbox_priv)sizeof(sandbox_eth_tx_hand_f *)alignof(sandbox_eth_tx_hand_f *)sizeof(eth_sandbox_priv *)alignof(eth_sandbox_priv *)sizeof(ip_udp_hdr *)alignof(ip_udp_hdr *)sizeof(icmp_hdr *)alignof(icmp_hdr *)sizeof(nvme_dev)alignof(nvme_dev)sizeof(nvme_bar)alignof(nvme_bar)sizeof(nvme_abort_cmd)alignof(nvme_abort_cmd)sizeof(nvme_dsm_cmd)alignof(nvme_dsm_cmd)sizeof(nvme_format_cmd)alignof(nvme_format_cmd)sizeof(nvme_download_firmware)alignof(nvme_download_firmware)sizeof(nvme_delete_queue)alignof(nvme_delete_queue)sizeof(nvme_create_sq)alignof(nvme_create_sq)sizeof(nvme_create_cq)alignof(nvme_create_cq)sizeof(nvme_features)alignof(nvme_features)sizeof(nvme_identify)alignof(nvme_identify)sizeof(nvme_rw_command)alignof(nvme_rw_command)sizeof(nvme_common_command)alignof(nvme_common_command)sizeof(nvme_lbaf)alignof(nvme_lbaf)sizeof(nvme_id_power_state)alignof(nvme_id_power_state)sizeof(volatile __le64)alignof(volatile __le64)sizeof(volatile __le64 *)alignof(volatile __le64 *)sizeof(__u32 *)alignof(__u32 *)sizeof(nvme_ns)alignof(nvme_ns)sizeof(nvme_completion)alignof(nvme_completion)sizeof(nvme_command)alignof(nvme_command)sizeof(nvme_admin_opcode)alignof(nvme_admin_opcode)sizeof(nvme_dsm_range)alignof(nvme_dsm_range)sizeof(nvme_opcode)alignof(nvme_opcode)sizeof(nvme_reservation_status)alignof(nvme_reservation_status)sizeof(nvme_lba_range_type)alignof(nvme_lba_range_type)sizeof(nvme_smart_log)alignof(nvme_smart_log)sizeof(nvme_id_ns)alignof(nvme_id_ns)sizeof(nvme_id_ctrl)alignof(nvme_id_ctrl)sizeof(nvme_bar *)alignof(nvme_bar *)sizeof(nvme_queue *)alignof(nvme_queue *)sizeof(nvme_queue **)alignof(nvme_queue **)sizeof(__u32[5])alignof(__u32[5])sizeof(__u64[4])alignof(__u64[4])sizeof(__u32[9])alignof(__u32[9])sizeof(__u64[2])alignof(__u64[2])sizeof(unsigned long long[2])alignof(unsigned long long[2])sizeof(__le32[6])alignof(__le32[6])sizeof(__le32[2])alignof(__le32[2])sizeof(__u8[13])alignof(__u8[13])sizeof(__u8[5])alignof(__u8[5])sizeof(__u8[14])alignof(__u8[14])sizeof(__u8[296])alignof(__u8[296])sizeof(unsigned char[296])alignof(unsigned char[296])sizeof(__le16[8])alignof(__le16[8])sizeof(__u8[26])alignof(__u8[26])sizeof(unsigned char[26])alignof(unsigned char[26])sizeof(__u8[3712])alignof(__u8[3712])sizeof(unsigned char[3712])alignof(unsigned char[3712])sizeof(__u8[192])alignof(__u8[192])sizeof(nvme_lbaf[16])alignof(nvme_lbaf[16])sizeof(__u8[40])alignof(__u8[40])sizeof(__le64[2])alignof(__le64[2])sizeof(__u8[1024])alignof(__u8[1024])sizeof(nvme_id_power_state[32])alignof(nvme_id_power_state[32])sizeof(__u8[1508])alignof(__u8[1508])sizeof(unsigned char[1508])alignof(unsigned char[1508])sizeof(__u8[242])alignof(__u8[242])sizeof(unsigned char[242])alignof(unsigned char[242])sizeof(__u8[172])alignof(__u8[172])sizeof(unsigned char[172])alignof(unsigned char[172])sizeof(__u8[9])alignof(__u8[9])sizeof(unsigned char[9])alignof(unsigned char[9])sizeof(nvme_queue)alignof(nvme_queue)sizeof(nvme_queue_id)alignof(nvme_queue_id)sizeof(__u64 *)alignof(__u64 *)sizeof(nvme_ns *)alignof(nvme_ns *)sizeof(nvme_command *)alignof(nvme_command *)sizeof(nvme_id_ns *)alignof(nvme_id_ns *)sizeof(char[4111])alignof(char[4111])sizeof(nvme_lbaf *)alignof(nvme_lbaf *)sizeof(nvme_id_ctrl *)alignof(nvme_id_ctrl *)sizeof(nvme_completion *)alignof(nvme_completion *)sizeof(u8[][10])alignof(u8[][10])sizeof(unsigned char[][10])alignof(unsigned char[][10])sizeof(u8[4][10])alignof(u8[4][10])sizeof(unsigned char[4][10])alignof(unsigned char[4][10])sizeof(u8(*)[10])alignof(u8(*)[10])sizeof(unsigned char(*)[10])alignof(unsigned char(*)[10])sizeof(pch_req_t)alignof(pch_req_t)sizeof(pch_ops)alignof(pch_ops)sizeof(pch_pmbase_info)alignof(pch_pmbase_info)sizeof(pch_ops *)alignof(pch_ops *)sizeof(const pch_ops)alignof(const pch_ops)sizeof(const pch_ops *)alignof(const pch_ops *)sizeof(sandbox_pch_priv)alignof(sandbox_pch_priv)sizeof(sandbox_pch_priv *)alignof(sandbox_pch_priv *)sizeof(sandbox_pci_emul_priv)alignof(sandbox_pci_emul_priv)sizeof(sandbox_pci_emul_priv *)alignof(sandbox_pci_emul_priv *)sizeof(ofnode *)alignof(ofnode *)sizeof(ofnode_union *)alignof(ofnode_union *)sizeof(pci_driver_entry *)alignof(pci_driver_entry *)sizeof(dm_pci_ops *)alignof(dm_pci_ops *)sizeof(const dm_pci_ops)alignof(const dm_pci_ops)sizeof(const dm_pci_ops *)alignof(const dm_pci_ops *)sizeof(X86EMU_sysEnv)alignof(X86EMU_sysEnv)sizeof(X86EMU_regs)alignof(X86EMU_regs)sizeof(i386_segment_regs)alignof(i386_segment_regs)sizeof(i386_special_regs)alignof(i386_special_regs)sizeof(i386_general_regs)alignof(i386_general_regs)sizeof(i386_general_register)alignof(i386_general_register)sizeof(I8_reg_t)alignof(I8_reg_t)sizeof(I16_reg_t)alignof(I16_reg_t)sizeof(I32_reg_t)alignof(I32_reg_t)sizeof(Gen_reg_t)alignof(Gen_reg_t)sizeof(volatile int)alignof(volatile int)sizeof(vbe_mode_info)alignof(vbe_mode_info)sizeof(BE_VGAInfo)alignof(BE_VGAInfo)sizeof(BE_VGAInfo *)alignof(BE_VGAInfo *)sizeof(vbe_mode_info *)alignof(vbe_mode_info *)sizeof(BE_VGAInfo **)alignof(BE_VGAInfo **)sizeof(u8[1536])alignof(u8[1536])sizeof(unsigned char[1536])alignof(unsigned char[1536])sizeof(pci_rom_emul)alignof(pci_rom_emul)sizeof(pci_rom_data)alignof(pci_rom_data)sizeof(pci_rom_header)alignof(pci_rom_header)sizeof(uint8_t[18])alignof(uint8_t[18])sizeof(vesa_mode_info)alignof(vesa_mode_info)sizeof(vbe_ddc_info)alignof(vbe_ddc_info)sizeof(vbe_info)alignof(vbe_info)sizeof(vbe_screen_info_input)alignof(vbe_screen_info_input)sizeof(vbe_screen_info)alignof(vbe_screen_info)sizeof(u8[256])alignof(u8[256])sizeof(u8[206])alignof(u8[206])sizeof(unsigned char[206])alignof(unsigned char[206])sizeof(vesa_mode_info *)alignof(vesa_mode_info *)sizeof(video_priv *)alignof(video_priv *)sizeof(video_uc_platdata *)alignof(video_uc_platdata *)sizeof(graphic_device)alignof(graphic_device)sizeof(GraphicDevice)alignof(GraphicDevice)sizeof(screen_info)alignof(screen_info)sizeof(pci_rom_header *)alignof(pci_rom_header *)sizeof(pci_rom_header **)alignof(pci_rom_header **)sizeof(screen_info *)alignof(screen_info *)sizeof(pci_rom_data *)alignof(pci_rom_data *)sizeof(sandbox_pci_priv)alignof(sandbox_pci_priv)sizeof(sandbox_pci_priv *)alignof(sandbox_pci_priv *)sizeof(struct <unnamed>[256])alignof(struct <unnamed>[256])sizeof(pci_ep_irq_type)alignof(pci_ep_irq_type)sizeof(pci_barno)alignof(pci_barno)sizeof(pci_ep_header)alignof(pci_ep_header)sizeof(pci_interrupt_pin)alignof(pci_interrupt_pin)sizeof(pci_ep_ops)alignof(pci_ep_ops)sizeof(pci_ep_header *)alignof(pci_ep_header *)sizeof(pci_ep_ops *)alignof(pci_ep_ops *)sizeof(sandbox_pci_ep_priv)alignof(sandbox_pci_ep_priv)sizeof(sandbox_pci_ep_priv *)alignof(sandbox_pci_ep_priv *)sizeof(phy)alignof(phy)sizeof(phy *)alignof(phy *)sizeof(phy_ops)alignof(phy_ops)sizeof(const phy_ops)alignof(const phy_ops)sizeof(const phy_ops *)alignof(const phy_ops *)sizeof(phy_ops *)alignof(phy_ops *)sizeof(sandbox_phy_priv)alignof(sandbox_phy_priv)sizeof(sandbox_phy_priv *)alignof(sandbox_phy_priv *)sizeof(const pinctrl_ops)alignof(const pinctrl_ops)sizeof(const pinctrl_ops *)alignof(const pinctrl_ops *)sizeof(pinctrl_ops *)alignof(pinctrl_ops *)sizeof(const pinconf_param[11])alignof(const pinconf_param[11])sizeof(pinconf_param[11])alignof(pinconf_param[11])sizeof(const pinconf_param[])alignof(const pinconf_param[])sizeof(pinconf_param[])alignof(pinconf_param[])sizeof(const char[36])alignof(const char[36])sizeof(power_domain_ops)alignof(power_domain_ops)sizeof(power_domain_ops *)alignof(power_domain_ops *)sizeof(sandbox_power_domain_test)alignof(sandbox_power_domain_test)sizeof(sandbox_power_domain_test *)alignof(sandbox_power_domain_test *)sizeof(sandbox_power_domain)alignof(sandbox_power_domain)sizeof(sandbox_power_domain *)alignof(sandbox_power_domain *)sizeof(bool[3])alignof(bool[3])sizeof(pmic_act8846)alignof(pmic_act8846)sizeof(pmic)alignof(pmic)sizeof(act8846_reg_table)alignof(act8846_reg_table)sizeof(pmic *)alignof(pmic *)sizeof(const pmic_child_info[2])alignof(const pmic_child_info[2])sizeof(pmic_child_info[2])alignof(pmic_child_info[2])sizeof(dm_pmic_ops *)alignof(dm_pmic_ops *)sizeof(const pmic_child_info[])alignof(const pmic_child_info[])sizeof(pmic_child_info[])alignof(pmic_child_info[])sizeof(sandbox_i2c_pmic_plat_data)alignof(sandbox_i2c_pmic_plat_data)sizeof(sandbox_i2c_pmic_plat_data *)alignof(sandbox_i2c_pmic_plat_data *)sizeof(const pmic_child_info[3])alignof(const pmic_child_info[3])sizeof(pmic_child_info[3])alignof(pmic_child_info[3])sizeof(const udevice_id[4])alignof(const udevice_id[4])sizeof(udevice_id[4])alignof(udevice_id[4])sizeof(pm8916_priv)alignof(pm8916_priv)sizeof(pm8916_priv *)alignof(pm8916_priv *)sizeof(const dm_pmic_ops)alignof(const dm_pmic_ops)sizeof(const dm_pmic_ops *)alignof(const dm_pmic_ops *)sizeof(rk8xx_priv)alignof(rk8xx_priv)sizeof(rk8xx_reg_table)alignof(rk8xx_reg_table)sizeof(rk8xx_priv *)alignof(rk8xx_priv *)sizeof(const pmic_child_info[4])alignof(const pmic_child_info[4])sizeof(pmic_child_info[4])alignof(pmic_child_info[4])sizeof(s2mps11_reg)alignof(s2mps11_reg)sizeof(sec_voltage_desc)alignof(sec_voltage_desc)sizeof(s5m8767_regnum)alignof(s5m8767_regnum)sizeof(s5m8767_para)alignof(s5m8767_para)sizeof(const sec_voltage_desc)alignof(const sec_voltage_desc)sizeof(const sec_voltage_desc *)alignof(const sec_voltage_desc *)sizeof(sec_voltage_desc *)alignof(sec_voltage_desc *)sizeof(const u8[13])alignof(const u8[13])sizeof(const u16[])alignof(const u16[])sizeof(const u16[64])alignof(const u16[64])sizeof(unsigned short[64])alignof(unsigned short[64])sizeof(const dm_regulator_ops)alignof(const dm_regulator_ops)sizeof(const dm_regulator_ops *)alignof(const dm_regulator_ops *)sizeof(dm_regulator_ops *)alignof(dm_regulator_ops *)sizeof(regulator_common_platdata)alignof(regulator_common_platdata)sizeof(regulator_common_platdata *)alignof(regulator_common_platdata *)sizeof(dm_regulator_mode[4])alignof(dm_regulator_mode[4])sizeof(dm_regulator_mode[3])alignof(dm_regulator_mode[3])sizeof(dm_regulator_mode[2])alignof(dm_regulator_mode[2])sizeof(dm_regulator_mode[])alignof(dm_regulator_mode[])sizeof(pfuze100_regulator_platdata)alignof(pfuze100_regulator_platdata)sizeof(pfuze100_regulator_desc)alignof(pfuze100_regulator_desc)sizeof(pfuze100_regulator_desc *)alignof(pfuze100_regulator_desc *)sizeof(pfuze100_regulator_platdata *)alignof(pfuze100_regulator_platdata *)sizeof(pfuze100_regulator_desc[15])alignof(pfuze100_regulator_desc[15])sizeof(pfuze100_regulator_desc[13])alignof(pfuze100_regulator_desc[13])sizeof(dm_regulator_mode[9])alignof(dm_regulator_mode[9])sizeof(pfuze100_regulator_desc[])alignof(pfuze100_regulator_desc[])sizeof(rk8xx_reg_info)alignof(rk8xx_reg_info)sizeof(s8)alignof(s8)sizeof(const uint[])alignof(const uint[])sizeof(const uint[8])alignof(const uint[8])sizeof(const uint *)alignof(const uint *)sizeof(const u16[12])alignof(const u16[12])sizeof(unsigned short[12])alignof(unsigned short[12])sizeof(const rk8xx_reg_info)alignof(const rk8xx_reg_info)sizeof(const rk8xx_reg_info *)alignof(const rk8xx_reg_info *)sizeof(rk8xx_reg_info *)alignof(rk8xx_reg_info *)sizeof(const rk8xx_reg_info[8])alignof(const rk8xx_reg_info[8])sizeof(rk8xx_reg_info[8])alignof(rk8xx_reg_info[8])sizeof(const rk8xx_reg_info[4])alignof(const rk8xx_reg_info[4])sizeof(rk8xx_reg_info[4])alignof(rk8xx_reg_info[4])sizeof(const rk8xx_reg_info[])alignof(const rk8xx_reg_info[])sizeof(rk8xx_reg_info[])alignof(rk8xx_reg_info[])sizeof(const s5m8767_para)alignof(const s5m8767_para)sizeof(const s5m8767_para *)alignof(const s5m8767_para *)sizeof(s5m8767_para *)alignof(s5m8767_para *)sizeof(const s5m8767_para[9])alignof(const s5m8767_para[9])sizeof(s5m8767_para[9])alignof(s5m8767_para[9])sizeof(const s5m8767_para[28])alignof(const s5m8767_para[28])sizeof(s5m8767_para[28])alignof(s5m8767_para[28])sizeof(const s5m8767_para[])alignof(const s5m8767_para[])sizeof(s5m8767_para[])alignof(s5m8767_para[])sizeof(output_range)alignof(output_range)sizeof(output_range *)alignof(output_range *)sizeof(output_range[1])alignof(output_range[1])sizeof(output_range[2])alignof(output_range[2])sizeof(output_range[])alignof(output_range[])sizeof(pwm_ops)alignof(pwm_ops)sizeof(pwm_ops *)alignof(pwm_ops *)sizeof(sandbox_pwm_priv)alignof(sandbox_pwm_priv)sizeof(sandbox_pwm_chan)alignof(sandbox_pwm_chan)sizeof(sandbox_pwm_chan *)alignof(sandbox_pwm_chan *)sizeof(sandbox_pwm_priv *)alignof(sandbox_pwm_priv *)sizeof(sandbox_pwm_chan[3])alignof(sandbox_pwm_chan[3])sizeof(const pwm_ops)alignof(const pwm_ops)sizeof(const pwm_ops *)alignof(const pwm_ops *)sizeof(ram_info)alignof(ram_info)sizeof(ram_ops)alignof(ram_ops)sizeof(ram_info *)alignof(ram_info *)sizeof(ram_ops *)alignof(ram_ops *)sizeof(const ram_ops)alignof(const ram_ops)sizeof(const ram_ops *)alignof(const ram_ops *)sizeof(Elf64_Addr)alignof(Elf64_Addr)sizeof(Elf64_Xword)alignof(Elf64_Xword)sizeof(Elf64_Sxword)alignof(Elf64_Sxword)sizeof(Elf32_Dyn)alignof(Elf32_Dyn)sizeof(Elf32_Addr)alignof(Elf32_Addr)sizeof(Elf32_Word)alignof(Elf32_Word)sizeof(Elf32_Sword)alignof(Elf32_Sword)sizeof(Elf64_Off)alignof(Elf64_Off)sizeof(Elf64_Word)alignof(Elf64_Word)sizeof(Elf32_Off)alignof(Elf32_Off)sizeof(Elf32_Half)alignof(Elf32_Half)sizeof(Elf64_Half)alignof(Elf64_Half)sizeof(Elf64_Dyn)alignof(Elf64_Dyn)sizeof(Elf64_Phdr)alignof(Elf64_Phdr)sizeof(Elf32_Phdr)alignof(Elf32_Phdr)sizeof(Elf64_Rela)alignof(Elf64_Rela)sizeof(Elf64_Rel)alignof(Elf64_Rel)sizeof(Elf32_Rela)alignof(Elf32_Rela)sizeof(Elf32_Rel)alignof(Elf32_Rel)sizeof(Elf32_Sym)alignof(Elf32_Sym)sizeof(Elf64_Shdr)alignof(Elf64_Shdr)alignof(Elf32_Shdr)sizeof(Elf64_Ehdr)alignof(Elf64_Ehdr)alignof(Elf32_Ehdr)sizeof(Elf64_Sword)alignof(Elf64_Sword)sizeof(Elf64_SHalf)alignof(Elf64_SHalf)sizeof(Elf32_Dyn[])alignof(Elf32_Dyn[])sizeof(Elf32_Ehdr *)alignof(Elf32_Ehdr *)sizeof(Elf32_Phdr *)alignof(Elf32_Phdr *)sizeof(rproc_ops)alignof(rproc_ops)sizeof(sandbox_test_devdata)alignof(sandbox_test_devdata)sizeof(sandbox_test_devdata *)alignof(sandbox_test_devdata *)sizeof(reset_ctl)alignof(reset_ctl)sizeof(reset_ctl_bulk)alignof(reset_ctl_bulk)sizeof(reset_ctl *)alignof(reset_ctl *)sizeof(reset_ctl_bulk *)alignof(reset_ctl_bulk *)sizeof(reset_ops)alignof(reset_ops)sizeof(reset_ops *)alignof(reset_ops *)sizeof(sandbox_reset_test)alignof(sandbox_reset_test)sizeof(sandbox_reset_test *)alignof(sandbox_reset_test *)sizeof(sandbox_reset)alignof(sandbox_reset)sizeof(sandbox_reset_signal)alignof(sandbox_reset_signal)sizeof(sandbox_reset *)alignof(sandbox_reset *)sizeof(sandbox_reset_signal[101])alignof(sandbox_reset_signal[101])sizeof(sandbox_reset_signal *)alignof(sandbox_reset_signal *)sizeof(int[12])alignof(int[12])sizeof(sandbox_i2c_rtc_plat_data)alignof(sandbox_i2c_rtc_plat_data)sizeof(sandbox_i2c_rtc)alignof(sandbox_i2c_rtc)sizeof(sandbox_i2c_rtc_plat_data *)alignof(sandbox_i2c_rtc_plat_data *)sizeof(const unsigned char[12])alignof(const unsigned char[12])sizeof(rtc_ops *)alignof(rtc_ops *)sizeof(u8[7])alignof(u8[7])sizeof(const rtc_ops)alignof(const rtc_ops)sizeof(const rtc_ops *)alignof(const rtc_ops *)sizeof(unsigned char(*)[512])alignof(unsigned char(*)[512])sizeof(lbaint_t *)alignof(lbaint_t *)sizeof(sandbox_serial_platdata)alignof(sandbox_serial_platdata)sizeof(sandbox_serial_priv)alignof(sandbox_serial_priv)sizeof(sandbox_serial_platdata *)alignof(sandbox_serial_platdata *)sizeof(const char *const[8])alignof(const char *const[8])sizeof(char *[8])alignof(char *[8])sizeof(sandbox_serial_priv *)alignof(sandbox_serial_priv *)sizeof(const sandbox_serial_platdata)alignof(const sandbox_serial_platdata)sizeof(const sandbox_serial_platdata *)alignof(const sandbox_serial_platdata *)sizeof(const dm_serial_ops)alignof(const dm_serial_ops)sizeof(const dm_serial_ops *)alignof(const dm_serial_ops *)sizeof(dm_serial_ops *)alignof(dm_serial_ops *)sizeof(serial_dev_priv *)alignof(serial_dev_priv *)sizeof(const unsigned long)alignof(const unsigned long)sizeof(const unsigned long[])alignof(const unsigned long[])sizeof(const unsigned long[6])alignof(const unsigned long[6])sizeof(unsigned long[6])alignof(unsigned long[6])sizeof(const unsigned long *)alignof(const unsigned long *)sizeof(smem_ops)alignof(smem_ops)sizeof(const smem_ops)alignof(const smem_ops)sizeof(const smem_ops *)alignof(const smem_ops *)sizeof(smem_ops *)alignof(smem_ops *)sizeof(audio_codec_ops)alignof(audio_codec_ops)sizeof(audio_codec_ops *)alignof(audio_codec_ops *)sizeof(i2s_uc_priv)alignof(i2s_uc_priv)sizeof(i2s_uc_priv *)alignof(i2s_uc_priv *)sizeof(i2s_ops)alignof(i2s_ops)sizeof(i2s_reg)alignof(i2s_reg)sizeof(i2s_ops *)alignof(i2s_ops *)sizeof(sandbox_sound_priv)alignof(sandbox_sound_priv)sizeof(sandbox_i2s_priv)alignof(sandbox_i2s_priv)sizeof(sandbox_codec_priv)alignof(sandbox_codec_priv)sizeof(sandbox_sound_priv *)alignof(sandbox_sound_priv *)sizeof(sound_uc_priv *)alignof(sound_uc_priv *)sizeof(sandbox_i2s_priv *)alignof(sandbox_i2s_priv *)sizeof(sandbox_codec_priv *)alignof(sandbox_codec_priv *)sizeof(const sound_ops)alignof(const sound_ops)sizeof(const sound_ops *)alignof(const sound_ops *)sizeof(sound_ops *)alignof(sound_ops *)sizeof(const i2s_ops)alignof(const i2s_ops)sizeof(const i2s_ops *)alignof(const i2s_ops *)sizeof(const audio_codec_ops)alignof(const audio_codec_ops)sizeof(const audio_codec_ops *)alignof(const audio_codec_ops *)sizeof(const dm_spi_ops)alignof(const dm_spi_ops)sizeof(const dm_spi_ops *)alignof(const dm_spi_ops *)sizeof(dm_spi_ops *)alignof(dm_spi_ops *)sizeof(dm_spi_bus *)alignof(dm_spi_bus *)sizeof(sandbox_spmi_priv)alignof(sandbox_spmi_priv)sizeof(sandbox_emul_fake_regs)alignof(sandbox_emul_fake_regs)sizeof(dm_spmi_ops)alignof(dm_spmi_ops)sizeof(sandbox_emul_gpio)alignof(sandbox_emul_gpio)sizeof(sandbox_emul_fake_regs *)alignof(sandbox_emul_fake_regs *)sizeof(sandbox_spmi_priv *)alignof(sandbox_spmi_priv *)sizeof(sandbox_emul_gpio[4])alignof(sandbox_emul_gpio[4])sizeof(sandbox_emul_gpio *)alignof(sandbox_emul_gpio *)sizeof(sandbox_emul_fake_regs[71])alignof(sandbox_emul_fake_regs[71])sizeof(dm_spmi_ops *)alignof(dm_spmi_ops *)sizeof(const dm_spmi_ops)alignof(const dm_spmi_ops)sizeof(const dm_spmi_ops *)alignof(const dm_spmi_ops *)sizeof(sysreset_ops *)alignof(sysreset_ops *)sizeof(sandbox_tee_state)alignof(sandbox_tee_state)sizeof(u64[256])alignof(u64[256])sizeof(unsigned long long[256])alignof(unsigned long long[256])sizeof(ta_entry)alignof(ta_entry)sizeof(sandbox_tee_state *)alignof(sandbox_tee_state *)sizeof(ta_entry *)alignof(ta_entry *)sizeof(const ta_entry)alignof(const ta_entry)sizeof(const ta_entry *)alignof(const ta_entry *)sizeof(const ta_entry[1])alignof(const ta_entry[1])sizeof(ta_entry[1])alignof(ta_entry[1])sizeof(const tee_driver_ops)alignof(const tee_driver_ops)sizeof(const tee_driver_ops *)alignof(const tee_driver_ops *)sizeof(tee_driver_ops *)alignof(tee_driver_ops *)sizeof(const ta_entry[])alignof(const ta_entry[])sizeof(ta_entry[])alignof(ta_entry[])sizeof(tee_uclass_priv)alignof(tee_uclass_priv)sizeof(const u8[8])alignof(const u8[8])sizeof(tee_uclass_priv *)alignof(tee_uclass_priv *)sizeof(timer_dev_priv *)alignof(timer_dev_priv *)sizeof(const timer_ops)alignof(const timer_ops)sizeof(const timer_ops *)alignof(const timer_ops *)sizeof(timer_ops *)alignof(timer_ops *)sizeof(const u8[243])alignof(const u8[243])sizeof(unsigned char[243])alignof(unsigned char[243])sizeof(const u8[12])alignof(const u8[12])sizeof(tpm_ops *)alignof(tpm_ops *)sizeof(sandbox_tpm2)alignof(sandbox_tpm2)sizeof(tpm2_hierarchy)alignof(tpm2_hierarchy)sizeof(sandbox_tpm2 *)alignof(sandbox_tpm2 *)sizeof(const unsigned char **)alignof(const unsigned char **)sizeof(tpm2_hierarchy *)alignof(tpm2_hierarchy *)sizeof(const u8 **)alignof(const u8 **)sizeof(tpm2_cap_tpm_property)alignof(tpm2_cap_tpm_property)sizeof(u32[1])alignof(u32[1])sizeof(unsigned int[1])alignof(unsigned int[1])sizeof(u8[1][32])alignof(u8[1][32])sizeof(unsigned char[1][32])alignof(unsigned char[1][32])sizeof(u8(*)[32])alignof(u8(*)[32])sizeof(unsigned char(*)[32])alignof(unsigned char(*)[32])sizeof(char[3][33])alignof(char[3][33])sizeof(char(*)[33])alignof(char(*)[33])sizeof(tpm2_capability)alignof(tpm2_capability)sizeof(const u8[32])alignof(const u8[32])sizeof(const tpm_ops)alignof(const tpm_ops)sizeof(const tpm_ops *)alignof(const tpm_ops *)sizeof(tpm_state)alignof(tpm_state)sizeof(rollback_space_kernel)alignof(rollback_space_kernel)sizeof(nvdata_state)alignof(nvdata_state)sizeof(tpm_state *)alignof(tpm_state *)sizeof(__be16 *)alignof(__be16 *)sizeof(nvdata_state[6])alignof(nvdata_state[6])sizeof(nvdata_state *)alignof(nvdata_state *)sizeof(rollback_space_kernel *)alignof(rollback_space_kernel *)sizeof(tpm_nv_data_public *)alignof(tpm_nv_data_public *)sizeof(usb_dr_mode)alignof(usb_dr_mode)sizeof(const char *const[6])alignof(const char *const[6])sizeof(char *[6])alignof(char *[6])sizeof(sandbox_flash_plat)alignof(sandbox_flash_plat)sizeof(sandbox_flash_priv)alignof(sandbox_flash_priv)sizeof(scsi_read10_req)alignof(scsi_read10_req)sizeof(scsi_read_capacity_resp)alignof(scsi_read_capacity_resp)sizeof(scsi_inquiry_resp)alignof(scsi_inquiry_resp)sizeof(cmd_phase)alignof(cmd_phase)sizeof(sandbox_flash_priv *)alignof(sandbox_flash_priv *)sizeof(sandbox_flash_plat *)alignof(sandbox_flash_plat *)sizeof(usb_string[4])alignof(usb_string[4])sizeof(void *[])alignof(void *[])sizeof(void *[6])alignof(void *[6])sizeof(const scsi_cmd)alignof(const scsi_cmd)sizeof(const scsi_cmd *)alignof(const scsi_cmd *)sizeof(scsi_inquiry_resp *)alignof(scsi_inquiry_resp *)sizeof(scsi_read_capacity_resp *)alignof(scsi_read_capacity_resp *)sizeof(scsi_read10_req *)alignof(scsi_read10_req *)sizeof(const dm_usb_ops)alignof(const dm_usb_ops)sizeof(const dm_usb_ops *)alignof(const dm_usb_ops *)sizeof(dm_usb_ops *)alignof(dm_usb_ops *)sizeof(sandbox_hub_platdata)alignof(sandbox_hub_platdata)sizeof(sandbox_hub_priv)alignof(sandbox_hub_priv)sizeof(sandbox_hub_platdata *)alignof(sandbox_hub_platdata *)sizeof(usb_emul_platdata *)alignof(usb_emul_platdata *)sizeof(sandbox_hub_priv *)alignof(sandbox_hub_priv *)sizeof(usb_device_speed *)alignof(usb_device_speed *)sizeof(usb_device_descriptor **)alignof(usb_device_descriptor **)sizeof(usb_string[])alignof(usb_string[])sizeof(sandbox_keyb_plat)alignof(sandbox_keyb_plat)sizeof(sandbox_keyb_priv)alignof(sandbox_keyb_priv)sizeof(sandbox_keyb_priv *)alignof(sandbox_keyb_priv *)sizeof(sandbox_keyb_plat *)alignof(sandbox_keyb_plat *)sizeof(void *[9])alignof(void *[9])sizeof(usb_class_hid_descriptor *)alignof(usb_class_hid_descriptor *)sizeof(usb_dev_platdata *)alignof(usb_dev_platdata *)sizeof(sandbox_usb_ctrl)alignof(sandbox_usb_ctrl)sizeof(sandbox_usb_ctrl *)alignof(sandbox_usb_ctrl *)sizeof(const char[5])alignof(const char[5])sizeof(usb_uclass_priv)alignof(usb_uclass_priv)sizeof(char[2415])alignof(char[2415])sizeof(usb_bus_priv *)alignof(usb_bus_priv *)sizeof(usb_driver_entry *)alignof(usb_driver_entry *)sizeof(const usb_interface_descriptor)alignof(const usb_interface_descriptor)sizeof(const usb_interface_descriptor *)alignof(const usb_interface_descriptor *)sizeof(usb_platdata *)alignof(usb_platdata *)sizeof(usb_uclass_priv *)alignof(usb_uclass_priv *)sizeof(backlight_ops)alignof(backlight_ops)sizeof(const backlight_ops)alignof(const backlight_ops)sizeof(const backlight_ops *)alignof(const backlight_ops *)sizeof(backlight_ops *)alignof(backlight_ops *)sizeof(vidconsole_ops)alignof(vidconsole_ops)sizeof(vidconsole_priv)alignof(vidconsole_priv)sizeof(color_idx)alignof(color_idx)sizeof(vidconsole_priv *)alignof(vidconsole_priv *)sizeof(vidconsole_ops *)alignof(vidconsole_ops *)sizeof(stbtt_uint8)alignof(stbtt_uint8)alignof(stbtt_int32)sizeof(stbtt_uint32)alignof(stbtt_uint32)sizeof(stbtt_fontinfo)alignof(stbtt_fontinfo)sizeof(stbtt_uint16)alignof(stbtt_uint16)sizeof(stbtt_packedchar)alignof(stbtt_packedchar)sizeof(stbtt_aligned_quad)alignof(stbtt_aligned_quad)sizeof(stbtt_pack_range)alignof(stbtt_pack_range)sizeof(stbtt_pack_context)alignof(stbtt_pack_context)sizeof(stbrp_rect)alignof(stbrp_rect)sizeof(stbrp_context)alignof(stbrp_context)alignof(stbtt_int16)sizeof(stbrp_coord)alignof(stbrp_coord)sizeof(stbrp_node)alignof(stbrp_node)sizeof(stbtt_bakedchar)alignof(stbtt_bakedchar)sizeof(stbtt__bitmap)alignof(stbtt__bitmap)alignof(stbtt_vertex)sizeof(stbtt__point)alignof(stbtt__point)sizeof(stbtt__edge)alignof(stbtt__edge)sizeof(stbtt__active_edge)alignof(stbtt__active_edge)sizeof(stbtt__hheap)alignof(stbtt__hheap)alignof(stbtt__hheap_chunk)sizeof(stbtt_uint8 *)alignof(stbtt_uint8 *)sizeof(const stbtt_uint8)alignof(const stbtt_uint8)sizeof(const stbtt_uint8 *)alignof(const stbtt_uint8 *)sizeof(const stbtt_fontinfo)alignof(const stbtt_fontinfo)sizeof(const stbtt_fontinfo *)alignof(const stbtt_fontinfo *)sizeof(stbtt_fontinfo *)alignof(stbtt_fontinfo *)sizeof(stbtt_packedchar *)alignof(stbtt_packedchar *)sizeof(float *)alignof(float *)sizeof(stbtt_aligned_quad *)alignof(stbtt_aligned_quad *)sizeof(stbtt_pack_context *)alignof(stbtt_pack_context *)sizeof(stbtt_pack_range *)alignof(stbtt_pack_range *)sizeof(stbrp_rect *)alignof(stbrp_rect *)sizeof(stbrp_context *)alignof(stbrp_context *)sizeof(stbrp_node *)alignof(stbrp_node *)sizeof(stbtt_bakedchar *)alignof(stbtt_bakedchar *)sizeof(stbtt__bitmap *)alignof(stbtt__bitmap *)sizeof(stbtt_vertex *)alignof(stbtt_vertex *)sizeof(stbtt_vertex **)alignof(stbtt_vertex **)sizeof(stbtt__point *)alignof(stbtt__point *)sizeof(int **)alignof(int **)sizeof(stbtt__edge *)alignof(stbtt__edge *)sizeof(float[129])alignof(float[129])sizeof(stbtt__active_edge *)alignof(stbtt__active_edge *)sizeof(stbtt__active_edge **)alignof(stbtt__active_edge **)sizeof(stbtt__hheap *)alignof(stbtt__hheap *)sizeof(stbtt__hheap_chunk *)alignof(stbtt__hheap_chunk *)sizeof(float[6])alignof(float[6])sizeof(stbtt_int8)alignof(stbtt_int8)sizeof(stbtt_int8 *)alignof(stbtt_int8 *)sizeof(signed char *)alignof(signed char *)sizeof(stbtt__test_oversample_pow2)alignof(stbtt__test_oversample_pow2)sizeof(stbtt__check_size16)alignof(stbtt__check_size16)sizeof(stbtt__check_size32)alignof(stbtt__check_size32)sizeof(console_tt_priv)alignof(console_tt_priv)sizeof(font_info)alignof(font_info)sizeof(pos_info)alignof(pos_info)sizeof(console_tt_priv *)alignof(console_tt_priv *)sizeof(font_info *)alignof(font_info *)sizeof(font_info[3])alignof(font_info[3])sizeof(pos_info *)alignof(pos_info *)sizeof(pos_info[1126])alignof(pos_info[1126])sizeof(font_info[])alignof(font_info[])sizeof(panel_ops)alignof(panel_ops)sizeof(panel_ops *)alignof(panel_ops *)sizeof(pwm_backlight_priv)alignof(pwm_backlight_priv)sizeof(const char[33])alignof(const char[33])sizeof(pwm_backlight_priv *)alignof(pwm_backlight_priv *)sizeof(dm_display_ops)alignof(dm_display_ops)sizeof(display_plat)alignof(display_plat)sizeof(sandbox_osd_priv)alignof(sandbox_osd_priv)sizeof(sandbox_osd_priv *)alignof(sandbox_osd_priv *)sizeof(const video_osd_ops)alignof(const video_osd_ops)sizeof(const video_osd_ops *)alignof(const video_osd_ops *)sizeof(video_osd_ops *)alignof(video_osd_ops *)sizeof(unit_test_state)alignof(unit_test_state)sizeof(unit_test)alignof(unit_test)sizeof(unit_test_state *)alignof(unit_test_state *)sizeof(dm_test_priv)alignof(dm_test_priv)sizeof(dm_test_priv *)alignof(dm_test_priv *)sizeof(sandbox_sdl_plat)alignof(sandbox_sdl_plat)sizeof(dm_test_state)alignof(dm_test_state)sizeof(dm_test_perdev_uc_pdata)alignof(dm_test_perdev_uc_pdata)sizeof(dm_test_parent_data)alignof(dm_test_parent_data)sizeof(dm_test_uclass_priv)alignof(dm_test_uclass_priv)sizeof(dm_test_uclass_perdev_priv)alignof(dm_test_uclass_perdev_priv)sizeof(test_ops)alignof(test_ops)sizeof(dm_test_pdata)alignof(dm_test_pdata)sizeof(int[11])alignof(int[11])sizeof(sandbox_sdl_plat *)alignof(sandbox_sdl_plat *)sizeof(simple_panel_priv)alignof(simple_panel_priv)sizeof(simple_panel_priv *)alignof(simple_panel_priv *)sizeof(const udevice_id[6])alignof(const udevice_id[6])sizeof(udevice_id[6])alignof(udevice_id[6])sizeof(const panel_ops)alignof(const panel_ops)sizeof(const panel_ops *)alignof(const panel_ops *)sizeof(vid_rgb)alignof(vid_rgb)sizeof(const vid_rgb)alignof(const vid_rgb)sizeof(const vid_rgb[16])alignof(const vid_rgb[16])sizeof(vid_rgb[16])alignof(vid_rgb[16])sizeof(const vid_rgb *)alignof(const vid_rgb *)sizeof(vid_rgb *)alignof(vid_rgb *)sizeof(char[102])alignof(char[102])sizeof(__u16 *)alignof(__u16 *)sizeof(bmp_color_table_entry *)alignof(bmp_color_table_entry *)sizeof(ushort **)alignof(ushort **)sizeof(dm_virtio_ops *)alignof(dm_virtio_ops *)sizeof(virtio_scsi_inhdr)alignof(virtio_scsi_inhdr)sizeof(virtio_blk_outhdr)alignof(virtio_blk_outhdr)sizeof(virtio_blk_config)alignof(virtio_blk_config)sizeof(virtio_blk_geometry)alignof(virtio_blk_geometry)sizeof(virtio_blk_priv)alignof(virtio_blk_priv)sizeof(virtqueue)alignof(virtqueue)sizeof(virtio_blk_priv *)alignof(virtio_blk_priv *)sizeof(virtio_blk_config *)alignof(virtio_blk_config *)sizeof(virtio_sg *)alignof(virtio_sg *)sizeof(virtio_sg *[3])alignof(virtio_sg *[3])sizeof(virtio_sg **)alignof(virtio_sg **)sizeof(virtio_blk_outhdr *)alignof(virtio_blk_outhdr *)sizeof(virtio_mmio_priv)alignof(virtio_mmio_priv)sizeof(virtio_mmio_priv *)alignof(virtio_mmio_priv *)sizeof(const dm_virtio_ops)alignof(const dm_virtio_ops)sizeof(const dm_virtio_ops *)alignof(const dm_virtio_ops *)sizeof(virtio_net_hdr)alignof(virtio_net_hdr)sizeof(virtio_net_ctrl_mq)alignof(virtio_net_ctrl_mq)sizeof(virtio_net_ctrl_mac)alignof(virtio_net_ctrl_mac)sizeof(virtio_net_ctrl_ack)alignof(virtio_net_ctrl_ack)sizeof(virtio_net_ctrl_hdr)alignof(virtio_net_ctrl_hdr)sizeof(virtio_net_hdr_mrg_rxbuf)alignof(virtio_net_hdr_mrg_rxbuf)sizeof(virtio_net_hdr_v1)alignof(virtio_net_hdr_v1)sizeof(virtio_net_config)alignof(virtio_net_config)sizeof(__u8[][6])alignof(__u8[][6])sizeof(unsigned char[][6])alignof(unsigned char[][6])sizeof(virtio_net_priv)alignof(virtio_net_priv)sizeof(virtio_net_priv *)alignof(virtio_net_priv *)sizeof(virtqueue *[2])alignof(virtqueue *[2])sizeof(const u32[1])alignof(const u32[1])sizeof(virtio_net_config *)alignof(virtio_net_config *)sizeof(virtio_sg *[])alignof(virtio_sg *[])sizeof(virtio_sg *[1])alignof(virtio_sg *[1])sizeof(virtio_net_hdr *)alignof(virtio_net_hdr *)sizeof(virtio_net_hdr_v1 *)alignof(virtio_net_hdr_v1 *)sizeof(virtio_sg *[2])alignof(virtio_sg *[2])sizeof(char[1526])alignof(char[1526])sizeof(char[32][1526])alignof(char[32][1526])sizeof(char(*)[1526])alignof(char(*)[1526])sizeof(virtio_pci_cap)alignof(virtio_pci_cap)sizeof(virtio_pci_cfg_cap)alignof(virtio_pci_cfg_cap)sizeof(virtio_pci_common_cfg)alignof(virtio_pci_common_cfg)sizeof(virtio_pci_notify_cap)alignof(virtio_pci_notify_cap)sizeof(virtio_pci_priv)alignof(virtio_pci_priv)sizeof(virtio_pci_priv *)alignof(virtio_pci_priv *)sizeof(pci_device_id[65])alignof(pci_device_id[65])sizeof(virtio_pci_cap *)alignof(virtio_pci_cap *)sizeof(virtio_pci_common_cfg *)alignof(virtio_pci_common_cfg *)sizeof(virtio_pci_notify_cap *)alignof(virtio_pci_notify_cap *)sizeof(vring_used_elem)alignof(vring_used_elem)sizeof(vring_desc)alignof(vring_desc)sizeof(vring)alignof(vring)sizeof(vring_used)alignof(vring_used)sizeof(vring_avail)alignof(vring_avail)sizeof(__virtio16 *)alignof(__virtio16 *)sizeof(vring *)alignof(vring *)sizeof(vring_desc *)alignof(vring_desc *)sizeof(vring_avail *)alignof(vring_avail *)sizeof(vring_used *)alignof(vring_used *)sizeof(__virtio16[])alignof(__virtio16[])sizeof(vring_used_elem[])alignof(vring_used_elem[])sizeof(vring_used_elem *)alignof(vring_used_elem *)sizeof(const virtqueue)alignof(const virtqueue)sizeof(const virtqueue *)alignof(const virtqueue *)sizeof(virtio_sandbox_priv)alignof(virtio_sandbox_priv)sizeof(virtio_sandbox_priv *)alignof(virtio_sandbox_priv *)sizeof(w1_gpio_pdata)alignof(w1_gpio_pdata)sizeof(w1_gpio_pdata *)alignof(w1_gpio_pdata *)sizeof(const w1_ops)alignof(const w1_ops)sizeof(const w1_ops *)alignof(const w1_ops *)sizeof(w1_ops *)alignof(w1_ops *)sizeof(w1_bus)alignof(w1_bus)sizeof(w1_device *)alignof(w1_device *)sizeof(w1_bus *)alignof(w1_bus *)sizeof(const w1_eeprom_ops)alignof(const w1_eeprom_ops)sizeof(const w1_eeprom_ops *)alignof(const w1_eeprom_ops *)sizeof(w1_eeprom_ops *)alignof(w1_eeprom_ops *)sizeof(const wdt_ops)alignof(const wdt_ops)sizeof(const wdt_ops *)alignof(const wdt_ops *)sizeof(wdt_ops *)alignof(wdt_ops *)sizeof(regex_callback_priv)alignof(regex_callback_priv)sizeof(regex_callback_priv *)alignof(regex_callback_priv *)sizeof(char[2993])alignof(char[2993])sizeof(const uchar[2993])alignof(const uchar[2993])sizeof(unsigned char[2993])alignof(unsigned char[2993])sizeof(env_driver *)alignof(env_driver *)sizeof(env_location[])alignof(env_location[])sizeof(env_location[1])alignof(env_location[1])sizeof(env_location *)alignof(env_location *)sizeof(btrfs_timespec)alignof(btrfs_timespec)sizeof(btrfs_key)alignof(btrfs_key)sizeof(btrfs_inode_item)alignof(btrfs_inode_item)sizeof(btrfs_stripe)alignof(btrfs_stripe)sizeof(btrfs_raid_types)alignof(btrfs_raid_types)sizeof(btrfs_csum_item)alignof(btrfs_csum_item)sizeof(btrfs_file_extent_item)alignof(btrfs_file_extent_item)sizeof(btrfs_compression_type)alignof(btrfs_compression_type)sizeof(btrfs_root_ref)alignof(btrfs_root_ref)sizeof(btrfs_root_item)alignof(btrfs_root_item)sizeof(btrfs_dir_item)alignof(btrfs_dir_item)sizeof(btrfs_dir_log_item)alignof(btrfs_dir_log_item)sizeof(btrfs_inode_extref)alignof(btrfs_inode_extref)sizeof(btrfs_inode_ref)alignof(btrfs_inode_ref)sizeof(btrfs_dev_extent)alignof(btrfs_dev_extent)sizeof(btrfs_extent_inline_ref)alignof(btrfs_extent_inline_ref)sizeof(btrfs_shared_data_ref)alignof(btrfs_shared_data_ref)sizeof(btrfs_extent_data_ref)alignof(btrfs_extent_data_ref)sizeof(btrfs_tree_block_info)alignof(btrfs_tree_block_info)sizeof(btrfs_extent_item)alignof(btrfs_extent_item)sizeof(btrfs_free_space_header)alignof(btrfs_free_space_header)sizeof(btrfs_free_space_entry)alignof(btrfs_free_space_entry)sizeof(btrfs_chunk)alignof(btrfs_chunk)sizeof(btrfs_dev_item)alignof(btrfs_dev_item)sizeof(__u64[8])alignof(__u64[8])sizeof(unsigned long long[8])alignof(unsigned long long[8])sizeof(btrfs_path)alignof(btrfs_path)sizeof(btrfs_header)alignof(btrfs_header)sizeof(btrfs_leaf)alignof(btrfs_leaf)sizeof(btrfs_root)alignof(btrfs_root)sizeof(btrfs_tree_node)alignof(btrfs_tree_node)sizeof(btrfs_node)alignof(btrfs_node)sizeof(btrfs_key_ptr)alignof(btrfs_key_ptr)sizeof(btrfs_item)alignof(btrfs_item)sizeof(btrfs_root_backup)alignof(btrfs_root_backup)sizeof(btrfs_path *)alignof(btrfs_path *)sizeof(btrfs_leaf *)alignof(btrfs_leaf *)sizeof(btrfs_tree_node *)alignof(btrfs_tree_node *)sizeof(btrfs_tree_node *[8])alignof(btrfs_tree_node *[8])sizeof(btrfs_tree_node **)alignof(btrfs_tree_node **)sizeof(btrfs_item[])alignof(btrfs_item[])sizeof(btrfs_item *)alignof(btrfs_item *)sizeof(btrfs_key *)alignof(btrfs_key *)sizeof(const btrfs_root)alignof(const btrfs_root)sizeof(const btrfs_root *)alignof(const btrfs_root *)sizeof(btrfs_root *)alignof(btrfs_root *)sizeof(btrfs_super_block)alignof(btrfs_super_block)sizeof(btrfs_key_ptr[])alignof(btrfs_key_ptr[])sizeof(btrfs_root_backup[4])alignof(btrfs_root_backup[4])sizeof(__u8[2048])alignof(__u8[2048])sizeof(__u64[30])alignof(__u64[30])sizeof(unsigned long long[30])alignof(unsigned long long[30])sizeof(const int[1])alignof(const int[1])sizeof(btrfs_key_ptr *)alignof(btrfs_key_ptr *)sizeof(btrfs_super_block *)alignof(btrfs_super_block *)sizeof(btrfs_root_backup *)alignof(btrfs_root_backup *)sizeof(btrfs_header *)alignof(btrfs_header *)sizeof(btrfs_free_space_info)alignof(btrfs_free_space_info)sizeof(btrfs_free_space_info *)alignof(btrfs_free_space_info *)sizeof(btrfs_block_group_item)alignof(btrfs_block_group_item)sizeof(btrfs_block_group_item *)alignof(btrfs_block_group_item *)sizeof(btrfs_dev_replace_item)alignof(btrfs_dev_replace_item)sizeof(btrfs_dev_replace_item *)alignof(btrfs_dev_replace_item *)sizeof(btrfs_file_extent_item *)alignof(btrfs_file_extent_item *)sizeof(btrfs_root_ref *)alignof(btrfs_root_ref *)sizeof(btrfs_root_item *)alignof(btrfs_root_item *)sizeof(btrfs_dir_item *)alignof(btrfs_dir_item *)sizeof(btrfs_dir_log_item *)alignof(btrfs_dir_log_item *)sizeof(btrfs_inode_item *)alignof(btrfs_inode_item *)sizeof(btrfs_timespec *)alignof(btrfs_timespec *)sizeof(btrfs_inode_extref *)alignof(btrfs_inode_extref *)sizeof(btrfs_inode_ref *)alignof(btrfs_inode_ref *)sizeof(btrfs_dev_extent *)alignof(btrfs_dev_extent *)sizeof(btrfs_extent_inline_ref *)alignof(btrfs_extent_inline_ref *)sizeof(btrfs_shared_data_ref *)alignof(btrfs_shared_data_ref *)sizeof(btrfs_extent_data_ref *)alignof(btrfs_extent_data_ref *)sizeof(btrfs_tree_block_info *)alignof(btrfs_tree_block_info *)sizeof(btrfs_extent_item *)alignof(btrfs_extent_item *)sizeof(btrfs_free_space_header *)alignof(btrfs_free_space_header *)sizeof(btrfs_free_space_entry *)alignof(btrfs_free_space_entry *)sizeof(btrfs_chunk *)alignof(btrfs_chunk *)sizeof(btrfs_stripe *)alignof(btrfs_stripe *)sizeof(btrfs_dev_item *)alignof(btrfs_dev_item *)sizeof(btrfs_readdir_callback_t)alignof(btrfs_readdir_callback_t)alignof(btrfs_info)sizeof(const int[12])alignof(const int[12])sizeof(const int[2][12])alignof(const int[2][12])sizeof(int[2][12])alignof(int[2][12])sizeof(const int(*)[12])alignof(const int(*)[12])sizeof(int(*)[12])alignof(int(*)[12])sizeof(const char[3])alignof(const char[3])sizeof(const char[7][3])alignof(const char[7][3])sizeof(char[7][3])alignof(char[7][3])sizeof(const char(*)[3])alignof(const char(*)[3])sizeof(char(*)[3])alignof(char(*)[3])sizeof(const char[12][3])alignof(const char[12][3])sizeof(char[12][3])alignof(char[12][3])sizeof(btrfs_info *)alignof(btrfs_info *)sizeof(const char[9][4])alignof(const char[9][4])sizeof(char[9][4])alignof(char[9][4])sizeof(const char(*)[4])alignof(const char(*)[4])sizeof(char(*)[4])alignof(char(*)[4])sizeof(chunk_map_item)alignof(chunk_map_item)sizeof(u8[2048])alignof(u8[2048])sizeof(u8 *const)alignof(u8 *const)sizeof(chunk_map_item *)alignof(chunk_map_item *)alignof(ZSTD_DCtx)sizeof(ZSTD_CCtx_s)alignof(ZSTD_CCtx_s)sizeof(ZSTD_CCtx)alignof(ZSTD_CCtx)sizeof(ZSTD_nextInputType_e)alignof(ZSTD_nextInputType_e)sizeof(ZSTD_CDict_s)alignof(ZSTD_CDict_s)sizeof(ZSTD_CDict)alignof(ZSTD_CDict)sizeof(ZSTD_parameters)alignof(ZSTD_parameters)sizeof(ZSTD_frameParams)alignof(ZSTD_frameParams)alignof(ZSTD_DDict)sizeof(ZSTD_compressionParameters)alignof(ZSTD_compressionParameters)sizeof(ZSTD_inBuffer_s)alignof(ZSTD_inBuffer_s)sizeof(ZSTD_inBuffer)alignof(ZSTD_inBuffer)sizeof(ZSTD_outBuffer_s)alignof(ZSTD_outBuffer_s)sizeof(ZSTD_outBuffer)alignof(ZSTD_outBuffer)alignof(ZSTD_DStream)sizeof(ZSTD_CStream_s)alignof(ZSTD_CStream_s)sizeof(ZSTD_CStream)alignof(ZSTD_CStream)sizeof(ZSTD_frameParameters)alignof(ZSTD_frameParameters)sizeof(ZSTD_strategy)alignof(ZSTD_strategy)sizeof(ZSTD_ErrorCode)alignof(ZSTD_ErrorCode)sizeof(ZSTD_DCtx *)alignof(ZSTD_DCtx *)sizeof(ZSTD_DCtx_s *)alignof(ZSTD_DCtx_s *)sizeof(ZSTD_CCtx *)alignof(ZSTD_CCtx *)sizeof(ZSTD_CCtx_s *)alignof(ZSTD_CCtx_s *)sizeof(const ZSTD_DCtx)alignof(const ZSTD_DCtx)sizeof(const ZSTD_DCtx *)alignof(const ZSTD_DCtx *)sizeof(const ZSTD_CDict)alignof(const ZSTD_CDict)sizeof(const ZSTD_CDict *)alignof(const ZSTD_CDict *)sizeof(ZSTD_CDict_s *)alignof(ZSTD_CDict_s *)sizeof(const ZSTD_CCtx)alignof(const ZSTD_CCtx)sizeof(const ZSTD_CCtx *)alignof(const ZSTD_CCtx *)sizeof(ZSTD_frameParams *)alignof(ZSTD_frameParams *)sizeof(const ZSTD_DDict)alignof(const ZSTD_DDict)sizeof(const ZSTD_DDict *)alignof(const ZSTD_DDict *)sizeof(ZSTD_DDict_s *)alignof(ZSTD_DDict_s *)sizeof(ZSTD_DStream *)alignof(ZSTD_DStream *)sizeof(ZSTD_DStream_s *)alignof(ZSTD_DStream_s *)sizeof(ZSTD_outBuffer *)alignof(ZSTD_outBuffer *)sizeof(ZSTD_outBuffer_s *)alignof(ZSTD_outBuffer_s *)sizeof(ZSTD_inBuffer *)alignof(ZSTD_inBuffer *)sizeof(ZSTD_inBuffer_s *)alignof(ZSTD_inBuffer_s *)sizeof(ZSTD_CStream *)alignof(ZSTD_CStream *)sizeof(ZSTD_CStream_s *)alignof(ZSTD_CStream_s *)sizeof(ZSTD_DDict *)alignof(ZSTD_DDict *)sizeof(ZSTD_CDict *)alignof(ZSTD_CDict *)sizeof(char[10223])alignof(char[10223])sizeof(u32[256])alignof(u32[256])sizeof(const u64[4])alignof(const u64[4])sizeof(const u64 *)alignof(const u64 *)sizeof(const cbfs_fileheader)alignof(const cbfs_fileheader)sizeof(const cbfs_fileheader *)alignof(const cbfs_fileheader *)sizeof(cbfs_fileheader *)alignof(cbfs_fileheader *)sizeof(const u8[9])alignof(const u8[9])sizeof(const u8(*)[8])alignof(const u8(*)[8])sizeof(unsigned char(*)[8])alignof(unsigned char(*)[8])sizeof(u8(*)[8])alignof(u8(*)[8])sizeof(cramfs_super *)alignof(cramfs_super *)sizeof(cramfs_inode *)alignof(cramfs_inode *)sizeof(const __u16)alignof(const __u16)sizeof(const __u16[256])alignof(const __u16[256])sizeof(unsigned short[256])alignof(unsigned short[256])sizeof(const __u16 *)alignof(const __u16 *)sizeof(ext2fs_node **)alignof(ext2fs_node **)sizeof(ext2_dirent *)alignof(ext2_dirent *)sizeof(ext4_extent_header *)alignof(ext4_extent_header *)sizeof(ext4_extent *)alignof(ext4_extent *)sizeof(ext2_block_group *)alignof(ext2_block_group *)sizeof(const ext2_block_group)alignof(const ext2_block_group)sizeof(const ext2_block_group *)alignof(const ext2_block_group *)sizeof(const ext_filesystem)alignof(const ext_filesystem)sizeof(const ext_filesystem *)alignof(const ext_filesystem *)sizeof(ext4_extent_idx *)alignof(ext4_extent_idx *)sizeof(const ext2_sblock)alignof(const ext2_sblock)sizeof(const ext2_sblock *)alignof(const ext2_sblock *)sizeof(journal_header_t)alignof(journal_header_t)sizeof(journal_superblock_t)alignof(journal_superblock_t)sizeof(ext3_journal_block_tag)alignof(ext3_journal_block_tag)sizeof(journal_revoke_header_t)alignof(journal_revoke_header_t)sizeof(revoke_blk_list)alignof(revoke_blk_list)sizeof(dirty_blocks)alignof(dirty_blocks)sizeof(journal_log)alignof(journal_log)sizeof(journal_log *)alignof(journal_log *)sizeof(journal_log *[100])alignof(journal_log *[100])sizeof(journal_log **)alignof(journal_log **)sizeof(journal_superblock_t *)alignof(journal_superblock_t *)sizeof(journal_header_t *)alignof(journal_header_t *)sizeof(ext3_journal_block_tag *)alignof(ext3_journal_block_tag *)sizeof(revoke_blk_list *)alignof(revoke_blk_list *)sizeof(journal_revoke_header_t *)alignof(journal_revoke_header_t *)sizeof(dirty_blocks *)alignof(dirty_blocks *)sizeof(dirty_blocks *[100])alignof(dirty_blocks *[100])sizeof(dirty_blocks **)alignof(dirty_blocks **)sizeof(__u8[768])alignof(__u8[768])sizeof(unsigned char[768])alignof(unsigned char[768])sizeof(__be32[44])alignof(__be32[44])sizeof(unsigned int[44])alignof(unsigned int[44])sizeof(fat_dir)alignof(fat_dir)alignof(fat_itr)sizeof(fat_dir *)alignof(fat_dir *)sizeof(fat_itr *)alignof(fat_itr *)sizeof(dir_entry *)alignof(dir_entry *)sizeof(boot_sector *)alignof(boot_sector *)sizeof(volume_info *)alignof(volume_info *)sizeof(__kernel_size_t *)alignof(__kernel_size_t *)sizeof(dir_slot *)alignof(dir_slot *)sizeof(u8[65536])alignof(u8[65536])sizeof(unsigned char[65536])alignof(unsigned char[65536])sizeof(const fsdata)alignof(const fsdata)sizeof(const fsdata *)alignof(const fsdata *)sizeof(__u8[65536])alignof(__u8[65536])sizeof(__u8[640])alignof(__u8[640])sizeof(unsigned char[640])alignof(unsigned char[640])sizeof(fstype_info)alignof(fstype_info)sizeof(fstype_info *)alignof(fstype_info *)sizeof(fstype_info[5])alignof(fstype_info[5])sizeof(fstype_info[])alignof(fstype_info[])sizeof(__kernel_nlink_t)alignof(__kernel_nlink_t)sizeof(umode_t)alignof(umode_t)sizeof(ustat)alignof(ustat)sizeof(unchar)alignof(unchar)sizeof(gid16_t)alignof(gid16_t)sizeof(uid16_t)alignof(uid16_t)sizeof(volatile __u8)alignof(volatile __u8)sizeof(volatile __u8 *)alignof(volatile __u8 *)sizeof(volatile __u16)alignof(volatile __u16)sizeof(volatile __u16 *)alignof(volatile __u16 *)sizeof(volatile __u32)alignof(volatile __u32)sizeof(volatile __u32 *)alignof(volatile __u32 *)sizeof(volatile __u64)alignof(volatile __u64)sizeof(volatile __u64 *)alignof(volatile __u64 *)sizeof(ftrace_branch_data)alignof(ftrace_branch_data)sizeof(ulong[])alignof(ulong[])alignof(uuid)sizeof(u8[440])alignof(u8[440])sizeof(unsigned char[440])alignof(unsigned char[440])sizeof(block_drvr)alignof(block_drvr)sizeof(const block_drvr)alignof(const block_drvr)sizeof(const block_drvr[])alignof(const block_drvr[])sizeof(block_drvr[])alignof(block_drvr[])sizeof(flash_info_t)alignof(flash_info_t)sizeof(flash_sect_t)alignof(flash_sect_t)sizeof(flash_info_t *)alignof(flash_info_t *)sizeof(uchar[512])alignof(uchar[512])sizeof(ulong[512])alignof(ulong[512])sizeof(unsigned long[512])alignof(unsigned long[512])sizeof(flash_info_t[])alignof(flash_info_t[])sizeof(max_align_t)alignof(max_align_t)sizeof(const __u64)alignof(const __u64)sizeof(const __u64 *)alignof(const __u64 *)sizeof(const __u32)alignof(const __u32)sizeof(const __u32 *)alignof(const __u32 *)sizeof(__be64 *)alignof(__be64 *)sizeof(__le64 *)alignof(__le64 *)sizeof(const __be16)alignof(const __be16)sizeof(const __be16 *)alignof(const __be16 *)sizeof(const __le32)alignof(const __le32)sizeof(const __le32 *)alignof(const __le32 *)sizeof(const __le64)alignof(const __le64)sizeof(const __le64 *)alignof(const __le64 *)sizeof(lmb_region)alignof(lmb_region)sizeof(lmb_property)alignof(lmb_property)sizeof(lmb_region *)alignof(lmb_region *)sizeof(lmb_property[9])alignof(lmb_property[9])sizeof(lmb_property *)alignof(lmb_property *)sizeof(fdt16_t)alignof(fdt16_t)sizeof(fdt_node_header)alignof(fdt_node_header)sizeof(node_info)alignof(node_info)sizeof(const node_info)alignof(const node_info)sizeof(const node_info *)alignof(const node_info *)sizeof(node_info *)alignof(node_info *)sizeof(unsigned long[5])alignof(unsigned long[5])sizeof(uint32_t[8])alignof(uint32_t[8])sizeof(const u8[256])alignof(const u8[256])alignof(UChar)alignof(DState)alignof(EState)sizeof(Int32 *)alignof(Int32 *)sizeof(UChar *)alignof(UChar *)sizeof(DState *)alignof(DState *)sizeof(EState *)alignof(EState *)sizeof(Char)alignof(Char)sizeof(Int32[6])alignof(Int32[6])sizeof(int[6])alignof(int[6])sizeof(Int32[258])alignof(Int32[258])sizeof(Int32[6][258])alignof(Int32[6][258])sizeof(int[258])alignof(int[258])sizeof(int[6][258])alignof(int[6][258])sizeof(UChar[258])alignof(UChar[258])sizeof(UChar[6][258])alignof(UChar[6][258])sizeof(unsigned char[258])alignof(unsigned char[258])sizeof(unsigned char[6][258])alignof(unsigned char[6][258])sizeof(UChar[18002])alignof(UChar[18002])sizeof(unsigned char[18002])alignof(unsigned char[18002])sizeof(Int32[16])alignof(Int32[16])sizeof(UChar[4096])alignof(UChar[4096])sizeof(UChar[256])alignof(UChar[256])sizeof(Bool[16])alignof(Bool[16])sizeof(Bool[256])alignof(Bool[256])sizeof(UInt32 *)alignof(UInt32 *)sizeof(Int32[257])alignof(Int32[257])sizeof(int[257])alignof(int[257])sizeof(Int32[256])alignof(Int32[256])sizeof(UInt32[258][4])alignof(UInt32[258][4])sizeof(unsigned int[258][4])alignof(unsigned int[258][4])sizeof(UInt32[256])alignof(UInt32[256])sizeof(Int32[512])alignof(Int32[512])sizeof(int[512])alignof(int[512])sizeof(Bool *)alignof(Bool *)sizeof(Int32[100])alignof(Int32[100])sizeof(int[100])alignof(int[100])sizeof(Int32[3])alignof(Int32[3])sizeof(Int32[14])alignof(Int32[14])sizeof(UChar(*)[258])alignof(UChar(*)[258])sizeof(unsigned char(*)[258])alignof(unsigned char(*)[258])sizeof(Int32(*)[258])alignof(Int32(*)[258])sizeof(int(*)[258])alignof(int(*)[258])sizeof(UInt32(*)[4])alignof(UInt32(*)[4])sizeof(unsigned int(*)[4])alignof(unsigned int(*)[4])sizeof(UInt16[6])alignof(UInt16[6])sizeof(UChar[6])alignof(UChar[6])sizeof(Int32[516])alignof(Int32[516])sizeof(int[516])alignof(int[516])sizeof(Int32[260])alignof(Int32[260])sizeof(int[260])alignof(int[260])sizeof(capitalization_table)alignof(capitalization_table)sizeof(capitalization_table *)alignof(capitalization_table *)sizeof(capitalization_table[948])alignof(capitalization_table[948])sizeof(capitalization_table[])alignof(capitalization_table[])sizeof(const uint16_t[])alignof(const uint16_t[])sizeof(const uint16_t[256])alignof(const uint16_t[256])sizeof(const uint32_t[256])alignof(const uint32_t[256])sizeof(const unsigned char[256])alignof(const unsigned char[256])sizeof(Enumeration)alignof(Enumeration)sizeof(record)alignof(record)sizeof(record *)alignof(record *)sizeof(Rec_Pointer)alignof(Rec_Pointer)sizeof(Rec_Type)alignof(Rec_Type)sizeof(int[50])alignof(int[50])sizeof(int[50][50])alignof(int[50][50])sizeof(Arr_2_Dim)alignof(Arr_2_Dim)sizeof(Arr_1_Dim)alignof(Arr_1_Dim)sizeof(Str_30)alignof(Str_30)sizeof(Boolean)alignof(Boolean)sizeof(Capital_Letter)alignof(Capital_Letter)sizeof(One_Fifty)alignof(One_Fifty)sizeof(One_Thirty)alignof(One_Thirty)sizeof(Rec_Pointer *)alignof(Rec_Pointer *)sizeof(record **)alignof(record **)sizeof(One_Fifty *)alignof(One_Fifty *)sizeof(Enumeration *)alignof(Enumeration *)sizeof(int(*)[50])alignof(int(*)[50])alignof(linebuf)sizeof(uint32_t[17])alignof(uint32_t[17])sizeof(volatile uint32_t)alignof(volatile uint32_t)sizeof(volatile uint32_t *)alignof(volatile uint32_t *)sizeof(uint64_t[9])alignof(uint64_t[9])sizeof(unsigned long long[9])alignof(unsigned long long[9])sizeof(volatile uint64_t)alignof(volatile uint64_t)sizeof(volatile uint64_t *)alignof(volatile uint64_t *)sizeof(uint16_t[33])alignof(uint16_t[33])sizeof(unsigned short[33])alignof(unsigned short[33])sizeof(volatile uint16_t)alignof(volatile uint16_t)sizeof(volatile uint16_t *)alignof(volatile uint16_t *)sizeof(uint8_t[65])alignof(uint8_t[65])sizeof(unsigned char[65])alignof(unsigned char[65])sizeof(volatile uint8_t)alignof(volatile uint8_t)sizeof(volatile uint8_t *)alignof(volatile uint8_t *)sizeof(efi_driver_ops)alignof(efi_driver_ops)sizeof(efi_blk_platdata)alignof(efi_blk_platdata)sizeof(efi_blk_platdata *)alignof(efi_blk_platdata *)sizeof(char[120])alignof(char[120])sizeof(const efi_driver_ops)alignof(const efi_driver_ops)sizeof(const efi_driver_ops *)alignof(const efi_driver_ops *)sizeof(efi_driver_ops *)alignof(efi_driver_ops *)sizeof(efi_driver_binding_extended_protocol)alignof(efi_driver_binding_extended_protocol)sizeof(efi_driver_binding_extended_protocol *)alignof(efi_driver_binding_extended_protocol *)sizeof(char[159])alignof(char[159])sizeof(const efi_device_path **)alignof(const efi_device_path **)sizeof(char[121])alignof(char[121])sizeof(const efi_boot_services)alignof(const efi_boot_services)sizeof(const efi_boot_services *)alignof(const efi_boot_services *)sizeof(const efi_runtime_services)alignof(const efi_runtime_services)sizeof(const efi_runtime_services *)alignof(const efi_runtime_services *)sizeof(int[9])alignof(int[9])sizeof(char[113])alignof(char[113])sizeof(int[10])alignof(int[10])sizeof(_IMAGE_OPTIONAL_HEADER)alignof(_IMAGE_OPTIONAL_HEADER)sizeof(IMAGE_OPTIONAL_HEADER32)alignof(IMAGE_OPTIONAL_HEADER32)sizeof(_IMAGE_FILE_HEADER)alignof(_IMAGE_FILE_HEADER)sizeof(IMAGE_FILE_HEADER)alignof(IMAGE_FILE_HEADER)sizeof(_IMAGE_DATA_DIRECTORY)alignof(_IMAGE_DATA_DIRECTORY)sizeof(IMAGE_DATA_DIRECTORY)alignof(IMAGE_DATA_DIRECTORY)sizeof(_IMAGE_OPTIONAL_HEADER64)alignof(_IMAGE_OPTIONAL_HEADER64)sizeof(IMAGE_OPTIONAL_HEADER64)alignof(IMAGE_OPTIONAL_HEADER64)sizeof(_IMAGE_RELOCATION)alignof(_IMAGE_RELOCATION)sizeof(_IMAGE_RELOCATION *)alignof(_IMAGE_RELOCATION *)sizeof(PIMAGE_RELOCATION)alignof(PIMAGE_RELOCATION)sizeof(IMAGE_RELOCATION)alignof(IMAGE_RELOCATION)sizeof(_IMAGE_BASE_RELOCATION)alignof(_IMAGE_BASE_RELOCATION)sizeof(_IMAGE_BASE_RELOCATION *)alignof(_IMAGE_BASE_RELOCATION *)sizeof(PIMAGE_BASE_RELOCATION)alignof(PIMAGE_BASE_RELOCATION)sizeof(IMAGE_BASE_RELOCATION)alignof(IMAGE_BASE_RELOCATION)sizeof(_IMAGE_SECTION_HEADER)alignof(_IMAGE_SECTION_HEADER)sizeof(_IMAGE_SECTION_HEADER *)alignof(_IMAGE_SECTION_HEADER *)sizeof(PIMAGE_SECTION_HEADER)alignof(PIMAGE_SECTION_HEADER)alignof(IMAGE_SECTION_HEADER)sizeof(_IMAGE_NT_HEADERS)alignof(_IMAGE_NT_HEADERS)sizeof(_IMAGE_NT_HEADERS *)alignof(_IMAGE_NT_HEADERS *)sizeof(PIMAGE_NT_HEADERS32)alignof(PIMAGE_NT_HEADERS32)sizeof(IMAGE_NT_HEADERS32)alignof(IMAGE_NT_HEADERS32)sizeof(_IMAGE_OPTIONAL_HEADER *)alignof(_IMAGE_OPTIONAL_HEADER *)sizeof(PIMAGE_OPTIONAL_HEADER32)alignof(PIMAGE_OPTIONAL_HEADER32)sizeof(_IMAGE_NT_HEADERS64)alignof(_IMAGE_NT_HEADERS64)sizeof(_IMAGE_NT_HEADERS64 *)alignof(_IMAGE_NT_HEADERS64 *)sizeof(PIMAGE_NT_HEADERS64)alignof(PIMAGE_NT_HEADERS64)sizeof(IMAGE_NT_HEADERS64)alignof(IMAGE_NT_HEADERS64)sizeof(_IMAGE_OPTIONAL_HEADER64 *)alignof(_IMAGE_OPTIONAL_HEADER64 *)sizeof(PIMAGE_OPTIONAL_HEADER64)alignof(PIMAGE_OPTIONAL_HEADER64)sizeof(_IMAGE_DATA_DIRECTORY *)alignof(_IMAGE_DATA_DIRECTORY *)sizeof(PIMAGE_DATA_DIRECTORY)alignof(PIMAGE_DATA_DIRECTORY)sizeof(_IMAGE_FILE_HEADER *)alignof(_IMAGE_FILE_HEADER *)sizeof(PIMAGE_FILE_HEADER)alignof(PIMAGE_FILE_HEADER)sizeof(_IMAGE_DOS_HEADER)alignof(_IMAGE_DOS_HEADER)sizeof(_IMAGE_DOS_HEADER *)alignof(_IMAGE_DOS_HEADER *)sizeof(PIMAGE_DOS_HEADER)alignof(PIMAGE_DOS_HEADER)sizeof(IMAGE_DOS_HEADER)alignof(IMAGE_DOS_HEADER)sizeof(IMAGE_DATA_DIRECTORY[16])alignof(IMAGE_DATA_DIRECTORY[16])sizeof(_IMAGE_DATA_DIRECTORY[16])alignof(_IMAGE_DATA_DIRECTORY[16])sizeof(uint16_t[10])alignof(uint16_t[10])sizeof(unsigned short[10])alignof(unsigned short[10])sizeof(uint16_t[4])alignof(uint16_t[4])sizeof(efi_configuration_table **)alignof(efi_configuration_table **)sizeof(efi_driver_binding_protocol **)alignof(efi_driver_binding_protocol **)sizeof(efi_open_protocol_info_item *)alignof(efi_open_protocol_info_item *)sizeof(char[106])alignof(char[106])sizeof(char[81])alignof(char[81])sizeof(char[133])alignof(char[133])sizeof(jmp_buf_data *)alignof(jmp_buf_data *)sizeof(char[107])alignof(char[107])sizeof(const char[43])alignof(const char[43])sizeof(const char[41])alignof(const char[41])sizeof(efi_register_notify_event *)alignof(efi_register_notify_event *)sizeof(efi_protocol_notification *)alignof(efi_protocol_notification *)sizeof(efi_file_info *)alignof(efi_file_info *)sizeof(const efi_event)alignof(const efi_event)sizeof(const efi_event *)alignof(const efi_event *)sizeof(efi_cin_notify_function)alignof(efi_cin_notify_function)sizeof(cout_mode)alignof(cout_mode)sizeof(efi_cin_notify_function *)alignof(efi_cin_notify_function *)sizeof(efi_key_state *)alignof(efi_key_state *)sizeof(cout_mode *)alignof(cout_mode *)sizeof(cout_mode[3])alignof(cout_mode[3])sizeof(const struct <unnamed>[8])alignof(const struct <unnamed>[8])sizeof(cout_mode[])alignof(cout_mode[])sizeof(efi_device_path_memory *)alignof(efi_device_path_memory *)sizeof(efi_device_path_file_path *)alignof(efi_device_path_file_path *)sizeof(efi_device_path_cdrom_path *)alignof(efi_device_path_cdrom_path *)sizeof(efi_device_path_hard_drive_path *)alignof(efi_device_path_hard_drive_path *)sizeof(efi_device_path_vendor *)alignof(efi_device_path_vendor *)sizeof(efi_device_path_mac_addr *)alignof(efi_device_path_mac_addr *)sizeof(efi_mac_addr *)alignof(efi_mac_addr *)sizeof(efi_device_path_atapi *)alignof(efi_device_path_atapi *)sizeof(efi_device_path_sd_mmc_path *)alignof(efi_device_path_sd_mmc_path *)sizeof(efi_device_path_usb_class *)alignof(efi_device_path_usb_class *)sizeof(const efi_device_path_vendor)alignof(const efi_device_path_vendor)sizeof(efi_device_path_scsi *)alignof(efi_device_path_scsi *)sizeof(efi_device_path_usb *)alignof(efi_device_path_usb *)sizeof(efi_device_path_acpi_path *)alignof(efi_device_path_acpi_path *)sizeof(efi_disk_obj)alignof(efi_disk_obj)sizeof(efi_disk_direction)alignof(efi_disk_direction)sizeof(efi_disk_obj *)alignof(efi_disk_obj *)sizeof(efi_disk_obj **)alignof(efi_disk_obj **)sizeof(const efi_block_io)alignof(const efi_block_io)sizeof(const efi_block_io *)alignof(const efi_block_io *)sizeof(file_system)alignof(file_system)sizeof(file_system *)alignof(file_system *)sizeof(const efi_simple_file_system_protocol)alignof(const efi_simple_file_system_protocol)sizeof(const efi_simple_file_system_protocol *)alignof(const efi_simple_file_system_protocol *)sizeof(const efi_file_handle)alignof(const efi_file_handle)sizeof(const efi_file_handle *)alignof(const efi_file_handle *)sizeof(efi_file_system_info *)alignof(efi_file_system_info *)sizeof(efi_gop_obj)alignof(efi_gop_obj)sizeof(efi_gop_obj *)alignof(efi_gop_obj *)sizeof(const efi_gop)alignof(const efi_gop)sizeof(const efi_gop *)alignof(const efi_gop *)sizeof(efi_string_table)alignof(efi_string_table)sizeof(efi_hii_packagelist)alignof(efi_hii_packagelist)sizeof(efi_keyboard_layout_data)alignof(efi_keyboard_layout_data)sizeof(efi_keyboard_package_data)alignof(efi_keyboard_package_data)sizeof(efi_guid_data)alignof(efi_guid_data)sizeof(efi_string_info)alignof(efi_string_info)sizeof(efi_string_table *)alignof(efi_string_table *)sizeof(efi_hii_packagelist *)alignof(efi_hii_packagelist *)sizeof(efi_string_info *)alignof(efi_string_info *)sizeof(efi_keyboard_layout_data *)alignof(efi_keyboard_layout_data *)sizeof(efi_hii_package_header *)alignof(efi_hii_package_header *)sizeof(efi_hii_guid_package *)alignof(efi_hii_guid_package *)sizeof(efi_hii_strings_package *)alignof(efi_hii_strings_package *)sizeof(efi_hii_keyboard_package *)alignof(efi_hii_keyboard_package *)sizeof(efi_keyboard_package_data *)alignof(efi_keyboard_package_data *)sizeof(efi_guid_data *)alignof(efi_guid_data *)sizeof(IMAGE_DOS_HEADER *)alignof(IMAGE_DOS_HEADER *)sizeof(IMAGE_NT_HEADERS32 *)alignof(IMAGE_NT_HEADERS32 *)sizeof(IMAGE_SECTION_HEADER *)alignof(IMAGE_SECTION_HEADER *)sizeof(IMAGE_OPTIONAL_HEADER32 *)alignof(IMAGE_OPTIONAL_HEADER32 *)sizeof(IMAGE_NT_HEADERS64 *)alignof(IMAGE_NT_HEADERS64 *)sizeof(IMAGE_OPTIONAL_HEADER64 *)alignof(IMAGE_OPTIONAL_HEADER64 *)sizeof(IMAGE_DATA_DIRECTORY *)alignof(IMAGE_DATA_DIRECTORY *)sizeof(const IMAGE_BASE_RELOCATION)alignof(const IMAGE_BASE_RELOCATION)sizeof(const IMAGE_BASE_RELOCATION *)alignof(const IMAGE_BASE_RELOCATION *)sizeof(efi_mem_list)alignof(efi_mem_list)sizeof(efi_pool_allocation)alignof(efi_pool_allocation)sizeof(efi_mem_list *)alignof(efi_mem_list *)sizeof(efi_pool_allocation *)alignof(efi_pool_allocation *)sizeof(const char(*)[])alignof(const char(*)[])sizeof(efi_net_obj)alignof(efi_net_obj)sizeof(efi_net_obj *)alignof(efi_net_obj *)sizeof(efi_pxe *)alignof(efi_pxe *)sizeof(efi_pxe_packet *)alignof(efi_pxe_packet *)sizeof(efi_root_dp)alignof(efi_root_dp)sizeof(efi_root_dp *)alignof(efi_root_dp *)sizeof(const efi_device_path_to_text_protocol *)alignof(const efi_device_path_to_text_protocol *)sizeof(efi_device_path_to_text_protocol *)alignof(efi_device_path_to_text_protocol *)sizeof(const efi_device_path_utilities_protocol *)alignof(const efi_device_path_utilities_protocol *)sizeof(efi_device_path_utilities_protocol *)alignof(efi_device_path_utilities_protocol *)sizeof(const efi_unicode_collation_protocol *)alignof(const efi_unicode_collation_protocol *)sizeof(char[507])alignof(char[507])sizeof(efi_runtime_mmio_list)alignof(efi_runtime_mmio_list)sizeof(elf_rela)alignof(elf_rela)sizeof(uintptr_t *)alignof(uintptr_t *)sizeof(efi_runtime_mmio_list *)alignof(efi_runtime_mmio_list *)sizeof(elf_rela *)alignof(elf_rela *)sizeof(list_head **)alignof(list_head **)sizeof(int[25])alignof(int[25])sizeof(char[209])alignof(char[209])sizeof(elf_rel)alignof(elf_rel)sizeof(int[23])alignof(int[23])sizeof(int[18])alignof(int[18])sizeof(char[201])alignof(char[201])sizeof(int[13])alignof(int[13])sizeof(char[176])alignof(char[176])sizeof(smbios_header)alignof(smbios_header)sizeof(smbios_header *)alignof(smbios_header *)sizeof(smbios_write_type)alignof(smbios_write_type)sizeof(smbios_type127)alignof(smbios_type127)sizeof(smbios_type32)alignof(smbios_type32)sizeof(smbios_type4)alignof(smbios_type4)sizeof(smbios_type3)alignof(smbios_type3)sizeof(smbios_type2)alignof(smbios_type2)sizeof(smbios_type1)alignof(smbios_type1)sizeof(smbios_type0)alignof(smbios_type0)sizeof(smbios_entry)alignof(smbios_entry)sizeof(u8[5])alignof(u8[5])sizeof(const u16[128])alignof(const u16[128])sizeof(unsigned short[128])alignof(unsigned short[128])sizeof(const unsigned short **)alignof(const unsigned short **)sizeof(const char *const[125])alignof(const char *const[125])sizeof(char *[125])alignof(char *[125])sizeof(const s32 *)alignof(const s32 *)sizeof(const char *const[35])alignof(const char *const[35])sizeof(char *[35])alignof(char *[35])sizeof(const uint64_t *)alignof(const uint64_t *)sizeof(const char[35])alignof(const char[35])alignof(_ENTRY)sizeof(ENTRY *[])alignof(ENTRY *[])sizeof(entry *[])alignof(entry *[])sizeof(char[131])alignof(char[131])alignof(AvbCmdlineSubstList)sizeof(AvbCmdlineSubstList *)alignof(AvbCmdlineSubstList *)sizeof(const AvbCmdlineSubstList)alignof(const AvbCmdlineSubstList)sizeof(const AvbCmdlineSubstList *)alignof(const AvbCmdlineSubstList *)sizeof(AvbSHA512Ctx)alignof(AvbSHA512Ctx)sizeof(AvbSHA256Ctx)alignof(AvbSHA256Ctx)sizeof(AvbSHA512Ctx *)alignof(AvbSHA512Ctx *)sizeof(AvbSHA256Ctx *)alignof(AvbSHA256Ctx *)sizeof(uint64_t[8])alignof(uint64_t[8])sizeof(uint8_t[128])alignof(uint8_t[128])sizeof(AvbAlgorithmData[7])alignof(AvbAlgorithmData[7])sizeof(AvbAlgorithmData *)alignof(AvbAlgorithmData *)sizeof(const uint8_t[224])alignof(const uint8_t[224])sizeof(unsigned char[224])alignof(unsigned char[224])sizeof(const uint8_t[480])alignof(const uint8_t[480])sizeof(unsigned char[480])alignof(unsigned char[480])sizeof(const uint8_t[992])alignof(const uint8_t[992])sizeof(unsigned char[992])alignof(unsigned char[992])sizeof(const uint8_t[192])alignof(const uint8_t[192])sizeof(const uint8_t[448])alignof(const uint8_t[448])sizeof(unsigned char[448])alignof(unsigned char[448])sizeof(const uint8_t[960])alignof(const uint8_t[960])sizeof(unsigned char[960])alignof(unsigned char[960])sizeof(SetDescriptorData)alignof(SetDescriptorData)sizeof(AvbDescriptorForeachFunc *)alignof(AvbDescriptorForeachFunc *)sizeof(SetDescriptorData *)alignof(SetDescriptorData *)sizeof(PropertyIteratorData)alignof(PropertyIteratorData)sizeof(PropertyIteratorData *)alignof(PropertyIteratorData *)alignof(IAvbKey)sizeof(IAvbKey *)alignof(IAvbKey *)sizeof(const IAvbKey)alignof(const IAvbKey)sizeof(const IAvbKey *)alignof(const IAvbKey *)sizeof(uint32_t[64])alignof(uint32_t[64])sizeof(const uint32_t[64])alignof(const uint32_t[64])sizeof(const uint32_t[8])alignof(const uint32_t[8])sizeof(uint64_t[80])alignof(uint64_t[80])sizeof(unsigned long long[80])alignof(unsigned long long[80])sizeof(const uint64_t[80])alignof(const uint64_t[80])sizeof(const uint64_t[8])alignof(const uint64_t[8])sizeof(AvbAlgorithmType *)alignof(AvbAlgorithmType *)sizeof(char[82])alignof(char[82])sizeof(const char *[32])alignof(const char *[32])sizeof(char *[32])alignof(char *[32])sizeof(size_t[32])alignof(size_t[32])sizeof(unsigned long[32])alignof(unsigned long[32])sizeof(fdt_reserve_entry *)alignof(fdt_reserve_entry *)sizeof(const fdt_reserve_entry)alignof(const fdt_reserve_entry)sizeof(const fdt_reserve_entry *)alignof(const fdt_reserve_entry *)sizeof(fdt_subnode_stack *)alignof(fdt_subnode_stack *)sizeof(fdt_region_ptrs *)alignof(fdt_region_ptrs *)sizeof(const fdt_node_header)alignof(const fdt_node_header)sizeof(const fdt_node_header *)alignof(const fdt_node_header *)sizeof(fdt_node_header *)alignof(fdt_node_header *)sizeof(fdt_property **)alignof(fdt_property **)sizeof(fdt_errtabent)alignof(fdt_errtabent)sizeof(fdt_errtabent[18])alignof(fdt_errtabent[18])sizeof(fdt_errtabent *)alignof(fdt_errtabent *)sizeof(fdt_errtabent[])alignof(fdt_errtabent[])sizeof(list_head *[21])alignof(list_head *[21])sizeof(const phys_addr_t)alignof(const phys_addr_t)sizeof(BYTE)alignof(BYTE)sizeof(const unsigned char *const)alignof(const unsigned char *const)sizeof(const BYTE)alignof(const BYTE)sizeof(const BYTE *)alignof(const BYTE *)sizeof(const BYTE *const)alignof(const BYTE *const)sizeof(BYTE *)alignof(BYTE *)sizeof(BYTE *const)alignof(BYTE *const)sizeof(const size_t[])alignof(const size_t[])sizeof(const size_t[8])alignof(const size_t[8])sizeof(earlyEnd_directive)alignof(earlyEnd_directive)sizeof(endCondition_directive)alignof(endCondition_directive)sizeof(dict_directive)alignof(dict_directive)sizeof(lz4_block_header)alignof(lz4_block_header)sizeof(lz4_frame_header)alignof(lz4_frame_header)sizeof(const lz4_frame_header)alignof(const lz4_frame_header)sizeof(const lz4_frame_header *)alignof(const lz4_frame_header *)sizeof(lz4_frame_header *)alignof(lz4_frame_header *)sizeof(ptrdiff_t *)alignof(ptrdiff_t *)sizeof(U64)alignof(U64)sizeof(S32)alignof(S32)alignof(U32)alignof(U16)sizeof(Byte *)alignof(Byte *)sizeof(Byte[16384])alignof(Byte[16384])sizeof(Byte[20])alignof(Byte[20])sizeof(const Byte)alignof(const Byte)sizeof(const Byte *)alignof(const Byte *)sizeof(ELzmaDummy)alignof(ELzmaDummy)sizeof(const CLzmaProps)alignof(const CLzmaProps)sizeof(const CLzmaProps *)alignof(const CLzmaProps *)sizeof(const CLzmaDec)alignof(const CLzmaDec)sizeof(const CLzmaDec *)alignof(const CLzmaDec *)sizeof(const UInt32)alignof(const UInt32)sizeof(const UInt32 *)alignof(const UInt32 *)sizeof(unsigned char *const)alignof(unsigned char *const)sizeof(const unsigned char[9])alignof(const unsigned char[9])sizeof(MD5Context *)alignof(MD5Context *)sizeof(const __u32[16])alignof(const __u32[16])sizeof(property **)alignof(property **)sizeof(rb_augment_callbacks)alignof(rb_augment_callbacks)sizeof(const rb_augment_callbacks)alignof(const rb_augment_callbacks)sizeof(const rb_augment_callbacks *)alignof(const rb_augment_callbacks *)sizeof(rb_augment_callbacks *)alignof(rb_augment_callbacks *)sizeof(uint32_t[])alignof(uint32_t[])sizeof(const rsa_public_key)alignof(const rsa_public_key)sizeof(const rsa_public_key *)alignof(const rsa_public_key *)sizeof(rsa_public_key *)alignof(rsa_public_key *)sizeof(const uint32_t[])alignof(const uint32_t[])sizeof(image_region[3])alignof(image_region[3])sizeof(image_region[2])alignof(image_region[2])sizeof(const unsigned char[64])alignof(const unsigned char[64])sizeof(const uint8_t[15])alignof(const uint8_t[15])sizeof(unsigned char[15])alignof(unsigned char[15])sizeof(const uint8_t[64])alignof(const uint8_t[64])sizeof(const uint8_t[19])alignof(const uint8_t[19])sizeof(unsigned char[19])alignof(unsigned char[19])sizeof(smbios_entry *)alignof(smbios_entry *)sizeof(smbios_write_type[])alignof(smbios_write_type[])sizeof(smbios_write_type[7])alignof(smbios_write_type[7])sizeof(..(*[7])(..))alignof(..(*[7])(..))sizeof(smbios_write_type *)alignof(smbios_write_type *)sizeof(smbios_type127 *)alignof(smbios_type127 *)sizeof(smbios_type32 *)alignof(smbios_type32 *)sizeof(smbios_type4 *)alignof(smbios_type4 *)sizeof(smbios_type3 *)alignof(smbios_type3 *)sizeof(smbios_type2 *)alignof(smbios_type2 *)sizeof(smbios_type1 *)alignof(smbios_type1 *)sizeof(smbios_type0 *)alignof(smbios_type0 *)sizeof(const u8[14])alignof(const u8[14])sizeof(const u8[22])alignof(const u8[22])sizeof(unsigned char[22])alignof(unsigned char[22])sizeof(const u8[11])alignof(const u8[11])sizeof(unsigned char[11])alignof(unsigned char[11])sizeof(const u8[10])alignof(const u8[10])sizeof(const u8[30])alignof(const u8[30])sizeof(unsigned char[30])alignof(unsigned char[30])sizeof(const u8[34])alignof(const u8[34])sizeof(u8[30])alignof(u8[30])sizeof(const u8[101])alignof(const u8[101])sizeof(unsigned char[101])alignof(unsigned char[101])sizeof(uuid *)alignof(uuid *)sizeof(int[7])alignof(int[7])sizeof(xxh64_state)alignof(xxh64_state)sizeof(xxh32_state)alignof(xxh32_state)sizeof(const xxh64_state)alignof(const xxh64_state)sizeof(const xxh64_state *)alignof(const xxh64_state *)sizeof(xxh64_state *)alignof(xxh64_state *)sizeof(uint64_t[4])alignof(uint64_t[4])sizeof(const uint8_t *const)alignof(const uint8_t *const)sizeof(const xxh32_state)alignof(const xxh32_state)sizeof(const xxh32_state *)alignof(const xxh32_state *)sizeof(xxh32_state *)alignof(xxh32_state *)alignof(ush)sizeof(uch)alignof(uch)sizeof(ushf)alignof(ushf)sizeof(uchf)alignof(uchf)sizeof(ulg)alignof(ulg)sizeof(tree_desc_s)alignof(tree_desc_s)sizeof(ct_data_s)alignof(ct_data_s)sizeof(IPos)alignof(IPos)alignof(Pos)sizeof(Posf)alignof(Posf)sizeof(static_tree_desc_s)alignof(static_tree_desc_s)sizeof(static_tree_desc)alignof(static_tree_desc)sizeof(ct_data)alignof(ct_data)alignof(deflate_state)sizeof(tree_desc)alignof(tree_desc)sizeof(ushf *)alignof(ushf *)sizeof(uchf *)alignof(uchf *)sizeof(uch[573])alignof(uch[573])sizeof(unsigned char[573])alignof(unsigned char[573])sizeof(int[573])alignof(int[573])sizeof(ush[16])alignof(ush[16])sizeof(static_tree_desc *)alignof(static_tree_desc *)sizeof(static_tree_desc_s *)alignof(static_tree_desc_s *)sizeof(ct_data *)alignof(ct_data *)sizeof(ct_data_s *)alignof(ct_data_s *)sizeof(ct_data_s[39])alignof(ct_data_s[39])sizeof(ct_data_s[61])alignof(ct_data_s[61])sizeof(ct_data_s[573])alignof(ct_data_s[573])sizeof(Posf *)alignof(Posf *)sizeof(uch[512])alignof(uch[512])sizeof(uch[])alignof(uch[])sizeof(uch[256])alignof(uch[256])sizeof(deflate_state *)alignof(deflate_state *)sizeof(charf *)alignof(charf *)sizeof(block_state)alignof(block_state)sizeof(compress_func)alignof(compress_func)sizeof(config_s)alignof(config_s)sizeof(config)alignof(config)sizeof(uch *)alignof(uch *)sizeof(const config)alignof(const config)sizeof(const config[10])alignof(const config[10])sizeof(config_s[10])alignof(config_s[10])sizeof(const config *)alignof(const config *)sizeof(config_s *)alignof(config_s *)sizeof(const int[29])alignof(const int[29])sizeof(int[29])alignof(int[29])sizeof(const int[30])alignof(const int[30])sizeof(int[30])alignof(int[30])sizeof(tree_desc *)alignof(tree_desc *)sizeof(tree_desc_s *)alignof(tree_desc_s *)sizeof(ct_data[288])alignof(ct_data[288])sizeof(ct_data_s[288])alignof(ct_data_s[288])sizeof(ct_data[30])alignof(ct_data[30])sizeof(ct_data_s[30])alignof(ct_data_s[30])sizeof(const uch)alignof(const uch)sizeof(const uch[19])alignof(const uch[19])sizeof(const uch *)alignof(const uch *)sizeof(const ct_data)alignof(const ct_data)sizeof(const ct_data *)alignof(const ct_data *)sizeof(ush *)alignof(ush *)sizeof(const intf)alignof(const intf)sizeof(const intf *)alignof(const intf *)sizeof(const int[19])alignof(const int[19])sizeof(int[19])alignof(int[19])sizeof(codetype)alignof(codetype)sizeof(code)alignof(code)sizeof(code *)alignof(code *)sizeof(code **)alignof(code **)sizeof(inflate_mode)alignof(inflate_mode)sizeof(inflate_state)alignof(inflate_state)sizeof(code[2048])alignof(code[2048])sizeof(struct <unnamed>[2048])alignof(struct <unnamed>[2048])sizeof(unsigned short[288])alignof(unsigned short[288])sizeof(unsigned short[320])alignof(unsigned short[320])sizeof(const code)alignof(const code)sizeof(const code *)alignof(const code *)sizeof(const code[32])alignof(const code[32])sizeof(const code[512])alignof(const code[512])sizeof(struct <unnamed>[512])alignof(struct <unnamed>[512])sizeof(inflate_state *)alignof(inflate_state *)sizeof(const unsigned short[31])alignof(const unsigned short[31])sizeof(unsigned short[31])alignof(unsigned short[31])sizeof(const unsigned short[32])alignof(const unsigned short[32])sizeof(const unsigned short[19])alignof(const unsigned short[19])sizeof(unsigned short[19])alignof(unsigned short[19])sizeof(ZSTD_DCtx_s)alignof(ZSTD_DCtx_s)sizeof(ZSTD_DDict_s)alignof(ZSTD_DDict_s)sizeof(ZSTD_DStream_s)alignof(ZSTD_DStream_s)alignof(ZSTD_customMem)sizeof(ZSTD_freeFunction)alignof(ZSTD_freeFunction)sizeof(ZSTD_allocFunction)alignof(ZSTD_allocFunction)sizeof(seqStore_t)alignof(seqStore_t)sizeof(ZSTD_match_t)alignof(ZSTD_match_t)sizeof(ZSTD_optimal_t)alignof(ZSTD_optimal_t)sizeof(seqDef_s)alignof(seqDef_s)sizeof(seqDef)alignof(seqDef)alignof(S16)sizeof(const seqStore_t)alignof(const seqStore_t)sizeof(const seqStore_t *)alignof(const seqStore_t *)alignof(ZSTD_stack)sizeof(ZSTD_stats_s)alignof(ZSTD_stats_s)sizeof(ZSTD_stats_t)alignof(ZSTD_stats_t)sizeof(symbolEncodingType_e)alignof(symbolEncodingType_e)sizeof(blockType_e)alignof(blockType_e)sizeof(U32 *)alignof(U32 *)sizeof(ZSTD_match_t *)alignof(ZSTD_match_t *)sizeof(ZSTD_optimal_t *)alignof(ZSTD_optimal_t *)sizeof(seqDef *)alignof(seqDef *)sizeof(seqDef_s *)alignof(seqDef_s *)sizeof(U32[3])alignof(U32[3])sizeof(const U32)alignof(const U32)sizeof(const S16)alignof(const S16)sizeof(const S16[29])alignof(const S16[29])sizeof(signed short[29])alignof(signed short[29])sizeof(const S16[53])alignof(const S16[53])sizeof(signed short[53])alignof(signed short[53])sizeof(const U32[53])alignof(const U32[53])sizeof(unsigned int[53])alignof(unsigned int[53])sizeof(const S16[36])alignof(const S16[36])sizeof(signed short[36])alignof(signed short[36])sizeof(const U32[36])alignof(const U32[36])sizeof(unsigned int[36])alignof(unsigned int[36])sizeof(const size_t[4])alignof(const size_t[4])sizeof(unsigned long[4])alignof(unsigned long[4])sizeof(const U32[3])alignof(const U32[3])sizeof(ZSTD_dStreamStage)alignof(ZSTD_dStreamStage)alignof(HUF_DTable)sizeof(ZSTD_entropyTables_t)alignof(ZSTD_entropyTables_t)sizeof(blockProperties_t)alignof(blockProperties_t)alignof(seq_t)sizeof(uPtrDiff)alignof(uPtrDiff)sizeof(seqState_t)alignof(seqState_t)sizeof(FSE_DState_t)alignof(FSE_DState_t)sizeof(BIT_DStream_t)alignof(BIT_DStream_t)alignof(FSE_DTable)sizeof(FSE_decode_t4)alignof(FSE_decode_t4)sizeof(FSE_decode_t)alignof(FSE_decode_t)sizeof(ZSTD_dStage)alignof(ZSTD_dStage)sizeof(BYTE[18])alignof(BYTE[18])sizeof(const ZSTD_customMem)alignof(const ZSTD_customMem)sizeof(ZSTD_customMem *)alignof(ZSTD_customMem *)sizeof(ZSTD_DDict *const)alignof(ZSTD_DDict *const)sizeof(void *const)alignof(void *const)sizeof(HUF_DTable[4097])alignof(HUF_DTable[4097])sizeof(unsigned int[4097])alignof(unsigned int[4097])sizeof(HUF_DTable *)alignof(HUF_DTable *)sizeof(const void *const)alignof(const void *const)sizeof(ZSTD_entropyTables_t *)alignof(ZSTD_entropyTables_t *)sizeof(const FSE_DTable)alignof(const FSE_DTable)sizeof(const FSE_DTable *)alignof(const FSE_DTable *)sizeof(FSE_DTable[513])alignof(FSE_DTable[513])sizeof(unsigned int[513])alignof(unsigned int[513])sizeof(FSE_DTable[257])alignof(FSE_DTable[257])sizeof(unsigned int[257])alignof(unsigned int[257])sizeof(const HUF_DTable)alignof(const HUF_DTable)sizeof(const HUF_DTable *)alignof(const HUF_DTable *)sizeof(const U32 *)alignof(const U32 *)sizeof(U64[384])alignof(U64[384])sizeof(unsigned long long[384])alignof(unsigned long long[384])sizeof(U64 *)alignof(U64 *)sizeof(short[29])alignof(short[29])sizeof(short *)alignof(short *)sizeof(FSE_DTable *)alignof(FSE_DTable *)sizeof(const short)alignof(const short)sizeof(const short *)alignof(const short *)sizeof(short[53])alignof(short[53])sizeof(short[36])alignof(short[36])sizeof(blockProperties_t *)alignof(blockProperties_t *)sizeof(seq_t *)alignof(seq_t *)sizeof(size_t[3])alignof(size_t[3])sizeof(BIT_DStream_t *)alignof(BIT_DStream_t *)sizeof(FSE_DState_t *)alignof(FSE_DState_t *)sizeof(BIT_DStream_status)alignof(BIT_DStream_status)sizeof(seqState_t *)alignof(seqState_t *)sizeof(const seq_t)alignof(const seq_t)sizeof(const BYTE **)alignof(const BYTE **)sizeof(const int[8])alignof(const int[8])sizeof(const U32[8])alignof(const U32[8])sizeof(const U32[])alignof(const U32[])sizeof(const FSE_DState_t)alignof(const FSE_DState_t)sizeof(const FSE_DState_t *)alignof(const FSE_DState_t *)sizeof(const U32[29])alignof(const U32[29])sizeof(unsigned int[29])alignof(unsigned int[29])sizeof(const symbolEncodingType_e)alignof(const symbolEncodingType_e)sizeof(const FSE_DTable **)alignof(const FSE_DTable **)sizeof(const FSE_decode_t4)alignof(const FSE_decode_t4)sizeof(const FSE_decode_t4 *)alignof(const FSE_decode_t4 *)sizeof(unsigned int **)alignof(unsigned int **)sizeof(union <unnamed> *)alignof(union <unnamed> *)sizeof(const FSE_decode_t4[65])alignof(const FSE_decode_t4[65])sizeof(union <unnamed>[65])alignof(union <unnamed>[65])sizeof(const FSE_decode_t4[33])alignof(const FSE_decode_t4[33])sizeof(union <unnamed>[33])alignof(union <unnamed>[33])sizeof(S16 *)alignof(S16 *)sizeof(BYTE[131080])alignof(BYTE[131080])sizeof(unsigned char[131080])alignof(unsigned char[131080])sizeof(FSE_DTableHeader)alignof(FSE_DTableHeader)sizeof(const FSE_DTableHeader)alignof(const FSE_DTableHeader)sizeof(const FSE_DTableHeader *)alignof(const FSE_DTableHeader *)sizeof(FSE_DTableHeader *)alignof(FSE_DTableHeader *)sizeof(FSE_DTableHeader *const)alignof(FSE_DTableHeader *const)sizeof(FSE_decode_t *)alignof(FSE_decode_t *)sizeof(FSE_decode_t *const)alignof(FSE_decode_t *const)sizeof(U16 *)alignof(U16 *)sizeof(ERR_enum)alignof(ERR_enum)sizeof(const U64)alignof(const U64)sizeof(const U64 *)alignof(const U64 *)sizeof(const U16)alignof(const U16)sizeof(const U16 *)alignof(const U16 *)sizeof(iPtrDiff)alignof(iPtrDiff)sizeof(S64)alignof(S64)sizeof(BIT_CStream_t)alignof(BIT_CStream_t)sizeof(const BIT_DStream_t)alignof(const BIT_DStream_t)sizeof(const BIT_DStream_t *)alignof(const BIT_DStream_t *)sizeof(const unsigned int[27])alignof(const unsigned int[27])sizeof(unsigned int[27])alignof(unsigned int[27])sizeof(BIT_CStream_t *)alignof(BIT_CStream_t *)sizeof(FSE_CState_t)alignof(FSE_CState_t)sizeof(FSE_symbolCompressionTransform)alignof(FSE_symbolCompressionTransform)sizeof(FSE_CTable)alignof(FSE_CTable)sizeof(const FSE_decode_t)alignof(const FSE_decode_t)sizeof(const FSE_decode_t *)alignof(const FSE_decode_t *)sizeof(const FSE_DTableHeader *const)alignof(const FSE_DTableHeader *const)sizeof(const FSE_CState_t)alignof(const FSE_CState_t)sizeof(const FSE_CState_t *)alignof(const FSE_CState_t *)sizeof(FSE_CState_t *)alignof(FSE_CState_t *)sizeof(const FSE_symbolCompressionTransform)alignof(const FSE_symbolCompressionTransform)sizeof(const FSE_symbolCompressionTransform *)alignof(const FSE_symbolCompressionTransform *)sizeof(const U16 *const)alignof(const U16 *const)sizeof(const FSE_CTable)alignof(const FSE_CTable)sizeof(const FSE_CTable *)alignof(const FSE_CTable *)sizeof(FSE_CTable *)alignof(FSE_CTable *)sizeof(HUF_repeat)alignof(HUF_repeat)sizeof(HUF_CElt_s)alignof(HUF_CElt_s)sizeof(HUF_CElt)alignof(HUF_CElt)sizeof(HUF_CElt *)alignof(HUF_CElt *)sizeof(HUF_CElt_s *)alignof(HUF_CElt_s *)sizeof(HUF_repeat *)alignof(HUF_repeat *)sizeof(const HUF_CElt)alignof(const HUF_CElt)sizeof(const HUF_CElt *)alignof(const HUF_CElt *)sizeof(algo_time_t)alignof(algo_time_t)alignof(DTableDesc)alignof(HUF_DEltX4)alignof(sortedSymbol_t)sizeof(U32[13])alignof(U32[13])alignof(rankValCol_t)sizeof(U32[12][13])alignof(U32[12][13])sizeof(rankVal_t)alignof(rankVal_t)sizeof(HUF_DEltX2)alignof(HUF_DEltX2)sizeof(const algo_time_t)alignof(const algo_time_t)sizeof(const algo_time_t[3])alignof(const algo_time_t[3])sizeof(const algo_time_t[16][3])alignof(const algo_time_t[16][3])sizeof(struct <unnamed>[3])alignof(struct <unnamed>[3])sizeof(struct <unnamed>[16][3])alignof(struct <unnamed>[16][3])sizeof(const algo_time_t(*)[3])alignof(const algo_time_t(*)[3])sizeof(struct <unnamed>(*)[3])alignof(struct <unnamed>(*)[3])sizeof(const algo_time_t *)alignof(const algo_time_t *)sizeof(const DTableDesc)alignof(const DTableDesc)sizeof(const HUF_DEltX4)alignof(const HUF_DEltX4)sizeof(const HUF_DEltX4 *)alignof(const HUF_DEltX4 *)sizeof(const HUF_DEltX4 *const)alignof(const HUF_DEltX4 *const)sizeof(rankValCol_t *)alignof(rankValCol_t *)sizeof(unsigned int[13])alignof(unsigned int[13])sizeof(unsigned int(*)[13])alignof(unsigned int(*)[13])sizeof(sortedSymbol_t *)alignof(sortedSymbol_t *)sizeof(U32 *const)alignof(U32 *const)sizeof(HUF_DEltX4 *)alignof(HUF_DEltX4 *)sizeof(const sortedSymbol_t)alignof(const sortedSymbol_t)sizeof(const sortedSymbol_t *)alignof(const sortedSymbol_t *)sizeof(U32(*)[13])alignof(U32(*)[13])sizeof(HUF_DEltX4 *const)alignof(HUF_DEltX4 *const)sizeof(DTableDesc *)alignof(DTableDesc *)sizeof(const HUF_DEltX2)alignof(const HUF_DEltX2)sizeof(const HUF_DEltX2 *)alignof(const HUF_DEltX2 *)sizeof(const HUF_DEltX2 *const)alignof(const HUF_DEltX2 *const)sizeof(BIT_DStream_t *const)alignof(BIT_DStream_t *const)sizeof(HUF_DEltX2 *)alignof(HUF_DEltX2 *)sizeof(HUF_DEltX2 *const)alignof(HUF_DEltX2 *const)sizeof(decompressionAlgo)alignof(decompressionAlgo)sizeof(unsigned int[12][13])alignof(unsigned int[12][13])sizeof(ZSTD_stack *)alignof(ZSTD_stack *)sizeof(uchar[1552])alignof(uchar[1552])sizeof(unsigned char[1552])alignof(unsigned char[1552])sizeof(dhcp_state_t)alignof(dhcp_state_t)sizeof(bootp_hdr)alignof(bootp_hdr)sizeof(bootp_hdr *)alignof(bootp_hdr *)sizeof(char(*)[32])alignof(char(*)[32])sizeof(char(*)[1024])alignof(char(*)[1024])sizeof(const uchar[8])alignof(const uchar[8])sizeof(const signed char)alignof(const signed char)sizeof(const signed char *)alignof(const signed char *)alignof(header)sizeof(dns_query_type)alignof(dns_query_type)sizeof(header *)alignof(header *)sizeof(unsigned char(*)[1])alignof(unsigned char(*)[1])sizeof(eth_device_priv)alignof(eth_device_priv)sizeof(eth_uclass_priv)alignof(eth_uclass_priv)sizeof(eth_device_priv *)alignof(eth_device_priv *)sizeof(eth_uclass_priv *)alignof(eth_uclass_priv *)sizeof(fastboot_header)alignof(fastboot_header)sizeof(fastboot_header *)alignof(fastboot_header *)sizeof(char[1020])alignof(char[1020])sizeof(ll_state_t)alignof(ll_state_t)sizeof(mdio_mux_ch_data)alignof(mdio_mux_ch_data)sizeof(mdio_mux_perdev_priv)alignof(mdio_mux_perdev_priv)sizeof(mdio_mux_perdev_priv *)alignof(mdio_mux_perdev_priv *)sizeof(mdio_mux_ch_data *)alignof(mdio_mux_ch_data *)sizeof(mdio_perdev_priv *)alignof(mdio_perdev_priv *)sizeof(rpc_t)alignof(rpc_t)sizeof(rpc_accept_stat)alignof(rpc_accept_stat)sizeof(uint8_t[1152])alignof(uint8_t[1152])sizeof(unsigned char[1152])alignof(unsigned char[1152])sizeof(uint32_t[282])alignof(uint32_t[282])sizeof(unsigned int[282])alignof(unsigned int[282])sizeof(uint32_t[1])alignof(uint32_t[1])sizeof(sntp_pkt_t)alignof(sntp_pkt_t)sizeof(hole)alignof(hole)sizeof(vlan_ethernet_hdr *)alignof(vlan_ethernet_hdr *)sizeof(e802_hdr *)alignof(e802_hdr *)sizeof(hole *)alignof(hole *)sizeof(uchar[16384])alignof(uchar[16384])sizeof(uchar[7696])alignof(uchar[7696])sizeof(unsigned char[7696])alignof(unsigned char[7696])sizeof(char[2048])alignof(char[2048])sizeof(rpc_t *)alignof(rpc_t *)sizeof(uint32_t[1024])alignof(uint32_t[1024])sizeof(unsigned int[1024])alignof(unsigned int[1024])sizeof(uint32_t(*)[1])alignof(uint32_t(*)[1])sizeof(unsigned int(*)[1])alignof(unsigned int(*)[1])sizeof(sntp_pkt_t *)alignof(sntp_pkt_t *)sizeof(check)alignof(check)sizeof(dt_info)alignof(dt_info)alignof(cell_t)sizeof(node)alignof(node)sizeof(provider)alignof(provider)sizeof(marker)alignof(marker)sizeof(bus_type)alignof(bus_type)sizeof(label)alignof(label)sizeof(checkstatus)alignof(checkstatus)sizeof(check *)alignof(check *)sizeof(dt_info *)alignof(dt_info *)sizeof(node *)alignof(node *)sizeof(check_fn)alignof(check_fn)sizeof(check *[59])alignof(check *[59])sizeof(check **)alignof(check **)alignof(data)sizeof(const provider)alignof(const provider)sizeof(const provider *)alignof(const provider *)sizeof(provider *)alignof(provider *)sizeof(marker *)alignof(marker *)sizeof(markertype)alignof(markertype)sizeof(const bus_type)alignof(const bus_type)sizeof(const bus_type *)alignof(const bus_type *)sizeof(bus_type *)alignof(bus_type *)sizeof(cell_t *)alignof(cell_t *)sizeof(char[125])alignof(char[125])sizeof(label *)alignof(label *)sizeof(node **)alignof(node **)sizeof(check *[])alignof(check *[])sizeof(check *[0])alignof(check *[0])sizeof(check *[1])alignof(check *[1])sizeof(check *[3])alignof(check *[3])sizeof(check *[2])alignof(check *[2])sizeof(fdt16_t *)alignof(fdt16_t *)sizeof(marker **)alignof(marker **)sizeof(YYSTYPE)alignof(YYSTYPE)sizeof(reserve_info)alignof(reserve_info)sizeof(yytokentype)alignof(yytokentype)sizeof(reserve_info *)alignof(reserve_info *)sizeof(srcpos)alignof(srcpos)sizeof(yy_size_t)alignof(yy_size_t)sizeof(yy_buffer_state)alignof(yy_buffer_state)sizeof(yy_buffer_state *)alignof(yy_buffer_state *)sizeof(YY_BUFFER_STATE)alignof(YY_BUFFER_STATE)sizeof(flex_uint8_t)alignof(flex_uint8_t)sizeof(YY_CHAR)alignof(YY_CHAR)sizeof(yy_state_type)alignof(yy_state_type)sizeof(flex_int16_t)alignof(flex_int16_t)sizeof(flex_int32_t)alignof(flex_int32_t)sizeof(srcpos *)alignof(srcpos *)sizeof(srcfile_state)alignof(srcfile_state)sizeof(srcfile_state *)alignof(srcfile_state *)sizeof(YY_BUFFER_STATE *)alignof(YY_BUFFER_STATE *)sizeof(yy_buffer_state **)alignof(yy_buffer_state **)sizeof(const flex_int16_t)alignof(const flex_int16_t)sizeof(const flex_int16_t[166])alignof(const flex_int16_t[166])sizeof(signed short[166])alignof(signed short[166])sizeof(const flex_int16_t *)alignof(const flex_int16_t *)sizeof(const flex_int16_t[449])alignof(const flex_int16_t[449])sizeof(signed short[449])alignof(signed short[449])sizeof(const flex_int16_t[180])alignof(const flex_int16_t[180])sizeof(signed short[180])alignof(signed short[180])sizeof(const YY_CHAR)alignof(const YY_CHAR)sizeof(const YY_CHAR[48])alignof(const YY_CHAR[48])sizeof(const YY_CHAR *)alignof(const YY_CHAR *)sizeof(const YY_CHAR[256])alignof(const YY_CHAR[256])sizeof(yy_trans_info)alignof(yy_trans_info)sizeof(flex_uint32_t)alignof(flex_uint32_t)sizeof(flex_uint16_t)alignof(flex_uint16_t)sizeof(flex_int8_t)alignof(flex_int8_t)sizeof(yyalloc)alignof(yyalloc)sizeof(yytype_int16)alignof(yytype_int16)sizeof(yytype_uint8)alignof(yytype_uint8)sizeof(yytype_int8)alignof(yytype_int8)sizeof(yytype_uint16)alignof(yytype_uint16)sizeof(yytype_int16 *)alignof(yytype_int16 *)sizeof(yytype_int16[200])alignof(yytype_int16[200])sizeof(short[200])alignof(short[200])sizeof(YYSTYPE *)alignof(YYSTYPE *)sizeof(YYSTYPE[200])alignof(YYSTYPE[200])sizeof(srcpos[200])alignof(srcpos[200])sizeof(yyalloc *)alignof(yyalloc *)sizeof(const yytype_int8)alignof(const yytype_int8)sizeof(const yytype_int8[])alignof(const yytype_int8[])sizeof(const yytype_int8[151])alignof(const yytype_int8[151])sizeof(signed char[151])alignof(signed char[151])sizeof(const yytype_int8 *)alignof(const yytype_int8 *)sizeof(const yytype_uint8)alignof(const yytype_uint8)sizeof(const yytype_uint8[])alignof(const yytype_uint8[])sizeof(const yytype_uint8[280])alignof(const yytype_uint8[280])sizeof(unsigned char[280])alignof(unsigned char[280])sizeof(const yytype_uint8 *)alignof(const yytype_uint8 *)sizeof(const YYSTYPE)alignof(const YYSTYPE)sizeof(const YYSTYPE *)alignof(const YYSTYPE *)sizeof(const YYSTYPE *const)alignof(const YYSTYPE *const)sizeof(const srcpos)alignof(const srcpos)sizeof(const srcpos *)alignof(const srcpos *)sizeof(const srcpos *const)alignof(const srcpos *const)sizeof(const yytype_int16)alignof(const yytype_int16)sizeof(const yytype_int16[])alignof(const yytype_int16[])sizeof(const yytype_int16[141])alignof(const yytype_int16[141])sizeof(short[141])alignof(short[141])sizeof(const yytype_int16 *)alignof(const yytype_int16 *)sizeof(const yytype_uint8[141])alignof(const yytype_uint8[141])sizeof(unsigned char[141])alignof(unsigned char[141])sizeof(const yytype_uint8[151])alignof(const yytype_uint8[151])sizeof(unsigned char[151])alignof(unsigned char[151])sizeof(const yytype_uint8[86])alignof(const yytype_uint8[86])sizeof(unsigned char[86])alignof(unsigned char[86])sizeof(label **)alignof(label **)sizeof(const yytype_int8[30])alignof(const yytype_int8[30])sizeof(signed char[30])alignof(signed char[30])sizeof(const yytype_int16[30])alignof(const yytype_int16[30])sizeof(short[30])alignof(short[30])sizeof(srcpos[3])alignof(srcpos[3])sizeof(const yytype_uint16)alignof(const yytype_uint16)sizeof(const yytype_uint16[])alignof(const yytype_uint16[])sizeof(const yytype_uint16[86])alignof(const yytype_uint16[86])sizeof(unsigned short[86])alignof(unsigned short[86])sizeof(const yytype_uint16 *)alignof(const yytype_uint16 *)sizeof(const char *const[79])alignof(const char *const[79])sizeof(char *[79])alignof(char *[79])sizeof(short[])alignof(short[])sizeof(signed char[])alignof(signed char[])sizeof(__sig_atomic_t)alignof(__sig_atomic_t)sizeof(__syscall_ulong_t)alignof(__syscall_ulong_t)sizeof(__fsword_t)alignof(__fsword_t)sizeof(__rlim64_t)alignof(__rlim64_t)sizeof(__rlim_t)alignof(__rlim_t)sizeof(__mbstate_t)alignof(__mbstate_t)sizeof(__FILE)alignof(__FILE)sizeof(_IO_wide_data)alignof(_IO_wide_data)sizeof(_IO_codecvt)alignof(_IO_codecvt)sizeof(_IO_lock_t)alignof(_IO_lock_t)sizeof(_IO_marker)alignof(_IO_marker)sizeof(_IO_wide_data *)alignof(_IO_wide_data *)sizeof(_IO_codecvt *)alignof(_IO_codecvt *)sizeof(_IO_lock_t *)alignof(_IO_lock_t *)sizeof(_IO_marker *)alignof(_IO_marker *)sizeof(__locale_data)alignof(__locale_data)sizeof(__locale_data *)alignof(__locale_data *)sizeof(__locale_data *[13])alignof(__locale_data *[13])sizeof(idtype_t)alignof(idtype_t)sizeof(sigset_t)alignof(sigset_t)sizeof(__pthread_rwlock_arch_t)alignof(__pthread_rwlock_arch_t)sizeof(__pthread_internal_list)alignof(__pthread_internal_list)sizeof(__pthread_list_t)alignof(__pthread_list_t)sizeof(__pthread_cond_s)alignof(__pthread_cond_s)sizeof(__pthread_mutex_s)alignof(__pthread_mutex_s)sizeof(__pthread_internal_list *)alignof(__pthread_internal_list *)sizeof(pthread_attr_t)alignof(pthread_attr_t)sizeof(pthread_barrierattr_t)alignof(pthread_barrierattr_t)sizeof(pthread_barrier_t)alignof(pthread_barrier_t)sizeof(pthread_spinlock_t)alignof(pthread_spinlock_t)sizeof(pthread_rwlockattr_t)alignof(pthread_rwlockattr_t)sizeof(pthread_rwlock_t)alignof(pthread_rwlock_t)sizeof(pthread_cond_t)alignof(pthread_cond_t)sizeof(pthread_mutex_t)alignof(pthread_mutex_t)sizeof(pthread_once_t)alignof(pthread_once_t)sizeof(pthread_key_t)alignof(pthread_key_t)sizeof(pthread_condattr_t)alignof(pthread_condattr_t)sizeof(pthread_mutexattr_t)alignof(pthread_mutexattr_t)sizeof(pthread_t)alignof(pthread_t)sizeof(const __int32_t)alignof(const __int32_t)sizeof(const __int32_t *)alignof(const __int32_t *)sizeof(const __int32_t **)alignof(const __int32_t **)sizeof(signed int **)alignof(signed int **)sizeof(const option[])alignof(const option[])sizeof(option[])alignof(option[])sizeof(off_t *)alignof(off_t *)sizeof(const option[22])alignof(const option[22])sizeof(option[22])alignof(option[22])sizeof(char[166])alignof(char[166])sizeof(inbuf)alignof(inbuf)sizeof(version_info)alignof(version_info)sizeof(emitter)alignof(emitter)sizeof(inbuf *)alignof(inbuf *)sizeof(version_info[5])alignof(version_info[5])sizeof(version_info *)alignof(version_info *)sizeof(emitter *)alignof(emitter *)sizeof(data *)alignof(data *)sizeof(version_info[])alignof(version_info[])sizeof(const node)alignof(const node)sizeof(const node *)alignof(const node *)sizeof(const node *const)alignof(const node *const)sizeof(const node *const *)alignof(const node *const *)sizeof(const property *const)alignof(const property *const)sizeof(const property *const *)alignof(const property *const *)sizeof(reserve_info **)alignof(reserve_info **)sizeof(const reserve_info)alignof(const reserve_info)sizeof(const reserve_info *)alignof(const reserve_info *)sizeof(const reserve_info *const)alignof(const reserve_info *const)sizeof(const reserve_info *const *)alignof(const reserve_info *const *)sizeof(cookie_close_function_t)alignof(cookie_close_function_t)sizeof(cookie_seek_function_t)alignof(cookie_seek_function_t)sizeof(cookie_write_function_t)alignof(cookie_write_function_t)sizeof(cookie_read_function_t)alignof(cookie_read_function_t)sizeof(cookie_close_function_t *)alignof(cookie_close_function_t *)sizeof(cookie_seek_function_t *)alignof(cookie_seek_function_t *)sizeof(cookie_write_function_t *)alignof(cookie_write_function_t *)sizeof(cookie_read_function_t *)alignof(cookie_read_function_t *)sizeof(error_t)alignof(error_t)sizeof(search_path)alignof(search_path)sizeof(search_path *)alignof(search_path *)sizeof(search_path **)alignof(search_path **)sizeof(FILE **)alignof(FILE **)sizeof(_IO_FILE **)alignof(_IO_FILE **)sizeof(unit_test *)alignof(unit_test *)sizeof(char[330])alignof(char[330])sizeof(const char[79])alignof(const char[79])sizeof(mutate_func)alignof(mutate_func)sizeof(buf_state)alignof(buf_state)sizeof(const char[351])alignof(const char[351])sizeof(char[351])alignof(char[351])sizeof(buf_state *)alignof(buf_state *)sizeof(char[116])alignof(char[116])sizeof(char[136])alignof(char[136])sizeof(const char[277])alignof(const char[277])sizeof(char[277])alignof(char[277])sizeof(const char[335])alignof(const char[335])sizeof(char[335])alignof(char[335])sizeof(const char[230])alignof(const char[230])sizeof(char[230])alignof(char[230])sizeof(const char[241])alignof(const char[241])sizeof(adc_channel[4])alignof(adc_channel[4])sizeof(const char[37])alignof(const char[37])sizeof(adc_channel[])alignof(adc_channel[])sizeof(char[89])alignof(char[89])sizeof(dm_test_parent_platdata)alignof(dm_test_parent_platdata)sizeof(dm_test_parent_platdata *)alignof(dm_test_parent_platdata *)sizeof(dm_test_state *)alignof(dm_test_state *)sizeof(dm_test_parent_data *)alignof(dm_test_parent_data *)sizeof(char[208])alignof(char[208])sizeof(udevice *[10])alignof(udevice *[10])sizeof(dm_test_pdata *)alignof(dm_test_pdata *)sizeof(const dm_test_pdata)alignof(const dm_test_pdata)sizeof(const dm_test_pdata[3])alignof(const dm_test_pdata[3])sizeof(dm_test_pdata[3])alignof(dm_test_pdata[3])sizeof(const dm_test_pdata *)alignof(const dm_test_pdata *)sizeof(dm_test_uclass_perdev_priv *)alignof(dm_test_uclass_perdev_priv *)sizeof(dm_test_perdev_uc_pdata *)alignof(dm_test_perdev_uc_pdata *)sizeof(const dm_test_pdata[])alignof(const dm_test_pdata[])sizeof(dm_test_pdata[])alignof(dm_test_pdata[])sizeof(u8(*)[512])alignof(u8(*)[512])sizeof(char[4][18])alignof(char[4][18])sizeof(char(*)[18])alignof(char(*)[18])sizeof(udevice *[4])alignof(udevice *[4])sizeof(u8[201])alignof(u8[201])sizeof(unsigned char[201])alignof(unsigned char[201])sizeof(u8[100])alignof(u8[100])sizeof(char[149])alignof(char[149])sizeof(char[162])alignof(char[162])sizeof(const char[34])alignof(const char[34])sizeof(layout)alignof(layout)sizeof(layout *)alignof(layout *)sizeof(setting)alignof(setting)sizeof(udevice *[2])alignof(udevice *[2])sizeof(const setting)alignof(const setting)sizeof(const setting[2])alignof(const setting[2])sizeof(setting[2])alignof(setting[2])sizeof(const setting *)alignof(const setting *)sizeof(setting *)alignof(setting *)sizeof(const char *[2])alignof(const char *[2])sizeof(const char *[5][2])alignof(const char *[5][2])sizeof(char *[5][2])alignof(char *[5][2])sizeof(const char *(*)[2])alignof(const char *(*)[2])sizeof(char *(*)[2])alignof(char *(*)[2])sizeof(const char[46])alignof(const char[46])sizeof(const char[39])alignof(const char[39])sizeof(const char[40])alignof(const char[40])sizeof(const setting[])alignof(const setting[])sizeof(setting[])alignof(setting[])sizeof(u8[96])alignof(u8[96])sizeof(unsigned char[96])alignof(unsigned char[96])sizeof(char[105])alignof(char[105])sizeof(test_tee_vars)alignof(test_tee_vars)sizeof(test_tee_vars *)alignof(test_tee_vars *)sizeof(const test_ops)alignof(const test_ops)sizeof(const test_ops *)alignof(const test_ops *)sizeof(test_ops *)alignof(test_ops *)sizeof(dm_testprobe_pdata)alignof(dm_testprobe_pdata)sizeof(fdt32_t[2])alignof(fdt32_t[2])sizeof(dm_testprobe_pdata *)alignof(dm_testprobe_pdata *)sizeof(char[220])alignof(char[220])sizeof(char[372])alignof(char[372])sizeof(const phys_size_t)alignof(const phys_size_t)sizeof(u8[49])alignof(u8[49])sizeof(unsigned char[49])alignof(unsigned char[49])sizeof(log_category_t[4])alignof(log_category_t[4])sizeof(log_category_t[3])alignof(log_category_t[3])sizeof(char[400])alignof(char[400])sizeof(u8[9])alignof(u8[9])sizeof(const u16[7])alignof(const u16[7])sizeof(const u16[9])alignof(const u16[9])sizeof(unsigned short[9])alignof(unsigned short[9])sizeof(const u16[4])alignof(const u16[4])sizeof(const u16[5])alignof(const u16[5])sizeof(unsigned short[5])alignof(unsigned short[5])sizeof(const u16[6])alignof(const u16[6])sizeof(u16[4])alignof(u16[4])sizeof(u16[10])alignof(u16[10])sizeof(image_type_params)alignof(image_type_params)sizeof(image_tool_params)alignof(image_tool_params)sizeof(content_info)alignof(content_info)sizeof(image_tool_params *)alignof(image_tool_params *)sizeof(image_type_params *)alignof(image_type_params *)sizeof(content_info *)alignof(content_info *)sizeof(image_type_params *[])alignof(image_type_params *[])sizeof(ais_header)alignof(ais_header)sizeof(aisimage_fld_types)alignof(aisimage_fld_types)sizeof(ais_file_cmd)alignof(ais_file_cmd)sizeof(ais_cmd_jmpclose)alignof(ais_cmd_jmpclose)sizeof(ais_cmd_func)alignof(ais_cmd_func)sizeof(ais_cmd_load)alignof(ais_cmd_load)sizeof(asn1_string_st)alignof(asn1_string_st)sizeof(ossl_uintmax_t)alignof(ossl_uintmax_t)sizeof(ossl_intmax_t)alignof(ossl_intmax_t)sizeof(ossl_store_search_st)alignof(ossl_store_search_st)sizeof(OSSL_STORE_SEARCH)alignof(OSSL_STORE_SEARCH)sizeof(ossl_store_info_st)alignof(ossl_store_info_st)sizeof(OSSL_STORE_INFO)alignof(OSSL_STORE_INFO)sizeof(ct_policy_eval_ctx_st)alignof(ct_policy_eval_ctx_st)sizeof(CT_POLICY_EVAL_CTX)alignof(CT_POLICY_EVAL_CTX)sizeof(ctlog_store_st)alignof(ctlog_store_st)sizeof(CTLOG_STORE)alignof(CTLOG_STORE)sizeof(ctlog_st)alignof(ctlog_st)sizeof(CTLOG)alignof(CTLOG)sizeof(sct_ctx_st)alignof(sct_ctx_st)sizeof(SCT_CTX)alignof(SCT_CTX)sizeof(sct_st)alignof(sct_st)sizeof(SCT)alignof(SCT)sizeof(ocsp_responder_id_st)alignof(ocsp_responder_id_st)sizeof(OCSP_RESPID)alignof(OCSP_RESPID)sizeof(ocsp_response_st)alignof(ocsp_response_st)sizeof(OCSP_RESPONSE)alignof(OCSP_RESPONSE)sizeof(ocsp_req_ctx_st)alignof(ocsp_req_ctx_st)sizeof(OCSP_REQ_CTX)alignof(OCSP_REQ_CTX)sizeof(crypto_ex_data_st)alignof(crypto_ex_data_st)sizeof(CRYPTO_EX_DATA)alignof(CRYPTO_EX_DATA)sizeof(NAME_CONSTRAINTS_st)alignof(NAME_CONSTRAINTS_st)sizeof(NAME_CONSTRAINTS)alignof(NAME_CONSTRAINTS)sizeof(ISSUING_DIST_POINT_st)alignof(ISSUING_DIST_POINT_st)sizeof(ISSUING_DIST_POINT)alignof(ISSUING_DIST_POINT)sizeof(DIST_POINT_st)alignof(DIST_POINT_st)sizeof(DIST_POINT)alignof(DIST_POINT)sizeof(AUTHORITY_KEYID_st)alignof(AUTHORITY_KEYID_st)sizeof(AUTHORITY_KEYID)alignof(AUTHORITY_KEYID)sizeof(X509_POLICY_CACHE_st)alignof(X509_POLICY_CACHE_st)sizeof(X509_POLICY_CACHE)alignof(X509_POLICY_CACHE)sizeof(X509_POLICY_TREE_st)alignof(X509_POLICY_TREE_st)sizeof(X509_POLICY_TREE)alignof(X509_POLICY_TREE)sizeof(X509_POLICY_LEVEL_st)alignof(X509_POLICY_LEVEL_st)sizeof(X509_POLICY_LEVEL)alignof(X509_POLICY_LEVEL)sizeof(X509_POLICY_NODE_st)alignof(X509_POLICY_NODE_st)sizeof(X509_POLICY_NODE)alignof(X509_POLICY_NODE)sizeof(comp_method_st)alignof(comp_method_st)sizeof(COMP_METHOD)alignof(COMP_METHOD)sizeof(comp_ctx_st)alignof(comp_ctx_st)sizeof(COMP_CTX)alignof(COMP_CTX)sizeof(ssl_ctx_st)alignof(ssl_ctx_st)sizeof(SSL_CTX)alignof(SSL_CTX)sizeof(ssl_st)alignof(ssl_st)sizeof(SSL)alignof(SSL)sizeof(engine_st)alignof(engine_st)sizeof(ENGINE)alignof(ENGINE)sizeof(ui_method_st)alignof(ui_method_st)sizeof(UI_METHOD)alignof(UI_METHOD)sizeof(ui_st)alignof(ui_st)sizeof(UI)alignof(UI)sizeof(ossl_init_settings_st)alignof(ossl_init_settings_st)sizeof(OPENSSL_INIT_SETTINGS)alignof(OPENSSL_INIT_SETTINGS)sizeof(conf_st)alignof(conf_st)sizeof(CONF)alignof(CONF)sizeof(v3_ext_ctx)alignof(v3_ext_ctx)sizeof(X509V3_CTX)alignof(X509V3_CTX)sizeof(pkcs8_priv_key_info_st)alignof(pkcs8_priv_key_info_st)sizeof(PKCS8_PRIV_KEY_INFO)alignof(PKCS8_PRIV_KEY_INFO)sizeof(x509_sig_info_st)alignof(x509_sig_info_st)sizeof(X509_SIG_INFO)alignof(X509_SIG_INFO)sizeof(X509_VERIFY_PARAM_st)alignof(X509_VERIFY_PARAM_st)sizeof(X509_VERIFY_PARAM)alignof(X509_VERIFY_PARAM)sizeof(x509_lookup_method_st)alignof(x509_lookup_method_st)sizeof(X509_LOOKUP_METHOD)alignof(X509_LOOKUP_METHOD)sizeof(x509_lookup_st)alignof(x509_lookup_st)sizeof(X509_LOOKUP)alignof(X509_LOOKUP)sizeof(x509_object_st)alignof(x509_object_st)sizeof(X509_OBJECT)alignof(X509_OBJECT)sizeof(x509_store_ctx_st)alignof(x509_store_ctx_st)sizeof(X509_STORE_CTX)alignof(X509_STORE_CTX)sizeof(x509_store_st)alignof(x509_store_st)sizeof(X509_STORE)alignof(X509_STORE)sizeof(X509_pubkey_st)alignof(X509_pubkey_st)sizeof(X509_PUBKEY)alignof(X509_PUBKEY)sizeof(X509_name_st)alignof(X509_name_st)sizeof(X509_NAME)alignof(X509_NAME)sizeof(x509_revoked_st)alignof(x509_revoked_st)sizeof(X509_REVOKED)alignof(X509_REVOKED)sizeof(x509_crl_method_st)alignof(x509_crl_method_st)sizeof(X509_CRL_METHOD)alignof(X509_CRL_METHOD)sizeof(X509_crl_st)alignof(X509_crl_st)sizeof(X509_CRL)alignof(X509_CRL)sizeof(X509_ALGOR)alignof(X509_ALGOR)sizeof(x509_st)alignof(x509_st)sizeof(X509)alignof(X509)sizeof(ssl_dane_st)alignof(ssl_dane_st)sizeof(SSL_DANE)alignof(SSL_DANE)sizeof(rand_drbg_st)alignof(rand_drbg_st)sizeof(RAND_DRBG)alignof(RAND_DRBG)sizeof(RAND_METHOD)alignof(RAND_METHOD)sizeof(ec_key_method_st)alignof(ec_key_method_st)sizeof(EC_KEY_METHOD)alignof(EC_KEY_METHOD)sizeof(ec_key_st)alignof(ec_key_st)sizeof(EC_KEY)alignof(EC_KEY)sizeof(rsa_meth_st)alignof(rsa_meth_st)sizeof(RSA_METHOD)alignof(RSA_METHOD)sizeof(rsa_st)alignof(rsa_st)sizeof(RSA)alignof(RSA)sizeof(dsa_method)alignof(dsa_method)sizeof(DSA_METHOD)alignof(DSA_METHOD)sizeof(dsa_st)alignof(dsa_st)sizeof(DSA)alignof(DSA)sizeof(dh_method)alignof(dh_method)sizeof(DH_METHOD)alignof(DH_METHOD)sizeof(dh_st)alignof(dh_st)sizeof(DH)alignof(DH)sizeof(hmac_ctx_st)alignof(hmac_ctx_st)sizeof(HMAC_CTX)alignof(HMAC_CTX)sizeof(evp_Encode_Ctx_st)alignof(evp_Encode_Ctx_st)sizeof(EVP_ENCODE_CTX)alignof(EVP_ENCODE_CTX)sizeof(evp_pkey_ctx_st)alignof(evp_pkey_ctx_st)sizeof(EVP_PKEY_CTX)alignof(EVP_PKEY_CTX)sizeof(evp_pkey_method_st)alignof(evp_pkey_method_st)sizeof(EVP_PKEY_METHOD)alignof(EVP_PKEY_METHOD)sizeof(evp_pkey_asn1_method_st)alignof(evp_pkey_asn1_method_st)sizeof(EVP_PKEY_ASN1_METHOD)alignof(EVP_PKEY_ASN1_METHOD)sizeof(evp_pkey_st)alignof(evp_pkey_st)sizeof(EVP_PKEY)alignof(EVP_PKEY)sizeof(evp_md_ctx_st)alignof(evp_md_ctx_st)sizeof(EVP_MD_CTX)alignof(EVP_MD_CTX)sizeof(evp_md_st)alignof(evp_md_st)sizeof(EVP_MD)alignof(EVP_MD)sizeof(evp_cipher_ctx_st)alignof(evp_cipher_ctx_st)sizeof(EVP_CIPHER_CTX)alignof(EVP_CIPHER_CTX)sizeof(evp_cipher_st)alignof(evp_cipher_st)sizeof(EVP_CIPHER)alignof(EVP_CIPHER)sizeof(BUF_MEM)alignof(BUF_MEM)sizeof(bn_gencb_st)alignof(bn_gencb_st)sizeof(BN_GENCB)alignof(BN_GENCB)sizeof(bn_recp_ctx_st)alignof(bn_recp_ctx_st)sizeof(BN_RECP_CTX)alignof(BN_RECP_CTX)sizeof(bn_mont_ctx_st)alignof(bn_mont_ctx_st)sizeof(BN_MONT_CTX)alignof(BN_MONT_CTX)sizeof(bn_blinding_st)alignof(bn_blinding_st)sizeof(BN_BLINDING)alignof(BN_BLINDING)sizeof(bignum_ctx)alignof(bignum_ctx)sizeof(BN_CTX)alignof(BN_CTX)sizeof(bignum_st)alignof(bignum_st)sizeof(BIGNUM)alignof(BIGNUM)sizeof(bio_st)alignof(bio_st)sizeof(BIO)alignof(BIO)sizeof(dane_st)alignof(dane_st)sizeof(asn1_sctx_st)alignof(asn1_sctx_st)sizeof(ASN1_SCTX)alignof(ASN1_SCTX)sizeof(asn1_pctx_st)alignof(asn1_pctx_st)sizeof(ASN1_PCTX)alignof(ASN1_PCTX)sizeof(ASN1_ITEM_st)alignof(ASN1_ITEM_st)sizeof(ASN1_ITEM)alignof(ASN1_ITEM)sizeof(asn1_object_st)alignof(asn1_object_st)sizeof(ASN1_OBJECT)alignof(ASN1_OBJECT)sizeof(ASN1_NULL)alignof(ASN1_NULL)sizeof(ASN1_BOOLEAN)alignof(ASN1_BOOLEAN)sizeof(ASN1_STRING)alignof(ASN1_STRING)sizeof(ASN1_UTF8STRING)alignof(ASN1_UTF8STRING)sizeof(ASN1_VISIBLESTRING)alignof(ASN1_VISIBLESTRING)sizeof(ASN1_GENERALIZEDTIME)alignof(ASN1_GENERALIZEDTIME)sizeof(ASN1_TIME)alignof(ASN1_TIME)sizeof(ASN1_UTCTIME)alignof(ASN1_UTCTIME)sizeof(ASN1_BMPSTRING)alignof(ASN1_BMPSTRING)sizeof(ASN1_UNIVERSALSTRING)alignof(ASN1_UNIVERSALSTRING)sizeof(ASN1_GENERALSTRING)alignof(ASN1_GENERALSTRING)sizeof(ASN1_IA5STRING)alignof(ASN1_IA5STRING)sizeof(ASN1_T61STRING)alignof(ASN1_T61STRING)sizeof(ASN1_PRINTABLESTRING)alignof(ASN1_PRINTABLESTRING)sizeof(ASN1_OCTET_STRING)alignof(ASN1_OCTET_STRING)sizeof(ASN1_BIT_STRING)alignof(ASN1_BIT_STRING)sizeof(ASN1_ENUMERATED)alignof(ASN1_ENUMERATED)sizeof(ASN1_INTEGER)alignof(ASN1_INTEGER)sizeof(stack_st)alignof(stack_st)sizeof(OPENSSL_STACK)alignof(OPENSSL_STACK)sizeof(OPENSSL_sk_compfunc)alignof(OPENSSL_sk_compfunc)sizeof(OPENSSL_sk_freefunc)alignof(OPENSSL_sk_freefunc)sizeof(OPENSSL_sk_copyfunc)alignof(OPENSSL_sk_copyfunc)sizeof(const OPENSSL_STACK)alignof(const OPENSSL_STACK)sizeof(const OPENSSL_STACK *)alignof(const OPENSSL_STACK *)sizeof(stack_st *)alignof(stack_st *)sizeof(OPENSSL_STACK *)alignof(OPENSSL_STACK *)sizeof(const void *const *)alignof(const void *const *)sizeof(sk_OPENSSL_BLOCK_compfunc)alignof(sk_OPENSSL_BLOCK_compfunc)sizeof(stack_st_OPENSSL_BLOCK)alignof(stack_st_OPENSSL_BLOCK)sizeof(stack_st_OPENSSL_BLOCK *)alignof(stack_st_OPENSSL_BLOCK *)sizeof(const stack_st_OPENSSL_BLOCK)alignof(const stack_st_OPENSSL_BLOCK)sizeof(const stack_st_OPENSSL_BLOCK *)alignof(const stack_st_OPENSSL_BLOCK *)sizeof(sk_OPENSSL_BLOCK_copyfunc)alignof(sk_OPENSSL_BLOCK_copyfunc)sizeof(sk_OPENSSL_BLOCK_freefunc)alignof(sk_OPENSSL_BLOCK_freefunc)sizeof(sk_OPENSSL_CSTRING_compfunc)alignof(sk_OPENSSL_CSTRING_compfunc)sizeof(stack_st_OPENSSL_CSTRING)alignof(stack_st_OPENSSL_CSTRING)sizeof(stack_st_OPENSSL_CSTRING *)alignof(stack_st_OPENSSL_CSTRING *)sizeof(const stack_st_OPENSSL_CSTRING)alignof(const stack_st_OPENSSL_CSTRING)sizeof(const stack_st_OPENSSL_CSTRING *)alignof(const stack_st_OPENSSL_CSTRING *)sizeof(sk_OPENSSL_CSTRING_copyfunc)alignof(sk_OPENSSL_CSTRING_copyfunc)sizeof(sk_OPENSSL_CSTRING_freefunc)alignof(sk_OPENSSL_CSTRING_freefunc)sizeof(sk_OPENSSL_STRING_compfunc)alignof(sk_OPENSSL_STRING_compfunc)sizeof(stack_st_OPENSSL_STRING)alignof(stack_st_OPENSSL_STRING)sizeof(stack_st_OPENSSL_STRING *)alignof(stack_st_OPENSSL_STRING *)sizeof(const stack_st_OPENSSL_STRING)alignof(const stack_st_OPENSSL_STRING)sizeof(const stack_st_OPENSSL_STRING *)alignof(const stack_st_OPENSSL_STRING *)sizeof(sk_OPENSSL_STRING_copyfunc)alignof(sk_OPENSSL_STRING_copyfunc)sizeof(sk_OPENSSL_STRING_freefunc)alignof(sk_OPENSSL_STRING_freefunc)sizeof(OPENSSL_BLOCK)alignof(OPENSSL_BLOCK)sizeof(OPENSSL_CSTRING)alignof(OPENSSL_CSTRING)sizeof(OPENSSL_STRING)alignof(OPENSSL_STRING)sizeof(sched_param)alignof(sched_param)sizeof(cpu_set_t)alignof(cpu_set_t)sizeof(__cpu_mask)alignof(__cpu_mask)sizeof(cpu_set_t *)alignof(cpu_set_t *)sizeof(const cpu_set_t)alignof(const cpu_set_t)sizeof(const cpu_set_t *)alignof(const cpu_set_t *)sizeof(__cpu_mask[16])alignof(__cpu_mask[16])sizeof(const sched_param)alignof(const sched_param)sizeof(const sched_param *)alignof(const sched_param *)sizeof(sched_param *)alignof(sched_param *)sizeof(__pthread_unwind_buf_t)alignof(__pthread_unwind_buf_t)sizeof(_pthread_cleanup_buffer)alignof(_pthread_cleanup_buffer)sizeof(__clockid_t *)alignof(__clockid_t *)sizeof(pthread_key_t *)alignof(pthread_key_t *)sizeof(pthread_barrierattr_t *)alignof(pthread_barrierattr_t *)sizeof(const pthread_barrierattr_t)alignof(const pthread_barrierattr_t)sizeof(const pthread_barrierattr_t *)alignof(const pthread_barrierattr_t *)sizeof(const pthread_barrierattr_t *__restrict__)alignof(const pthread_barrierattr_t *__restrict__)sizeof(pthread_barrier_t *)alignof(pthread_barrier_t *)sizeof(pthread_barrier_t *__restrict__)alignof(pthread_barrier_t *__restrict__)sizeof(pthread_spinlock_t *)alignof(pthread_spinlock_t *)sizeof(pthread_condattr_t *)alignof(pthread_condattr_t *)sizeof(const pthread_condattr_t)alignof(const pthread_condattr_t)sizeof(const pthread_condattr_t *)alignof(const pthread_condattr_t *)sizeof(const pthread_condattr_t *__restrict__)alignof(const pthread_condattr_t *__restrict__)sizeof(__clockid_t *__restrict__)alignof(__clockid_t *__restrict__)sizeof(pthread_cond_t *)alignof(pthread_cond_t *)sizeof(pthread_cond_t *__restrict__)alignof(pthread_cond_t *__restrict__)sizeof(pthread_mutex_t *)alignof(pthread_mutex_t *)sizeof(pthread_mutex_t *__restrict__)alignof(pthread_mutex_t *__restrict__)sizeof(pthread_rwlockattr_t *)alignof(pthread_rwlockattr_t *)sizeof(const pthread_rwlockattr_t)alignof(const pthread_rwlockattr_t)sizeof(const pthread_rwlockattr_t *)alignof(const pthread_rwlockattr_t *)sizeof(const pthread_rwlockattr_t *__restrict__)alignof(const pthread_rwlockattr_t *__restrict__)sizeof(pthread_rwlock_t *)alignof(pthread_rwlock_t *)sizeof(pthread_rwlock_t *__restrict__)alignof(pthread_rwlock_t *__restrict__)sizeof(pthread_mutexattr_t *)alignof(pthread_mutexattr_t *)sizeof(const pthread_mutexattr_t)alignof(const pthread_mutexattr_t)sizeof(const pthread_mutexattr_t *)alignof(const pthread_mutexattr_t *)sizeof(const pthread_mutexattr_t *__restrict__)alignof(const pthread_mutexattr_t *__restrict__)sizeof(const pthread_mutex_t)alignof(const pthread_mutex_t)sizeof(const pthread_mutex_t *)alignof(const pthread_mutex_t *)sizeof(const pthread_mutex_t *__restrict__)alignof(const pthread_mutex_t *__restrict__)sizeof(__jmp_buf_tag *)alignof(__jmp_buf_tag *)sizeof(__pthread_unwind_buf_t *)alignof(__pthread_unwind_buf_t *)sizeof(pthread_once_t *)alignof(pthread_once_t *)sizeof(sched_param *__restrict__)alignof(sched_param *__restrict__)sizeof(pthread_attr_t *)alignof(pthread_attr_t *)sizeof(const pthread_attr_t)alignof(const pthread_attr_t)sizeof(const pthread_attr_t *)alignof(const pthread_attr_t *)sizeof(const pthread_attr_t *__restrict__)alignof(const pthread_attr_t *__restrict__)sizeof(void **__restrict__)alignof(void **__restrict__)sizeof(pthread_attr_t *__restrict__)alignof(pthread_attr_t *__restrict__)sizeof(const sched_param *__restrict__)alignof(const sched_param *__restrict__)sizeof(pthread_t *)alignof(pthread_t *)sizeof(pthread_t *__restrict__)alignof(pthread_t *__restrict__)sizeof(__pthread_cleanup_frame)alignof(__pthread_cleanup_frame)sizeof(void *[4])alignof(void *[4])sizeof(_pthread_cleanup_buffer *)alignof(_pthread_cleanup_buffer *)sizeof(CRYPTO_THREAD_ID)alignof(CRYPTO_THREAD_ID)sizeof(CRYPTO_THREAD_LOCAL)alignof(CRYPTO_THREAD_LOCAL)sizeof(CRYPTO_ONCE)alignof(CRYPTO_ONCE)sizeof(CRYPTO_EX_DATA *)alignof(CRYPTO_EX_DATA *)sizeof(CRYPTO_EX_free)alignof(CRYPTO_EX_free)sizeof(const CRYPTO_EX_DATA)alignof(const CRYPTO_EX_DATA)sizeof(const CRYPTO_EX_DATA *)alignof(const CRYPTO_EX_DATA *)sizeof(CRYPTO_EX_dup)alignof(CRYPTO_EX_dup)sizeof(CRYPTO_EX_new)alignof(CRYPTO_EX_new)sizeof(CRYPTO_RWLOCK)alignof(CRYPTO_RWLOCK)sizeof(CRYPTO_THREAD_LOCAL *)alignof(CRYPTO_THREAD_LOCAL *)sizeof(CRYPTO_ONCE *)alignof(CRYPTO_ONCE *)sizeof(OPENSSL_INIT_SETTINGS *)alignof(OPENSSL_INIT_SETTINGS *)sizeof(ossl_init_settings_st *)alignof(ossl_init_settings_st *)sizeof(const OPENSSL_INIT_SETTINGS)alignof(const OPENSSL_INIT_SETTINGS)sizeof(const OPENSSL_INIT_SETTINGS *)alignof(const OPENSSL_INIT_SETTINGS *)sizeof(crypto_ex_data_st *)alignof(crypto_ex_data_st *)sizeof(CRYPTO_EX_new *)alignof(CRYPTO_EX_new *)sizeof(CRYPTO_EX_dup *)alignof(CRYPTO_EX_dup *)sizeof(CRYPTO_EX_free *)alignof(CRYPTO_EX_free *)sizeof(sk_void_compfunc)alignof(sk_void_compfunc)sizeof(stack_st_void)alignof(stack_st_void)sizeof(stack_st_void *)alignof(stack_st_void *)sizeof(const stack_st_void)alignof(const stack_st_void)sizeof(const stack_st_void *)alignof(const stack_st_void *)sizeof(sk_void_copyfunc)alignof(sk_void_copyfunc)sizeof(sk_void_freefunc)alignof(sk_void_freefunc)sizeof(CRYPTO_RWLOCK *)alignof(CRYPTO_RWLOCK *)sizeof(crypto_threadid_st)alignof(crypto_threadid_st)sizeof(CRYPTO_THREADID)alignof(CRYPTO_THREADID)sizeof(CRYPTO_dynlock)alignof(CRYPTO_dynlock)sizeof(BIO *)alignof(BIO *)sizeof(BIO_info_cb)alignof(BIO_info_cb)sizeof(bio_method_st)alignof(bio_method_st)sizeof(BIO_METHOD)alignof(BIO_METHOD)sizeof(bio_addr_st)alignof(bio_addr_st)sizeof(BIO_ADDR)alignof(BIO_ADDR)sizeof(BIO_sock_info_u)alignof(BIO_sock_info_u)sizeof(BIO_sock_info_type)alignof(BIO_sock_info_type)sizeof(bio_addrinfo_st)alignof(bio_addrinfo_st)sizeof(BIO_ADDRINFO)alignof(BIO_ADDRINFO)sizeof(BIO_lookup_type)alignof(BIO_lookup_type)sizeof(BIO_hostserv_priorities)alignof(BIO_hostserv_priorities)sizeof(asn1_ps_func)alignof(asn1_ps_func)sizeof(BIO_callback_fn_ex)alignof(BIO_callback_fn_ex)sizeof(BIO_callback_fn)alignof(BIO_callback_fn)sizeof(BIO_METHOD *)alignof(BIO_METHOD *)sizeof(bio_method_st *)alignof(bio_method_st *)sizeof(BIO_info_cb *)alignof(BIO_info_cb *)sizeof(bio_st *)alignof(bio_st *)sizeof(const BIO_METHOD)alignof(const BIO_METHOD)sizeof(const BIO_METHOD *)alignof(const BIO_METHOD *)sizeof(BIO **)alignof(BIO **)sizeof(bio_st **)alignof(bio_st **)sizeof(BIO_ADDR *)alignof(BIO_ADDR *)sizeof(bio_addr_st *)alignof(bio_addr_st *)sizeof(const BIO_ADDR)alignof(const BIO_ADDR)sizeof(const BIO_ADDR *)alignof(const BIO_ADDR *)sizeof(BIO_sock_info_u *)alignof(BIO_sock_info_u *)sizeof(hostent)alignof(hostent)sizeof(hostent *)alignof(hostent *)sizeof(BIO_ADDRINFO *)alignof(BIO_ADDRINFO *)sizeof(BIO_ADDRINFO **)alignof(BIO_ADDRINFO **)sizeof(bio_addrinfo_st *)alignof(bio_addrinfo_st *)sizeof(bio_addrinfo_st **)alignof(bio_addrinfo_st **)sizeof(const BIO_ADDRINFO)alignof(const BIO_ADDRINFO)sizeof(const BIO_ADDRINFO *)alignof(const BIO_ADDRINFO *)sizeof(asn1_ps_func *)alignof(asn1_ps_func *)sizeof(asn1_ps_func **)alignof(asn1_ps_func **)sizeof(const BIO)alignof(const BIO)sizeof(const BIO *)alignof(const BIO *)sizeof(const BIO *const)alignof(const BIO *const)sizeof(const BIO *const *)alignof(const BIO *const *)sizeof(sk_BIO_compfunc)alignof(sk_BIO_compfunc)sizeof(stack_st_BIO)alignof(stack_st_BIO)sizeof(stack_st_BIO *)alignof(stack_st_BIO *)sizeof(const stack_st_BIO)alignof(const stack_st_BIO)sizeof(const stack_st_BIO *)alignof(const stack_st_BIO *)sizeof(sk_BIO_copyfunc)alignof(sk_BIO_copyfunc)sizeof(sk_BIO_freefunc)alignof(sk_BIO_freefunc)sizeof(bio_info_cb)alignof(bio_info_cb)sizeof(BIGNUM *)alignof(BIGNUM *)sizeof(bignum_st *)alignof(bignum_st *)sizeof(const BIGNUM)alignof(const BIGNUM)sizeof(const BIGNUM *)alignof(const BIGNUM *)sizeof(BN_CTX *)alignof(BN_CTX *)sizeof(bignum_ctx *)alignof(bignum_ctx *)sizeof(BN_RECP_CTX *)alignof(BN_RECP_CTX *)sizeof(bn_recp_ctx_st *)alignof(bn_recp_ctx_st *)sizeof(BN_BLINDING *)alignof(BN_BLINDING *)sizeof(bn_blinding_st *)alignof(bn_blinding_st *)sizeof(BN_MONT_CTX *)alignof(BN_MONT_CTX *)sizeof(bn_mont_ctx_st *)alignof(bn_mont_ctx_st *)sizeof(const BN_BLINDING)alignof(const BN_BLINDING)sizeof(const BN_BLINDING *)alignof(const BN_BLINDING *)sizeof(BN_MONT_CTX **)alignof(BN_MONT_CTX **)sizeof(bn_mont_ctx_st **)alignof(bn_mont_ctx_st **)sizeof(BN_GENCB *)alignof(BN_GENCB *)sizeof(bn_gencb_st *)alignof(bn_gencb_st *)sizeof(BIGNUM **)alignof(BIGNUM **)sizeof(bignum_st **)alignof(bignum_st **)sizeof(ASN1_VALUE_st)alignof(ASN1_VALUE_st)sizeof(ASN1_VALUE)alignof(ASN1_VALUE)sizeof(ASN1_TEMPLATE_st)alignof(ASN1_TEMPLATE_st)sizeof(ASN1_TEMPLATE)alignof(ASN1_TEMPLATE)sizeof(asn1_type_st)alignof(asn1_type_st)sizeof(ASN1_TYPE)alignof(ASN1_TYPE)sizeof(asn1_string_table_st)alignof(asn1_string_table_st)sizeof(ASN1_STRING_TABLE)alignof(ASN1_STRING_TABLE)sizeof(i2d_of_void)alignof(i2d_of_void)sizeof(d2i_of_void)alignof(d2i_of_void)sizeof(BIT_STRING_BITNAME_st)alignof(BIT_STRING_BITNAME_st)sizeof(BIT_STRING_BITNAME)alignof(BIT_STRING_BITNAME)sizeof(const ASN1_ITEM)alignof(const ASN1_ITEM)sizeof(const ASN1_ITEM *)alignof(const ASN1_ITEM *)sizeof(ASN1_ITEM_st *)alignof(ASN1_ITEM_st *)sizeof(ASN1_VALUE *)alignof(ASN1_VALUE *)sizeof(ASN1_VALUE_st *)alignof(ASN1_VALUE_st *)sizeof(stack_st_X509_ALGOR)alignof(stack_st_X509_ALGOR)sizeof(stack_st_X509_ALGOR *)alignof(stack_st_X509_ALGOR *)sizeof(ASN1_SCTX *)alignof(ASN1_SCTX *)sizeof(asn1_sctx_st *)alignof(asn1_sctx_st *)sizeof(const ASN1_TEMPLATE)alignof(const ASN1_TEMPLATE)sizeof(const ASN1_TEMPLATE *)alignof(const ASN1_TEMPLATE *)sizeof(ASN1_TEMPLATE_st *)alignof(ASN1_TEMPLATE_st *)sizeof(ASN1_PCTX *)alignof(ASN1_PCTX *)sizeof(asn1_pctx_st *)alignof(asn1_pctx_st *)sizeof(const ASN1_PCTX)alignof(const ASN1_PCTX)sizeof(const ASN1_PCTX *)alignof(const ASN1_PCTX *)sizeof(ASN1_TYPE *)alignof(ASN1_TYPE *)sizeof(asn1_type_st *)alignof(asn1_type_st *)sizeof(X509V3_CTX *)alignof(X509V3_CTX *)sizeof(v3_ext_ctx *)alignof(v3_ext_ctx *)sizeof(CONF *)alignof(CONF *)sizeof(conf_st *)alignof(conf_st *)sizeof(ASN1_VALUE **)alignof(ASN1_VALUE **)sizeof(ASN1_VALUE_st **)alignof(ASN1_VALUE_st **)sizeof(ASN1_STRING_TABLE *)alignof(ASN1_STRING_TABLE *)sizeof(asn1_string_table_st *)alignof(asn1_string_table_st *)sizeof(ASN1_STRING *)alignof(ASN1_STRING *)sizeof(asn1_string_st *)alignof(asn1_string_st *)sizeof(ASN1_STRING **)alignof(ASN1_STRING **)sizeof(asn1_string_st **)alignof(asn1_string_st **)sizeof(ASN1_OCTET_STRING *)alignof(ASN1_OCTET_STRING *)sizeof(ASN1_OCTET_STRING **)alignof(ASN1_OCTET_STRING **)sizeof(const ASN1_STRING)alignof(const ASN1_STRING)sizeof(const ASN1_STRING *)alignof(const ASN1_STRING *)sizeof(const ASN1_TYPE)alignof(const ASN1_TYPE)sizeof(const ASN1_TYPE *)alignof(const ASN1_TYPE *)sizeof(ASN1_UNIVERSALSTRING *)alignof(ASN1_UNIVERSALSTRING *)sizeof(const ASN1_TIME)alignof(const ASN1_TIME)sizeof(const ASN1_TIME *)alignof(const ASN1_TIME *)sizeof(const ASN1_GENERALIZEDTIME)alignof(const ASN1_GENERALIZEDTIME)sizeof(const ASN1_GENERALIZEDTIME *)alignof(const ASN1_GENERALIZEDTIME *)sizeof(const ASN1_UTCTIME)alignof(const ASN1_UTCTIME)sizeof(const ASN1_UTCTIME *)alignof(const ASN1_UTCTIME *)sizeof(i2d_of_void *)alignof(i2d_of_void *)sizeof(d2i_of_void *)alignof(d2i_of_void *)sizeof(const ASN1_ENUMERATED)alignof(const ASN1_ENUMERATED)sizeof(const ASN1_ENUMERATED *)alignof(const ASN1_ENUMERATED *)sizeof(ASN1_ENUMERATED *)alignof(ASN1_ENUMERATED *)sizeof(int64_t *)alignof(int64_t *)sizeof(signed long *)alignof(signed long *)sizeof(const ASN1_INTEGER)alignof(const ASN1_INTEGER)sizeof(const ASN1_INTEGER *)alignof(const ASN1_INTEGER *)sizeof(ASN1_INTEGER *)alignof(ASN1_INTEGER *)sizeof(ASN1_OBJECT *)alignof(ASN1_OBJECT *)sizeof(asn1_object_st *)alignof(asn1_object_st *)sizeof(const ASN1_OBJECT)alignof(const ASN1_OBJECT)sizeof(const ASN1_OBJECT *)alignof(const ASN1_OBJECT *)sizeof(ASN1_TIME *)alignof(ASN1_TIME *)sizeof(ASN1_GENERALIZEDTIME *)alignof(ASN1_GENERALIZEDTIME *)sizeof(ASN1_GENERALIZEDTIME **)alignof(ASN1_GENERALIZEDTIME **)sizeof(ASN1_TIME **)alignof(ASN1_TIME **)sizeof(ASN1_UTCTIME *)alignof(ASN1_UTCTIME *)sizeof(ASN1_UTCTIME **)alignof(ASN1_UTCTIME **)sizeof(ASN1_GENERALSTRING *)alignof(ASN1_GENERALSTRING *)sizeof(ASN1_GENERALSTRING **)alignof(ASN1_GENERALSTRING **)sizeof(ASN1_IA5STRING *)alignof(ASN1_IA5STRING *)sizeof(ASN1_IA5STRING **)alignof(ASN1_IA5STRING **)sizeof(ASN1_T61STRING *)alignof(ASN1_T61STRING *)sizeof(ASN1_T61STRING **)alignof(ASN1_T61STRING **)sizeof(ASN1_PRINTABLESTRING *)alignof(ASN1_PRINTABLESTRING *)sizeof(ASN1_PRINTABLESTRING **)alignof(ASN1_PRINTABLESTRING **)sizeof(ASN1_BMPSTRING *)alignof(ASN1_BMPSTRING *)sizeof(ASN1_BMPSTRING **)alignof(ASN1_BMPSTRING **)sizeof(ASN1_NULL *)alignof(ASN1_NULL *)sizeof(ASN1_NULL **)alignof(ASN1_NULL **)sizeof(ASN1_UTF8STRING *)alignof(ASN1_UTF8STRING *)sizeof(ASN1_UTF8STRING **)alignof(ASN1_UTF8STRING **)sizeof(ASN1_UNIVERSALSTRING **)alignof(ASN1_UNIVERSALSTRING **)sizeof(ASN1_VISIBLESTRING *)alignof(ASN1_VISIBLESTRING *)sizeof(ASN1_VISIBLESTRING **)alignof(ASN1_VISIBLESTRING **)sizeof(const ASN1_OCTET_STRING)alignof(const ASN1_OCTET_STRING)sizeof(const ASN1_OCTET_STRING *)alignof(const ASN1_OCTET_STRING *)sizeof(ASN1_ENUMERATED **)alignof(ASN1_ENUMERATED **)sizeof(ASN1_INTEGER **)alignof(ASN1_INTEGER **)sizeof(ASN1_BIT_STRING *)alignof(ASN1_BIT_STRING *)sizeof(BIT_STRING_BITNAME *)alignof(BIT_STRING_BITNAME *)sizeof(BIT_STRING_BITNAME_st *)alignof(BIT_STRING_BITNAME_st *)sizeof(const ASN1_BIT_STRING)alignof(const ASN1_BIT_STRING)sizeof(const ASN1_BIT_STRING *)alignof(const ASN1_BIT_STRING *)sizeof(ASN1_BIT_STRING **)alignof(ASN1_BIT_STRING **)sizeof(const ASN1_OBJECT *const)alignof(const ASN1_OBJECT *const)sizeof(const ASN1_OBJECT *const *)alignof(const ASN1_OBJECT *const *)sizeof(sk_ASN1_OBJECT_compfunc)alignof(sk_ASN1_OBJECT_compfunc)sizeof(stack_st_ASN1_OBJECT)alignof(stack_st_ASN1_OBJECT)sizeof(stack_st_ASN1_OBJECT *)alignof(stack_st_ASN1_OBJECT *)sizeof(const stack_st_ASN1_OBJECT)alignof(const stack_st_ASN1_OBJECT)sizeof(const stack_st_ASN1_OBJECT *)alignof(const stack_st_ASN1_OBJECT *)sizeof(sk_ASN1_OBJECT_copyfunc)alignof(sk_ASN1_OBJECT_copyfunc)sizeof(sk_ASN1_OBJECT_freefunc)alignof(sk_ASN1_OBJECT_freefunc)sizeof(ASN1_OBJECT **)alignof(ASN1_OBJECT **)sizeof(asn1_object_st **)alignof(asn1_object_st **)sizeof(ASN1_TYPE **)alignof(ASN1_TYPE **)sizeof(asn1_type_st **)alignof(asn1_type_st **)sizeof(stack_st_ASN1_TYPE)alignof(stack_st_ASN1_TYPE)sizeof(ASN1_SEQUENCE_ANY)alignof(ASN1_SEQUENCE_ANY)sizeof(const ASN1_SEQUENCE_ANY)alignof(const ASN1_SEQUENCE_ANY)sizeof(const ASN1_SEQUENCE_ANY *)alignof(const ASN1_SEQUENCE_ANY *)sizeof(stack_st_ASN1_TYPE *)alignof(stack_st_ASN1_TYPE *)sizeof(ASN1_SEQUENCE_ANY *)alignof(ASN1_SEQUENCE_ANY *)sizeof(ASN1_SEQUENCE_ANY **)alignof(ASN1_SEQUENCE_ANY **)sizeof(stack_st_ASN1_TYPE **)alignof(stack_st_ASN1_TYPE **)sizeof(const ASN1_TYPE *const)alignof(const ASN1_TYPE *const)sizeof(const ASN1_TYPE *const *)alignof(const ASN1_TYPE *const *)sizeof(sk_ASN1_TYPE_compfunc)alignof(sk_ASN1_TYPE_compfunc)sizeof(const stack_st_ASN1_TYPE)alignof(const stack_st_ASN1_TYPE)sizeof(const stack_st_ASN1_TYPE *)alignof(const stack_st_ASN1_TYPE *)sizeof(sk_ASN1_TYPE_copyfunc)alignof(sk_ASN1_TYPE_copyfunc)sizeof(sk_ASN1_TYPE_freefunc)alignof(sk_ASN1_TYPE_freefunc)sizeof(const ASN1_UTF8STRING)alignof(const ASN1_UTF8STRING)sizeof(const ASN1_UTF8STRING *)alignof(const ASN1_UTF8STRING *)sizeof(const ASN1_UTF8STRING *const)alignof(const ASN1_UTF8STRING *const)sizeof(const ASN1_UTF8STRING *const *)alignof(const ASN1_UTF8STRING *const *)sizeof(sk_ASN1_UTF8STRING_compfunc)alignof(sk_ASN1_UTF8STRING_compfunc)sizeof(stack_st_ASN1_UTF8STRING)alignof(stack_st_ASN1_UTF8STRING)sizeof(stack_st_ASN1_UTF8STRING *)alignof(stack_st_ASN1_UTF8STRING *)sizeof(const stack_st_ASN1_UTF8STRING)alignof(const stack_st_ASN1_UTF8STRING)sizeof(const stack_st_ASN1_UTF8STRING *)alignof(const stack_st_ASN1_UTF8STRING *)sizeof(sk_ASN1_UTF8STRING_copyfunc)alignof(sk_ASN1_UTF8STRING_copyfunc)sizeof(sk_ASN1_UTF8STRING_freefunc)alignof(sk_ASN1_UTF8STRING_freefunc)sizeof(const ASN1_GENERALSTRING)alignof(const ASN1_GENERALSTRING)sizeof(const ASN1_GENERALSTRING *)alignof(const ASN1_GENERALSTRING *)sizeof(const ASN1_GENERALSTRING *const)alignof(const ASN1_GENERALSTRING *const)sizeof(const ASN1_GENERALSTRING *const *)alignof(const ASN1_GENERALSTRING *const *)sizeof(sk_ASN1_GENERALSTRING_compfunc)alignof(sk_ASN1_GENERALSTRING_compfunc)sizeof(stack_st_ASN1_GENERALSTRING)alignof(stack_st_ASN1_GENERALSTRING)sizeof(stack_st_ASN1_GENERALSTRING *)alignof(stack_st_ASN1_GENERALSTRING *)sizeof(const stack_st_ASN1_GENERALSTRING)alignof(const stack_st_ASN1_GENERALSTRING)sizeof(const stack_st_ASN1_GENERALSTRING *)alignof(const stack_st_ASN1_GENERALSTRING *)sizeof(sk_ASN1_GENERALSTRING_copyfunc)alignof(sk_ASN1_GENERALSTRING_copyfunc)sizeof(sk_ASN1_GENERALSTRING_freefunc)alignof(sk_ASN1_GENERALSTRING_freefunc)sizeof(const ASN1_INTEGER *const)alignof(const ASN1_INTEGER *const)sizeof(const ASN1_INTEGER *const *)alignof(const ASN1_INTEGER *const *)sizeof(sk_ASN1_INTEGER_compfunc)alignof(sk_ASN1_INTEGER_compfunc)sizeof(stack_st_ASN1_INTEGER)alignof(stack_st_ASN1_INTEGER)sizeof(stack_st_ASN1_INTEGER *)alignof(stack_st_ASN1_INTEGER *)sizeof(const stack_st_ASN1_INTEGER)alignof(const stack_st_ASN1_INTEGER)sizeof(const stack_st_ASN1_INTEGER *)alignof(const stack_st_ASN1_INTEGER *)sizeof(sk_ASN1_INTEGER_copyfunc)alignof(sk_ASN1_INTEGER_copyfunc)sizeof(sk_ASN1_INTEGER_freefunc)alignof(sk_ASN1_INTEGER_freefunc)sizeof(const ASN1_STRING_TABLE)alignof(const ASN1_STRING_TABLE)sizeof(const ASN1_STRING_TABLE *)alignof(const ASN1_STRING_TABLE *)sizeof(const ASN1_STRING_TABLE *const)alignof(const ASN1_STRING_TABLE *const)sizeof(const ASN1_STRING_TABLE *const *)alignof(const ASN1_STRING_TABLE *const *)sizeof(sk_ASN1_STRING_TABLE_compfunc)alignof(sk_ASN1_STRING_TABLE_compfunc)sizeof(stack_st_ASN1_STRING_TABLE)alignof(stack_st_ASN1_STRING_TABLE)sizeof(stack_st_ASN1_STRING_TABLE *)alignof(stack_st_ASN1_STRING_TABLE *)sizeof(const stack_st_ASN1_STRING_TABLE)alignof(const stack_st_ASN1_STRING_TABLE)sizeof(const stack_st_ASN1_STRING_TABLE *)alignof(const stack_st_ASN1_STRING_TABLE *)sizeof(sk_ASN1_STRING_TABLE_copyfunc)alignof(sk_ASN1_STRING_TABLE_copyfunc)sizeof(sk_ASN1_STRING_TABLE_freefunc)alignof(sk_ASN1_STRING_TABLE_freefunc)sizeof(const X509_ALGOR)alignof(const X509_ALGOR)sizeof(const X509_ALGOR *)alignof(const X509_ALGOR *)sizeof(const X509_ALGOR *const)alignof(const X509_ALGOR *const)sizeof(const X509_ALGOR *const *)alignof(const X509_ALGOR *const *)sizeof(sk_X509_ALGOR_compfunc)alignof(sk_X509_ALGOR_compfunc)sizeof(const stack_st_X509_ALGOR)alignof(const stack_st_X509_ALGOR)sizeof(const stack_st_X509_ALGOR *)alignof(const stack_st_X509_ALGOR *)sizeof(X509_ALGOR *)alignof(X509_ALGOR *)sizeof(sk_X509_ALGOR_copyfunc)alignof(sk_X509_ALGOR_copyfunc)sizeof(sk_X509_ALGOR_freefunc)alignof(sk_X509_ALGOR_freefunc)sizeof(X509_algor_st *)alignof(X509_algor_st *)sizeof(ASN1_ITEM_EXP)alignof(ASN1_ITEM_EXP)sizeof(ASN1_TLC_st)alignof(ASN1_TLC_st)sizeof(ASN1_TLC)alignof(ASN1_TLC)sizeof(asn1_string_table_st **)alignof(asn1_string_table_st **)sizeof(ASN1_ENCODING_st)alignof(ASN1_ENCODING_st)sizeof(ASN1_ENCODING)alignof(ASN1_ENCODING)sizeof(X509_algor_st **)alignof(X509_algor_st **)sizeof(obj_name_st)alignof(obj_name_st)sizeof(OBJ_NAME)alignof(OBJ_NAME)sizeof(const OBJ_NAME)alignof(const OBJ_NAME)sizeof(const OBJ_NAME *)alignof(const OBJ_NAME *)sizeof(obj_name_st *)alignof(obj_name_st *)sizeof(EVP_PKEY_CTX *)alignof(EVP_PKEY_CTX *)sizeof(EVP_PKEY_gen_cb)alignof(EVP_PKEY_gen_cb)sizeof(EVP_CIPHER_CTX *)alignof(EVP_CIPHER_CTX *)sizeof(const EVP_CIPHER)alignof(const EVP_CIPHER)sizeof(const EVP_CIPHER *)alignof(const EVP_CIPHER *)sizeof(const EVP_MD)alignof(const EVP_MD)sizeof(const EVP_MD *)alignof(const EVP_MD *)sizeof(EVP_PBE_KEYGEN)alignof(EVP_PBE_KEYGEN)sizeof(EVP_PKEY_METHOD *)alignof(EVP_PKEY_METHOD *)sizeof(evp_pkey_method_st *)alignof(evp_pkey_method_st *)sizeof(EVP_MD_CTX *)alignof(EVP_MD_CTX *)sizeof(evp_pkey_ctx_st *)alignof(evp_pkey_ctx_st *)sizeof(evp_md_ctx_st *)alignof(evp_md_ctx_st *)sizeof(const EVP_PKEY_METHOD)alignof(const EVP_PKEY_METHOD)sizeof(const EVP_PKEY_METHOD *)alignof(const EVP_PKEY_METHOD *)sizeof(EVP_PKEY *)alignof(EVP_PKEY *)sizeof(evp_pkey_st *)alignof(evp_pkey_st *)sizeof(EVP_PKEY_gen_cb *)alignof(EVP_PKEY_gen_cb *)sizeof(EVP_PKEY **)alignof(EVP_PKEY **)sizeof(evp_pkey_st **)alignof(evp_pkey_st **)sizeof(ENGINE *)alignof(ENGINE *)sizeof(engine_st *)alignof(engine_st *)sizeof(evp_cipher_st *)alignof(evp_cipher_st *)sizeof(const EVP_PKEY)alignof(const EVP_PKEY)sizeof(const EVP_PKEY *)alignof(const EVP_PKEY *)sizeof(EVP_PKEY_ASN1_METHOD *)alignof(EVP_PKEY_ASN1_METHOD *)sizeof(evp_pkey_asn1_method_st *)alignof(evp_pkey_asn1_method_st *)sizeof(X509_SIG_INFO *)alignof(X509_SIG_INFO *)sizeof(x509_sig_info_st *)alignof(x509_sig_info_st *)sizeof(const PKCS8_PRIV_KEY_INFO)alignof(const PKCS8_PRIV_KEY_INFO)sizeof(const PKCS8_PRIV_KEY_INFO *)alignof(const PKCS8_PRIV_KEY_INFO *)sizeof(pkcs8_priv_key_info_st *)alignof(pkcs8_priv_key_info_st *)sizeof(PKCS8_PRIV_KEY_INFO *)alignof(PKCS8_PRIV_KEY_INFO *)sizeof(X509_PUBKEY *)alignof(X509_PUBKEY *)sizeof(X509_pubkey_st *)alignof(X509_pubkey_st *)sizeof(const EVP_PKEY_ASN1_METHOD)alignof(const EVP_PKEY_ASN1_METHOD)sizeof(const EVP_PKEY_ASN1_METHOD *)alignof(const EVP_PKEY_ASN1_METHOD *)sizeof(ENGINE **)alignof(ENGINE **)sizeof(engine_st **)alignof(engine_st **)sizeof(EVP_PBE_KEYGEN *)alignof(EVP_PBE_KEYGEN *)sizeof(EVP_PBE_KEYGEN **)alignof(EVP_PBE_KEYGEN **)sizeof(evp_cipher_ctx_st *)alignof(evp_cipher_ctx_st *)sizeof(evp_md_st *)alignof(evp_md_st *)sizeof(ec_key_st *)alignof(ec_key_st *)sizeof(dh_st *)alignof(dh_st *)sizeof(dsa_st *)alignof(dsa_st *)sizeof(rsa_st *)alignof(rsa_st *)sizeof(EVP_ENCODE_CTX *)alignof(EVP_ENCODE_CTX *)sizeof(evp_Encode_Ctx_st *)alignof(evp_Encode_Ctx_st *)sizeof(EVP_PKEY_CTX **)alignof(EVP_PKEY_CTX **)sizeof(evp_pkey_ctx_st **)alignof(evp_pkey_ctx_st **)sizeof(const EVP_CIPHER_CTX)alignof(const EVP_CIPHER_CTX)sizeof(const EVP_CIPHER_CTX *)alignof(const EVP_CIPHER_CTX *)sizeof(const EVP_MD_CTX)alignof(const EVP_MD_CTX)sizeof(const EVP_MD_CTX *)alignof(const EVP_MD_CTX *)sizeof(EVP_CIPHER *)alignof(EVP_CIPHER *)sizeof(EVP_MD *)alignof(EVP_MD *)sizeof(evp_cipher_info_st)alignof(evp_cipher_info_st)sizeof(EVP_CIPHER_INFO)alignof(EVP_CIPHER_INFO)sizeof(EVP_CTRL_TLS1_1_MULTIBLOCK_PARAM)alignof(EVP_CTRL_TLS1_1_MULTIBLOCK_PARAM)sizeof(ais_header *)alignof(ais_header *)sizeof(table_entry_t[19])alignof(table_entry_t[19])sizeof(table_entry[19])alignof(table_entry[19])sizeof(table_entry_t *)alignof(table_entry_t *)sizeof(uint32_t[10])alignof(uint32_t[10])sizeof(cmd_table_t)alignof(cmd_table_t)sizeof(cmd_table_t[19])alignof(cmd_table_t[19])sizeof(cmd_table_t *)alignof(cmd_table_t *)sizeof(ais_func_exec)alignof(ais_func_exec)sizeof(ais_func_exec[18])alignof(ais_func_exec[18])sizeof(ais_func_exec *)alignof(ais_func_exec *)sizeof(ais_cmd_load *)alignof(ais_cmd_load *)sizeof(ais_cmd_func *)alignof(ais_cmd_func *)sizeof(cmd_table_t[])alignof(cmd_table_t[])sizeof(ais_func_exec[])alignof(ais_func_exec[])sizeof(table_entry_t[])alignof(table_entry_t[])sizeof(pmecc_config)alignof(pmecc_config)sizeof(uint32_t[52])alignof(uint32_t[52])sizeof(unsigned int[52])alignof(unsigned int[52])sizeof(const table_entry_t[26])alignof(const table_entry_t[26])sizeof(table_entry[26])alignof(table_entry[26])sizeof(display_info)alignof(display_info)sizeof(value_node)alignof(value_node)sizeof(output_t)alignof(output_t)sizeof(display_info *)alignof(display_info *)sizeof(value_node *)alignof(value_node *)sizeof(value_node **)alignof(value_node **)sizeof(const char[238])alignof(const char[238])sizeof(char[238])alignof(char[238])sizeof(const option[31])alignof(const option[31])sizeof(option[31])alignof(option[31])sizeof(const char *const[31])alignof(const char *const[31])sizeof(char *[31])alignof(char *[31])sizeof(const fdt_region)alignof(const fdt_region)sizeof(const fdt_region *)alignof(const fdt_region *)sizeof(char[144])alignof(char[144])sizeof(uint8_t[7])alignof(uint8_t[7])sizeof(gp_header)alignof(gp_header)sizeof(gp_header *)alignof(gp_header *)sizeof(const gp_header)alignof(const gp_header)sizeof(const gp_header *)alignof(const gp_header *)sizeof(uint8_t(*)[8])alignof(uint8_t(*)[8])sizeof(ifwi_ret)alignof(ifwi_ret)alignof(command)sizeof(subpart_info)alignof(subpart_info)alignof(buffer)sizeof(subpart_dir)alignof(subpart_dir)sizeof(bpdt)alignof(bpdt)sizeof(signed_pkg_info_ext)alignof(signed_pkg_info_ext)sizeof(manifest_header)alignof(manifest_header)sizeof(subpart_dir_entry)alignof(subpart_dir_entry)sizeof(subpart_dir_header)alignof(subpart_dir_header)sizeof(bpdt_entry)alignof(bpdt_entry)sizeof(bpdt_header)alignof(bpdt_header)sizeof(dir_ops)alignof(dir_ops)sizeof(bpdt_entry_type)alignof(bpdt_entry_type)alignof(param)sizeof(const command)alignof(const command)sizeof(const command[6])alignof(const command[6])sizeof(command[6])alignof(command[6])sizeof(const command *)alignof(const command *)sizeof(command *)alignof(command *)sizeof(option[7])alignof(option[7])sizeof(char[494])alignof(char[494])sizeof(const subpart_info)alignof(const subpart_info)sizeof(const subpart_info[19])alignof(const subpart_info[19])sizeof(subpart_info[19])alignof(subpart_info[19])sizeof(const subpart_info *)alignof(const subpart_info *)sizeof(subpart_info *)alignof(subpart_info *)sizeof(buffer *)alignof(buffer *)sizeof(ifwi_image)alignof(ifwi_image)sizeof(subpart_attributes)alignof(subpart_attributes)sizeof(const buffer)alignof(const buffer)sizeof(const buffer *)alignof(const buffer *)sizeof(buffer[19])alignof(buffer[19])sizeof(subpart_dir *)alignof(subpart_dir *)sizeof(subpart_dir_entry[0])alignof(subpart_dir_entry[0])sizeof(subpart_dir_entry *)alignof(subpart_dir_entry *)sizeof(uint8_t[12])alignof(uint8_t[12])sizeof(bpdt_header *)alignof(bpdt_header *)sizeof(bpdt *)alignof(bpdt *)sizeof(bpdt_entry *)alignof(bpdt_entry *)sizeof(bpdt_entry[0])alignof(bpdt_entry[0])sizeof(manifest_header *)alignof(manifest_header *)sizeof(signed_pkg_info_ext *)alignof(signed_pkg_info_ext *)sizeof(buffer **)alignof(buffer **)sizeof(buffer *[])alignof(buffer *[])sizeof(buffer *[3])alignof(buffer *[3])sizeof(subpart_dir_header *)alignof(subpart_dir_header *)sizeof(module)alignof(module)sizeof(const bpdt_entry_type)alignof(const bpdt_entry_type)sizeof(const bpdt_entry_type[19])alignof(const bpdt_entry_type[19])sizeof(bpdt_entry_type[19])alignof(bpdt_entry_type[19])sizeof(const bpdt_entry_type *)alignof(const bpdt_entry_type *)sizeof(bpdt_entry_type *)alignof(bpdt_entry_type *)sizeof(const command[])alignof(const command[])sizeof(command[])alignof(command[])sizeof(strlist)alignof(strlist)sizeof(image_region **)alignof(image_region **)sizeof(strlist *)alignof(strlist *)sizeof(fdt_region[100])alignof(fdt_region[100])sizeof(image_type_params **)alignof(image_type_params **)sizeof(Elf32_Section)alignof(Elf32_Section)sizeof(Elf32_Xword)alignof(Elf32_Xword)sizeof(Elf64_Section)alignof(Elf64_Section)sizeof(Elf_MIPS_ABIFlags_v0)alignof(Elf_MIPS_ABIFlags_v0)sizeof(Elf32_Conflict)alignof(Elf32_Conflict)sizeof(Elf64_Lib)alignof(Elf64_Lib)sizeof(Elf32_Lib)alignof(Elf32_Lib)sizeof(Elf_Options_Hw)alignof(Elf_Options_Hw)sizeof(Elf_Options)alignof(Elf_Options)sizeof(Elf32_RegInfo)alignof(Elf32_RegInfo)sizeof(Elf32_gptab)alignof(Elf32_gptab)sizeof(Elf64_Move)alignof(Elf64_Move)sizeof(Elf32_Move)alignof(Elf32_Move)sizeof(Elf64_Nhdr)alignof(Elf64_Nhdr)sizeof(Elf32_Nhdr)alignof(Elf32_Nhdr)sizeof(Elf64_auxv_t)alignof(Elf64_auxv_t)sizeof(Elf32_auxv_t)alignof(Elf32_auxv_t)sizeof(Elf64_Vernaux)alignof(Elf64_Vernaux)sizeof(Elf32_Vernaux)alignof(Elf32_Vernaux)sizeof(Elf64_Verneed)alignof(Elf64_Verneed)sizeof(Elf32_Verneed)alignof(Elf32_Verneed)sizeof(Elf64_Verdaux)alignof(Elf64_Verdaux)sizeof(Elf32_Verdaux)alignof(Elf32_Verdaux)sizeof(Elf64_Verdef)alignof(Elf64_Verdef)sizeof(Elf32_Verdef)alignof(Elf32_Verdef)sizeof(Elf64_Syminfo)alignof(Elf64_Syminfo)sizeof(Elf32_Syminfo)alignof(Elf32_Syminfo)sizeof(Elf64_Sym)alignof(Elf64_Sym)sizeof(Elf64_Chdr)alignof(Elf64_Chdr)sizeof(Elf32_Chdr)alignof(Elf32_Chdr)sizeof(Elf64_Versym)alignof(Elf64_Versym)sizeof(Elf32_Versym)alignof(Elf32_Versym)sizeof(Elf32_Sxword)alignof(Elf32_Sxword)sizeof(Elf32_Word[4])alignof(Elf32_Word[4])sizeof(uint8_t[1024])alignof(uint8_t[1024])sizeof(Elf32_Half *)alignof(Elf32_Half *)sizeof(Elf32_Word *)alignof(Elf32_Word *)sizeof(Elf32_Addr *)alignof(Elf32_Addr *)sizeof(Elf32_Off *)alignof(Elf32_Off *)sizeof(Elf32_Shdr[32])alignof(Elf32_Shdr[32])sizeof(Elf32_Shdr *)alignof(Elf32_Shdr *)sizeof(option_type)alignof(option_type)sizeof(option_type_t)alignof(option_type_t)sizeof(flash_header_v3_t)alignof(flash_header_v3_t)alignof(sig_blk_hdr_t)alignof(boot_img_t)sizeof(image_t)alignof(image_t)sizeof(SOC_TYPE)alignof(SOC_TYPE)sizeof(soc_type_t)alignof(soc_type_t)sizeof(imx8image_fld_types)alignof(imx8image_fld_types)sizeof(imx8image_core_type)alignof(imx8image_core_type)sizeof(imx8image_cmd)alignof(imx8image_cmd)sizeof(image_array)alignof(image_array)alignof(imx_header_v3_t)sizeof(flash_header_v3_t[2])alignof(flash_header_v3_t[2])sizeof(struct <unnamed>[2])alignof(struct <unnamed>[2])sizeof(boot_img_t[6])alignof(boot_img_t[6])sizeof(struct <unnamed>[6])alignof(struct <unnamed>[6])sizeof(image_t *)alignof(image_t *)sizeof(image_t[32])alignof(image_t[32])sizeof(imx_header_v3_t *)alignof(imx_header_v3_t *)sizeof(flash_header_v3_t *)alignof(flash_header_v3_t *)sizeof(const image_t)alignof(const image_t)sizeof(const image_t *)alignof(const image_t *)sizeof(boot_img_t *)alignof(boot_img_t *)sizeof(sig_blk_hdr_t *)alignof(sig_blk_hdr_t *)sizeof(uint8_t[4096])alignof(uint8_t[4096])sizeof(uint8_t(*)[4096])alignof(uint8_t(*)[4096])sizeof(unsigned char(*)[4096])alignof(unsigned char(*)[4096])sizeof(uint8_t[16384])alignof(uint8_t[16384])sizeof(uint8_t(*)[16384])alignof(uint8_t(*)[16384])sizeof(unsigned char(*)[16384])alignof(unsigned char(*)[16384])sizeof(table_entry_t[13])alignof(table_entry_t[13])sizeof(table_entry[13])alignof(table_entry[13])sizeof(table_entry_t[7])alignof(table_entry_t[7])alignof(flash_header_v2_t)sizeof(imx_header_v3_t[2])alignof(imx_header_v3_t[2])sizeof(ivt_header_t)alignof(ivt_header_t)alignof(boot_data_t)sizeof(flash_header_v2_t *)alignof(flash_header_v2_t *)sizeof(imximage_fld_types)alignof(imximage_fld_types)sizeof(imximage_cmd)alignof(imximage_cmd)sizeof(table_entry_t[4])alignof(table_entry_t[4])sizeof(table_entry[4])alignof(table_entry[4])sizeof(imx_header)alignof(imx_header)sizeof(imx_header_v2_t)alignof(imx_header_v2_t)alignof(imx_header_v1_t)alignof(dcd_v2_t)sizeof(dcd_v2_cmd)alignof(dcd_v2_cmd)alignof(dcd_addr_data_t)sizeof(write_dcd_command_t)alignof(write_dcd_command_t)sizeof(flash_cfg_parms_t)alignof(flash_cfg_parms_t)sizeof(dcd_v1_t)alignof(dcd_v1_t)alignof(flash_header_v1_t)alignof(dcd_type_addr_data_t)sizeof(dcd_preamble_t)alignof(dcd_preamble_t)sizeof(imx_header *)alignof(imx_header *)sizeof(set_imx_hdr_t)alignof(set_imx_hdr_t)sizeof(set_dcd_rst_t)alignof(set_dcd_rst_t)sizeof(set_dcd_param_t)alignof(set_dcd_param_t)sizeof(set_dcd_val_t)alignof(set_dcd_val_t)sizeof(imximage_version)alignof(imximage_version)sizeof(uint32_t[5])alignof(uint32_t[5])sizeof(char[65536])alignof(char[65536])sizeof(dcd_addr_data_t[220])alignof(dcd_addr_data_t[220])sizeof(struct <unnamed>[220])alignof(struct <unnamed>[220])sizeof(dcd_type_addr_data_t[60])alignof(dcd_type_addr_data_t[60])sizeof(struct <unnamed>[60])alignof(struct <unnamed>[60])sizeof(table_entry_t[11])alignof(table_entry_t[11])sizeof(table_entry_t[8])alignof(table_entry_t[8])sizeof(table_entry[8])alignof(table_entry[8])sizeof(imx_header_v2_t *)alignof(imx_header_v2_t *)sizeof(dcd_v2_t *)alignof(dcd_v2_t *)sizeof(table_entry_t[3])alignof(table_entry_t[3])sizeof(table_entry[3])alignof(table_entry[3])sizeof(dcd_v1_t *)alignof(dcd_v1_t *)sizeof(imx_header_v1_t *)alignof(imx_header_v1_t *)sizeof(dcd_type_addr_data_t *)alignof(dcd_type_addr_data_t *)sizeof(flash_header_v1_t *)alignof(flash_header_v1_t *)sizeof(dcd_v2_cmd *)alignof(dcd_v2_cmd *)sizeof(ivt_header_t *)alignof(ivt_header_t *)sizeof(dcd_addr_data_t *)alignof(dcd_addr_data_t *)sizeof(sig_v1)alignof(sig_v1)sizeof(pubkey_der_v1)alignof(pubkey_der_v1)sizeof(ext_hdr_v0)alignof(ext_hdr_v0)sizeof(main_hdr_v0)alignof(main_hdr_v0)sizeof(ext_hdr_v0_reg)alignof(ext_hdr_v0_reg)sizeof(kwbimage_cmd_types)alignof(kwbimage_cmd_types)sizeof(kwbimage_cmd)alignof(kwbimage_cmd)sizeof(secure_hdr_v1)alignof(secure_hdr_v1)sizeof(opt_hdr_v1)alignof(opt_hdr_v1)sizeof(main_hdr_v1)alignof(main_hdr_v1)sizeof(kwb_header)alignof(kwb_header)sizeof(pubkey_der_v1[16])alignof(pubkey_der_v1[16])sizeof(uint8_t[524])alignof(uint8_t[524])sizeof(unsigned char[524])alignof(unsigned char[524])sizeof(ext_hdr_v0_reg[55])alignof(ext_hdr_v0_reg[55])sizeof(image_cfg_element)alignof(image_cfg_element)sizeof(image_cfg_type)alignof(image_cfg_type)sizeof(nand_ecc_mode)alignof(nand_ecc_mode)sizeof(boot_mode)alignof(boot_mode)sizeof(image_cfg_element *)alignof(image_cfg_element *)sizeof(ext_hdr_v0 *)alignof(ext_hdr_v0 *)sizeof(main_hdr_v0 *)alignof(main_hdr_v0 *)sizeof(const char *const[24])alignof(const char *const[24])sizeof(char *[24])alignof(char *[24])sizeof(main_hdr_v1 *)alignof(main_hdr_v1 *)sizeof(opt_hdr_v1 *)alignof(opt_hdr_v1 *)sizeof(ext_hdr_v0_reg *)alignof(ext_hdr_v0_reg *)sizeof(nand_ecc_mode[5])alignof(nand_ecc_mode[5])sizeof(nand_ecc_mode *)alignof(nand_ecc_mode *)sizeof(boot_mode[8])alignof(boot_mode[8])sizeof(boot_mode *)alignof(boot_mode *)sizeof(hash_v1)alignof(hash_v1)sizeof(nand_ecc_mode[])alignof(nand_ecc_mode[])sizeof(boot_mode[])alignof(boot_mode[])sizeof(X509_algor_st)alignof(X509_algor_st)sizeof(rand_meth_st)alignof(rand_meth_st)sizeof(buf_mem_st)alignof(buf_mem_st)sizeof(RSA_METHOD *)alignof(RSA_METHOD *)sizeof(rsa_meth_st *)alignof(rsa_meth_st *)sizeof(RSA *)alignof(RSA *)sizeof(const RSA_METHOD)alignof(const RSA_METHOD)sizeof(const RSA_METHOD *)alignof(const RSA_METHOD *)sizeof(const RSA)alignof(const RSA)sizeof(const RSA *)alignof(const RSA *)sizeof(rsa_oaep_params_st)alignof(rsa_oaep_params_st)sizeof(RSA_OAEP_PARAMS)alignof(RSA_OAEP_PARAMS)sizeof(RSA_OAEP_PARAMS *)alignof(RSA_OAEP_PARAMS *)sizeof(rsa_oaep_params_st *)alignof(rsa_oaep_params_st *)sizeof(RSA_OAEP_PARAMS **)alignof(RSA_OAEP_PARAMS **)sizeof(rsa_oaep_params_st **)alignof(rsa_oaep_params_st **)sizeof(rsa_pss_params_st)alignof(rsa_pss_params_st)sizeof(RSA_PSS_PARAMS)alignof(RSA_PSS_PARAMS)sizeof(RSA_PSS_PARAMS *)alignof(RSA_PSS_PARAMS *)sizeof(rsa_pss_params_st *)alignof(rsa_pss_params_st *)sizeof(RSA_PSS_PARAMS **)alignof(RSA_PSS_PARAMS **)sizeof(rsa_pss_params_st **)alignof(rsa_pss_params_st **)sizeof(RSA **)alignof(RSA **)sizeof(rsa_st **)alignof(rsa_st **)sizeof(const BIGNUM *[])alignof(const BIGNUM *[])sizeof(bignum_st *[])alignof(bignum_st *[])sizeof(const BIGNUM **)alignof(const BIGNUM **)sizeof(BIGNUM *[])alignof(BIGNUM *[])sizeof(BUF_MEM *)alignof(BUF_MEM *)sizeof(buf_mem_st *)alignof(buf_mem_st *)sizeof(ECDSA_SIG_st)alignof(ECDSA_SIG_st)sizeof(ECDSA_SIG)alignof(ECDSA_SIG)sizeof(ec_point_st)alignof(ec_point_st)sizeof(EC_POINT)alignof(EC_POINT)sizeof(ec_group_st)alignof(ec_group_st)sizeof(EC_GROUP)alignof(EC_GROUP)sizeof(point_conversion_form_t)alignof(point_conversion_form_t)sizeof(ec_method_st)alignof(ec_method_st)sizeof(EC_METHOD)alignof(EC_METHOD)sizeof(EC_builtin_curve)alignof(EC_builtin_curve)sizeof(ecpk_parameters_st)alignof(ecpk_parameters_st)sizeof(ECPKPARAMETERS)alignof(ECPKPARAMETERS)sizeof(ec_parameters_st)alignof(ec_parameters_st)sizeof(ECPARAMETERS)alignof(ECPARAMETERS)sizeof(const EC_KEY_METHOD)alignof(const EC_KEY_METHOD)sizeof(const EC_KEY_METHOD *)alignof(const EC_KEY_METHOD *)sizeof(ec_key_method_st *)alignof(ec_key_method_st *)sizeof(EC_KEY *)alignof(EC_KEY *)sizeof(const ECDSA_SIG)alignof(const ECDSA_SIG)sizeof(const ECDSA_SIG *)alignof(const ECDSA_SIG *)sizeof(ECDSA_SIG_st *)alignof(ECDSA_SIG_st *)sizeof(ECDSA_SIG *)alignof(ECDSA_SIG *)sizeof(const EC_POINT)alignof(const EC_POINT)sizeof(const EC_POINT *)alignof(const EC_POINT *)sizeof(const EC_KEY)alignof(const EC_KEY)sizeof(const EC_KEY *)alignof(const EC_KEY *)sizeof(ec_point_st *)alignof(ec_point_st *)sizeof(const EC_GROUP)alignof(const EC_GROUP)sizeof(const EC_GROUP *)alignof(const EC_GROUP *)sizeof(ec_group_st *)alignof(ec_group_st *)sizeof(EC_KEY_METHOD *)alignof(EC_KEY_METHOD *)sizeof(ECDSA_SIG **)alignof(ECDSA_SIG **)sizeof(ECDSA_SIG_st **)alignof(ECDSA_SIG_st **)sizeof(EC_KEY **)alignof(EC_KEY **)sizeof(ec_key_st **)alignof(ec_key_st **)sizeof(EC_GROUP *)alignof(EC_GROUP *)sizeof(EC_GROUP **)alignof(EC_GROUP **)sizeof(ec_group_st **)alignof(ec_group_st **)sizeof(ECPARAMETERS *)alignof(ECPARAMETERS *)sizeof(ec_parameters_st *)alignof(ec_parameters_st *)sizeof(ECPKPARAMETERS *)alignof(ECPKPARAMETERS *)sizeof(ecpk_parameters_st *)alignof(ecpk_parameters_st *)sizeof(EC_POINT *)alignof(EC_POINT *)sizeof(const EC_POINT *[])alignof(const EC_POINT *[])sizeof(ec_point_st *[])alignof(ec_point_st *[])sizeof(EC_POINT *[])alignof(EC_POINT *[])sizeof(const EC_METHOD)alignof(const EC_METHOD)sizeof(const EC_METHOD *)alignof(const EC_METHOD *)sizeof(ec_method_st *)alignof(ec_method_st *)sizeof(EC_builtin_curve *)alignof(EC_builtin_curve *)sizeof(const ECPKPARAMETERS)alignof(const ECPKPARAMETERS)sizeof(const ECPKPARAMETERS *)alignof(const ECPKPARAMETERS *)sizeof(const ECPARAMETERS)alignof(const ECPARAMETERS)sizeof(const ECPARAMETERS *)alignof(const ECPARAMETERS *)sizeof(DH_METHOD *)alignof(DH_METHOD *)sizeof(dh_method *)alignof(dh_method *)sizeof(DH *)alignof(DH *)sizeof(const DH_METHOD)alignof(const DH_METHOD)sizeof(const DH_METHOD *)alignof(const DH_METHOD *)sizeof(const DH)alignof(const DH)sizeof(const DH *)alignof(const DH *)sizeof(DH **)alignof(DH **)sizeof(dh_st **)alignof(dh_st **)sizeof(DSA_SIG_st)alignof(DSA_SIG_st)sizeof(DSA_SIG)alignof(DSA_SIG)sizeof(DSA_METHOD *)alignof(DSA_METHOD *)sizeof(dsa_method *)alignof(dsa_method *)sizeof(DSA *)alignof(DSA *)sizeof(const DSA_METHOD)alignof(const DSA_METHOD)sizeof(const DSA_METHOD *)alignof(const DSA_METHOD *)sizeof(DSA_SIG *)alignof(DSA_SIG *)sizeof(DSA_SIG_st *)alignof(DSA_SIG_st *)sizeof(const DSA)alignof(const DSA)sizeof(const DSA *)alignof(const DSA *)sizeof(DSA **)alignof(DSA **)sizeof(dsa_st **)alignof(dsa_st **)sizeof(const DSA_SIG)alignof(const DSA_SIG)sizeof(const DSA_SIG *)alignof(const DSA_SIG *)sizeof(DSA_SIG **)alignof(DSA_SIG **)sizeof(DSA_SIG_st **)alignof(DSA_SIG_st **)sizeof(SHA512state_st)alignof(SHA512state_st)sizeof(SHA512_CTX)alignof(SHA512_CTX)sizeof(SHA256state_st)alignof(SHA256state_st)sizeof(SHA256_CTX)alignof(SHA256_CTX)sizeof(SHAstate_st)alignof(SHAstate_st)sizeof(SHA_CTX)alignof(SHA_CTX)sizeof(SHA512_CTX *)alignof(SHA512_CTX *)sizeof(SHA512state_st *)alignof(SHA512state_st *)sizeof(SHA256_CTX *)alignof(SHA256_CTX *)sizeof(SHA256state_st *)alignof(SHA256state_st *)sizeof(SHA_CTX *)alignof(SHA_CTX *)sizeof(SHAstate_st *)alignof(SHAstate_st *)sizeof(unsigned long long[16])alignof(unsigned long long[16])sizeof(lhash_st)alignof(lhash_st)sizeof(OPENSSL_LHASH)alignof(OPENSSL_LHASH)sizeof(OPENSSL_LH_DOALL_FUNCARG)alignof(OPENSSL_LH_DOALL_FUNCARG)sizeof(OPENSSL_LH_DOALL_FUNC)alignof(OPENSSL_LH_DOALL_FUNC)sizeof(OPENSSL_LH_COMPFUNC)alignof(OPENSSL_LH_COMPFUNC)sizeof(OPENSSL_LH_HASHFUNC)alignof(OPENSSL_LH_HASHFUNC)sizeof(lhash_st_OPENSSL_CSTRING)alignof(lhash_st_OPENSSL_CSTRING)sizeof(lhash_st_OPENSSL_CSTRING *)alignof(lhash_st_OPENSSL_CSTRING *)sizeof(OPENSSL_CSTRING *)alignof(OPENSSL_CSTRING *)sizeof(OPENSSL_LHASH *)alignof(OPENSSL_LHASH *)sizeof(lhash_st *)alignof(lhash_st *)sizeof(const OPENSSL_LHASH)alignof(const OPENSSL_LHASH)sizeof(const OPENSSL_LHASH *)alignof(const OPENSSL_LHASH *)sizeof(const lhash_st_OPENSSL_CSTRING)alignof(const lhash_st_OPENSSL_CSTRING)sizeof(const lhash_st_OPENSSL_CSTRING *)alignof(const lhash_st_OPENSSL_CSTRING *)sizeof(const OPENSSL_CSTRING)alignof(const OPENSSL_CSTRING)sizeof(const OPENSSL_CSTRING *)alignof(const OPENSSL_CSTRING *)sizeof(lhash_st_OPENSSL_STRING)alignof(lhash_st_OPENSSL_STRING)sizeof(lhash_st_OPENSSL_STRING *)alignof(lhash_st_OPENSSL_STRING *)sizeof(OPENSSL_STRING *)alignof(OPENSSL_STRING *)sizeof(const lhash_st_OPENSSL_STRING)alignof(const lhash_st_OPENSSL_STRING)sizeof(const lhash_st_OPENSSL_STRING *)alignof(const lhash_st_OPENSSL_STRING *)sizeof(const OPENSSL_STRING)alignof(const OPENSSL_STRING)sizeof(const OPENSSL_STRING *)alignof(const OPENSSL_STRING *)sizeof(lh_OPENSSL_CSTRING_dummy)alignof(lh_OPENSSL_CSTRING_dummy)sizeof(lh_OPENSSL_STRING_dummy)alignof(lh_OPENSSL_STRING_dummy)sizeof(lhash_node_st)alignof(lhash_node_st)sizeof(OPENSSL_LH_NODE)alignof(OPENSSL_LH_NODE)sizeof(X509_LOOKUP_TYPE)alignof(X509_LOOKUP_TYPE)sizeof(X509_LOOKUP *)alignof(X509_LOOKUP *)sizeof(X509_OBJECT *)alignof(X509_OBJECT *)sizeof(X509_LOOKUP_get_by_alias_fn)alignof(X509_LOOKUP_get_by_alias_fn)sizeof(X509_LOOKUP_get_by_fingerprint_fn)alignof(X509_LOOKUP_get_by_fingerprint_fn)sizeof(X509_NAME *)alignof(X509_NAME *)sizeof(X509_LOOKUP_get_by_issuer_serial_fn)alignof(X509_LOOKUP_get_by_issuer_serial_fn)sizeof(X509_LOOKUP_get_by_subject_fn)alignof(X509_LOOKUP_get_by_subject_fn)sizeof(X509_LOOKUP_ctrl_fn)alignof(X509_LOOKUP_ctrl_fn)sizeof(X509_STORE_CTX *)alignof(X509_STORE_CTX *)sizeof(X509_STORE_CTX_cleanup_fn)alignof(X509_STORE_CTX_cleanup_fn)sizeof(stack_st_X509_CRL)alignof(stack_st_X509_CRL)sizeof(stack_st_X509_CRL *)alignof(stack_st_X509_CRL *)sizeof(X509_STORE_CTX_lookup_crls_fn)alignof(X509_STORE_CTX_lookup_crls_fn)sizeof(stack_st_X509)alignof(stack_st_X509)sizeof(stack_st_X509 *)alignof(stack_st_X509 *)sizeof(X509_STORE_CTX_lookup_certs_fn)alignof(X509_STORE_CTX_lookup_certs_fn)sizeof(X509_STORE_CTX_check_policy_fn)alignof(X509_STORE_CTX_check_policy_fn)sizeof(X509_CRL *)alignof(X509_CRL *)sizeof(X509 *)alignof(X509 *)sizeof(X509_STORE_CTX_cert_crl_fn)alignof(X509_STORE_CTX_cert_crl_fn)sizeof(X509_STORE_CTX_check_crl_fn)alignof(X509_STORE_CTX_check_crl_fn)sizeof(X509_CRL **)alignof(X509_CRL **)sizeof(X509_STORE_CTX_get_crl_fn)alignof(X509_STORE_CTX_get_crl_fn)sizeof(X509_STORE_CTX_check_revocation_fn)alignof(X509_STORE_CTX_check_revocation_fn)sizeof(X509_STORE_CTX_check_issued_fn)alignof(X509_STORE_CTX_check_issued_fn)sizeof(X509 **)alignof(X509 **)sizeof(X509_STORE_CTX_get_issuer_fn)alignof(X509_STORE_CTX_get_issuer_fn)sizeof(X509_STORE_CTX_verify_fn)alignof(X509_STORE_CTX_verify_fn)sizeof(X509_STORE_CTX_verify_cb)alignof(X509_STORE_CTX_verify_cb)sizeof(const X509_POLICY_NODE)alignof(const X509_POLICY_NODE)sizeof(const X509_POLICY_NODE *)alignof(const X509_POLICY_NODE *)sizeof(X509_POLICY_NODE_st *)alignof(X509_POLICY_NODE_st *)sizeof(stack_st_POLICYQUALINFO)alignof(stack_st_POLICYQUALINFO)sizeof(stack_st_POLICYQUALINFO *)alignof(stack_st_POLICYQUALINFO *)sizeof(X509_POLICY_NODE *)alignof(X509_POLICY_NODE *)sizeof(X509_POLICY_LEVEL *)alignof(X509_POLICY_LEVEL *)sizeof(X509_POLICY_LEVEL_st *)alignof(X509_POLICY_LEVEL_st *)sizeof(stack_st_X509_POLICY_NODE)alignof(stack_st_X509_POLICY_NODE)sizeof(stack_st_X509_POLICY_NODE *)alignof(stack_st_X509_POLICY_NODE *)sizeof(const X509_POLICY_TREE)alignof(const X509_POLICY_TREE)sizeof(const X509_POLICY_TREE *)alignof(const X509_POLICY_TREE *)sizeof(X509_POLICY_TREE_st *)alignof(X509_POLICY_TREE_st *)sizeof(X509_POLICY_TREE *)alignof(X509_POLICY_TREE *)sizeof(X509_POLICY_TREE **)alignof(X509_POLICY_TREE **)sizeof(X509_POLICY_TREE_st **)alignof(X509_POLICY_TREE_st **)sizeof(const X509_VERIFY_PARAM)alignof(const X509_VERIFY_PARAM)sizeof(const X509_VERIFY_PARAM *)alignof(const X509_VERIFY_PARAM *)sizeof(X509_VERIFY_PARAM_st *)alignof(X509_VERIFY_PARAM_st *)sizeof(X509_VERIFY_PARAM *)alignof(X509_VERIFY_PARAM *)sizeof(x509_store_ctx_st *)alignof(x509_store_ctx_st *)sizeof(SSL_DANE *)alignof(SSL_DANE *)sizeof(ssl_dane_st *)alignof(ssl_dane_st *)sizeof(x509_st *)alignof(x509_st *)sizeof(X509_crl_st *)alignof(X509_crl_st *)sizeof(X509_STORE *)alignof(X509_STORE *)sizeof(x509_store_st *)alignof(x509_store_st *)sizeof(x509_lookup_st *)alignof(x509_lookup_st *)sizeof(const X509_LOOKUP)alignof(const X509_LOOKUP)sizeof(const X509_LOOKUP *)alignof(const X509_LOOKUP *)sizeof(x509_object_st *)alignof(x509_object_st *)sizeof(X509_name_st *)alignof(X509_name_st *)sizeof(X509_LOOKUP_METHOD *)alignof(X509_LOOKUP_METHOD *)sizeof(x509_lookup_method_st *)alignof(x509_lookup_method_st *)sizeof(const X509_LOOKUP_METHOD)alignof(const X509_LOOKUP_METHOD)sizeof(const X509_LOOKUP_METHOD *)alignof(const X509_LOOKUP_METHOD *)sizeof(x509_st **)alignof(x509_st **)sizeof(stack_st_X509_OBJECT)alignof(stack_st_X509_OBJECT)sizeof(stack_st_X509_OBJECT *)alignof(stack_st_X509_OBJECT *)sizeof(const X509_OBJECT)alignof(const X509_OBJECT)sizeof(const X509_OBJECT *)alignof(const X509_OBJECT *)sizeof(const X509_VERIFY_PARAM *const)alignof(const X509_VERIFY_PARAM *const)sizeof(const X509_VERIFY_PARAM *const *)alignof(const X509_VERIFY_PARAM *const *)sizeof(sk_X509_VERIFY_PARAM_compfunc)alignof(sk_X509_VERIFY_PARAM_compfunc)sizeof(stack_st_X509_VERIFY_PARAM)alignof(stack_st_X509_VERIFY_PARAM)sizeof(stack_st_X509_VERIFY_PARAM *)alignof(stack_st_X509_VERIFY_PARAM *)sizeof(const stack_st_X509_VERIFY_PARAM)alignof(const stack_st_X509_VERIFY_PARAM)sizeof(const stack_st_X509_VERIFY_PARAM *)alignof(const stack_st_X509_VERIFY_PARAM *)sizeof(sk_X509_VERIFY_PARAM_copyfunc)alignof(sk_X509_VERIFY_PARAM_copyfunc)sizeof(sk_X509_VERIFY_PARAM_freefunc)alignof(sk_X509_VERIFY_PARAM_freefunc)sizeof(const X509_OBJECT *const)alignof(const X509_OBJECT *const)sizeof(const X509_OBJECT *const *)alignof(const X509_OBJECT *const *)sizeof(sk_X509_OBJECT_compfunc)alignof(sk_X509_OBJECT_compfunc)sizeof(const stack_st_X509_OBJECT)alignof(const stack_st_X509_OBJECT)sizeof(const stack_st_X509_OBJECT *)alignof(const stack_st_X509_OBJECT *)sizeof(sk_X509_OBJECT_copyfunc)alignof(sk_X509_OBJECT_copyfunc)sizeof(sk_X509_OBJECT_freefunc)alignof(sk_X509_OBJECT_freefunc)sizeof(const X509_LOOKUP *const)alignof(const X509_LOOKUP *const)sizeof(const X509_LOOKUP *const *)alignof(const X509_LOOKUP *const *)sizeof(sk_X509_LOOKUP_compfunc)alignof(sk_X509_LOOKUP_compfunc)sizeof(stack_st_X509_LOOKUP)alignof(stack_st_X509_LOOKUP)sizeof(stack_st_X509_LOOKUP *)alignof(stack_st_X509_LOOKUP *)sizeof(const stack_st_X509_LOOKUP)alignof(const stack_st_X509_LOOKUP)sizeof(const stack_st_X509_LOOKUP *)alignof(const stack_st_X509_LOOKUP *)sizeof(sk_X509_LOOKUP_copyfunc)alignof(sk_X509_LOOKUP_copyfunc)sizeof(sk_X509_LOOKUP_freefunc)alignof(sk_X509_LOOKUP_freefunc)sizeof(X509_crl_st **)alignof(X509_crl_st **)sizeof(X509_VERIFY_PARAM_st **)alignof(X509_VERIFY_PARAM_st **)sizeof(x509_object_st **)alignof(x509_object_st **)sizeof(x509_lookup_st **)alignof(x509_lookup_st **)sizeof(pkcs7_st)alignof(pkcs7_st)sizeof(PKCS7)alignof(PKCS7)sizeof(pkcs7_signer_info_st)alignof(pkcs7_signer_info_st)sizeof(PKCS7_SIGNER_INFO)alignof(PKCS7_SIGNER_INFO)sizeof(pkcs7_issuer_and_serial_st)alignof(pkcs7_issuer_and_serial_st)sizeof(PKCS7_ISSUER_AND_SERIAL)alignof(PKCS7_ISSUER_AND_SERIAL)sizeof(pkcs7_recip_info_st)alignof(pkcs7_recip_info_st)sizeof(PKCS7_RECIP_INFO)alignof(PKCS7_RECIP_INFO)sizeof(pkcs7_encrypted_st)alignof(pkcs7_encrypted_st)sizeof(PKCS7_ENCRYPT)alignof(PKCS7_ENCRYPT)sizeof(pkcs7_digest_st)alignof(pkcs7_digest_st)sizeof(PKCS7_DIGEST)alignof(PKCS7_DIGEST)sizeof(pkcs7_signedandenveloped_st)alignof(pkcs7_signedandenveloped_st)sizeof(PKCS7_SIGN_ENVELOPE)alignof(PKCS7_SIGN_ENVELOPE)sizeof(pkcs7_enveloped_st)alignof(pkcs7_enveloped_st)sizeof(PKCS7_ENVELOPE)alignof(PKCS7_ENVELOPE)sizeof(pkcs7_signed_st)alignof(pkcs7_signed_st)sizeof(PKCS7_SIGNED)alignof(PKCS7_SIGNED)sizeof(pkcs7_enc_content_st)alignof(pkcs7_enc_content_st)sizeof(PKCS7_ENC_CONTENT)alignof(PKCS7_ENC_CONTENT)sizeof(PKCS7 *)alignof(PKCS7 *)sizeof(pkcs7_st *)alignof(pkcs7_st *)sizeof(PKCS7_SIGNER_INFO *)alignof(PKCS7_SIGNER_INFO *)sizeof(pkcs7_signer_info_st *)alignof(pkcs7_signer_info_st *)sizeof(stack_st_X509_ATTRIBUTE)alignof(stack_st_X509_ATTRIBUTE)sizeof(stack_st_X509_ATTRIBUTE *)alignof(stack_st_X509_ATTRIBUTE *)sizeof(PKCS7_ISSUER_AND_SERIAL *)alignof(PKCS7_ISSUER_AND_SERIAL *)sizeof(pkcs7_issuer_and_serial_st *)alignof(pkcs7_issuer_and_serial_st *)sizeof(unsigned char ***)alignof(unsigned char ***)sizeof(PKCS7_RECIP_INFO *)alignof(PKCS7_RECIP_INFO *)sizeof(pkcs7_recip_info_st *)alignof(pkcs7_recip_info_st *)sizeof(X509_ALGOR **)alignof(X509_ALGOR **)sizeof(stack_st_PKCS7_SIGNER_INFO)alignof(stack_st_PKCS7_SIGNER_INFO)sizeof(stack_st_PKCS7_SIGNER_INFO *)alignof(stack_st_PKCS7_SIGNER_INFO *)sizeof(PKCS7 **)alignof(PKCS7 **)sizeof(pkcs7_st **)alignof(pkcs7_st **)sizeof(PKCS7_ENCRYPT *)alignof(PKCS7_ENCRYPT *)sizeof(pkcs7_encrypted_st *)alignof(pkcs7_encrypted_st *)sizeof(PKCS7_ENCRYPT **)alignof(PKCS7_ENCRYPT **)sizeof(pkcs7_encrypted_st **)alignof(pkcs7_encrypted_st **)sizeof(PKCS7_DIGEST *)alignof(PKCS7_DIGEST *)sizeof(pkcs7_digest_st *)alignof(pkcs7_digest_st *)sizeof(PKCS7_DIGEST **)alignof(PKCS7_DIGEST **)sizeof(pkcs7_digest_st **)alignof(pkcs7_digest_st **)sizeof(PKCS7_SIGN_ENVELOPE *)alignof(PKCS7_SIGN_ENVELOPE *)sizeof(pkcs7_signedandenveloped_st *)alignof(pkcs7_signedandenveloped_st *)sizeof(PKCS7_SIGN_ENVELOPE **)alignof(PKCS7_SIGN_ENVELOPE **)sizeof(pkcs7_signedandenveloped_st **)alignof(pkcs7_signedandenveloped_st **)sizeof(PKCS7_ENVELOPE *)alignof(PKCS7_ENVELOPE *)sizeof(pkcs7_enveloped_st *)alignof(pkcs7_enveloped_st *)sizeof(PKCS7_ENVELOPE **)alignof(PKCS7_ENVELOPE **)sizeof(pkcs7_enveloped_st **)alignof(pkcs7_enveloped_st **)sizeof(PKCS7_ENC_CONTENT *)alignof(PKCS7_ENC_CONTENT *)sizeof(pkcs7_enc_content_st *)alignof(pkcs7_enc_content_st *)sizeof(PKCS7_ENC_CONTENT **)alignof(PKCS7_ENC_CONTENT **)sizeof(pkcs7_enc_content_st **)alignof(pkcs7_enc_content_st **)sizeof(PKCS7_SIGNED *)alignof(PKCS7_SIGNED *)sizeof(pkcs7_signed_st *)alignof(pkcs7_signed_st *)sizeof(PKCS7_SIGNED **)alignof(PKCS7_SIGNED **)sizeof(pkcs7_signed_st **)alignof(pkcs7_signed_st **)sizeof(PKCS7_RECIP_INFO **)alignof(PKCS7_RECIP_INFO **)sizeof(pkcs7_recip_info_st **)alignof(pkcs7_recip_info_st **)sizeof(PKCS7_SIGNER_INFO **)alignof(PKCS7_SIGNER_INFO **)sizeof(pkcs7_signer_info_st **)alignof(pkcs7_signer_info_st **)sizeof(PKCS7_ISSUER_AND_SERIAL **)alignof(PKCS7_ISSUER_AND_SERIAL **)sizeof(pkcs7_issuer_and_serial_st **)alignof(pkcs7_issuer_and_serial_st **)sizeof(const PKCS7)alignof(const PKCS7)sizeof(const PKCS7 *)alignof(const PKCS7 *)sizeof(const PKCS7 *const)alignof(const PKCS7 *const)sizeof(const PKCS7 *const *)alignof(const PKCS7 *const *)sizeof(sk_PKCS7_compfunc)alignof(sk_PKCS7_compfunc)sizeof(stack_st_PKCS7)alignof(stack_st_PKCS7)sizeof(stack_st_PKCS7 *)alignof(stack_st_PKCS7 *)sizeof(const stack_st_PKCS7)alignof(const stack_st_PKCS7)sizeof(const stack_st_PKCS7 *)alignof(const stack_st_PKCS7 *)sizeof(sk_PKCS7_copyfunc)alignof(sk_PKCS7_copyfunc)sizeof(sk_PKCS7_freefunc)alignof(sk_PKCS7_freefunc)sizeof(const PKCS7_RECIP_INFO)alignof(const PKCS7_RECIP_INFO)sizeof(const PKCS7_RECIP_INFO *)alignof(const PKCS7_RECIP_INFO *)sizeof(const PKCS7_RECIP_INFO *const)alignof(const PKCS7_RECIP_INFO *const)sizeof(const PKCS7_RECIP_INFO *const *)alignof(const PKCS7_RECIP_INFO *const *)sizeof(sk_PKCS7_RECIP_INFO_compfunc)alignof(sk_PKCS7_RECIP_INFO_compfunc)sizeof(stack_st_PKCS7_RECIP_INFO)alignof(stack_st_PKCS7_RECIP_INFO)sizeof(stack_st_PKCS7_RECIP_INFO *)alignof(stack_st_PKCS7_RECIP_INFO *)sizeof(const stack_st_PKCS7_RECIP_INFO)alignof(const stack_st_PKCS7_RECIP_INFO)sizeof(const stack_st_PKCS7_RECIP_INFO *)alignof(const stack_st_PKCS7_RECIP_INFO *)sizeof(sk_PKCS7_RECIP_INFO_copyfunc)alignof(sk_PKCS7_RECIP_INFO_copyfunc)sizeof(sk_PKCS7_RECIP_INFO_freefunc)alignof(sk_PKCS7_RECIP_INFO_freefunc)sizeof(const PKCS7_SIGNER_INFO)alignof(const PKCS7_SIGNER_INFO)sizeof(const PKCS7_SIGNER_INFO *)alignof(const PKCS7_SIGNER_INFO *)sizeof(const PKCS7_SIGNER_INFO *const)alignof(const PKCS7_SIGNER_INFO *const)sizeof(const PKCS7_SIGNER_INFO *const *)alignof(const PKCS7_SIGNER_INFO *const *)sizeof(sk_PKCS7_SIGNER_INFO_compfunc)alignof(sk_PKCS7_SIGNER_INFO_compfunc)sizeof(const stack_st_PKCS7_SIGNER_INFO)alignof(const stack_st_PKCS7_SIGNER_INFO)sizeof(const stack_st_PKCS7_SIGNER_INFO *)alignof(const stack_st_PKCS7_SIGNER_INFO *)sizeof(sk_PKCS7_SIGNER_INFO_copyfunc)alignof(sk_PKCS7_SIGNER_INFO_copyfunc)sizeof(sk_PKCS7_SIGNER_INFO_freefunc)alignof(sk_PKCS7_SIGNER_INFO_freefunc)sizeof(x509_trust_st)alignof(x509_trust_st)sizeof(X509_TRUST)alignof(X509_TRUST)sizeof(x509_attributes_st)alignof(x509_attributes_st)sizeof(X509_ATTRIBUTE)alignof(X509_ATTRIBUTE)sizeof(X509_extension_st)alignof(X509_extension_st)sizeof(X509_EXTENSION)alignof(X509_EXTENSION)sizeof(X509_name_entry_st)alignof(X509_name_entry_st)sizeof(X509_NAME_ENTRY)alignof(X509_NAME_ENTRY)sizeof(X509_req_st)alignof(X509_req_st)sizeof(X509_REQ)alignof(X509_REQ)sizeof(X509_info_st)alignof(X509_info_st)sizeof(X509_INFO)alignof(X509_INFO)sizeof(private_key_st)alignof(private_key_st)sizeof(X509_PKEY)alignof(X509_PKEY)sizeof(X509_sig_st)alignof(X509_sig_st)sizeof(X509_SIG)alignof(X509_SIG)sizeof(Netscape_spki_st)alignof(Netscape_spki_st)sizeof(NETSCAPE_SPKI)alignof(NETSCAPE_SPKI)sizeof(Netscape_spkac_st)alignof(Netscape_spkac_st)sizeof(NETSCAPE_SPKAC)alignof(NETSCAPE_SPKAC)sizeof(const X509_TRUST)alignof(const X509_TRUST)sizeof(const X509_TRUST *)alignof(const X509_TRUST *)sizeof(x509_trust_st *)alignof(x509_trust_st *)sizeof(X509_TRUST *)alignof(X509_TRUST *)sizeof(const stack_st_X509_ATTRIBUTE)alignof(const stack_st_X509_ATTRIBUTE)sizeof(const stack_st_X509_ATTRIBUTE *)alignof(const stack_st_X509_ATTRIBUTE *)sizeof(const ASN1_OBJECT **)alignof(const ASN1_OBJECT **)sizeof(const X509_ALGOR **)alignof(const X509_ALGOR **)sizeof(PKCS8_PRIV_KEY_INFO **)alignof(PKCS8_PRIV_KEY_INFO **)sizeof(pkcs8_priv_key_info_st **)alignof(pkcs8_priv_key_info_st **)sizeof(SCRYPT_PARAMS_st)alignof(SCRYPT_PARAMS_st)sizeof(SCRYPT_PARAMS)alignof(SCRYPT_PARAMS)sizeof(SCRYPT_PARAMS *)alignof(SCRYPT_PARAMS *)sizeof(SCRYPT_PARAMS_st *)alignof(SCRYPT_PARAMS_st *)sizeof(SCRYPT_PARAMS **)alignof(SCRYPT_PARAMS **)sizeof(SCRYPT_PARAMS_st **)alignof(SCRYPT_PARAMS_st **)sizeof(PBKDF2PARAM_st)alignof(PBKDF2PARAM_st)sizeof(PBKDF2PARAM)alignof(PBKDF2PARAM)sizeof(PBKDF2PARAM *)alignof(PBKDF2PARAM *)sizeof(PBKDF2PARAM_st *)alignof(PBKDF2PARAM_st *)sizeof(PBKDF2PARAM **)alignof(PBKDF2PARAM **)sizeof(PBKDF2PARAM_st **)alignof(PBKDF2PARAM_st **)sizeof(PBE2PARAM_st)alignof(PBE2PARAM_st)sizeof(PBE2PARAM)alignof(PBE2PARAM)sizeof(PBE2PARAM *)alignof(PBE2PARAM *)sizeof(PBE2PARAM_st *)alignof(PBE2PARAM_st *)sizeof(PBE2PARAM **)alignof(PBE2PARAM **)sizeof(PBE2PARAM_st **)alignof(PBE2PARAM_st **)sizeof(PBEPARAM_st)alignof(PBEPARAM_st)sizeof(PBEPARAM)alignof(PBEPARAM)sizeof(PBEPARAM *)alignof(PBEPARAM *)sizeof(PBEPARAM_st *)alignof(PBEPARAM_st *)sizeof(PBEPARAM **)alignof(PBEPARAM **)sizeof(PBEPARAM_st **)alignof(PBEPARAM_st **)sizeof(X509_ATTRIBUTE *)alignof(X509_ATTRIBUTE *)sizeof(x509_attributes_st *)alignof(x509_attributes_st *)sizeof(const X509_ATTRIBUTE)alignof(const X509_ATTRIBUTE)sizeof(const X509_ATTRIBUTE *)alignof(const X509_ATTRIBUTE *)sizeof(X509_ATTRIBUTE **)alignof(X509_ATTRIBUTE **)sizeof(x509_attributes_st **)alignof(x509_attributes_st **)sizeof(stack_st_X509_ATTRIBUTE **)alignof(stack_st_X509_ATTRIBUTE **)sizeof(const X509_EXTENSION)alignof(const X509_EXTENSION)sizeof(const X509_EXTENSION *)alignof(const X509_EXTENSION *)sizeof(X509_extension_st *)alignof(X509_extension_st *)sizeof(X509_EXTENSION *)alignof(X509_EXTENSION *)sizeof(X509_EXTENSION **)alignof(X509_EXTENSION **)sizeof(X509_extension_st **)alignof(X509_extension_st **)sizeof(X509_REVOKED *)alignof(X509_REVOKED *)sizeof(x509_revoked_st *)alignof(x509_revoked_st *)sizeof(const X509_REVOKED)alignof(const X509_REVOKED)sizeof(const X509_REVOKED *)alignof(const X509_REVOKED *)sizeof(const X509_CRL)alignof(const X509_CRL)sizeof(const X509_CRL *)alignof(const X509_CRL *)sizeof(const X509)alignof(const X509)sizeof(const X509 *)alignof(const X509 *)sizeof(stack_st_X509_EXTENSION)alignof(stack_st_X509_EXTENSION)sizeof(stack_st_X509_EXTENSION *)alignof(stack_st_X509_EXTENSION *)sizeof(stack_st_X509_EXTENSION **)alignof(stack_st_X509_EXTENSION **)sizeof(const stack_st_X509_EXTENSION)alignof(const stack_st_X509_EXTENSION)sizeof(const stack_st_X509_EXTENSION *)alignof(const stack_st_X509_EXTENSION *)sizeof(const X509_NAME_ENTRY)alignof(const X509_NAME_ENTRY)sizeof(const X509_NAME_ENTRY *)alignof(const X509_NAME_ENTRY *)sizeof(X509_name_entry_st *)alignof(X509_name_entry_st *)sizeof(X509_NAME_ENTRY *)alignof(X509_NAME_ENTRY *)sizeof(X509_NAME_ENTRY **)alignof(X509_NAME_ENTRY **)sizeof(X509_name_entry_st **)alignof(X509_name_entry_st **)sizeof(const X509_NAME)alignof(const X509_NAME)sizeof(const X509_NAME *)alignof(const X509_NAME *)sizeof(X509_REQ *)alignof(X509_REQ *)sizeof(X509_req_st *)alignof(X509_req_st *)sizeof(const ASN1_BIT_STRING **)alignof(const ASN1_BIT_STRING **)sizeof(stack_st_X509_REVOKED)alignof(stack_st_X509_REVOKED)sizeof(stack_st_X509_REVOKED *)alignof(stack_st_X509_REVOKED *)sizeof(const X509_REQ)alignof(const X509_REQ)sizeof(const X509_REQ *)alignof(const X509_REQ *)sizeof(X509_INFO *)alignof(X509_INFO *)sizeof(X509_info_st *)alignof(X509_info_st *)sizeof(Netscape_certificate_sequence)alignof(Netscape_certificate_sequence)sizeof(NETSCAPE_CERT_SEQUENCE)alignof(NETSCAPE_CERT_SEQUENCE)sizeof(NETSCAPE_CERT_SEQUENCE *)alignof(NETSCAPE_CERT_SEQUENCE *)sizeof(Netscape_certificate_sequence *)alignof(Netscape_certificate_sequence *)sizeof(NETSCAPE_CERT_SEQUENCE **)alignof(NETSCAPE_CERT_SEQUENCE **)sizeof(Netscape_certificate_sequence **)alignof(Netscape_certificate_sequence **)sizeof(NETSCAPE_SPKAC *)alignof(NETSCAPE_SPKAC *)sizeof(Netscape_spkac_st *)alignof(Netscape_spkac_st *)sizeof(NETSCAPE_SPKAC **)alignof(NETSCAPE_SPKAC **)sizeof(Netscape_spkac_st **)alignof(Netscape_spkac_st **)sizeof(NETSCAPE_SPKI *)alignof(NETSCAPE_SPKI *)sizeof(Netscape_spki_st *)alignof(Netscape_spki_st *)sizeof(NETSCAPE_SPKI **)alignof(NETSCAPE_SPKI **)sizeof(Netscape_spki_st **)alignof(Netscape_spki_st **)sizeof(X509_PKEY *)alignof(X509_PKEY *)sizeof(private_key_st *)alignof(private_key_st *)sizeof(X509_REVOKED **)alignof(X509_REVOKED **)sizeof(x509_revoked_st **)alignof(x509_revoked_st **)sizeof(X509_crl_info_st)alignof(X509_crl_info_st)sizeof(X509_CRL_INFO)alignof(X509_CRL_INFO)sizeof(X509_CRL_INFO *)alignof(X509_CRL_INFO *)sizeof(X509_crl_info_st *)alignof(X509_crl_info_st *)sizeof(X509_CRL_INFO **)alignof(X509_CRL_INFO **)sizeof(X509_crl_info_st **)alignof(X509_crl_info_st **)sizeof(const X509_SIG_INFO)alignof(const X509_SIG_INFO)sizeof(const X509_SIG_INFO *)alignof(const X509_SIG_INFO *)sizeof(x509_cert_aux_st)alignof(x509_cert_aux_st)sizeof(X509_CERT_AUX)alignof(X509_CERT_AUX)sizeof(X509_CERT_AUX *)alignof(X509_CERT_AUX *)sizeof(x509_cert_aux_st *)alignof(x509_cert_aux_st *)sizeof(X509_CERT_AUX **)alignof(X509_CERT_AUX **)sizeof(x509_cert_aux_st **)alignof(x509_cert_aux_st **)sizeof(x509_cinf_st)alignof(x509_cinf_st)sizeof(X509_CINF)alignof(X509_CINF)sizeof(X509_CINF *)alignof(X509_CINF *)sizeof(x509_cinf_st *)alignof(x509_cinf_st *)sizeof(X509_CINF **)alignof(X509_CINF **)sizeof(x509_cinf_st **)alignof(x509_cinf_st **)sizeof(X509_NAME **)alignof(X509_NAME **)sizeof(X509_name_st **)alignof(X509_name_st **)sizeof(X509_EXTENSIONS)alignof(X509_EXTENSIONS)sizeof(X509_EXTENSIONS *)alignof(X509_EXTENSIONS *)sizeof(X509_EXTENSIONS **)alignof(X509_EXTENSIONS **)sizeof(X509_REQ **)alignof(X509_REQ **)sizeof(X509_req_st **)alignof(X509_req_st **)sizeof(X509_req_info_st)alignof(X509_req_info_st)sizeof(X509_REQ_INFO)alignof(X509_REQ_INFO)sizeof(X509_REQ_INFO *)alignof(X509_REQ_INFO *)sizeof(X509_req_info_st *)alignof(X509_req_info_st *)sizeof(X509_REQ_INFO **)alignof(X509_REQ_INFO **)sizeof(X509_req_info_st **)alignof(X509_req_info_st **)sizeof(X509_SIG *)alignof(X509_SIG *)sizeof(X509_sig_st *)alignof(X509_sig_st *)sizeof(const X509_SIG)alignof(const X509_SIG)sizeof(const X509_SIG *)alignof(const X509_SIG *)sizeof(const ASN1_OCTET_STRING **)alignof(const ASN1_OCTET_STRING **)sizeof(X509_SIG **)alignof(X509_SIG **)sizeof(X509_sig_st **)alignof(X509_sig_st **)sizeof(X509_PUBKEY **)alignof(X509_PUBKEY **)sizeof(X509_pubkey_st **)alignof(X509_pubkey_st **)sizeof(X509_val_st)alignof(X509_val_st)sizeof(X509_VAL)alignof(X509_VAL)sizeof(X509_VAL *)alignof(X509_VAL *)sizeof(X509_val_st *)alignof(X509_val_st *)sizeof(X509_VAL **)alignof(X509_VAL **)sizeof(X509_val_st **)alignof(X509_val_st **)sizeof(X509_ALGORS)alignof(X509_ALGORS)sizeof(X509_ALGORS *)alignof(X509_ALGORS *)sizeof(X509_ALGORS **)alignof(X509_ALGORS **)sizeof(stack_st_X509_ALGOR **)alignof(stack_st_X509_ALGOR **)sizeof(OCSP_REQ_CTX *)alignof(OCSP_REQ_CTX *)sizeof(ocsp_req_ctx_st *)alignof(ocsp_req_ctx_st *)sizeof(X509_CRL_METHOD *)alignof(X509_CRL_METHOD *)sizeof(x509_crl_method_st *)alignof(x509_crl_method_st *)sizeof(const X509_CRL_METHOD)alignof(const X509_CRL_METHOD)sizeof(const X509_CRL_METHOD *)alignof(const X509_CRL_METHOD *)sizeof(const X509_INFO)alignof(const X509_INFO)sizeof(const X509_INFO *)alignof(const X509_INFO *)sizeof(const X509_INFO *const)alignof(const X509_INFO *const)sizeof(const X509_INFO *const *)alignof(const X509_INFO *const *)sizeof(sk_X509_INFO_compfunc)alignof(sk_X509_INFO_compfunc)sizeof(stack_st_X509_INFO)alignof(stack_st_X509_INFO)sizeof(stack_st_X509_INFO *)alignof(stack_st_X509_INFO *)sizeof(const stack_st_X509_INFO)alignof(const stack_st_X509_INFO)sizeof(const stack_st_X509_INFO *)alignof(const stack_st_X509_INFO *)sizeof(sk_X509_INFO_copyfunc)alignof(sk_X509_INFO_copyfunc)sizeof(sk_X509_INFO_freefunc)alignof(sk_X509_INFO_freefunc)sizeof(const X509_CRL *const)alignof(const X509_CRL *const)sizeof(const X509_CRL *const *)alignof(const X509_CRL *const *)sizeof(sk_X509_CRL_compfunc)alignof(sk_X509_CRL_compfunc)sizeof(const stack_st_X509_CRL)alignof(const stack_st_X509_CRL)sizeof(const stack_st_X509_CRL *)alignof(const stack_st_X509_CRL *)sizeof(sk_X509_CRL_copyfunc)alignof(sk_X509_CRL_copyfunc)sizeof(sk_X509_CRL_freefunc)alignof(sk_X509_CRL_freefunc)sizeof(const X509_REVOKED *const)alignof(const X509_REVOKED *const)sizeof(const X509_REVOKED *const *)alignof(const X509_REVOKED *const *)sizeof(sk_X509_REVOKED_compfunc)alignof(sk_X509_REVOKED_compfunc)sizeof(const stack_st_X509_REVOKED)alignof(const stack_st_X509_REVOKED)sizeof(const stack_st_X509_REVOKED *)alignof(const stack_st_X509_REVOKED *)sizeof(sk_X509_REVOKED_copyfunc)alignof(sk_X509_REVOKED_copyfunc)sizeof(sk_X509_REVOKED_freefunc)alignof(sk_X509_REVOKED_freefunc)sizeof(const X509_TRUST *const)alignof(const X509_TRUST *const)sizeof(const X509_TRUST *const *)alignof(const X509_TRUST *const *)sizeof(sk_X509_TRUST_compfunc)alignof(sk_X509_TRUST_compfunc)sizeof(stack_st_X509_TRUST)alignof(stack_st_X509_TRUST)sizeof(stack_st_X509_TRUST *)alignof(stack_st_X509_TRUST *)sizeof(const stack_st_X509_TRUST)alignof(const stack_st_X509_TRUST)sizeof(const stack_st_X509_TRUST *)alignof(const stack_st_X509_TRUST *)sizeof(sk_X509_TRUST_copyfunc)alignof(sk_X509_TRUST_copyfunc)sizeof(sk_X509_TRUST_freefunc)alignof(sk_X509_TRUST_freefunc)sizeof(const X509 *const)alignof(const X509 *const)sizeof(const X509 *const *)alignof(const X509 *const *)sizeof(sk_X509_compfunc)alignof(sk_X509_compfunc)sizeof(const stack_st_X509)alignof(const stack_st_X509)sizeof(const stack_st_X509 *)alignof(const stack_st_X509 *)sizeof(sk_X509_copyfunc)alignof(sk_X509_copyfunc)sizeof(sk_X509_freefunc)alignof(sk_X509_freefunc)sizeof(const X509_ATTRIBUTE *const)alignof(const X509_ATTRIBUTE *const)sizeof(const X509_ATTRIBUTE *const *)alignof(const X509_ATTRIBUTE *const *)sizeof(sk_X509_ATTRIBUTE_compfunc)alignof(sk_X509_ATTRIBUTE_compfunc)sizeof(sk_X509_ATTRIBUTE_copyfunc)alignof(sk_X509_ATTRIBUTE_copyfunc)sizeof(sk_X509_ATTRIBUTE_freefunc)alignof(sk_X509_ATTRIBUTE_freefunc)sizeof(const X509_EXTENSION *const)alignof(const X509_EXTENSION *const)sizeof(const X509_EXTENSION *const *)alignof(const X509_EXTENSION *const *)sizeof(sk_X509_EXTENSION_compfunc)alignof(sk_X509_EXTENSION_compfunc)sizeof(sk_X509_EXTENSION_copyfunc)alignof(sk_X509_EXTENSION_copyfunc)sizeof(sk_X509_EXTENSION_freefunc)alignof(sk_X509_EXTENSION_freefunc)sizeof(const X509_NAME *const)alignof(const X509_NAME *const)sizeof(const X509_NAME *const *)alignof(const X509_NAME *const *)sizeof(sk_X509_NAME_compfunc)alignof(sk_X509_NAME_compfunc)sizeof(stack_st_X509_NAME)alignof(stack_st_X509_NAME)sizeof(stack_st_X509_NAME *)alignof(stack_st_X509_NAME *)sizeof(const stack_st_X509_NAME)alignof(const stack_st_X509_NAME)sizeof(const stack_st_X509_NAME *)alignof(const stack_st_X509_NAME *)sizeof(sk_X509_NAME_copyfunc)alignof(sk_X509_NAME_copyfunc)sizeof(sk_X509_NAME_freefunc)alignof(sk_X509_NAME_freefunc)sizeof(const X509_NAME_ENTRY *const)alignof(const X509_NAME_ENTRY *const)sizeof(const X509_NAME_ENTRY *const *)alignof(const X509_NAME_ENTRY *const *)sizeof(sk_X509_NAME_ENTRY_compfunc)alignof(sk_X509_NAME_ENTRY_compfunc)sizeof(stack_st_X509_NAME_ENTRY)alignof(stack_st_X509_NAME_ENTRY)sizeof(stack_st_X509_NAME_ENTRY *)alignof(stack_st_X509_NAME_ENTRY *)sizeof(const stack_st_X509_NAME_ENTRY)alignof(const stack_st_X509_NAME_ENTRY)sizeof(const stack_st_X509_NAME_ENTRY *)alignof(const stack_st_X509_NAME_ENTRY *)sizeof(sk_X509_NAME_ENTRY_copyfunc)alignof(sk_X509_NAME_ENTRY_copyfunc)sizeof(sk_X509_NAME_ENTRY_freefunc)alignof(sk_X509_NAME_ENTRY_freefunc)sizeof(X509_info_st **)alignof(X509_info_st **)sizeof(x509_trust_st **)alignof(x509_trust_st **)sizeof(pem_password_cb)alignof(pem_password_cb)sizeof(pem_password_cb *)alignof(pem_password_cb *)sizeof(EVP_CIPHER_INFO *)alignof(EVP_CIPHER_INFO *)sizeof(evp_cipher_info_st *)alignof(evp_cipher_info_st *)sizeof(err_state_st)alignof(err_state_st)sizeof(ERR_STATE)alignof(ERR_STATE)sizeof(ERR_string_data_st)alignof(ERR_string_data_st)sizeof(ERR_STRING_DATA)alignof(ERR_STRING_DATA)sizeof(ERR_STATE *)alignof(ERR_STATE *)sizeof(err_state_st *)alignof(err_state_st *)sizeof(ERR_STRING_DATA *)alignof(ERR_STRING_DATA *)sizeof(ERR_string_data_st *)alignof(ERR_string_data_st *)sizeof(const ERR_STRING_DATA)alignof(const ERR_STRING_DATA)sizeof(const ERR_STRING_DATA *)alignof(const ERR_STRING_DATA *)sizeof(lhash_st_ERR_STRING_DATA)alignof(lhash_st_ERR_STRING_DATA)sizeof(lhash_st_ERR_STRING_DATA *)alignof(lhash_st_ERR_STRING_DATA *)sizeof(const lhash_st_ERR_STRING_DATA)alignof(const lhash_st_ERR_STRING_DATA)sizeof(const lhash_st_ERR_STRING_DATA *)alignof(const lhash_st_ERR_STRING_DATA *)sizeof(lh_ERR_STRING_DATA_dummy)alignof(lh_ERR_STRING_DATA_dummy)sizeof(const char *[16])alignof(const char *[16])sizeof(char *[16])alignof(char *[16])sizeof(COMP_METHOD *)alignof(COMP_METHOD *)sizeof(comp_method_st *)alignof(comp_method_st *)sizeof(COMP_CTX *)alignof(COMP_CTX *)sizeof(comp_ctx_st *)alignof(comp_ctx_st *)sizeof(const COMP_METHOD)alignof(const COMP_METHOD)sizeof(const COMP_METHOD *)alignof(const COMP_METHOD *)sizeof(const COMP_CTX)alignof(const COMP_CTX)sizeof(const COMP_CTX *)alignof(const COMP_CTX *)sizeof(const HMAC_CTX)alignof(const HMAC_CTX)sizeof(const HMAC_CTX *)alignof(const HMAC_CTX *)sizeof(hmac_ctx_st *)alignof(hmac_ctx_st *)sizeof(HMAC_CTX *)alignof(HMAC_CTX *)sizeof(async_job_st)alignof(async_job_st)sizeof(ASYNC_JOB)alignof(ASYNC_JOB)sizeof(async_wait_ctx_st)alignof(async_wait_ctx_st)sizeof(ASYNC_WAIT_CTX)alignof(ASYNC_WAIT_CTX)sizeof(ASYNC_WAIT_CTX *)alignof(ASYNC_WAIT_CTX *)sizeof(async_wait_ctx_st *)alignof(async_wait_ctx_st *)sizeof(ASYNC_JOB *)alignof(ASYNC_JOB *)sizeof(async_job_st *)alignof(async_job_st *)sizeof(ASYNC_JOB **)alignof(ASYNC_JOB **)sizeof(async_job_st **)alignof(async_job_st **)sizeof(sct_validation_status_t)alignof(sct_validation_status_t)sizeof(sct_source_t)alignof(sct_source_t)sizeof(ct_log_entry_type_t)alignof(ct_log_entry_type_t)sizeof(sct_version_t)alignof(sct_version_t)sizeof(CTLOG_STORE *)alignof(CTLOG_STORE *)sizeof(ctlog_store_st *)alignof(ctlog_store_st *)sizeof(const CTLOG)alignof(const CTLOG)sizeof(const CTLOG *)alignof(const CTLOG *)sizeof(ctlog_st *)alignof(ctlog_st *)sizeof(const CTLOG_STORE)alignof(const CTLOG_STORE)sizeof(const CTLOG_STORE *)alignof(const CTLOG_STORE *)sizeof(CTLOG *)alignof(CTLOG *)sizeof(CTLOG **)alignof(CTLOG **)sizeof(ctlog_st **)alignof(ctlog_st **)sizeof(SCT *)alignof(SCT *)sizeof(sct_st *)alignof(sct_st *)sizeof(SCT **)alignof(SCT **)sizeof(sct_st **)alignof(sct_st **)sizeof(const SCT)alignof(const SCT)sizeof(const SCT *)alignof(const SCT *)sizeof(stack_st_SCT)alignof(stack_st_SCT)sizeof(stack_st_SCT *)alignof(stack_st_SCT *)sizeof(stack_st_SCT **)alignof(stack_st_SCT **)sizeof(const stack_st_SCT)alignof(const stack_st_SCT)sizeof(const stack_st_SCT *)alignof(const stack_st_SCT *)sizeof(CT_POLICY_EVAL_CTX *)alignof(CT_POLICY_EVAL_CTX *)sizeof(ct_policy_eval_ctx_st *)alignof(ct_policy_eval_ctx_st *)sizeof(const CT_POLICY_EVAL_CTX)alignof(const CT_POLICY_EVAL_CTX)sizeof(const CT_POLICY_EVAL_CTX *)alignof(const CT_POLICY_EVAL_CTX *)sizeof(const CTLOG *const)alignof(const CTLOG *const)sizeof(const CTLOG *const *)alignof(const CTLOG *const *)sizeof(sk_CTLOG_compfunc)alignof(sk_CTLOG_compfunc)sizeof(stack_st_CTLOG)alignof(stack_st_CTLOG)sizeof(stack_st_CTLOG *)alignof(stack_st_CTLOG *)sizeof(const stack_st_CTLOG)alignof(const stack_st_CTLOG)sizeof(const stack_st_CTLOG *)alignof(const stack_st_CTLOG *)sizeof(sk_CTLOG_copyfunc)alignof(sk_CTLOG_copyfunc)sizeof(sk_CTLOG_freefunc)alignof(sk_CTLOG_freefunc)sizeof(const SCT *const)alignof(const SCT *const)sizeof(const SCT *const *)alignof(const SCT *const *)sizeof(sk_SCT_compfunc)alignof(sk_SCT_compfunc)sizeof(sk_SCT_copyfunc)alignof(sk_SCT_copyfunc)sizeof(sk_SCT_freefunc)alignof(sk_SCT_freefunc)sizeof(SSL *)alignof(SSL *)sizeof(ssl_st *)alignof(ssl_st *)sizeof(const SSL)alignof(const SSL)sizeof(const SSL *)alignof(const SSL *)sizeof(SSL_CTX *)alignof(SSL_CTX *)sizeof(ssl_ctx_st *)alignof(ssl_ctx_st *)sizeof(tls_session_ticket_ext_st)alignof(tls_session_ticket_ext_st)sizeof(srtp_protection_profile_st)alignof(srtp_protection_profile_st)sizeof(SRTP_PROTECTION_PROFILE)alignof(SRTP_PROTECTION_PROFILE)sizeof(SRTP_PROTECTION_PROFILE *)alignof(SRTP_PROTECTION_PROFILE *)sizeof(srtp_protection_profile_st *)alignof(srtp_protection_profile_st *)sizeof(stack_st_SRTP_PROTECTION_PROFILE)alignof(stack_st_SRTP_PROTECTION_PROFILE)sizeof(stack_st_SRTP_PROTECTION_PROFILE *)alignof(stack_st_SRTP_PROTECTION_PROFILE *)sizeof(SSL_allow_early_data_cb_fn)alignof(SSL_allow_early_data_cb_fn)sizeof(DTLS_timer_cb)alignof(DTLS_timer_cb)sizeof(ssl_session_st)alignof(ssl_session_st)sizeof(SSL_SESSION)alignof(SSL_SESSION)sizeof(SSL_TICKET_RETURN)alignof(SSL_TICKET_RETURN)sizeof(SSL_SESSION *)alignof(SSL_SESSION *)sizeof(SSL_TICKET_STATUS)alignof(SSL_TICKET_STATUS)sizeof(SSL_CTX_decrypt_session_ticket_fn)alignof(SSL_CTX_decrypt_session_ticket_fn)sizeof(SSL_CTX_generate_session_ticket_fn)alignof(SSL_CTX_generate_session_ticket_fn)sizeof(ssl_ct_validation_cb)alignof(ssl_ct_validation_cb)sizeof(ssl_conf_ctx_st)alignof(ssl_conf_ctx_st)sizeof(SSL_CONF_CTX)alignof(SSL_CONF_CTX)sizeof(stack_st_SSL_CIPHER)alignof(stack_st_SSL_CIPHER)sizeof(stack_st_SSL_CIPHER *)alignof(stack_st_SSL_CIPHER *)sizeof(ssl_cipher_st)alignof(ssl_cipher_st)sizeof(SSL_CIPHER)alignof(SSL_CIPHER)sizeof(const SSL_CIPHER)alignof(const SSL_CIPHER)sizeof(const SSL_CIPHER *)alignof(const SSL_CIPHER *)sizeof(const SSL_CIPHER **)alignof(const SSL_CIPHER **)sizeof(tls_session_secret_cb_fn)alignof(tls_session_secret_cb_fn)sizeof(tls_session_ticket_ext_cb_fn)alignof(tls_session_ticket_ext_cb_fn)sizeof(ssl_comp_st)alignof(ssl_comp_st)sizeof(SSL_COMP)alignof(SSL_COMP)sizeof(OSSL_HANDSHAKE_STATE)alignof(OSSL_HANDSHAKE_STATE)sizeof(ssl_method_st)alignof(ssl_method_st)sizeof(SSL_METHOD)alignof(SSL_METHOD)sizeof(SSL_client_hello_cb_fn)alignof(SSL_client_hello_cb_fn)sizeof(SSL_verify_cb)alignof(SSL_verify_cb)sizeof(GEN_SESSION_CB)alignof(GEN_SESSION_CB)sizeof(SSL_CTX_keylog_cb_func)alignof(SSL_CTX_keylog_cb_func)sizeof(SSL_custom_ext_parse_cb_ex)alignof(SSL_custom_ext_parse_cb_ex)sizeof(SSL_custom_ext_free_cb_ex)alignof(SSL_custom_ext_free_cb_ex)sizeof(SSL_custom_ext_add_cb_ex)alignof(SSL_custom_ext_add_cb_ex)sizeof(custom_ext_parse_cb)alignof(custom_ext_parse_cb)sizeof(custom_ext_free_cb)alignof(custom_ext_free_cb)sizeof(custom_ext_add_cb)alignof(custom_ext_add_cb)sizeof(SSL_SESSION **)alignof(SSL_SESSION **)sizeof(SSL_psk_use_session_cb_func)alignof(SSL_psk_use_session_cb_func)sizeof(SSL_psk_find_session_cb_func)alignof(SSL_psk_find_session_cb_func)sizeof(SSL_psk_server_cb_func)alignof(SSL_psk_server_cb_func)sizeof(SSL_psk_client_cb_func)alignof(SSL_psk_client_cb_func)sizeof(SSL_CTX_alpn_select_cb_func)alignof(SSL_CTX_alpn_select_cb_func)sizeof(SSL_CTX_npn_select_cb_func)alignof(SSL_CTX_npn_select_cb_func)sizeof(SSL_CTX_npn_advertised_cb_func)alignof(SSL_CTX_npn_advertised_cb_func)sizeof(ssl_session_st *)alignof(ssl_session_st *)sizeof(openssl_ssl_test_functions)alignof(openssl_ssl_test_functions)sizeof(const openssl_ssl_test_functions)alignof(const openssl_ssl_test_functions)sizeof(const openssl_ssl_test_functions *)alignof(const openssl_ssl_test_functions *)sizeof(openssl_ssl_test_functions *)alignof(openssl_ssl_test_functions *)sizeof(const SSL_CTX)alignof(const SSL_CTX)sizeof(const SSL_CTX *)alignof(const SSL_CTX *)sizeof(SSL_CONF_CTX *)alignof(SSL_CONF_CTX *)sizeof(ssl_conf_ctx_st *)alignof(ssl_conf_ctx_st *)sizeof(stack_st_SSL_CIPHER **)alignof(stack_st_SSL_CIPHER **)sizeof(ssl_cipher_st *)alignof(ssl_cipher_st *)sizeof(stack_st_SSL_COMP)alignof(stack_st_SSL_COMP)sizeof(stack_st_SSL_COMP *)alignof(stack_st_SSL_COMP *)sizeof(const SSL_COMP)alignof(const SSL_COMP)sizeof(const SSL_COMP *)alignof(const SSL_COMP *)sizeof(ssl_comp_st *)alignof(ssl_comp_st *)sizeof(const SSL_SESSION)alignof(const SSL_SESSION)sizeof(const SSL_SESSION *)alignof(const SSL_SESSION *)sizeof(const SSL_METHOD)alignof(const SSL_METHOD)sizeof(const SSL_METHOD *)alignof(const SSL_METHOD *)sizeof(ssl_method_st *)alignof(ssl_method_st *)sizeof(ssl_session_st **)alignof(ssl_session_st **)sizeof(const SSL_COMP *const)alignof(const SSL_COMP *const)sizeof(const SSL_COMP *const *)alignof(const SSL_COMP *const *)sizeof(sk_SSL_COMP_compfunc)alignof(sk_SSL_COMP_compfunc)sizeof(const stack_st_SSL_COMP)alignof(const stack_st_SSL_COMP)sizeof(const stack_st_SSL_COMP *)alignof(const stack_st_SSL_COMP *)sizeof(SSL_COMP *)alignof(SSL_COMP *)sizeof(sk_SSL_COMP_copyfunc)alignof(sk_SSL_COMP_copyfunc)sizeof(sk_SSL_COMP_freefunc)alignof(sk_SSL_COMP_freefunc)sizeof(const SSL_CIPHER *const)alignof(const SSL_CIPHER *const)sizeof(const SSL_CIPHER *const *)alignof(const SSL_CIPHER *const *)sizeof(sk_SSL_CIPHER_compfunc)alignof(sk_SSL_CIPHER_compfunc)sizeof(const stack_st_SSL_CIPHER)alignof(const stack_st_SSL_CIPHER)sizeof(const stack_st_SSL_CIPHER *)alignof(const stack_st_SSL_CIPHER *)sizeof(SSL_CIPHER *)alignof(SSL_CIPHER *)sizeof(sk_SSL_CIPHER_copyfunc)alignof(sk_SSL_CIPHER_copyfunc)sizeof(sk_SSL_CIPHER_freefunc)alignof(sk_SSL_CIPHER_freefunc)sizeof(lhash_st_SSL_SESSION)alignof(lhash_st_SSL_SESSION)sizeof(lhash_st_SSL_SESSION *)alignof(lhash_st_SSL_SESSION *)sizeof(const SRTP_PROTECTION_PROFILE)alignof(const SRTP_PROTECTION_PROFILE)sizeof(const SRTP_PROTECTION_PROFILE *)alignof(const SRTP_PROTECTION_PROFILE *)sizeof(const SRTP_PROTECTION_PROFILE *const)alignof(const SRTP_PROTECTION_PROFILE *const)sizeof(const SRTP_PROTECTION_PROFILE *const *)alignof(const SRTP_PROTECTION_PROFILE *const *)sizeof(sk_SRTP_PROTECTION_PROFILE_compfunc)alignof(sk_SRTP_PROTECTION_PROFILE_compfunc)sizeof(const stack_st_SRTP_PROTECTION_PROFILE)alignof(const stack_st_SRTP_PROTECTION_PROFILE)sizeof(const stack_st_SRTP_PROTECTION_PROFILE *)alignof(const stack_st_SRTP_PROTECTION_PROFILE *)sizeof(sk_SRTP_PROTECTION_PROFILE_copyfunc)alignof(sk_SRTP_PROTECTION_PROFILE_copyfunc)sizeof(sk_SRTP_PROTECTION_PROFILE_freefunc)alignof(sk_SRTP_PROTECTION_PROFILE_freefunc)sizeof(ssl_comp_st **)alignof(ssl_comp_st **)sizeof(ssl_cipher_st **)alignof(ssl_cipher_st **)sizeof(srtp_protection_profile_st **)alignof(srtp_protection_profile_st **)sizeof(tls_sigalgs_st)alignof(tls_sigalgs_st)sizeof(TLS_SIGALGS)alignof(TLS_SIGALGS)sizeof(TLS_SESSION_TICKET_EXT)alignof(TLS_SESSION_TICKET_EXT)sizeof(ssl_crock_st)alignof(ssl_crock_st)sizeof(RAND_METHOD *)alignof(RAND_METHOD *)sizeof(rand_meth_st *)alignof(rand_meth_st *)sizeof(const RAND_METHOD)alignof(const RAND_METHOD)sizeof(const RAND_METHOD *)alignof(const RAND_METHOD *)sizeof(ui_string_st)alignof(ui_string_st)sizeof(UI_STRING)alignof(UI_STRING)sizeof(UI_string_types)alignof(UI_string_types)sizeof(UI_METHOD *)alignof(UI_METHOD *)sizeof(ui_method_st *)alignof(ui_method_st *)sizeof(UI *)alignof(UI *)sizeof(ui_st *)alignof(ui_st *)sizeof(UI_STRING *)alignof(UI_STRING *)sizeof(ui_string_st *)alignof(ui_string_st *)sizeof(const UI_METHOD)alignof(const UI_METHOD)sizeof(const UI_METHOD *)alignof(const UI_METHOD *)sizeof(const UI_STRING)alignof(const UI_STRING)sizeof(const UI_STRING *)alignof(const UI_STRING *)sizeof(const UI_STRING *const)alignof(const UI_STRING *const)sizeof(const UI_STRING *const *)alignof(const UI_STRING *const *)sizeof(sk_UI_STRING_compfunc)alignof(sk_UI_STRING_compfunc)sizeof(stack_st_UI_STRING)alignof(stack_st_UI_STRING)sizeof(stack_st_UI_STRING *)alignof(stack_st_UI_STRING *)sizeof(const stack_st_UI_STRING)alignof(const stack_st_UI_STRING)sizeof(const stack_st_UI_STRING *)alignof(const stack_st_UI_STRING *)sizeof(sk_UI_STRING_copyfunc)alignof(sk_UI_STRING_copyfunc)sizeof(sk_UI_STRING_freefunc)alignof(sk_UI_STRING_freefunc)sizeof(ui_string_st **)alignof(ui_string_st **)sizeof(st_dynamic_fns)alignof(st_dynamic_fns)sizeof(dynamic_fns)alignof(dynamic_fns)sizeof(st_dynamic_MEM_fns)alignof(st_dynamic_MEM_fns)sizeof(dynamic_MEM_fns)alignof(dynamic_MEM_fns)sizeof(dyn_MEM_free_fn)alignof(dyn_MEM_free_fn)sizeof(dyn_MEM_realloc_fn)alignof(dyn_MEM_realloc_fn)sizeof(dyn_MEM_malloc_fn)alignof(dyn_MEM_malloc_fn)sizeof(ENGINE_CMD_DEFN_st)alignof(ENGINE_CMD_DEFN_st)sizeof(ENGINE_CMD_DEFN)alignof(ENGINE_CMD_DEFN)sizeof(EVP_PKEY_ASN1_METHOD **)alignof(EVP_PKEY_ASN1_METHOD **)sizeof(const int **)alignof(const int **)sizeof(ENGINE_PKEY_ASN1_METHS_PTR)alignof(ENGINE_PKEY_ASN1_METHS_PTR)sizeof(EVP_PKEY_METHOD **)alignof(EVP_PKEY_METHOD **)sizeof(ENGINE_PKEY_METHS_PTR)alignof(ENGINE_PKEY_METHS_PTR)sizeof(const EVP_MD **)alignof(const EVP_MD **)sizeof(ENGINE_DIGESTS_PTR)alignof(ENGINE_DIGESTS_PTR)sizeof(const EVP_CIPHER **)alignof(const EVP_CIPHER **)sizeof(ENGINE_CIPHERS_PTR)alignof(ENGINE_CIPHERS_PTR)sizeof(stack_st_X509 **)alignof(stack_st_X509 **)sizeof(ENGINE_SSL_CLIENT_CERT_PTR)alignof(ENGINE_SSL_CLIENT_CERT_PTR)sizeof(ENGINE_LOAD_KEY_PTR)alignof(ENGINE_LOAD_KEY_PTR)sizeof(ENGINE_CTRL_FUNC_PTR)alignof(ENGINE_CTRL_FUNC_PTR)sizeof(ENGINE_GEN_INT_FUNC_PTR)alignof(ENGINE_GEN_INT_FUNC_PTR)sizeof(const ENGINE)alignof(const ENGINE)sizeof(const ENGINE *)alignof(const ENGINE *)sizeof(const ENGINE_CMD_DEFN)alignof(const ENGINE_CMD_DEFN)sizeof(const ENGINE_CMD_DEFN *)alignof(const ENGINE_CMD_DEFN *)sizeof(ENGINE_CMD_DEFN_st *)alignof(ENGINE_CMD_DEFN_st *)sizeof(const dynamic_fns)alignof(const dynamic_fns)sizeof(const dynamic_fns *)alignof(const dynamic_fns *)sizeof(dynamic_bind_engine)alignof(dynamic_bind_engine)sizeof(st_dynamic_fns *)alignof(st_dynamic_fns *)sizeof(dynamic_v_check_fn)alignof(dynamic_v_check_fn)sizeof(evp_pkey_asn1_method_st **)alignof(evp_pkey_asn1_method_st **)sizeof(evp_pkey_method_st **)alignof(evp_pkey_method_st **)sizeof(evp_md_st **)alignof(evp_md_st **)sizeof(evp_cipher_st **)alignof(evp_cipher_st **)sizeof(ENGINE_GEN_FUNC_PTR)alignof(ENGINE_GEN_FUNC_PTR)sizeof(nand_page_0_boot_header)alignof(nand_page_0_boot_header)sizeof(nand_page_0_boot_header *)alignof(nand_page_0_boot_header *)sizeof(uint32_t[129])alignof(uint32_t[129])sizeof(unsigned int[129])alignof(unsigned int[129])sizeof(uint32_t[383])alignof(uint32_t[383])sizeof(unsigned int[383])alignof(unsigned int[383])sizeof(char[683])alignof(char[683])sizeof(char[510])alignof(char[510])sizeof(char[152])alignof(char[152])sizeof(gfh_brom_sec_cfg)alignof(gfh_brom_sec_cfg)sizeof(gfh_anti_clone)alignof(gfh_anti_clone)sizeof(gfh_bl_sec_key)alignof(gfh_bl_sec_key)sizeof(gfh_brom_cfg)alignof(gfh_brom_cfg)sizeof(gfh_bl_info)alignof(gfh_bl_info)sizeof(gfh_file_info)alignof(gfh_file_info)sizeof(gfh_common_header)alignof(gfh_common_header)sizeof(brom_layout_header)alignof(brom_layout_header)sizeof(gen_boot_header)alignof(gen_boot_header)sizeof(lk_hdr)alignof(lk_hdr)sizeof(gfh_header)alignof(gfh_header)sizeof(gen_device_header)alignof(gen_device_header)sizeof(brlyt_img_type)alignof(brlyt_img_type)sizeof(nand_boot_header)alignof(nand_boot_header)sizeof(uint8_t[512])alignof(uint8_t[512])sizeof(uint8_t[72])alignof(uint8_t[72])sizeof(lk_hdr *)alignof(lk_hdr *)sizeof(nand_boot_header *)alignof(nand_boot_header *)sizeof(const nand_boot_header)alignof(const nand_boot_header)sizeof(const nand_boot_header *)alignof(const nand_boot_header *)sizeof(brom_layout_header *)alignof(brom_layout_header *)sizeof(gfh_header *)alignof(gfh_header *)sizeof(gen_device_header *)alignof(gen_device_header *)sizeof(gfh_common_header *)alignof(gfh_common_header *)sizeof(gen_boot_header *)alignof(gen_boot_header *)sizeof(char[8960])alignof(char[8960])sizeof(char(*)[8960])alignof(char(*)[8960])sizeof(brom_img_type)alignof(brom_img_type)sizeof(const brom_img_type)alignof(const brom_img_type)sizeof(const brom_img_type[5])alignof(const brom_img_type[5])sizeof(brom_img_type[5])alignof(brom_img_type[5])sizeof(const brom_img_type *)alignof(const brom_img_type *)sizeof(brom_img_type *)alignof(brom_img_type *)sizeof(nand_header_type)alignof(nand_header_type)sizeof(const nand_header_type)alignof(const nand_header_type)sizeof(const nand_header_type[9])alignof(const nand_header_type[9])sizeof(nand_header_type[9])alignof(nand_header_type[9])sizeof(const nand_header_type *)alignof(const nand_header_type *)sizeof(nand_header_type *)alignof(nand_header_type *)sizeof(const brom_img_type[])alignof(const brom_img_type[])sizeof(brom_img_type[])alignof(brom_img_type[])sizeof(const nand_header_type[])alignof(const nand_header_type[])sizeof(nand_header_type[])alignof(nand_header_type[])sizeof(sb_ivt_header)alignof(sb_ivt_header)sizeof(sb_boot_image_version)alignof(sb_boot_image_version)sizeof(sb_source_entry)alignof(sb_source_entry)sizeof(sb_tag)alignof(sb_tag)sizeof(sb_command)alignof(sb_command)sizeof(sb_sections_header)alignof(sb_sections_header)sizeof(sb_key_dictionary_key)alignof(sb_key_dictionary_key)sizeof(sb_boot_image_header)alignof(sb_boot_image_header)sizeof(sb_image_ctx)alignof(sb_image_ctx)sizeof(sb_cmd_ctx)alignof(sb_cmd_ctx)sizeof(sb_section_ctx)alignof(sb_section_ctx)sizeof(sb_dcd_ctx)alignof(sb_dcd_ctx)sizeof(sb_cmd_list)alignof(sb_cmd_list)sizeof(sb_image_ctx *)alignof(sb_image_ctx *)sizeof(sb_section_ctx *)alignof(sb_section_ctx *)sizeof(sb_boot_image_header *)alignof(sb_boot_image_header *)sizeof(sb_key_dictionary_key *)alignof(sb_key_dictionary_key *)sizeof(sb_sections_header *)alignof(sb_sections_header *)sizeof(sb_cmd_ctx *)alignof(sb_cmd_ctx *)sizeof(sb_command *)alignof(sb_command *)sizeof(sb_dcd_ctx *)alignof(sb_dcd_ctx *)sizeof(sb_cmd_list *)alignof(sb_cmd_list *)sizeof(sb_ivt_header *)alignof(sb_ivt_header *)sizeof(ch_settings)alignof(ch_settings)sizeof(ch_toc)alignof(ch_toc)sizeof(ch_toc *)alignof(ch_toc *)sizeof(ch_settings *)alignof(ch_settings *)sizeof(const off_t)alignof(const off_t)sizeof(const ch_toc)alignof(const ch_toc)sizeof(const ch_toc *)alignof(const ch_toc *)sizeof(uint8_t[520])alignof(uint8_t[520])sizeof(unsigned char[520])alignof(unsigned char[520])sizeof(uint8_t(*)[520])alignof(uint8_t(*)[520])sizeof(unsigned char(*)[520])alignof(unsigned char(*)[520])sizeof(uint32_t[256])alignof(uint32_t[256])sizeof(pbl_header)alignof(pbl_header)sizeof(pbl_header *)alignof(pbl_header *)sizeof(unsigned char[1000000])alignof(unsigned char[1000000])sizeof(unsigned char(*)[1000000])alignof(unsigned char(*)[1000000])sizeof(uint32_t(*)[4])alignof(uint32_t(*)[4])sizeof(sigevent)alignof(sigevent)sizeof(re_pattern_buffer)alignof(re_pattern_buffer)sizeof(regex_t)alignof(regex_t)sizeof(regmatch_t)alignof(regmatch_t)sizeof(regoff_t)alignof(regoff_t)sizeof(__re_size_t)alignof(__re_size_t)sizeof(re_registers)alignof(re_registers)sizeof(reg_syntax_t)alignof(reg_syntax_t)sizeof(__re_long_size_t)alignof(__re_long_size_t)sizeof(regex_t *)alignof(regex_t *)sizeof(re_pattern_buffer *)alignof(re_pattern_buffer *)sizeof(const regex_t)alignof(const regex_t)sizeof(const regex_t *)alignof(const regex_t *)sizeof(const regex_t *__restrict__)alignof(const regex_t *__restrict__)sizeof(regmatch_t[__restrict__ ])alignof(regmatch_t[__restrict__ ])sizeof(struct <unnamed>[__restrict__ ])alignof(struct <unnamed>[__restrict__ ])sizeof(regex_t *__restrict__)alignof(regex_t *__restrict__)sizeof(re_registers *)alignof(re_registers *)sizeof(regoff_t *)alignof(regoff_t *)sizeof(re_dfa_t)alignof(re_dfa_t)sizeof(reg_errcode_t)alignof(reg_errcode_t)sizeof(active_reg_t)alignof(active_reg_t)sizeof(s_reg_t)alignof(s_reg_t)sizeof(re_dfa_t *)alignof(re_dfa_t *)sizeof(sig_atomic_t)alignof(sig_atomic_t)sizeof(sigval)alignof(sigval)sizeof(__sigval_t)alignof(__sigval_t)sizeof(siginfo_t)alignof(siginfo_t)sizeof(int[28])alignof(int[28])sizeof(sigval_t)alignof(sigval_t)sizeof(sigevent_t)alignof(sigevent_t)sizeof(__sighandler_t)alignof(__sighandler_t)sizeof(sigaction)alignof(sigaction)sizeof(siginfo_t *)alignof(siginfo_t *)sizeof(_ymmh_state)alignof(_ymmh_state)sizeof(_xsave_hdr)alignof(_xsave_hdr)sizeof(_fpstate)alignof(_fpstate)sizeof(_xmmreg)alignof(_xmmreg)sizeof(_fpxreg)alignof(_fpxreg)sizeof(_xstate)alignof(_xstate)sizeof(sigcontext)alignof(sigcontext)sizeof(_fpreg)alignof(_fpreg)sizeof(_fpx_sw_bytes)alignof(_fpx_sw_bytes)sizeof(__uint32_t[64])alignof(__uint32_t[64])sizeof(__uint64_t[5])alignof(__uint64_t[5])sizeof(__uint64_t[2])alignof(__uint64_t[2])sizeof(__uint64_t[8])alignof(__uint64_t[8])sizeof(_fpstate *)alignof(_fpstate *)sizeof(__uint32_t[24])alignof(__uint32_t[24])sizeof(unsigned int[24])alignof(unsigned int[24])sizeof(_xmmreg[16])alignof(_xmmreg[16])sizeof(_fpxreg[8])alignof(_fpxreg[8])sizeof(__uint32_t[4])alignof(__uint32_t[4])sizeof(__uint32_t[7])alignof(__uint32_t[7])sizeof(unsigned int[7])alignof(unsigned int[7])sizeof(stack_t)alignof(stack_t)sizeof(_libc_fpstate)alignof(_libc_fpstate)sizeof(mcontext_t)alignof(mcontext_t)sizeof(ucontext_t)alignof(ucontext_t)sizeof(_libc_fpstate *)alignof(_libc_fpstate *)sizeof(fpregset_t)alignof(fpregset_t)sizeof(greg_t)alignof(greg_t)sizeof(greg_t[23])alignof(greg_t[23])sizeof(gregset_t)alignof(gregset_t)sizeof(_libc_xmmreg)alignof(_libc_xmmreg)sizeof(_libc_fpxreg)alignof(_libc_fpxreg)sizeof(long long[23])alignof(long long[23])sizeof(ucontext_t *)alignof(ucontext_t *)sizeof(_libc_xmmreg[16])alignof(_libc_xmmreg[16])sizeof(_libc_fpxreg[8])alignof(_libc_fpxreg[8])sizeof(sigstack)alignof(sigstack)sizeof(const sigval)alignof(const sigval)sizeof(__sigset_t *)alignof(__sigset_t *)sizeof(__sigset_t *__restrict__)alignof(__sigset_t *__restrict__)sizeof(sigstack *)alignof(sigstack *)sizeof(const stack_t)alignof(const stack_t)sizeof(const stack_t *)alignof(const stack_t *)sizeof(const stack_t *__restrict__)alignof(const stack_t *__restrict__)sizeof(stack_t *)alignof(stack_t *)sizeof(stack_t *__restrict__)alignof(stack_t *__restrict__)sizeof(sigcontext *)alignof(sigcontext *)sizeof(const sigset_t)alignof(const sigset_t)sizeof(const sigset_t *)alignof(const sigset_t *)sizeof(const sigset_t *__restrict__)alignof(const sigset_t *__restrict__)sizeof(siginfo_t *__restrict__)alignof(siginfo_t *__restrict__)sizeof(sigset_t *)alignof(sigset_t *)sizeof(const sigaction)alignof(const sigaction)sizeof(const sigaction *)alignof(const sigaction *)sizeof(const sigaction *__restrict__)alignof(const sigaction *__restrict__)sizeof(sigaction *)alignof(sigaction *)sizeof(sigaction *__restrict__)alignof(sigaction *__restrict__)sizeof(sigset_t *__restrict__)alignof(sigset_t *__restrict__)sizeof(const siginfo_t)alignof(const siginfo_t)sizeof(const siginfo_t *)alignof(const siginfo_t *)sizeof(sig_t)alignof(sig_t)sizeof(sighandler_t)alignof(sighandler_t)sizeof(const char *const[65])alignof(const char *const[65])sizeof(char *[65])alignof(char *[65])sizeof(func_info)alignof(func_info)sizeof(trace_configline_info)alignof(trace_configline_info)sizeof(trace_line_type)alignof(trace_line_type)sizeof(func_info *)alignof(func_info *)sizeof(trace_call *)alignof(trace_call *)sizeof(trace_configline_info *)alignof(trace_configline_info *)sizeof(trace_configline_info **)alignof(trace_configline_info **)sizeof(objsection_info)alignof(objsection_info)sizeof(objsection_info *)alignof(objsection_info *)sizeof(regmatch_t *)alignof(regmatch_t *)sizeof(regmatch_t *__restrict__)alignof(regmatch_t *__restrict__)sizeof(trace_output_hdr *)alignof(trace_output_hdr *)sizeof(char[501])alignof(char[501])sizeof(const func_info)alignof(const func_info)sizeof(const func_info *)alignof(const func_info *)sizeof(spl_info)alignof(spl_info)sizeof(header0_info)alignof(header0_info)sizeof(header1_info)alignof(header1_info)sizeof(header0_info *)alignof(header0_info *)sizeof(spl_info *)alignof(spl_info *)sizeof(spl_info **)alignof(spl_info **)sizeof(header1_info *)alignof(header1_info *)sizeof(spl_info[9])alignof(spl_info[9])sizeof(const bool)alignof(const bool)sizeof(uint8_t[492])alignof(uint8_t[492])sizeof(unsigned char[492])alignof(unsigned char[492])sizeof(spl_info[])alignof(spl_info[])sizeof(socfpga_header_v1)alignof(socfpga_header_v1)sizeof(socfpga_header_v0)alignof(socfpga_header_v0)sizeof(socfpga_header_v0 *)alignof(socfpga_header_v0 *)sizeof(socfpga_header_v1 *)alignof(socfpga_header_v1 *)sizeof(uint8_t[65536])alignof(uint8_t[65536])sizeof(uint8_t[262144])alignof(uint8_t[262144])sizeof(unsigned char[262144])alignof(unsigned char[262144])sizeof(stm32_header)alignof(stm32_header)sizeof(stm32_header *)alignof(stm32_header *)sizeof(uint32_t[20])alignof(uint32_t[20])sizeof(unsigned int[20])alignof(unsigned int[20])sizeof(ubl_header)alignof(ubl_header)sizeof(ublimage_fld_types)alignof(ublimage_fld_types)sizeof(ublimage_cmd)alignof(ublimage_cmd)sizeof(unsigned char[2016])alignof(unsigned char[2016])sizeof(ubl_header *)alignof(ubl_header *)sizeof(table_entry_t[2])alignof(table_entry_t[2])sizeof(table_entry[2])alignof(table_entry[2])sizeof(uint32_t[128])alignof(uint32_t[128])sizeof(unsigned int[128])alignof(unsigned int[128])sizeof(uint32_t[65280])alignof(uint32_t[65280])sizeof(unsigned int[65280])alignof(unsigned int[65280])sizeof(zynq_header)alignof(zynq_header)sizeof(zynq_reginit)alignof(zynq_reginit)sizeof(zynq_header *)alignof(zynq_header *)sizeof(zynq_reginit[256])alignof(zynq_reginit[256])sizeof(zynq_reginit *)alignof(zynq_reginit *)sizeof(uint32_t[21])alignof(uint32_t[21])sizeof(unsigned int[21])alignof(unsigned int[21])sizeof(zynqmp_header)alignof(zynqmp_header)sizeof(bif_file_type)alignof(bif_file_type)sizeof(bif_entry)alignof(bif_entry)sizeof(bif_flags)alignof(bif_flags)sizeof(image_header_table)alignof(image_header_table)sizeof(partition_header)alignof(partition_header)sizeof(bif_output)alignof(bif_output)sizeof(const bif_flags)alignof(const bif_flags)sizeof(const bif_flags *)alignof(const bif_flags *)sizeof(bif_flags *)alignof(bif_flags *)sizeof(bif_entry *)alignof(bif_entry *)sizeof(bif_entry[32])alignof(bif_entry[32])sizeof(bif_flag)alignof(bif_flag)sizeof(const bif_file_type)alignof(const bif_file_type)sizeof(const bif_file_type *)alignof(const bif_file_type *)sizeof(bif_file_type *)alignof(bif_file_type *)sizeof(zynqmp_header *)alignof(zynqmp_header *)sizeof(image_header_table *)alignof(image_header_table *)sizeof(const bif_file_type[3])alignof(const bif_file_type[3])sizeof(bif_file_type[3])alignof(bif_file_type[3])sizeof(const bif_flags[10])alignof(const bif_flags[10])sizeof(bif_flags[10])alignof(bif_flags[10])sizeof(Elf64_Ehdr *)alignof(Elf64_Ehdr *)sizeof(Elf64_Shdr *)alignof(Elf64_Shdr *)sizeof(uint8_t[14])alignof(uint8_t[14])sizeof(partition_header *)alignof(partition_header *)sizeof(const char *[5])alignof(const char *[5])sizeof(const bif_file_type[])alignof(const bif_file_type[])sizeof(bif_file_type[])alignof(bif_file_type[])sizeof(const bif_flags[])alignof(const bif_flags[])sizeof(bif_flags[])alignof(bif_flags[])sizeof(zynqmp_reginit)alignof(zynqmp_reginit)sizeof(uint32_t[66])alignof(uint32_t[66])sizeof(unsigned int[66])alignof(unsigned int[66])sizeof(zynqmp_reginit[256])alignof(zynqmp_reginit[256])sizeof(uint32_t[7])alignof(uint32_t[7])sizeof(uint32_t[19])alignof(uint32_t[19])sizeof(unsigned int[19])alignof(unsigned int[19])sizeof(zynqmp_reginit *)alignof(zynqmp_reginit *)sizeof(const partition_header)alignof(const partition_header)sizeof(const partition_header *)alignof(const partition_header *)sizeof(const char *[8])alignof(const char *[8])array to pointer conversion[...](...){...}{...}__builtin_va_start__builtin_va_end__builtin_va_copy__noop__builtin_offsetof__INTADDR____has_assign__has_copy__has_nothrow_assign__has_nothrow_constructor__has_nothrow_copy__has_trivial_assign__has_trivial_constructor__has_trivial_copy__has_trivial_destructor__has_user_destructor__has_virtual_destructor__is_abstract__is_base_of__is_class__is_convertible_to__is_empty__is_enum__is_pod__is_polymorphic__is_union__builtin_types_compatible_p__builtin_shufflevector__builtin_convertvector__is_trivially_constructible__is_destructible__is_nothrow_destructible__is_trivially_destructible__is_trivially_assignable__is_nothrow_assignable__is_standard_layout__is_trivially_copyable__is_literal_type__has_trivial_move_constructor__has_trivial_move_assign__has_nothrow_move_assign__is_constructible__is_nothrow_constructible__has_finalizer__is_delegate__is_interface_class__is_ref_array__is_ref_class__is_sealed__is_simple_value_class__is_value_class__is_final__builtin_choose_expr__builtin_complextype mention#if CONFIG_IS_ENABLED(BLK)#if CONFIG_IS_ENABLED(BLOCK_CACHE)#if !defined(CONFIG_DM_PCI) || defined(CONFIG_DM_PCI_COMPAT)#if CONFIG_IS_ENABLED(OF_PRIOR_STAGE)#if CONFIG_IS_ENABLED(MULTI_DTB_FIT)#if defined(CONFIG_LCD) || defined(CONFIG_VIDEO)#if defined(CONFIG_POST)#if CONFIG_IS_ENABLED(PRE_CONSOLE_BUFFER)#if defined(CONFIG_SYS_I2C)#if CONFIG_VAL(SYS_MALLOC_F_LEN)#if CONFIG_IS_ENABLED(BLOBLIST)#if defined(CONFIG_TRANSLATION_OFFSET)#if CONFIG_IS_ENABLED(WDT)#if defined(CONFIG_ENV_IS_EMBEDDED)#if !defined(CONFIG_ENV_EEPROM_IS_ON_I2C) && defined(CONFIG_SYS_I2C_EEPROM_ADDR)#if defined(CONFIG_SYS_DRAM_TEST)#if defined(CONFIG_ARM)#if !defined(OF_ROOT_NODE_ADDR_CELLS_DEFAULT)#if !defined(of_compat_cmp)#if __cplusplus#if (__STD_C || defined(WIN32))#if __STD_C#if 0#if (__STD_C || defined(HAVE_MEMCPY))#if USE_MEMCPY#if !defined(MAP_ANONYMOUS) && defined(MAP_ANON)#if defined(BSD) || defined(DGUX) || defined(HAVE_GETPAGESIZE)#if defined(INTERNAL_LINUX_C_LIB) && defined(__ELF__)#if CONFIG_IS_ENABLED(SYS_MALLOC_SIMPLE)#if CONFIG_IS_ENABLED(OF_CONTROL)#if CONFIG_IS_ENABLED(OF_LIVE)#if CONFIG_IS_ENABLED(OF_PLATDATA)#if defined(CONFIG_IO_TRACE) && !defined(IOTRACE_IMPL) && \#if CONFIG_IS_ENABLED(DM_DEVICE_REMOVE)#if defined(CONFIG_PCI) && !defined(CONFIG_SPL_BUILD)#if __GCC_IEC_559 > 0#if __GCC_IEC_559_COMPLEX > 0#if defined __GNUC__ && !defined __STDC__#if __GNUC_PREREQ (4, 6) && !defined _LIBC#if !defined __cplusplus && __GNUC_PREREQ (3, 3)#if defined __cplusplus && __GNUC_PREREQ (2,8)#if (defined __cplusplus						\#if defined __clang__ && defined __has_extension#if __GNUC_PREREQ (4,3)#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L#if defined __GNUC__ && __GNUC__ >= 2#if !defined __GNUC__ || __GNUC__ < 2#if __GNUC_PREREQ (2,96)#if __GNUC_PREREQ (4, 3)#if __GNUC_PREREQ (2,5)#if __GNUC_PREREQ (3,1)#if __GNUC_PREREQ (3,2)#if __GNUC_PREREQ (4,5) || \#if __GNUC_PREREQ (2,8)#if __GNUC_PREREQ (2,97)#if __GNUC_PREREQ (3,3)#if __GNUC_PREREQ (3,4)#if __USE_FORTIFY_LEVEL > 0#if (!defined __cplusplus || __GNUC_PREREQ (4,3) \#if defined __GNUC_STDC_INLINE__ || defined __cplusplus#if !__GNUC_PREREQ (2,8)#if !__GNUC_PREREQ (2,92)#if __GNUC_PREREQ (3,1) && !defined __GNUG__#if __GNUC__ >= 3#if (!defined _Noreturn \#if __GNUC_PREREQ (8, 0)#if (!defined _Static_assert && !defined __cplusplus \#if defined __LONG_DOUBLE_MATH_OPTIONAL && defined __NO_LONG_DOUBLE_MATH#if !defined __LDBL_COMPAT || !defined __REDIRECT#if __GNUC_PREREQ (4,8) || __glibc_clang_prereq (3,5)#if !defined __cplusplus \#if defined __GNUC__ && defined __GNUC_MINOR__#if defined __clang_major__ && defined __clang_minor__#if (defined _BSD_SOURCE || defined _SVID_SOURCE) \#if (defined _DEFAULT_SOURCE					\#if (defined _ISOC11_SOURCE \#if (defined _ISOC99_SOURCE || defined _ISOC11_SOURCE \#if __cplusplus >= 201703L#if __cplusplus >= 201103L || defined __GXX_EXPERIMENTAL_CXX0X__#if !defined _POSIX_SOURCE && !defined _POSIX_C_SOURCE#if ((!defined __STRICT_ANSI__					\#if defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 500#if ((!defined _POSIX_C_SOURCE || (_POSIX_C_SOURCE - 0) < 199506L) \#if (defined _POSIX_SOURCE					\#if defined _POSIX_C_SOURCE && _POSIX_C_SOURCE >= 2 || defined _XOPEN_SOURCE#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199309L#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199506L#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200112L#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200809L#if (_XOPEN_SOURCE - 0) >= 500#if (_XOPEN_SOURCE - 0) >= 600#if (_XOPEN_SOURCE - 0) >= 700#if defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64#if defined _DEFAULT_SOURCE#if defined _FORTIFY_SOURCE && _FORTIFY_SOURCE > 0 \#if _FORTIFY_SOURCE > 1#if defined __cplusplus ? __cplusplus >= 201402L : defined __USE_ISOC11#if defined __USE_FILE_OFFSET64 && !defined __REDIRECT#if __GNUC_PREREQ (2, 7) && defined __OPTIMIZE__ \#if (!defined(_STDDEF_H) && !defined(_STDDEF_H_) && !defined(_ANSI_STDDEF_H) \#if (!defined(__need_wchar_t) && !defined(__need_size_t)	\#if defined (__BSD_NET2__) || defined (____386BSD____) || (defined (__FreeBSD__) && (__FreeBSD__ < 5)) || defined(__NetBSD__)#if defined (__FreeBSD__) && (__FreeBSD__ >= 5)#if defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) || defined(_X86_64_ANSI_H_)  || defined(_I386_ANSI_H_)#if !defined(_SIZE_T_) && !defined(_BSD_SIZE_T_)#if !defined(_PTRDIFF_T_) && !defined(_BSD_PTRDIFF_T_)#if !defined(_WCHAR_T_) && !defined(_BSD_WCHAR_T_)#if defined (__need_ptrdiff_t) || defined (_STDDEF_H_)#if defined (__need_size_t) || defined (_STDDEF_H_)#if defined (__need_wchar_t) || defined (_STDDEF_H_)#if defined (__sequent__) && defined (_PTRDIFF_T_)#if defined (_TYPE_ptrdiff_t) && (defined (__need_ptrdiff_t) || defined (_STDDEF_H_))#if defined (_TYPE_size_t) && (defined (__need_size_t) || defined (_STDDEF_H_))#if defined (_TYPE_wchar_t) && (defined (__need_wchar_t) || defined (_STDDEF_H_))#if defined (_STDDEF_H) || defined (__need_ptrdiff_t)#if defined (_STDDEF_H) || defined (__need_size_t)#if (defined (__FreeBSD__) && (__FreeBSD__ >= 5)) \#if !(defined (__GNUG__) && defined (size_t))#if defined (_STDDEF_H) || defined (__need_wchar_t)#if !defined (_ANSI_SOURCE) && !defined (_POSIX_SOURCE)#if defined (__FreeBSD__) && (__FreeBSD__ < 5)#if __BSD_VISIBLE#if defined (__need_wint_t)#if defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) || defined(_X86_64_ANSI_H_) || defined(_I386_ANSI_H_)#if defined (_STDDEF_H) || defined (__need_NULL)#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) \#if defined(__cplusplus) && __cplusplus >= 201103L#if defined __USE_POSIX199309 || defined __USE_UNIX98#if defined __O_RSYNC#if defined __USE_UNIX98 || defined __USE_XOPEN2K8#if !defined _SYS_STAT_H && !defined _FCNTL_H#if defined __x86_64__ || !defined __USE_FILE_OFFSET64#if defined __x86_64__  || !defined __USE_FILE_OFFSET64#if defined __USE_LARGEFILE64 && !defined __off64_t_defined#if defined __USE_XOPEN || defined __USE_XOPEN2K8#if (defined __USE_UNIX98 || defined __USE_XOPEN2K8) && defined __S_IFSOCK#if defined __USE_MISC || defined __USE_XOPEN#if !defined F_LOCK && (defined __USE_MISC || (defined __USE_XOPEN_EXTENDED \#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function \#if __USE_FORTIFY_LEVEL > 0 && defined __GNUC__#if defined __USE_LARGEFILE64 && !defined __ino64_t_defined#if (defined __USE_XOPEN || defined __USE_XOPEN2K8) \#if (defined __USE_MISC || defined __USE_XOPEN) && !defined __key_t_defined#if !__GNUC_PREREQ (2, 7)#if __WORDSIZE == 64#if (defined __USE_UNIX98 || defined __USE_XOPEN2K8) \#if defined __USE_POSIX199506 || defined __USE_UNIX98#if __glibc_c99_flexarr_available#if defined __cplusplus || !__GNUC_PREREQ (2, 7) || !defined __USE_GNU#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function#if defined _UAPI_LINUX_IN6_H \#if !__USE_KERNEL_IPV6_DEFS#if !defined _BYTESWAP_H && !defined _NETINET_IN_H && !defined _ENDIAN_H#if __GNUC_PREREQ (4, 8)#if !defined _NETINET_IN_H && !defined _ENDIAN_H#if __BYTE_ORDER == __BIG_ENDIAN#if __BYTE_ORDER == __LITTLE_ENDIAN#if !(__USE_FORTIFY_LEVEL > 0 && defined __fortify_function)#if defined __USE_MISC && defined __GNUC__ && defined __OPTIMIZE__ \#if defined __USE_UNIX98 || defined __USE_XOPEN2K#if defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)#if defined __USE_ISOC99 || defined __USE_UNIX98#if __GLIBC_USE (LIB_EXT2)#if defined __USE_ISOC99 && !defined __USE_GNU \#if !defined __USE_GNU \#if defined __USE_MISC \#if __GLIBC_USE (DEPRECATED_GETS)#if defined __USE_LARGEFILE || defined __USE_XOPEN2K#if (defined __USE_XOPEN && !defined __USE_XOPEN2K) || defined __USE_GNU#if defined __USE_XOPEN && !defined __USE_XOPEN2K && !defined __USE_GNU#if (defined __USE_XOPEN || defined __USE_XOPEN2K8) && !defined _SYS_WAIT_H#if defined __USE_ISOC99 && !defined __lldiv_t_defined#if __HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)#if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)#if __HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)#if __HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)#if __HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)#if __HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)#if __HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)#if __GLIBC_USE (IEC_60559_BFP_EXT)#if __HAVE_FLOAT16#if __HAVE_FLOAT32#if __HAVE_FLOAT64#if __HAVE_FLOAT128#if __HAVE_FLOAT32X#if __HAVE_FLOAT64X#if __HAVE_FLOAT128X#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K) \#if defined __USE_ISOC11 || defined __USE_ISOCXX11#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \#if defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K#if defined __cplusplus && __GNUC_PREREQ (4, 4)#if defined __USE_MISC || !defined __USE_XOPEN2K8#if defined __OPTIMIZE__#if defined __USE_MISC || !defined __USE_XOPEN2K8 || defined __USE_XOPEN2K8XSI#if __GNUC_PREREQ (3,4) && __USE_FORTIFY_LEVEL > 0 \#if (defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	\#if defined __USE_GNU && defined __GNUC__#if defined __USE_XOPEN2K && !defined __USE_GNU#if defined __USE_XOPEN || defined __USE_XOPEN2K#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K#if defined __USE_MISC && !defined L_SET#if defined __USE_MISC#if defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_XOPEN2K)#if defined __USE_MISC || !defined __USE_XOPEN2K#if defined __USE_POSIX199309 \#if (defined __USE_MISC || defined __USE_XOPEN_EXTENDED) && !defined F_LOCK#if defined __USE_XOPEN && !defined __USE_XOPEN2K#if defined __USE_UNIX98 && !defined __USE_XOPEN2K#if defined(__x86_64__) && !defined(__ILP32__)#if __BITS_PER_LONG != 64#if __UAPI_DEF_ETHHDR#if defined __OFF_T_MATCHES_OFF64_T && defined __INO_T_MATCHES_INO64_T#if !defined __USE_XOPEN2K || defined __USE_GNU#if __WORDSIZE == 64 || __WORDSIZE32_SIZE_ULONG#if defined __USE_MISC && !defined d_fileno#if defined __OPTIMIZE__ && defined _DIR_dirfd#if defined __USE_GNU && defined __USE_LARGEFILE64#if !defined _SETJMP_H && !defined _PTHREAD_H#if (!defined __STRICT_ANSI__ || defined __USE_POSIX) \#if defined __USE_POSIX199309 || defined __USE_ISOC11#if !defined _UNISTD_H && !defined _STDIO_H#if defined __USE_POSIX2 && !defined __USE_POSIX_IMPLICITLY \#if (defined __USE_MISC || defined __USE_XOPEN_EXTENDED) \#if defined __USE_MISC && !defined __S_IFLNK#if (defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K) \#if defined __USE_POSIX199309 || defined __USE_XOPEN_EXTENDED#if defined __USE_LARGEFILE64 \#if defined __USE_GNU && !defined __cplusplus#if defined(CLOCK_MONOTONIC) && defined(_POSIX_MONOTONIC_CLOCK)#if (__BITS_PER_LONG != 32 || !defined(__USE_TIME_BITS64)) && !defined(__KERNEL)#if defined(_AIX)#if defined(__BEOS__)#if defined(__HAIKU__)#if defined(bsdi) || defined(__bsdi) || defined(__bsdi__)#if defined(_arch_dreamcast)#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__DragonFly__)#if defined(hpux) || defined(__hpux) || defined(__hpux__)#if defined(sgi) || defined(__sgi) || defined(__sgi__) || defined(_SGI_SOURCE)#if defined(linux) || defined(__linux) || defined(__linux__)#if defined(__APPLE__)#if defined(__NetBSD__)#if defined(__OpenBSD__)#if defined(__OS2__)#if defined(osf) || defined(__osf) || defined(__osf__) || defined(_OSF_SOURCE)#if defined(__QNXNTO__)#if defined(riscos) || defined(__riscos) || defined(__riscos__)#if defined(__SVR4)#if defined(WIN32) || defined(_WIN32)#if HAVE_LIBC#if __WORDSIZE32_PTRDIFF_LONG#if __WORDSIZE32_SIZE_ULONG#if defined(__BEOS__) || defined(__HAIKU__)#if defined(__GNUC__)#if defined(__GNUC__) && __GNUC__ >= 4#if defined(__WIN32__) && !defined(__GNUC__)#if defined (__GNUC__) && __GNUC__ < 4#if defined(_MSC_VER) || defined(__MWERKS__) || defined(__BORLANDC__)#if defined(_MSC_VER) || defined(__BORLANDC__) || \#if !defined(__MRC__) && !defined(_SGI_SOURCE)#if !defined(__MACH__)#if defined(_MSC_VER) || defined(__MWERKS__) || defined(__WATCOMC__)  || defined(__BORLANDC__)#if (defined(__MWERKS__) && defined(__MACOS__))#if defined(STDC_HEADERS)#if defined(HAVE_STDLIB_H)#if defined(HAVE_STDDEF_H)#if defined(HAVE_STDARG_H)#if !defined(STDC_HEADERS) && defined(HAVE_MEMORY_H)#if defined(HAVE_INTTYPES_H)#if defined(HAVE_ICONV) && defined(HAVE_ICONV_H)#if defined(HAVE_ALLOCA) && !defined(alloca)#if defined(HAVE_ALLOCA_H)#if defined(__GNUC__) && defined(i386)#if defined(__MACH__) && defined(__APPLE__)#if defined(__WIN32__) || \#if defined(__MACOS__)#if defined(__hppa__) || \#if defined(__GNUC__) && defined(__i386__) && \#if SDL_BYTEORDER == SDL_LIL_ENDIAN#if ((defined(__WIN32__) && !defined(HAVE_LIBC)) || defined(__OS2__)) &&  !defined(__SYMBIAN32__)#if defined(__WIN32__) && !defined(__SYMBIAN32__)#if CONFIG_IS_ENABLED(LOG)#if !defined(AVB_INSIDE_LIBAVB_H) && !defined(AVB_COMPILATION)#if CONFIG_IS_ENABLED(MMC_HS200_SUPPORT)#if CONFIG_IS_ENABLED(MMC_UHS_SUPPORT)#if CONFIG_IS_ENABLED(DM_MMC)#if CONFIG_IS_ENABLED(MMC_HS400_ES_SUPPORT)#if !CONFIG_IS_ENABLED(DM_MMC)#if CONFIG_IS_ENABLED(MMC_HS400_SUPPORT)#if !CONFIG_IS_ENABLED(BLK)#if CONFIG_IS_ENABLED(MMC_WRITE)#if CONFIG_IS_ENABLED(MMC_HW_PARTITIONING)#if CONFIG_IS_ENABLED(DM_REGULATOR)#if CONFIG_IS_ENABLED(MMC_UHS_SUPPORT) || \#if defined(CONFIG_SH)#if defined(CONFIG_MICROBLAZE) || defined(CONFIG_SH)#if defined(CONFIG_CMD_NET)#if defined(CONFIG_HAS_ETH1)#if defined(CONFIG_HAS_ETH2)#if defined(CONFIG_HAS_ETH3)#if defined(CONFIG_HAS_ETH4)#if defined(CONFIG_HAS_ETH5)#if defined(CONFIG_PPC)#if defined(CONFIG_MPC8xx) || defined(CONFIG_E500)#if defined(CONFIG_CPM2)#if defined(CONFIG_SYS_SRAM_BASE)#if defined(CONFIG_CMD_NET) && !defined(CONFIG_DM_ETH)#if defined(CONFIG_SYS_INIT_RAM_ADDR)#if defined(CONFIG_SYS_MBAR)#if !(CONFIG_IS_ENABLED(SYS_ICACHE_OFF) && CONFIG_IS_ENABLED(SYS_DCACHE_OFF))#if defined(CONFIG_CMD_BMP) || defined(CONFIG_SPLASH_SCREEN)#if defined(CONFIG_CPU_PXA25X) || defined(CONFIG_CPU_PXA27X) || \#if defined(CONFIG_LCD_INFO_BELOW_LOGO)#if LCD_BPP == LCD_COLOR8#if LCD_BPP == LCD_COLOR16#if defined(CONFIG_SPLASH_SCREEN) && defined(CONFIG_CMD_BMP)#if CONFIG_IS_ENABLED(SYS_STDIO_DEREGISTER)#if defined(CONFIG_VIDEO) || defined(CONFIG_CFB_CONSOLE)#if defined(CONFIG_FORMIKE)#if defined(CONFIG_LG4573)#if defined(CONFIG_SPL_BOOTCOUNT_LIMIT) || defined(CONFIG_BOOTCOUNT_LIMIT)#if !defined(CONFIG_SYS_BOOTCOUNT_LE) && !defined(CONFIG_SYS_BOOTCOUNT_BE)#if defined(CONFIG_SPL_BUILD) && !defined(CONFIG_SPL_BOOTCOUNT_LIMIT)#if CONFIG_IS_ENABLED(SYS_LONGHELP)#if CONFIG_IS_ENABLED(EFI_LOADER)#if !CONFIG_IS_ENABLED(GENERATE_ACPI_TABLE)#if CONFIG_IS_ENABLED(GENERATE_ACPI_TABLE)#if defined(CONFIG_FIT_SIGNATURE)#if defined(CONFIG_ENV_IS_IN_FLASH)#if !defined(CONFIG_ENV_ADDR_REDUND) && defined(CONFIG_ENV_OFFSET_REDUND)#if defined(CONFIG_ENV_SECT_SIZE) || defined(CONFIG_ENV_SIZE)#if defined(CONFIG_ENV_ADDR_REDUND) && !defined(CONFIG_ENV_SIZE_REDUND)#if (CONFIG_ENV_ADDR >= CONFIG_SYS_MONITOR_BASE) &&		\#if defined(CONFIG_ENV_ADDR_REDUND) || defined(CONFIG_ENV_OFFSET_REDUND)#if defined(CONFIG_ENV_IS_IN_MMC)#if defined(CONFIG_ENV_IS_IN_NAND)#if defined(CONFIG_ENV_OFFSET_OOB)#if defined(CONFIG_ENV_IS_IN_UBI)#if defined(CONFIG_ENV_UBI_VOLUME_REDUND)#if !defined(CONFIG_ENV_IS_IN_FLASH)	&& \#if defined(CONFIG_ENV_IS_EMBEDDED) && !defined(ENV_IS_EMBEDDED)#if defined(CONFIG_NEEDS_MANUAL_RELOC)#if BITS_PER_LONG == 64#if IS_ENABLED(CONFIG_DM)#if defined(CONFIG_NAND_FSL_ELBC) || defined(CONFIG_NAND_FSL_IFC)#if defined(CONFIG_NAND_FSL_ELBC) || defined(CONFIG_NAND_ATMEL)\#if defined(__MSDOS__) && !defined(MSDOS)#if (defined(OS_2) || defined(__OS2__)) && !defined(OS2)#if defined(_WINDOWS) && !defined(WINDOWS)#if defined(_WIN32) || defined(_WIN32_WCE) || defined(__WIN32__)#if (defined(MSDOS) || defined(OS2) || defined(WINDOWS)) && !defined(WIN32)#if !defined(__GNUC__) && !defined(__FLAT__) && !defined(__386__)#if __STDC_VERSION__ >= 199901L#if !defined(STDC) && (defined(__STDC__) || defined(__cplusplus))#if !defined(STDC) && (defined(__GNUC__) || defined(__BORLANDC__))#if !defined(STDC) && (defined(MSDOS) || defined(WINDOWS) || defined(WIN32))#if !defined(STDC) && (defined(OS2) || defined(__HOS_AIX__))#if defined(__OS400__) && !defined(STDC)#if defined(__MWERKS__)||defined(applec)||defined(THINK_C)||defined(__SC__)#if defined(M_I86SM) || defined(M_I86MM)#if (defined(__SMALL__) || defined(__MEDIUM__))#if defined(WINDOWS) || defined(WIN32)#if defined(WIN32) && (!defined(__BORLANDC__) || (__BORLANDC__ >= 0x500))#if defined (__BEOS__)#if !defined(__MACTYPES__)#if defined(__OS400__)#if defined(__MVS__)#if !defined(ZUTIL_H) && !defined(NO_DUMMY_DECL)#if defined(CONFIG_CMD_IMI)#if defined(CONFIG_CMD_IMLS)#if defined(CONFIG_CMD_IMLS) || defined(CONFIG_CMD_IMLS_NAND)#if defined(CONFIG_PPC) || defined(CONFIG_MIPS)#if defined(CONFIG_OF_LIBFDT)#if defined(CONFIG_FIT)#if defined(CONFIG_SYS_BOOT_RAMDISK_HIGH)#if defined(CONFIG_TRACE)#if defined(CONFIG_CMD_BOOTD)#if defined(CONFIG_LEGACY_IMAGE_FORMAT)#if defined(CONFIG_ANDROID_BOOT_IMAGE)#if defined(CONFIG_CMD_IMLS_NAND)#if !defined(CONFIG_SYS_I2C_MAX_HOPS)#if !defined(CONFIG_SYS_RTC_BUS_NUM)#if !defined(CONFIG_SYS_SPD_BUS_NUM)#if (defined(CONFIG_AT91RM9200) || \#if defined(CONFIG_SYS_I2C) || defined(CONFIG_I2C_MULTI_BUS)#if !defined(CONFIG_SYS_MAX_I2C_BUS)#if CONFIG_IS_ENABLED(FIT)#if defined(CONFIG_EXT4_WRITE)#if defined (__ARM__) || defined (__I386__) || defined (__M68K__) || defined (__bfin__) ||\#if defined (__MIPS__)#if defined(__SH__) || defined(__XTENSA__)#if defined(__LITTLE_ENDIAN)#if ARCH_DMA_MINALIGN > 32#if !CONFIG_IS_ENABLED(DM_USB)#if CONFIG_IS_ENABLED(DM_USB)#if defined(CONFIG_USB_MUSB_HOST) || CONFIG_IS_ENABLED(DM_USB)#if defined CONFIG_USB_EHCI_HCD || defined CONFIG_USB_MUSB_HOST \#if defined(CONFIG_CMD_USB) && defined(CONFIG_USB_STORAGE)#if defined(CONFIG_CMD_EXT4_WRITE)#if CONFIG_IS_ENABLED(DM_USB_GADGET)#if CONFIG_IS_ENABLED(FASTBOOT_FLASH)#if CONFIG_IS_ENABLED(FASTBOOT_CMD_OEM_FORMAT)#if CONFIG_IS_ENABLED(UDP_FUNCTION_FASTBOOT)#if CONFIG_IS_ENABLED(USB_FUNCTION_FASTBOOT)#if defined(__linux__) && defined(__KERNEL__)#if __LITTLE_ENDIAN#if defined(CONFIG_JFFS2_LZO)#if defined(CONFIG_CMD_MTDPARTS)#if defined(CONFIG_MTD_NOR_FLASH)#if defined(CONFIG_SYS_FLASH_PROTECTION)#if defined(CONFIG_DM_GPIO) && !defined(gpio_status)#if defined(CONFIG_DM_GPIO)#if defined(CONFIG_SYS_I2C_NOPROBES)#if !defined(CONFIG_SYS_I2C) && !defined(CONFIG_DM_I2C)#if !defined(CONFIG_SYS_I2C_FRAM)#if defined(CONFIG_CMD_SDRAM)#if defined(CONFIG_I2C_EDID)#if defined(CONFIG_SYS_I2C) || defined(CONFIG_DM_I2C)#if defined(CONFIG_SYS_I2C) || defined(CONFIG_I2C_MULTI_BUS) || \#if defined(CONFIG_DM_I2C)#if defined(CONFIG_SYS_I2C) || \#if !defined(__ASSEMBLY__)#if defined(CONFIG_WATCHDOG) || defined(CONFIG_HW_WATCHDOG)#if defined(CONFIG_HW_WATCHDOG) && defined(CONFIG_WATCHDOG)#if defined(__ASSEMBLY__)#if defined(CONFIG_WATCHDOG)#if defined(CONFIG_SPL_BUILD) &&		\#if defined(CONFIG_HW_WATCHDOG) && !defined(__ASSEMBLY__)#if defined(CONFIG_MPC85xx) && !defined(__ASSEMBLY__)#if defined(CONFIG_IDE_PCMCIA)#if (defined(CONFIG_X86) && !defined(CONFIG_X86_64)) || defined(CONFIG_PPC)#if !CONFIG_IS_ENABLED(SYS_MALLOC_SIMPLE)#if defined(CONFIG_CMD_I2C) && !defined(CONFIG_DM_I2C)#if !defined(CONFIG_CMD_SPI) || defined(CONFIG_DM_SPI)#if defined(CONFIG_X86)#if defined(CONFIG_CMD_LOADB)#if defined(CONFIG_CMD_LOADS)#if defined(CONFIG_CMD_SAVES)#if defined(_MSC_VER) || defined(__BORLANDC__)#if _MSC_VER >= 1300#if defined(CONFIG_SYS_ALT_MEMTEST)#if defined(CONFIG_MII_INIT)#if defined(CONFIG_CMD_NAND)#if defined(CONFIG_CMD_ONENAND)#if !defined(MTDIDS_DEFAULT)#if !defined(MTDPARTS_DEFAULT)#if defined(CONFIG_SYS_MTDPARTS_RUNTIME)#if defined(CONFIG_CMD_MTDPARTS_SHOW_NET_SIZES)#if defined(CONFIG_CMD_MTDPARTS_SPREAD)#if defined(CONFIG_CMD_DHCP)#if defined(CONFIG_CMD_NFS)#if !defined(CONFIG_BOOTP_SERVERIP)#if defined(CONFIG_BOOTP_DNS2)#if defined(CONFIG_CMD_SNTP) && defined(CONFIG_BOOTP_TIMEOFFSET)#if defined(CONFIG_CMD_SNTP) && defined(CONFIG_BOOTP_NTPSERVER)#if defined(CONFIG_CMD_PING)#if defined(CONFIG_CMD_CDP)#if defined(CONFIG_CMD_SNTP)#if defined(CONFIG_CMD_DNS)#if defined(CONFIG_CMD_LINK_LOCAL)#if defined(CONFIG_ENV_IS_IN_EEPROM)	|| \#if !defined(ENV_IS_IN_DEVICE)		&& \#if defined(CONFIG_CMD_NVEDIT_EFI)#if CONFIG_IS_ENABLED(CMD_NVEDIT_EFI)#if defined(CONFIG_CMD_ASKENV)#if defined(CONFIG_CMD_ENV_CALLBACK)#if defined(CONFIG_CMD_ENV_FLAGS)#if defined(CONFIG_CMD_EDITENV)#if defined(CONFIG_CMD_SAVEENV) && defined(ENV_IS_IN_DEVICE)#if defined(CONFIG_CMD_ERASEENV)#if defined(CONFIG_CMD_NVEDIT_INFO)#if defined(CONFIG_CMD_SAVEENV) && !defined(CONFIG_ENV_IS_NOWHERE)#if defined(CONFIG_CMD_ENV_EXISTS)#if defined(CONFIG_CMD_EXPORTENV)#if defined(CONFIG_CMD_GREPENV)#if defined(CONFIG_CMD_IMPORTENV)#if defined(CONFIG_CMD_RUN)#if defined(CONFIG_DM_PCI)#if CONFIG_IS_ENABLED(PINCTRL_GENERIC)#if CONFIG_IS_ENABLED(PINCTRL)#if defined(CONFIG_MENU_SHOW)#if CONFIG_IS_ENABLED(REMOTEPROC)#if defined(CONFIG_DM_PCI) || defined(CONFIG_DM_SCSI)#if !defined(CONFIG_DM_SCSI) && !defined(CONFIG_AHCI)#if CONFIG_IS_ENABLED(HANDOFF)#if CONFIG_IS_ENABLED(LOAD_FIT) || CONFIG_IS_ENABLED(LOAD_FIT_FULL)#if defined(CONFIG_CMD_SOURCE)#if defined(CONFIG_TPM_V1)#if defined(CONFIG_TPM_V2)#if defined(CONFIG_TPM_FLUSH_RESOURCES) || defined(CONFIG_TPM_LIST_RESOURCES)#if defined(CONFIG_USB_HOST_ETHER) && !defined(CONFIG_DM_ETH)#if !defined CONFIG_DM_USB && defined CONFIG_USB_KEYBOARD#if defined(CONFIG_BZIP2)#if defined(CONFIG_HW_WATCHDOG) || defined(CONFIG_WATCHDOG)#if defined(CONFIG_BZIP2) && defined(CONFIG_LEGACY_IMAGE_FORMAT)#if (__STDC_VERSION__ >= 201112L) || defined(__cplusplus)#if defined(CONFIG_ARCH_MPC8360)#if (__GNUC__ >= 4 && __GNUC_MINOR__ >= 3)#if defined(CONFIG_AUTOBOOT_KEYED)#if defined(CONFIG_AUTOBOOT_STOP_STR_SHA256)#if defined(CONFIG_OF_CONTROL) && defined(CONFIG_SYS_TEXT_BASE)#if defined(CONFIG_AUTOBOOT_KEYED) && !defined(CONFIG_AUTOBOOT_KEYED_CTRLC)#if (defined(CONFIG_MVS) && CONFIG_MVS < 2)#if defined(CONFIG_MP) && defined(CONFIG_PPC)#if defined(CONFIG_HW_WATCHDOG) && \#if !defined(CONFIG_SANDBOX) && !defined(CONFIG_EFI_APP)#if defined(CONFIG_DISPLAY_CPUINFO) && CONFIG_IS_ENABLED(CPU)#if defined(CONFIG_NR_DRAM_BANKS) && defined(CONFIG_SYS_SDRAM_BASE)#if defined(CONFIG_VID)#if defined(__ARM__) || defined(__MICROBLAZE__)#if defined(CONFIG_SYS_MEM_TOP_HIDE)#if defined(CONFIG_MP) && (defined(CONFIG_MPC86xx) || defined(CONFIG_E500))#if defined(CONFIG_E500) || defined(CONFIG_MIPS)#if defined(CONFIG_M68K) || defined(CONFIG_MIPS) || defined(CONFIG_PPC) || \#if defined(CONFIG_E500) || defined(CONFIG_MPC86xx)#if defined(CONFIG_M68K)#if defined(CONFIG_MPC83xx)#if defined(CONFIG_PPC) || defined(CONFIG_M68K)#if defined(CONFIG_M68K) && defined(CONFIG_PCI)#if defined(CONFIG_EXTRA_CLOCK)#if !defined(CONFIG_ARM) && !defined(CONFIG_SANDBOX) && \#if defined(CONFIG_X86) || defined(CONFIG_ARC)#if defined(CONFIG_CONSOLE_RECORD) && CONFIG_VAL(SYS_MALLOC_F_LEN)#if defined(CONFIG_DM) && CONFIG_VAL(SYS_MALLOC_F_LEN)#if defined(CONFIG_HAVE_FSP)#if defined(CONFIG_BOARD_EARLY_INIT_F)#if defined(CONFIG_PPC) || defined(CONFIG_SYS_FSL_CLK) || defined(CONFIG_M68K)#if !defined(CONFIG_M68K)#if defined(CONFIG_BOARD_POSTCLK_INIT)#if defined(CONFIG_PPC) || defined(CONFIG_SH) || defined(CONFIG_X86)#if defined(CONFIG_SYSRESET)#if defined(CONFIG_DISPLAY_CPUINFO)#if defined(CONFIG_DTB_RESELECT)#if defined(CONFIG_DISPLAY_BOARDINFO)#if defined(CONFIG_MISC_INIT_F)#if defined(CONFIG_VID) && !defined(CONFIG_SPL)#if defined(CONFIG_XTENSA)#if !CONFIG_IS_ENABLED(X86_64)#if CONFIG_POST & CONFIG_SYS_POST_UART#if defined(CONFIG_MPC83xx) || defined(CONFIG_MPC85xx) || \#if defined(CONFIG_CMD_BEDBUG)#if defined(CONFIG_CMD_KGDB)#if defined(CONFIG_GPIO_HOG)#if defined(CONFIG_MPC85xx) || defined(CONFIG_MPC86xx)#if !defined(CONFIG_ENV_ADDR) || defined(ENV_IS_EMBEDDED)#if defined(CONFIG_PPC) || defined(CONFIG_M68K) || defined(CONFIG_MIPS)#if defined(CONFIG_SYS_INIT_RAM_LOCK) && defined(CONFIG_E500)#if defined(CONFIG_CONSOLE_RECORD)#if defined(CONFIG_SYS_UPDATE_FLASH_SIZE)#if defined(CONFIG_OXC) || defined(CONFIG_RMU)#if defined(CONFIG_API)#if defined(CONFIG_LED_STATUS)#if defined(CONFIG_LED_STATUS_BOOT)#if defined(CONFIG_SCSI) && !defined(CONFIG_DM_SCSI)#if defined(CONFIG_RESET_PHY_R)#if defined(CONFIG_CMD_PCMCIA) && !defined(CONFIG_IDE)#if defined(CONFIG_IDE) && !defined(CONFIG_BLK)#if defined(CONFIG_START_IDE)#if defined(CONFIG_PRAM)#if defined(CONFIG_ARM) || defined(CONFIG_NDS32) || defined(CONFIG_RISCV) || \#if defined(CONFIG_BOARD_EARLY_INIT_R)#if defined(CONFIG_PCI) && defined(CONFIG_SYS_EARLY_PCI_INIT)#if defined(CONFIG_PPC) || defined(CONFIG_M68K) || defined(CONFIG_X86)#if defined(CONFIG_ID_EEPROM) || defined(CONFIG_SYS_I2C_MAC_OFFSET)#if defined(CONFIG_PCI) && !defined(CONFIG_SYS_EARLY_PCI_INIT)#if defined(CONFIG_MICROBLAZE) || defined(CONFIG_M68K)#if CONFIG_IS_ENABLED(X86_64)#if !defined(CONFIG_X86) && !defined(CONFIG_ARM) && !defined(CONFIG_ARM64)#if defined(CONFIG_CMD_USB)#if CONFIG_IS_ENABLED(LEGACY_IMAGE_FORMAT)#if IMAGE_ENABLE_FIT#if IMAGE_ENABLE_OF_LIBFDT#if defined(CONFIG_FPGA)#if !defined(USE_HOSTCC) || defined(CONFIG_FIT_SIGNATURE)#if defined(CONFIG_SILENT_CONSOLE) && !defined(CONFIG_SILENT_U_BOOT_ONLY)#if IMAGE_ENABLE_OF_LIBFDT && defined(CONFIG_LMB)#if defined(CONFIG_OPTEE)#if defined(CONFIG_BOOTM_NETBSD) || defined(CONFIG_BOOTM_PLAN9)#if defined(CONFIG_BOOTM_OSE)#if defined(CONFIG_BOOTM_PLAN9)#if defined(CONFIG_BOOTM_VXWORKS) && \#if defined(CONFIG_CMD_ELF)#if !CONFIG_IS_ENABLED(HUSH_PARSER)#if defined(CONFIG_HUSH_INIT_VAR)#if defined(__cplusplus)#if 1#if __GNUC__#if defined(CONFIG_SYS_XTRACE)#if CONFIG_IS_ENABLED(CONSOLE_MUX)#if !CONFIG_IS_ENABLED(SILENT_CONSOLE_UPDATE_ON_SET)#if !CONFIG_IS_ENABLED(SILENT_CONSOLE_UPDATE_ON_RELOC)#if CONFIG_IS_ENABLED(SYS_CONSOLE_IS_IN_ENV)#if !CONFIG_IS_ENABLED(PRE_CONSOLE_BUFFER)#if defined(CONFIG_UNIT_TEST)#if HAVE_MMAP#if HAVE_MREMAP#if MORECORE_CLEARS#if !defined(INTERNAL_LINUX_C_LIB) || !defined(__ELF__)#if defined(OF_STDOUT_PATH)#if defined(DEBUG)#if CONFIG_NR_DRAM_BANKS > 4#if defined(CONFIG_VIDEO) || defined(CONFIG_LCD)#if defined(CONFIG_SHA1) && !defined(CONFIG_SHA_PROG_HW_ACCEL)#if defined(CONFIG_SHA256) && !defined(CONFIG_SHA_PROG_HW_ACCEL)#if defined(CONFIG_SHA256) || defined(CONFIG_CMD_SHA1SUM) || \#if defined(CONFIG_CMD_HASH) || defined(CONFIG_CMD_SHA1SUM) || defined(CONFIG_CMD_CRC32)#if defined(CONFIG_CRC32_VERIFY) || defined(CONFIG_SHA1SUM_VERIFY) || \#if defined(CONFIG_FIT_ENABLE_SHA256_SUPPORT) || \#if defined(CONFIG_TIMESTAMP) || defined(CONFIG_CMD_DATE) || \#if defined(USE_HOSTCC)#if IMAGE_ENABLE_VERIFY#if IMAGE_ENABLE_SIGN#if defined(CONFIG_SPL_FIT_IMAGE_POST_PROCESS) || \#if !defined(CONFIG_SPL_BUILD)#if defined(CONFIG_SOC_KEYSTONE)#if !defined(CONFIG_SPL_BUILD) || defined(CONFIG_SPL_FIT_PRINT)#if !defined(USE_HOSTCC) && !defined(CONFIG_SANDBOX)#if !defined(USE_HOSTCC) && defined(CONFIG_FIT_IMAGE_POST_PROCESS)#if IMAGE_ENABLE_FIT || IMAGE_ENABLE_OF_LIBFDT#if defined(CONFIG_LYNXKDI) || defined(USE_HOSTCC)#if defined(CONFIG_CMD_ELF) || defined(USE_HOSTCC)#if defined(CONFIG_INTEGRITY) || defined(USE_HOSTCC)#if defined(CONFIG_BOOTM_OPENRTOS) || defined(USE_HOSTCC)#if defined(CONFIG_SYS_SDRAM_BASE)#if defined(CONFIG_ARM) && defined(CONFIG_NR_DRAM_BANKS)#if defined(CONFIG_SYS_BOOTMAPSZ)#if IMAGE_ENABLE_TIMESTAMP#if defined(USE_HOSTCC) || !defined(CONFIG_NEEDS_MANUAL_RELOC)#if defined(DEBUG) && defined(CONFIG_CMD_BDI)#if !defined(CONFIG_X86) && !defined(CONFIG_ARM)#if !defined(CONFIG_ARM)#if !_DEBUG && CONFIG_IS_ENABLED(LOG)#if CONFIG_IS_ENABLED(LOG) && defined(CONFIG_LOG_ERROR_RETURN)#if defined(CONFIG_API) || defined(CONFIG_EFI_LOADER)#if defined(CONFIG_NETCONSOLE) && !defined(CONFIG_SPL_BUILD)#if defined(CONFIG_PHY_GIGE)#if defined(CONFIG_SPLASH_SCREEN) && !defined(CONFIG_SYS_DEVICE_NULLDEV)#if defined(CONFIG_LCD)#if defined(CONFIG_KEYBOARD) && !defined(CONFIG_DM_KEYBOARD)#if defined(CONFIG_SYS_USB_EVENT_POLL)#if defined(CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP)#if !defined(CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP) && \#if defined(DEBUG) && !defined(CONFIG_USE_TINY_PRINTF)#if defined(CONFIG_SYS_64BIT_LBA)#if CONFIG_IS_ENABLED(MAC_PARTITION) || \#if CONFIG_IS_ENABLED(PARTITION_UUIDS)#if CONFIG_IS_ENABLED(ISO_PARTITION)#if CONFIG_IS_ENABLED(EFI_PARTITION)#if defined(CONFIG_EFI_PARTITION_ENTRIES_OFF)#if defined(CONFIG_OF_CONTROL)#if defined(CONFIG_PARTITIONS) && defined(CONFIG_HAVE_BLOCK_DEVICE)#if defined(CONFIG_SYS_ATA_IDE0_OFFSET)#if defined(CONFIG_SYS_ATA_IDE1_OFFSET) && (CONFIG_SYS_IDE_MAXBUS > 1)#if defined(CONFIG_IDE_SWAP_IO)#if defined(CONFIG_IDE_AHB)#if defined(CONFIG_OF_IDE_FIXUP)#if CONFIG_IS_ENABLED(SANDBOX_CLK_CCF)#if !CONFIG_IS_ENABLED(OF_PLATDATA)#if CONFIG_IS_ENABLED(OF_CONTROL) && CONFIG_IS_ENABLED(CLK)#if (CONFIG_IS_ENABLED(OF_CONTROL) && !CONFIG_IS_ENABLED(OF_PLATDATA)) && \#if CONFIG_IS_ENABLED(POWER_DOMAIN)#if CONFIG_DEBUG_DEVRES#if CONFIG_IS_ENABLED(OF_CONTROL) && !CONFIG_IS_ENABLED(OF_PLATDATA)#if defined(CONFIG_SPL_BUILD) || defined(CONFIG_TPL_BUILD)#if defined(in_le64) && defined(in_be64) && defined(readq)#if defined(out_le64) && defined(out_be64) && defined(writeq)#if !CONFIG_IS_ENABLED(OF_CONTROL) || CONFIG_IS_ENABLED(OF_PLATDATA)#if CONFIG_SYS_FSL_SEC_COMPAT == 2 || CONFIG_SYS_FSL_SEC_COMPAT >= 4#if CONFIG_SYS_FSL_SEC_COMPAT == 2#if defined(CONFIG_CMD_ZYNQ_RSA)#if CONFIG_IS_ENABLED(OF_CONTROL) && CONFIG_IS_ENABLED(DMA)#if CONFIG_IS_ENABLED(FASTBOOT_FLASH_MMC)#if CONFIG_IS_ENABLED(FASTBOOT_FLASH_NAND)#if !defined(CONFIG_SPL_BUILD) || !defined(CONFIG_USE_TINY_PRINTF)#if CONFIG_IS_ENABLED(DM_HWSPINLOCK)#if !defined(CONFIG_SPL_BUILD) || CONFIG_IS_ENABLED(ENV_SUPPORT)#if !defined(CONFIG_SPL_BUILD) || defined(CONFIG_SPL_LIBCOMMON_SUPPORT)#if !CONFIG_IS_ENABLED(MMC_TINY)#if CONFIG_IS_ENABLED(MMC_VERBOSE) || defined(DEBUG)#if CONFIG_IS_ENABLED(MMC_HS200_SUPPORT) || \#if CONFIG_IS_ENABLED(MMC_HS400_SUPPORT) || \#if CONFIG_IS_ENABLED(MMC_IO_VOLTAGE)#if CONFIG_IS_ENABLED(MMC_TINY)#if !defined(CONFIG_SPL_BUILD) || \#if !defined(CONFIG_DM_MMC) && (!defined(CONFIG_SPL_BUILD) || defined(CONFIG_SPL_LIBDISK_SUPPORT))#if CONFIG_IS_ENABLED(DM_MMC) && CONFIG_IS_ENABLED(DM_REGULATOR)#if !defined(CONFIG_MMC_BROKEN_CD)#if defined(CONFIG_ARCH_SUPPORTS_INT128) && defined(__SIZEOF_INT128__)#if IS_ENABLED(CONFIG_MTD)#if defined(CONFIG_MTD_PARTITIONS)#if !CONFIG_IS_ENABLED(SPI_FLASH_TINY)#if defined(CONFIG_SPL_BUILD) && defined(CONFIG_USE_TINY_PRINTF)#if IS_ENABLED(CONFIG_SPI_MEM)#if defined(CONFIG_SPI_FLASH_SPANSION) || defined(CONFIG_SPI_FLASH_WINBOND)#if defined(CONFIG_SPI_FLASH_STMICRO) || defined(CONFIG_SPI_FLASH_SST)#if CONFIG_IS_ENABLED(SPI_FLASH_SFDP_SUPPORT)#if defined(CONFIG_MPC8xx) || defined(CONFIG_E500) || defined(CONFIG_MPC86xx)#if defined(CONFIG_X86) && defined(CONFIG_HAVE_FSP)#if defined(CONFIG_PCIAUTO_SKIP_HOST_BRIDGE)#if defined(CONFIG_ARCH_MPC834X) && !defined(CONFIG_TARGET_VME8349) && \#if defined(CONFIG_PCI_CONFIG_HOST_BRIDGE)#if defined(CONFIG_X86) && defined(CONFIG_HAVE_ACPI_RESUME)#if defined(CONFIG_FRAMEBUFFER_SET_VESA_MODE) && \#if defined(CONFIG_X86) && (CONFIG_IS_ENABLED(X86_32BIT_INIT) || CONFIG_TPL)#if CONFIG_IS_ENABLED(PINMUX)#if CONFIG_IS_ENABLED(PINCONF)#if CONFIG_IS_ENABLED(PINCTRL_FULL)#if CONFIG_IS_ENABLED(PMIC_CHILDREN)#if CONFIG_IS_ENABLED(DM_RESET)#if defined(CONFIG_CMD_DATE) || defined(CONFIG_DM_RTC) || \#if !defined(CONFIG_DM_SCSI)#if defined(CONFIG_PCI) && !defined(CONFIG_SCSI_AHCI_PLAT) && \#if defined(CONFIG_DM_SCSI)#if !CONFIG_VAL(SYS_MALLOC_F_LEN)#if CONFIG_IS_ENABLED(SERIAL_PRESENT)#if CONFIG_IS_ENABLED(SERIAL_RX_BUFFER)#if defined(CONFIG_DM_STDIO)#if CONFIG_IS_ENABLED(OF_PLATDATA) || CONFIG_IS_ENABLED(OF_PRIOR_STAGE)#if SANDBOX_NUM_PORTS > 8#if !defined(CONFIG_DM_ETH) && defined(CONFIG_USB_HOST_ETHER)#if STBTT_MAX_OVERSAMPLE > 255#if defined(STB_TRUETYPE_BIGENDIAN) && !defined(ALLOW_UNALIGNED_TRUETYPE)#if STBTT_RASTERIZER_VERSION==1#if STBTT_RASTERIZER_VERSION == 1#if defined(CONFIG_ARM) && !CONFIG_IS_ENABLED(SYS_DCACHE_OFF)#if defined(CONFIG_BMP_16BPP)#if defined(CONFIG_BMP_24BPP)#if defined(CONFIG_BMP_32BPP)#if defined(CONFIG_REGEX)#if defined(CONFIG_BOOTDELAY)#if defined(CONFIG_BAUDRATE) && (CONFIG_BAUDRATE >= 0)#if defined(CONFIG_PCI_BOOTDELAY) && (CONFIG_PCI_BOOTDELAY > 0)#if defined(CONFIG_BOOTCOUNT_BOOTLIMIT) && (CONFIG_BOOTCOUNT_BOOTLIMIT > 0)#if CONFIG_IS_ENABLED(ENV_SUPPORT)#if defined(CONFIG_ENV_IS_NOWHERE) || defined(CONFIG_SPL_BUILD)#if BTRFS_UUID_SIZE != 16#if !CONFIG_IS_ENABLED(FAT_WRITE)#if defined(CONFIG_IDE) || \#if CONFIG_IS_ENABLED(FAT_WRITE)#if CONFIG_IS_ENABLED(FS_EXT4)#if defined(CONFIG_TPL_BUILD)#if defined(CONFIG_ARM64)#if defined(CONFIG_ARM) && !defined(CONFIG_ARM64)#if defined(CONFIG_EFI_LOADER)#if defined(CONFIG_ARM64) || defined(__aarch64__)#if defined(CONFIG_CMD_DHCP) && defined(CONFIG_CMD_PXE)#if CONFIG_SPL_PAD_TO && CONFIG_SPL_PAD_TO < CONFIG_SPL_MAX_SIZE#if defined(__GNUC__) && !defined(__STRICT_ANSI__)#if CONFIG_SANDBOX_BITS_PER_LONG == 32#if __cplusplus < 201103L#if !defined(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) ||		\#if GCC_VERSION < 30200#if GCC_VERSION < 30300#if GCC_VERSION < 30400#if GCC_VERSION >= 30400#if GCC_VERSION >= 40000#if GCC_VERSION >= 40100 &&  GCC_VERSION <= 40101#if GCC_VERSION >= 40100 && GCC_VERSION < 40600#if GCC_VERSION >= 40300#if GCC_VERSION >= 40500#if GCC_VERSION >= 40600#if GCC_VERSION >= 40900 && !defined(__CHECKER__)#if GCC_VERSION >= 40400#if GCC_VERSION >= 40800 || (defined(__powerpc__) && GCC_VERSION >= 40600)#if GCC_VERSION >= 50000#if GCC_VERSION >= 40902#if !defined(__noclone)#if !defined(__no_sanitize_address)#if defined(CC_USING_HOTPATCH) && !defined(__CHECKER__)#if defined(CONFIG_TRACE_BRANCH_PROFILING) \#if BITS_PER_LONG == 32#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ + 0 >= 199900L \#if defined(__svr4__) || (defined(_SCO_DS) && !defined(__VA_LIST))#if !defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__) || defined(WINNT)#if !(defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__))#if defined(CONFIG_SPL_FS_EXT4) || defined(CONFIG_SPL_FS_FAT) || \#if CONFIG_IS_ENABLED(DOS_PARTITION)#if defined(__GNUC__) && (__GNUC__ >= 2) && defined(__OPTIMIZE__)#if defined(__KERNEL__)#if !defined(__STRICT_ANSI__) || defined(__KERNEL__)#if defined(__BEOS__)	 || \#if !defined(__WIN32__) && !defined(__MINGW32__)#if __SIZEOF_LONG__ == 8#if defined(CONFIG_CMD_MEMORY) || \#if !defined(MAC_OS_X_VERSION_10_7) || (MAC_OS_X_VERSION_MAX_ALLOWED < \#if defined(CONFIG_USB_EHCI_FSL) || defined(CONFIG_USB_XHCI_FSL)#if defined(CONFIG_SYS_FSL_SEC_COMPAT)#if defined(CONFIG_FDT_FIXUP_PARTITIONS)#if !CONFIG_IS_ENABLED(CPU)#if !defined(USE_HOSTCC)#if CONFIG_IS_ENABLED(BOOTSTAGE)#if BZ_DEBUG#if defined(_WIN32) || defined(OS2) || defined(MSDOS)#if defined(CONFIG_SPL_BUILD)#if defined(CONFIG_DM_MMC) && defined(CONFIG_MMC)#if defined(CONFIG_SCSI) && defined(CONFIG_DM_SCSI)#if defined(__aarch64__)#if defined(__x86_64__)#if defined(__riscv) && (__riscv_xlen == 32)#if defined(__riscv) && (__riscv_xlen == 64)#if CONFIG_IS_ENABLED(EFI_DEVICE_PATH_TO_TEXT)#if CONFIG_IS_ENABLED(EFI_UNICODE_COLLATION_PROTOCOL2)#if CONFIG_IS_ENABLED(EFI_UNICODE_COLLATION_PROTOCOL)#if CONFIG_IS_ENABLED(EFI_LOADER_HII)#if (__riscv_xlen == 32)#if defined(CONFIG_LCD) || defined(CONFIG_DM_VIDEO)#if CONFIG_FAT_DEFAULT_CODEPAGE == 1250#if CONFIG_IS_ENABLED(OF_TRANSLATE)#if CONFIG_IS_ENABLED(PCI) && defined(CONFIG_DM_PCI)#if defined(CONFIG_NR_DRAM_BANKS)#if CONFIG_IS_ENABLED(MULTI_DTB_FIT_GZIP) ||\#if CONFIG_IS_ENABLED(MULTI_DTB_FIT_USER_DEFINED_AREA)#if defined(CONFIG_OF_BOARD) || defined(CONFIG_OF_SEPARATE)#if defined(DEBUG) && defined(CONFIG_SANDBOX)#if !(defined(CONFIG_SPL_BUILD) && !defined(CONFIG_SPL_SAVEENV))#if Literal != LZMA_BASE_SIZE#if !defined(CONFIG_PANIC_HANG)#if defined(CONFIG_PANIC_HANG)#if CONFIG_IS_ENABLED(PRINTF)#if !CONFIG_IS_ENABLED(TINY_MEMSET)#if CONFIG_SYS_TIMER_RATE == 1000000#if CONFIG_IS_ENABLED(TIMER)#if defined(CONFIG_RANDOM_UUID) || defined(CONFIG_CMD_UUID)#if !defined(CONFIG_SPL_BUILD) && defined(CONFIG_CMD_UUID)#if CONFIG_IS_ENABLED(EFI_LOADER) && !defined(API_BUILD)#if CONFIG_IS_ENABLED(EFI_DEVICE_PATH_TO_TEXT) && !defined(API_BUILD)#if MAX_MEM_LEVEL >= 8#if defined(GEN_TREES_H) || !defined(STDC)#if (defined(UNALIGNED_OK) && MAX_MATCH == 258)#if MIN_MATCH != 3#if TOO_FAR <= 32767#if defined(__BIG_ENDIAN)#if FSE_MAX_TABLELOG > FSE_TABLELOG_ABSOLUTE_MAX#if (HUF_TABLELOG_MAX > HUF_TABLELOG_ABSOLUTEMAX)#if defined(CONFIG_BOOTP_VENDOREX)#if defined(CONFIG_BOOTP_PREFER_SERVERIP)#if !defined(CONFIG_CMD_DHCP)#if defined(CONFIG_LED_STATUS) && defined(CONFIG_LED_STATUS_BOOT_ENABLE)#if defined(CONFIG_SPL_BUILD) && defined(CONFIG_SPL_NET_VCI_STRING)#if defined(CONFIG_BOOTP_SEND_HOSTNAME)#if defined(CONFIG_BOOTP_SUBNETMASK)#if defined(CONFIG_BOOTP_TIMEOFFSET)#if defined(CONFIG_BOOTP_GATEWAY)#if defined(CONFIG_BOOTP_DNS)#if defined(CONFIG_BOOTP_HOSTNAME)#if defined(CONFIG_BOOTP_BOOTFILESIZE)#if defined(CONFIG_BOOTP_BOOTPATH)#if defined(CONFIG_BOOTP_NISDOMAIN)#if defined(CONFIG_BOOTP_NTPSERVER)#if defined(CONFIG_CDP_VERSION)#if defined(CONFIG_CDP_DEVICE_ID) || defined(CONFIG_CDP_PORT_ID)   || \#if IS_ENABLED(CONFIG_OF_CONTROL)#if defined(CONFIG_MII) || defined(CONFIG_CMD_MII) || defined(CONFIG_PHYLIB)#if defined(CONFIG_CMD_RARP)#if defined(CONFIG_CMD_WOL)#if defined(CONFIG_MII) || defined(CONFIG_CMD_MII)#if defined(CONFIG_SYS_FAULT_ECHO_LINK_DOWN)	&& \#if !defined(CONFIG_NET_DO_NOT_TRY_ANOTHER)#if defined(CONFIG_CMD_PING) || defined(CONFIG_CMD_SNTP) || \#if defined(CONFIG_CMD_NFS)		|| \#if defined(CONFIG_CMD_DATE)#if CONFIG_NET_TFTP_VARS#if YYDEBUG#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED#if YY_FLEX_SUBMINOR_VERSION > 0#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L#if defined(__GNUC__) && __GNUC__ >= 3#if defined __cplusplus && 201103L <= __cplusplus#if defined YYENABLE_NLS && YYENABLE_NLS#if ENABLE_NLS#if (defined __GNUC__                                               \#if !defined _Noreturn \#if defined _MSC_VER && 1200 <= _MSC_VER#if ! defined lint || defined __GNUC__#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__#if ! defined yyoverflow || YYERROR_VERBOSE#if YYSTACK_USE_ALLOCA#if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS#if (defined __cplusplus && ! defined EXIT_SUCCESS \#if ! defined malloc && ! defined EXIT_SUCCESS#if ! defined free && ! defined EXIT_SUCCESS#if (! defined yyoverflow \#if defined YYCOPY_NEEDED && YYCOPY_NEEDED#if defined __GNUC__ && 1 < __GNUC__#if YYDEBUG || YYERROR_VERBOSE || 0#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL#if YYERROR_VERBOSE#if defined __GLIBC__ && defined _STRING_H#if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE#if ! YYERROR_VERBOSE#if !defined yyoverflow || YYERROR_VERBOSE#if defined __x86_64__ && !defined __ILP32__#if !defined __x86_64__#if defined __x86_64__ && defined __LP64__#if defined __x86_64__ && defined __ILP32__#if __WORDSIZE == 32#if (defined __USE_GNU							\#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_BFP_EXT__#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_FUNCS_EXT__#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_TYPES_EXT__#if defined _IO_USE_OLD_IO_FILE && !defined _LIBC#if defined _IO_lock_t_defined && !defined _LIBC#if __USE_FORTIFY_LEVEL > 1#if !__GNUC_PREREQ (5,0)#if !defined _SYS_WAIT_H && !defined _STDLIB_H#if __GNUC_PREREQ (7, 0) && !defined __cplusplus#if !__GNUC_PREREQ (7, 0) || defined __cplusplus#if __HAVE_FLOAT64X_LONG_DOUBLE#if !__GNUC_PREREQ (7, 0)#if (defined __x86_64__							\#if !__GNUC_PREREQ (6, 0)#if defined __USE_MISC && !defined __ASSEMBLER__#if !__PTHREAD_MUTEX_USE_UNION#if __PTHREAD_MUTEX_LOCK_ELISION#if !__PTHREAD_MUTEX_NUSERS_AFTER_KIND#if __PTHREAD_MUTEX_NUSERS_AFTER_KIND#if defined _LIBC_LIMITS_H_ && defined PATH_MAX#if defined MB_LEN_MAX && MB_LEN_MAX != __STDLIB_MB_LEN_MAX#if __STDC_HOSTED__#if defined __cplusplus && __cplusplus >= 201103L#if defined __cplusplus && __GNUC_PREREQ (2,95)#if defined __cplusplus#if defined __cplusplus ? __GNUC_PREREQ (2, 6) : __GNUC_PREREQ (2, 4)#if defined __USE_ISOC11 && !defined __cplusplus#if !defined __NO_CTYPE#if __GNUC__ >= 2 && defined __OPTIMIZE__ && !defined __cplusplus#if !defined _ERRNO_H#if defined __USE_MISC || defined __USE_UNIX98#if defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_UNIX98)#if defined(CONFIG_UT_DM)#if defined(CONFIG_UT_ENV)#if CONFIG_IS_ENABLED(UT_UNICODE) && !defined(API_BUILD)#if defined(CONFIG_UT_UNICODE) && \#if CONFIG_IS_ENABLED(LIB_UUID)#if defined(__MACH__)#if !defined(__used)#if __GNUC__ == 3 && __GNUC_MINOR__ < 3#if defined (__arch_swab16)#if defined(__arch_swab32)#if defined (__arch_swab64)#if __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ > 0)#if !defined(OPENSSL_API_COMPAT) || OPENSSL_API_COMPAT < OPENSSL_MIN_API#if OPENSSL_VERSION_NUMBER < 0x10200000L#if OPENSSL_API_COMPAT < 0x10100000L#if OPENSSL_API_COMPAT < 0x10000000L#if OPENSSL_API_COMPAT < 0x00908000L#if !defined(OPENSSL_SYS_UEFI)#if defined __USE_GNU || !defined __USE_XOPEN2K8#if INT_MAX == 32767#if INT_MAX == 2147483647#if __INT_MAX__ == 32767#if __INT_MAX__ == 2147483647#if LONG_MAX == 2147483647#if __LONG_MAX__ == 2147483647#if defined __GNUC__ && !defined _GCC_LIMITS_H_#if defined __USE_ISOC99 && defined __GNUC__#if __SCHAR_MAX__ == __INT_MAX__#if __SHRT_MAX__ == __INT_MAX__#if defined (__GNU_LIBRARY__) ? defined (__USE_GNU) : !defined (__STRICT_ANSI__)#if defined(OPENSSL_SYS_MSDOS)#if defined(OPENSSL_SYS_UEFI)#if defined(__CYGWIN__) || defined(OPENSSL_SYS_CYGWIN)#if defined(_WIN32) || defined(OPENSSL_SYS_WIN32)#if !defined(OPENSSL_SYS_WIN32)#if defined(_WIN64) || defined(OPENSSL_SYS_WIN64)#if !defined(OPENSSL_SYS_WIN64)#if defined(OPENSSL_SYS_WINNT)#if defined(OPENSSL_SYS_WINCE)#if defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_WIN64) || defined(OPENSSL_SYS_WINNT) || defined(OPENSSL_SYS_WINCE)#if defined(_WINDLL)#if defined(__VMS) || defined(VMS) || defined(OPENSSL_SYS_VMS)#if !defined(OPENSSL_SYS_VMS)#if defined(__DECC)#if defined(linux) || defined(__linux__) && !defined(OPENSSL_SYS_LINUX)#if defined(_AIX) && !defined(OPENSSL_SYS_AIX)#if defined(__VOS__) && !defined(OPENSSL_SYS_VOS)#if defined(OPENSSL_SYS_WINDOWS) && defined(OPENSSL_OPT_WINDLL)#if defined(OPENSSL_SYS_UEFI) && !defined(ossl_ssize_t)#if defined(SSIZE_MAX)#if !defined(inline) && !defined(__cplusplus)#if defined(__STDC_VERSION__) && __STDC_VERSION__>=199901L#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 201112L#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L && \#if defined(OPENSSL_SYS_VMS)#if __GNUC_PREREQ (2, 91)#if __PTHREAD_MUTEX_HAVE_PREV#if defined __GNUC__ && defined __EXCEPTIONS#if defined(OPENSSL_THREADS) && !defined(CRYPTO_TDEBUG)#if defined(_WIN32)#if defined(BASETYPES) || defined(_WINDEF_H)#if !defined(CRYPTO_ONCE_STATIC_INIT)#if defined(__GNUC__) && defined(__STDC_VERSION__) \#if __GNUC__*10 + __GNUC_MINOR__ >= 44#if OPENSSL_API_COMPAT >= 0x00908000L#if defined(__APPLE__) && __DARWIN_C_LEVEL < 200809L#if OPENSSL_VERSION_NUMBER < 0x10100000L || \#if defined(CONFIG_KWB_SECURE)#if defined(CONFIG_SYS_U_BOOT_OFFS)#if defined(__SUNPRO_C)#if __SUNPRO_C >= 0x520#if (defined(_WIN32) || defined(_WIN64)) && !defined(__MINGW32__)#if defined(OPENSSL_NO_STDIO)#if OPENSSL_API_COMPAT < 0x10200000L#if !defined(OPENSSL_NO_CHACHA) && !defined(OPENSSL_NO_POLY1305)#if (SSL3_ALIGN_PAYLOAD&(SSL3_ALIGN_PAYLOAD-1))!=0#if defined(TLS_CT_NUMBER)#if TLS_CT_NUMBER != SSL3_CT_NUMBER#if defined(SSL3_CT_NUMBER)#if defined(__ANDROID__) && defined(__NDK_FPABI__)#if defined(_WIN32) && (defined(BASETYPES) || defined(_WINDEF_H))#if defined(__OpenBSD__) || defined(__FreeBSD__) || defined(__DragonFly__)#if OPENSSL_VERSION_NUMBER >= 0x10000000L#if defined(_POSIX_SYNCHRONIZED_IO) && \#if defined _XOPEN_SOURCE || defined __USE_XOPEN2K#if defined _REGEX_RE_COMP || (defined _LIBC && defined __USE_MISC)#if defined __restrict || 2 < __GNUC__ + (95 <= __GNUC_MINOR__)#if defined __x86_64__ && __WORDSIZE == 32#if __SI_ERRNO_THEN_CODE#if __SI_HAVE_SIGSYS#if __SI_ASYNCIO_AFTER_SIGIO#if !defined _SIGNAL_H && !defined _AIO_H#if defined __USE_XOPEN_EXTENDED || defined __USE_MISC#if !defined _SIGNAL_H && !defined _SYS_UCONTEXT_H#if !defined _SIGNAL_H && !defined _PTHREAD_H#if defined __USE_POSIX#if defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8#if ((defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8)	\#if ((defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K)	\#if !defined NGROUPS && defined NGROUPS_MAX#if !defined MAXSYMLINKS && defined SYMLOOP_MAX#if !defined CANBSIZ && defined MAX_CANON#if !defined MAXPATHLEN && defined PATH_MAX#if !defined NOFILE && defined OPEN_MAX#if !defined MAXHOSTNAMELEN && defined HOST_NAME_MAX#ifdef CONFIG_SYS_64BIT_LBA#ifdef CONFIG_LBA48#ifdef CONFIG_SYS_PCI_64BIT#ifdef CONFIG_DM_PCI#ifdef CONFIG_PCI_INDIRECT_BRIDGE#ifdef CONFIG_PCI_FIXUP_DEV#ifdef CONFIG_MPC85xx#ifdef CONFIG_PCIE_IMX#ifdef CONFIG_DM_PCI_COMPAT#ifdef CONFIG_PHYS_64BIT#ifdef CONFIG_SPL_BUILD#ifdef CONFIG_BOARD_TYPES#ifdef CONFIG_DM#ifdef CONFIG_TIMER#ifdef CONFIG_OF_LIVE#ifdef CONFIG_TRACE#ifdef CONFIG_SYS_I2C_MXC#ifdef CONFIG_PCI#ifdef CONFIG_PCI_BOOTDELAY#ifdef CONFIG_CONSOLE_RECORD#ifdef CONFIG_DM_VIDEO#ifdef CONFIG_BOOTSTAGE#ifdef CONFIG_LOG#ifdef CONFIG_SPL#ifdef __LP64__#ifdef CONFIG_AUTO_COMPLETE#ifdef CONFIG_CMD_EEPROM#ifdef CONFIG_LED_STATUS#ifdef CONFIG_SHOW_ACTIVITY#ifdef CONFIG_MP#ifdef CONFIG_POST#ifdef CONFIG_EFI_STUB#ifdef DO_DEPS_ONLY#ifdef OF_CHECKS#ifdef __STDC__#ifdef __cplusplus#ifdef WIN32#ifdef HAVE_MEMCPY#ifdef HAVE_MMAP#ifdef _SC_PAGESIZE#ifdef _SC_PAGE_SIZE#ifdef EXEC_PAGESIZE#ifdef NBPG#ifdef NBPC#ifdef PAGESIZE#ifdef HAVE_USR_INCLUDE_MALLOC_H#ifdef INTERNAL_LINUX_C_LIB#ifdef USE_DL_PREFIX#ifdef dev_dbg#ifdef dev_vdbg#ifdef dev_info#ifdef dev_err#ifdef dev_warn#ifdef CONFIG_LBDAF#ifdef CONFIG_DEVRES#ifdef CONFIG_DEBUG_DEVRES#ifdef DEBUG#ifdef VERBOSE_DEBUG#ifdef CONFIG_SANDBOX64#ifdef __GCC_IEC_559#ifdef __GCC_IEC_559_COMPLEX#ifdef __GNUC__#ifdef __extern_always_inline#ifdef __has_attribute#ifdef __REDIRECT#ifdef _GNU_SOURCE#ifdef _DEFAULT_SOURCE#ifdef _XOPEN_SOURCE#ifdef _XOPEN_SOURCE_EXTENDED#ifdef _LARGEFILE_SOURCE#ifdef _LARGEFILE64_SOURCE#ifdef _ATFILE_SOURCE#ifdef __BEOS__#ifdef _BSD_WCHAR_T_#ifdef _BSD_RUNE_T_#ifdef _GCC_PTRDIFF_T_#ifdef _GCC_SIZE_T_#ifdef _GCC_WCHAR_T_#ifdef _GCC_PTRDIFF_T#ifdef _GCC_SIZE_T#ifdef _GCC_WCHAR_T#ifdef __GNUG__#ifdef _STDDEF_H#ifdef __i386__#ifdef __USE_GNU#ifdef __USE_LARGEFILE64#ifdef __USE_XOPEN2K8#ifdef __USE_MISC#ifdef __USE_XOPEN2K#ifdef __USE_ATFILE#ifdef __x86_64__#ifdef __O_TMPFILE#ifdef __S_IFIFO#ifdef __S_IFLNK#ifdef __REDIRECT_NTH#ifdef __USE_XOPEN#ifdef __USE_EXTERN_INLINES#ifdef __SYS_SOCKET_H_undef_FIOGETOWN#ifdef __SYS_SOCKET_H_undef_FIOSETOWN#ifdef __SYS_SOCKET_H_undef_SIOCATMARK#ifdef __SYS_SOCKET_H_undef_SIOCGPGRP#ifdef __SYS_SOCKET_H_undef_SIOCGSTAMP#ifdef __SYS_SOCKET_H_undef_SIOCGSTAMPNS#ifdef __SYS_SOCKET_H_undef_SIOCSPGRP#ifdef __SYS_SOCKET_H_undef_IOCSIZE_MASK#ifdef __SYS_SOCKET_H_undef_IOCSIZE_SHIFT#ifdef __SYS_SOCKET_H_undef_IOC_IN#ifdef __SYS_SOCKET_H_undef_IOC_INOUT#ifdef __SYS_SOCKET_H_undef_IOC_OUT#ifdef __OPTIMIZE__#ifdef __USE_POSIX#ifdef __USE_ISOC99#ifdef __USE_POSIX199506#ifdef __USE_POSIX2#ifdef __LDBL_COMPAT#ifdef __WIFCONTINUED#ifdef __USE_ISOC11#ifdef __USE_XOPEN2KXSI#ifdef __USE_XOPEN_EXTENDED#ifdef __CORRECT_ISO_CPP_STRINGS_H_PROTO#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO#ifdef _POSIX_VDISABLE#ifdef TTYDEFCHARS#ifdef __CHECKER__#ifdef _DIRENT_HAVE_D_NAMLEN#ifdef _DIRENT_HAVE_D_RECLEN#ifdef NAME_MAX#ifdef __USE_POSIX199309#ifdef __MAP_ANONYMOUS#ifdef __USE_UNIX98#ifdef CONFIG_ARM#ifdef _MSC_VER#ifdef _begin_code_h#ifdef __BORLANDC__#ifdef BUILD_SDL#ifdef __WATCOMC__#ifdef __SYMBIAN32__#ifdef _M_X64#ifdef HAVE_SYS_TYPES_H#ifdef HAVE_STDIO_H#ifdef HAVE_STRING_H#ifdef HAVE_STRINGS_H#ifdef HAVE_CTYPE_H#ifdef SDL_HAS_64BIT_TYPE#ifdef __MWERKS__#ifdef HAVE_MALLOC#ifdef HAVE_CALLOC#ifdef HAVE_REALLOC#ifdef HAVE_FREE#ifdef HAVE_ALLOCA#ifdef HAVE_GETENV#ifdef HAVE_PUTENV#ifdef HAVE_QSORT#ifdef HAVE_ABS#ifdef HAVE_MEMSET#ifdef HAVE_MEMMOVE#ifdef HAVE_MEMCMP#ifdef HAVE_STRLEN#ifdef HAVE_STRLCPY#ifdef HAVE_STRLCAT#ifdef HAVE_STRDUP#ifdef HAVE__STRREV#ifdef HAVE__STRUPR#ifdef HAVE__STRLWR#ifdef HAVE_STRCHR#ifdef HAVE_STRRCHR#ifdef HAVE_STRSTR#ifdef HAVE_ITOA#ifdef HAVE__LTOA#ifdef HAVE__UITOA#ifdef HAVE__ULTOA#ifdef HAVE_STRTOL#ifdef HAVE_STRTOUL#ifdef HAVE__I64TOA#ifdef HAVE__UI64TOA#ifdef HAVE_STRTOLL#ifdef HAVE_STRTOULL#ifdef HAVE_STRTOD#ifdef HAVE_ATOI#ifdef HAVE_ATOF#ifdef HAVE_STRCMP#ifdef HAVE_STRNCMP#ifdef HAVE_STRCASECMP#ifdef HAVE_STRNCASECMP#ifdef HAVE_SSCANF#ifdef HAVE_SNPRINTF#ifdef HAVE_VSNPRINTF#ifdef __WIN32__#ifdef __linux__#ifdef __OS2__#ifdef CONFIG_CMDLINE#ifdef CONFIG_HOSTCMD_ALIGNED#ifdef CONFIG_LED_BLINK#ifdef CONFIG_BOARD_LATE_INIT#ifdef AVB_ENABLE_DEBUG#ifdef MMC_SUPPORTS_TUNING#ifdef CONFIG_CMD_BKOPS_ENABLE#ifdef CONFIG_MMC_SPI#ifdef CONFIG_SYS_MMC_ENV_PART#ifdef CONFIG_OPTEE_TA_AVB#ifdef CONFIG_NR_DRAM_BANKS#ifdef CONFIG_ENABLE_36BIT_PHYS#ifdef CONFIG_EXTRA_CLOCK#ifdef CONFIG_SYS_MEM_RESERVE_SECURE#ifdef CONFIG_RESV_RAM#ifdef CONFIG_CLOCKS#ifdef CONFIG_HAVE_BLOCK_DEVICE#ifdef CONFIG_NEEDS_MANUAL_RELOC#ifdef CONFIG_SPLASH_SOURCE#ifdef CONFIG_SPLASH_SCREEN_ALIGN#ifdef CONFIG_LCD#ifdef CONFIG_KEYBOARD#ifdef CONFIG_USB_TTY#ifdef CONFIG_NETCONSOLE#ifdef CONFIG_JTAG_CONSOLE#ifdef CONFIG_CBMEM_CONSOLE#ifdef CONFIG_VIDEO_BMP_GZIP#ifdef CONFIG_CMD_GO#ifdef CONFIG_CMD_POWEROFF#ifdef CONFIG_DM_BOOTCOUNT#ifdef CONFIG_SYS_BOOTCOUNT_LE#ifdef CONFIG_EFI_LOADER#ifdef CONFIG_SYS_CACHELINE_SIZE#ifdef CONFIG_EFI_LOADER_BOUNCE_BUFFER#ifdef CONFIG_CMD_BOOTEFI_SELFTEST#ifdef USE_HOSTCC#ifdef CONFIG_CMD_BOOTEFI_HELLO#ifdef CONFIG_SYS_LONGHELP#ifdef CONFIG_CMD_NET#ifdef CONFIG_REGEX#ifdef CONFIG_ENV_OVERWRITE#ifdef CONFIG_OVERWRITE_ETHADDR_ONCE#ifdef CONFIG_CMD_ENV_FLAGS#ifdef CONFIG_SILENT_CONSOLE#ifdef CONFIG_SPLASHIMAGE_GUARD#ifdef CONFIG_CMD_DNS#ifdef CONFIG_ENV_IS_EMBEDDED#ifdef CONFIG_ENV_OFFSET_REDUND#ifdef ENV_IS_EMBEDDED#ifdef CONFIG_SYS_REDUNDAND_ENVIRONMENT#ifdef CONFIG_CMD_SAVEENV#ifdef __UBOOT__#ifdef CONFIG_SYS_NAND_MAX_OOBFREE#ifdef CONFIG_SYS_NAND_MAX_ECCPOS#ifdef CONFIG_MTD_PARTITIONS#ifdef CONFIG_SYS_NAND_ONFI_DETECTION#ifdef CONFIG_SYS_NAND_SELF_INIT#ifdef CONFIG_SYS_NAND_SELECT_DEVICE#ifdef CONFIG_ENV_OFFSET_OOB#ifdef Z_PREFIX#ifdef SYS16BIT#ifdef MSDOS#ifdef __STDC_VERSION__#ifdef MAXSEG_64K#ifdef STDC#ifdef ZLIB_DLL#ifdef ZLIB_INTERNAL#ifdef ZLIB_WINAPI#ifdef FAR#ifdef SMALL_MEDIUM#ifdef VMS#ifdef CONFIG_SYS_BOOT_RAMDISK_HIGH#ifdef CONFIG_OF_LIBFDT#ifdef DEBUG_CRAMFS#ifdef CONFIG_DM_RTC#ifdef CONFIG_SANDBOX#ifdef CONFIG_SYS_I2C_EARLY_INIT#ifdef CONFIG_SYS_I2C#ifdef CONFIG_DM_WARN#ifdef __PPC__#ifdef __KERNEL__#ifdef CONFIG_USB_STORAGE#ifdef CONFIG_USB_HOST_ETHER#ifdef CONFIG_USB_KEYBOARD#ifdef __LITTLE_ENDIAN#ifdef CONFIG_USB_GADGET_DUALSPEED#ifdef CONFIG_USB_OTG#ifdef CONFIG_FAT_WRITE#ifdef CONFIG_OF_CONTROL#ifdef CONFIG_OF_SYSTEM_SETUP#ifdef CONFIG_OF_BOARD_SETUP#ifdef CONFIG_SOC_KEYSTONE#ifdef CONFIG_OF_LIBFDT_OVERLAY#ifdef CONFIG_MTD_NOR_FLASH#ifdef CONFIG_SYS_HZ#ifdef CONFIG_DM_GPIO#ifdef gpio_status#ifdef __ASSEMBLY__#ifdef CONFIG_RANDOM_UUID#ifdef CONFIG_CMD_GPT_RENAME#ifdef CONFIG_PARTITION_UUIDS#ifdef CONFIG_PARTITION_TYPE_GUID#ifdef CONFIG_HASH_VERIFY#ifdef CONFIG_BLK#ifdef CONFIG_BOOT_RETRY_TIME#ifdef CONFIG_CONSOLE_MUX#ifdef CONFIG_DM_I2C#ifdef CONFIG_I2C_SET_DEFAULT_BUS_NUM#ifdef CONFIG_SYS_EEPROM_PAGE_WRITE_DELAY_MS#ifdef CONFIG_HW_WATCHDOG#ifdef CONFIG_PHY_AQUANTIA#ifdef CONFIG_SYS_LOADS_BAUD_CHANGE#ifdef CONFIG_LOG_TEST#ifdef _WIN32#ifdef _LZMA_UINT32_IS_ULONG#ifdef _SZ_NO_INT_64#ifdef _LZMA_NO_SYSTEM_SIZE_T#ifdef CONFIG_MD5SUM_VERIFY#ifdef CONFIG_DM_MDIO#ifdef CONFIG_SYS_SUPPORT_64BIT_DATA#ifdef CONFIG_MX_CYCLIC#ifdef CONFIG_LOOPW#ifdef CONFIG_CMD_MEMTEST#ifdef CONFIG_CMD_CRC32#ifdef CONFIG_CRC32_VERIFY#ifdef CONFIG_CMD_RANDOM#ifdef CONFIG_CMD_MEMINFO#ifdef CONFIG_DM_ETH#ifdef CONFIG_PHYLIB_10G#ifdef CONFIG_SYS_FAULT_ECHO_LINK_DOWN#ifdef CONFIG_BITBANGMII#ifdef CONFIG_BITBANGMII_MULTI#ifdef CONFIG_DM_MDIO_MUX#ifdef CONFIG_CMD_TIMER#ifdef CONFIG_MTDIDS_DEFAULT#ifdef CONFIG_MTDPARTS_DEFAULT#ifdef CONFIG_CMD_BOOTP#ifdef CONFIG_CMD_TFTPBOOT#ifdef CONFIG_CMD_TFTPPUT#ifdef CONFIG_CMD_TFTPSRV#ifdef CONFIG_CMD_RARP#ifdef CONFIG_CMD_GREPENV#ifdef CONFIG_CMD_EXPORTENV#ifdef CONFIG_ENV_ADDR_REDUND#ifdef CONFIG_CMD_IMPORTENV#ifdef CONFIG_POWER#ifdef CONFIG_DM_PMIC#ifdef CONFIG_SYS_SOC#ifdef CONFIG_SYS_BOARD#ifdef CONFIG_CMD_EXT2#ifdef CONFIG_CMD_FAT#ifdef CONFIG_CMD_FS_GENERIC#ifdef CONFIG_CMD_BOOTI#ifdef CONFIG_CMD_BMP#ifdef CONFIG_LOADADDR#ifdef CONFIG_RAMDISK_ADDR#ifdef CONFIG_SUNXI_AHCI#ifdef CONFIG_AHCI#ifdef CONFIG_BINMAN#ifdef CONFIG_TPL_BUILD#ifdef CONFIG_SPL_LEGACY_IMAGE_CRC_CHECK#ifdef CONFIG_SPL_LIBCOMMON_SUPPORT#ifdef CONFIG_SPL_BOARD_INIT#ifdef SLRE_TEST#ifdef CONFIG_DM_SPI#ifdef CONFIG_SPI_FLASH_BAR#ifdef CONFIG_DM_SPI_FLASH#ifdef CONFIG_CMD_SF_TEST#ifdef CONFIG_ARCH_MAP_SYSMEM#ifdef CONFIG_TPM_LOAD_KEY_BY_SHA1#ifdef CONFIG_TPM_AUTH_SESSIONS#ifdef CONFIG_TPM_FLUSH_RESOURCES#ifdef CONFIG_TPM_LIST_RESOURCES#ifdef CONFIG_DM_USB#ifdef CONFIG_SYS_COREBOOT#ifdef CC_VERSION_STRING#ifdef LD_VERSION_STRING#ifdef small#ifdef BZ_EXPORT#ifdef CONFIG_GZIP#ifdef CONFIG_SYS_POST_WORD_ADDR#ifdef CONFIG_AUTOBOOT_DELAY_STR#ifdef CONFIG_AUTOBOOT_STOP_STR#ifdef CONFIG_AUTOBOOT_PROMPT#ifdef CONFIG_MENUKEY#ifdef CONFIG_MENUPROMPT#ifdef CONFIG_EFI_APP#ifdef CONFIG_LED_STATUS1#ifdef CONFIG_LED_STATUS2#ifdef CONFIG_LED_STATUS3#ifdef CONFIG_LED_STATUS4#ifdef CONFIG_LED_STATUS5#ifdef CONFIG_MACH_TYPE#ifdef XTRN_DECLARE_GLOBAL_DATA_PTR#ifdef CONFIG_SYS_TEXT_BASE#ifdef CONFIG_SYSRESET#ifdef CONFIG_SYS_SDRAM_BASE#ifdef CONFIG_PRAM#ifdef CONFIG_FB_ADDR#ifdef CONFIG_BLOBLIST#ifdef CONFIG_SYS_SRAM_BASE#ifdef ARM#ifdef CONFIG_OF_BOARD_FIXUP#ifdef CONFIG_TIMER_EARLY#ifdef CONFIG_TRACE_EARLY#ifdef CONFIG_ADDR_MAP#ifdef __ARM__#ifdef CONFIG_OF_EMBED#ifdef CONFIG_PPC#ifdef CONFIG_SYS_NONCACHED_MEMORY#ifdef CONFIG_SYS_FLASH_CHECKSUM#ifdef CONFIG_SYS_FLASH_BASE#ifdef CONFIG_CMD_NAND#ifdef CONFIG_MMC#ifdef CONFIG_SYS_BOOTPARAMS_LEN#ifdef CONFIG_HAS_ETH1#ifdef CONFIG_HAS_ETH2#ifdef CONFIG_HAS_ETH3#ifdef CONFIG_HAS_ETH4#ifdef CONFIG_HAS_ETH5#ifdef CONFIG_CMD_KGDB#ifdef CONFIG_CMD_BEDBUG#ifdef CONFIG_ARCH_EARLY_INIT_R#ifdef CONFIG_CMD_ONENAND#ifdef CONFIG_API#ifdef CONFIG_DISPLAY_BOARDINFO_LATE#ifdef CONFIG_ARCH_MISC_INIT#ifdef CONFIG_MISC_INIT_R#ifdef CONFIG_LAST_STAGE_INIT#ifdef CONFIG_LMB#ifdef CONFIG_ANDROID_BOOT_IMAGE#ifdef CONFIG_BOOTM_NETBSD#ifdef CONFIG_LYNXKDI#ifdef CONFIG_BOOTM_RTEMS#ifdef CONFIG_INTEGRITY#ifdef CONFIG_BOOTM_OPENRTOS#ifdef CONFIG_BOOTM_OPTEE#ifdef CONFIG_BOOTM_LINUX#ifdef CONFIG_HUSH_PARSER#ifdef __U_BOOT__#ifdef DEBUG_SHELL#ifdef CONFIG_CMDLINE_PS_SUPPORT#ifdef CONFIG_FEATURE_COMMAND_EDITING#ifdef CONFIG_RESET_TO_RETRY#ifdef CONFIG_FEATURE_SH_STANDALONE_SHELL#ifdef CONFIG_FEATURE_SH_APPLETS_ALWAYS_WIN#ifdef CONFIG_FEATURE_CLEAN_UP#ifdef CONFIG_CMDLINE_EDITING#ifdef CMD_DATA_SIZE#ifdef DEBUG_COMMANDS#ifdef CONFIG_DEBUG_UART_BOARD_INIT#ifdef CONFIG_DEBUG_UART_ANNOUNCE#ifdef CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE#ifdef CONFIG_DM_SERIAL#ifdef CONFIG_WATCHDOG#ifdef CONFIG_DISABLE_CONSOLE#ifdef CONFIG_DEBUG_UART#ifdef CONFIG_VIDCONSOLE_AS_LCD#ifdef CONFIG_SYS_CONSOLE_ENV_OVERWRITE#ifdef CONFIG_SPLASH_SCREEN#ifdef CONFIG_SYS_MALLOC_CLEAR_ON_INIT#ifdef MAP_ANONYMOUS#ifdef REALLOC_ZERO_BYTES_FREES#ifdef CONFIG_ARCH_FIXUP_FDT_MEMORY#ifdef FDT_SEQ_MACADDR_FROM_ENV#ifdef CONFIG_FDT_FIXUP_PARTITIONS#ifdef CONFIG_OF_ISA_BUS#ifdef CONFIG_SHA1#ifdef CONFIG_SHA_HW_ACCEL#ifdef CONFIG_SHA_PROG_HW_ACCEL#ifdef CONFIG_SHA256#ifdef CONFIG_SPL_CRC32_SUPPORT#ifdef CONFIG_SPL_MD5_SUPPORT#ifdef CONFIG_SPL_SHA1_SUPPORT#ifdef CONFIG_SYS_BOOT_GET_CMDLINE#ifdef CONFIG_SYS_BOOT_GET_KBD#ifdef CONFIG_FIT_BEST_MATCH#ifdef CONFIG_FIT_VERBOSE#ifdef CONFIG_ARM64_SUPPORT_AARCH32#ifdef CONFIG_FIT_ENABLE_RSASSA_PSS_SUPPORT#ifdef _LZMA_PROB32#ifdef CONFIG_SHOW_BOOT_PROGRESS#ifdef CONFIG_CMD_BDI#ifdef CONFIG_BZIP2#ifdef CONFIG_LZMA#ifdef CONFIG_LZO#ifdef CONFIG_LZ4#ifdef CONFIG_SUPPORT_RAW_INITRD#ifdef CONFIG_AUTOBOOT#ifdef CONFIG_PREBOOT#ifdef LOG_DEBUG#ifdef CONFIG_SYS_RX_ETH_BUFFER#ifdef MII_DEBUG#ifdef CONFIG_PHY_RESET_DELAY#ifdef CONFIG_SYS_DEVICE_NULLDEV#ifdef CONFIG_DM_KEYBOARD#ifdef CONFIG_USB_XHCI_HCD#ifdef CONFIG_SYS_USB_EVENT_POLL_VIA_INT_QUEUE#ifdef BBB_COMDAT_TRACE#ifdef BBB_XPORT_TRACE#ifdef CONFIG_USB_EHCI_HCD#ifdef CONFIG_USB_BIN_FIXUP#ifdef xyzModem_zmodem#ifdef PART_DEBUG#ifdef CONFIG_CMD_UBIFS#ifdef AMIGA_DEBUG#ifdef ISO_PART_DEBUG#ifdef CHECK_FOR_POWERPC_PLATTFORM#ifdef CONFIG_SANDBOX_ARCH#ifdef CONFIG_PARTITIONS#ifdef CONFIG_IDE_RESET#ifdef CONFIG_ATAPI#ifdef __BIG_ENDIAN#ifdef CONFIG_IDE_PREINIT#ifdef __MIPS__#ifdef CONFIG_DMA_CHANNELS#ifdef DEBUG_TRACE#ifdef CONFIG_SANDBOX_SDL#ifdef CONFIG_GENERATE_ACPI_TABLE#ifdef CONFIG_FSL_ESDHC_ADAPTER_IDENT#ifdef CONFIG_MMC_TRACE#ifdef CONFIG_MMC_QUIRKS#ifdef CONFIG_MMC_SPI_CRC_ON#ifdef CONFIG_CMD_MTDPARTS#ifdef CONFIG_UBI_SILENCE_MSG#ifdef CONFIG_MTD_UBI_GLUEBI#ifdef CONFIG_MTD_UBI_FASTMAP#ifdef CONFIG_MTD_UBI_BLOCK#ifdef CONFIG_PROC_FS#ifdef CONFIG_SPI_FLASH#ifdef CONFIG_SPI_FLASH_MTD#ifdef CONFIG_SPI_FLASH_SST#ifdef CONFIG_SPI_FLASH_MACRONIX#ifdef CONFIG_MTD_SPI_NOR_USE_4K_SECTORS#ifdef CONFIG_SPI_FLASH_USE_4K_SECTORS#ifdef CONFIG_SPI_FLASH_ATMEL#ifdef CONFIG_SPI_FLASH_EON#ifdef CONFIG_SPI_FLASH_GIGADEVICE#ifdef CONFIG_SPI_FLASH_ISSI#ifdef CONFIG_SPI_FLASH_STMICRO#ifdef CONFIG_SPI_FLASH_SPANSION#ifdef CONFIG_SPI_FLASH_WINBOND#ifdef CONFIG_SPI_FLASH_XMC#ifdef CONFIG_B53_SWITCH#ifdef CONFIG_MV88E61XX_SWITCH#ifdef CONFIG_PHY_ATHEROS#ifdef CONFIG_PHY_BROADCOM#ifdef CONFIG_PHY_CORTINA#ifdef CONFIG_PHY_DAVICOM#ifdef CONFIG_PHY_ET1011C#ifdef CONFIG_PHY_LXT#ifdef CONFIG_PHY_MARVELL#ifdef CONFIG_PHY_MICREL_KSZ8XXX#ifdef CONFIG_PHY_MICREL_KSZ90X1#ifdef CONFIG_PHY_MESON_GXL#ifdef CONFIG_PHY_NATSEMI#ifdef CONFIG_PHY_REALTEK#ifdef CONFIG_PHY_SMSC#ifdef CONFIG_PHY_TERANETICS#ifdef CONFIG_PHY_TI#ifdef CONFIG_PHY_VITESSE#ifdef CONFIG_PHY_XILINX#ifdef CONFIG_PHY_MSCC#ifdef CONFIG_PHY_FIXED#ifdef CONFIG_PCI_PNP#ifdef CONFIG_PCI_ENUM_ONLY#ifdef __BIG_ENDIAN__#ifdef CONFIG_X86EMU_DEBUG#ifdef VIDEO_HW_BITBLT#ifdef VIDEO_HW_RECTFILL#ifdef CONFIG_X86#ifdef CONFIG_VGA_BIOS_ADDR#ifdef PCI_VGA_RAM_IMAGE_START#ifdef CONFIG_BIOSEMU#ifdef CONFIG_PHY#ifdef ENABLE_DRIVER#ifdef CONFIG_SCSI_DEV_LIST#ifdef CONFIG_SATA_ULI5288#ifdef CONFIG_DEBUG_UART_SANDBOX#ifdef CONFIG_SERIAL_SEARCH_ALL#ifdef CONFIG_CONS_INDEX#ifdef CONFIG_REQUIRE_SERIAL_CONSOLE#ifdef CONFIG_DM_STDIO#ifdef CONFIG_VIDEO_FONT_4X6#ifdef CONFIG_VIDEO_BPP8#ifdef CONFIG_VIDEO_BPP16#ifdef CONFIG_VIDEO_BPP32#ifdef STB_TRUETYPE_IMPLEMENTATION#ifdef STBTT_STATIC#ifdef CONFIG_CONSOLE_TRUETYPE_NIMBUS#ifdef CONFIG_CONSOLE_TRUETYPE_ANKACODER#ifdef CONFIG_CONSOLE_TRUETYPE_RUFSCRIPT#ifdef CONFIG_CONSOLE_TRUETYPE_CANTORAONE#ifdef CONFIG_SYS_WHITE_ON_BLACK#ifdef CONFIG_VIDEO_BMP_RLE8#ifdef CONFIG_64BIT#ifdef DEFAULT_ENV_INSTANCE_EMBEDDED#ifdef CONFIG_ENV_CALLBACK_LIST_DEFAULT#ifdef CONFIG_ENV_FLAGS_LIST_DEFAULT#ifdef CONFIG_USE_BOOTARGS#ifdef CONFIG_BOOTCOMMAND#ifdef CONFIG_RAMBOOTCOMMAND#ifdef CONFIG_NFSBOOTCOMMAND#ifdef CONFIG_LOADS_ECHO#ifdef CONFIG_ETHPRIME#ifdef CONFIG_IPADDR#ifdef CONFIG_SERVERIP#ifdef CONFIG_SYS_AUTOLOAD#ifdef CONFIG_ROOTPATH#ifdef CONFIG_GATEWAYIP#ifdef CONFIG_NETMASK#ifdef CONFIG_HOSTNAME#ifdef CONFIG_BOOTFILE#ifdef CONFIG_CLOCKS_IN_MHZ#ifdef CONFIG_ENV_VARS_UBOOT_CONFIG#ifdef CONFIG_SYS_CPU#ifdef CONFIG_SYS_VENDOR#ifdef CONFIG_EXTRA_ENV_SETTINGS#ifdef CONFIG_ENV_IS_IN_EEPROM#ifdef CONFIG_ENV_IS_IN_EXT4#ifdef CONFIG_ENV_IS_IN_FAT#ifdef CONFIG_ENV_IS_IN_FLASH#ifdef CONFIG_ENV_IS_IN_MMC#ifdef CONFIG_ENV_IS_IN_NAND#ifdef CONFIG_ENV_IS_IN_NVRAM#ifdef CONFIG_ENV_IS_IN_REMOTE#ifdef CONFIG_ENV_IS_IN_SATA#ifdef CONFIG_ENV_IS_IN_SPI_FLASH#ifdef CONFIG_ENV_IS_IN_UBI#ifdef CONFIG_ENV_IS_NOWHERE#ifdef __USE_BSD#ifdef CONFIG_LIB_UUID#ifdef CONFIG_FS_FAT#ifdef CONFIG_CMD_EXT4_WRITE#ifdef CONFIG_FS_BTRFS#ifdef CONFIG_CMD_BOOTEFI#ifdef CONFIG_CMD_MMC#ifdef BOOTEFI_NAME#ifdef CONFIG_SATA#ifdef CONFIG_NVME#ifdef CONFIG_SCSI#ifdef CONFIG_IDE#ifdef CONFIG_CMD_USB#ifdef CONFIG_CMD_VIRTIO#ifdef FTRACE#ifdef CONFIG_SPL_PAD_TO#ifdef CONFIG_SPL_MAX_SIZE#ifdef CONFIG_ERRNO_STR#ifdef CONFIG_UID16#ifdef __CHECK_ENDIAN__#ifdef CONFIG_GCOV_KERNEL#ifdef CONFIG_ARCH_USE_BUILTIN_BSWAP#ifdef CONFIG_SPARSE_RCU_POINTER#ifdef __INTEL_COMPILER#ifdef __clang__#ifdef CONFIG_PROFILE_ALL_BRANCHES#ifdef CONFIG_KASAN#ifdef MODULE#ifdef CONFIG_KPROBES#ifdef _STDARG_H#ifdef _BSD_VA_LIST#ifdef __i860__#ifdef _SCO_DS#ifdef CONFIG_DOS_PARTITION#ifdef CONFIG_SYS_FLASH_CFI#ifdef CONFIG_MTD#ifdef CONFIG_CFI_FLASH#ifdef CONFIG_FLASH_CFI_MTD#ifdef CONFIG_FLASH_CFI_LEGACY#ifdef __SWAB_64_THRU_32__#ifdef CONFIG_SANDBOX_BIG_ENDIAN#ifdef __FreeBSD__#ifdef CONFIG_CMD_BOOTD#ifdef CONFIG_CMD_BOOTM#ifdef __APPLE__#ifdef CONFIG_FMAN_ENET#ifdef CONFIG_FSL_MC_ENET#ifdef __BIGGEST_ALIGNMENT__#ifdef ENABLE_BOOTSTAGE#ifdef CONFIG_HAVE_ARCH_BITREVERSE#ifdef BZ_NO_STDIO#ifdef BZ_STRICT_ANSI#ifdef CONFIG_EFI_UNICODE_CAPITALIZATION#ifdef CONFIG_DYNAMIC_CRC_TABLE#ifdef NOSTRUCTASSIGN#ifdef NOENUM#ifdef TIMES#ifdef TIME#ifdef PRATTLE#ifdef SELF_TIMED#ifdef CONFIG_NET#ifdef __riscv#ifdef CONFIG_EFI_HAVE_RUNTIME_RESET#ifdef CONFIG_EFI_GET_TIME#ifdef CONFIG_EFI_SET_TIME#ifdef IS_RELA#ifdef R_ABSOLUTE#ifdef CONFIG_GENERATE_SMBIOS_TABLE#ifdef CONFIG_CMD_UNZIP#ifdef CONFIG_HEXDUMP#ifdef AVB_INSIDE_LIBAVB_H#ifdef UNROLL_LOOPS_SHA512#ifdef CONFIG_TEST_LIST_SORT#ifdef _LZMA_SIZE_OPT#ifdef SELF_TEST#ifdef CONFIG_CPU#ifdef CONFIG_ROM_SIZE#ifdef CONFIG_SYS_TIMER_RATE#ifdef CONFIG_SYS_TIMER_COUNTER#ifdef CONFIG_SYS_TIMER_COUNTS_DOWN#ifdef NO_ERRNO_H#ifdef _WIN32_WCE#ifdef CONFIG_GZIP_COMPRESSED#ifdef ASMV#ifdef FASTEST#ifdef GZIP#ifdef UNALIGNED_OK#ifdef GEN_TREES_H#ifdef NO_INIT_GLOBAL_POINTERS#ifdef DUMP_BL_TREE#ifdef FORCE_STORED#ifdef FORCE_STATIC#ifdef TRUNCATE_BLOCK#ifdef POSTINC#ifdef INFLATE_STRICT#ifdef GUNZIP#ifdef NO_DIVIDE#ifdef CONFIG_CMD_LINK_LOCAL#ifdef CONFIG_KEEP_SERVERADDR#ifdef CONFIG_BOOTP_RANDOM_DELAY#ifdef CONFIG_BOOTP_MAY_FAIL#ifdef CONFIG_BOOTP_PXE_CLIENTARCH#ifdef CONFIG_DHCP_MIN_EXT_LEN#ifdef CONFIG_BOOTP_DHCP_REQUEST_DELAY#ifdef CONFIG_SYS_BOOTFILE_PREFIX#ifdef CONFIG_CDP_DEVICE_ID#ifdef CONFIG_CDP_PORT_ID#ifdef CONFIG_CDP_CAPABILITIES#ifdef CONFIG_CDP_VERSION#ifdef CONFIG_CDP_PLATFORM#ifdef CONFIG_CDP_TRIGGER#ifdef CONFIG_CDP_POWER_CONSUMPTION#ifdef CONFIG_CDP_APPLIANCE_VLAN_TYPE#ifdef CONFIG_NET_RANDOM_ETHADDR#ifdef CONFIG_PHYLIB#ifdef CONFIG_BOOTP_SERVERIP#ifdef CONFIG_UDP_FUNCTION_FASTBOOT#ifdef CONFIG_IP_DEFRAG#ifdef CONFIG_UDP_CHECKSUM#ifdef CONFIG_CMD_WOL#ifdef CONFIG_SYS_DIRECT_FLASH_NFS#ifdef CONFIG_TIMESTAMP#ifdef CONFIG_SYS_DIRECT_FLASH_TFTP#ifdef CONFIG_TFTP_TSIZE#ifdef CONFIG_TFTP_BLOCKSIZE#ifdef CONFIG_TFTP_PORT#ifdef TRACE_CHECKS#ifdef __ia64__#ifdef yytext_ptr#ifdef LEXDEBUG#ifdef YY_NEED_STRLEN#ifdef YY_USER_INIT#ifdef YY_STDINIT#ifdef YYERROR_VERBOSE#ifdef short#ifdef YYTYPE_UINT8#ifdef YYTYPE_INT8#ifdef YYTYPE_UINT16#ifdef YYTYPE_INT16#ifdef __SIZE_TYPE__#ifdef YYSTACK_USE_ALLOCA#ifdef YYSTACK_ALLOC#ifdef YYPRINT#ifdef yyoverflow#ifdef _LIBC#ifdef _IO_USE_OLD_IO_FILE#ifdef __va_arg_pack#ifdef WCONTINUED#ifdef __NO_LONG_DOUBLE_MATH#ifdef __ILP32__#ifdef __WCHAR_MAX__#ifdef __WCHAR_MIN__#ifdef _ASSERT_H#ifdef NDEBUG#ifdef __isctype_f#ifdef __undef_NR_OPEN#ifdef __undef_LINK_MAX#ifdef __undef_OPEN_MAX#ifdef __undef_ARG_MAX#ifdef CONFIG_UT_OVERLAY#ifdef CONFIG_UT_LIB#ifdef CONFIG_UT_TIME#ifdef CONFIG_UT_DM#ifdef CONFIG_UT_ENV#ifdef CONFIG_VIDEO_ANSI#ifdef __arch_swahw32#ifdef __arch_swahb32#ifdef __HAVE_BUILTIN_BSWAP16__#ifdef __HAVE_BUILTIN_BSWAP32__#ifdef __HAVE_BUILTIN_BSWAP64__#ifdef __arch_swab16p#ifdef __arch_swab32p#ifdef __arch_swab64p#ifdef __arch_swahw32p#ifdef __arch_swahb32p#ifdef __arch_swab16s#ifdef __arch_swab32s#ifdef __arch_swab64s#ifdef __arch_swahw32s#ifdef __arch_swahb32s#ifdef OPENSSL_ALGORITHM_DEFINES#ifdef OPENSSL_NO_FILENAMES#ifdef __IOV_MAX#ifdef INT_MAX#ifdef LONG_MAX#ifdef __CHAR_UNSIGNED__#ifdef __STDC_WANT_IEC_60559_BFP_EXT__#ifdef _GCC_NEXT_LIMITS_H#ifdef OPENSSL_SYS_WINDOWS#ifdef OPENSSL_SYS_UNIX#ifdef __HPPA__#ifdef __IA32__#ifdef OPENSSL_SYS_MSDOS#ifdef OPENSSL_EXPORT_VAR_AS_FUNCTION#ifdef _WIN64#ifdef DEBUG_UNUSED#ifdef NO_ASN1_TYPEDEFS#ifdef BIGNUM#ifdef __PTHREAD_RWLOCK_INT_FLAGS_SHARED#ifdef CHARSET_EBCDIC#ifdef CONST_STRICT#ifdef SIXTY_FOUR_BIT_LONG#ifdef SIXTY_FOUR_BIT#ifdef THIRTY_TWO_BIT#ifdef OPENSSL_BUILD_SHLIBCRYPTO#ifdef OPENSSL_LOAD_CONF#ifdef MKIMAGE_DEBUG#ifdef DUMPIMAGE_DEBUG#ifdef CONFIG_FIT_SIGNATURE#ifdef __MINGW32__#ifdef CONFIG_KWB_SECURE#ifdef OPENSSL_NO_STDIO#ifdef HEADER_BIO_H#ifdef ZLIB#ifdef OSSL_ASYNC_FD#ifdef HEADER_X509_H#ifdef OPENSSL_NO_COMP#ifdef OPENSSL_NO_UI_CONSOLE#ifdef HAVE_ERR_REMOVE_THREAD_STATE#ifdef CONFIG_MXS#ifdef _REGEX_LARGE_OFFSETS#ifdef _REGEX_INCLUDE_LIMITS_H#ifdef RE_DUP_MAX#ifdef __restrict_arr#ifdef ARG_MAX#ifdef CONFIG_SPL_SIZE_LIMIT#ifdef CONFIG_SPL_SIZE_LIMIT_SUBTRACT_GD#ifdef CONFIG_SPL_SIZE_LIMIT_SUBTRACT_MALLOC#ifdef CONFIG_SPL_SIZE_LIMIT_PROVIDE_STACK#ifndef __GENERIC_ASM_OFFSETS_H__#ifndef DO_DEPS_ONLY#ifndef BLK_H#ifndef _PCI_H#ifndef __ASSEMBLY__#ifndef CONFIG_DM_PCI#ifndef __fdtdec_h#ifndef __ASM_GENERIC_GBL_DATA_H#ifndef __COMMON_H_#ifndef CONFIG_POST_ALT_LIST#ifndef _DM_OF_H#ifndef _DM_OFNODE_H#ifndef __MALLOC_H__#ifndef __STD_C#ifndef Void_t#ifndef INTERNAL_SIZE_T#ifndef USE_MEMCPY#ifndef LACKS_UNISTD_H#ifndef malloc_getpagesize#ifndef _SC_PAGE_SIZE#ifndef LACKS_SYS_PARAM_H#ifndef CLSIZE#ifndef DEFAULT_TRIM_THRESHOLD#ifndef DEFAULT_TOP_PAD#ifndef DEFAULT_MMAP_THRESHOLD#ifndef DEFAULT_MMAP_MAX#ifndef MORECORE#ifndef MORECORE_FAILURE#ifndef MORECORE_CLEARS#ifndef _LINUX_COMPAT_H_#ifndef _LINUX_ERR_H#ifndef _DM_DEVICE_H#ifndef _DM_FDTADDR_H#ifndef _DM_UCLASS_H#ifndef _DM_READ_H#ifndef CONFIG_DM_DEV_READ_INLINE#ifndef _DM_PLATDATA_H#ifndef _DM_H_#ifndef __OS_H__#ifndef __ASM_GENERIC_IO_H__#ifndef phys_to_virt#ifndef virt_to_phys#ifndef MAP_NOCACHE#ifndef MAP_WRCOMBINE#ifndef MAP_WRBACK#ifndef MAP_WRTHROUGH#ifndef map_physmem#ifndef unmap_physmem#ifndef __IOTRACE_H#ifndef __SANDBOX_ASM_IO_H#ifndef _SETJMP_H_#ifndef __SYSRESET_H#ifndef __SANDBOX_STATE_H#ifndef _DM_ROOT_H_#ifndef __ETH_RAW_OS_H#ifndef _STDC_PREDEF_H#ifndef _SYS_CDEFS_H#ifndef _FEATURES_H#ifndef __wur#ifndef _LOOSE_KERNEL_NAMES#ifndef __ASSEMBLER__#ifndef __sys_stdtypes_h#ifndef _BSD_WCHAR_T_#ifndef _PTRDIFF_T#ifndef _T_PTRDIFF_#ifndef _T_PTRDIFF#ifndef __PTRDIFF_T#ifndef _PTRDIFF_T_#ifndef _BSD_PTRDIFF_T_#ifndef ___int_ptrdiff_t_h#ifndef _GCC_PTRDIFF_T#ifndef _PTRDIFF_T_DECLARED#ifndef __PTRDIFF_TYPE__#ifndef __size_t__#ifndef __SIZE_T__#ifndef _SIZE_T#ifndef _SYS_SIZE_T_H#ifndef _T_SIZE_#ifndef _T_SIZE#ifndef __SIZE_T#ifndef _SIZE_T_#ifndef _BSD_SIZE_T_#ifndef _SIZE_T_DEFINED_#ifndef _SIZE_T_DEFINED#ifndef _BSD_SIZE_T_DEFINED_#ifndef _SIZE_T_DECLARED#ifndef ___int_size_t_h#ifndef _GCC_SIZE_T#ifndef _SIZET_#ifndef __size_t#ifndef __SIZE_TYPE__#ifndef __wchar_t__#ifndef __WCHAR_T__#ifndef _WCHAR_T#ifndef _T_WCHAR_#ifndef _T_WCHAR#ifndef __WCHAR_T#ifndef _WCHAR_T_#ifndef _BSD_WCHAR_T_DEFINED_#ifndef _BSD_RUNE_T_DEFINED_#ifndef _WCHAR_T_DECLARED#ifndef _WCHAR_T_DEFINED_#ifndef _WCHAR_T_DEFINED#ifndef _WCHAR_T_H#ifndef ___int_wchar_t_h#ifndef __INT_WCHAR_T_H#ifndef _GCC_WCHAR_T#ifndef _RUNE_T_DECLARED#ifndef __WCHAR_TYPE__#ifndef __cplusplus#ifndef _WINT_T#ifndef __WINT_TYPE__#ifndef _GCC_MAX_ALIGN_T#ifndef _GXX_NULLPTR_T#ifndef __iovec_defined#ifndef _FALLOC_H_#ifndef _FCNTL_H#ifndef O_CREAT#ifndef O_EXCL#ifndef O_NOCTTY#ifndef O_TRUNC#ifndef O_APPEND#ifndef O_NONBLOCK#ifndef O_NDELAY#ifndef O_SYNC#ifndef O_ASYNC#ifndef __O_LARGEFILE#ifndef __O_DIRECTORY#ifndef __O_NOFOLLOW#ifndef __O_CLOEXEC#ifndef __O_DIRECT#ifndef __O_NOATIME#ifndef __O_PATH#ifndef __O_DSYNC#ifndef __O_TMPFILE#ifndef F_GETLK#ifndef __USE_FILE_OFFSET64#ifndef F_GETLK64#ifndef __F_SETOWN#ifndef __F_SETSIG#ifndef __F_SETOWN_EX#ifndef F_RDLCK#ifndef F_EXLCK#ifndef __POSIX_FADV_DONTNEED#ifndef _BITS_STAT_H#ifndef __x86_64__#ifndef __mode_t_defined#ifndef __off_t_defined#ifndef __pid_t_defined#ifndef R_OK#ifndef _SYS_SELECT_H#ifndef __suseconds_t_defined#ifndef _SYS_TYPES_H#ifndef __u_char_defined#ifndef __ino_t_defined#ifndef __dev_t_defined#ifndef __gid_t_defined#ifndef __nlink_t_defined#ifndef __uid_t_defined#ifndef __ssize_t_defined#ifndef __daddr_t_defined#ifndef __useconds_t_defined#ifndef __blkcnt_t_defined#ifndef __fsblkcnt_t_defined#ifndef __fsfilcnt_t_defined#ifndef _SYS_SOCKET_H#ifndef _BITS_SOCKADDR_H#ifndef __ASM_GENERIC_SOCKIOS_H#ifndef __ASM_GENERIC_SOCKET_H#ifndef SO_PASSCRED#ifndef __BITS_SOCKET_H#ifndef __socklen_t_defined#ifndef _EXTERN_INLINE#ifndef __USE_MISC#ifndef FIOGETOWN#ifndef FIOSETOWN#ifndef SIOCATMARK#ifndef SIOCGPGRP#ifndef SIOCGSTAMP#ifndef SIOCGSTAMPNS#ifndef SIOCSPGRP#ifndef IOCSIZE_MASK#ifndef IOCSIZE_SHIFT#ifndef IOC_IN#ifndef IOC_INOUT#ifndef IOC_OUT#ifndef __osockaddr_defined#ifndef _NET_IF_H#ifndef _NETINET_IN_H#ifndef _BITS_BYTESWAP_H#ifndef _BITS_UINTN_IDENTITY_H#ifndef INADDR_LOOPBACK#ifndef __NETINET_IP_H#ifndef __NETINET_UDP_H#ifndef _BITS_STDIO_H#ifndef _STDIO_H#ifndef __extern_inline#ifndef _VA_LIST_DEFINED#ifndef _STDLIB_H#ifndef __ldiv_t_defined#ifndef __COMPAR_FN_T#ifndef _STRINGS_H#ifndef _STRING_H#ifndef basename#ifndef _ASM_GENERIC_IOCTL_H#ifndef _IOC_SIZEBITS#ifndef _IOC_DIRBITS#ifndef _IOC_NONE#ifndef _IOC_WRITE#ifndef _IOC_READ#ifndef _LINUX_IOCTL_H#ifndef __ASM_GENERIC_IOCTLS_H#ifndef TIOCSRS485#ifndef FIOQSIZE#ifndef _SYS_IOCTL_H#ifndef _SYS_TTYDEFAULTS_H_#ifndef _UNISTD_H#ifndef __intptr_t_defined#ifndef _ARPA_INET_H#ifndef __ASM_GENERIC_BITS_PER_LONG#ifndef __BITS_PER_LONG#ifndef __ASM_X86_BITSPERLONG_H#ifndef _ASM_GENERIC_INT_LL64_H#ifndef _ASM_GENERIC_TYPES_H#ifndef _ASM_X86_TYPES_H#ifndef __always_inline#ifndef __ASM_GENERIC_POSIX_TYPES_H#ifndef __kernel_long_t#ifndef __kernel_ino_t#ifndef __kernel_mode_t#ifndef __kernel_pid_t#ifndef __kernel_ipc_pid_t#ifndef __kernel_uid_t#ifndef __kernel_suseconds_t#ifndef __kernel_daddr_t#ifndef __kernel_uid32_t#ifndef __kernel_old_uid_t#ifndef __kernel_old_dev_t#ifndef __kernel_size_t#ifndef __kernel_fsid_t#ifndef _ASM_X86_POSIX_TYPES_64_H#ifndef _LINUX_POSIX_TYPES_H#ifndef _LINUX_TYPES_H#ifndef _LINUX_IF_ETHER_H#ifndef __UAPI_DEF_ETHHDR#ifndef __LINUX_IF_PACKET_H#ifndef _DIRENT_H#ifndef _BITS_POSIX1_LIM_H#ifndef SSIZE_MAX#ifndef NGROUPS_MAX#ifndef MAXNAMLEN#ifndef _BITS_SETJMP_H#ifndef _ASM#ifndef _SETJMP_H#ifndef _TERMIOS_H#ifndef _BITS_TIMEX_H#ifndef _BITS_TIME_H#ifndef __struct_tm_defined#ifndef __itimerspec_defined#ifndef _TIME_H#ifndef _GETOPT_POSIX_H#ifndef _SYS_MMAN_H#ifndef MFD_CLOEXEC#ifndef MLOCK_ONFAULT#ifndef PKEY_DISABLE_ACCESS#ifndef MCL_CURRENT#ifndef _SYS_STAT_H#ifndef __blksize_t_defined#ifndef _STAT_VER#ifndef _MKNOD_VER#ifndef _SYS_TIME_H#ifndef _ASM_GENERIC_SECTIONS_H_#ifndef dereference_function_descriptor#ifndef arch_is_kernel_text#ifndef arch_is_kernel_data#ifndef __SANDBOX_SECTIONS_H#ifndef _LINUX_LIST_H#ifndef ARCH_HAS_PREFETCH#ifndef __rtc_def_h#ifndef _INPUT_EVENT_CODES_H#ifndef _INPUT_H#ifndef _SDL_platform_h#ifndef _SDL_config_h#ifndef _WIN32#ifndef _STDINT_H#ifndef WCHAR_MIN#ifndef _INTTYPES_H#ifndef ____gwchar_t_defined#ifndef _ICONV_H#ifndef DECLSPEC#ifndef SDLCALL#ifndef EKA2#ifndef SDL_INLINE_OKAY#ifndef __inline__#ifndef NULL#ifndef _SDL_stdinc_h#ifndef SYMBIAN32_GCCE#ifndef __NDS__#ifndef SDL_memset4#ifndef SDL_memcpy#ifndef SDL_memcpy4#ifndef SDL_revcpy#ifndef _SDL_main_h#ifndef _SDL_error_h#ifndef _SDL_endian_h#ifndef SDL_BYTEORDER#ifndef _SDL_mutex_h#ifndef _SDL_thread_h#ifndef _WIN32_WCE#ifndef _SDL_rwops_h#ifndef _SDL_audio_h#ifndef _SDL_cdrom_h#ifndef _SDL_cpuinfo_h#ifndef _SDL_active_h#ifndef _SDL_keysym_h#ifndef _SDL_keyboard_h#ifndef _SDL_video_h#ifndef _SDL_mouse_h#ifndef _SDL_joystick_h#ifndef _SDL_quit_h#ifndef _SDL_events_h#ifndef _SDL_loadso_h#ifndef _SDL_timer_h#ifndef _SDL_version_h#ifndef _SDL_H#ifndef __CLI_H#ifndef __SANDBOX_GETOPT_H#ifndef CONFIG_SPL_BUILD#ifndef __CROS_EC_COMMANDS_H#ifndef __ACPI__#ifndef __packed#ifndef __aligned#ifndef _CROS_MESSAGE_H#ifndef _ASM_GENERIC_GPIO_H_#ifndef __ASM_SANDBOX_GPIO_H#ifndef _DM_OF_EXTRA_H#ifndef _CROS_EC_H#ifndef __LED_H#ifndef __ASM_TEST_H#ifndef CONFIG_TIMER#ifndef __ANDROID_AB_H#ifndef AVB_SYSDEPS_H_#ifndef AVB_DESCRIPTOR_H_#ifndef AVB_CHAIN_PARTITION_DESCRIPTOR_H_#ifndef AVB_CRYPTO_H_#ifndef AVB_FOOTER_H_#ifndef AVB_HASH_DESCRIPTOR_H_#ifndef AVB_HASHTREE_DESCRIPTOR_H_#ifndef AVB_KERNEL_CMDLINE_DESCRIPTOR_H_#ifndef AVB_OPS_H_#ifndef AVB_PROPERTY_DESCRIPTOR_H_#ifndef AVB_VBMETA_IMAGE_H_#ifndef AVB_SLOT_VERIFY_H_#ifndef AVB_UTIL_H_#ifndef AVB_VERSION_H_#ifndef LIBAVB_H_#ifndef _MMC_H_#ifndef CONFIG_SYS_MMC_MAX_BLK_COUNT#ifndef _AVB_VERIFY_H#ifndef _AXI_H_#ifndef CONFIG_DM_ETH#ifndef _DM_DEVICE_INTERNAL_H#ifndef _DM_LISTS_H_#ifndef _DM_UCLASS_INTERNAL_H#ifndef _BMP_H_#ifndef _LCD_H_#ifndef CONFIG_DM_VIDEO#ifndef LCD_BPP#ifndef LCD_DF#ifndef PAGE_SIZE#ifndef _SPLASH_H_#ifndef _STDIO_DEV_H_#ifndef _VIDEO_H_#ifndef _BOOTCOUNT_H__#ifndef CONFIG_SPL_BOOTCOUNT_LIMIT#ifndef _EFI_H#ifndef __CHARSET_H_#ifndef _DISK_PART_EFI_H#ifndef _EFI_API_H#ifndef _EFI_LOADER_H#ifndef _EFI_SELFTEST_H#ifndef LIBFDT_ENV_H#ifndef __ALIGNMEM_H#ifndef _BOOTM_H#ifndef __ENV_ATTR_H__#ifndef _SEARCH_H_#ifndef __ENV_FLAGS_H__#ifndef CONFIG_ENV_FLAGS_LIST_STATIC#ifndef CONFIG_ENV_OVERWRITE#ifndef __ENV_CALLBACK_H__#ifndef CONFIG_ENV_CALLBACK_LIST_STATIC#ifndef _ENVIRONMENT_H_#ifndef CONFIG_ENV_ADDR#ifndef CONFIG_ENV_OFFSET#ifndef CONFIG_ENV_SECT_SIZE#ifndef CONFIG_ENV_SIZE#ifndef CONFIG_ENV_UBI_PART#ifndef CONFIG_ENV_UBI_VOLUME#ifndef CONFIG_CMD_UBI#ifndef CONFIG_ENV_IS_EMBEDDED#ifndef __MTD_ABI_H__#ifndef _LINUX_LOG2_H#ifndef CONFIG_ARCH_HAS_ILOG2_U32#ifndef CONFIG_ARCH_HAS_ILOG2_U64#ifndef _ASM_GENERIC_DIV64_H#ifndef __div64_const32_is_OK#ifndef __arch_xprod_64#ifndef __div64_32#ifndef __MTD_MTD_H__#ifndef __UBOOT__#ifndef __MTD_FLASHCHIP_H__#ifndef __LINUX_MTD_BBM_H#ifndef CONFIG_SYS_NAND_MAX_CHIPS#ifndef __LINUX_MTD_RAWNAND_H#ifndef _NAND_H_#ifndef _LINUX_CTYPE_H#ifndef ZLIB_H#ifndef WIN32#ifndef SYS16BIT#ifndef STDC#ifndef STDC99#ifndef const#ifndef MAX_MEM_LEVEL#ifndef MAX_WBITS#ifndef OF#ifndef ZEXTERN#ifndef ZEXPORT#ifndef ZEXPORTVA#ifndef FAR#ifndef SEEK_SET#ifndef z_off_t#ifndef __U_BOOT_BTRFS_H__#ifndef _FS_H#ifndef __CBFS_H#ifndef __CPU_H#ifndef __CRAMFS_H#ifndef CONFIG_MTD_NOR_FLASH#ifndef CONFIG_FS_JFFS2#ifndef _BCD_H#ifndef _RTC_H_#ifndef _I2C_H_#ifndef CONFIG_DM_I2C#ifndef CONFIG_SYS_I2C_DIRECT_BUS#ifndef I2C_SOFT_DECLARATIONS#ifndef CONFIG_SYS_I2C_SLAVE#ifndef __DM_DEMO_H#ifndef __DM_UTIL_H#ifndef _CMD_ETHSW_H_#ifndef __EXT_COMMON__#ifndef __EXT4__#ifndef _LINUX_STAT_H#ifndef _USB_DEFS_H_#ifndef _LINUX_UNALIGNED_LE_BYTESHIFT_H#ifndef _LINUX_UNALIGNED_BE_BYTESHIFT_H#ifndef _LINUX_UNALIGNED_GENERIC_H#ifndef _GENERIC_UNALIGNED_H#ifndef __LINUX_USB_CH9_H#ifndef _USB_H_#ifndef __LINUX_USB_GADGET_H#ifndef __LINUX_BITMAP_H#ifndef __LINUX_USB_COMPOSITE_H#ifndef __G_DOWNLOAD_H_#ifndef _FASTBOOT_H_#ifndef __LIBATA_H__#ifndef _ATA_H#ifndef CONFIG_SYS_ATA_STRIDE#ifndef ATA_DEVICE#ifndef ATA_RESET_TIME#ifndef _FAT_H_#ifndef load_kernel_h#ifndef __LINUX_JFFS2_H__#ifndef _LINUX_CONST_H#ifndef __LINUX_SIZES_H__#ifndef __STDLIB_H_#ifndef CONFIG_CMD_GPT_RENAME#ifndef __SANDBOX_BLOCK_DEV__#ifndef CONFIG_BLK#ifndef __BOOTRETRY_H#ifndef _IO_MUX_H#ifndef __CONSOLE_H#ifndef __EDID_H_#ifndef _WATCHDOG_H_#ifndef EXPORT_FUNC#ifndef CONFIG_CMD_SPI#ifndef __EXPORTS_H__#ifndef _XYZMODEM_H_#ifndef __7Z_TYPES_H#ifndef RINOK#ifndef __TYPES_H__FAKE__#ifndef __LZMA_TOOL_H__#ifndef __LZMATOOLS_H__FAKE__#ifndef _MD5_H#ifndef CONFIG_SYS_MEMTEST_SCRATCH#ifndef CONFIG_CRC32_VERIFY#ifndef __LINUX_MII_H__#ifndef _LINUX_ETHTOOL_H#ifndef __LINUX_MDIO_H__#ifndef _PHY_INTERFACE_H#ifndef _PHY_H#ifndef PHY_ANEG_TIMEOUT#ifndef _miiphy_h_#ifndef HEXDUMP_H#ifndef __NVME_H__#ifndef _VIDEO_OSD_H_#ifndef _ASM_PROCESSOR_H#ifndef __PINCTRL_H#ifndef __POWER_CHARGER_H_#ifndef __CORE_PMIC_H_#ifndef __MENU_H__#ifndef __FW_CFG__#ifndef _INCLUDE_REGULATOR_H_#ifndef _RPROC_H_#ifndef _AHCI_H_#ifndef __SATA_H__#ifndef __BINMAN_SYM_H#ifndef __asm_spl_h#ifndef __HANDOFF_H#ifndef _SPL_H_#ifndef _SCSI_H#ifndef CONFIG_DM_SCSI#ifndef SLRE_HEADER_DEFINED#ifndef _SPI_H_#ifndef CONFIG_DM_SPI#ifndef __MTD_CFI_H__#ifndef __LINUX_MTD_SPI_NOR_H#ifndef _SPI_FLASH_H_#ifndef CONFIG_ENV_SPI_BUS#ifndef CONFIG_ENV_SPI_CS#ifndef CONFIG_ENV_SPI_MAX_HZ#ifndef CONFIG_ENV_SPI_MODE#ifndef __SOUND_H__#ifndef __MAPMEM_H#ifndef MAX_SPI_BYTES#ifndef __TPM_COMMON_H#ifndef __TPM_USER_UTILS_H#ifndef __TPM_V1_H#ifndef __TPM_V2_H#ifndef CONFIG_DM_USB#ifndef __TIMESTAMP_H__#ifndef __VERSION_H__#ifndef _LINUX_VIRTIO_TYPES_H#ifndef __VIRTIO_H__#ifndef VIRTIO_CONFIG_NO_LEGACY#ifndef __W1_H#ifndef __W1_EEPROM_H#ifndef _BZLIB_H#ifndef CONFIG_SANDBOX#ifndef BZ_IMPORT#ifndef BZ_NO_STDIO#ifndef CONFIG_SYS_XIMG_LEN#ifndef __ANDROID_BOOTLOADER_MESSAGE_H#ifndef _POST_H#ifndef CONFIG_POST_EXTERNAL_WORD_FUNCS#ifndef _POST_WORD_ADDR#ifndef DEBUG_BOOTKEYS#ifndef __TEE_H#ifndef __TA_AVB_H#ifndef CONFIG_OPTEE_TA_AVB#ifndef __BLOBLIST_H#ifndef __INITCALL_H#ifndef _RELOCATE_H_#ifndef _STATUS_LED_H_#ifndef CONFIG_LED_STATUS_BOARD_SPECIFIC#ifndef _TIMER_H_#ifndef __TRACE_H#ifndef CONFIG_OF_EMBED#ifndef __API_H#ifndef _OF_LIVE_H#ifndef __UBOOT_ONENAND_H#ifndef __SERIAL_H__#ifndef _WDT_H_#ifndef CONFIG_WATCHDOG_TIMEOUT_MSECS#ifndef USE_HOSTCC#ifndef CONFIG_SYS_BOOTM_LEN#ifndef _VXWORKS_H_#ifndef _OPTEE_H#ifndef CONFIG_HUSH_PARSER#ifndef _LINUX_STDDEF_H#ifndef __CHECKER__#ifndef _CLI_HUSH_H_#ifndef CONFIG_SYS_PROMPT_HUSH_PS2#ifndef __U_BOOT__#ifndef CONFIG_FEATURE_SH_FANCY_PROMPT#ifndef BB_VER#ifndef CONFIG_FEATURE_SH_EXTRA_QUIET#ifndef CONFIG_CMDLINE_EDITING#ifndef _DEBUG_UART_H#ifndef CONFIG_SYS_CONSOLE_INFO_QUIET#ifndef MAP_ANONYMOUS#ifndef CONFIG_PHY_AQUANTIA#ifndef FDT_SEQ_MACADDR_FROM_ENV#ifndef __HW_SHA_H#ifndef __IMAGE_H__#ifndef IMAGE_ENABLE_CRC32#ifndef IMAGE_ENABLE_MD5#ifndef IMAGE_ENABLE_SHA1#ifndef CHUNKSZ#ifndef CHUNKSZ_CRC32#ifndef CHUNKSZ_MD5#ifndef CHUNKSZ_SHA1#ifndef IH_ARCH_DEFAULT#ifndef _ANDROID_IMAGE_H_#ifndef CONFIG_SYS_FDT_PAD#ifndef _RSA_H#ifndef _FPGA_H_#ifndef CONFIG_MAX_FPGA_DEVICES#ifndef _XILINX_H_#ifndef __LZO_H__#ifndef __LZMA_DEC_H#ifndef __LZMADEC_H__FAKE__#ifndef __maybe_unused#ifndef CONFIG_SYS_BARGSIZE#ifndef __AUTOBOOT_H#ifndef __LOG_H#ifndef pr_fmt#ifndef LOG_CATEGORY#ifndef __NET_H__#ifndef CONFIG_VERY_BIG_RAM#ifndef CONFIG_PHYLIB#ifndef CONFIG_SYS_CONSOLE_IS_IN_ENV#ifndef CONFIG_DM_KEYBOARD#ifndef CONFIG_USB_MAX_CONTROLLER_COUNT#ifndef CONFIG_USB_EHCI_FARADAY#ifndef __UBIFS_UBOOT_H__#ifndef _DISK_PART_AMIGA_H#ifndef _DISK_PART_DOS_H#ifndef _PART_CD_H#ifndef _DISK_PART_MAC_H#ifndef _ADC_H_#ifndef _SANDBOX_ADC_H_#ifndef CONFIG_AHCI#ifndef __asm_axi_h#ifndef CONFIG_SYS_ATA_PORT_ADDR#ifndef CONFIG_ATAPI#ifndef __CACHE_H#ifndef __DT_STRUCTS#ifndef __SANDBOX_CLK_H#ifndef __SANDBOX_CLK_H__#ifndef _CLK_H_#ifndef _CLK_UCLASS_H#ifndef __LINUX_CLK_PROVIDER_H#ifndef __MACH_IMX_CLK_H#ifndef _DM_OF_ACCESS_H#ifndef _POWER_DOMAIN_H#ifndef CONFIG_MICROBLAZE#ifndef _LINUX_IOPORT_H#ifndef __REGMAP_H#ifndef _DM_OF_ADDR_H#ifndef __SYSCON_H#ifndef _RSA_MOD_EXP_H#ifndef _DMA_H_#ifndef _DMA_UCLASS_H#ifndef __NET_FASTBOOT_H__#ifndef _FASTBOOT_INTERNAL_H_#ifndef _FB_MMC_H_#ifndef _FB_NAND_H_#ifndef _DT_BINDINGS_GPIO_GPIO_H#ifndef _HWSPINLOCK_H_#ifndef __TPS65090_PMIC_H_#ifndef _KEY_MATRIX_H#ifndef _I8042_H_#ifndef __KEYBOARD_H#ifndef _LINUX_INPUT_H#ifndef _MAILBOX_H#ifndef _MAILBOX_UCLASS_H#ifndef __SANDBOX_MBOX_H#ifndef __SANDBOX_SDL_H#ifndef __I2C_EEPROM#ifndef _MISC_H_#ifndef __pwrseq_h#ifndef _MMC_PRIVATE_H_#ifndef _LINUX_MATH64_H#ifndef div_u64_rem#ifndef div_s64_rem#ifndef div64_u64_rem#ifndef div64_u64#ifndef div64_s64#ifndef div_u64#ifndef div_s64#ifndef mul_u32_u32#ifndef mul_u64_u32_shr#ifndef mul_u64_u64_shr#ifndef mul_u64_u32_div#ifndef _MTD_H_#ifndef _LINUX_CRC32_H#ifndef _LINUX_RBTREE_H#ifndef __LINUX_UBI_H__#ifndef __UBOOT_UBI_H#ifndef __UBIFS_H__#ifndef __UBI_MEDIA_H__#ifndef __UBI_USER_H__#ifndef __UBI_DEBUG_H__#ifndef __UBI_UBI_H__#ifndef MTD_PARTITIONS_H#ifndef __ASM_SPI_H__#ifndef _SF_INTERNAL_H_#ifndef CONFIG_DM_SPI_FLASH#ifndef __UBOOT_SPI_MEM_H#ifndef CONFIG_SPI_FLASH_BAR#ifndef _INCLUDE_LIBFDT_H_#ifndef SWIG#ifndef __ASM_GENERIC_U_BOOT_H__#ifndef _MEMBUFF_H#ifndef CONFIG_NETCONSOLE_BUFFER_SIZE#ifndef __ETH_H#ifndef __DRIVER_NVME_H__#ifndef __pch_h#ifndef __pci_internal_h#ifndef CONFIG_SYS_PCI_CACHE_LINE_SIZE#ifndef __X86EMU_REGS_H#ifndef __KERNEL__#ifndef _BIOS_EMUL_H#ifndef _PCI_ROM_H#ifndef _VBE_H#ifndef _VIDEO_FB_H_#ifndef _SCREEN_INFO_H#ifndef CONFIG_VGA_BIOS_ADDR#ifndef _PCI_EP_H#ifndef __GENERIC_PHY_H#ifndef _POWER_DOMAIN_UCLASS_H#ifndef __SANDBOX_POWER_DOMAIN_H#ifndef _PMIC_ACT8846_H_#ifndef __MAX77686_H_#ifndef __FSL_PMIC_H__#ifndef __PFUZE100_PMIC_H_#ifndef __PFUZE3000_PMIC_H_#ifndef _PMIC_RK8XX_H_#ifndef __S2MPS11__H__#ifndef __S5M8767_H_#ifndef _SANDBOX_PMIC_H_#ifndef _REGULATOR_COMMON_H#ifndef _pwm_h_#ifndef CONFIG_DM_PWM#ifndef __RAM_H#ifndef _ELF_H#ifndef __KERNEL_PRINTK__#ifndef _RESET_H#ifndef _RESET_UCLASS_H#ifndef __SANDBOX_RESET_H#ifndef __asm_rtc_h#ifndef _smemh_#ifndef __AUDIO_CODEC_H__#ifndef __I2S_H__#ifndef CONFIG_SPI_IDLE_VAL#ifndef _SPMI_SPMI_H#ifndef __SANDBOXTEE_H#ifndef __tpm_internal_h#ifndef __linux_crc8_h#ifndef __LINUX_USB_OTG_H#ifndef __video_console_h#ifndef _VIDEO_FONT_DATA_#ifndef _VIDEO_FONT_#ifndef stbtt_uint8#ifndef STBTT_ifloor#ifndef STBTT_sqrt#ifndef STBTT_fabs#ifndef STBTT_malloc#ifndef STBTT_assert#ifndef STBTT_strlen#ifndef STBTT_memcpy#ifndef __STB_INCLUDE_STB_TRUETYPE_H__#ifndef STB_RECT_PACK_VERSION#ifndef STBTT_vmove#ifndef stbtt_vertex#ifndef STBTT_MAX_OVERSAMPLE#ifndef STBTT_RASTERIZER_VERSION#ifndef _PANEL_H#ifndef _BACKLIGHT_H#ifndef _DISPLAY_H#ifndef __TEST_TEST_H#ifndef __DM_TEST_H#ifndef CONFIG_CONSOLE_SCROLL_LINES#ifndef _LINUX_VIRTIO_BLK_H#ifndef VIRTIO_BLK_NO_LEGACY#ifndef _LINUX_IO_H#ifndef CONFIG_HAVE_ARCH_IOMAP#ifndef CONFIG_HAVE_ARCH_IOREMAP#ifndef _LINUX_VIRTIO_MMIO_H#ifndef VIRTIO_MMIO_NO_LEGACY#ifndef _LINUX_VIRTIO_NET_H#ifndef VIRTIO_NET_NO_LEGACY#ifndef _LINUX_VIRTIO_PCI_H#ifndef VIRTIO_PCI_NO_LEGACY#ifndef VIRTIO_PCI_NO_MODERN#ifndef _LINUX_VIRTIO_RING_H#ifndef CONFIG_USE_DEFAULT_ENV_FILE#ifndef CONFIG_ENV_ACCESS_IGNORE_FORCE#ifndef __BTRFS_BTRFS_TREE_H__#ifndef __BTRFS_CTREE_H__#ifndef __VARIADIC_MACRO_H__#ifndef __BTRFS_CONV_FUNCS_H__#ifndef __BTRFS_BTRFS_H__#ifndef _LINUX_TIME_H#ifndef ZSTD_H#ifndef __U_BOOT_FS_INTERNAL_H__#ifndef __EXT4_JRNL__#ifndef __CRC16_H#ifndef __EXT4_COMMON__#ifndef __SANDBOX_FS__#ifndef __LINUX_KCONFIG_H#ifndef _CONFIG_DEFAULTS_H_#ifndef __CONFIG_UNCMD_SPL_H__#ifndef CONFIG_SPL_DM#ifndef _CONFIG_CMD_DISTRO_BOOTCMD_H#ifndef CONFIG_BOOTCOMMAND#ifndef __CONFIG_H#ifndef SANDBOX_NO_SDL#ifndef _ASM_CONFIG_H_#ifndef CONFIG_SANDBOX_SPI_MAX_BUS#ifndef CONFIG_SANDBOX_SPI_MAX_CS#ifndef __CONFIG_FALLBACKS_H#ifndef CONFIG_SYS_BAUDRATE_TABLE#ifndef CONFIG_SYS_CBSIZE#ifndef CONFIG_SYS_PBSIZE#ifndef CONFIG_SYS_MAXARGS#ifndef _LINUX_ERRNO_H#ifndef _ERRNO_H#ifndef TYPECHECK_H_INCLUDED#ifndef __KERNEL_STRICT_NAMES#ifndef _SSIZE_T#ifndef _TIME_T#ifndef _CLOCK_T#ifndef _CADDR_T#ifndef __BIT_TYPES_DEFINED__#ifndef __ARCH_ARM_POSIX_TYPES_H#ifndef __ASM_SANDBOX_TYPES_H#ifndef _STDBOOL_H#ifndef BITS_PER_LONG_LONG#ifndef __LINUX_COMPILER_H#ifndef likely#ifndef unlikely#ifndef barrier#ifndef barrier_data#ifndef unreachable#ifndef RELOC_HIDE#ifndef OPTIMIZER_HIDE_VAR#ifndef __UNIQUE_ID#ifndef __deprecated#ifndef __must_check#ifndef CONFIG_ENABLE_MUST_CHECK#ifndef CONFIG_ENABLE_WARN_DEPRECATED#ifndef __used#ifndef __always_unused#ifndef noinline#ifndef __attribute_const__#ifndef __cold#ifndef __section#ifndef __visible#ifndef __assume_aligned#ifndef __same_type#ifndef __native_word#ifndef __compiletime_object_size#ifndef __compiletime_warning#ifndef __compiletime_error#ifndef __compiletime_error_fallback#ifndef __ASM_SANDBOX_SYSTEM_H#ifndef _ASM_GENERIC_BITOPS_FLS_H_#ifndef _ASM_GENERIC_BITOPS___FLS_H_#ifndef _ASM_GENERIC_BITOPS_FLS64_H_#ifndef _ASM_GENERIC_BITOPS___FFS_H_#ifndef __ASM_SANDBOX_BITOPS_H#ifndef _LINUX_BITOPS_H#ifndef PLATFORM__SET_BIT#ifndef PLATFORM__CLEAR_BIT#ifndef PLATFORM_FFS#ifndef PLATFORM_FLS#ifndef _STDARG_H#ifndef _ANSI_STDARG_H_#ifndef __need___va_list#ifndef __GNUC_VA_LIST#ifndef _VA_LIST_#ifndef _VA_LIST#ifndef _VA_LIST_T_H#ifndef __va_list__#ifndef __VSPRINTF_H#ifndef _LINUX_BUILD_BUG_H#ifndef __OPTIMIZE__#ifndef __STDIO_H#ifndef _LINUX_BUG_H#ifndef _LINUX_KERNEL_H#ifndef SIZE_MAX#ifndef _LINUX_DELAY_H#ifndef _LINUX_STRING_H_#ifndef __HAVE_ARCH_STRCPY#ifndef __HAVE_ARCH_STRNCPY#ifndef __HAVE_ARCH_STRLCPY#ifndef __HAVE_ARCH_STRCAT#ifndef __HAVE_ARCH_STRNCAT#ifndef __HAVE_ARCH_STRCMP#ifndef __HAVE_ARCH_STRNCMP#ifndef __HAVE_ARCH_STRCASECMP#ifndef __HAVE_ARCH_STRNCASECMP#ifndef __HAVE_ARCH_STRCHR#ifndef __HAVE_ARCH_STRRCHR#ifndef __HAVE_ARCH_STRSTR#ifndef __HAVE_ARCH_STRLEN#ifndef __HAVE_ARCH_STRNLEN#ifndef __HAVE_ARCH_STRCSPN#ifndef __HAVE_ARCH_STRDUP#ifndef __HAVE_ARCH_STRSWAB#ifndef __HAVE_ARCH_MEMSET#ifndef __HAVE_ARCH_MEMCPY#ifndef __HAVE_ARCH_MEMMOVE#ifndef __HAVE_ARCH_MEMSCAN#ifndef __HAVE_ARCH_MEMCMP#ifndef __HAVE_ARCH_MEMCHR#ifndef __HAVE_ARCH_MEMCHR_INV#ifndef _LINUX_LINUX_STRING_H_#ifndef __LINUX_STRINGIFY_H#ifndef __ASM_SANDBOX_PTRACE_H#ifndef _LINUX_LINKAGE_H#ifndef ASM_NL#ifndef asmlinkage#ifndef __ALIGN#ifndef __ALIGN_STR#ifndef END#ifndef ENDPROC#ifndef _IDE_H#ifndef __UUID_H__#ifndef _LINUX_POISON_H#ifndef _PART_H#ifndef _FLASH_H_#ifndef CONFIG_SYS_MAX_FLASH_SECT#ifndef _LINUX_BYTEORDER_SWAB_H#ifndef __arch__swab16#ifndef __arch__swab32#ifndef __arch__swab64#ifndef __arch__swab16p#ifndef __arch__swab32p#ifndef __arch__swab64p#ifndef __arch__swab16s#ifndef __arch__swab32s#ifndef __arch__swab64s#ifndef _LINUX_BYTEORDER_GENERIC_H#ifndef _LINUX_BYTEORDER_LITTLE_ENDIAN_H#ifndef __LITTLE_ENDIAN#ifndef __LITTLE_ENDIAN_BITFIELD#ifndef __ASM_SANDBOX_BYTEORDER_H#ifndef __COMPILER_H__#ifndef MAP_FAILED#ifndef O_BINARY#ifndef _U_BOOT_SANDBOX_H_#ifndef _U_BOOT_H_#ifndef _LINUX_LMB_H#ifndef __LINKER_LISTS_H__#ifndef __COMMAND_H#ifndef CONFIG_SYS_HELP_CMD_WIDTH#ifndef _HASH_H#ifndef FDT_H#ifndef LIBFDT_H#ifndef __FDT_SUPPORT_H#ifndef _SHA1_H#ifndef _SHA256_H#ifndef _RSA_CHECKSUM_H#ifndef _DM_UCLASS_ID_H#ifndef __ASM_GBL_DATA_H#ifndef __INIT_H_#ifndef __DISPLAY_OPTIONS_H#ifndef _UBOOT_CRC_H#ifndef __SANDBOX_CACHE_H__#ifndef _UAPI_LINUX_IF_ETHER_H#ifndef _BOOTSTAGE_H#ifndef __LINUX_KBUILD_H#ifndef _LINUX_BITREV_H#ifndef CONFIG_HAVE_ARCH_BITREVERSE#ifndef _BZLIB_PRIVATE_H#ifndef __GNUC__#ifndef BZ_NO_COMPRESS#ifndef _LINUX_CRC7_H#ifndef TIME#ifndef REG#ifndef BUILD_TAG#ifndef _EFI_DRIVER_H#ifndef _ASM_PE_H#ifndef _PE_H#ifndef _LINUX_LIST_SORT_H#ifndef IS_RELA#ifndef _SMBIOS_H_#ifndef CONFIG_PHYS_64BIT#ifndef CONFIG_GZIP_COMPRESS_DEF_SZ#ifndef CONFIG_GZIP#ifndef debug#ifndef CONFIG_ENV_MIN_ENTRIES#ifndef CONFIG_ENV_MAX_ENTRIES#ifndef AVB_COMPILATION#ifndef AVB_CMDLINE_H_#ifndef AVB_SHA_H_#ifndef AVB_RSA_H_#ifndef UNROLL_LOOPS#ifndef UNROLL_LOOPS_SHA512#ifndef LIBFDT_INTERNAL_H#ifndef _LINUX_RBTREE_AUGMENTED_H#ifndef __RC4_H#ifndef _CRT_SECURE_NO_DEPRECATE#ifndef GET_UINT32_BE#ifndef PUT_UINT32_BE#ifndef _TABLES_CSUM_H_#ifndef __HAVE_ARCH_STRSPN#ifndef __HAVE_ARCH_STRPBRK#ifndef __HAVE_ARCH_STRTOK#ifndef __HAVE_ARCH_STRSEP#ifndef CONFIG_WD_PERIOD#ifndef __TPM_UTILS_H#ifndef CONFIG_SHA1#ifndef __GLUE_ZLIB_H__#ifndef ZUTIL_H#ifndef local#ifndef DEF_WBITS#ifndef DEFLATE_H#ifndef NO_GZIP#ifndef DEBUG#ifndef FASTEST#ifndef TOO_FAR#ifndef NO_DUMMY_DECL#ifndef ASMV#ifndef ASMINF#ifndef PKZIP_BUG_WORKAROUND#ifndef verbose#ifndef MY_ZCALLOC#ifndef XXHASH_H#ifndef ZSTD_CCOMMON_H_MODULE#ifndef ZSTD_MAXWINDOWSIZE_DEFAULT#ifndef FSE_FUNCTION_EXTENSION#ifndef FSE_FUNCTION_TYPE#ifndef ERROR_H_MODULE#ifndef MEM_H_MODULE#ifndef BITSTREAM_H_MODULE#ifndef FSE_H#ifndef FSE_MAX_MEMORY_USAGE#ifndef FSE_DEFAULT_MEMORY_USAGE#ifndef FSE_MAX_SYMBOL_VALUE#ifndef HUF_H_298734234#ifndef __ARP_H__#ifndef CONFIG_ARP_TIMEOUT#ifndef CONFIG_NET_RETRY_COUNT#ifndef __TFTP_H__#ifndef __BOOTP_H__#ifndef CONFIG_DHCP_MIN_EXT_LEN#ifndef CONFIG_BOOTP_ID_CACHE_SIZE#ifndef __CDP_H__#ifndef __DNS_H__#ifndef __ETH_INTERNAL_H#ifndef __NET_RAND_H__#ifndef __LINK_LOCAL_H__#ifndef __NFS_H__#ifndef __PING_H__#ifndef __RARP_H__#ifndef __SNTP_H__#ifndef CONFIG_NET_MAXDEFRAG#ifndef CONFIG_NFS_TIMEOUT#ifndef CONFIG_TFTP_FILE_NAME_MAX_LEN#ifndef YY_YY_SCRIPTS_DTC_DTC_PARSER_TAB_H_INCLUDED#ifndef YYDEBUG#ifndef YYTOKENTYPE#ifndef FLEXINT_H#ifndef __STDC_LIMIT_MACROS#ifndef INT8_MIN#ifndef INT16_MIN#ifndef INT32_MIN#ifndef INT8_MAX#ifndef INT16_MAX#ifndef INT32_MAX#ifndef UINT8_MAX#ifndef UINT16_MAX#ifndef UINT32_MAX#ifndef YY_BUF_SIZE#ifndef YY_TYPEDEF_YY_BUFFER_STATE#ifndef YY_TYPEDEF_YY_SIZE_T#ifndef YY_STRUCT_YY_BUFFER_STATE#ifndef YY_NO_UNISTD_H#ifndef YY_EXTRA_TYPE#ifndef YY_SKIP_YYWRAP#ifndef YY_NO_UNPUT#ifndef yytext_ptr#ifndef YY_NO_INPUT#ifndef YY_READ_BUF_SIZE#ifndef ECHO#ifndef YY_INPUT#ifndef yyterminate#ifndef YY_START_STACK_INCR#ifndef YY_FATAL_ERROR#ifndef YY_DECL#ifndef YY_USER_ACTION#ifndef YY_BREAK#ifndef YY_EXIT_FAILURE#ifndef YY_NULLPTR#ifndef YYSIZE_T#ifndef YY_#ifndef YY_ATTRIBUTE#ifndef YY_ATTRIBUTE_PURE#ifndef YY_ATTRIBUTE_UNUSED#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN#ifndef YY_INITIAL_VALUE#ifndef EXIT_SUCCESS#ifndef YYSTACK_ALLOC_MAXIMUM#ifndef YYMALLOC#ifndef YYFREE#ifndef YYCOPY#ifndef YYLLOC_DEFAULT#ifndef YYFPRINTF#ifndef YY_LOCATION_PRINT#ifndef YYINITDEPTH#ifndef YYMAXDEPTH#ifndef yystrlen#ifndef yystpcpy#ifndef yytnamerr#ifndef YYSTACK_RELOCATE#ifndef yyoverflow#ifndef _BITS_TYPES_H#ifndef _BITS_TYPESIZES_H#ifndef _STRUCT_TIMESPEC#ifndef __time_t_defined#ifndef __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION#ifndef ____mbstate_t_defined#ifndef _____fpos_t_defined#ifndef _____fpos64_t_defined#ifndef ____FILE_defined#ifndef __FILE_defined#ifndef __struct_FILE_defined#ifndef _IO_lock_t_defined#ifndef _BITS_STDIO_LIM_H#ifndef _BITS_STDIO2_H#ifndef _BITS_TYPES___LOCALE_T_H#ifndef _BITS_TYPES_LOCALE_T_H#ifndef __STRINGS_FORTIFIED#ifndef _BITS_STRING_FORTIFIED_H#ifndef __ENUM_IDTYPE_T#ifndef _BITS_FLOATN_COMMON_H#ifndef _BITS_FLOATN_H#ifndef __clock_t_defined#ifndef __clockid_t_defined#ifndef __timer_t_defined#ifndef _BITS_STDINT_INTN_H#ifndef _ENDIAN_H#ifndef __FLOAT_WORD_ORDER#ifndef ____sigset_t_defined#ifndef __sigset_t_defined#ifndef __timeval_defined#ifndef _BITS_PTHREADTYPES_ARCH_H#ifndef _THREAD_SHARED_TYPES_H#ifndef _BITS_PTHREADTYPES_COMMON_H#ifndef __have_pthread_attr_t#ifndef _ALLOCA_H#ifndef _BITS_WCHAR_H#ifndef _BITS_STDINT_UINTN_H#ifndef _GCC_WRAP_STDINT_H#ifndef _ASSERT_H_DECLS#ifndef _CTYPE_H#ifndef _ISbit#ifndef __NO_CTYPE#ifndef _ASM_GENERIC_ERRNO_BASE_H#ifndef _ASM_GENERIC_ERRNO_H#ifndef _BITS_ERRNO_H#ifndef ENOTSUP#ifndef ECANCELED#ifndef EOWNERDEAD#ifndef ENOTRECOVERABLE#ifndef ERFKILL#ifndef EHWPOISON#ifndef _BITS_POSIX_OPT_H#ifndef _GETOPT_CORE_H#ifndef _GETOPT_EXT_H#ifndef _GETOPT_H#ifndef __getopt_argv_const#ifndef UTIL_H#ifndef DTC_H#ifndef SRCPOS_H#ifndef _LINUX_LIMITS_H#ifndef NR_OPEN#ifndef LINK_MAX#ifndef OPEN_MAX#ifndef ARG_MAX#ifndef __cookie_io_functions_t_defined#ifndef __error_t_defined#ifndef __TEST_COMPRESSION_H__#ifndef __TEST_ENV_H__#ifndef __TEST_LIB_H__#ifndef __TEST_SUITES_H__#ifndef __TEST_UT_H#ifndef __TEST_OVERLAY_H__#ifndef __FDT_HOST_H__#ifndef _IMAGETOOL_H_#ifndef _AISIMAGE_H_#ifndef _ASM_X86_SWAB_H#ifndef _LINUX_SWAB_H#ifndef _ASM_X86_BYTEORDER_H#ifndef HEADER_OPENSSLV_H#ifndef OPENSSL_NO_IDEA#ifndef OPENSSL_NO_MD2#ifndef OPENSSL_NO_MDC2#ifndef OPENSSL_NO_RC5#ifndef OPENSSL_THREADS#ifndef OPENSSL_RAND_SEED_OS#ifndef OPENSSL_NO_ASAN#ifndef OPENSSL_NO_CRYPTO_MDEBUG#ifndef OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE#ifndef OPENSSL_NO_DEVCRYPTOENG#ifndef OPENSSL_NO_EGD#ifndef OPENSSL_NO_EXTERNAL_TESTS#ifndef OPENSSL_NO_FUZZ_AFL#ifndef OPENSSL_NO_FUZZ_LIBFUZZER#ifndef OPENSSL_NO_HEARTBEATS#ifndef OPENSSL_NO_MSAN#ifndef OPENSSL_NO_SCTP#ifndef OPENSSL_NO_SSL_TRACE#ifndef OPENSSL_NO_SSL3#ifndef OPENSSL_NO_SSL3_METHOD#ifndef OPENSSL_NO_UBSAN#ifndef OPENSSL_NO_WEAK_SSL_CIPHERS#ifndef OPENSSL_NO_STATIC_ENGINE#ifndef DECLARE_DEPRECATED#ifndef OPENSSL_FILE#ifndef OPENSSL_MIN_API#ifndef _BITS_POSIX2_LIM_H#ifndef BC_BASE_MAX#ifndef BC_DIM_MAX#ifndef BC_SCALE_MAX#ifndef BC_STRING_MAX#ifndef COLL_WEIGHTS_MAX#ifndef EXPR_NEST_MAX#ifndef LINE_MAX#ifndef CHARCLASS_NAME_MAX#ifndef _BITS_UIO_LIM_H#ifndef _XOPEN_LIM_H#ifndef _LIBC_LIMITS_H_#ifndef _LIMITS_H#ifndef LLONG_MIN#ifndef LLONG_MAX#ifndef ULLONG_MAX#ifndef CHAR_WIDTH#ifndef SCHAR_WIDTH#ifndef UCHAR_WIDTH#ifndef SHRT_WIDTH#ifndef USHRT_WIDTH#ifndef INT_WIDTH#ifndef UINT_WIDTH#ifndef LONG_WIDTH#ifndef ULONG_WIDTH#ifndef LLONG_WIDTH#ifndef ULLONG_WIDTH#ifndef _GCC_LIMITS_H_#ifndef _LIMITS_H___#ifndef MB_LEN_MAX#ifndef HEADER_E_OS2_H#ifndef OPENSSL_SYS_MSDOS#ifndef OPENSSL_OPT_WINDLL#ifndef ossl_ssize_t#ifndef HEADER_OPENSSL_TYPES_H#ifndef HEADER_SYMHACKS_H#ifndef HEADER_STACK_H#ifndef HEADER_SAFESTACK_H#ifndef HEADER_CRYPTOERR_H#ifndef _BITS_TYPES_STRUCT_SCHED_PARAM#ifndef _BITS_SCHED_H#ifndef _SCHED_H#ifndef _BITS_CPU_SET_H#ifndef __USE_XOPEN2K#ifndef _PTHREAD_H#ifndef __PTHREAD_RWLOCK_INT_FLAGS_SHARED#ifndef __cleanup_fct_attribute#ifndef SHARED#ifndef HEADER_CRYPTO_H#ifndef OPENSSL_NO_STDIO#ifndef HEADER_BIOERR_H#ifndef HEADER_BIO_H#ifndef BIO_FLAGS_UPLINK#ifndef OPENSSL_NO_SOCK#ifndef OPENSSL_NO_DGRAM#ifndef HEADER_EVPERR_H#ifndef HEADER_ASN1ERR_H#ifndef HEADER_BNERR_H#ifndef HEADER_BN_H#ifndef OPENSSL_NO_EC2M#ifndef HEADER_ASN1_H#ifndef OPENSSL_EXPORT_VAR_AS_FUNCTION#ifndef HEADER_OBJERR_H#ifndef HEADER_OBJECTS_H#ifndef HEADER_ENVELOPE_H#ifndef EVP_MD#ifndef OPENSSL_NO_RSA#ifndef OPENSSL_NO_DSA#ifndef OPENSSL_NO_DH#ifndef OPENSSL_NO_EC#ifndef OPENSSL_NO_SIPHASH#ifndef OPENSSL_NO_POLY1305#ifndef OPENSSL_NO_MD4#ifndef OPENSSL_NO_MD5#ifndef OPENSSL_NO_BLAKE2#ifndef OPENSSL_NO_RMD160#ifndef OPENSSL_NO_WHIRLPOOL#ifndef OPENSSL_NO_SM3#ifndef OPENSSL_NO_DES#ifndef OPENSSL_NO_RC4#ifndef OPENSSL_NO_RC2#ifndef OPENSSL_NO_BF#ifndef OPENSSL_NO_CAST#ifndef OPENSSL_NO_OCB#ifndef OPENSSL_NO_ARIA#ifndef OPENSSL_NO_CAMELLIA#ifndef OPENSSL_NO_CHACHA#ifndef OPENSSL_NO_SEED#ifndef OPENSSL_NO_SM4#ifndef OPENSSL_NO_ENGINE#ifndef OPENSSL_NO_SCRYPT#ifndef _MKIIMAGE_H_#ifndef _DUMPIMAGE_H_#ifndef _FIT_COMMON_H_#ifndef _BYTESWAP_H#ifndef __OS_SUPPORT_H_#ifndef _IMX8IMAGE_H_#ifndef _IMXIMAGE_H_#ifndef _KWBIMAGE_H_#ifndef HEADER_RSAERR_H#ifndef HEADER_RSA_H#ifndef OPENSSL_RSA_MAX_MODULUS_BITS#ifndef OPENSSL_RSA_SMALL_MODULUS_BITS#ifndef OPENSSL_RSA_MAX_PUBEXP_BITS#ifndef HEADER_BUFERR_H#ifndef HEADER_BUFFER_H#ifndef HEADER_ECERR_H#ifndef HEADER_EC_H#ifndef OPENSSL_ECC_MAX_FIELD_BITS#ifndef OPENSSL_NO_EC_NISTP_64_GCC_128#ifndef HEADER_DHERR_H#ifndef HEADER_DH_H#ifndef OPENSSL_DH_MAX_MODULUS_BITS#ifndef OPENSSL_NO_CMS#ifndef HEADER_DSAERR_H#ifndef HEADER_DSA_H#ifndef OPENSSL_DSA_MAX_MODULUS_BITS#ifndef HEADER_SHA_H#ifndef HEADER_X509ERR_H#ifndef HEADER_LHASH_H#ifndef HEADER_X509_VFY_H#ifndef HEADER_X509_H#ifndef HEADER_PKCS7ERR_H#ifndef HEADER_PKCS7_H#ifndef OPENSSL_NO_OCSP#ifndef HEADER_PEMERR_H#ifndef HEADER_PEM_H#ifndef HEADER_ERR_H#ifndef OPENSSL_NO_ERR#ifndef HEADER_COMPERR_H#ifndef OPENSSL_NO_COMP#ifndef HEADER_COMP_H#ifndef HEADER_HMAC_H#ifndef HEADER_ASYNCERR_H#ifndef HEADER_ASYNC_H#ifndef HEADER_CTERR_H#ifndef OPENSSL_NO_CT#ifndef HEADER_CT_H#ifndef HEADER_SSLERR_H#ifndef HEADER_SSL2_H#ifndef HEADER_SSL_H#ifndef OPENSSL_NO_DTLS1_METHOD#ifndef OPENSSL_NO_SRP#ifndef OPENSSL_NO_NEXTPROTONEG#ifndef OPENSSL_NO_PSK#ifndef OPENSSL_NO_TLS1_METHOD#ifndef OPENSSL_NO_TLS1_1_METHOD#ifndef OPENSSL_NO_TLS1_2_METHOD#ifndef OPENSSL_NO_DTLS1_2_METHOD#ifndef OPENSSL_NO_UNIT_TEST#ifndef HEADER_SSL3_H#ifndef SSL3_ALIGN_PAYLOAD#ifndef HEADER_TLS1_H#ifndef OPENSSL_TLS_SECURITY_LEVEL#ifndef HEADER_DTLS1_H#ifndef HEADER_D1_SRTP_H#ifndef OPENSSL_NO_SRTP#ifndef HEADER_RANDERR_H#ifndef HEADER_RAND_H#ifndef HEADER_UIERR_H#ifndef HEADER_UI_H#ifndef OPENSSL_NO_UI_CONSOLE#ifndef HEADER_ENGINEERR_H#ifndef HEADER_ENGINE_H#ifndef LPC32XX_BOOT_ICR#ifndef LPC32XX_BOOT_NAND_PAGESIZE#ifndef LPC32XX_BOOT_NAND_PAGES_PER_SECTOR#ifndef LPC32XX_BOOT_CODESIZE#ifndef _LIBGEN_H#ifndef _MTK_IMAGE_H#ifndef __MXSSB_H__#ifndef PBLCRC32_H#ifndef _GPIMAGE_H_#ifndef _OMAPIMAGE_H_#ifndef PBLIMAGE_H#ifndef _REGEX_H#ifndef RE_TRANSLATE_TYPE#ifndef RE_NREGS#ifndef _CRAY#ifndef _Restrict_#ifndef _Restrict_arr_#ifndef _BITS_SIGNUM_GENERIC_H#ifndef _SIGNAL_H#ifndef _BITS_SIGNUM_H#ifndef __sig_atomic_t_defined#ifndef ____sigval_t_defined#ifndef _BITS_SIGINFO_ARCH_H#ifndef __siginfo_t_defined#ifndef __SI_ALIGNMENT#ifndef __SI_BAND_TYPE#ifndef __SI_CLOCK_T#ifndef __SI_ERRNO_THEN_CODE#ifndef __SI_HAVE_SIGSYS#ifndef __SI_SIGFAULT_ADDL#ifndef _BITS_SIGINFO_CONSTS_ARCH_H#ifndef _BITS_SIGINFO_CONSTS_H#ifndef __SI_ASYNCIO_AFTER_SIGIO#ifndef __sigval_t_defined#ifndef __USE_POSIX199309#ifndef __sigevent_t_defined#ifndef _BITS_SIGEVENT_CONSTS_H#ifndef _BITS_SIGACTION_H#ifndef _BITS_SIGCONTEXT_H#ifndef sigcontext_struct#ifndef __stack_t_defined#ifndef _SYS_UCONTEXT_H#ifndef _BITS_SIGSTACK_H#ifndef _BITS_SS_FLAGS_H#ifndef __sigstack_defined#ifndef _BITS_SIGTHREAD_H#ifndef __ASM_GENERIC_PARAM_H#ifndef HZ#ifndef EXEC_PAGESIZE#ifndef NOGROUP#ifndef _LINUX_PARAM_H#ifndef _SYS_PARAM_H#ifndef NCARGS#ifndef NODEV#ifndef DEV_BSIZE#ifndef howmany#ifndef _RKCOMMON_H#ifndef _UBLIMAGE_H_#ifndef _ZYNQMPIMAGE_H_#else#elif ( ((CONFIG_ENV_ADDR+CONFIG_ENV_SIZE) < CONFIG_SYS_MONITOR_BASE) || \#elif __GNUC_PREREQ (2,97)#elif defined __GNUC__#elif defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 600#elif defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 700#elif defined (__VMS__)#elif __BYTE_ORDER == __BIG_ENDIAN#elif defined __USE_XOPEN2K#elif defined __USE_POSIX199506#elif defined __USE_POSIX199309#elif defined __USE_UNIX98#elif defined(__ILP32__)#elif defined  __x86_64__#elif defined(macintosh)#elif defined __WCHAR_TYPE__#elif defined(__WIN32__)#elif defined(__OS2__)#elif defined (__GNUC__) && __GNUC__ < 4#elif !defined(__WINS__)#elif (defined(__MWERKS__) && defined(__MACOS__))#elif defined(HAVE_MALLOC_H)#elif defined(HAVE_STDINT_H)#elif defined(__GNUC__)#elif defined(_MSC_VER)#elif defined(__WATCOMC__)#elif defined(__BORLANDC__)#elif defined(__DMC__)#elif defined(__AIX__)#elif defined(__MRC__)#elif defined(__GNUC__) && defined(i386)#elif defined(HAVE_BCOPY)#elif defined(HAVE_INDEX)#elif defined(HAVE_RINDEX)#elif defined(HAVE__STRICMP)#elif defined(HAVE__STRNICMP)#elif defined(__GNUC__) && defined(__x86_64__)#elif defined(__GNUC__) && (defined(__powerpc__) || defined(__ppc__))#elif defined(__GNUC__) && (defined(__m68k__) && !defined(__mcoldfire__))#elif defined(_WIN32_WCE)#elif defined(CONFIG_ARC)#elif defined(CONFIG_NIOS2)#elif defined(CONFIG_MICROBLAZE)#elif defined(CONFIG_M68K)#elif defined(CONFIG_MIPS)#elif defined(CONFIG_ARM)#elif defined(CONFIG_SH)#elif defined(CONFIG_X86)#elif defined(CONFIG_SANDBOX)#elif defined(CONFIG_NDS32)#elif defined(CONFIG_RISCV)#elif defined(CONFIG_XTENSA)#elif defined(CONFIG_ATMEL_LCD) || defined(CONFIG_ATMEL_HLCD)#elif defined(CONFIG_EXYNOS_FB)#elif defined(CONFIG_LCD_LOGO)#elif LCD_BPP == LCD_COLOR32#elif defined(CONFIG_LCD)#elif defined(CONFIG_VIDEO)#elif BITS_PER_LONG == 32#elif defined(CONFIG_SYS_I2C)#elif !defined(CONFIG_DM_RTC)#elif defined(__BIG_ENDIAN)#elif defined(CONFIG_DM_GPIO)#elif defined(CONFIG_CMD_BOOTZ)#elif defined (CONFIG_MPC85xx)#elif defined (CONFIG_MPC86xx)#elif defined(STATUS_LED_PAR)#elif defined(CONFIG_LED_STATUS_BOARD_SPECIFIC)#elif defined(CONFIG_SANDBOX) || defined(CONFIG_EFI_APP)#elif defined(CONFIG_NIOS2) || defined(CONFIG_XTENSA)#elif defined(CONFIG_NDS32) || defined(CONFIG_SH) || defined(CONFIG_RISCV)#elif defined(CONFIG_SYS_MONITOR_BASE)#elif defined(CONFIG_VIDEO) && \#elif !defined(CONFIG_SANDBOX)#elif defined(CONFIG_NDS32) || defined(CONFIG_RISCV)#elif !defined(CONFIG_SANDBOX) && !defined(CONFIG_NIOS2)#elif CONFIG_SYS_MONITOR_BASE == CONFIG_SYS_FLASH_BASE#elif defined CONFIG_DELAY_ENVIRONMENT#elif defined(CONFIG_CMDLINE)#elif defined(CONFIG_OF_STDOUT_VIA_ALIAS) && defined(CONFIG_CONS_INDEX)#elif defined(CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP) || \#elif defined(CONFIG_SYS_USB_EVENT_POLL_VIA_CONTROL_EP)#elif CONFIG_SYS_FSL_SEC_COMPAT >= 4#elif CONFIG_IS_ENABLED(FASTBOOT_FLASH_NAND)#elif defined(MTDIDS_DEFAULT)#elif defined(CONFIG_MTDIDS_DEFAULT)#elif defined(MTDPARTS_DEFAULT)#elif defined(CONFIG_MTDPARTS_DEFAULT)#elif !defined(CONFIG_SCSI_AHCI_PLAT)#elif STBTT_RASTERIZER_VERSION==2#elif STBTT_RASTERIZER_VERSION == 2#elif defined(CONFIG_VIDEO_SANDBOX_SDL)#elif defined(DEFAULT_ENV_INSTANCE_STATIC)#elif defined(CONFIG_X86_RUN_32BIT)#elif defined(CONFIG_X86_RUN_64BIT)#elif defined(CONFIG_ARCH_RV32I)#elif defined(CONFIG_ARCH_RV64I)#elif defined(CONFIG_ARM) || defined(__arm__)#elif defined(CONFIG_X86) || defined(__x86_64__)#elif defined(__i386__)#elif defined(CONFIG_ARCH_RV32I) || ((defined(__riscv) && __riscv_xlen == 32))#elif defined(CONFIG_ARCH_RV64I) || ((defined(__riscv) && __riscv_xlen == 64))#elif GCC_VERSION >= 40902#elif BITS_PER_LONG == 64#elif BITS_PER_LONG != 64#elif defined(__linux__) || defined(__WIN32__) || defined(__MINGW32__) || defined(__OpenBSD__)#elif defined(__MACH__) || defined(__FreeBSD__)#elif defined(__OpenBSD__)#elif __SIZEOF_LONG__ == 4#elif CONFIG_FAT_DEFAULT_CODEPAGE == 1250#elif defined(CONFIG_SYS_SUPPORT_64BIT_DATA)#elif defined(__arm__)#elif defined(__x86_64__)#elif defined(__riscv)#elif (__riscv_xlen == 64)#elif defined(CONFIG_OF_BOARD) || defined(CONFIG_OF_SEPARATE)#elif defined(CONFIG_OF_HOSTFILE)#elif CONFIG_SYS_TIMER_RATE > 1000000#elif defined(CONFIG_SYS_TIMER_RATE)#elif defined(__LITTLE_ENDIAN)#elif defined(CONFIG_BOOTP_VCI_STRING)#elif defined size_t#elif ! defined YYSIZE_T#elif defined __BUILTIN_VA_ARG_INCR#elif defined _AIX#elif defined _MSC_VER#elif __WORDSIZE == 64#elif !defined __cplusplus#elif L'\0' - 1 > 0#elif !defined __GNUC__ || defined __STRICT_ANSI__#elif defined __USE_EXTERN_INLINES#elif defined __isctype#elif defined(__SWAB_64_THRU_32__)#elif OPENSSL_API_COMPAT < 0x10200000L#elif defined __INT_MAX__#elif defined __LONG_MAX__#elif defined(OPENSSL_SYS_UWIN)#elif defined(__DECCXX)#elif defined(_POSIX_SSIZE_MAX)#elif (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \#elif defined(_MSC_VER) && _MSC_VER<=1500#elif defined(__GNUC__) && __GNUC__>=2#elif defined(__GNUC__) && __GNUC__ >= 2#elif !defined(LIBRESSL_VERSION_NUMBER)#elif defined(__arch64__)#elif 199901L <= __STDC_VERSION__ || defined restrict#elif ((199901L <= __STDC_VERSION__ || 3 < __GNUC__ + (1 <= __GNUC_MINOR__)) \#endif#undef OF_CHECKS#undef HAVE_MREMAP#undef HAVE_MMAP#undef dev_warn#undef dev_err#undef dev_info#undef dev_vdbg#undef dev_dbg#undef writeb#undef readb#undef writew#undef readw#undef writel#undef readl#undef __always_inline#undef __PMT#undef __P#undef __GNU_LIBRARY__#undef __USE_ISOC99#undef __USE_ISOC95#undef _LARGEFILE_SOURCE#undef _ATFILE_SOURCE#undef _POSIX_C_SOURCE#undef _POSIX_SOURCE#undef _DEFAULT_SOURCE#undef _LARGEFILE64_SOURCE#undef _XOPEN_SOURCE_EXTENDED#undef _XOPEN_SOURCE#undef _ISOC11_SOURCE#undef _ISOC99_SOURCE#undef _ISOC95_SOURCE#undef __GLIBC_USE_DEPRECATED_GETS#undef __KERNEL_STRICT_NAMES#undef __USE_FORTIFY_LEVEL#undef __USE_GNU#undef __USE_ATFILE#undef __USE_MISC#undef __USE_FILE_OFFSET64#undef __USE_LARGEFILE64#undef __USE_LARGEFILE#undef __USE_XOPEN2K8XSI#undef __USE_XOPEN2K8#undef __USE_XOPEN2KXSI#undef __USE_XOPEN2K#undef __USE_UNIX98#undef __USE_XOPEN_EXTENDED#undef __USE_XOPEN#undef __USE_POSIX199506#undef __USE_POSIX199309#undef __USE_POSIX2#undef __USE_POSIX#undef __USE_ISOCXX11#undef __USE_ISOC11#undef __need_NULL#undef __need_size_t#undef __NFDBITS#undef IOC_OUT#undef __SYS_SOCKET_H_undef_IOC_OUT#undef IOC_INOUT#undef __SYS_SOCKET_H_undef_IOC_INOUT#undef IOC_IN#undef __SYS_SOCKET_H_undef_IOC_IN#undef IOCSIZE_SHIFT#undef __SYS_SOCKET_H_undef_IOCSIZE_SHIFT#undef IOCSIZE_MASK#undef __SYS_SOCKET_H_undef_IOCSIZE_MASK#undef __SOCKADDR_ONETYPE#undef NULL#undef __STDIO_INLINE#undef __need_wchar_t#undef _BSD_WCHAR_T_#undef __FD_SETSIZE#undef _DIRENT_HAVE_D_NAMLEN#undef __LINUX__#undef __need_ptrdiff_t#undef _begin_code_h#undef AVB_INSIDE_LIBAVB_H#undef DEBUG_CRAMFS#undef TMP_PROT_OFF#undef TMP_PROT_ON#undef TMP_ERASE#undef EXPORT_FUNC#undef false#undef true#undef debug#undef MII_DEBUG#undef BBB_XPORT_TRACE#undef BBB_COMDAT_TRACE#undef PART_DEBUG#undef AMIGA_DEBUG#undef CHECK_FOR_POWERPC_PLATTFORM#undef CONFIG_MTD_UBI_BLOCK#undef CONFIG_MTD_UBI_DEBUG_MSG_BLD#undef CONFIG_MTD_UBI_DEBUG_MSG_IO#undef CONFIG_MTD_UBI_DEBUG_MSG_WL#undef CONFIG_MTD_UBI_DEBUG_MSG_EBA#undef CONFIG_MTD_UBI_DEBUG_MSG#undef CONFIG_MTD_UBI_DEBUG_PARANOID#undef CONFIG_MTD_UBI_DEBUG#undef x86#undef GS#undef FS#undef ES#undef SS#undef DS#undef CS#undef INDEX#undef offsetof#undef __FDMASK#undef __FDELT#undef __FDSET_LONGS#undef __deprecated_for_modules#undef __deprecated#undef __must_check#undef __need___va_list#undef htons#undef htonl#undef ntohs#undef ntohl#undef fdt_set_hdr_#undef CLEARMASK#undef SETMASK#undef BIGFREQ#undef MAIN_QSORT_STACK_SIZE#undef MAIN_QSORT_DEPTH_THRESH#undef MAIN_QSORT_SMALL_THRESH#undef mnextswap#undef mnextsize#undef mmin#undef mpop#undef mpush#undef mvswap#undef mswap#undef UNALIGNED_BH#undef WORD_BH#undef ISSET_BH#undef CLEAR_BH#undef SET_BH#undef FALLBACK_QSORT_STACK_SIZE#undef FALLBACK_QSORT_SMALL_THRESH#undef fvswap#undef fswap#undef fpop#undef fpush#undef fmin#undef BZ_ITAH#undef BZ_ITUR#undef BZ_ITER#undef DO_CRC#undef F#undef K#undef NO_ERRNO_H#undef STDC#undef NO_GZIP#undef POSTINC#undef ASMINF#undef OFF#undef yyless#undef YYSTACK_RELOCATE#undef __STD_TYPE#undef __GLIBC_USE_IEC_60559_TYPES_EXT#undef __GLIBC_USE_IEC_60559_FUNCS_EXT#undef __GLIBC_USE_IEC_60559_BFP_EXT#undef __GLIBC_USE_LIB_EXT2#undef __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION#undef FOPEN_MAX#undef fread_unlocked#undef P_PGID#undef P_PID#undef P_ALL#undef __FD_ELT#undef alloca#undef static_assert#undef EXTRACT_BYTE#undef CPU_TO_FDT16#undef CPU_TO_FDT32#undef CPU_TO_FDT64#undef PTHREAD_THREADS_MAX#undef __undef_ARG_MAX#undef ARG_MAX#undef __undef_OPEN_MAX#undef OPEN_MAX#undef __undef_LINK_MAX#undef LINK_MAX#undef __undef_NR_OPEN#undef NR_OPEN#undef THIRTY_TWO_BIT#undef SIXTY_FOUR_BIT#undef BN_LLONG#undef OPENSSL_EXPORT_VAR_AS_FUNCTION#undef OPENSSL_UNISTD#undef I386_ONLY#undef OPENSSL_API_COMPAT#undef DECLARE_DEPRECATED#undef _GCC_NEXT_LIMITS_H#undef ULONG_LONG_MAX#undef LONG_LONG_MAX#undef LONG_LONG_MIN#undef ULLONG_MAX#undef LLONG_MAX#undef LLONG_MIN#undef ULONG_MAX#undef LONG_MAX#undef LONG_MIN#undef UINT_MAX#undef INT_MAX#undef INT_MIN#undef USHRT_MAX#undef SHRT_MAX#undef SHRT_MIN#undef CHAR_MAX#undef CHAR_MIN#undef UCHAR_MAX#undef SCHAR_MAX#undef SCHAR_MIN#undef CHAR_BIT#undef ossl_bio__printf__#undef ossl_bio__attr__#undef MKIMAGE_DEBUG#undef DUMPIMAGE_DEBUG#undef RE_DUP_MAX#undef __SIGRTMAX#undef SIGSYS#undef SIGPOLL#undef SIGURG#undef SIGTSTP#undef SIGSTOP#undef SIGCONT#undef SIGCHLD#undef SIGUSR2#undef SIGUSR1#undef SIGBUS#undef __ctx#pragma GCC visibility push(hidden)#pragma GCC visibility pop#pragma pack(1)#pragma pack()#pragma#include <generated/generic-asm-offsets.h>#include <efi.h>#include <pci_ids.h>#include <pci.h>#include <linux/libfdt.h>#include <linux/list.h>#include <membuff.h>#include <fdtdec.h>#include <bootstage.h>#include <net.h>#include <u-boot/crc.h>#include <vsprintf.h>#include <uuid.h>#include <display_options.h>#include <init.h>#include <asm/global_data.h>#include <asm/u-boot.h>#include <log.h>#include <image.h>#include <flash.h>#include <part.h>#include <linux/kernel.h>#include <stdio.h>#include <stdarg.h>#include <asm/ptrace.h>#include <linux/stringify.h>#include <linux/string.h>#include <linux/printk.h>#include <linux/types.h>#include <linux/delay.h>#include <linux/bug.h>#include <linux/bitops.h>#include <asm-offsets.h>#include <time.h>#include <errno.h>#include <config.h>#include <dm/of.h>#include <linux/stddef.h>#include <linux/errno.h>#include <linux/compat.h>#include <linux/compiler.h>#include <linux/err.h>#include <malloc.h>#include <linker_lists.h>#include <dm/uclass-id.h>#include <dm/ofnode.h>#include <dm/uclass.h>#include <dm/fdtaddr.h>#include <dm/platdata.h>#include <dm/read.h>#include <dm/device.h>#include <asm/types.h>#include <iotrace.h>#include <asm-generic/io.h>#include <stdbool.h>#include <sysreset.h>#include <dm/root.h>#include <asm/state.h>#include <asm/setjmp.h>#include <asm/io.h>#include <os.h>#include <dm.h>#include <common.h>#include <bits/long-double.h>#include <bits/wordsize.h>#include <gnu/stubs.h>#include <sys/cdefs.h>#include <stdc-predef.h>#include <stddef.h>#include <linux/falloc.h>#include <bits/types/struct_iovec.h>#include <bits/fcntl-linux.h>#include <bits/stat.h>#include <bits/types/struct_timespec.h>#include <bits/fcntl.h>#include <bits/types.h>#include <features.h>#include <bits/types/struct_timeval.h>#include <bits/types/time_t.h>#include <bits/types/sigset_t.h>#include <bits/select.h>#include <bits/pthreadtypes.h>#include <sys/select.h>#include <endian.h>#include <bits/stdint-intn.h>#include <bits/types/timer_t.h>#include <bits/types/clockid_t.h>#include <bits/types/clock_t.h>#include <asm-generic/sockios.h>#include <asm/sockios.h>#include <asm-generic/socket.h>#include <asm/socket.h>#include <bits/sockaddr.h>#include <bits/socket_type.h>#include <sys/types.h>#include <bits/types/struct_osockaddr.h>#include <bits/socket.h>#include <sys/socket.h>#include <bits/uintn-identity.h>#include <bits/byteswap.h>#include <bits/in.h>#include <bits/stdint-uintn.h>#include <netinet/in.h>#include <stdint.h>#include <bits/stdio.h>#include <bits/sys_errlist.h>#include <bits/stdio_lim.h>#include <bits/types/cookie_io_functions_t.h>#include <bits/types/struct_FILE.h>#include <bits/types/FILE.h>#include <bits/types/__FILE.h>#include <bits/types/__fpos64_t.h>#include <bits/types/__fpos_t.h>#include <bits/libc-header-start.h>#include <bits/stdlib-float.h>#include <bits/stdlib-bsearch.h>#include <alloca.h>#include <bits/types/locale_t.h>#include <bits/floatn.h>#include <bits/waitstatus.h>#include <bits/waitflags.h>#include <strings.h>#include <asm-generic/ioctl.h>#include <asm/ioctl.h>#include <linux/ioctl.h>#include <asm-generic/ioctls.h>#include <asm/ioctls.h>#include <sys/ttydefaults.h>#include <bits/ioctl-types.h>#include <bits/ioctls.h>#include <bits/getopt_posix.h>#include <bits/confname.h>#include <bits/environments.h>#include <bits/posix_opt.h>#include <asm-generic/bitsperlong.h>#include <asm/bitsperlong.h>#include <asm-generic/int-ll64.h>#include <asm-generic/types.h>#include <asm-generic/posix_types.h>#include <asm/posix_types_64.h>#include <asm/posix_types.h>#include <linux/posix_types.h>#include <linux/if_packet.h>#include <linux/if_ether.h>#include <arpa/inet.h>#include <unistd.h>#include <sys/ioctl.h>#include <string.h>#include <stdlib.h>#include <netinet/udp.h>#include <netinet/ip.h>#include <net/if.h>#include <fcntl.h>#include <asm/eth-raw-os.h>#include <bits/local_lim.h>#include <bits/posix1_lim.h>#include <bits/dirent.h>#include <bits/types/__sigset_t.h>#include <bits/setjmp.h>#include <bits/termios.h>#include <bits/timex.h>#include <bits/types/struct_itimerspec.h>#include <bits/types/struct_tm.h>#include <bits/time.h>#include <bits/getopt_core.h>#include <bits/mman-shared.h>#include <bits/mman-linux.h>#include <bits/mman.h>#include <bits/statx.h>#include <asm-generic/sections.h>#include <linux/poison.h>#include <rtc_def.h>#include <asm/sections.h>#include <asm/getopt.h>#include <sys/time.h>#include <sys/stat.h>#include <sys/mman.h>#include <termios.h>#include <setjmp.h>#include <getopt.h>#include <dirent.h>#include "input-event-codes.h"#include "SDL_platform.h"#include <bits/wchar.h>#include "close_code.h"#include "begin_code.h"#include <iconv.h>#include <ctype.h>#include <inttypes.h>#include "SDL_config.h"#include "SDL_stdinc.h"#include "SDL_error.h"#include "SDL_mutex.h"#include "SDL_rwops.h"#include "SDL_thread.h"#include "SDL_endian.h"#include "SDL_keysym.h"#include "SDL_video.h"#include "SDL_quit.h"#include "SDL_joystick.h"#include "SDL_mouse.h"#include "SDL_keyboard.h"#include "SDL_active.h"#include "SDL_version.h"#include "SDL_timer.h"#include "SDL_loadso.h"#include "SDL_events.h"#include "SDL_cpuinfo.h"#include "SDL_cdrom.h"#include "SDL_audio.h"#include "SDL_main.h"#include <SDL.h>#include <linux/input.h>#include <cli.h>#include <command.h>#include <asm-generic/gpio.h>#include <dm/of_extra.h>#include <asm/gpio.h>#include <cros_ec_message.h>#include <ec_commands.h>#include <asm/u-boot-sandbox.h>#include <asm/test.h>#include <led.h>#include <cros_ec.h>#include <android_ab.h>#include "avb_sysdeps.h"#include "avb_descriptor.h"#include "avb_crypto.h"#include "avb_vbmeta_image.h"#include "avb_ops.h"#include "avb_version.h"#include "avb_util.h"#include "avb_slot_verify.h"#include "avb_property_descriptor.h"#include "avb_kernel_cmdline_descriptor.h"#include "avb_hashtree_descriptor.h"#include "avb_hash_descriptor.h"#include "avb_footer.h"#include "avb_chain_partition_descriptor.h"#include <linux/sizes.h>#include <mmc.h>#include <mapmem.h>#include <../lib/libavb/libavb.h>#include <avb_verify.h>#include <console.h>#include <axi.h>#include <dm/uclass-internal.h>#include <dm/lists.h>#include <dm/device-internal.h>#include <blk.h>#include <asm/byteorder.h>#include <bmp_layout.h>#include <lcd_console.h>#include <stdio_dev.h>#include <video.h>#include <splash.h>#include <lcd.h>#include <bootcount.h>#include <linux/linkage.h>#include <charset.h>#include <efi_api.h>#include <part_efi.h>#include <efi_loader.h>#include <asm/cache.h>#include <memalign.h>#include <linux/libfdt_env.h>#include <efi_selftest.h>#include <search.h>#include <env_flags.h>#include <env_callback.h>#include <env_attr.h>#include "compiler.h"#include <linux/kconfig.h>#include <linux/log2.h>#include <div64.h>#include <mtd/mtd-abi.h>#include <linux/mtd/bbm.h>#include <linux/mtd/flashchip.h>#include <linux/mtd/mtd.h>#include <linux/mtd/rawnand.h>#include <u-boot/zlib.h>#include <linux/ctype.h>#include <nand.h>#include <environment.h>#include <bootm.h>#include <lmb.h>#include <fs.h>#include <btrfs.h>#include <compiler.h>#include <cbfs.h>#include "config_data_size.h"#include "config_data_gz.h"#include <cpu.h>#include <linux/stat.h>#include <cramfs/cramfs_fs.h>#include <jffs2/load_kernel.h>#include <jffs2/jffs2.h>#include <bcd.h>#include <i2c.h>#include <rtc.h>#include <dm-demo.h>#include <dm/util.h>#include <ethsw.h>#include <ext_common.h>#include <linux/unaligned/generic.h>#include <linux/unaligned/be_byteshift.h>#include <linux/unaligned/le_byteshift.h>#include <asm-generic/unaligned.h>#include <asm/unaligned.h>#include <linux/usb/ch9.h>#include <usb_defs.h>#include <usb.h>#include <ext4fs.h>#include <linux/bitmap.h>#include <linux/usb/gadget.h>#include <linux/usb/composite.h>#include <watchdog.h>#include <fastboot.h>#include <g_dnl.h>#include <libata.h>#include <fat.h>#include <ata.h>#include <s_record.h>#include <fdt_support.h>#include <linux/const.h>#include <exports.h>#include <hash.h>#include <sandboxblockdev.h>#include <iomux.h>#include <edid.h>#include <bootretry.h>#include <ide.h>#include "license_data_size.h"#include "license_data_gz.h"#include <_exports.h>#include <xyzModem.h>#include "../../lib/lzma/Types.h"#include <lzma/LzmaTypes.h>#include "../../lib/lzma/LzmaTools.h"#include <lzma/LzmaTools.h>#include <u-boot/md5.h>#include <phy.h>#include <miiphy.h>#include <linux/mii.h>#include <phy_interface.h>#include <linux/mdio.h>#include <linux/ethtool.h>#include <hexdump.h>#include <nvme.h>#include <video_osd.h>#include <asm/processor.h>#include <dm/pinctrl.h>#include <power/power_chrg.h>#include <power/pmic.h>#include "cli.h"#include "menu.h"#include <qfw.h>#include <power/regulator.h>#include <remoteproc.h>#include <sata.h>#include <ahci.h>#include <handoff.h>#include <asm/spl.h>#include <binman_sym.h>#include <spl.h>#include <scsi.h>#include <slre.h>#include <linux/mtd/cfi.h>#include <linux/mtd/spi-nor.h>#include <spi_flash.h>#include <spi.h>#include <sound.h>#include "tpm-user-utils.h"#include <tpm-common.h>#include <tpm-v1.h>#include <tpm-v2.h>#include "generated/timestamp_autogenerated.h"#include "generated/version_autogenerated.h"#include <timestamp.h>#include <version.h>#include <virtio.h>#include <virtio_types.h>#include <w1-eeprom.h>#include <w1.h>#include <bzlib.h>#include <android_bootloader_message.h>#include <u-boot/sha256.h>#include <post.h>#include <menu.h>#include <autoboot.h>#include <tee/optee_ta_avb.h>#include <tee.h>#include <bloblist.h>#include <trace.h>#include <timer.h>#include <status_led.h>#include <relocate.h>#include <initcall.h>#include <wdt.h>#include <serial.h>#include <onenand_uboot.h>#include <of_live.h>#include <api.h>#include <tee/optee.h>#include <vxworks.h>#include <cli_hush.h>#include <debug_uart.h>#include <u-boot/sha1.h>#include <hw_sha.h>#include <u-boot/rsa-checksum.h>#include <android_image.h>#include <u-boot/rsa.h>#include <fpga.h>#include "Types.h"#include "../../lib/lzma/LzmaDec.h"#include <lzma/LzmaDec.h>#include <linux/lzo.h>#include <xilinx.h>#include <ubifs_uboot.h>#include "part_amiga.h"#include "part_dos.h"#include "part_iso.h"#include "part_mac.h"#include <adc.h>#include <sandbox-adc.h>#include <asm/axi.h>#include <board.h>#include "sandbox.h"#include <cache.h>#include <clk.h>#include "clk.h"#include <linux/clk-provider.h>#include <clk-uclass.h>#include <dt-structs.h>#include <asm/clk.h>#include <sandbox-clk.h>#include <power-domain.h>#include <dm/of_access.h>#include <linux/ioport.h>#include <dm/of_addr.h>#include <regmap.h>#include <syscon.h>#include <u-boot/rsa-mod-exp.h>#include <dma.h>#include <dma-uclass.h>#include <fb_nand.h>#include <fb_mmc.h>#include <fastboot-internal.h>#include <net/fastboot.h>#include <dt-bindings/gpio/gpio.h>#include <spmi/spmi.h>#include <hwspinlock.h>#include <power/tps65090.h>#include <key_matrix.h>#include <keyboard.h>#include <input.h>#include <i8042.h>#include <mailbox.h>#include <mailbox-uclass.h>#include <asm/mbox.h>#include <asm/sdl.h>#include <i2c_eeprom.h>#include <misc.h>#include <pwrseq.h>#include "mmc_private.h"#include <linux/math64.h>#include <mtd.h>#include <linux/mtd/partitions.h>#include "debug.h"#include <mtd/ubi-user.h>#include "ubi-media.h"#include <linux/mtd/ubi.h>#include <ubi_uboot.h>#include "../drivers/mtd/ubi/ubi.h"#include <linux/rbtree.h>#include <linux/crc32.h>#include "mtdcore.h"#include <asm/spi.h>#include "sf_internal.h"#include <spi-mem.h>#include "../../scripts/dtc/libfdt/libfdt.h"#include <asm/eth.h>#include "nvme.h"#include <pch.h>#include "pci_internal.h"#include "../drivers/bios_emulator/include/x86emu/regs.h"#include <linux/screen_info.h>#include <video_fb.h>#include <vbe.h>#include <pci_rom.h>#include <bios_emul.h>#include <pci_ep.h>#include <generic-phy.h>#include <power-domain-uclass.h>#include <asm/power-domain.h>#include <power/act8846_pmic.h>#include <power/sandbox_pmic.h>#include <power/max77686_pmic.h>#include <fsl_pmic.h>#include <power/pfuze3000_pmic.h>#include <power/pfuze100_pmic.h>#include <power/rk8xx_pmic.h>#include <power/s2mps11.h>#include <power/s5m8767.h>#include "regulator_common.h"#include <pwm.h>#include <ram.h>#include <elf.h>#include <reset.h>#include <reset-uclass.h>#include <asm/reset.h>#include <asm/rtc.h>#include <smem.h>#include <audio_codec.h>#include <i2s.h>#include <sandboxtee.h>#include "tpm_internal.h"#include <linux/crc8.h>#include <linux/usb/otg.h>#include <backlight.h>#include <video_font_data.h>#include <video_font.h>#include <video_console.h>#include "stb_truetype.h"#include <panel.h>#include "sandbox_osd.h"#include <display.h>#include <test/test.h>#include <dm/test.h>#include "virtio_blk.h"#include <virtio_ring.h>#include "virtio_mmio.h"#include <linux/io.h>#include "virtio_net.h"#include "virtio_pci.h"#include <env_default.h>#include "btrfs_tree.h"#include <u-boot/variadic-macro.h>#include "ctree.h"#include "conv-funcs.h"#include <linux/time.h>#include "btrfs.h"#include <linux/zstd.h>#include <fs_internal.h>#include "crc16.h"#include "ext4_common.h"#include "ext4_journal.h"#include "fat.c"#include <sandboxfs.h>#include <generated/autoconf.h>#include <config_distro_bootcmd.h>#include <config_fallbacks.h>#include <asm/config.h>#include <configs/sandbox.h>#include <config_uncmd_spl.h>#include <config_defaults.h>#include <linux/typecheck.h>#include <linux/compiler-gcc.h>#include <asm-generic/bitops/__ffs.h>#include <asm-generic/bitops/fls64.h>#include <asm-generic/bitops/__fls.h>#include <asm-generic/bitops/fls.h>#include <asm/system.h>#include <asm/bitops.h>#include <linux/build_bug.h>#include <linux/linux_string.h>#include <asm/string.h>#include <asm/linkage.h>#include <linux/byteorder/generic.h>#include <linux/byteorder/swab.h>#include <linux/byteorder/little_endian.h>#include <asm-generic/u-boot.h>#include "fdt.h"#include "libfdt_env.h"#include <asm-generic/global_data.h>#include <linux/kbuild.h>#include <linux/bitrev.h>#include "bzlib.h"#include "bzlib_private.h"#include <capitalization.h>#include "u-boot/zlib.h"#include <linux/crc7.h>#include "linux/crc8.h"#include "dhry.h"#include <efi_driver.h>#include <asm-generic/pe.h>#include <pe.h>#include <linux/list_sort.h>#include <smbios.h>#include <cp437.h>#include <cp1250.h>#include <boot_fit.h>#include "zlib/zutil.h"#include "avb_sha.h"#include "avb_cmdline.h"#include "avb_rsa.h"#include "../scripts/dtc/libfdt/fdt.h"#include <fdt.h>#include "libfdt_internal.h"#include <libfdt.h>#include "../../scripts/dtc/libfdt/fdt.c"#include "../../scripts/dtc/libfdt/fdt_addresses.c"#include "../../scripts/dtc/libfdt/fdt_empty_tree.c"#include "../../scripts/dtc/libfdt/fdt_overlay.c"#include "../../scripts/dtc/libfdt/libfdt_internal.h"#include "../../scripts/dtc/libfdt/fdt_rw.c"#include "../../scripts/dtc/libfdt/fdt_strerror.c"#include "../../scripts/dtc/libfdt/fdt_sw.c"#include "../../scripts/dtc/libfdt/fdt_wip.c"#include "lz4.c"#include "LzmaDec.h"#include "LzmaTools.h"#include "lzodefs.h"#include "membuff.h"#include <physmem.h>#include <linux/rbtree_augmented.h>#include <rc4.h>#include <tables_csum.h>#include "tpm-utils.h"#include <linux/xxhash.h>#include "zlib.h"#include "zutil.h"#include "deflate.h"#include "adler32.c"#include "zutil.c"#include "inflate.c"#include "inftrees.c"#include "inffast.c"#include "inffixed.h"#include "inffast.h"#include "inflate.h"#include "inftrees.h"#include "trees.c"#include "deflate.c"#include "mem.h"#include "error_private.h"#include "zstd_internal.h"#include "huf.h"#include "fse.h"#include "bitstream.h"#include "arp.h"#include "bootp.h"#include <net/tftp.h>#include "cdp.h"#include "dns.h"#include "eth_internal.h"#include "net_rand.h"#include "sntp.h"#include "rarp.h"#include "ping.h"#include "nfs.h"#include "link_local.h"#include "dtc.h"#include "dtc-parser.tab.h"#include "srcpos.h"#include <gnu/stubs-64.h>#include <bits/typesizes.h>#include <bits/types/__mbstate_t.h>#include <bits/stdio2.h>#include <bits/types/__locale_t.h>#include <bits/strings_fortified.h>#include <bits/string_fortified.h>#include <bits/floatn-common.h>#include <bits/endian.h>#include <bits/select2.h>#include <bits/pthreadtypes-arch.h>#include <bits/thread-shared-types.h>#include <bits/stdlib.h>#include <asm-generic/errno-base.h>#include <asm-generic/errno.h>#include <asm/errno.h>#include <bits/errno.h>#include <bits/unistd.h>#include <bits/getopt_ext.h>#include "util.h"#include <libfdt_env.h>#include <assert.h>#include <linux/limits.h>#include <bits/types/error_t.h>#include <bits/fcntl2.h>#include "version_gen.h"#include "libfdt.h"#include <test/ut.h>#include <test/suites.h>#include <test/compression.h>#include "../../drivers/board/sandbox.h"#include "../../drivers/video/sandbox_osd.h"#include <test/env.h>#include <test/lib.h>#include <test/overlay.h>#include <byteswap.h>#include "../include/fdt_support.h"#include "../include/linux/libfdt.h"#include "fdt_host.h"#include "os_support.h"#include <asm/swab.h>#include <linux/swab.h>#include <openssl/opensslv.h>#include <bits/uio_lim.h>#include <bits/xopen_lim.h>#include <bits/posix2_lim.h>#include "syslimits.h"#include <openssl/opensslconf.h>#include <openssl/e_os2.h>#include <limits.h>#include <openssl/stack.h>#include <bits/types/struct_sched_param.h>#include <bits/cpu-set.h>#include <bits/sched.h>#include <sched.h>#include <pthread.h>#include <openssl/symhacks.h>#include <openssl/cryptoerr.h>#include <openssl/ossl_typ.h>#include <openssl/safestack.h>#include <openssl/bioerr.h>#include <openssl/crypto.h>#include <openssl/bnerr.h>#include <openssl/bn.h>#include <openssl/asn1err.h>#include <openssl/bio.h>#include <openssl/objectserr.h>#include <openssl/asn1.h>#include <openssl/obj_mac.h>#include <openssl/objects.h>#include <openssl/evperr.h>#include <openssl/evp.h>#include "aisimage.h"#include "imagetool.h"#include "mkimage.h"#include <../common/bootm.c>#include <../common/hash.c>#include <../common/image-fit.c>#include <../common/image-sig.c>#include <../common/image.c>#include "dumpimage.h"#include "fit_common.h"#include "gpheader.h"#include <bits/auxv.h>#include "linux/kernel.h"#include "imx8image.h"#include "imximage.h"#include "kwbimage.h"#include <../lib/crc16.c>#include <bits/socket2.h>#include <../lib/crc32.c>#include <../lib/crc8.c>#include <../lib/fdtdec.c>#include "fdt_support.h"#include <../lib/fdtdec_common.c>#include <../lib/libfdt/fdt_region.c>#include "../scripts/dtc/libfdt/libfdt_env.h"#include <../lib/libfdt/fdt_ro.c>#include <../lib/md5.c>#include <../lib/rc4.c>#include <../lib/rsa/rsa-checksum.c>#include <../lib/rsa/rsa-mod-exp.c>#include <openssl/rsaerr.h>#include <openssl/buffererr.h>#include <openssl/ecerr.h>#include <openssl/dherr.h>#include <openssl/dsaerr.h>#include <openssl/dh.h>#include <openssl/lhash.h>#include <openssl/pkcs7err.h>#include <openssl/pkcs7.h>#include <openssl/x509_vfy.h>#include <openssl/x509err.h>#include <openssl/sha.h>#include <openssl/dsa.h>#include <openssl/rsa.h>#include <openssl/ec.h>#include <openssl/buffer.h>#include <openssl/pemerr.h>#include <openssl/x509.h>#include <openssl/comperr.h>#include <openssl/asyncerr.h>#include <openssl/cterr.h>#include <openssl/ssl.h>#include <openssl/comp.h>#include <openssl/srtp.h>#include <openssl/dtls1.h>#include <openssl/tls1.h>#include <openssl/ssl3.h>#include <openssl/ssl2.h>#include <openssl/sslerr.h>#include <openssl/ct.h>#include <openssl/async.h>#include <openssl/hmac.h>#include <openssl/pem.h>#include <openssl/randerr.h>#include <openssl/uierr.h>#include <openssl/engineerr.h>#include <openssl/err.h>#include <openssl/ui.h>#include <openssl/rand.h>#include <openssl/engine.h>#include <../lib/rsa/rsa-sign.c>#include <../lib/rsa/rsa-verify.c>#include <../lib/sha1.c>#include <../lib/sha256.c>#include "../scripts/dtc/libfdt/fdt.c"#include "../scripts/dtc/libfdt/fdt_addresses.c"#include "../scripts/dtc/libfdt/fdt_empty_tree.c"#include "../scripts/dtc/libfdt/fdt_overlay.c"#include "../scripts/dtc/libfdt/fdt_strerror.c"#include "../scripts/dtc/libfdt/fdt_sw.c"#include "../scripts/dtc/libfdt/fdt_wip.c"#include <libgen.h>#include "mtk_image.h"#include "pbl_crc32.h"#include "mxsimage.h"#include "omapimage.h"#include "pblimage.h"#include <bits/signum-generic.h>#include <bits/siginfo-arch.h>#include <bits/types/__sigval_t.h>#include <bits/siginfo-consts-arch.h>#include <bits/types/stack_t.h>#include <bits/sigthread.h>#include <bits/types/struct_sigstack.h>#include <bits/ss_flags.h>#include <bits/sigstack.h>#include <sys/ucontext.h>#include <bits/sigcontext.h>#include <bits/sigaction.h>#include <bits/sigevent-consts.h>#include <bits/types/sigevent_t.h>#include <bits/types/sigval_t.h>#include <bits/siginfo-consts.h>#include <bits/types/siginfo_t.h>#include <bits/types/sig_atomic_t.h>#include <bits/signum.h>#include <asm-generic/param.h>#include <asm/param.h>#include <linux/param.h>#include <bits/param.h>#include <signal.h>#include <sys/param.h>#include <regex.h>#include "rkcommon.h"#include "ublimage.h"#include "zynqmpimage.h"#include_next <stdint.h>#include_next <limits.h>#define GD_NEW_GD 168#define GD_START_ADDR_SP 152#define GD_RELOC_OFF 160#define GD_RELOCADDR 120#define GD_MALLOC_BASE 296#define GD_BD 0#define GD_SIZE 512#define GENERATED_BD_INFO_SIZE 128#define GENERATED_GBL_DATA_SIZE 512#define __GENERIC_ASM_OFFSETS_H__#define BLK_REV_SIZE 8#define BLK_PRD_SIZE 20#define BLK_VEN_SIZE 40#define blk_get_ops(dev) ((struct blk_ops *)(dev)->driver->ops)#define PAD_TO_BLOCKSIZE(size,blk_desc) (PAD_SIZE(size, blk_desc->blksz))#define BLOCK_CNT(size,blk_desc) (PAD_COUNT(size, blk_desc->blksz))#define LBAFU "%" LBAFlength "u"#define LBAF "%" LBAFlength "x"#define LBAFlength "l"#define BLK_H#define ___config_enabled(__ignored,val,__VA_ARGS__...) val#define __config_enabled(arg1_or_junk) ___config_enabled(arg1_or_junk 1, 0)#define _config_enabled(value) __config_enabled(__ARG_PLACEHOLDER_ ## value)#define config_enabled(cfg) _config_enabled(cfg)#define CONFIG_IS_ENABLED(option) (config_enabled(CONFIG_VAL(option)) || config_enabled(CONFIG_VAL(option ## _MODULE)))#define ____config_val(__ignored,val,__VA_ARGS__...) val#define ___config_val(arg1_or_junk,cfg) ____config_val(arg1_or_junk CONFIG_SPL_ ## cfg, CONFIG_ ## cfg)#define __config_val(x,cfg) ___config_val(__ARG_PLACEHOLDER_ ## x, cfg)#define _config_val(x,cfg) __config_val(x, cfg)#define config_val(cfg) _config_val(_IS_SPL, cfg)#define CONFIG_VAL(option) config_val(option)#define __ARG_PLACEHOLDER_1 0,#define CONFIG_BLK 1#define CONFIG_BLOCK_CACHE 1#define MAX_PCI_REGIONS 7#define U_BOOT_PCI_DEVICE(__name,__match) ll_entry_declare(struct pci_driver_entry, __name, pci_driver_entry) = { .driver = llsym(struct driver, __name, driver), .match = __match, }#define PCI_VDEVICE(vend,dev) .vendor = PCI_VENDOR_ID_ ## vend, .device = (dev), .subvendor = PCI_ANY_ID, .subdevice = PCI_ANY_ID, 0, 0#define PCI_DEVICE_CLASS(dev_class,dev_class_mask) .class = (dev_class), .class_mask = (dev_class_mask), .vendor = PCI_ANY_ID, .device = PCI_ANY_ID, .subvendor = PCI_ANY_ID, .subdevice = PCI_ANY_ID#define PCI_DEVICE_SUB(vend,dev,subvend,subdev) .vendor = (vend), .device = (dev), .subvendor = (subvend), .subdevice = (subdev)#define PCI_DEVICE(vend,dev) .vendor = (vend), .device = (dev), .subvendor = PCI_ANY_ID, .subdevice = PCI_ANY_ID#define pci_get_emul_ops(dev) ((struct dm_pci_emul_ops *)(dev)->driver->ops)#define dm_pci_io_to_virt(dev,addr,len,map_flags) dm_pci_bus_to_virt((dev), (addr), PCI_REGION_IO, (len), (map_flags))#define dm_pci_virt_to_io(dev,addr) dm_pci_virt_to_bus((dev), (addr), PCI_REGION_IO)#define dm_pci_mem_to_virt(dev,addr,len,map_flags) dm_pci_bus_to_virt((dev), (addr), PCI_REGION_MEM, (len), (map_flags))#define dm_pci_virt_to_mem(dev,addr) dm_pci_virt_to_bus((dev), (addr), PCI_REGION_MEM)#define dm_pci_io_to_phys(dev,addr) dm_pci_bus_to_phys((dev), (addr), PCI_REGION_IO)#define dm_pci_phys_to_io(dev,addr) dm_pci_phys_to_bus((dev), (addr), PCI_REGION_IO)#define dm_pci_mem_to_phys(dev,addr) dm_pci_bus_to_phys((dev), (addr), PCI_REGION_MEM)#define dm_pci_phys_to_mem(dev,addr) dm_pci_phys_to_bus((dev), (addr), PCI_REGION_MEM)#define dm_pci_bus_to_virt(dev,addr,flags,len,map_flags) map_physmem(dm_pci_bus_to_phys(dev, (addr), (flags)), (len), (map_flags))#define dm_pci_virt_to_bus(dev,addr,flags) dm_pci_phys_to_bus(dev, (virt_to_phys(addr)), (flags))#define pci_get_ops(dev) ((struct dm_pci_ops *)(dev)->driver->ops)#define pci_io_to_virt(dev,addr,len,map_flags) pci_bus_to_virt((dev), (addr), PCI_REGION_IO, (len), (map_flags))#define pci_virt_to_io(dev,addr) pci_virt_to_bus((dev), (addr), PCI_REGION_IO)#define pci_mem_to_virt(dev,addr,len,map_flags) pci_bus_to_virt((dev), (addr), PCI_REGION_MEM, (len), (map_flags))#define pci_virt_to_mem(dev,addr) pci_virt_to_bus((dev), (addr), PCI_REGION_MEM)#define pci_io_to_phys(dev,addr) pci_bus_to_phys((dev), (addr), PCI_REGION_IO)#define pci_phys_to_io(dev,addr) pci_phys_to_bus((dev), (addr), PCI_REGION_IO)#define pci_mem_to_phys(dev,addr) pci_bus_to_phys((dev), (addr), PCI_REGION_MEM)#define pci_phys_to_mem(dev,addr) pci_phys_to_bus((dev), (addr), PCI_REGION_MEM)#define pci_bus_to_virt(dev,addr,flags,len,map_flags) map_physmem(pci_hose_bus_to_phys(pci_bus_to_hose(PCI_BUS(dev)), (addr), (flags)), (len), (map_flags))#define pci_virt_to_bus(dev,addr,flags) pci_hose_phys_to_bus(pci_bus_to_hose(PCI_BUS(dev)), (virt_to_phys(addr)), (flags))#define pci_bus_to_phys(dev,addr,flags) pci_hose_bus_to_phys(pci_bus_to_hose(PCI_BUS(dev)), (addr), (flags))#define pci_phys_to_bus(dev,addr,flags) pci_hose_phys_to_bus(pci_bus_to_hose(PCI_BUS(dev)), (addr), (flags))#define INDIRECT_TYPE_NO_PCIE_LINK 1#define PCI_ANY_ID (~0)#define PCI_VENDEV(v,d) (((v) << 16) | (d))#define PCI_BDF(b,d,f) ((b) << 16 | PCI_DEVFN(d, f))#define PCI_ADD_BUS(bus,devfn) (((bus) << 16) | (devfn))#define PCI_MASK_BUS(bdf) ((bdf) & 0xffff)#define PCI_DEVFN(d,f) ((d) << 11 | (f) << 8)#define PCI_FUNC(d) (((d) >> 8) & 0x7)#define PCI_DEV(d) (((d) >> 11) & 0x1f)#define PCI_BUS(d) (((d) >> 16) & 0xff)#define PCI_REGION_RO 0x00000200#define PCI_REGION_SYS_MEMORY 0x00000100#define PCI_REGION_PREFETCH 0x00000008#define PCI_REGION_TYPE 0x00000001#define PCI_REGION_IO 0x00000001#define PCI_REGION_MEM 0x00000000#define PCI_EXP_DEVCTL_BCR_FLR 0x8000#define PCI_EXP_DEVCTL 8#define PCI_EXP_DEVCAP_FLR 0x10000000#define PCI_EXP_DEVCAP 4#define PCI_EA_FIELD_MASK 0xfffffffc#define PCI_EA_IS_64 0x00000002#define PCI_EA_BEI 0x000000f0#define PCI_EA_ES 0x00000007#define PCI_EA_FIRST_ENT 4#define PCI_EA_NUM_ENT_MASK 0x3f#define PCI_EA_NUM_ENT 2#define PCI_EXT_CAP_ID_MAX PCI_EXT_CAP_ID_PTM#define PCI_EXT_CAP_ID_PTM 0x1F#define PCI_EXT_CAP_ID_L1SS 0x1E#define PCI_EXT_CAP_ID_DPC 0x1D#define PCI_EXT_CAP_ID_PASID 0x1B#define PCI_EXT_CAP_ID_PMUX 0x1A#define PCI_EXT_CAP_ID_SECPCI 0x19#define PCI_EXT_CAP_ID_LTR 0x18#define PCI_EXT_CAP_ID_TPH 0x17#define PCI_EXT_CAP_ID_DPA 0x16#define PCI_EXT_CAP_ID_REBAR 0x15#define PCI_EXT_CAP_ID_AMD_XXX 0x14#define PCI_EXT_CAP_ID_PRI 0x13#define PCI_EXT_CAP_ID_MCAST 0x12#define PCI_EXT_CAP_ID_MRIOV 0x11#define PCI_EXT_CAP_ID_SRIOV 0x10#define PCI_EXT_CAP_ID_ATS 0x0F#define PCI_EXT_CAP_ID_ARI 0x0E#define PCI_EXT_CAP_ID_ACS 0x0D#define PCI_EXT_CAP_ID_CAC 0x0C#define PCI_EXT_CAP_ID_VNDR 0x0B#define PCI_EXT_CAP_ID_RCRB 0x0A#define PCI_EXT_CAP_ID_VC9 0x09#define PCI_EXT_CAP_ID_MFVC 0x08#define PCI_EXT_CAP_ID_RCEC 0x07#define PCI_EXT_CAP_ID_RCILC 0x06#define PCI_EXT_CAP_ID_RCLD 0x05#define PCI_EXT_CAP_ID_PWR 0x04#define PCI_EXT_CAP_ID_DSN 0x03#define PCI_EXT_CAP_ID_VC 0x02#define PCI_EXT_CAP_ID_ERR 0x01#define PCI_EXT_CAP_NEXT(header) ((header >> 20) & 0xffc)#define PCI_EXT_CAP_VER(header) ((header >> 16) & 0xf)#define PCI_EXT_CAP_ID(header) (header & 0x0000ffff)#define CAP_START_POS 0x40#define PCI_FIND_CAP_TTL 0x48#define PCI_MAX_PCI_FUNCTIONS 8#define PCI_MAX_PCI_DEVICES 32#define PCI_MSI_DATA_64 12#define PCI_MSI_DATA_32 8#define PCI_MSI_ADDRESS_HI 8#define PCI_MSI_ADDRESS_LO 4#define PCI_MSI_RFU 3#define PCI_MSI_FLAGS_MASKBIT 0x0100#define PCI_MSI_FLAGS_ENABLE 0x01#define PCI_MSI_FLAGS_QMASK 0x0e#define PCI_MSI_FLAGS_QSIZE 0x70#define PCI_MSI_FLAGS_64BIT 0x80#define PCI_MSI_FLAGS 2#define PCI_SID_CHASSIS_NR 3#define PCI_SID_ESR_FIC 0x20#define PCI_SID_ESR_NSLOTS 0x1f#define PCI_SID_ESR 2#define PCI_X_CMD_VERSION(x) (((x) >> 12) & 3)#define PCI_X_CMD_MAX_SPLIT 0x0030#define PCI_X_CMD_MAX_READ 0x0000#define PCI_X_CMD_ERO 0x0002#define PCI_X_CMD_DPERR_E 0x0001#define PCI_AGP_SIZEOF 12#define PCI_AGP_COMMAND_RATE1 0x0001#define PCI_AGP_COMMAND_RATE2 0x0002#define PCI_AGP_COMMAND_RATE4 0x0004#define PCI_AGP_COMMAND_FW 0x0010#define PCI_AGP_COMMAND_64BIT 0x0020#define PCI_AGP_COMMAND_AGP 0x0100#define PCI_AGP_COMMAND_SBA 0x0200#define PCI_AGP_COMMAND_RQ_MASK 0xff000000#define PCI_AGP_COMMAND 8#define PCI_AGP_STATUS_RATE1 0x0001#define PCI_AGP_STATUS_RATE2 0x0002#define PCI_AGP_STATUS_RATE4 0x0004#define PCI_AGP_STATUS_FW 0x0010#define PCI_AGP_STATUS_64BIT 0x0020#define PCI_AGP_STATUS_SBA 0x0200#define PCI_AGP_STATUS_RQ_MASK 0xff000000#define PCI_AGP_STATUS 4#define PCI_AGP_RFU 3#define PCI_AGP_VERSION 2#define PCI_PM_SIZEOF 8#define PCI_PM_DATA_REGISTER 7#define PCI_PM_BPCC_ENABLE 0x80#define PCI_PM_PPB_B2_B3 0x40#define PCI_PM_PPB_EXTENSIONS 6#define PCI_PM_CTRL_PME_STATUS 0x8000#define PCI_PM_CTRL_DATA_SCALE_MASK 0x6000#define PCI_PM_CTRL_DATA_SEL_MASK 0x1e00#define PCI_PM_CTRL_PME_ENABLE 0x0100#define PCI_PM_CTRL_STATE_MASK 0x0003#define PCI_PM_CTRL 4#define PCI_PM_CAP_PME 0x0800#define PCI_PM_CAP_D2 0x0400#define PCI_PM_CAP_D1 0x0200#define PCI_PM_CAP_DSI 0x0020#define PCI_PM_CAP_AUX_POWER 0x0010#define PCI_PM_CAP_PME_CLOCK 0x0008#define PCI_PM_CAP_VER_MASK 0x0007#define PCI_CAP_SIZEOF 4#define PCI_CAP_FLAGS 2#define PCI_CAP_LIST_NEXT 1#define PCI_CAP_ID_MAX PCI_CAP_ID_EA#define PCI_CAP_ID_EA 0x14#define PCI_CAP_ID_AF 0x13#define PCI_CAP_ID_SATA 0x12#define PCI_CAP_ID_MSIX 0x11#define PCI_CAP_ID_EXP 0x10#define PCI_CAP_ID_SECDEV 0x0F#define PCI_CAP_ID_AGP3 0x0E#define PCI_CAP_ID_SSVID 0x0D#define PCI_CAP_ID_SHPC 0x0C#define PCI_CAP_ID_CCRC 0x0B#define PCI_CAP_ID_DBG 0x0A#define PCI_CAP_ID_VNDR 0x09#define PCI_CAP_ID_HT 0x08#define PCI_CAP_ID_PCIX 0x07#define PCI_CAP_ID_CHSWP 0x06#define PCI_CAP_ID_MSI 0x05#define PCI_CAP_ID_SLOTID 0x04#define PCI_CAP_ID_VPD 0x03#define PCI_CAP_ID_AGP 0x02#define PCI_CAP_ID_PM 0x01#define PCI_CAP_LIST_ID 0#define PCI_CB_LEGACY_MODE_BASE 0x44#define PCI_CB_SUBSYSTEM_ID 0x42#define PCI_CB_SUBSYSTEM_VENDOR_ID 0x40#define PCI_CB_BRIDGE_CTL_POST_WRITES 0x400#define PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 0x200#define PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 0x100#define PCI_CB_BRIDGE_CTL_16BIT_INT 0x80#define PCI_CB_BRIDGE_CTL_CB_RESET 0x40#define PCI_CB_BRIDGE_CTL_MASTER_ABORT 0x20#define PCI_CB_BRIDGE_CTL_VGA 0x08#define PCI_CB_BRIDGE_CTL_ISA 0x04#define PCI_CB_BRIDGE_CTL_SERR 0x02#define PCI_CB_BRIDGE_CTL_PARITY 0x01#define PCI_CB_BRIDGE_CONTROL 0x3e#define PCI_CB_IO_RANGE_MASK ~0x03#define PCI_CB_IO_LIMIT_1_HI 0x3a#define PCI_CB_IO_LIMIT_1 0x38#define PCI_CB_IO_BASE_1_HI 0x36#define PCI_CB_IO_BASE_1 0x34#define PCI_CB_IO_LIMIT_0_HI 0x32#define PCI_CB_IO_LIMIT_0 0x30#define PCI_CB_IO_BASE_0_HI 0x2e#define PCI_CB_IO_BASE_0 0x2c#define PCI_CB_MEMORY_LIMIT_1 0x28#define PCI_CB_MEMORY_BASE_1 0x24#define PCI_CB_MEMORY_LIMIT_0 0x20#define PCI_CB_MEMORY_BASE_0 0x1c#define PCI_CB_LATENCY_TIMER 0x1b#define PCI_CB_SUBORDINATE_BUS 0x1a#define PCI_CB_CARD_BUS 0x19#define PCI_CB_PRIMARY_BUS 0x18#define PCI_CB_SEC_STATUS 0x16#define PCI_CB_CAPABILITY_LIST 0x14#define PCI_BRIDGE_CTL_FAST_BACK 0x80#define PCI_BRIDGE_CTL_BUS_RESET 0x40#define PCI_BRIDGE_CTL_MASTER_ABORT 0x20#define PCI_BRIDGE_CTL_VGA 0x08#define PCI_BRIDGE_CTL_NO_ISA 0x04#define PCI_BRIDGE_CTL_SERR 0x02#define PCI_BRIDGE_CTL_PARITY 0x01#define PCI_BRIDGE_CONTROL 0x3e#define PCI_ROM_ADDRESS1 0x38#define PCI_IO_LIMIT_UPPER16 0x32#define PCI_IO_BASE_UPPER16 0x30#define PCI_PREF_LIMIT_UPPER32 0x2c#define PCI_PREF_BASE_UPPER32 0x28#define PCI_PREF_RANGE_MASK ~0x0f#define PCI_PREF_RANGE_TYPE_64 0x01#define PCI_PREF_RANGE_TYPE_32 0x00#define PCI_PREF_RANGE_TYPE_MASK 0x0f#define PCI_PREF_MEMORY_LIMIT 0x26#define PCI_PREF_MEMORY_BASE 0x24#define PCI_MEMORY_RANGE_MASK ~0x0f#define PCI_MEMORY_RANGE_TYPE_MASK 0x0f#define PCI_MEMORY_LIMIT 0x22#define PCI_MEMORY_BASE 0x20#define PCI_SEC_STATUS 0x1e#define PCI_IO_RANGE_MASK ~0x0f#define PCI_IO_RANGE_TYPE_32 0x01#define PCI_IO_RANGE_TYPE_16 0x00#define PCI_IO_RANGE_TYPE_MASK 0x0f#define PCI_IO_LIMIT 0x1d#define PCI_IO_BASE 0x1c#define PCI_SEC_LATENCY_TIMER 0x1b#define PCI_SUBORDINATE_BUS 0x1a#define PCI_SECONDARY_BUS 0x19#define PCI_PRIMARY_BUS 0x18#define PCI_INTERRUPT_LINE_DISABLE 0xff#define PCI_MAX_LAT 0x3f#define PCI_MIN_GNT 0x3e#define PCI_INTERRUPT_PIN 0x3d#define PCI_INTERRUPT_LINE 0x3c#define PCI_CAPABILITY_LIST 0x34#define PCI_ROM_ADDRESS_MASK (~0x7ffULL)#define PCI_ROM_ADDRESS_ENABLE 0x01#define PCI_ROM_ADDRESS 0x30#define PCI_SUBSYSTEM_ID 0x2e#define PCI_SUBSYSTEM_VENDOR_ID 0x2c#define PCI_CARDBUS_CIS 0x28#define PCI_BASE_ADDRESS_IO_MASK (~0x03ULL)#define PCI_BASE_ADDRESS_MEM_MASK (~0x0fULL)#define PCI_BASE_ADDRESS_MEM_PREFETCH 0x08#define PCI_BASE_ADDRESS_MEM_TYPE_64 0x04#define PCI_BASE_ADDRESS_MEM_TYPE_1M 0x02#define PCI_BASE_ADDRESS_MEM_TYPE_32 0x00#define PCI_BASE_ADDRESS_MEM_TYPE_MASK 0x06#define PCI_BASE_ADDRESS_SPACE_MEMORY 0x00#define PCI_BASE_ADDRESS_SPACE_IO 0x01#define PCI_BASE_ADDRESS_SPACE 0x01#define PCI_BASE_ADDRESS_5 0x24#define PCI_BASE_ADDRESS_4 0x20#define PCI_BASE_ADDRESS_3 0x1c#define PCI_BASE_ADDRESS_2 0x18#define PCI_BASE_ADDRESS_1 0x14#define PCI_BASE_ADDRESS_0 0x10#define PCI_BIST_CAPABLE 0x80#define PCI_BIST_START 0x40#define PCI_BIST_CODE_MASK 0x0f#define PCI_BIST 0x0f#define PCI_HEADER_TYPE_CARDBUS 2#define PCI_HEADER_TYPE_BRIDGE 1#define PCI_HEADER_TYPE_NORMAL 0#define PCI_HEADER_TYPE 0x0e#define PCI_LATENCY_TIMER 0x0d#define PCI_CACHE_LINE_SIZE 0x0c#define PCI_CLASS_SUB_CODE_DATA_OTHER 0x80#define PCI_CLASS_SUB_CODE_DATA_MGMT 0x20#define PCI_CLASS_SUB_CODE_DATA_COMMSYNC 0x10#define PCI_CLASS_SUB_CODE_DATA_PERFCNTR 0x01#define PCI_CLASS_SUB_CODE_DATA_DPIO 0x00#define PCI_CLASS_SUB_CODE_CRYPTO_OTHER 0x80#define PCI_CLASS_SUB_CODE_CRYPTO_ENTERTAINMENT 0x10#define PCI_CLASS_SUB_CODE_CRYPTO_NETWORK 0x00#define PCI_CLASS_SUB_CODE_SATELLITE_DATA 0x04#define PCI_CLASS_SUB_CODE_SATELLITE_VOICE 0x03#define PCI_CLASS_SUB_CODE_SATELLITE_AUDIO 0x02#define PCI_CLASS_SUB_CODE_SATELLITE_TV 0x01#define PCI_CLASS_SUB_CODE_I2O_V1_0 0x00#define PCI_CLASS_SUB_CODE_WIRELESS_OTHER 0x80#define PCI_CLASS_SUB_CODE_WIRELESS_80211B 0x21#define PCI_CLASS_SUB_CODE_WIRELESS_80211A 0x20#define PCI_CLASS_SUB_CODE_WIRELESS_BROADBAND 0x12#define PCI_CLASS_SUB_CODE_WIRELESS_BLUETOOTH 0x11#define PCI_CLASS_SUB_CODE_WIRELESS_RF 0x10#define PCI_CLASS_SUB_CODE_WIRELESS_IR 0x01#define PCI_CLASS_SUB_CODE_WIRELESS_IRDA 0x00#define PCI_CLASS_SUB_CODE_SERIAL_CANBUS 0x09#define PCI_CLASS_SUB_CODE_SERIAL_SERCOS 0x08#define PCI_CLASS_SUB_CODE_SERIAL_IPMI 0x07#define PCI_CLASS_SUB_CODE_SERIAL_INFINIBAND 0x06#define PCI_CLASS_SUB_CODE_SERIAL_SMBUS 0x05#define PCI_CLASS_SUB_CODE_SERIAL_FIBRECHAN 0x04#define PCI_CLASS_SUB_CODE_SERIAL_USB 0x03#define PCI_CLASS_SUB_CODE_SERIAL_SSA 0x02#define PCI_CLASS_SUB_CODE_SERIAL_ACCESSBUS 0x01#define PCI_CLASS_SUB_CODE_SERIAL_1394 0x00#define PCI_CLASS_SUB_CODE_PROCESSOR_COPROC 0x40#define PCI_CLASS_SUB_CODE_PROCESSOR_MIPS 0x30#define PCI_CLASS_SUB_CODE_PROCESSOR_POWERPC 0x20#define PCI_CLASS_SUB_CODE_PROCESSOR_ALPHA 0x10#define PCI_CLASS_SUB_CODE_PROCESSOR_PENTIUM 0x02#define PCI_CLASS_SUB_CODE_PROCESSOR_486 0x01#define PCI_CLASS_SUB_CODE_PROCESSOR_386 0x00#define PCI_CLASS_SUB_CODE_DOCKING_OTHER 0x80#define PCI_CLASS_SUB_CODE_DOCKING_GENERIC 0x00#define PCI_CLASS_SUB_CODE_INPUT_OTHER 0x80#define PCI_CLASS_SUB_CODE_INPUT_GAMEPORT 0x04#define PCI_CLASS_SUB_CODE_INPUT_SCANNER 0x03#define PCI_CLASS_SUB_CODE_INPUT_MOUSE 0x02#define PCI_CLASS_SUB_CODE_INPUT_DIGITIZER 0x01#define PCI_CLASS_SUB_CODE_INPUT_KEYBOARD 0x00#define PCI_CLASS_SUB_CODE_PERIPHERAL_OTHER 0x80#define PCI_CLASS_SUB_CODE_PERIPHERAL_SD 0x05#define PCI_CLASS_SUB_CODE_PERIPHERAL_HOTPLUG 0x04#define PCI_CLASS_SUB_CODE_PERIPHERAL_RTC 0x03#define PCI_CLASS_SUB_CODE_PERIPHERAL_TIMER 0x02#define PCI_CLASS_SUB_CODE_PERIPHERAL_DMA 0x01#define PCI_CLASS_SUB_CODE_PERIPHERAL_PIC 0x00#define PCI_CLASS_SUB_CODE_COMM_OTHER 0x80#define PCI_CLASS_SUB_CODE_COMM_SMARTCARD 0x05#define PCI_CLASS_SUB_CODE_COMM_GPIB 0x04#define PCI_CLASS_SUB_CODE_COMM_MODEM 0x03#define PCI_CLASS_SUB_CODE_COMM_MULTIPORT 0x02#define PCI_CLASS_SUB_CODE_COMM_PARALLEL 0x01#define PCI_CLASS_SUB_CODE_COMM_SERIAL 0x00#define PCI_CLASS_SUB_CODE_BRIDGE_OTHER 0x80#define PCI_CLASS_SUB_CODE_BRIDGE_INFINIBAND 0x0A#define PCI_CLASS_SUB_CODE_BRIDGE_SEMI_PCI 0x09#define PCI_CLASS_SUB_CODE_BRIDGE_RACEWAY 0x08#define PCI_CLASS_SUB_CODE_BRIDGE_CARDBUS 0x07#define PCI_CLASS_SUB_CODE_BRIDGE_NUBUS 0x06#define PCI_CLASS_SUB_CODE_BRIDGE_PCMCIA 0x05#define PCI_CLASS_SUB_CODE_BRIDGE_PCI 0x04#define PCI_CLASS_SUB_CODE_BRIDGE_MCA 0x03#define PCI_CLASS_SUB_CODE_BRIDGE_EISA 0x02#define PCI_CLASS_SUB_CODE_BRIDGE_ISA 0x01#define PCI_CLASS_SUB_CODE_BRIDGE_HOST 0x00#define PCI_CLASS_SUB_CODE_MEMORY_OTHER 0x80#define PCI_CLASS_SUB_CODE_MEMORY_FLASH 0x01#define PCI_CLASS_SUB_CODE_MEMORY_RAM 0x00#define PCI_CLASS_SUB_CODE_MULTIMEDIA_OTHER 0x80#define PCI_CLASS_SUB_CODE_MULTIMEDIA_PHONE 0x02#define PCI_CLASS_SUB_CODE_MULTIMEDIA_AUDIO 0x01#define PCI_CLASS_SUB_CODE_MULTIMEDIA_VIDEO 0x00#define PCI_CLASS_SUB_CODE_DISPLAY_OTHER 0x80#define PCI_CLASS_SUB_CODE_DISPLAY_3D 0x02#define PCI_CLASS_SUB_CODE_DISPLAY_XGA 0x01#define PCI_CLASS_SUB_CODE_DISPLAY_VGA 0x00#define PCI_CLASS_SUB_CODE_NETWORK_OTHER 0x80#define PCI_CLASS_SUB_CODE_NETWORK_PICMG 0x06#define PCI_CLASS_SUB_CODE_NETWORK_WORLDFIP 0x05#define PCI_CLASS_SUB_CODE_NETWORK_ISDN 0x04#define PCI_CLASS_SUB_CODE_NETWORK_ATM 0x03#define PCI_CLASS_SUB_CODE_NETWORK_FDDI 0x02#define PCI_CLASS_SUB_CODE_NETWORK_TOKENRING 0x01#define PCI_CLASS_SUB_CODE_NETWORK_ETHERNET 0x00#define PCI_CLASS_SUB_CODE_STORAGE_OTHER 0x80#define PCI_CLASS_SUB_CODE_STORAGE_SAS 0x07#define PCI_CLASS_SUB_CODE_STORAGE_SATA 0x06#define PCI_CLASS_SUB_CODE_STORAGE_ATA 0x05#define PCI_CLASS_SUB_CODE_STORAGE_RAID 0x04#define PCI_CLASS_SUB_CODE_STORAGE_IPIBUS 0x03#define PCI_CLASS_SUB_CODE_STORAGE_FLOPPY 0x02#define PCI_CLASS_SUB_CODE_STORAGE_IDE 0x01#define PCI_CLASS_SUB_CODE_STORAGE_SCSI 0x00#define PCI_CLASS_SUB_CODE_TOO_OLD_VGA 0x01#define PCI_CLASS_SUB_CODE_TOO_OLD_NOTVGA 0x00#define PCI_CLASS_SUB_CODE 0x0a#define PCI_CLASS_CODE_OTHER 0xFF#define PCI_CLASS_CODE_DATA 0x11#define PCI_CLASS_CODE_CRYPTO 0x10#define PCI_CLASS_CODE_SATELLITE 0x0F#define PCI_CLASS_CODE_I2O 0x0E#define PCI_CLASS_CODE_WIRELESS 0x0D#define PCI_CLASS_CODE_SERIAL 0x0C#define PCI_CLASS_CODE_PROCESSOR 0x0B#define PCI_CLASS_CODE_DOCKING 0x0A#define PCI_CLASS_CODE_INPUT 0x09#define PCI_CLASS_CODE_PERIPHERAL 0x08#define PCI_CLASS_CODE_COMM 0x07#define PCI_CLASS_CODE_BRIDGE 0x06#define PCI_CLASS_CODE_MEMORY 0x05#define PCI_CLASS_CODE_MULTIMEDIA 0x04#define PCI_CLASS_CODE_DISPLAY 0x03#define PCI_CLASS_CODE_NETWORK 0x02#define PCI_CLASS_CODE_STORAGE 0x01#define PCI_CLASS_CODE_TOO_OLD 0x00#define PCI_CLASS_CODE 0x0b#define PCI_CLASS_DEVICE 0x0a#define PCI_CLASS_PROG 0x09#define PCI_REVISION_ID 0x08#define PCI_CLASS_REVISION 0x08#define PCI_STATUS_DETECTED_PARITY 0x8000#define PCI_STATUS_SIG_SYSTEM_ERROR 0x4000#define PCI_STATUS_REC_MASTER_ABORT 0x2000#define PCI_STATUS_REC_TARGET_ABORT 0x1000#define PCI_STATUS_SIG_TARGET_ABORT 0x800#define PCI_STATUS_DEVSEL_SLOW 0x400#define PCI_STATUS_DEVSEL_MEDIUM 0x200#define PCI_STATUS_DEVSEL_FAST 0x000#define PCI_STATUS_DEVSEL_MASK 0x600#define PCI_STATUS_PARITY 0x100#define PCI_STATUS_FAST_BACK 0x80#define PCI_STATUS_UDF 0x40#define PCI_STATUS_66MHZ 0x20#define PCI_STATUS_CAP_LIST 0x10#define PCI_STATUS 0x06#define PCI_COMMAND_FAST_BACK 0x200#define PCI_COMMAND_SERR 0x100#define PCI_COMMAND_WAIT 0x80#define PCI_COMMAND_PARITY 0x40#define PCI_COMMAND_VGA_PALETTE 0x20#define PCI_COMMAND_INVALIDATE 0x10#define PCI_COMMAND_SPECIAL 0x8#define PCI_COMMAND_MASTER 0x4#define PCI_COMMAND_MEMORY 0x2#define PCI_COMMAND_IO 0x1#define PCI_COMMAND 0x04#define PCI_DEVICE_ID 0x02#define PCI_VENDOR_ID 0x00#define PCI_STD_HEADER_SIZEOF 64#define PCI_CFG_SPACE_EXP_SIZE 4096#define PCI_CFG_SPACE_SIZE 256#define _PCI_H#define bool _Bool#define notrace __attribute__((no_instrument_function))#define inline inline __attribute__((always_inline)) notrace#define CONFIG_DM_PCI_COMPAT 1#define CONFIG_DM_PCI 1#define MAX_PHANDLE_ARGS 16#define FDT_PCI_REG_SIZE ((FDT_PCI_ADDR_CELLS + FDT_PCI_SIZE_CELLS) * sizeof(u32))#define FDT_PCI_SIZE_CELLS 2#define FDT_PCI_ADDR_CELLS 3#define SPL_BUILD 0#define cpu_to_fdt_size(reg) cpu_to_be32(reg)#define cpu_to_fdt_addr(reg) cpu_to_be32(reg)#define fdt_size_to_cpu(reg) be32_to_cpu(reg)#define fdt_addr_to_cpu(reg) be32_to_cpu(reg)#define FDT_ADDR_T_NONE (-1U)#define __fdtdec_h#define GD_FLG_WDT_READY 0x10000#define GD_FLG_LOG_READY 0x08000#define GD_FLG_SPL_EARLY_INIT 0x04000#define GD_FLG_ENV_DEFAULT 0x02000#define GD_FLG_RECORD 0x01000#define GD_FLG_SKIP_RELOC 0x00800#define GD_FLG_SPL_INIT 0x00400#define GD_FLG_FULL_MALLOC_INIT 0x00200#define GD_FLG_SERIAL_READY 0x00100#define GD_FLG_ENV_READY 0x00080#define GD_FLG_DISABLE_CONSOLE 0x00040#define GD_FLG_LOGINIT 0x00020#define GD_FLG_POSTSTOP 0x00010#define GD_FLG_POSTFAIL 0x00008#define GD_FLG_SILENT 0x00004#define GD_FLG_DEVINIT 0x00002#define GD_FLG_RELOC 0x00001#define gd_board_type() 0#define __ASM_GENERIC_GBL_DATA_H#define CONFIG_WDT 1#define CONFIG_BLOBLIST 1#define CONFIG_LOG 1#define CONFIG_BOOTSTAGE 1#define CONFIG_DM_VIDEO 1#define CONFIG_CONSOLE_RECORD 1#define CONFIG_PCI 1#define CONFIG_SYS_MALLOC_F_LEN 0x2800#define CONFIG_OF_LIVE 1#define CONFIG_TIMER 1#define CONFIG_DM 1#define CONFIG_PRE_CONSOLE_BUFFER 1#define ll_boot_init() true#define check_member(structure,member,offset) _Static_assert( offsetof(struct structure, member) == offset, "`struct " #structure "` offset for `" #member "` is not " #offset)#define ROUND(a,b) (((a) + (b) - 1) & ~((b) - 1))#define RAND_MAX -1U#define for_each_cpu(iter,cpu,num_cpus,mask) for (iter = 0, cpu = cpumask_next(-1, mask); iter < num_cpus; iter++, cpu = cpumask_next(cpu, mask))#define CONFIG_SYS_DEF_EEPROM_ADDR CONFIG_SYS_I2C_EEPROM_ADDR#define eeprom_write(dev_addr,offset,buffer,cnt) ((void)-ENOSYS)#define eeprom_read(dev_addr,offset,buffer,cnt) ((void)-ENOSYS)#define eeprom_init(bus)#define TOTAL_MALLOC_LEN (CONFIG_SYS_MALLOC_LEN + CONFIG_ENV_SIZE)#define CONFIG_SYS_SUPPORT_64BIT_DATA#define __COMMON_H_ 1#define CONFIG_SYS_I2C_EEPROM_ADDR 0x0#define CONFIG_AUTO_COMPLETE 1#define CONFIG_SYS_MONITOR_BASE 0#define CONFIG_ENV_SIZE 8192#define __LP64__ 1#define __swab32(x) (__builtin_constant_p((__u32)(x)) ? ___swab32((x)) : __fswab32((x)))#define __be32_to_cpu(x) __swab32((__force __u32)(__be32)(x))#define be32_to_cpu __be32_to_cpu#define ___swab32(x) ((__u32)( (((__u32)(x) & (__u32)0x000000ffUL) << 24) | (((__u32)(x) & (__u32)0x0000ff00UL) << 8) | (((__u32)(x) & (__u32)0x00ff0000UL) >> 8) | (((__u32)(x) & (__u32)0xff000000UL) >> 24) ))#define __force#define NULL ((void *)0)#define OF_MAX_PHANDLE_ARGS 16#define DECLARE_GLOBAL_DATA_PTR extern gd_t *gd#define of_node_cmp(s1,s2) strcasecmp((s1), (s2))#define of_prop_cmp(s1,s2) strcmp((s1), (s2))#define of_compat_cmp(s1,s2,l) strcasecmp((s1), (s2))#define OF_ROOT_NODE_SIZE_CELLS_DEFAULT 1#define OF_ROOT_NODE_ADDR_CELLS_DEFAULT 1#define OF_BAD_ADDR ((u64)-1)#define _DM_OF_H#define ofnode_for_each_subnode(node,parent) for (node = ofnode_first_subnode(parent); ofnode_valid(node); node = ofnode_next_subnode(node))#define _DM_OFNODE_H#define mALLOPt mallopt#define mALLINFo mallinfo#define pvALLOc pvalloc#define vALLOc valloc#define rEALLOc realloc#define mEMALIGn memalign#define mALLOc malloc#define fREe free#define cALLOc calloc#define MORECORE_CLEARS 1#define MORECORE_FAILURE -1#define MORECORE sbrk#define DEFAULT_MMAP_MAX (0)#define DEFAULT_MMAP_THRESHOLD (128 * 1024)#define DEFAULT_TOP_PAD (0)#define DEFAULT_TRIM_THRESHOLD (128 * 1024)#define M_MMAP_MAX -4#define M_MMAP_THRESHOLD -3#define M_TOP_PAD -2#define M_TRIM_THRESHOLD -1#define M_KEEP 4#define M_GRAIN 3#define M_NLBLKS 2#define M_MXFAST 1#define malloc_getpagesize 4096#define LACKS_UNISTD_H#define MALLOC_COPY(dest,src,nbytes) do { INTERNAL_SIZE_T mcsz = (nbytes); if(mcsz <= 9*sizeof(mcsz)) { INTERNAL_SIZE_T* mcsrc = (INTERNAL_SIZE_T*) (src); INTERNAL_SIZE_T* mcdst = (INTERNAL_SIZE_T*) (dest); if(mcsz >= 5*sizeof(mcsz)) { *mcdst++ = *mcsrc++; *mcdst++ = *mcsrc++; if(mcsz >= 7*sizeof(mcsz)) { *mcdst++ = *mcsrc++; *mcdst++ = *mcsrc++; if(mcsz >= 9*sizeof(mcsz)) { *mcdst++ = *mcsrc++; *mcdst++ = *mcsrc++; }}} *mcdst++ = *mcsrc++; *mcdst++ = *mcsrc++; *mcdst = *mcsrc ; } else memcpy(dest, src, mcsz); } while(0)#define MALLOC_ZERO(charp,nbytes) do { INTERNAL_SIZE_T mzsz = (nbytes); if(mzsz <= 9*sizeof(mzsz)) { INTERNAL_SIZE_T* mz = (INTERNAL_SIZE_T*) (charp); if(mzsz >= 5*sizeof(mzsz)) { *mz++ = 0; *mz++ = 0; if(mzsz >= 7*sizeof(mzsz)) { *mz++ = 0; *mz++ = 0; if(mzsz >= 9*sizeof(mzsz)) { *mz++ = 0; *mz++ = 0; }}} *mz++ = 0; *mz++ = 0; *mz = 0; } else memset((charp), 0, mzsz); } while(0)#define USE_MEMCPY 1#define HAVE_MEMCPY#define INTERNAL_SIZE_T size_t#define Void_t void#define __STD_C 1#define __MALLOC_H__#define __ELF__ 1#define __STDC__ 1#define _LINUX_COMPAT_H_#define unlikely(x) __builtin_expect(!!(x), 0)#define IS_ERR_VALUE(x) unlikely((x) >= (unsigned long)-MAX_ERRNO)#define MAX_ERRNO 4095#define _LINUX_ERR_H#define __must_check#define __GFP_ZERO ((__force gfp_t)0x8000u)#define SIZE_MAX (~(size_t)0)#define request_irq(nr,f,flags,nm,data) 0#define free_irq(irq,data) do {} while (0)#define enable_irq_wake(irq) -EINVAL#define disable_irq_wake(irq) do {} while (0)#define disable_irq(__VA_ARGS__...)#define enable_irq(__VA_ARGS__...)#define dev_set_drvdata(dev,data) do {} while (0)#define IRQ_WAKE_THREAD 2#define IRQ_HANDLED 1#define IRQ_NONE 0#define pm_runtime_enable(dev) do {} while (0)#define pm_runtime_set_autosuspend_delay(dev,delay) do {} while (0)#define pm_runtime_use_autosuspend(dev) do {} while (0)#define pm_runtime_put_sync(dev) do {} while (0)#define pm_runtime_put(dev) do {} while (0)#define pm_runtime_get_sync(dev) do {} while (0)#define rcu_head callback_head#define prandom_u32(__VA_ARGS__...) 0#define cdev_del(__VA_ARGS__...) do { } while (0)#define cdev_add(__VA_ARGS__...) 0#define cdev_init(__VA_ARGS__...) do { } while (0)#define up_read(__VA_ARGS__...) do { } while (0)#define down_read(__VA_ARGS__...) do { } while (0)#define up_write(__VA_ARGS__...) do { } while (0)#define down_write(__VA_ARGS__...) do { } while (0)#define wake_up_process(__VA_ARGS__...) do { } while (0)#define kthread_stop(__VA_ARGS__...) do { } while (0)#define kthread_create(__VA_ARGS__...) __builtin_return_address(0)#define __devinitconst#define __devinitdata#define __devinit#define __exit#define __init#define yield() do { } while (0)#define cond_resched() do { } while (0)#define down_write_trylock(__VA_ARGS__...) 1#define init_rwsem(__VA_ARGS__...) do { } while (0)#define mutex_unlock(__VA_ARGS__...)#define mutex_lock(__VA_ARGS__...)#define mutex_init(__VA_ARGS__...)#define DEFINE_MUTEX(__VA_ARGS__...)#define spin_unlock_irqrestore(lock,flags) do { flags = 0; } while (0)#define spin_lock_irqsave(lock,flags) do { debug("%lu\n", flags); } while (0)#define spin_unlock(lock) do {} while (0)#define spin_lock(lock) do {} while (0)#define spin_lock_init(lock) do {} while (0)#define INIT_WORK(work,fun) do {} while (0)#define schedule_work(work) do {} while (0)#define del_timer_sync(timer) do {} while (0)#define setup_timer(timer,func,data) do {} while (0)#define schedule() do { } while (0)#define kthread_should_stop(__VA_ARGS__...) 0#define set_current_state(__VA_ARGS__...) do { } while (0)#define try_to_freeze(__VA_ARGS__...) 0#define set_freezable(__VA_ARGS__...) do { } while (0)#define task_pid_nr(x) 0#define dump_stack(__VA_ARGS__...) do { } while (0)#define wake_up_interruptible(__VA_ARGS__...) do { } while (0)#define wait_event_interruptible(__VA_ARGS__...) 0#define init_waitqueue_head(__VA_ARGS__...) do { } while (0)#define volume_sysfs_close(__VA_ARGS__...) do { } while (0)#define volume_sysfs_init(__VA_ARGS__...) 0#define device_unregister(__VA_ARGS__...)#define device_register(__VA_ARGS__...) 0#define dev_set_name(__VA_ARGS__...) do { } while (0)#define late_initcall(__VA_ARGS__...)#define __initdata#define blocking_notifier_call_chain(__VA_ARGS__...) 0#define misc_deregister(__VA_ARGS__...)#define misc_register(__VA_ARGS__...) 0#define class_destroy(__VA_ARGS__...)#define class_remove_file(__VA_ARGS__...)#define class_unregister(__VA_ARGS__...)#define class_register(__VA_ARGS__...) 0#define class_create_file(__VA_ARGS__...) 0#define class_create(__VA_ARGS__...) __builtin_return_address(0)#define unregister_chrdev_region(__VA_ARGS__...)#define alloc_chrdev_region(__VA_ARGS__...) 0#define MINOR(dev) 0#define MAJOR(dev) 0#define MKDEV(__VA_ARGS__...) 0#define __module_get(__VA_ARGS__...)#define MODULE_ALIAS(__VA_ARGS__...)#define MODULE_LICENSE(__VA_ARGS__...)#define MODULE_AUTHOR(__VA_ARGS__...)#define MODULE_DESCRIPTION(__VA_ARGS__...)#define MODULE_VERSION(__VA_ARGS__...)#define MODULE_PARM_DESC(__VA_ARGS__...)#define module_param_call(__VA_ARGS__...)#define module_param(__VA_ARGS__...)#define EXPORT_SYMBOL_GPL(__VA_ARGS__...)#define EXPORT_SYMBOL(__VA_ARGS__...)#define module_exit(__VA_ARGS__...)#define module_init(__VA_ARGS__...)#define module_put(__VA_ARGS__...) do { } while (0)#define try_module_get(__VA_ARGS__...) 1#define THIS_MODULE 0#define XATTR_LIST_MAX 65536#define DEFINE_LED_TRIGGER(x) static struct led_trigger *x;#define get_random_bytes(__VA_ARGS__...)#define PAGE_SIZE 4096#define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + (c))#define remove_wait_queue(__VA_ARGS__...) do { } while (0)#define add_wait_queue(__VA_ARGS__...) do { } while (0)#define DECLARE_WAITQUEUE(__VA_ARGS__...) do { } while (0)#define kmem_cache_create(a,sz,c,d,e) get_mem(sz)#define __vmalloc(size,flags,pgsz) kmalloc(size, flags)#define vmalloc(size) kmalloc(size, 0)#define __GFP_NOWARN ((gfp_t) 0)#define GFP_USER ((gfp_t) 0)#define GFP_NOFS ((gfp_t) 0)#define GFP_KERNEL ((gfp_t) 0)#define GFP_ATOMIC ((gfp_t) 0)#define netdev_vdbg(dev,fmt,args...) debug(fmt, ## args)#define netdev_dbg(dev,fmt,args...) debug(fmt, ## args)#define netdev_info(dev,fmt,args...) printf(fmt, ## args)#define netdev_notice(dev,fmt,args...) printf(fmt, ## args)#define netdev_warn(dev,fmt,args...) printf(fmt, ## args)#define netdev_err(dev,fmt,args...) printf(fmt, ## args)#define netdev_crit(dev,fmt,args...) printf(fmt, ## args)#define netdev_alert(dev,fmt,args...) printf(fmt, ## args)#define netdev_emerg(dev,fmt,args...) printf(fmt, ## args)#define dev_warn(dev,fmt,args...) printf(fmt, ## args)#define dev_err(dev,fmt,args...) printf(fmt, ## args)#define dev_info(dev,fmt,args...) printf(fmt, ## args)#define dev_vdbg(dev,fmt,args...) debug(fmt, ## args)#define dev_dbg(dev,fmt,args...) debug(fmt, ## args)#define DM_FLAG_ACTIVE_DMA (1 << 9)#define DM_FLAG_OS_PREPARE (1 << 10)#define dev_vdbg(dev,fmt,__VA_ARGS__...) ({ if (0) __dev_printk(7, dev, fmt, ## __VA_ARGS__); })#define dev_dbg(dev,fmt,__VA_ARGS__...) ({ if (0) __dev_printk(7, dev, fmt, ## __VA_ARGS__); })#define dev_info(dev,fmt,__VA_ARGS__...) __dev_printk(6, dev, fmt, ## __VA_ARGS__)#define dev_notice(dev,fmt,__VA_ARGS__...) __dev_printk(5, dev, fmt, ## __VA_ARGS__)#define dev_warn(dev,fmt,__VA_ARGS__...) __dev_printk(4, dev, fmt, ## __VA_ARGS__)#define dev_err(dev,fmt,__VA_ARGS__...) __dev_printk(3, dev, fmt, ## __VA_ARGS__)#define dev_crit(dev,fmt,__VA_ARGS__...) __dev_printk(2, dev, fmt, ## __VA_ARGS__)#define dev_alert(dev,fmt,__VA_ARGS__...) __dev_printk(1, dev, fmt, ## __VA_ARGS__)#define dev_emerg(dev,fmt,__VA_ARGS__...) __dev_printk(0, dev, fmt, ## __VA_ARGS__)#define __dev_printk(level,dev,fmt,__VA_ARGS__...) ({ if (level < CONFIG_VAL(LOGLEVEL)) dev_printk(dev, fmt, ## __VA_ARGS__); })#define dev_printk(dev,fmt,__VA_ARGS__...) ({ printk(fmt, ## __VA_ARGS__); })#define devres_alloc(release,size,gfp) _devres_alloc(release, size, gfp | __GFP_ZERO)#define _devres_alloc(release,size,gfp) __devres_alloc(release, size, gfp, #release)#define device_foreach_child_safe(pos,next,parent) list_for_each_entry_safe(pos, next, &parent->child_head, sibling_node)#define DM_GET_DRIVER(__name) ll_entry_get(struct driver, __name, driver)#define U_BOOT_DRIVER(__name) ll_entry_declare(struct driver, __name, driver)#define of_match_ptr(_ptr) (_ptr)#define device_active(dev) ((dev)->flags & DM_FLAG_ACTIVATED)#define device_get_ops(dev) (dev->driver->ops)#define DM_MAX_SEQ 999#define DM_FLAG_OF_PLATDATA (1 << 8)#define DM_FLAG_NAME_ALLOCED (1 << 7)#define DM_FLAG_BOUND (1 << 6)#define DM_FLAG_ALLOC_PRIV_DMA (1 << 5)#define DM_FLAG_ALLOC_UCLASS_PDATA (1 << 4)#define DM_FLAG_ALLOC_PARENT_PDATA (1 << 3)#define DM_FLAG_PRE_RELOC (1 << 2)#define DM_FLAG_ALLOC_PDATA (1 << 1)#define DM_FLAG_ACTIVATED (1 << 0)#define _DM_DEVICE_H#define CONFIG_DEBUG_DEVRES 1#define CONFIG_DEVRES 1#define CONFIG_OF_CONTROL 1#define _DM_FDTADDR_H#define uclass_foreach_dev_probe(id,dev) for (int _ret = uclass_first_device_err(id, &dev); !_ret && dev; _ret = uclass_next_device_err(&dev))#define uclass_foreach_dev_safe(pos,next,uc) list_for_each_entry_safe(pos, next, &uc->dev_head, uclass_node)#define uclass_foreach_dev(pos,uc) list_for_each_entry(pos, &uc->dev_head, uclass_node)#define UCLASS_DRIVER(__name) ll_entry_declare(struct uclass_driver, __name, uclass)#define DM_UC_FLAG_ALLOC_PRIV_DMA (1 << 5)#define DM_UC_FLAG_SEQ_ALIAS (1 << 0)#define _DM_UCLASS_H#define dev_for_each_subnode(subnode,dev) for (subnode = dev_read_first_subnode(dev); ofnode_valid(subnode); subnode = ofnode_next_subnode(subnode))#define _DM_READ_H#define U_BOOT_DEVICES(__name) ll_entry_declare_list(struct driver_info, __name, driver_info)#define U_BOOT_DEVICE(__name) ll_entry_declare(struct driver_info, __name, driver_info)#define _DM_PLATDATA_H#define _DM_H_#define OS_O_TRUNC 01000#define OS_O_CREAT 0100#define OS_O_MASK 3#define OS_O_RDWR 2#define OS_O_WRONLY 1#define OS_O_RDONLY 0#define OS_SEEK_END 2#define OS_SEEK_CUR 1#define OS_SEEK_SET 0#define __OS_H__#define MAP_WRTHROUGH 0#define MAP_WRBACK 0#define MAP_WRCOMBINE 0#define MAP_NOCACHE 0#define __ASM_GENERIC_IO_H__#define unmap_physmem unmap_physmem#define map_physmem map_physmem#define virt_to_phys virt_to_phys#define phys_to_virt phys_to_virt#define writeb(val,addr) iotrace_writeb(val, (const void *)(uintptr_t)addr)#define readb(addr) iotrace_readb((const void *)(uintptr_t)addr)#define writew(val,addr) iotrace_writew(val, (const void *)(addr))#define readw(addr) iotrace_readw((const void *)(addr))#define writel(val,addr) iotrace_writel(val, (const void *)(addr))#define readl(addr) iotrace_readl((const void *)(addr))#define __IOTRACE_H#define CONFIG_IO_TRACE#define outsw(port,buf,ns) _outsw((u16 *)port, buf, ns)#define insw(port,buf,ns) _insw((u16 *)port, buf, ns)#define clrsetbits_8(addr,clear,set) clrsetbits(8, addr, clear, set)#define setbits_8(addr,set) setbits(8, addr, set)#define clrbits_8(addr,clear) clrbits(8, addr, clear)#define clrsetbits_le16(addr,clear,set) clrsetbits(le16, addr, clear, set)#define setbits_le16(addr,set) setbits(le16, addr, set)#define clrbits_le16(addr,clear) clrbits(le16, addr, clear)#define clrsetbits_be16(addr,clear,set) clrsetbits(be16, addr, clear, set)#define setbits_be16(addr,set) setbits(be16, addr, set)#define clrbits_be16(addr,clear) clrbits(be16, addr, clear)#define clrsetbits_le32(addr,clear,set) clrsetbits(le32, addr, clear, set)#define setbits_le32(addr,set) setbits(le32, addr, set)#define clrbits_le32(addr,clear) clrbits(le32, addr, clear)#define clrsetbits_be32(addr,clear,set) clrsetbits(be32, addr, clear, set)#define setbits_be32(addr,set) setbits(be32, addr, set)#define clrbits_be32(addr,clear) clrbits(be32, addr, clear)#define clrsetbits(type,addr,clear,set) out_ ## type((addr), (in_ ## type(addr) & ~(clear)) | (set))#define setbits(type,addr,set) out_ ## type((addr), in_ ## type(addr) | (set))#define clrbits(type,addr,clear) out_ ## type((addr), in_ ## type(addr) & ~(clear))#define in_8(a) readb(a)#define out_8(a,v) writeb(v,a)#define in_be16(a) in_arch(w,be16,a)#define in_be32(a) in_arch(l,be32,a)#define out_be16(a,v) out_arch(w,be16,a,v)#define out_be32(a,v) out_arch(l,be32,a,v)#define in_le16(a) in_arch(w,le16,a)#define in_le32(a) in_arch(l,le32,a)#define out_le16(a,v) out_arch(w,le16,a,v)#define out_le32(a,v) out_arch(l,le32,a,v)#define in_arch(type,endian,a) endian ## _to_cpu(read ## type(a))#define out_arch(type,endian,a,v) write ## type(cpu_to_ ## endian(v),a)#define in_le64(a) in_arch(q,le64,a)#define out_le64(a,v) out_arch(q,le64,a,v)#define writel(v,addr) ((void)addr)#define writew(v,addr) ((void)addr)#define writeb(v,addr) ((void)addr)#define readl(addr) ((void)addr, 0)#define readw(addr) ((void)addr, 0)#define readb(addr) ((void)addr, 0)#define __SANDBOX_ASM_IO_H#define _SETJMP_H_#define __noreturn __attribute__((noreturn))#define sysreset_get_ops(dev) ((struct sysreset_ops *)(dev)->driver->ops)#define __SYSRESET_H#define CONFIG_SANDBOX_SPI_MAX_CS 10#define CONFIG_SANDBOX_SPI_MAX_BUS 1#define SANDBOX_STATE_IO(_name,_compat,_read,_write) ll_entry_declare(struct sandbox_state_io, _name, state_io) = { .name = __stringify(_name), .read = _read, .write = _write, .compat = _compat, }#define SANDBOX_STATE_MIN_SPACE 0x1000#define __SANDBOX_STATE_H#define _DM_ROOT_H_#define CONFIG_DM_DEVICE_REMOVE 1#define CONFIG_SYS_FDT_LOAD_ADDR 0x100#define EINVAL 22#define EACCES 13#define EIO 5#define ENOMEM 12#define debug_cond(cond,fmt,args...) do { if (1) log(LOG_CATEGORY, LOGL_DEBUG, fmt, ## args); } while (0)#define debug(fmt,args...) debug_cond(_DEBUG, fmt, ## args)#define log(_cat,_level,_fmt,_args...) ({ int _l = _level; if (CONFIG_IS_ENABLED(LOG) && (_l <= _LOG_MAX_LEVEL || _LOG_DEBUG)) _log((enum log_category_t)(_cat), _l, __FILE__, __LINE__, __func__, pr_fmt(_fmt), ## _args); })#define CONFIG_LOG_MAX_LEVEL 6#define _LOG_MAX_LEVEL CONFIG_VAL(LOG_MAX_LEVEL)#define _LOG_DEBUG 0#define pr_fmt(fmt) fmt#define LOG_CATEGORY LOGC_NONE#define list_for_each_entry(pos,head,member) for (pos = list_entry((head)->next, typeof(*pos), member); prefetch(pos->member.next), &pos->member != (head); pos = list_entry(pos->member.next, typeof(*pos), member))#define container_of(ptr,type,member) ({ const typeof( ((type *)0)->member ) *__mptr = (ptr); (type *)( (char *)__mptr - offsetof(type,member) );})#define list_entry(ptr,type,member) container_of(ptr, type, member)#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)#define #define IFNAMSIZ 16#define __ETH_RAW_OS_H#define __STDC_ISO_10646__ 201706L#define __STDC_IEC_559_COMPLEX__ 1#define __STDC_IEC_559__ 1#define _STDC_PREDEF_H 1#define __GCC_IEC_559_COMPLEX 2#define __GCC_IEC_559 2#define __HAVE_GENERIC_SELECTION 1#define __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)#define __glibc_macro_warning1(message) _Pragma (#message)#define __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)#define __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)#define __LDBL_REDIR_DECL(name)#define __LDBL_REDIR_NTH(name,proto) name proto __THROW#define __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW#define __LDBL_REDIR(name,proto) name proto#define __LDBL_REDIR1(name,proto,alias) name proto#define __attribute_nonstring__ __attribute__ ((__nonstring__))#define __glibc_has_attribute(attr) 0#define __glibc_likely(cond) __builtin_expect ((cond), 1)#define __glibc_unlikely(cond) __builtin_expect ((cond), 0)#define __restrict_arr __restrict#define __va_arg_pack_len() __builtin_va_arg_pack_len ()#define __va_arg_pack() __builtin_va_arg_pack ()#define __fortify_function __extern_always_inline __attribute_artificial__#define __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))#define __extern_inline extern __inline __attribute__ ((__gnu_inline__))#define __attribute_artificial__ __attribute__ ((__artificial__))#define __always_inline __inline __attribute__ ((__always_inline__))#define __wur#define __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))#define __nonnull(params) __attribute__ ((__nonnull__ params))#define __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))#define __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))#define __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))#define __attribute_deprecated__ __attribute__ ((__deprecated__))#define __attribute_noinline__ __attribute__ ((__noinline__))#define __attribute_used__ __attribute__ ((__used__))#define __attribute_const__ __attribute__ ((__const__))#define __attribute_pure__ __attribute__ ((__pure__))#define __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))#define __attribute_malloc__ __attribute__ ((__malloc__))#define __ASMNAME2(prefix,cname) __STRING (prefix) cname#define __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)#define __REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL#define __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW#define __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))#define __glibc_c99_flexarr_available 1#define __flexarr []#define __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))#define __warnattr(msg) __attribute__((__warning__ (msg)))#define __warndecl(name,msg) extern void name (void) __attribute__((__warning__ (msg)))#define __bos0(ptr) __builtin_object_size (ptr, 0)#define __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)#define __END_DECLS#define __BEGIN_DECLS#define __ptr_t void *#define __STRING(x) #x#define __CONCAT(x,y) x ## y#define __PMT(args) args#define __P(args) args#define __glibc_clang_has_extension(ext) 0#define __NTHNL(fct) __attribute__ ((__nothrow__)) fct#define __NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct#define __THROWNL __attribute__ ((__nothrow__))#define __THROW __attribute__ ((__nothrow__ __LEAF))#define __LEAF_ATTR __attribute__ ((__leaf__))#define __LEAF , __leaf__#define _SYS_CDEFS_H 1#define __STDC_VERSION__ 201112L#define __GNUC__ 8#define __GNUC_MINOR__ 3#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))#define __glibc_clang_prereq(maj,min) 0#define __GNUC_STDC_INLINE__ 1#define __USE_FORTIFY_LEVEL 0#define _FEATURES_H 1#define __USE_EXTERN_INLINES 1#define __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))#define __GLIBC_MINOR__ 28#define __GLIBC__ 2#define __GNU_LIBRARY__ 6#define __GLIBC_USE_DEPRECATED_GETS 0#define __USE_GNU 1#define __USE_ATFILE 1#define __USE_MISC 1#define __USE_LARGEFILE64 1#define __USE_LARGEFILE 1#define __USE_ISOC99 1#define __USE_ISOC95 1#define __USE_XOPEN2KXSI 1#define __USE_XOPEN2K 1#define __USE_XOPEN2K8XSI 1#define __USE_XOPEN2K8 1#define _LARGEFILE_SOURCE 1#define __USE_UNIX98 1#define __USE_XOPEN_EXTENDED 1#define __USE_XOPEN 1#define _ATFILE_SOURCE 1#define __USE_POSIX199506 1#define __USE_POSIX199309 1#define __USE_POSIX2 1#define __USE_POSIX 1#define _POSIX_C_SOURCE 200809L#define _POSIX_SOURCE 1#define __USE_ISOC11 1#define _DEFAULT_SOURCE 1#define _LARGEFILE64_SOURCE 1#define _XOPEN_SOURCE_EXTENDED 1#define _XOPEN_SOURCE 700#define _ISOC11_SOURCE 1#define _ISOC99_SOURCE 1#define _ISOC95_SOURCE 1#define __GLIBC_USE(F) __GLIBC_USE_ ## F#define __KERNEL_STRICT_NAMES#define __OPTIMIZE__ 1#define _GNU_SOURCE 1#define _REENTRANT 1#define __size_t#define _SIZET_#define _GCC_SIZE_T#define ___int_size_t_h#define _SIZE_T_DECLARED#define _BSD_SIZE_T_DEFINED_#define _SIZE_T_DEFINED#define _SIZE_T_DEFINED_#define _BSD_SIZE_T_#define _SIZE_T_#define __SIZE_T#define _T_SIZE#define _T_SIZE_#define _SYS_SIZE_T_H#define _SIZE_T#define __SIZE_T__#define __size_t__#define __SIZE_TYPE__ long unsigned int#define __need_size_t#define __iovec_defined 1#define FALLOC_FL_UNSHARE_RANGE 0x40#define FALLOC_FL_INSERT_RANGE 0x20#define FALLOC_FL_ZERO_RANGE 0x10#define FALLOC_FL_COLLAPSE_RANGE 0x08#define FALLOC_FL_NO_HIDE_STALE 0x04#define FALLOC_FL_PUNCH_HOLE 0x02#define FALLOC_FL_KEEP_SIZE 0x01#define _FALLOC_H_#define AT_EACCESS 0x200#define AT_STATX_DONT_SYNC 0x4000#define AT_STATX_FORCE_SYNC 0x2000#define AT_STATX_SYNC_AS_STAT 0x0000#define AT_STATX_SYNC_TYPE 0x6000#define AT_EMPTY_PATH 0x1000#define AT_NO_AUTOMOUNT 0x800#define AT_SYMLINK_FOLLOW 0x400#define AT_REMOVEDIR 0x200#define AT_SYMLINK_NOFOLLOW 0x100#define AT_FDCWD -100#define MAX_HANDLE_SZ 128#define SPLICE_F_GIFT 8#define SPLICE_F_MORE 4#define SPLICE_F_NONBLOCK 2#define SPLICE_F_MOVE 1#define SYNC_FILE_RANGE_WAIT_AFTER 4#define SYNC_FILE_RANGE_WRITE 2#define SYNC_FILE_RANGE_WAIT_BEFORE 1#define POSIX_FADV_NOREUSE __POSIX_FADV_NOREUSE#define POSIX_FADV_DONTNEED __POSIX_FADV_DONTNEED#define POSIX_FADV_WILLNEED 3#define POSIX_FADV_SEQUENTIAL 2#define POSIX_FADV_RANDOM 1#define POSIX_FADV_NORMAL 0#define __POSIX_FADV_NOREUSE 5#define __POSIX_FADV_DONTNEED 4#define FNDELAY O_NDELAY#define FNONBLOCK O_NONBLOCK#define FASYNC O_ASYNC#define FFSYNC O_FSYNC#define FAPPEND O_APPEND#define RWH_WRITE_LIFE_EXTREME 5#define RWH_WRITE_LIFE_LONG 4#define RWH_WRITE_LIFE_MEDIUM 3#define RWH_WRITE_LIFE_SHORT 2#define RWH_WRITE_LIFE_NONE 1#define RWF_WRITE_LIFE_NOT_SET 0#define F_SEAL_WRITE 0x0008#define F_SEAL_GROW 0x0004#define F_SEAL_SHRINK 0x0002#define F_SEAL_SEAL 0x0001#define DN_MULTISHOT 0x80000000#define DN_ATTRIB 0x00000020#define DN_RENAME 0x00000010#define DN_DELETE 0x00000008#define DN_CREATE 0x00000004#define DN_MODIFY 0x00000002#define DN_ACCESS 0x00000001#define LOCK_RW 192#define LOCK_WRITE 128#define LOCK_READ 64#define LOCK_MAND 32#define LOCK_UN 8#define LOCK_NB 4#define LOCK_EX 2#define LOCK_SH 1#define F_SHLCK 8#define F_EXLCK 4#define F_UNLCK 2#define F_WRLCK 1#define F_RDLCK 0#define FD_CLOEXEC 1#define F_DUPFD_CLOEXEC 1030#define F_SET_FILE_RW_HINT 1038#define F_GET_FILE_RW_HINT 1037#define F_SET_RW_HINT 1036#define F_GET_RW_HINT 1035#define F_GET_SEALS 1034#define F_ADD_SEALS 1033#define F_GETPIPE_SZ 1032#define F_SETPIPE_SZ 1031#define F_NOTIFY 1026#define F_GETLEASE 1025#define F_SETLEASE 1024#define F_GETOWN_EX __F_GETOWN_EX#define F_SETOWN_EX __F_SETOWN_EX#define F_GETSIG __F_GETSIG#define F_SETSIG __F_SETSIG#define __F_GETOWN_EX 16#define __F_SETOWN_EX 15#define __F_GETSIG 11#define __F_SETSIG 10#define F_GETOWN __F_GETOWN#define F_SETOWN __F_SETOWN#define __F_GETOWN 9#define __F_SETOWN 8#define F_SETFL 4#define F_GETFL 3#define F_SETFD 2#define F_GETFD 1#define F_DUPFD 0#define O_RSYNC O_SYNC#define O_DSYNC __O_DSYNC#define O_TMPFILE __O_TMPFILE#define O_PATH __O_PATH#define O_NOATIME __O_NOATIME#define O_DIRECT __O_DIRECT#define O_CLOEXEC __O_CLOEXEC#define O_NOFOLLOW __O_NOFOLLOW#define O_DIRECTORY __O_DIRECTORY#define O_LARGEFILE __O_LARGEFILE#define F_OFD_SETLKW 38#define F_OFD_SETLK 37#define F_OFD_GETLK 36#define F_SETLKW 7#define F_SETLK 6#define F_GETLK 5#define __O_TMPFILE (020000000 | __O_DIRECTORY)#define __O_DSYNC 010000#define __O_PATH 010000000#define __O_NOATIME 01000000#define __O_DIRECT 040000#define __O_CLOEXEC 02000000#define __O_NOFOLLOW 0400000#define __O_DIRECTORY 0200000#define O_ASYNC 020000#define O_FSYNC O_SYNC#define O_SYNC 04010000#define O_NDELAY O_NONBLOCK#define O_NONBLOCK 04000#define O_APPEND 02000#define O_TRUNC 01000#define O_NOCTTY 0400#define O_EXCL 0200#define O_CREAT 0100#define O_RDWR 02#define O_WRONLY 01#define O_RDONLY 00#define O_ACCMODE 0003#define F_GETLK64 5#define __O_LARGEFILE 0#define _FCNTL_H 1#define F_SETLKW64 7#define F_SETLK64 6#define __x86_64__ 1#define UTIME_OMIT ((1l << 30) - 2l)#define UTIME_NOW ((1l << 30) - 1l)#define __S_IEXEC 0100#define __S_IWRITE 0200#define __S_IREAD 0400#define __S_ISVTX 01000#define __S_ISGID 02000#define __S_ISUID 04000#define __S_TYPEISSHM(buf) ((buf)->st_mode - (buf)->st_mode)#define __S_TYPEISSEM(buf) ((buf)->st_mode - (buf)->st_mode)#define __S_TYPEISMQ(buf) ((buf)->st_mode - (buf)->st_mode)#define __S_IFSOCK 0140000#define __S_IFLNK 0120000#define __S_IFIFO 0010000#define __S_IFREG 0100000#define __S_IFBLK 0060000#define __S_IFCHR 0020000#define __S_IFDIR 0040000#define __S_IFMT 0170000#define _STATBUF_ST_NSEC#define _STATBUF_ST_RDEV#define _STATBUF_ST_BLKSIZE#define st_ctime st_ctim.tv_sec#define st_mtime st_mtim.tv_sec#define st_atime st_atim.tv_sec#define _STAT_VER _STAT_VER_LINUX#define _MKNOD_VER_LINUX 0#define _STAT_VER_LINUX 1#define _STAT_VER_KERNEL 0#define _BITS_STAT_H 1#define F_TEST 3#define F_TLOCK 2#define F_LOCK 1#define F_ULOCK 0#define SEEK_END 2#define SEEK_CUR 1#define SEEK_SET 0#define F_OK 0#define X_OK 1#define W_OK 2#define R_OK 4#define S_IRWXO (S_IRWXG >> 3)#define S_IXOTH (S_IXGRP >> 3)#define S_IWOTH (S_IWGRP >> 3)#define S_IROTH (S_IRGRP >> 3)#define S_IRWXG (S_IRWXU >> 3)#define S_IXGRP (S_IXUSR >> 3)#define S_IWGRP (S_IWUSR >> 3)#define S_IRGRP (S_IRUSR >> 3)#define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)#define S_IXUSR __S_IEXEC#define S_IWUSR __S_IWRITE#define S_IRUSR __S_IREAD#define S_ISVTX __S_ISVTX#define S_ISGID __S_ISGID#define S_ISUID __S_ISUID#define S_IFSOCK __S_IFSOCK#define S_IFLNK __S_IFLNK#define S_IFIFO __S_IFIFO#define S_IFREG __S_IFREG#define S_IFBLK __S_IFBLK#define S_IFCHR __S_IFCHR#define S_IFDIR __S_IFDIR#define S_IFMT __S_IFMT#define __pid_t_defined#define __off64_t_defined#define __off_t_defined#define __mode_t_defined#define __OPEN_NEEDS_MODE(oflag) (((oflag) & O_CREAT) != 0 || ((oflag) & __O_TMPFILE) == __O_TMPFILE)#define __FD_SETSIZE 1024#define __NFDBITS (8 * (int) sizeof (__fd_mask))#define FD_ZERO(fdsetp) __FD_ZERO (fdsetp)#define FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)#define FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)#define FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)#define NFDBITS __NFDBITS#define FD_SETSIZE __FD_SETSIZE#define __FDS_BITS(set) ((set)->fds_bits)#define __FD_MASK(d) ((__fd_mask) (1UL << ((d) % __NFDBITS)))#define __FD_ELT(d) ((d) / __NFDBITS)#define _SYS_SELECT_H 1#define __suseconds_t_defined#define __u_intN_t(N,MODE) typedef unsigned int u_int ## N ## _t __attribute__ ((__mode__ (MODE)))#define __fsfilcnt_t_defined#define __fsblkcnt_t_defined#define __blkcnt_t_defined#define __blksize_t_defined#define __BIT_TYPES_DEFINED__ 1#define __useconds_t_defined#define __key_t_defined#define __daddr_t_defined#define __ssize_t_defined#define __id_t_defined#define __uid_t_defined#define __nlink_t_defined#define __gid_t_defined#define __dev_t_defined#define __ino64_t_defined#define __ino_t_defined#define __u_char_defined#define _SYS_TYPES_H 1#define SOCK_NONBLOCK SOCK_NONBLOCK#define SOCK_CLOEXEC SOCK_CLOEXEC#define SOCK_PACKET SOCK_PACKET#define SOCK_DCCP SOCK_DCCP#define SOCK_SEQPACKET SOCK_SEQPACKET#define SOCK_RDM SOCK_RDM#define SOCK_RAW SOCK_RAW#define SOCK_DGRAM SOCK_DGRAM#define SOCK_STREAM SOCK_STREAM#define _SYS_SOCKET_H 1#define _SS_SIZE 128#define __SOCKADDR_COMMON_SIZE (sizeof (unsigned short int))#define __SOCKADDR_COMMON(sa_prefix) sa_family_t sa_prefix ## family#define _BITS_SOCKADDR_H 1#define SIOCGSTAMPNS 0x8907#define SIOCGSTAMP 0x8906#define SIOCATMARK 0x8905#define SIOCGPGRP 0x8904#define FIOGETOWN 0x8903#define SIOCSPGRP 0x8902#define FIOSETOWN 0x8901#define __ASM_GENERIC_SOCKIOS_H#define SO_ZEROCOPY 60#define SO_PEERGROUPS 59#define SCM_TIMESTAMPING_PKTINFO 58#define SO_COOKIE 57#define SO_INCOMING_NAPI_ID 56#define SO_MEMINFO 55#define SCM_TIMESTAMPING_OPT_STATS 54#define SO_CNX_ADVICE 53#define SO_ATTACH_REUSEPORT_EBPF 52#define SO_ATTACH_REUSEPORT_CBPF 51#define SO_DETACH_BPF SO_DETACH_FILTER#define SO_ATTACH_BPF 50#define SO_INCOMING_CPU 49#define SO_BPF_EXTENSIONS 48#define SO_MAX_PACING_RATE 47#define SO_BUSY_POLL 46#define SO_SELECT_ERR_QUEUE 45#define SO_LOCK_FILTER 44#define SO_NOFCS 43#define SO_PEEK_OFF 42#define SCM_WIFI_STATUS SO_WIFI_STATUS#define SO_WIFI_STATUS 41#define SO_RXQ_OVFL 40#define SO_DOMAIN 39#define SO_PROTOCOL 38#define SCM_TIMESTAMPING SO_TIMESTAMPING#define SO_TIMESTAMPING 37#define SO_MARK 36#define SCM_TIMESTAMPNS SO_TIMESTAMPNS#define SO_TIMESTAMPNS 35#define SO_PASSSEC 34#define SO_PEERSEC 31#define SO_ACCEPTCONN 30#define SCM_TIMESTAMP SO_TIMESTAMP#define SO_TIMESTAMP 29#define SO_PEERNAME 28#define SO_GET_FILTER SO_ATTACH_FILTER#define SO_DETACH_FILTER 27#define SO_ATTACH_FILTER 26#define SO_BINDTODEVICE 25#define SO_SECURITY_ENCRYPTION_NETWORK 24#define SO_SECURITY_ENCRYPTION_TRANSPORT 23#define SO_SECURITY_AUTHENTICATION 22#define SO_SNDTIMEO 21#define SO_RCVTIMEO 20#define SO_SNDLOWAT 19#define SO_RCVLOWAT 18#define SO_PEERCRED 17#define SO_PASSCRED 16#define SO_REUSEPORT 15#define SO_BSDCOMPAT 14#define SO_LINGER 13#define SO_PRIORITY 12#define SO_NO_CHECK 11#define SO_OOBINLINE 10#define SO_KEEPALIVE 9#define SO_RCVBUFFORCE 33#define SO_SNDBUFFORCE 32#define SO_RCVBUF 8#define SO_SNDBUF 7#define SO_BROADCAST 6#define SO_DONTROUTE 5#define SO_ERROR 4#define SO_TYPE 3#define SO_REUSEADDR 2#define SO_DEBUG 1#define SOL_SOCKET 1#define __ASM_GENERIC_SOCKET_H#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))#define MSG_DONTROUTE MSG_DONTROUTE#define __ss_aligntype unsigned long int#define _SS_PADSIZE (_SS_SIZE - __SOCKADDR_COMMON_SIZE - sizeof (__ss_aligntype))#define __SYS_SOCKET_H_undef_IOC_OUT#define __SYS_SOCKET_H_undef_IOC_INOUT#define __SYS_SOCKET_H_undef_IOC_IN#define __SYS_SOCKET_H_undef_IOCSIZE_SHIFT#define __SYS_SOCKET_H_undef_IOCSIZE_MASK#define SCM_CREDENTIALS SCM_CREDENTIALS#define SCM_RIGHTS SCM_RIGHTS#define _EXTERN_INLINE __extern_inline#define CMSG_LEN(len) (CMSG_ALIGN (sizeof (struct cmsghdr)) + (len))#define CMSG_SPACE(len) (CMSG_ALIGN (len) + CMSG_ALIGN (sizeof (struct cmsghdr)))#define CMSG_FIRSTHDR(mhdr) ((size_t) (mhdr)->msg_controllen >= sizeof (struct cmsghdr) ? (struct cmsghdr *) (mhdr)->msg_control : (struct cmsghdr *) 0)#define CMSG_NXTHDR(mhdr,cmsg) __cmsg_nxthdr (mhdr, cmsg)#define CMSG_DATA(cmsg) ((cmsg)->__cmsg_data)#define MSG_CMSG_CLOEXEC MSG_CMSG_CLOEXEC#define MSG_FASTOPEN MSG_FASTOPEN#define MSG_ZEROCOPY MSG_ZEROCOPY#define MSG_BATCH MSG_BATCH#define MSG_WAITFORONE MSG_WAITFORONE#define MSG_MORE MSG_MORE#define MSG_NOSIGNAL MSG_NOSIGNAL#define MSG_ERRQUEUE MSG_ERRQUEUE#define MSG_RST MSG_RST#define MSG_CONFIRM MSG_CONFIRM#define MSG_SYN MSG_SYN#define MSG_FIN MSG_FIN#define MSG_WAITALL MSG_WAITALL#define MSG_EOR MSG_EOR#define MSG_DONTWAIT MSG_DONTWAIT#define MSG_TRUNC MSG_TRUNC#define MSG_PROXY MSG_PROXY#define MSG_CTRUNC MSG_CTRUNC#define MSG_TRYHARD MSG_DONTROUTE#define MSG_PEEK MSG_PEEK#define MSG_OOB MSG_OOB#define SOMAXCONN 128#define SOL_TLS 282#define SOL_KCM 281#define SOL_NFC 280#define SOL_ALG 279#define SOL_CAIF 278#define SOL_IUCV 277#define SOL_RDS 276#define SOL_PNPIPE 275#define SOL_BLUETOOTH 274#define SOL_PPPOL2TP 273#define SOL_RXRPC 272#define SOL_TIPC 271#define SOL_NETLINK 270#define SOL_DCCP 269#define SOL_LLC 268#define SOL_NETBEUI 267#define SOL_IRDA 266#define SOL_AAL 265#define SOL_ATM 264#define SOL_PACKET 263#define SOL_X25 262#define SOL_DECNET 261#define SOL_RAW 255#define AF_MAX PF_MAX#define AF_SMC PF_SMC#define AF_QIPCRTR PF_QIPCRTR#define AF_KCM PF_KCM#define AF_VSOCK PF_VSOCK#define AF_NFC PF_NFC#define AF_ALG PF_ALG#define AF_CAIF PF_CAIF#define AF_IEEE802154 PF_IEEE802154#define AF_PHONET PF_PHONET#define AF_ISDN PF_ISDN#define AF_RXRPC PF_RXRPC#define AF_IUCV PF_IUCV#define AF_BLUETOOTH PF_BLUETOOTH#define AF_TIPC PF_TIPC#define AF_CAN PF_CAN#define AF_MPLS PF_MPLS#define AF_IB PF_IB#define AF_LLC PF_LLC#define AF_WANPIPE PF_WANPIPE#define AF_PPPOX PF_PPPOX#define AF_IRDA PF_IRDA#define AF_SNA PF_SNA#define AF_RDS PF_RDS#define AF_ATMSVC PF_ATMSVC#define AF_ECONET PF_ECONET#define AF_ASH PF_ASH#define AF_PACKET PF_PACKET#define AF_ROUTE PF_ROUTE#define AF_NETLINK PF_NETLINK#define AF_KEY PF_KEY#define AF_SECURITY PF_SECURITY#define AF_NETBEUI PF_NETBEUI#define AF_DECnet PF_DECnet#define AF_ROSE PF_ROSE#define AF_INET6 PF_INET6#define AF_X25 PF_X25#define AF_ATMPVC PF_ATMPVC#define AF_BRIDGE PF_BRIDGE#define AF_NETROM PF_NETROM#define AF_APPLETALK PF_APPLETALK#define AF_IPX PF_IPX#define AF_AX25 PF_AX25#define AF_INET PF_INET#define AF_FILE PF_FILE#define AF_UNIX PF_UNIX#define AF_LOCAL PF_LOCAL#define AF_UNSPEC PF_UNSPEC#define PF_MAX 44#define PF_SMC 43#define PF_QIPCRTR 42#define PF_KCM 41#define PF_VSOCK 40#define PF_NFC 39#define PF_ALG 38#define PF_CAIF 37#define PF_IEEE802154 36#define PF_PHONET 35#define PF_ISDN 34#define PF_RXRPC 33#define PF_IUCV 32#define PF_BLUETOOTH 31#define PF_TIPC 30#define PF_CAN 29#define PF_MPLS 28#define PF_IB 27#define PF_LLC 26#define PF_WANPIPE 25#define PF_PPPOX 24#define PF_IRDA 23#define PF_SNA 22#define PF_RDS 21#define PF_ATMSVC 20#define PF_ECONET 19#define PF_ASH 18#define PF_PACKET 17#define PF_ROUTE PF_NETLINK#define PF_NETLINK 16#define PF_KEY 15#define PF_SECURITY 14#define PF_NETBEUI 13#define PF_DECnet 12#define PF_ROSE 11#define PF_INET6 10#define PF_X25 9#define PF_ATMPVC 8#define PF_BRIDGE 7#define PF_NETROM 6#define PF_APPLETALK 5#define PF_IPX 4#define PF_AX25 3#define PF_INET 2#define PF_FILE PF_LOCAL#define PF_UNIX PF_LOCAL#define PF_LOCAL 1#define PF_UNSPEC 0#define __socklen_t_defined#define __BITS_SOCKET_H#define __osockaddr_defined 1#define __SOCKADDR_ALLTYPES __SOCKADDR_ONETYPE (sockaddr) __SOCKADDR_ONETYPE (sockaddr_at) __SOCKADDR_ONETYPE (sockaddr_ax25) __SOCKADDR_ONETYPE (sockaddr_dl) __SOCKADDR_ONETYPE (sockaddr_eon) __SOCKADDR_ONETYPE (sockaddr_in) __SOCKADDR_ONETYPE (sockaddr_in6) __SOCKADDR_ONETYPE (sockaddr_inarp) __SOCKADDR_ONETYPE (sockaddr_ipx) __SOCKADDR_ONETYPE (sockaddr_iso) __SOCKADDR_ONETYPE (sockaddr_ns) __SOCKADDR_ONETYPE (sockaddr_un) __SOCKADDR_ONETYPE (sockaddr_x25)#define __SOCKADDR_ONETYPE(type) const struct type *__restrict __ ## type ## __;#define __SOCKADDR_ONETYPE(type) struct type *__restrict __ ## type ## __;#define SHUT_RDWR SHUT_RDWR#define SHUT_WR SHUT_WR#define SHUT_RD SHUT_RD#define IF_NAMESIZE 16#define IFNAMSIZ IF_NAMESIZE#define _IOT_ifconf _IOT(_IOTS(struct ifconf),1,0,0,0,0)#define ifc_req ifc_ifcu.ifcu_req#define ifc_buf ifc_ifcu.ifcu_buf#define _IOT_ifreq_int _IOT(_IOTS(char),IFNAMSIZ,_IOTS(int),1,0,0)#define _IOT_ifreq_short _IOT(_IOTS(char),IFNAMSIZ,_IOTS(short),1,0,0)#define _IOT_ifreq _IOT(_IOTS(char),IFNAMSIZ,_IOTS(char),16,0,0)#define ifr_newname ifr_ifru.ifru_newname#define ifr_qlen ifr_ifru.ifru_ivalue#define ifr_bandwidth ifr_ifru.ifru_ivalue#define ifr_ifindex ifr_ifru.ifru_ivalue#define ifr_data ifr_ifru.ifru_data#define ifr_slave ifr_ifru.ifru_slave#define ifr_map ifr_ifru.ifru_map#define ifr_mtu ifr_ifru.ifru_mtu#define ifr_metric ifr_ifru.ifru_ivalue#define ifr_flags ifr_ifru.ifru_flags#define ifr_netmask ifr_ifru.ifru_netmask#define ifr_broadaddr ifr_ifru.ifru_broadaddr#define ifr_dstaddr ifr_ifru.ifru_dstaddr#define ifr_addr ifr_ifru.ifru_addr#define ifr_hwaddr ifr_ifru.ifru_hwaddr#define ifr_name ifr_ifrn.ifrn_name#define IFHWADDRLEN 6#define ifa_dstaddr ifa_ifu.ifu_dstaddr#define ifa_broadaddr ifa_ifu.ifu_broadaddr#define IFF_DYNAMIC IFF_DYNAMIC#define IFF_AUTOMEDIA IFF_AUTOMEDIA#define IFF_PORTSEL IFF_PORTSEL#define IFF_MULTICAST IFF_MULTICAST#define IFF_SLAVE IFF_SLAVE#define IFF_MASTER IFF_MASTER#define IFF_ALLMULTI IFF_ALLMULTI#define IFF_PROMISC IFF_PROMISC#define IFF_NOARP IFF_NOARP#define IFF_RUNNING IFF_RUNNING#define IFF_NOTRAILERS IFF_NOTRAILERS#define IFF_POINTOPOINT IFF_POINTOPOINT#define IFF_LOOPBACK IFF_LOOPBACK#define IFF_DEBUG IFF_DEBUG#define IFF_BROADCAST IFF_BROADCAST#define IFF_UP IFF_UP#define _NET_IF_H 1#define IPV6_RTHDR_TYPE_0 0#define IPV6_RTHDR_STRICT 1#define IPV6_RTHDR_LOOSE 0#define SOL_ICMPV6 58#define SOL_IPV6 41#define IPV6_PMTUDISC_OMIT 5#define IPV6_PMTUDISC_INTERFACE 4#define IPV6_PMTUDISC_PROBE 3#define IPV6_PMTUDISC_DO 2#define IPV6_PMTUDISC_WANT 1#define IPV6_PMTUDISC_DONT 0#define IPV6_RXDSTOPTS IPV6_DSTOPTS#define IPV6_RXHOPOPTS IPV6_HOPOPTS#define IPV6_DROP_MEMBERSHIP IPV6_LEAVE_GROUP#define IPV6_ADD_MEMBERSHIP IPV6_JOIN_GROUP#define IPV6_FREEBIND 78#define IPV6_RECVFRAGSIZE 77#define IPV6_UNICAST_IF 76#define IPV6_TRANSPARENT 75#define IPV6_RECVORIGDSTADDR IPV6_ORIGDSTADDR#define IPV6_ORIGDSTADDR 74#define IPV6_MINHOPCOUNT 73#define IPV6_ADDR_PREFERENCES 72#define IPV6_AUTOFLOWLABEL 70#define IPV6_TCLASS 67#define IPV6_RECVTCLASS 66#define IPV6_DONTFRAG 62#define IPV6_PATHMTU 61#define IPV6_RECVPATHMTU 60#define IPV6_DSTOPTS 59#define IPV6_RECVDSTOPTS 58#define IPV6_RTHDR 57#define IPV6_RECVRTHDR 56#define IPV6_RTHDRDSTOPTS 55#define IPV6_HOPOPTS 54#define IPV6_RECVHOPOPTS 53#define IPV6_HOPLIMIT 52#define IPV6_RECVHOPLIMIT 51#define IPV6_PKTINFO 50#define IPV6_RECVPKTINFO 49#define IPV6_HDRINCL 36#define IPV6_XFRM_POLICY 35#define IPV6_IPSEC_POLICY 34#define IPV6_LEAVE_ANYCAST 28#define IPV6_JOIN_ANYCAST 27#define IPV6_V6ONLY 26#define IPV6_RECVERR 25#define IPV6_MTU 24#define IPV6_MTU_DISCOVER 23#define IPV6_ROUTER_ALERT 22#define IPV6_LEAVE_GROUP 21#define IPV6_JOIN_GROUP 20#define IPV6_MULTICAST_LOOP 19#define IPV6_MULTICAST_HOPS 18#define IPV6_MULTICAST_IF 17#define IPV6_UNICAST_HOPS 16#define IPV6_AUTHHDR 10#define IPV6_NEXTHOP 9#define SCM_SRCRT IPV6_RXSRCRT#define IPV6_2292HOPLIMIT 8#define IPV6_CHECKSUM 7#define IPV6_2292PKTOPTIONS 6#define IPV6_2292RTHDR 5#define IPV6_2292DSTOPTS 4#define IPV6_2292HOPOPTS 3#define IPV6_2292PKTINFO 2#define IPV6_ADDRFORM 1#define IP_MAX_MEMBERSHIPS 20#define IP_DEFAULT_MULTICAST_LOOP 1#define IP_DEFAULT_MULTICAST_TTL 1#define SOL_IP 0#define IP_UNICAST_IF 50#define IP_MULTICAST_ALL 49#define IP_MSFILTER 41#define IP_DROP_SOURCE_MEMBERSHIP 40#define IP_ADD_SOURCE_MEMBERSHIP 39#define IP_BLOCK_SOURCE 38#define IP_UNBLOCK_SOURCE 37#define IP_DROP_MEMBERSHIP 36#define IP_ADD_MEMBERSHIP 35#define IP_MULTICAST_LOOP 34#define IP_MULTICAST_TTL 33#define IP_MULTICAST_IF 32#define IP_PMTUDISC_OMIT 5#define IP_PMTUDISC_INTERFACE 4#define IP_PMTUDISC_PROBE 3#define IP_PMTUDISC_DO 2#define IP_PMTUDISC_WANT 1#define IP_PMTUDISC_DONT 0#define IP_RECVFRAGSIZE 25#define IP_BIND_ADDRESS_NO_PORT 24#define IP_CHECKSUM 23#define IP_NODEFRAG 22#define IP_MINTTL 21#define IP_RECVORIGDSTADDR IP_ORIGDSTADDR#define IP_ORIGDSTADDR 20#define IP_TRANSPARENT 19#define IP_PASSSEC 18#define IP_XFRM_POLICY 17#define IP_IPSEC_POLICY 16#define IP_FREEBIND 15#define IP_MTU 14#define IP_RECVTOS 13#define IP_RECVTTL 12#define IP_RECVERR 11#define IP_MTU_DISCOVER 10#define IP_PMTUDISC 10#define IP_PKTOPTIONS 9#define IP_PKTINFO 8#define IP_ROUTER_ALERT 5#define MCAST_INCLUDE 1#define MCAST_EXCLUDE 0#define MCAST_MSFILTER 48#define MCAST_LEAVE_SOURCE_GROUP 47#define MCAST_JOIN_SOURCE_GROUP 46#define MCAST_LEAVE_GROUP 45#define MCAST_UNBLOCK_SOURCE 44#define MCAST_BLOCK_SOURCE 43#define MCAST_JOIN_GROUP 42#define IP_RETOPTS 7#define IP_RECVRETOPTS IP_RETOPTS#define IP_RECVOPTS 6#define IP_TTL 2#define IP_TOS 1#define IP_HDRINCL 3#define IP_OPTIONS 4#define __USE_KERNEL_IPV6_DEFS 0#define _NETINET_IN_H 1#define _BITS_BYTESWAP_H 1#define _ENDIAN_H 1#define _BITS_UINTN_IDENTITY_H 1#define IN6_IS_ADDR_MC_GLOBAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0xe))#define IN6_IS_ADDR_MC_ORGLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x8))#define IN6_IS_ADDR_MC_SITELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x5))#define IN6_IS_ADDR_MC_LINKLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x2))#define IN6_IS_ADDR_MC_NODELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x1))#define IN6_IS_ADDR_MULTICAST(a) (((const uint8_t *) (a))[0] == 0xff)#define IN6_ARE_ADDR_EQUAL(a,b) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); const struct in6_addr *__b = (const struct in6_addr *) (b); __a->__in6_u.__u6_addr32[0] == __b->__in6_u.__u6_addr32[0] && __a->__in6_u.__u6_addr32[1] == __b->__in6_u.__u6_addr32[1] && __a->__in6_u.__u6_addr32[2] == __b->__in6_u.__u6_addr32[2] && __a->__in6_u.__u6_addr32[3] == __b->__in6_u.__u6_addr32[3]; }))#define IN6_IS_ADDR_V4COMPAT(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && ntohl (__a->__in6_u.__u6_addr32[3]) > 1; }))#define IN6_IS_ADDR_V4MAPPED(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == htonl (0xffff); }))#define IN6_IS_ADDR_SITELOCAL(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfec00000); }))#define IN6_IS_ADDR_LINKLOCAL(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfe800000); }))#define IN6_IS_ADDR_LOOPBACK(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == htonl (1); }))#define IN6_IS_ADDR_UNSPECIFIED(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == 0; }))#define htons(x) __bswap_16 (x)#define htonl(x) __bswap_32 (x)#define ntohs(x) __bswap_16 (x)#define ntohl(x) __bswap_32 (x)#define GROUP_FILTER_SIZE(numsrc) (sizeof (struct group_filter) - sizeof (struct sockaddr_storage) + ((numsrc) * sizeof (struct sockaddr_storage)))#define IP_MSFILTER_SIZE(numsrc) (sizeof (struct ip_msfilter) - sizeof (struct in_addr) + (numsrc) * sizeof (struct in_addr))#define INET6_ADDRSTRLEN 46#define INET_ADDRSTRLEN 16#define IN6ADDR_LOOPBACK_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }#define IN6ADDR_ANY_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }#define s6_addr32 __in6_u.__u6_addr32#define s6_addr16 __in6_u.__u6_addr16#define s6_addr __in6_u.__u6_addr8#define INADDR_MAX_LOCAL_GROUP ((in_addr_t) 0xe00000ff)#define INADDR_ALLRTRS_GROUP ((in_addr_t) 0xe0000002)#define INADDR_ALLHOSTS_GROUP ((in_addr_t) 0xe0000001)#define INADDR_UNSPEC_GROUP ((in_addr_t) 0xe0000000)#define INADDR_LOOPBACK ((in_addr_t) 0x7f000001)#define IN_LOOPBACKNET 127#define INADDR_NONE ((in_addr_t) 0xffffffff)#define INADDR_BROADCAST ((in_addr_t) 0xffffffff)#define INADDR_ANY ((in_addr_t) 0x00000000)#define IN_BADCLASS(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xf0000000)#define IN_EXPERIMENTAL(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xe0000000)#define IN_MULTICAST(a) IN_CLASSD(a)#define IN_CLASSD(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xe0000000)#define IN_CLASSC_HOST (0xffffffff & ~IN_CLASSC_NET)#define IN_CLASSC_NSHIFT 8#define IN_CLASSC_NET 0xffffff00#define IN_CLASSC(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xc0000000)#define IN_CLASSB_MAX 65536#define IN_CLASSB_HOST (0xffffffff & ~IN_CLASSB_NET)#define IN_CLASSB_NSHIFT 16#define IN_CLASSB_NET 0xffff0000#define IN_CLASSB(a) ((((in_addr_t)(a)) & 0xc0000000) == 0x80000000)#define IN_CLASSA_MAX 128#define IN_CLASSA_HOST (0xffffffff & ~IN_CLASSA_NET)#define IN_CLASSA_NSHIFT 24#define IN_CLASSA_NET 0xff000000#define IN_CLASSA(a) ((((in_addr_t)(a)) & 0x80000000) == 0)#define IPPROTO_MH IPPROTO_MH#define IPPROTO_DSTOPTS IPPROTO_DSTOPTS#define IPPROTO_NONE IPPROTO_NONE#define IPPROTO_ICMPV6 IPPROTO_ICMPV6#define IPPROTO_FRAGMENT IPPROTO_FRAGMENT#define IPPROTO_ROUTING IPPROTO_ROUTING#define IPPROTO_HOPOPTS IPPROTO_HOPOPTS#define IPPROTO_RAW IPPROTO_RAW#define IPPROTO_MPLS IPPROTO_MPLS#define IPPROTO_UDPLITE IPPROTO_UDPLITE#define IPPROTO_SCTP IPPROTO_SCTP#define IPPROTO_COMP IPPROTO_COMP#define IPPROTO_PIM IPPROTO_PIM#define IPPROTO_ENCAP IPPROTO_ENCAP#define IPPROTO_BEETPH IPPROTO_BEETPH#define IPPROTO_MTP IPPROTO_MTP#define IPPROTO_AH IPPROTO_AH#define IPPROTO_ESP IPPROTO_ESP#define IPPROTO_GRE IPPROTO_GRE#define IPPROTO_RSVP IPPROTO_RSVP#define IPPROTO_IPV6 IPPROTO_IPV6#define IPPROTO_DCCP IPPROTO_DCCP#define IPPROTO_TP IPPROTO_TP#define IPPROTO_IDP IPPROTO_IDP#define IPPROTO_UDP IPPROTO_UDP#define IPPROTO_PUP IPPROTO_PUP#define IPPROTO_EGP IPPROTO_EGP#define IPPROTO_TCP IPPROTO_TCP#define IPPROTO_IPIP IPPROTO_IPIP#define IPPROTO_IGMP IPPROTO_IGMP#define IPPROTO_ICMP IPPROTO_ICMP#define IPPROTO_IP IPPROTO_IP#define __LITTLE_ENDIAN 1234#define __BYTE_ORDER __LITTLE_ENDIAN#define __BIG_ENDIAN 4321#define IP_MSS 576#define IPTTLDEC 1#define IPFRAGTTL 60#define IPDEFTTL 64#define MAXTTL 255#define IPOPT_SECUR_TOPSECRET 0x6bc5#define IPOPT_SECUR_SECRET 0xd788#define IPOPT_SECUR_RESTR 0xaf13#define IPOPT_SECUR_MMMM 0xbc4d#define IPOPT_SECUR_EFTO 0x789a#define IPOPT_SECUR_CONFID 0xf135#define IPOPT_SECUR_UNCLASS 0x0000#define IPOPT_TS_PRESPEC 3#define IPOPT_TS_TSANDADDR 1#define IPOPT_TS_TSONLY 0#define MAX_IPOPTLEN 40#define IPOPT_MINOFF 4#define IPOPT_OFFSET 2#define IPOPT_OLEN 1#define IPOPT_OPTVAL 0#define IPOPT_RA 148#define IPOPT_SSRR 137#define IPOPT_SID IPOPT_SATID#define IPOPT_SATID 136#define IPOPT_LSRR 131#define IPOPT_SEC IPOPT_SECURITY#define IPOPT_SECURITY 130#define IPOPT_TIMESTAMP IPOPT_TS#define IPOPT_TS 68#define IPOPT_RR 7#define IPOPT_NOOP IPOPT_NOP#define IPOPT_NOP 1#define IPOPT_END IPOPT_EOL#define IPOPT_EOL 0#define IPOPT_RESERVED2 0x60#define IPOPT_MEASUREMENT IPOPT_DEBMEAS#define IPOPT_DEBMEAS 0x40#define IPOPT_RESERVED1 0x20#define IPOPT_CONTROL 0x00#define IPOPT_NUMBER(o) ((o) & IPOPT_NUMBER_MASK)#define IPOPT_CLASS(o) ((o) & IPOPT_CLASS_MASK)#define IPOPT_COPIED(o) ((o) & IPOPT_COPY)#define IPOPT_NUMBER_MASK 0x1f#define IPOPT_CLASS_MASK 0x60#define IPOPT_COPY 0x80#define IPTOS_PREC_ROUTINE IPTOS_CLASS_CS0#define IPTOS_PREC_PRIORITY IPTOS_CLASS_CS1#define IPTOS_PREC_IMMEDIATE IPTOS_CLASS_CS2#define IPTOS_PREC_FLASH IPTOS_CLASS_CS3#define IPTOS_PREC_FLASHOVERRIDE IPTOS_CLASS_CS4#define IPTOS_PREC_CRITIC_ECP IPTOS_CLASS_CS5#define IPTOS_PREC_INTERNETCONTROL IPTOS_CLASS_CS6#define IPTOS_PREC_NETCONTROL IPTOS_CLASS_CS7#define IPTOS_PREC(tos) IPTOS_CLASS(tos)#define IPTOS_PREC_MASK IPTOS_CLASS_MASK#define IPTOS_MINCOST IPTOS_LOWCOST#define IPTOS_LOWCOST 0x02#define IPTOS_RELIABILITY 0x04#define IPTOS_THROUGHPUT 0x08#define IPTOS_LOWDELAY 0x10#define IPTOS_TOS(tos) ((tos) & IPTOS_TOS_MASK)#define IPTOS_TOS_MASK 0x1E#define IPTOS_CLASS_DEFAULT IPTOS_CLASS_CS0#define IPTOS_CLASS_CS7 0xe0#define IPTOS_CLASS_CS6 0xc0#define IPTOS_CLASS_CS5 0xa0#define IPTOS_CLASS_CS4 0x80#define IPTOS_CLASS_CS3 0x60#define IPTOS_CLASS_CS2 0x40#define IPTOS_CLASS_CS1 0x20#define IPTOS_CLASS_CS0 0x00#define IPTOS_CLASS(class) ((class) & IPTOS_CLASS_MASK)#define IPTOS_CLASS_MASK 0xe0#define IPTOS_DSCP_EF 0xb8#define IPTOS_DSCP_AF43 0x98#define IPTOS_DSCP_AF42 0x90#define IPTOS_DSCP_AF41 0x88#define IPTOS_DSCP_AF33 0x78#define IPTOS_DSCP_AF32 0x70#define IPTOS_DSCP_AF31 0x68#define IPTOS_DSCP_AF23 0x58#define IPTOS_DSCP_AF22 0x50#define IPTOS_DSCP_AF21 0x48#define IPTOS_DSCP_AF13 0x38#define IPTOS_DSCP_AF12 0x30#define IPTOS_DSCP_AF11 0x28#define IPTOS_DSCP(x) ((x) & IPTOS_DSCP_MASK)#define IPTOS_DSCP_MASK 0xfc#define IPTOS_ECN_CE 0x03#define IPTOS_ECN_ECT0 0x02#define IPTOS_ECN_ECT1 0x01#define IPTOS_ECN_NOT_ECT 0x00#define IPTOS_ECN(x) ((x) & IPTOS_ECN_MASK)#define IPTOS_ECN_MASK 0x03#define IP_MAXPACKET 65535#define IPVERSION 4#define IP_OFFMASK 0x1fff#define IP_MF 0x2000#define IP_DF 0x4000#define IP_RF 0x8000#define __NETINET_IP_H 1#define SOL_UDP 17#define UDP_ENCAP_GTP1U 5#define UDP_ENCAP_GTP0 4#define UDP_ENCAP_L2TPINUDP 3#define UDP_ENCAP_ESPINUDP 2#define UDP_ENCAP_ESPINUDP_NON_IKE 1#define UDP_NO_CHECK6_RX 102#define UDP_NO_CHECK6_TX 101#define UDP_ENCAP 100#define UDP_CORK 1#define __NETINET_UDP_H 1#define __need_NULL#define __ferror_unlocked_body(_fp) (((_fp)->_flags & _IO_ERR_SEEN) != 0)#define _IO_ERR_SEEN 0x0020#define __feof_unlocked_body(_fp) (((_fp)->_flags & _IO_EOF_SEEN) != 0)#define _IO_EOF_SEEN 0x0010#define __putc_unlocked_body(_ch,_fp) (__glibc_unlikely ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))#define stdout stdout#define __getc_unlocked_body(_fp) (__glibc_unlikely ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)#define stdin stdin#define fwrite_unlocked(ptr,size,n,stream) (__extension__ ((__builtin_constant_p (size) && __builtin_constant_p (n) && (size_t) (size) * (size_t) (n) <= 8 && (size_t) (size) != 0) ? ({ const char *__ptr = (const char *) (ptr); FILE *__stream = (stream); size_t __cnt; for (__cnt = (size_t) (size) * (size_t) (n); __cnt > 0; --__cnt) if (putc_unlocked (*__ptr++, __stream) == EOF) break; ((size_t) (size) * (size_t) (n) - __cnt) / (size_t) (size); }) : (((__builtin_constant_p (size) && (size_t) (size) == 0) || (__builtin_constant_p (n) && (size_t) (n) == 0)) ? ((void) (ptr), (void) (stream), (void) (size), (void) (n), (size_t) 0) : fwrite_unlocked (ptr, size, n, stream))))#define fread_unlocked(ptr,size,n,stream) (__extension__ ((__builtin_constant_p (size) && __builtin_constant_p (n) && (size_t) (size) * (size_t) (n) <= 8 && (size_t) (size) != 0) ? ({ char *__ptr = (char *) (ptr); FILE *__stream = (stream); size_t __cnt; for (__cnt = (size_t) (size) * (size_t) (n); __cnt > 0; --__cnt) { int __c = getc_unlocked (__stream); if (__c == EOF) break; *__ptr++ = __c; } ((size_t) (size) * (size_t) (n) - __cnt) / (size_t) (size); }) : (((__builtin_constant_p (size) && (size_t) (size) == 0) || (__builtin_constant_p (n) && (size_t) (n) == 0)) ? ((void) (ptr), (void) (stream), (void) (size), (void) (n), (size_t) 0) : fread_unlocked (ptr, size, n, stream))))#define __STDIO_INLINE __extern_inline#define _BITS_STDIO_H 1#define _STDIO_H 1#define RENAME_WHITEOUT (1 << 2)#define RENAME_EXCHANGE (1 << 1)#define RENAME_NOREPLACE (1 << 0)#define stderr stderr#define P_tmpdir "/tmp"#define SEEK_HOLE 4#define SEEK_DATA 3#define EOF (-1)#define BUFSIZ 8192#define _IONBF 2#define _IOLBF 1#define _IOFBF 0#define _VA_LIST_DEFINED#define __need___va_list#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION#define __GLIBC_USE_LIB_EXT2 1#define _WCHAR_T_DECLARED#define _GCC_WCHAR_T#define __INT_WCHAR_T_H#define ___int_wchar_t_h#define _WCHAR_T_H#define _WCHAR_T_DEFINED#define _WCHAR_T_DEFINED_#define _BSD_WCHAR_T_#define _WCHAR_T_#define __WCHAR_T#define _T_WCHAR#define _T_WCHAR_#define _WCHAR_T#define __WCHAR_T__#define __wchar_t__#define __WCHAR_TYPE__ short unsigned int#define __need_wchar_t#define __COMPAR_FN_T#define MB_CUR_MAX (__ctype_get_mb_cur_max ())#define EXIT_SUCCESS 0#define EXIT_FAILURE 1#define RAND_MAX 2147483647#define __lldiv_t_defined 1#define __ldiv_t_defined 1#define WIFCONTINUED(status) __WIFCONTINUED (status)#define WIFSTOPPED(status) __WIFSTOPPED (status)#define WIFSIGNALED(status) __WIFSIGNALED (status)#define WIFEXITED(status) __WIFEXITED (status)#define WSTOPSIG(status) __WSTOPSIG (status)#define WTERMSIG(status) __WTERMSIG (status)#define WEXITSTATUS(status) __WEXITSTATUS (status)#define _STDLIB_H 1#define __HAVE_FLOAT128X 0#define __HAVE_FLOAT64X 1#define __HAVE_FLOAT32X 1#define __HAVE_FLOAT128 1#define __HAVE_FLOAT64 1#define __HAVE_FLOAT32 1#define __HAVE_FLOAT16 0#define __GLIBC_USE_IEC_60559_TYPES_EXT 1#define __GLIBC_USE_IEC_60559_BFP_EXT 1#define __WIFCONTINUED(status) ((status) == __W_CONTINUED)#define _STRINGS_H 1#define strndupa(s,n) (__extension__ ({ const char *__old = (s); size_t __len = strnlen (__old, (n)); char *__new = (char *) __builtin_alloca (__len + 1); __new[__len] = '\0'; (char *) memcpy (__new, __old, __len); }))#define strdupa(s) (__extension__ ({ const char *__old = (s); size_t __len = strlen (__old) + 1; char *__new = (char *) __builtin_alloca (__len); (char *) memcpy (__new, __old, __len); }))#define _STRING_H 1#define IOCSIZE_SHIFT (_IOC_SIZESHIFT)#define IOCSIZE_MASK (_IOC_SIZEMASK << _IOC_SIZESHIFT)#define IOC_INOUT ((_IOC_WRITE|_IOC_READ) << _IOC_DIRSHIFT)#define IOC_OUT (_IOC_READ << _IOC_DIRSHIFT)#define IOC_IN (_IOC_WRITE << _IOC_DIRSHIFT)#define _IOC_SIZE(nr) (((nr) >> _IOC_SIZESHIFT) & _IOC_SIZEMASK)#define _IOC_NR(nr) (((nr) >> _IOC_NRSHIFT) & _IOC_NRMASK)#define _IOC_TYPE(nr) (((nr) >> _IOC_TYPESHIFT) & _IOC_TYPEMASK)#define _IOC_DIR(nr) (((nr) >> _IOC_DIRSHIFT) & _IOC_DIRMASK)#define _IOWR_BAD(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),sizeof(size))#define _IOW_BAD(type,nr,size) _IOC(_IOC_WRITE,(type),(nr),sizeof(size))#define _IOR_BAD(type,nr,size) _IOC(_IOC_READ,(type),(nr),sizeof(size))#define _IOWR(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))#define _IOW(type,nr,size) _IOC(_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))#define _IOR(type,nr,size) _IOC(_IOC_READ,(type),(nr),(_IOC_TYPECHECK(size)))#define _IO(type,nr) _IOC(_IOC_NONE,(type),(nr),0)#define _IOC_TYPECHECK(t) (sizeof(t))#define _IOC(dir,type,nr,size) (((dir) << _IOC_DIRSHIFT) | ((type) << _IOC_TYPESHIFT) | ((nr) << _IOC_NRSHIFT) | ((size) << _IOC_SIZESHIFT))#define _IOC_READ 2U#define _IOC_WRITE 1U#define _IOC_NONE 0U#define _IOC_DIRSHIFT (_IOC_SIZESHIFT+_IOC_SIZEBITS)#define _IOC_SIZESHIFT (_IOC_TYPESHIFT+_IOC_TYPEBITS)#define _IOC_TYPESHIFT (_IOC_NRSHIFT+_IOC_NRBITS)#define _IOC_NRSHIFT 0#define _IOC_DIRMASK ((1 << _IOC_DIRBITS)-1)#define _IOC_SIZEMASK ((1 << _IOC_SIZEBITS)-1)#define _IOC_TYPEMASK ((1 << _IOC_TYPEBITS)-1)#define _IOC_NRMASK ((1 << _IOC_NRBITS)-1)#define _IOC_DIRBITS 2#define _IOC_SIZEBITS 14#define _IOC_TYPEBITS 8#define _IOC_NRBITS 8#define _ASM_GENERIC_IOCTL_H#define _LINUX_IOCTL_H#define TIOCSER_TEMT 0x01#define TIOCPKT_IOCTL 64#define TIOCPKT_DOSTOP 32#define TIOCPKT_NOSTOP 16#define TIOCPKT_START 8#define TIOCPKT_STOP 4#define TIOCPKT_FLUSHWRITE 2#define TIOCPKT_FLUSHREAD 1#define TIOCPKT_DATA 0#define FIOQSIZE 0x5460#define TIOCGICOUNT 0x545D#define TIOCMIWAIT 0x545C#define TIOCSERSETMULTI 0x545B#define TIOCSERGETMULTI 0x545A#define TIOCSERGETLSR 0x5459#define TIOCSERGSTRUCT 0x5458#define TIOCSLCKTRMIOS 0x5457#define TIOCGLCKTRMIOS 0x5456#define TIOCSERSWILD 0x5455#define TIOCSERGWILD 0x5454#define TIOCSERCONFIG 0x5453#define FIOASYNC 0x5452#define FIOCLEX 0x5451#define FIONCLEX 0x5450#define TIOCGPTPEER _IO('T', 0x41)#define TIOCGEXCL _IOR('T', 0x40, int)#define TIOCGPTLCK _IOR('T', 0x39, int)#define TIOCGPKT _IOR('T', 0x38, int)#define TIOCVHANGUP 0x5437#define TIOCSIG _IOW('T', 0x36, int)#define TCSETXW 0x5435#define TCSETXF 0x5434#define TCSETX 0x5433#define TCGETX 0x5432#define TIOCGDEV _IOR('T', 0x32, unsigned int)#define TIOCSPTLCK _IOW('T', 0x31, int)#define TIOCGPTN _IOR('T', 0x30, unsigned int)#define TIOCSRS485 0x542F#define TIOCGRS485 0x542E#define TCSETSF2 _IOW('T', 0x2D, struct termios2)#define TCSETSW2 _IOW('T', 0x2C, struct termios2)#define TCSETS2 _IOW('T', 0x2B, struct termios2)#define TCGETS2 _IOR('T', 0x2A, struct termios2)#define TIOCGSID 0x5429#define TIOCCBRK 0x5428#define TIOCSBRK 0x5427#define TCSBRKP 0x5425#define TIOCGETD 0x5424#define TIOCSETD 0x5423#define TIOCNOTTY 0x5422#define FIONBIO 0x5421#define TIOCPKT 0x5420#define TIOCSSERIAL 0x541F#define TIOCGSERIAL 0x541E#define TIOCCONS 0x541D#define TIOCLINUX 0x541C#define TIOCINQ FIONREAD#define FIONREAD 0x541B#define TIOCSSOFTCAR 0x541A#define TIOCGSOFTCAR 0x5419#define TIOCMSET 0x5418#define TIOCMBIC 0x5417#define TIOCMBIS 0x5416#define TIOCMGET 0x5415#define TIOCSWINSZ 0x5414#define TIOCGWINSZ 0x5413#define TIOCSTI 0x5412#define TIOCOUTQ 0x5411#define TIOCSPGRP 0x5410#define TIOCGPGRP 0x540F#define TIOCSCTTY 0x540E#define TIOCNXCL 0x540D#define TIOCEXCL 0x540C#define TCFLSH 0x540B#define TCXONC 0x540A#define TCSBRK 0x5409#define TCSETAF 0x5408#define TCSETAW 0x5407#define TCSETA 0x5406#define TCGETA 0x5405#define TCSETSF 0x5404#define TCSETSW 0x5403#define TCSETS 0x5402#define TCGETS 0x5401#define __ASM_GENERIC_IOCTLS_H#define SIOCPROTOPRIVATE 0x89E0#define SIOCDEVPRIVATE 0x89F0#define SIOCDELDLCI 0x8981#define SIOCADDDLCI 0x8980#define SIOCSIFMAP 0x8971#define SIOCGIFMAP 0x8970#define SIOCSRARP 0x8962#define SIOCGRARP 0x8961#define SIOCDRARP 0x8960#define SIOCSARP 0x8955#define SIOCGARP 0x8954#define SIOCDARP 0x8953#define SIOCSIFTXQLEN 0x8943#define SIOCGIFTXQLEN 0x8942#define SIOCSIFBR 0x8941#define SIOCGIFBR 0x8940#define SIOCGIFCOUNT 0x8938#define SIOCSIFHWBROADCAST 0x8937#define SIOCDIFADDR 0x8936#define SIOCGIFPFLAGS 0x8935#define SIOCSIFPFLAGS 0x8934#define SIOGIFINDEX SIOCGIFINDEX#define SIOCGIFINDEX 0x8933#define SIOCDELMULTI 0x8932#define SIOCADDMULTI 0x8931#define SIOCSIFSLAVE 0x8930#define SIOCGIFSLAVE 0x8929#define SIOCGIFHWADDR 0x8927#define SIOCSIFENCAP 0x8926#define SIOCGIFENCAP 0x8925#define SIOCSIFHWADDR 0x8924#define SIOCSIFNAME 0x8923#define SIOCSIFMTU 0x8922#define SIOCGIFMTU 0x8921#define SIOCSIFMEM 0x8920#define SIOCGIFMEM 0x891f#define SIOCSIFMETRIC 0x891e#define SIOCGIFMETRIC 0x891d#define SIOCSIFNETMASK 0x891c#define SIOCGIFNETMASK 0x891b#define SIOCSIFBRDADDR 0x891a#define SIOCGIFBRDADDR 0x8919#define SIOCSIFDSTADDR 0x8918#define SIOCGIFDSTADDR 0x8917#define SIOCSIFADDR 0x8916#define SIOCGIFADDR 0x8915#define SIOCSIFFLAGS 0x8914#define SIOCGIFFLAGS 0x8913#define SIOCGIFCONF 0x8912#define SIOCSIFLINK 0x8911#define SIOCGIFNAME 0x8910#define SIOCRTMSG 0x890D#define SIOCDELRT 0x890C#define SIOCADDRT 0x890B#define _SYS_IOCTL_H 1#define NCC 8#define N_HCI 15#define N_SYNC_PPP 14#define N_HDLC 13#define N_SMSBLOCK 12#define N_IRDA 11#define N_PROFIBUS_FDL 10#define N_R3964 9#define N_MASC 8#define N_6PACK 7#define N_X25 6#define N_AX25 5#define N_STRIP 4#define N_PPP 3#define N_MOUSE 2#define N_SLIP 1#define N_TTY 0#define TIOCM_RI TIOCM_RNG#define TIOCM_CD TIOCM_CAR#define TIOCM_DSR 0x100#define TIOCM_RNG 0x080#define TIOCM_CAR 0x040#define TIOCM_CTS 0x020#define TIOCM_SR 0x010#define TIOCM_ST 0x008#define TIOCM_RTS 0x004#define TIOCM_DTR 0x002#define TIOCM_LE 0x001#define CFLUSH CDISCARD#define CRPRNT CREPRINT#define CBRK CEOL#define CEOT CEOF#define CREPRINT CTRL('r')#define CWERASE CTRL('w')#define CDISCARD CTRL('o')#define CLNEXT CTRL('v')#define CSTOP CTRL('s')#define CSTART CTRL('q')#define CDSUSP CTRL('y')#define CTIME 0#define CSUSP CTRL('z')#define CQUIT 034#define CMIN 1#define CKILL CTRL('u')#define CSTATUS '\0'#define CINTR CTRL('c')#define CERASE 0177#define CEOL '\0'#define CEOF CTRL('d')#define CTRL(x) (x&037)#define TTYDEF_SPEED (B9600)#define TTYDEF_CFLAG (CREAD | CS7 | PARENB | HUPCL)#define TTYDEF_LFLAG (ECHO | ICANON | ISIG | IEXTEN | ECHOE|ECHOKE|ECHOCTL)#define TTYDEF_OFLAG (OPOST | ONLCR | XTABS)#define TTYDEF_IFLAG (BRKINT | ISTRIP | ICRNL | IMAXBEL | IXON | IXANY)#define _SYS_TTYDEFAULTS_H_#define TEMP_FAILURE_RETRY(expression) (__extension__ ({ long int __result; do __result = (long int) (expression); while (__result == -1L && errno == EINTR); __result; }))#define L_XTND SEEK_END#define L_INCR SEEK_CUR#define L_SET SEEK_SET#define STDERR_FILENO 2#define STDOUT_FILENO 1#define STDIN_FILENO 0#define _XOPEN_LEGACY 1#define _XOPEN_ENH_I18N 1#define _XOPEN_UNIX 1#define _XOPEN_XPG4 1#define _XOPEN_XPG3 1#define _XOPEN_XPG2 1#define _XOPEN_XCU_VERSION 4#define _XOPEN_VERSION 700#define _POSIX2_LOCALEDEF __POSIX2_THIS_VERSION#define _POSIX2_SW_DEV __POSIX2_THIS_VERSION#define _POSIX2_C_DEV __POSIX2_THIS_VERSION#define _POSIX2_C_BIND __POSIX2_THIS_VERSION#define _POSIX2_C_VERSION __POSIX2_THIS_VERSION#define _POSIX2_VERSION __POSIX2_THIS_VERSION#define __POSIX2_THIS_VERSION 200809L#define _POSIX_VERSION 200809L#define _UNISTD_H 1#define __intptr_t_defined#define _ARPA_INET_H 1#define __ASM_GENERIC_BITS_PER_LONG#define __BITS_PER_LONG 64#define __ASM_X86_BITSPERLONG_H#define _ASM_GENERIC_INT_LL64_H#define _ASM_GENERIC_TYPES_H#define _ASM_X86_TYPES_H#define __ASM_GENERIC_POSIX_TYPES_H#define __kernel_old_dev_t __kernel_old_dev_t#define __kernel_old_uid_t __kernel_old_uid_t#define _ASM_X86_POSIX_TYPES_64_H#define _LINUX_POSIX_TYPES_H#define __aligned_le64 __le64 __attribute__((aligned(8)))#define __aligned_be64 __be64 __attribute__((aligned(8)))#define __aligned_u64 __u64 __attribute__((aligned(8)))#define __bitwise __bitwise__#define __bitwise__#define _LINUX_TYPES_H#define ETH_ALEN 6#define __UAPI_DEF_ETHHDR 1#define ETH_P_MAP 0x00F9#define ETH_P_XDSA 0x00F8#define ETH_P_CAIF 0x00F7#define ETH_P_IEEE802154 0x00F6#define ETH_P_PHONET 0x00F5#define ETH_P_TRAILER 0x001C#define ETH_P_DSA 0x001B#define ETH_P_ARCNET 0x001A#define ETH_P_HDLC 0x0019#define ETH_P_ECONET 0x0018#define ETH_P_IRDA 0x0017#define ETH_P_CONTROL 0x0016#define ETH_P_MOBITEX 0x0015#define ETH_P_TR_802_2 0x0011#define ETH_P_PPPTALK 0x0010#define ETH_P_CANFD 0x000D#define ETH_P_CAN 0x000C#define ETH_P_LOCALTALK 0x0009#define ETH_P_PPP_MP 0x0008#define ETH_P_WAN_PPP 0x0007#define ETH_P_DDCMP 0x0006#define ETH_P_SNAP 0x0005#define ETH_P_802_2 0x0004#define ETH_P_ALL 0x0003#define ETH_P_AX25 0x0002#define ETH_P_802_3 0x0001#define ETH_P_802_3_MIN 0x0600#define ETH_P_AF_IUCV 0xFBFB#define ETH_P_IFE 0xED3E#define ETH_P_EDSA 0xDADA#define ETH_P_QINQ3 0x9300#define ETH_P_QINQ2 0x9200#define ETH_P_QINQ1 0x9100#define ETH_P_LOOPBACK 0x9000#define ETH_P_NSH 0x894F#define ETH_P_HSR 0x892F#define ETH_P_80221 0x8917#define ETH_P_FIP 0x8914#define ETH_P_TDLS 0x890D#define ETH_P_IBOE 0x8915#define ETH_P_FCOE 0x8906#define ETH_P_PRP 0x88FB#define ETH_P_NCSI 0x88F8#define ETH_P_1588 0x88F7#define ETH_P_MVRP 0x88F5#define ETH_P_8021AH 0x88E7#define ETH_P_MACSEC 0x88E5#define ETH_P_TIPC 0x88CA#define ETH_P_PREAUTH 0x88C7#define ETH_P_802_EX1 0x88B5#define ETH_P_8021AD 0x88A8#define ETH_P_AOE 0x88A2#define ETH_P_PAE 0x888E#define ETH_P_ATMFATE 0x8884#define ETH_P_LINK_CTL 0x886c#define ETH_P_PPP_SES 0x8864#define ETH_P_PPP_DISC 0x8863#define ETH_P_ATMMPOA 0x884c#define ETH_P_MPLS_MC 0x8848#define ETH_P_MPLS_UC 0x8847#define ETH_P_WCCP 0x883E#define ETH_P_SLOW 0x8809#define ETH_P_PAUSE 0x8808#define ETH_P_IPV6 0x86DD#define ETH_P_IPX 0x8137#define ETH_P_ERSPAN 0x88BE#define ETH_P_8021Q 0x8100#define ETH_P_AARP 0x80F3#define ETH_P_ATALK 0x809B#define ETH_P_RARP 0x8035#define ETH_P_TEB 0x6558#define ETH_P_SCA 0x6007#define ETH_P_CUST 0x6006#define ETH_P_DIAG 0x6005#define ETH_P_LAT 0x6004#define ETH_P_DNA_RT 0x6003#define ETH_P_DNA_RC 0x6002#define ETH_P_DNA_DL 0x6001#define ETH_P_DEC 0x6000#define ETH_P_BATMAN 0x4305#define ETH_P_IEEEPUPAT 0x0a01#define ETH_P_IEEEPUP 0x0a00#define ETH_P_BPQ 0x08FF#define ETH_P_ARP 0x0806#define ETH_P_X25 0x0805#define ETH_P_IP 0x0800#define ETH_P_ERSPAN2 0x22EB#define ETH_P_TSN 0x22F0#define ETH_P_PUPAT 0x0201#define ETH_P_PUP 0x0200#define ETH_P_LOOP 0x0060#define ETH_MAX_MTU 0xFFFFU#define ETH_MIN_MTU 68#define ETH_FCS_LEN 4#define ETH_FRAME_LEN 1514#define ETH_DATA_LEN 1500#define ETH_ZLEN 60#define ETH_HLEN 14#define ETH_TLEN 2#define _LINUX_IF_ETHER_H#define PACKET_MR_UNICAST 3#define PACKET_MR_ALLMULTI 2#define PACKET_MR_PROMISC 1#define PACKET_MR_MULTICAST 0#define TPACKET3_HDRLEN (TPACKET_ALIGN(sizeof(struct tpacket3_hdr)) + sizeof(struct sockaddr_ll))#define TPACKET2_HDRLEN (TPACKET_ALIGN(sizeof(struct tpacket2_hdr)) + sizeof(struct sockaddr_ll))#define TPACKET_HDRLEN (TPACKET_ALIGN(sizeof(struct tpacket_hdr)) + sizeof(struct sockaddr_ll))#define TPACKET_ALIGN(x) (((x)+TPACKET_ALIGNMENT-1)&~(TPACKET_ALIGNMENT-1))#define TPACKET_ALIGNMENT 16#define TP_FT_REQ_FILL_RXHASH 0x1#define TP_STATUS_TS_RAW_HARDWARE (1 << 31)#define TP_STATUS_TS_SYS_HARDWARE (1 << 30)#define TP_STATUS_TS_SOFTWARE (1 << 29)#define TP_STATUS_WRONG_FORMAT (1 << 2)#define TP_STATUS_SENDING (1 << 1)#define TP_STATUS_SEND_REQUEST (1 << 0)#define TP_STATUS_AVAILABLE 0#define TP_STATUS_CSUM_VALID (1 << 7)#define TP_STATUS_VLAN_TPID_VALID (1 << 6)#define TP_STATUS_BLK_TMO (1 << 5)#define TP_STATUS_VLAN_VALID (1 << 4)#define TP_STATUS_CSUMNOTREADY (1 << 3)#define TP_STATUS_LOSING (1 << 2)#define TP_STATUS_COPY (1 << 1)#define TP_STATUS_USER (1 << 0)#define TP_STATUS_KERNEL 0#define PACKET_FANOUT_FLAG_DEFRAG 0x8000#define PACKET_FANOUT_FLAG_UNIQUEID 0x2000#define PACKET_FANOUT_FLAG_ROLLOVER 0x1000#define PACKET_FANOUT_EBPF 7#define PACKET_FANOUT_CBPF 6#define PACKET_FANOUT_QM 5#define PACKET_FANOUT_RND 4#define PACKET_FANOUT_ROLLOVER 3#define PACKET_FANOUT_CPU 2#define PACKET_FANOUT_LB 1#define PACKET_FANOUT_HASH 0#define PACKET_FANOUT_DATA 22#define PACKET_ROLLOVER_STATS 21#define PACKET_QDISC_BYPASS 20#define PACKET_TX_HAS_OFF 19#define PACKET_FANOUT 18#define PACKET_TIMESTAMP 17#define PACKET_TX_TIMESTAMP 16#define PACKET_VNET_HDR 15#define PACKET_LOSS 14#define PACKET_TX_RING 13#define PACKET_RESERVE 12#define PACKET_HDRLEN 11#define PACKET_VERSION 10#define PACKET_ORIGDEV 9#define PACKET_AUXDATA 8#define PACKET_COPY_THRESH 7#define PACKET_STATISTICS 6#define PACKET_RX_RING 5#define PACKET_RECV_OUTPUT 3#define PACKET_DROP_MEMBERSHIP 2#define PACKET_ADD_MEMBERSHIP 1#define PACKET_FASTROUTE 6#define PACKET_KERNEL 7#define PACKET_USER 6#define PACKET_LOOPBACK 5#define PACKET_OUTGOING 4#define PACKET_OTHERHOST 3#define PACKET_MULTICAST 2#define PACKET_BROADCAST 1#define PACKET_HOST 0#define __LINUX_IF_PACKET_H#define errno (*__errno_location ())#define EAGAIN 11#define _DIRENT_MATCHES_DIRENT64 1#define _DIRENT_HAVE_D_TYPE#define _DIRENT_HAVE_D_OFF#define _DIRENT_HAVE_D_RECLEN#define d_fileno d_ino#define __INO_T_MATCHES_INO64_T 1#define __OFF_T_MATCHES_OFF64_T 1#define _DIRENT_H 1#define SSIZE_MAX LONG_MAX#define _POSIX_CLOCKRES_MIN 20000000#define _POSIX_UIO_MAXIOV 16#define _POSIX_HIWAT _POSIX_PIPE_BUF#define _POSIX_QLIMIT 1#define _POSIX_TZNAME_MAX 6#define _POSIX_TTY_NAME_MAX 9#define _POSIX_TIMER_MAX 32#define _POSIX_SYMLOOP_MAX 8#define _POSIX_SYMLINK_MAX 255#define _POSIX_STREAM_MAX 8#define _POSIX_SSIZE_MAX 32767#define _POSIX_SIGQUEUE_MAX 32#define _POSIX_SEM_VALUE_MAX 32767#define _POSIX_SEM_NSEMS_MAX 256#define _POSIX_RTSIG_MAX 8#define _POSIX_RE_DUP_MAX 255#define _POSIX_PIPE_BUF 512#define _POSIX_PATH_MAX 256#define _POSIX_FD_SETSIZE _POSIX_OPEN_MAX#define _POSIX_OPEN_MAX 20#define _POSIX_NGROUPS_MAX 8#define _POSIX_NAME_MAX 14#define _POSIX_MQ_PRIO_MAX 32#define _POSIX_MQ_OPEN_MAX 8#define _POSIX_MAX_INPUT 255#define _POSIX_MAX_CANON 255#define _POSIX_LOGIN_NAME_MAX 9#define _POSIX_LINK_MAX 8#define _POSIX_HOST_NAME_MAX 255#define _POSIX_DELAYTIMER_MAX 32#define _POSIX_CHILD_MAX 25#define _POSIX_ARG_MAX 4096#define _POSIX_AIO_MAX 1#define _POSIX_AIO_LISTIO_MAX 2#define _BITS_POSIX1_LIM_H 1#define NGROUPS_MAX 65536#define __WORDSIZE 64#define MAXNAMLEN NAME_MAX#define DTTOIF(dirtype) ((dirtype) << 12)#define IFTODT(mode) (((mode) & 0170000) >> 12)#define DT_WHT DT_WHT#define DT_SOCK DT_SOCK#define DT_LNK DT_LNK#define DT_REG DT_REG#define DT_BLK DT_BLK#define DT_DIR DT_DIR#define DT_CHR DT_CHR#define DT_FIFO DT_FIFO#define DT_UNKNOWN DT_UNKNOWN#define _D_ALLOC_NAMLEN(d) (((char *) (d) + (d)->d_reclen) - &(d)->d_name[0])#define _D_EXACT_NAMLEN(d) (strlen ((d)->d_name))#define NAME_MAX 255#define _BITS_SETJMP_H 1#define _SETJMP_H 1#define sigsetjmp(env,savemask) __sigsetjmp (env, savemask)#define setjmp(env) _setjmp (env)#define NCCS 32#define _IOT_termios _IOT (_IOTS (cflag_t), 4, _IOTS (cc_t), NCCS, _IOTS (speed_t), 2)#define TCSAFLUSH 2#define TCSADRAIN 1#define TCSANOW 0#define TCIOFLUSH 2#define TCOFLUSH 1#define TCIFLUSH 0#define TCION 3#define TCIOFF 2#define TCOON 1#define TCOOFF 0#define EXTPROC 0200000#define IEXTEN 0100000#define PENDIN 0040000#define FLUSHO 0010000#define ECHOKE 0004000#define ECHOPRT 0002000#define ECHOCTL 0001000#define TOSTOP 0000400#define NOFLSH 0000200#define ECHONL 0000100#define ECHOK 0000040#define ECHOE 0000020#define ECHO 0000010#define XCASE 0000004#define ICANON 0000002#define ISIG 0000001#define CRTSCTS 020000000000#define CMSPAR 010000000000#define CIBAUD 002003600000#define __MAX_BAUD B4000000#define B4000000 0010017#define B3500000 0010016#define B3000000 0010015#define B2500000 0010014#define B2000000 0010013#define B1500000 0010012#define B1152000 0010011#define B1000000 0010010#define B921600 0010007#define B576000 0010006#define B500000 0010005#define B460800 0010004#define B230400 0010003#define B115200 0010002#define B57600 0010001#define CBAUDEX 0010000#define CLOCAL 0004000#define HUPCL 0002000#define PARODD 0001000#define PARENB 0000400#define CREAD 0000200#define CSTOPB 0000100#define CS8 0000060#define CS7 0000040#define CS6 0000020#define CS5 0000000#define CSIZE 0000060#define EXTB B38400#define EXTA B19200#define B38400 0000017#define B19200 0000016#define B9600 0000015#define B4800 0000014#define B2400 0000013#define B1800 0000012#define B1200 0000011#define B600 0000010#define B300 0000007#define B200 0000006#define B150 0000005#define B134 0000004#define B110 0000003#define B75 0000002#define B50 0000001#define B0 0000000#define CBAUD 0010017#define XTABS 0014000#define VT1 0040000#define VT0 0000000#define VTDLY 0040000#define FF1 0100000#define FF0 0000000#define FFDLY 0100000#define BS1 0020000#define BS0 0000000#define BSDLY 0020000#define TAB3 0014000#define TAB2 0010000#define TAB1 0004000#define TAB0 0000000#define TABDLY 0014000#define CR3 0003000#define CR2 0002000#define CR1 0001000#define CR0 0000000#define CRDLY 0003000#define NL1 0000400#define NL0 0000000#define NLDLY 0000400#define OFDEL 0000200#define OFILL 0000100#define ONLRET 0000040#define ONOCR 0000020#define OCRNL 0000010#define ONLCR 0000004#define OLCUC 0000002#define OPOST 0000001#define IUTF8 0040000#define IMAXBEL 0020000#define IXOFF 0010000#define IXANY 0004000#define IXON 0002000#define IUCLC 0001000#define ICRNL 0000400#define IGNCR 0000200#define INLCR 0000100#define ISTRIP 0000040#define INPCK 0000020#define PARMRK 0000010#define IGNPAR 0000004#define BRKINT 0000002#define IGNBRK 0000001#define VEOL2 16#define VLNEXT 15#define VWERASE 14#define VDISCARD 13#define VREPRINT 12#define VEOL 11#define VSUSP 10#define VSTOP 9#define VSTART 8#define VSWTC 7#define VMIN 6#define VTIME 5#define VEOF 4#define VKILL 3#define VERASE 2#define VQUIT 1#define VINTR 0#define _HAVE_STRUCT_TERMIOS_C_OSPEED 1#define _HAVE_STRUCT_TERMIOS_C_ISPEED 1#define _TERMIOS_H 1#define CCEQ(val,c) ((c) == (val) && (val) != _POSIX_VDISABLE)#define STA_RONLY (STA_PPSSIGNAL | STA_PPSJITTER | STA_PPSWANDER | STA_PPSERROR | STA_CLOCKERR | STA_NANO | STA_MODE | STA_CLK)#define STA_CLK 0x8000#define STA_MODE 0x4000#define STA_NANO 0x2000#define STA_CLOCKERR 0x1000#define STA_PPSERROR 0x0800#define STA_PPSWANDER 0x0400#define STA_PPSJITTER 0x0200#define STA_PPSSIGNAL 0x0100#define STA_FREQHOLD 0x0080#define STA_UNSYNC 0x0040#define STA_DEL 0x0020#define STA_INS 0x0010#define STA_FLL 0x0008#define STA_PPSTIME 0x0004#define STA_PPSFREQ 0x0002#define STA_PLL 0x0001#define MOD_NANO ADJ_NANO#define MOD_MICRO ADJ_MICRO#define MOD_TAI ADJ_TAI#define MOD_CLKA ADJ_OFFSET_SINGLESHOT#define MOD_CLKB ADJ_TICK#define MOD_TIMECONST ADJ_TIMECONST#define MOD_STATUS ADJ_STATUS#define MOD_ESTERROR ADJ_ESTERROR#define MOD_MAXERROR ADJ_MAXERROR#define MOD_FREQUENCY ADJ_FREQUENCY#define MOD_OFFSET ADJ_OFFSET#define ADJ_OFFSET_SS_READ 0xa001#define ADJ_OFFSET_SINGLESHOT 0x8001#define ADJ_TICK 0x4000#define ADJ_NANO 0x2000#define ADJ_MICRO 0x1000#define ADJ_SETOFFSET 0x0100#define ADJ_TAI 0x0080#define ADJ_TIMECONST 0x0020#define ADJ_STATUS 0x0010#define ADJ_ESTERROR 0x0008#define ADJ_MAXERROR 0x0004#define ADJ_FREQUENCY 0x0002#define ADJ_OFFSET 0x0001#define _BITS_TIMEX_H 1#define TIMER_ABSTIME 1#define CLOCK_TAI 11#define CLOCK_BOOTTIME_ALARM 9#define CLOCK_REALTIME_ALARM 8#define CLOCK_BOOTTIME 7#define CLOCK_MONOTONIC_COARSE 6#define CLOCK_REALTIME_COARSE 5#define CLOCK_MONOTONIC_RAW 4#define CLOCK_THREAD_CPUTIME_ID 3#define CLOCK_PROCESS_CPUTIME_ID 2#define CLOCK_MONOTONIC 1#define CLOCK_REALTIME 0#define CLOCKS_PER_SEC ((__clock_t) 1000000)#define _BITS_TIME_H 1#define __struct_tm_defined 1#define __itimerspec_defined 1#define __isleap(year) ((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))#define TIME_UTC 1#define _TIME_H 1#define _GETOPT_POSIX_H 1#define _GETOPT_H 1#define PKEY_DISABLE_WRITE 0x2#define PKEY_DISABLE_ACCESS 0x1#define MLOCK_ONFAULT 1U#define MFD_HUGETLB 4U#define MFD_ALLOW_SEALING 2U#define MFD_CLOEXEC 1U#define _SYS_MMAN_H 1#define MCL_ONFAULT 4#define MCL_FUTURE 2#define MCL_CURRENT 1#define POSIX_MADV_DONTNEED 4#define POSIX_MADV_WILLNEED 3#define POSIX_MADV_SEQUENTIAL 2#define POSIX_MADV_RANDOM 1#define POSIX_MADV_NORMAL 0#define MADV_HWPOISON 100#define MADV_KEEPONFORK 19#define MADV_WIPEONFORK 18#define MADV_DODUMP 17#define MADV_DONTDUMP 16#define MADV_NOHUGEPAGE 15#define MADV_HUGEPAGE 14#define MADV_UNMERGEABLE 13#define MADV_MERGEABLE 12#define MADV_DOFORK 11#define MADV_DONTFORK 10#define MADV_REMOVE 9#define MADV_FREE 8#define MADV_DONTNEED 4#define MADV_WILLNEED 3#define MADV_SEQUENTIAL 2#define MADV_RANDOM 1#define MADV_NORMAL 0#define MREMAP_FIXED 2#define MREMAP_MAYMOVE 1#define MS_INVALIDATE 2#define MS_SYNC 4#define MS_ASYNC 1#define MAP_HUGE_MASK 0x3f#define MAP_HUGE_SHIFT 26#define MAP_ANON MAP_ANONYMOUS#define MAP_ANONYMOUS 0x20#define MAP_FILE 0#define MAP_FIXED 0x10#define MAP_TYPE 0x0f#define MAP_SHARED_VALIDATE 0x03#define MAP_PRIVATE 0x02#define MAP_SHARED 0x01#define PROT_GROWSUP 0x02000000#define PROT_GROWSDOWN 0x01000000#define PROT_NONE 0x0#define PROT_EXEC 0x4#define PROT_WRITE 0x2#define PROT_READ 0x1#define MAP_FIXED_NOREPLACE 0x100000#define MAP_SYNC 0x80000#define MAP_HUGETLB 0x40000#define MAP_STACK 0x20000#define MAP_NONBLOCK 0x10000#define MAP_POPULATE 0x08000#define MAP_NORESERVE 0x04000#define MAP_LOCKED 0x02000#define MAP_EXECUTABLE 0x01000#define MAP_DENYWRITE 0x00800#define MAP_GROWSDOWN 0x00100#define MAP_32BIT 0x40#define MAP_FAILED ((void *) -1)#define _SYS_STAT_H 1#define STATX_ATTR_AUTOMOUNT 0x1000#define STATX_ATTR_ENCRYPTED 0x0800#define STATX_ATTR_NODUMP 0x0040#define STATX_ATTR_APPEND 0x0020#define STATX_ATTR_IMMUTABLE 0x0010#define STATX_ATTR_COMPRESSED 0x0004#define STATX__RESERVED 0x80000000U#define STATX_BTIME 0x0800U#define STATX_ALL 0x0fffU#define STATX_BASIC_STATS 0x07ffU#define STATX_BLOCKS 0x0400U#define STATX_SIZE 0x0200U#define STATX_INO 0x0100U#define STATX_CTIME 0x0080U#define STATX_MTIME 0x0040U#define STATX_ATIME 0x0020U#define STATX_GID 0x0010U#define STATX_UID 0x0008U#define STATX_NLINK 0x0004U#define STATX_MODE 0x0002U#define STATX_TYPE 0x0001U#define _MKNOD_VER 0#define S_BLKSIZE 512#define DEFFILEMODE (S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)#define ALLPERMS (S_ISUID|S_ISGID|S_ISVTX|S_IRWXU|S_IRWXG|S_IRWXO)#define ACCESSPERMS (S_IRWXU|S_IRWXG|S_IRWXO)#define S_IEXEC S_IXUSR#define S_IWRITE S_IWUSR#define S_IREAD S_IRUSR#define S_TYPEISSHM(buf) __S_TYPEISSHM(buf)#define S_TYPEISSEM(buf) __S_TYPEISSEM(buf)#define S_TYPEISMQ(buf) __S_TYPEISMQ(buf)#define S_ISSOCK(mode) __S_ISTYPE((mode), __S_IFSOCK)#define S_ISLNK(mode) __S_ISTYPE((mode), __S_IFLNK)#define S_ISFIFO(mode) __S_ISTYPE((mode), __S_IFIFO)#define S_ISREG(mode) __S_ISTYPE((mode), __S_IFREG)#define S_ISBLK(mode) __S_ISTYPE((mode), __S_IFBLK)#define S_ISCHR(mode) __S_ISTYPE((mode), __S_IFCHR)#define S_ISDIR(mode) __S_ISTYPE((mode), __S_IFDIR)#define __S_ISTYPE(mode,mask) (((mode) & __S_IFMT) == (mask))#define timersub(a,b,result) do { (result)->tv_sec = (a)->tv_sec - (b)->tv_sec; (result)->tv_usec = (a)->tv_usec - (b)->tv_usec; if ((result)->tv_usec < 0) { --(result)->tv_sec; (result)->tv_usec += 1000000; } } while (0)#define timeradd(a,b,result) do { (result)->tv_sec = (a)->tv_sec + (b)->tv_sec; (result)->tv_usec = (a)->tv_usec + (b)->tv_usec; if ((result)->tv_usec >= 1000000) { ++(result)->tv_sec; (result)->tv_usec -= 1000000; } } while (0)#define timercmp(a,b,CMP) (((a)->tv_sec == (b)->tv_sec) ? ((a)->tv_usec CMP (b)->tv_usec) : ((a)->tv_sec CMP (b)->tv_sec))#define timerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0)#define timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)#define ITIMER_PROF ITIMER_PROF#define ITIMER_VIRTUAL ITIMER_VIRTUAL#define ITIMER_REAL ITIMER_REAL#define TIMESPEC_TO_TIMEVAL(tv,ts) { (tv)->tv_sec = (ts)->tv_sec; (tv)->tv_usec = (ts)->tv_nsec / 1000; }#define TIMEVAL_TO_TIMESPEC(tv,ts) { (ts)->tv_sec = (tv)->tv_sec; (ts)->tv_nsec = (tv)->tv_usec * 1000; }#define _SYS_TIME_H 1#define dereference_function_descriptor(p) (p)#define _ASM_GENERIC_SECTIONS_H_#define __SANDBOX_SECTIONS_H#define LIST_POISON1 ((void *) 0x0)#define LIST_POISON2 ((void *) 0x0)#define hlist_for_each_entry_safe(tpos,pos,n,head,member) for (pos = (head)->first; pos && ({ n = pos->next; 1; }) && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); pos = n)#define hlist_for_each_entry_from(tpos,pos,member) for (; pos && ({ prefetch(pos->next); 1;}) && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); pos = pos->next)#define hlist_for_each_entry_continue(tpos,pos,member) for (pos = (pos)->next; pos && ({ prefetch(pos->next); 1;}) && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); pos = pos->next)#define hlist_for_each_entry(tpos,pos,head,member) for (pos = (head)->first; pos && ({ prefetch(pos->next); 1;}) && ({ tpos = hlist_entry(pos, typeof(*tpos), member); 1;}); pos = pos->next)#define hlist_for_each_safe(pos,n,head) for (pos = (head)->first; pos && ({ n = pos->next; 1; }); pos = n)#define hlist_for_each(pos,head) for (pos = (head)->first; pos && ({ prefetch(pos->next); 1; }); pos = pos->next)#define hlist_entry(ptr,type,member) container_of(ptr,type,member)#define INIT_HLIST_HEAD(ptr) ((ptr)->first = NULL)#define HLIST_HEAD(name) struct hlist_head name = { .first = NULL }#define HLIST_HEAD_INIT { .first = NULL }#define list_for_each_entry_safe_reverse(pos,n,head,member) for (pos = list_entry((head)->prev, typeof(*pos), member), n = list_entry(pos->member.prev, typeof(*pos), member); &pos->member != (head); pos = n, n = list_entry(n->member.prev, typeof(*n), member))#define list_for_each_entry_safe_from(pos,n,head,member) for (n = list_entry(pos->member.next, typeof(*pos), member); &pos->member != (head); pos = n, n = list_entry(n->member.next, typeof(*n), member))#define list_for_each_entry_safe_continue(pos,n,head,member) for (pos = list_entry(pos->member.next, typeof(*pos), member), n = list_entry(pos->member.next, typeof(*pos), member); &pos->member != (head); pos = n, n = list_entry(n->member.next, typeof(*n), member))#define list_for_each_entry_safe(pos,n,head,member) for (pos = list_entry((head)->next, typeof(*pos), member), n = list_entry(pos->member.next, typeof(*pos), member); &pos->member != (head); pos = n, n = list_entry(n->member.next, typeof(*n), member))#define list_for_each_entry_from(pos,head,member) for (; prefetch(pos->member.next), &pos->member != (head); pos = list_entry(pos->member.next, typeof(*pos), member))#define list_for_each_entry_continue_reverse(pos,head,member) for (pos = list_entry(pos->member.prev, typeof(*pos), member); prefetch(pos->member.prev), &pos->member != (head); pos = list_entry(pos->member.prev, typeof(*pos), member))#define list_for_each_entry_continue(pos,head,member) for (pos = list_entry(pos->member.next, typeof(*pos), member); prefetch(pos->member.next), &pos->member != (head); pos = list_entry(pos->member.next, typeof(*pos), member))#define list_prepare_entry(pos,head,member) ((pos) ? : list_entry(head, typeof(*pos), member))#define list_for_each_entry_reverse(pos,head,member) for (pos = list_entry((head)->prev, typeof(*pos), member); prefetch(pos->member.prev), &pos->member != (head); pos = list_entry(pos->member.prev, typeof(*pos), member))#define list_for_each_prev_safe(pos,n,head) for (pos = (head)->prev, n = pos->prev; prefetch(pos->prev), pos != (head); pos = n, n = pos->prev)#define list_for_each_safe(pos,n,head) for (pos = (head)->next, n = pos->next; pos != (head); pos = n, n = pos->next)#define list_for_each_prev(pos,head) for (pos = (head)->prev; prefetch(pos->prev), pos != (head); pos = pos->prev)#define __list_for_each(pos,head) for (pos = (head)->next; pos != (head); pos = pos->next)#define list_for_each(pos,head) for (pos = (head)->next; prefetch(pos->next), pos != (head); pos = pos->next)#define list_last_entry(ptr,type,member) list_entry((ptr)->prev, type, member)#define list_first_entry(ptr,type,member) list_entry((ptr)->next, type, member)#define LIST_HEAD(name) struct list_head name = LIST_HEAD_INIT(name)#define LIST_HEAD_INIT(name) { &(name), &(name) }#define ARCH_HAS_PREFETCH#define _LINUX_LIST_H#define __rtc_def_h#define ENOSPC 28#define ENOENT 2#define ENOEXEC 8#define required_argument 1#define no_argument 0#define _POSIX_MONOTONIC_CLOCK 0#define true 1#define false 0#define CSTATUS _POSIX_VDISABLE#define CEOL _POSIX_VDISABLE#define _POSIX_VDISABLE '\0'#define SND_CNT (SND_MAX+1)#define SND_MAX 0x07#define SND_TONE 0x02#define SND_BELL 0x01#define SND_CLICK 0x00#define REP_CNT (REP_MAX+1)#define REP_MAX 0x01#define REP_PERIOD 0x01#define REP_DELAY 0x00#define LED_CNT (LED_MAX+1)#define LED_MAX 0x0f#define LED_CHARGING 0x0a#define LED_MAIL 0x09#define LED_MISC 0x08#define LED_MUTE 0x07#define LED_SUSPEND 0x06#define LED_SLEEP 0x05#define LED_KANA 0x04#define LED_COMPOSE 0x03#define LED_SCROLLL 0x02#define LED_CAPSL 0x01#define LED_NUML 0x00#define MSC_CNT (MSC_MAX+1)#define MSC_MAX 0x07#define MSC_TIMESTAMP 0x05#define MSC_SCAN 0x04#define MSC_RAW 0x03#define MSC_GESTURE 0x02#define MSC_PULSELED 0x01#define MSC_SERIAL 0x00#define SW_CNT (SW_MAX+1)#define SW_MAX 0x0f#define SW_PEN_INSERTED 0x0f#define SW_MUTE_DEVICE 0x0e#define SW_LINEIN_INSERT 0x0d#define SW_ROTATE_LOCK 0x0c#define SW_FRONT_PROXIMITY 0x0b#define SW_KEYPAD_SLIDE 0x0a#define SW_CAMERA_LENS_COVER 0x09#define SW_VIDEOOUT_INSERT 0x08#define SW_JACK_PHYSICAL_INSERT 0x07#define SW_LINEOUT_INSERT 0x06#define SW_DOCK 0x05#define SW_MICROPHONE_INSERT 0x04#define SW_RADIO SW_RFKILL_ALL#define SW_RFKILL_ALL 0x03#define SW_HEADPHONE_INSERT 0x02#define SW_TABLET_MODE 0x01#define SW_LID 0x00#define ABS_CNT (ABS_MAX+1)#define ABS_MAX 0x3f#define ABS_MT_TOOL_Y 0x3d#define ABS_MT_TOOL_X 0x3c#define ABS_MT_DISTANCE 0x3b#define ABS_MT_PRESSURE 0x3a#define ABS_MT_TRACKING_ID 0x39#define ABS_MT_BLOB_ID 0x38#define ABS_MT_TOOL_TYPE 0x37#define ABS_MT_POSITION_Y 0x36#define ABS_MT_POSITION_X 0x35#define ABS_MT_ORIENTATION 0x34#define ABS_MT_WIDTH_MINOR 0x33#define ABS_MT_WIDTH_MAJOR 0x32#define ABS_MT_TOUCH_MINOR 0x31#define ABS_MT_TOUCH_MAJOR 0x30#define ABS_MT_SLOT 0x2f#define ABS_MISC 0x28#define ABS_VOLUME 0x20#define ABS_TOOL_WIDTH 0x1c#define ABS_TILT_Y 0x1b#define ABS_TILT_X 0x1a#define ABS_DISTANCE 0x19#define ABS_PRESSURE 0x18#define ABS_HAT3Y 0x17#define ABS_HAT3X 0x16#define ABS_HAT2Y 0x15#define ABS_HAT2X 0x14#define ABS_HAT1Y 0x13#define ABS_HAT1X 0x12#define ABS_HAT0Y 0x11#define ABS_HAT0X 0x10#define ABS_BRAKE 0x0a#define ABS_GAS 0x09#define ABS_WHEEL 0x08#define ABS_RUDDER 0x07#define ABS_THROTTLE 0x06#define ABS_RZ 0x05#define ABS_RY 0x04#define ABS_RX 0x03#define ABS_Z 0x02#define ABS_Y 0x01#define ABS_X 0x00#define REL_CNT (REL_MAX+1)#define REL_MAX 0x0f#define REL_MISC 0x09#define REL_WHEEL 0x08#define REL_DIAL 0x07#define REL_HWHEEL 0x06#define REL_RZ 0x05#define REL_RY 0x04#define REL_RX 0x03#define REL_Z 0x02#define REL_Y 0x01#define REL_X 0x00#define KEY_CNT (KEY_MAX+1)#define KEY_MAX 0x2ff#define KEY_MIN_INTERESTING KEY_MUTE#define BTN_TRIGGER_HAPPY40 0x2e7#define BTN_TRIGGER_HAPPY39 0x2e6#define BTN_TRIGGER_HAPPY38 0x2e5#define BTN_TRIGGER_HAPPY37 0x2e4#define BTN_TRIGGER_HAPPY36 0x2e3#define BTN_TRIGGER_HAPPY35 0x2e2#define BTN_TRIGGER_HAPPY34 0x2e1#define BTN_TRIGGER_HAPPY33 0x2e0#define BTN_TRIGGER_HAPPY32 0x2df#define BTN_TRIGGER_HAPPY31 0x2de#define BTN_TRIGGER_HAPPY30 0x2dd#define BTN_TRIGGER_HAPPY29 0x2dc#define BTN_TRIGGER_HAPPY28 0x2db#define BTN_TRIGGER_HAPPY27 0x2da#define BTN_TRIGGER_HAPPY26 0x2d9#define BTN_TRIGGER_HAPPY25 0x2d8#define BTN_TRIGGER_HAPPY24 0x2d7#define BTN_TRIGGER_HAPPY23 0x2d6#define BTN_TRIGGER_HAPPY22 0x2d5#define BTN_TRIGGER_HAPPY21 0x2d4#define BTN_TRIGGER_HAPPY20 0x2d3#define BTN_TRIGGER_HAPPY19 0x2d2#define BTN_TRIGGER_HAPPY18 0x2d1#define BTN_TRIGGER_HAPPY17 0x2d0#define BTN_TRIGGER_HAPPY16 0x2cf#define BTN_TRIGGER_HAPPY15 0x2ce#define BTN_TRIGGER_HAPPY14 0x2cd#define BTN_TRIGGER_HAPPY13 0x2cc#define BTN_TRIGGER_HAPPY12 0x2cb#define BTN_TRIGGER_HAPPY11 0x2ca#define BTN_TRIGGER_HAPPY10 0x2c9#define BTN_TRIGGER_HAPPY9 0x2c8#define BTN_TRIGGER_HAPPY8 0x2c7#define BTN_TRIGGER_HAPPY7 0x2c6#define BTN_TRIGGER_HAPPY6 0x2c5#define BTN_TRIGGER_HAPPY5 0x2c4#define BTN_TRIGGER_HAPPY4 0x2c3#define BTN_TRIGGER_HAPPY3 0x2c2#define BTN_TRIGGER_HAPPY2 0x2c1#define BTN_TRIGGER_HAPPY1 0x2c0#define BTN_TRIGGER_HAPPY 0x2c0#define KEY_ONSCREEN_KEYBOARD 0x278#define KEY_DATA 0x277#define KEY_SLOWREVERSE 0x276#define KEY_FASTREVERSE 0x275#define KEY_UNMUTE 0x274#define KEY_VOD 0x273#define KEY_PAUSE_RECORD 0x272#define KEY_STOP_RECORD 0x271#define KEY_NEXT_FAVORITE 0x270#define KEY_3D_MODE 0x26f#define KEY_AUDIO_DESC 0x26e#define KEY_NUMERIC_12 0x26d#define KEY_NUMERIC_11 0x26c#define KEY_MEDIA_TOP_MENU 0x26b#define KEY_ROOT_MENU 0x26a#define KEY_LEFT_DOWN 0x269#define KEY_LEFT_UP 0x268#define KEY_RIGHT_DOWN 0x267#define KEY_RIGHT_UP 0x266#define KEY_KBDINPUTASSIST_CANCEL 0x265#define KEY_KBDINPUTASSIST_ACCEPT 0x264#define KEY_KBDINPUTASSIST_NEXTGROUP 0x263#define KEY_KBDINPUTASSIST_PREVGROUP 0x262#define KEY_KBDINPUTASSIST_NEXT 0x261#define KEY_KBDINPUTASSIST_PREV 0x260#define KEY_BRIGHTNESS_MAX 0x251#define KEY_BRIGHTNESS_MIN 0x250#define KEY_ASSISTANT 0x247#define KEY_VOICECOMMAND 0x246#define KEY_SCREENSAVER 0x245#define KEY_APPSELECT 0x244#define KEY_CONTROLPANEL 0x243#define KEY_JOURNAL 0x242#define KEY_TASKMANAGER 0x241#define KEY_BUTTONCONFIG 0x240#define KEY_ROTATE_LOCK_TOGGLE 0x231#define KEY_ALS_TOGGLE 0x230#define BTN_DPAD_RIGHT 0x223#define BTN_DPAD_LEFT 0x222#define BTN_DPAD_DOWN 0x221#define BTN_DPAD_UP 0x220#define KEY_LIGHTS_TOGGLE 0x21e#define KEY_ATTENDANT_TOGGLE 0x21d#define KEY_ATTENDANT_OFF 0x21c#define KEY_ATTENDANT_ON 0x21b#define KEY_CAMERA_RIGHT 0x21a#define KEY_CAMERA_LEFT 0x219#define KEY_CAMERA_DOWN 0x218#define KEY_CAMERA_UP 0x217#define KEY_CAMERA_ZOOMOUT 0x216#define KEY_CAMERA_ZOOMIN 0x215#define KEY_TOUCHPAD_OFF 0x214#define KEY_TOUCHPAD_ON 0x213#define KEY_TOUCHPAD_TOGGLE 0x212#define KEY_WPS_BUTTON 0x211#define KEY_CAMERA_FOCUS 0x210#define KEY_NUMERIC_D 0x20f#define KEY_NUMERIC_C 0x20e#define KEY_NUMERIC_B 0x20d#define KEY_NUMERIC_A 0x20c#define KEY_NUMERIC_POUND 0x20b#define KEY_NUMERIC_STAR 0x20a#define KEY_NUMERIC_9 0x209#define KEY_NUMERIC_8 0x208#define KEY_NUMERIC_7 0x207#define KEY_NUMERIC_6 0x206#define KEY_NUMERIC_5 0x205#define KEY_NUMERIC_4 0x204#define KEY_NUMERIC_3 0x203#define KEY_NUMERIC_2 0x202#define KEY_NUMERIC_1 0x201#define KEY_NUMERIC_0 0x200#define KEY_BRL_DOT10 0x1fa#define KEY_BRL_DOT9 0x1f9#define KEY_BRL_DOT8 0x1f8#define KEY_BRL_DOT7 0x1f7#define KEY_BRL_DOT6 0x1f6#define KEY_BRL_DOT5 0x1f5#define KEY_BRL_DOT4 0x1f4#define KEY_BRL_DOT3 0x1f3#define KEY_BRL_DOT2 0x1f2#define KEY_BRL_DOT1 0x1f1#define KEY_FN_B 0x1e4#define KEY_FN_S 0x1e3#define KEY_FN_F 0x1e2#define KEY_FN_E 0x1e1#define KEY_FN_D 0x1e0#define KEY_FN_2 0x1df#define KEY_FN_1 0x1de#define KEY_FN_F12 0x1dd#define KEY_FN_F11 0x1dc#define KEY_FN_F10 0x1db#define KEY_FN_F9 0x1da#define KEY_FN_F8 0x1d9#define KEY_FN_F7 0x1d8#define KEY_FN_F6 0x1d7#define KEY_FN_F5 0x1d6#define KEY_FN_F4 0x1d5#define KEY_FN_F3 0x1d4#define KEY_FN_F2 0x1d3#define KEY_FN_F1 0x1d2#define KEY_FN_ESC 0x1d1#define KEY_FN 0x1d0#define KEY_DEL_LINE 0x1c3#define KEY_INS_LINE 0x1c2#define KEY_DEL_EOS 0x1c1#define KEY_DEL_EOL 0x1c0#define KEY_IMAGES 0x1ba#define KEY_10CHANNELSDOWN 0x1b9#define KEY_10CHANNELSUP 0x1b8#define KEY_MEDIA_REPEAT 0x1b7#define KEY_CONTEXT_MENU 0x1b6#define KEY_FRAMEFORWARD 0x1b5#define KEY_FRAMEBACK 0x1b4#define KEY_EURO 0x1b3#define KEY_DOLLAR 0x1b2#define KEY_LOGOFF 0x1b1#define KEY_SPELLCHECK 0x1b0#define KEY_BRIGHTNESS_TOGGLE KEY_DISPLAYTOGGLE#define KEY_DISPLAYTOGGLE 0x1af#define KEY_MESSENGER 0x1ae#define KEY_ADDRESSBOOK 0x1ad#define KEY_VOICEMAIL 0x1ac#define KEY_NEWS 0x1ab#define KEY_DATABASE 0x1aa#define KEY_PRESENTATION 0x1a9#define KEY_GRAPHICSEDITOR 0x1a8#define KEY_SPREADSHEET 0x1a7#define KEY_EDITOR 0x1a6#define KEY_WORDPROCESSOR 0x1a5#define KEY_ZOOMRESET 0x1a4#define KEY_ZOOMOUT 0x1a3#define KEY_ZOOMIN 0x1a2#define KEY_GAMES 0x1a1#define KEY_VIDEOPHONE 0x1a0#define KEY_TWEN 0x19f#define KEY_TEEN 0x19e#define KEY_DIGITS 0x19d#define KEY_PREVIOUS 0x19c#define KEY_BREAK 0x19b#define KEY_SHUFFLE 0x19a#define KEY_SLOW 0x199#define KEY_RESTART 0x198#define KEY_NEXT 0x197#define KEY_AB 0x196#define KEY_LAST 0x195#define KEY_FIRST 0x194#define KEY_CHANNELDOWN 0x193#define KEY_CHANNELUP 0x192#define KEY_BLUE 0x191#define KEY_YELLOW 0x190#define KEY_GREEN 0x18f#define KEY_RED 0x18e#define KEY_CALENDAR 0x18d#define KEY_MEMO 0x18c#define KEY_LIST 0x18b#define KEY_DIRECTORY 0x18a#define KEY_VIDEO 0x189#define KEY_AUDIO 0x188#define KEY_MP3 0x187#define KEY_AUX 0x186#define KEY_DVD 0x185#define KEY_TEXT 0x184#define KEY_PLAYER 0x183#define KEY_TUNER 0x182#define KEY_RADIO 0x181#define KEY_TAPE 0x180#define KEY_CD 0x17f#define KEY_SAT2 0x17e#define KEY_SAT 0x17d#define KEY_VCR2 0x17c#define KEY_VCR 0x17b#define KEY_TV2 0x17a#define KEY_TV 0x179#define KEY_PC 0x178#define KEY_SCREEN 0x177#define KEY_KEYBOARD 0x176#define KEY_MODE 0x175#define KEY_ZOOM 0x174#define KEY_ANGLE 0x173#define KEY_SUBTITLE 0x172#define KEY_TITLE 0x171#define KEY_LANGUAGE 0x170#define KEY_MHP 0x16f#define KEY_PVR 0x16e#define KEY_EPG 0x16d#define KEY_FAVORITES 0x16c#define KEY_CHANNEL 0x16b#define KEY_PROGRAM 0x16a#define KEY_ARCHIVE 0x169#define KEY_VENDOR 0x168#define KEY_TIME 0x167#define KEY_INFO 0x166#define KEY_OPTION 0x165#define KEY_POWER2 0x164#define KEY_CLEAR 0x163#define KEY_GOTO 0x162#define KEY_SELECT 0x161#define KEY_OK 0x160#define BTN_GEAR_UP 0x151#define BTN_GEAR_DOWN 0x150#define BTN_WHEEL 0x150#define BTN_TOOL_QUADTAP 0x14f#define BTN_TOOL_TRIPLETAP 0x14e#define BTN_TOOL_DOUBLETAP 0x14d#define BTN_STYLUS2 0x14c#define BTN_STYLUS 0x14b#define BTN_TOUCH 0x14a#define BTN_STYLUS3 0x149#define BTN_TOOL_QUINTTAP 0x148#define BTN_TOOL_LENS 0x147#define BTN_TOOL_MOUSE 0x146#define BTN_TOOL_FINGER 0x145#define BTN_TOOL_AIRBRUSH 0x144#define BTN_TOOL_PENCIL 0x143#define BTN_TOOL_BRUSH 0x142#define BTN_TOOL_RUBBER 0x141#define BTN_TOOL_PEN 0x140#define BTN_DIGI 0x140#define BTN_THUMBR 0x13e#define BTN_THUMBL 0x13d#define BTN_MODE 0x13c#define BTN_START 0x13b#define BTN_SELECT 0x13a#define BTN_TR2 0x139#define BTN_TL2 0x138#define BTN_TR 0x137#define BTN_TL 0x136#define BTN_Z 0x135#define BTN_Y BTN_WEST#define BTN_WEST 0x134#define BTN_X BTN_NORTH#define BTN_NORTH 0x133#define BTN_C 0x132#define BTN_B BTN_EAST#define BTN_EAST 0x131#define BTN_A BTN_SOUTH#define BTN_SOUTH 0x130#define BTN_GAMEPAD 0x130#define BTN_DEAD 0x12f#define BTN_BASE6 0x12b#define BTN_BASE5 0x12a#define BTN_BASE4 0x129#define BTN_BASE3 0x128#define BTN_BASE2 0x127#define BTN_BASE 0x126#define BTN_PINKIE 0x125#define BTN_TOP2 0x124#define BTN_TOP 0x123#define BTN_THUMB2 0x122#define BTN_THUMB 0x121#define BTN_TRIGGER 0x120#define BTN_JOYSTICK 0x120#define BTN_TASK 0x117#define BTN_BACK 0x116#define BTN_FORWARD 0x115#define BTN_EXTRA 0x114#define BTN_SIDE 0x113#define BTN_MIDDLE 0x112#define BTN_RIGHT 0x111#define BTN_LEFT 0x110#define BTN_MOUSE 0x110#define BTN_9 0x109#define BTN_8 0x108#define BTN_7 0x107#define BTN_6 0x106#define BTN_5 0x105#define BTN_4 0x104#define BTN_3 0x103#define BTN_2 0x102#define BTN_1 0x101#define BTN_0 0x100#define BTN_MISC 0x100#define KEY_MICMUTE 248#define KEY_RFKILL 247#define KEY_WIMAX KEY_WWAN#define KEY_WWAN 246#define KEY_DISPLAY_OFF 245#define KEY_BRIGHTNESS_ZERO KEY_BRIGHTNESS_AUTO#define KEY_BRIGHTNESS_AUTO 244#define KEY_BRIGHTNESS_CYCLE 243#define KEY_VIDEO_PREV 242#define KEY_VIDEO_NEXT 241#define KEY_UNKNOWN 240#define KEY_UWB 239#define KEY_WLAN 238#define KEY_BLUETOOTH 237#define KEY_BATTERY 236#define KEY_DOCUMENTS 235#define KEY_SAVE 234#define KEY_FORWARDMAIL 233#define KEY_REPLY 232#define KEY_SEND 231#define KEY_KBDILLUMUP 230#define KEY_KBDILLUMDOWN 229#define KEY_KBDILLUMTOGGLE 228#define KEY_SWITCHVIDEOMODE 227#define KEY_MEDIA 226#define KEY_BRIGHTNESSUP 225#define KEY_BRIGHTNESSDOWN 224#define KEY_CANCEL 223#define KEY_ALTERASE 222#define KEY_SHOP 221#define KEY_SPORT 220#define KEY_FINANCE 219#define KEY_CONNECT 218#define KEY_SEARCH 217#define KEY_CHAT 216#define KEY_EMAIL 215#define KEY_QUESTION 214#define KEY_SOUND 213#define KEY_CAMERA 212#define KEY_HP 211#define KEY_PRINT 210#define KEY_BASSBOOST 209#define KEY_FASTFORWARD 208#define KEY_PLAY 207#define KEY_CLOSE 206#define KEY_SUSPEND 205#define KEY_DASHBOARD 204#define KEY_PROG4 203#define KEY_PROG3 202#define KEY_PAUSECD 201#define KEY_PLAYCD 200#define KEY_F24 194#define KEY_F23 193#define KEY_F22 192#define KEY_F21 191#define KEY_F20 190#define KEY_F19 189#define KEY_F18 188#define KEY_F17 187#define KEY_F16 186#define KEY_F15 185#define KEY_F14 184#define KEY_F13 183#define KEY_REDO 182#define KEY_NEW 181#define KEY_KPRIGHTPAREN 180#define KEY_KPLEFTPAREN 179#define KEY_SCROLLDOWN 178#define KEY_SCROLLUP 177#define KEY_EDIT 176#define KEY_MOVE 175#define KEY_EXIT 174#define KEY_REFRESH 173#define KEY_HOMEPAGE 172#define KEY_CONFIG 171#define KEY_ISO 170#define KEY_PHONE 169#define KEY_REWIND 168#define KEY_RECORD 167#define KEY_STOPCD 166#define KEY_PREVIOUSSONG 165#define KEY_PLAYPAUSE 164#define KEY_NEXTSONG 163#define KEY_EJECTCLOSECD 162#define KEY_EJECTCD 161#define KEY_CLOSECD 160#define KEY_FORWARD 159#define KEY_BACK 158#define KEY_COMPUTER 157#define KEY_BOOKMARKS 156#define KEY_MAIL 155#define KEY_CYCLEWINDOWS 154#define KEY_DIRECTION KEY_ROTATE_DISPLAY#define KEY_ROTATE_DISPLAY 153#define KEY_SCREENLOCK KEY_COFFEE#define KEY_COFFEE 152#define KEY_MSDOS 151#define KEY_WWW 150#define KEY_PROG2 149#define KEY_PROG1 148#define KEY_XFER 147#define KEY_DELETEFILE 146#define KEY_SENDFILE 145#define KEY_FILE 144#define KEY_WAKEUP 143#define KEY_SLEEP 142#define KEY_SETUP 141#define KEY_CALC 140#define KEY_MENU 139#define KEY_HELP 138#define KEY_CUT 137#define KEY_FIND 136#define KEY_PASTE 135#define KEY_OPEN 134#define KEY_COPY 133#define KEY_FRONT 132#define KEY_UNDO 131#define KEY_PROPS 130#define KEY_AGAIN 129#define KEY_STOP 128#define KEY_COMPOSE 127#define KEY_RIGHTMETA 126#define KEY_LEFTMETA 125#define KEY_YEN 124#define KEY_HANJA 123#define KEY_HANGUEL KEY_HANGEUL#define KEY_HANGEUL 122#define KEY_KPCOMMA 121#define KEY_SCALE 120#define KEY_PAUSE 119#define KEY_KPPLUSMINUS 118#define KEY_KPEQUAL 117#define KEY_POWER 116#define KEY_VOLUMEUP 115#define KEY_VOLUMEDOWN 114#define KEY_MUTE 113#define KEY_MACRO 112#define KEY_DELETE 111#define KEY_INSERT 110#define KEY_PAGEDOWN 109#define KEY_DOWN 108#define KEY_END 107#define KEY_RIGHT 106#define KEY_LEFT 105#define KEY_PAGEUP 104#define KEY_UP 103#define KEY_HOME 102#define KEY_LINEFEED 101#define KEY_RIGHTALT 100#define KEY_SYSRQ 99#define KEY_KPSLASH 98#define KEY_RIGHTCTRL 97#define KEY_KPENTER 96#define KEY_KPJPCOMMA 95#define KEY_MUHENKAN 94#define KEY_KATAKANAHIRAGANA 93#define KEY_HENKAN 92#define KEY_HIRAGANA 91#define KEY_KATAKANA 90#define KEY_RO 89#define KEY_F12 88#define KEY_F11 87#define KEY_102ND 86#define KEY_ZENKAKUHANKAKU 85#define KEY_KPDOT 83#define KEY_KP0 82#define KEY_KP3 81#define KEY_KP2 80#define KEY_KP1 79#define KEY_KPPLUS 78#define KEY_KP6 77#define KEY_KP5 76#define KEY_KP4 75#define KEY_KPMINUS 74#define KEY_KP9 73#define KEY_KP8 72#define KEY_KP7 71#define KEY_SCROLLLOCK 70#define KEY_NUMLOCK 69#define KEY_F10 68#define KEY_F9 67#define KEY_F8 66#define KEY_F7 65#define KEY_F6 64#define KEY_F5 63#define KEY_F4 62#define KEY_F3 61#define KEY_F2 60#define KEY_F1 59#define KEY_CAPSLOCK 58#define KEY_SPACE 57#define KEY_LEFTALT 56#define KEY_KPASTERISK 55#define KEY_RIGHTSHIFT 54#define KEY_SLASH 53#define KEY_DOT 52#define KEY_COMMA 51#define KEY_M 50#define KEY_N 49#define KEY_B 48#define KEY_V 47#define KEY_C 46#define KEY_X 45#define KEY_Z 44#define KEY_BACKSLASH 43#define KEY_LEFTSHIFT 42#define KEY_GRAVE 41#define KEY_APOSTROPHE 40#define KEY_SEMICOLON 39#define KEY_L 38#define KEY_K 37#define KEY_J 36#define KEY_H 35#define KEY_G 34#define KEY_F 33#define KEY_D 32#define KEY_S 31#define KEY_A 30#define KEY_LEFTCTRL 29#define KEY_ENTER 28#define KEY_RIGHTBRACE 27#define KEY_LEFTBRACE 26#define KEY_P 25#define KEY_O 24#define KEY_I 23#define KEY_U 22#define KEY_Y 21#define KEY_T 20#define KEY_R 19#define KEY_E 18#define KEY_W 17#define KEY_Q 16#define KEY_TAB 15#define KEY_BACKSPACE 14#define KEY_EQUAL 13#define KEY_MINUS 12#define KEY_0 11#define KEY_9 10#define KEY_8 9#define KEY_7 8#define KEY_6 7#define KEY_5 6#define KEY_4 5#define KEY_3 4#define KEY_2 3#define KEY_1 2#define KEY_ESC 1#define KEY_RESERVED 0#define SYN_CNT (SYN_MAX+1)#define SYN_MAX 0xf#define SYN_DROPPED 3#define SYN_MT_REPORT 2#define SYN_CONFIG 1#define SYN_REPORT 0#define EV_CNT (EV_MAX+1)#define EV_MAX 0x1f#define EV_FF_STATUS 0x17#define EV_PWR 0x16#define EV_FF 0x15#define EV_REP 0x14#define EV_SND 0x12#define EV_LED 0x11#define EV_SW 0x05#define EV_MSC 0x04#define EV_ABS 0x03#define EV_REL 0x02#define EV_KEY 0x01#define EV_SYN 0x00#define INPUT_PROP_CNT (INPUT_PROP_MAX + 1)#define INPUT_PROP_MAX 0x1f#define INPUT_PROP_ACCELEROMETER 0x06#define INPUT_PROP_POINTING_STICK 0x05#define INPUT_PROP_TOPBUTTONPAD 0x04#define INPUT_PROP_SEMI_MT 0x03#define INPUT_PROP_BUTTONPAD 0x02#define INPUT_PROP_DIRECT 0x01#define INPUT_PROP_POINTER 0x00#define _INPUT_EVENT_CODES_H#define FF_CNT (FF_MAX+1)#define FF_MAX 0x7f#define FF_MAX_EFFECTS FF_GAIN#define FF_AUTOCENTER 0x61#define FF_GAIN 0x60#define FF_WAVEFORM_MAX FF_CUSTOM#define FF_WAVEFORM_MIN FF_SQUARE#define FF_CUSTOM 0x5d#define FF_SAW_DOWN 0x5c#define FF_SAW_UP 0x5b#define FF_SINE 0x5a#define FF_TRIANGLE 0x59#define FF_SQUARE 0x58#define FF_EFFECT_MAX FF_RAMP#define FF_EFFECT_MIN FF_RUMBLE#define FF_RAMP 0x57#define FF_INERTIA 0x56#define FF_DAMPER 0x55#define FF_FRICTION 0x54#define FF_SPRING 0x53#define FF_CONSTANT 0x52#define FF_PERIODIC 0x51#define FF_RUMBLE 0x50#define FF_STATUS_MAX 0x01#define FF_STATUS_PLAYING 0x01#define FF_STATUS_STOPPED 0x00#define MT_TOOL_MAX 2#define MT_TOOL_PALM 2#define MT_TOOL_PEN 1#define MT_TOOL_FINGER 0#define BUS_INTEL_ISHTP 0x1F#define BUS_CEC 0x1E#define BUS_RMI 0x1D#define BUS_SPI 0x1C#define BUS_ATARI 0x1B#define BUS_GSC 0x1A#define BUS_HOST 0x19#define BUS_I2C 0x18#define BUS_ADB 0x17#define BUS_AMIGA 0x16#define BUS_PARPORT 0x15#define BUS_GAMEPORT 0x14#define BUS_RS232 0x13#define BUS_XTKBD 0x12#define BUS_I8042 0x11#define BUS_ISA 0x10#define BUS_VIRTUAL 0x06#define BUS_BLUETOOTH 0x05#define BUS_HIL 0x04#define BUS_USB 0x03#define BUS_ISAPNP 0x02#define BUS_PCI 0x01#define ID_VERSION 3#define ID_PRODUCT 2#define ID_VENDOR 1#define ID_BUS 0#define EVIOCSCLOCKID _IOW('E', 0xa0, int)#define EVIOCSMASK _IOW('E', 0x93, struct input_mask)#define EVIOCGMASK _IOR('E', 0x92, struct input_mask)#define EVIOCREVOKE _IOW('E', 0x91, int)#define EVIOCGRAB _IOW('E', 0x90, int)#define EVIOCGEFFECTS _IOR('E', 0x84, int)#define EVIOCRMFF _IOW('E', 0x81, int)#define EVIOCSFF _IOW('E', 0x80, struct ff_effect)#define EVIOCSABS(abs) _IOW('E', 0xc0 + (abs), struct input_absinfo)#define EVIOCGABS(abs) _IOR('E', 0x40 + (abs), struct input_absinfo)#define EVIOCGBIT(ev,len) _IOC(_IOC_READ, 'E', 0x20 + (ev), len)#define EVIOCGSW(len) _IOC(_IOC_READ, 'E', 0x1b, len)#define EVIOCGSND(len) _IOC(_IOC_READ, 'E', 0x1a, len)#define EVIOCGLED(len) _IOC(_IOC_READ, 'E', 0x19, len)#define EVIOCGKEY(len) _IOC(_IOC_READ, 'E', 0x18, len)#define EVIOCGMTSLOTS(len) _IOC(_IOC_READ, 'E', 0x0a, len)#define EVIOCGPROP(len) _IOC(_IOC_READ, 'E', 0x09, len)#define EVIOCGUNIQ(len) _IOC(_IOC_READ, 'E', 0x08, len)#define EVIOCGPHYS(len) _IOC(_IOC_READ, 'E', 0x07, len)#define EVIOCGNAME(len) _IOC(_IOC_READ, 'E', 0x06, len)#define EVIOCSKEYCODE_V2 _IOW('E', 0x04, struct input_keymap_entry)#define EVIOCSKEYCODE _IOW('E', 0x04, unsigned int[2])#define EVIOCGKEYCODE_V2 _IOR('E', 0x04, struct input_keymap_entry)#define EVIOCGKEYCODE _IOR('E', 0x04, unsigned int[2])#define EVIOCSREP _IOW('E', 0x03, unsigned int[2])#define EVIOCGREP _IOR('E', 0x03, unsigned int[2])#define EVIOCGID _IOR('E', 0x02, struct input_id)#define EVIOCGVERSION _IOR('E', 0x01, int)#define INPUT_KEYMAP_BY_INDEX (1 << 0)#define EV_VERSION 0x010001#define input_event_usec time.tv_usec#define input_event_sec time.tv_sec#define _INPUT_H#define __LINUX__ 1#define _SDL_platform_h#define __linux__ 1#define __linux 1#define linux 1#define SDL_ASSEMBLY_ROUTINES 1#define SDL_VIDEO_DISABLE_SCREENSAVER 1#define SDL_VIDEO_OPENGL_GLX 1#define SDL_VIDEO_OPENGL 1#define SDL_VIDEO_DRIVER_X11_XV 1#define SDL_VIDEO_DRIVER_X11_XME 1#define SDL_VIDEO_DRIVER_X11_XINERAMA 1#define SDL_VIDEO_DRIVER_X11_VIDMODE 1#define SDL_VIDEO_DRIVER_X11_DGAMOUSE 1#define SDL_VIDEO_DRIVER_X11 1#define SDL_VIDEO_DRIVER_FBCON 1#define SDL_VIDEO_DRIVER_DUMMY 1#define SDL_VIDEO_DRIVER_DGA 1#define SDL_VIDEO_DRIVER_CACA 1#define SDL_TIMER_UNIX 1#define SDL_THREAD_PTHREAD_RECURSIVE_MUTEX 1#define SDL_THREAD_PTHREAD 1#define SDL_LOADSO_DLOPEN 1#define SDL_JOYSTICK_LINUX 1#define SDL_INPUT_LINUXEV 1#define SDL_CDROM_LINUX 1#define SDL_AUDIO_DRIVER_OSS 1#define SDL_AUDIO_DRIVER_PULSE 1#define SDL_AUDIO_DRIVER_DUMMY 1#define SDL_AUDIO_DRIVER_DISK 1#define SDL_AUDIO_DRIVER_ALSA 1#define HAVE_SEM_TIMEDWAIT 1#define HAVE_MPROTECT 1#define HAVE_GETPAGESIZE 1#define HAVE_NANOSLEEP 1#define HAVE_SETJMP 1#define HAVE_SA_SIGACTION 1#define HAVE_SIGACTION 1#define HAVE_ICONV 1#define HAVE_VSNPRINTF 1#define HAVE_SNPRINTF 1#define HAVE_SSCANF 1#define HAVE_STRNCASECMP 1#define HAVE_STRCASECMP 1#define HAVE_STRNCMP 1#define HAVE_STRCMP 1#define HAVE_ATOF 1#define HAVE_ATOI 1#define HAVE_STRTOD 1#define HAVE_STRTOULL 1#define HAVE_STRTOLL 1#define HAVE_STRTOUL 1#define HAVE_STRTOL 1#define HAVE_STRSTR 1#define HAVE_STRRCHR 1#define HAVE_STRCHR 1#define HAVE_STRDUP 1#define HAVE_STRLEN 1#define HAVE_MEMCMP 1#define HAVE_MEMMOVE 1#define HAVE_MEMCPY 1#define HAVE_MEMSET 1#define HAVE_BCOPY 1#define HAVE_ABS 1#define HAVE_QSORT 1#define HAVE_UNSETENV 1#define HAVE_PUTENV 1#define HAVE_GETENV 1#define HAVE_ALLOCA 1#define HAVE_FREE 1#define HAVE_REALLOC 1#define HAVE_CALLOC 1#define HAVE_MALLOC 1#define HAVE_SIGNAL_H 1#define HAVE_ICONV_H 1#define HAVE_MATH_H 1#define HAVE_CTYPE_H 1#define HAVE_STDINT_H 1#define HAVE_INTTYPES_H 1#define HAVE_STRINGS_H 1#define HAVE_STRING_H 1#define HAVE_MEMORY_H 1#define HAVE_MALLOC_H 1#define HAVE_STDARG_H 1#define HAVE_STDLIB_H 1#define STDC_HEADERS 1#define HAVE_STDIO_H 1#define HAVE_SYS_TYPES_H 1#define HAVE_ALLOCA_H 1#define HAVE_LIBC 1#define SDL_BYTEORDER 1234#define SDL_HAS_64BIT_TYPE 1#define _SDL_config_h#define _GCC_MAX_ALIGN_T#define _STDDEF_H#define _PTRDIFF_T#define _STDDEF_H_#define _PTRDIFF_T_#define _ANSI_STDDEF_H#define WINT_WIDTH 32#define WCHAR_WIDTH 32#define SIZE_WIDTH __WORDSIZE#define SIG_ATOMIC_WIDTH 32#define PTRDIFF_WIDTH __WORDSIZE#define UINTMAX_WIDTH 64#define INTMAX_WIDTH 64#define UINTPTR_WIDTH __WORDSIZE#define INTPTR_WIDTH __WORDSIZE#define UINT_FAST64_WIDTH 64#define INT_FAST64_WIDTH 64#define UINT_FAST32_WIDTH __WORDSIZE#define INT_FAST32_WIDTH __WORDSIZE#define UINT_FAST16_WIDTH __WORDSIZE#define INT_FAST16_WIDTH __WORDSIZE#define UINT_FAST8_WIDTH 8#define INT_FAST8_WIDTH 8#define UINT_LEAST64_WIDTH 64#define INT_LEAST64_WIDTH 64#define UINT_LEAST32_WIDTH 32#define INT_LEAST32_WIDTH 32#define UINT_LEAST16_WIDTH 16#define INT_LEAST16_WIDTH 16#define UINT_LEAST8_WIDTH 8#define INT_LEAST8_WIDTH 8#define UINT64_WIDTH 64#define INT64_WIDTH 64#define UINT32_WIDTH 32#define INT32_WIDTH 32#define UINT16_WIDTH 16#define INT16_WIDTH 16#define UINT8_WIDTH 8#define INT8_WIDTH 8#define UINTMAX_C(c) c ## UL#define INTMAX_C(c) c ## L#define UINT64_C(c) c ## UL#define UINT32_C(c) c ## U#define UINT16_C(c) c#define UINT8_C(c) c#define INT64_C(c) c ## L#define INT32_C(c) c#define INT16_C(c) c#define INT8_C(c) c#define WINT_MAX (4294967295u)#define WINT_MIN (0u)#define WCHAR_MAX __WCHAR_MAX#define WCHAR_MIN __WCHAR_MIN#define SIZE_MAX (18446744073709551615UL)#define SIG_ATOMIC_MAX (2147483647)#define SIG_ATOMIC_MIN (-2147483647-1)#define PTRDIFF_MAX (9223372036854775807L)#define PTRDIFF_MIN (-9223372036854775807L-1)#define UINTMAX_MAX (__UINT64_C(18446744073709551615))#define INTMAX_MAX (__INT64_C(9223372036854775807))#define INTMAX_MIN (-__INT64_C(9223372036854775807)-1)#define UINTPTR_MAX (18446744073709551615UL)#define INTPTR_MAX (9223372036854775807L)#define INTPTR_MIN (-9223372036854775807L-1)#define UINT_FAST64_MAX (__UINT64_C(18446744073709551615))#define UINT_FAST32_MAX (18446744073709551615UL)#define UINT_FAST16_MAX (18446744073709551615UL)#define UINT_FAST8_MAX (255)#define INT_FAST64_MAX (__INT64_C(9223372036854775807))#define INT_FAST32_MAX (9223372036854775807L)#define INT_FAST16_MAX (9223372036854775807L)#define INT_FAST8_MAX (127)#define INT_FAST64_MIN (-__INT64_C(9223372036854775807)-1)#define INT_FAST32_MIN (-9223372036854775807L-1)#define INT_FAST16_MIN (-9223372036854775807L-1)#define INT_FAST8_MIN (-128)#define UINT_LEAST64_MAX (__UINT64_C(18446744073709551615))#define UINT_LEAST32_MAX (4294967295U)#define UINT_LEAST16_MAX (65535)#define UINT_LEAST8_MAX (255)#define INT_LEAST64_MAX (__INT64_C(9223372036854775807))#define INT_LEAST32_MAX (2147483647)#define INT_LEAST16_MAX (32767)#define INT_LEAST8_MAX (127)#define INT_LEAST64_MIN (-__INT64_C(9223372036854775807)-1)#define INT_LEAST32_MIN (-2147483647-1)#define INT_LEAST16_MIN (-32767-1)#define INT_LEAST8_MIN (-128)#define UINT64_MAX (__UINT64_C(18446744073709551615))#define UINT32_MAX (4294967295U)#define UINT16_MAX (65535)#define UINT8_MAX (255)#define INT64_MAX (__INT64_C(9223372036854775807))#define INT32_MAX (2147483647)#define INT16_MAX (32767)#define INT8_MAX (127)#define INT64_MIN (-__INT64_C(9223372036854775807)-1)#define INT32_MIN (-2147483647-1)#define INT16_MIN (-32767-1)#define INT8_MIN (-128)#define __UINT64_C(c) c ## UL#define __INT64_C(c) c ## L#define _STDINT_H 1#define SCNxPTR __PRIPTR_PREFIX "x"#define SCNuPTR __PRIPTR_PREFIX "u"#define SCNoPTR __PRIPTR_PREFIX "o"#define SCNiPTR __PRIPTR_PREFIX "i"#define SCNdPTR __PRIPTR_PREFIX "d"#define SCNxMAX __PRI64_PREFIX "x"#define SCNuMAX __PRI64_PREFIX "u"#define SCNoMAX __PRI64_PREFIX "o"#define SCNiMAX __PRI64_PREFIX "i"#define SCNdMAX __PRI64_PREFIX "d"#define SCNxFAST64 __PRI64_PREFIX "x"#define SCNxFAST32 __PRIPTR_PREFIX "x"#define SCNxFAST16 __PRIPTR_PREFIX "x"#define SCNxFAST8 "hhx"#define SCNxLEAST64 __PRI64_PREFIX "x"#define SCNxLEAST32 "x"#define SCNxLEAST16 "hx"#define SCNxLEAST8 "hhx"#define SCNx64 __PRI64_PREFIX "x"#define SCNx32 "x"#define SCNx16 "hx"#define SCNx8 "hhx"#define SCNoFAST64 __PRI64_PREFIX "o"#define SCNoFAST32 __PRIPTR_PREFIX "o"#define SCNoFAST16 __PRIPTR_PREFIX "o"#define SCNoFAST8 "hho"#define SCNoLEAST64 __PRI64_PREFIX "o"#define SCNoLEAST32 "o"#define SCNoLEAST16 "ho"#define SCNoLEAST8 "hho"#define SCNo64 __PRI64_PREFIX "o"#define SCNo32 "o"#define SCNo16 "ho"#define SCNo8 "hho"#define SCNuFAST64 __PRI64_PREFIX "u"#define SCNuFAST32 __PRIPTR_PREFIX "u"#define SCNuFAST16 __PRIPTR_PREFIX "u"#define SCNuFAST8 "hhu"#define SCNuLEAST64 __PRI64_PREFIX "u"#define SCNuLEAST32 "u"#define SCNuLEAST16 "hu"#define SCNuLEAST8 "hhu"#define SCNu64 __PRI64_PREFIX "u"#define SCNu32 "u"#define SCNu16 "hu"#define SCNu8 "hhu"#define SCNiFAST64 __PRI64_PREFIX "i"#define SCNiFAST32 __PRIPTR_PREFIX "i"#define SCNiFAST16 __PRIPTR_PREFIX "i"#define SCNiFAST8 "hhi"#define SCNiLEAST64 __PRI64_PREFIX "i"#define SCNiLEAST32 "i"#define SCNiLEAST16 "hi"#define SCNiLEAST8 "hhi"#define SCNi64 __PRI64_PREFIX "i"#define SCNi32 "i"#define SCNi16 "hi"#define SCNi8 "hhi"#define SCNdFAST64 __PRI64_PREFIX "d"#define SCNdFAST32 __PRIPTR_PREFIX "d"#define SCNdFAST16 __PRIPTR_PREFIX "d"#define SCNdFAST8 "hhd"#define SCNdLEAST64 __PRI64_PREFIX "d"#define SCNdLEAST32 "d"#define SCNdLEAST16 "hd"#define SCNdLEAST8 "hhd"#define SCNd64 __PRI64_PREFIX "d"#define SCNd32 "d"#define SCNd16 "hd"#define SCNd8 "hhd"#define PRIXPTR __PRIPTR_PREFIX "X"#define PRIxPTR __PRIPTR_PREFIX "x"#define PRIuPTR __PRIPTR_PREFIX "u"#define PRIoPTR __PRIPTR_PREFIX "o"#define PRIiPTR __PRIPTR_PREFIX "i"#define PRIdPTR __PRIPTR_PREFIX "d"#define PRIXMAX __PRI64_PREFIX "X"#define PRIxMAX __PRI64_PREFIX "x"#define PRIuMAX __PRI64_PREFIX "u"#define PRIoMAX __PRI64_PREFIX "o"#define PRIiMAX __PRI64_PREFIX "i"#define PRIdMAX __PRI64_PREFIX "d"#define PRIXFAST64 __PRI64_PREFIX "X"#define PRIXFAST32 __PRIPTR_PREFIX "X"#define PRIXFAST16 __PRIPTR_PREFIX "X"#define PRIXFAST8 "X"#define PRIXLEAST64 __PRI64_PREFIX "X"#define PRIXLEAST32 "X"#define PRIXLEAST16 "X"#define PRIXLEAST8 "X"#define PRIX64 __PRI64_PREFIX "X"#define PRIX32 "X"#define PRIX16 "X"#define PRIX8 "X"#define PRIxFAST64 __PRI64_PREFIX "x"#define PRIxFAST32 __PRIPTR_PREFIX "x"#define PRIxFAST16 __PRIPTR_PREFIX "x"#define PRIxFAST8 "x"#define PRIxLEAST64 __PRI64_PREFIX "x"#define PRIxLEAST32 "x"#define PRIxLEAST16 "x"#define PRIxLEAST8 "x"#define PRIx64 __PRI64_PREFIX "x"#define PRIx32 "x"#define PRIx16 "x"#define PRIx8 "x"#define PRIuFAST64 __PRI64_PREFIX "u"#define PRIuFAST32 __PRIPTR_PREFIX "u"#define PRIuFAST16 __PRIPTR_PREFIX "u"#define PRIuFAST8 "u"#define PRIuLEAST64 __PRI64_PREFIX "u"#define PRIuLEAST32 "u"#define PRIuLEAST16 "u"#define PRIuLEAST8 "u"#define PRIu64 __PRI64_PREFIX "u"#define PRIu32 "u"#define PRIu16 "u"#define PRIu8 "u"#define PRIoFAST64 __PRI64_PREFIX "o"#define PRIoFAST32 __PRIPTR_PREFIX "o"#define PRIoFAST16 __PRIPTR_PREFIX "o"#define PRIoFAST8 "o"#define PRIoLEAST64 __PRI64_PREFIX "o"#define PRIoLEAST32 "o"#define PRIoLEAST16 "o"#define PRIoLEAST8 "o"#define PRIo64 __PRI64_PREFIX "o"#define PRIo32 "o"#define PRIo16 "o"#define PRIo8 "o"#define PRIiFAST64 __PRI64_PREFIX "i"#define PRIiFAST32 __PRIPTR_PREFIX "i"#define PRIiFAST16 __PRIPTR_PREFIX "i"#define PRIiFAST8 "i"#define PRIiLEAST64 __PRI64_PREFIX "i"#define PRIiLEAST32 "i"#define PRIiLEAST16 "i"#define PRIiLEAST8 "i"#define PRIi64 __PRI64_PREFIX "i"#define PRIi32 "i"#define PRIi16 "i"#define PRIi8 "i"#define PRIdFAST64 __PRI64_PREFIX "d"#define PRIdFAST32 __PRIPTR_PREFIX "d"#define PRIdFAST16 __PRIPTR_PREFIX "d"#define PRIdFAST8 "d"#define PRIdLEAST64 __PRI64_PREFIX "d"#define PRIdLEAST32 "d"#define PRIdLEAST16 "d"#define PRIdLEAST8 "d"#define PRId64 __PRI64_PREFIX "d"#define PRId32 "d"#define PRId16 "d"#define PRId8 "d"#define __PRIPTR_PREFIX "l"#define __PRI64_PREFIX "l"#define ____gwchar_t_defined 1#define _INTTYPES_H 1#define _ICONV_H 1#define SDL_INLINE_OKAY#define SDLCALL#define DECLSPEC __attribute__ ((visibility("default")))#define _begin_code_h#define SDL_COMPILE_TIME_ASSERT(name,x) typedef int SDL_dummy_ ## name[(x) * 2 - 1]#define SDL_iconv_utf8_ucs4(S) (Uint32 *)SDL_iconv_string("UCS-4", "UTF-8", S, SDL_strlen(S)+1)#define SDL_iconv_utf8_ucs2(S) (Uint16 *)SDL_iconv_string("UCS-2", "UTF-8", S, SDL_strlen(S)+1)#define SDL_iconv_utf8_locale(S) SDL_iconv_string("", "UTF-8", S, SDL_strlen(S)+1)#define SDL_iconv_close iconv_close#define SDL_iconv_open iconv_open#define SDL_iconv_t iconv_t#define SDL_ICONV_EINVAL (size_t)-4#define SDL_ICONV_EILSEQ (size_t)-3#define SDL_ICONV_E2BIG (size_t)-2#define SDL_ICONV_ERROR (size_t)-1#define SDL_vsnprintf vsnprintf#define SDL_snprintf snprintf#define SDL_sscanf sscanf#define SDL_strncasecmp strncasecmp#define SDL_strcasecmp strcasecmp#define SDL_strncmp strncmp#define SDL_strcmp strcmp#define SDL_atof atof#define SDL_atoi atoi#define SDL_strtod strtod#define SDL_strtoull strtoull#define SDL_strtoll strtoll#define SDL_strtoul strtoul#define SDL_strtol strtol#define SDL_uitoa(value,string,radix) SDL_ultoa((long)value, string, radix)#define SDL_itoa(value,string,radix) SDL_ltoa((long)value, string, radix)#define SDL_strstr strstr#define SDL_strrchr strrchr#define SDL_strchr strchr#define SDL_strdup strdup#define SDL_strlen strlen#define SDL_memcmp memcmp#define SDL_memmove memmove#define SDL_memcpy4(dst,src,len) SDL_memcpy(dst, src, (len) << 2)#define SDL_memcpy memcpy#define SDL_memset4(dst,val,len) do { unsigned _count = (len); unsigned _n = (_count + 3) / 4; Uint32 *_p = SDL_static_cast(Uint32 *, dst); Uint32 _val = (val); if (len == 0) break; switch (_count % 4) { case 0: do { *_p++ = _val; case 3: *_p++ = _val; case 2: *_p++ = _val; case 1: *_p++ = _val; } while ( --_n ); } } while(0)#define SDL_memset memset#define SDL_tolower(X) tolower(X)#define SDL_toupper(X) toupper(X)#define SDL_isspace(X) isspace(X)#define SDL_isdigit(X) isdigit(X)#define SDL_max(x,y) (((x) > (y)) ? (x) : (y))#define SDL_min(x,y) (((x) < (y)) ? (x) : (y))#define SDL_abs abs#define SDL_qsort qsort#define SDL_putenv putenv#define SDL_getenv getenv#define SDL_stack_free(data)#define SDL_stack_alloc(type,count) (type*)alloca(sizeof(type)*(count))#define SDL_free free#define SDL_realloc realloc#define SDL_calloc calloc#define SDL_malloc malloc#define SDL_static_cast(type,expression) ((type)(expression))#define SDL_reinterpret_cast(type,expression) ((type)(expression))#define SDL_TABLESIZE(table) SDL_arraysize(table)#define SDL_arraysize(array) (sizeof(array)/sizeof(array[0]))#define _SDL_stdinc_h#define alloca(size) __builtin_alloca (size)#define _SDL_main_h#define SDL_Unsupported() SDL_Error(SDL_UNSUPPORTED)#define SDL_OutOfMemory() SDL_Error(SDL_ENOMEM)#define _SDL_error_h#define SDL_SwapBE64(X) SDL_Swap64(X)#define SDL_SwapBE32(X) SDL_Swap32(X)#define SDL_SwapBE16(X) SDL_Swap16(X)#define SDL_SwapLE64(X) (X)#define SDL_SwapLE32(X) (X)#define SDL_SwapLE16(X) (X)#define SDL_BIG_ENDIAN 4321#define SDL_LIL_ENDIAN 1234#define _SDL_endian_h#define SDL_UnlockMutex(m) SDL_mutexV(m)#define SDL_LockMutex(m) SDL_mutexP(m)#define SDL_MUTEX_MAXWAIT (~(Uint32)0)#define SDL_MUTEX_TIMEDOUT 1#define _SDL_mutex_h#define _SDL_thread_h#define SDL_RWclose(ctx) (ctx)->close(ctx)#define SDL_RWwrite(ctx,ptr,size,n) (ctx)->write(ctx, ptr, size, n)#define SDL_RWread(ctx,ptr,size,n) (ctx)->read(ctx, ptr, size, n)#define SDL_RWtell(ctx) (ctx)->seek(ctx, 0, RW_SEEK_CUR)#define SDL_RWseek(ctx,offset,whence) (ctx)->seek(ctx, offset, whence)#define RW_SEEK_END 2#define RW_SEEK_CUR 1#define RW_SEEK_SET 0#define _SDL_rwops_h#define SDL_MIX_MAXVOLUME 128#define SDL_LoadWAV(file,spec,audio_buf,audio_len) SDL_LoadWAV_RW(SDL_RWFromFile(file, "rb"),1, spec,audio_buf,audio_len)#define AUDIO_S16SYS AUDIO_S16LSB#define AUDIO_U16SYS AUDIO_U16LSB#define AUDIO_S16 AUDIO_S16LSB#define AUDIO_U16 AUDIO_U16LSB#define AUDIO_S16MSB 0x9010#define AUDIO_U16MSB 0x1010#define AUDIO_S16LSB 0x8010#define AUDIO_U16LSB 0x0010#define AUDIO_S8 0x8008#define AUDIO_U8 0x0008#define _SDL_audio_h#define SDL_MAX_TRACKS 99#define MSF_TO_FRAMES(M,S,F) ((M)*60*CD_FPS+(S)*CD_FPS+(F))#define FRAMES_TO_MSF(f,M,S,F) { int value = f; *(F) = value%CD_FPS; value /= CD_FPS; *(S) = value%60; value /= 60; *(M) = value; }#define CD_FPS 75#define CD_INDRIVE(status) ((int)(status) > 0)#define SDL_DATA_TRACK 0x04#define SDL_AUDIO_TRACK 0x00#define _SDL_cdrom_h#define _SDL_cpuinfo_h#define SDL_APPACTIVE 0x04#define SDL_APPINPUTFOCUS 0x02#define SDL_APPMOUSEFOCUS 0x01#define _SDL_active_h#define KMOD_META (KMOD_LMETA|KMOD_RMETA)#define KMOD_ALT (KMOD_LALT|KMOD_RALT)#define KMOD_SHIFT (KMOD_LSHIFT|KMOD_RSHIFT)#define KMOD_CTRL (KMOD_LCTRL|KMOD_RCTRL)#define _SDL_keysym_h#define SDL_DEFAULT_REPEAT_INTERVAL 30#define SDL_DEFAULT_REPEAT_DELAY 500#define SDL_ALL_HOTKEYS 0xFFFFFFFF#define _SDL_keyboard_h#define SDL_BlitSurface SDL_UpperBlit#define SDL_SaveBMP(surface,file) SDL_SaveBMP_RW(surface, SDL_RWFromFile(file, "wb"), 1)#define SDL_LoadBMP(file) SDL_LoadBMP_RW(SDL_RWFromFile(file, "rb"), 1)#define SDL_AllocSurface SDL_CreateRGBSurface#define SDL_PHYSPAL 0x02#define SDL_LOGPAL 0x01#define SDL_YVYU_OVERLAY 0x55595659#define SDL_UYVY_OVERLAY 0x59565955#define SDL_YUY2_OVERLAY 0x32595559#define SDL_IYUV_OVERLAY 0x56555949#define SDL_YV12_OVERLAY 0x32315659#define SDL_MUSTLOCK(surface) (surface->offset || ((surface->flags & (SDL_HWSURFACE|SDL_ASYNCBLIT|SDL_RLEACCEL)) != 0))#define SDL_PREALLOC 0x01000000#define SDL_SRCALPHA 0x00010000#define SDL_RLEACCEL 0x00004000#define SDL_RLEACCELOK 0x00002000#define SDL_SRCCOLORKEY 0x00001000#define SDL_HWACCEL 0x00000100#define SDL_NOFRAME 0x00000020#define SDL_RESIZABLE 0x00000010#define SDL_OPENGLBLIT 0x0000000A#define SDL_OPENGL 0x00000002#define SDL_FULLSCREEN 0x80000000#define SDL_DOUBLEBUF 0x40000000#define SDL_HWPALETTE 0x20000000#define SDL_ANYFORMAT 0x10000000#define SDL_ASYNCBLIT 0x00000004#define SDL_HWSURFACE 0x00000001#define SDL_SWSURFACE 0x00000000#define SDL_Colour SDL_Color#define SDL_ALPHA_TRANSPARENT 0#define SDL_ALPHA_OPAQUE 255#define _SDL_video_h#define SDL_BUTTON_X2MASK SDL_BUTTON(SDL_BUTTON_X2)#define SDL_BUTTON_X1MASK SDL_BUTTON(SDL_BUTTON_X1)#define SDL_BUTTON_RMASK SDL_BUTTON(SDL_BUTTON_RIGHT)#define SDL_BUTTON_MMASK SDL_BUTTON(SDL_BUTTON_MIDDLE)#define SDL_BUTTON_LMASK SDL_BUTTON(SDL_BUTTON_LEFT)#define SDL_BUTTON_X2 7#define SDL_BUTTON_X1 6#define SDL_BUTTON_WHEELDOWN 5#define SDL_BUTTON_WHEELUP 4#define SDL_BUTTON_RIGHT 3#define SDL_BUTTON_MIDDLE 2#define SDL_BUTTON_LEFT 1#define SDL_BUTTON(X) (1 << ((X)-1))#define _SDL_mouse_h#define SDL_HAT_LEFTDOWN (SDL_HAT_LEFT|SDL_HAT_DOWN)#define SDL_HAT_LEFTUP (SDL_HAT_LEFT|SDL_HAT_UP)#define SDL_HAT_RIGHTDOWN (SDL_HAT_RIGHT|SDL_HAT_DOWN)#define SDL_HAT_RIGHTUP (SDL_HAT_RIGHT|SDL_HAT_UP)#define SDL_HAT_LEFT 0x08#define SDL_HAT_DOWN 0x04#define SDL_HAT_RIGHT 0x02#define SDL_HAT_UP 0x01#define SDL_HAT_CENTERED 0x00#define _SDL_joystick_h#define SDL_QuitRequested() (SDL_PumpEvents(), SDL_PeepEvents(NULL,0,SDL_PEEKEVENT,SDL_QUITMASK))#define _SDL_quit_h#define SDL_EVENTMASK(X) (1<<(X))#define SDL_ENABLE 1#define SDL_DISABLE 0#define SDL_IGNORE 0#define SDL_QUERY -1#define SDL_ALLEVENTS 0xFFFFFFFF#define SDL_PRESSED 1#define SDL_RELEASED 0#define _SDL_events_h#define _SDL_loadso_h#define TIMER_RESOLUTION 10#define SDL_TIMESLICE 10#define _SDL_timer_h#define SDL_VERSION_ATLEAST(X,Y,Z) (SDL_COMPILEDVERSION >= SDL_VERSIONNUM(X, Y, Z))#define SDL_COMPILEDVERSION SDL_VERSIONNUM(SDL_MAJOR_VERSION, SDL_MINOR_VERSION, SDL_PATCHLEVEL)#define SDL_VERSIONNUM(X,Y,Z) ((X)*1000 + (Y)*100 + (Z))#define SDL_VERSION(X) { (X)->major = SDL_MAJOR_VERSION; (X)->minor = SDL_MINOR_VERSION; (X)->patch = SDL_PATCHLEVEL; }#define SDL_PATCHLEVEL 15#define SDL_MINOR_VERSION 2#define SDL_MAJOR_VERSION 1#define _SDL_version_h#define SDL_INIT_EVERYTHING 0x0000FFFF#define SDL_INIT_EVENTTHREAD 0x01000000#define SDL_INIT_NOPARACHUTE 0x00100000#define SDL_INIT_JOYSTICK 0x00000200#define SDL_INIT_CDROM 0x00000100#define SDL_INIT_VIDEO 0x00000020#define SDL_INIT_AUDIO 0x00000010#define SDL_INIT_TIMER 0x00000001#define _SDL_H#define E2BIG 7#define NUM_SDL_CODES (SDLK_UNDO + 1)#define EPERM 1#define NONE (-1)#define endtick(seconds) (get_ticks() + (uint64_t)(seconds) * get_tbclk())#define __CLI_H#define SANDBOX_CMDLINE_OPT_SHORT(f,s,ha,h) _SANDBOX_CMDLINE_OPT(f, s, ha, h)#define SANDBOX_CMDLINE_OPT(f,ha,h) _SANDBOX_CMDLINE_OPT(f, 0, ha, h)#define _SANDBOX_CMDLINE_OPT(f,s,ha,h) static struct sandbox_cmdline_option sandbox_cmdline_option_ ## f = { .flag = #f, .flag_short = s, .help = h, .has_arg = ha, .callback = sandbox_cmdline_cb_ ## f, }; static __attribute__((section(".u_boot_sandbox_getopt"), used)) struct sandbox_cmdline_option *sandbox_cmdline_option_ ## f ## _ptr = &sandbox_cmdline_option_ ## f#define __SANDBOX_GETOPT_H#define CONFIG_MALLOC_F_ADDR 0x0010000#define CONFIG_CMDLINE 1#define max(x,y) ({ typeof(x) _max1 = (x); typeof(y) _max2 = (y); (void) (&_max1 == &_max2); _max1 > _max2 ? _max1 : _max2; })#define CONFIG_SYS_SDRAM_SIZE (128 << 20)#define assert(x) ({ if (!(x) && _DEBUG) __assert_fail(#x, __FILE__, __LINE__, __func__); })#define _DEBUG 0#define ll_entry_start(_type,_list) ({ static char start[0] __aligned(4) __attribute__((unused, section(".u_boot_list_2_"#_list"_1"))); (_type *)&start; })#define __aligned(x) __attribute__((aligned(x)))#define ll_entry_end(_type,_list) ({ static char end[0] __aligned(4) __attribute__((unused, section(".u_boot_list_2_"#_list"_3"))); (_type *)&end; })#define fdt32_to_cpu(x) be32_to_cpu(x)#define fdt_get_header(fdt,field) (fdt32_to_cpu(((const struct fdt_header *)(fdt))->field))#define fdt_totalsize(fdt) (fdt_get_header(fdt, totalsize))#define FDT_ERR_NOTFOUND 1#define fdt_setprop_string(fdt,nodeoffset,name,str) fdt_setprop((fdt), (nodeoffset), (name), (str), strlen(str)+1)#define fdt_off_dt_strings(fdt) (fdt_get_header(fdt, off_dt_strings))#define fdt_size_dt_strings(fdt) (fdt_get_header(fdt, size_dt_strings))#define BOOTM_STATE_OS_GO (0x00000400)#define BOOTM_STATE_OS_FAKE_GO (0x00000200)#define __le32_to_cpu(x) ((__force __u32)(__le32)(x))#define le32_to_cpu __le32_to_cpu#define LINUX_ARM_ZIMAGE_MAGIC 0x016f2818#define ENOSYS 38#define EC_FP_SENSOR_CONFIG_MAX_REGS 16#define PD_RW_HASH_SIZE 20#define SB_FW_UPDATE_CMD_STATUS_SIZE 2#define SB_FW_UPDATE_CMD_INFO_SIZE 8#define SB_FW_UPDATE_CMD_WRITE_BLOCK_SIZE 32#define EC_VSTORE_SLOT_SIZE 64#define EC_PORT80_SIZE_MAX 32#define EC_PSTORE_SIZE_MAX 64#define EC_LB_PROG_LEN 192#define LB_BATTERY_LEVELS 4#define EC_VBNV_BLOCK_SIZE_V2 64#define EC_OLD_PARAM_SIZE EC_HOST_CMD_REGION_SIZE#define EC_LPC_ADDR_OLD_PARAM EC_HOST_CMD_REGION1#define EC_HOST_PARAM_SIZE EC_PROTO2_MAX_PARAM_SIZE#define EC_CMD_PASSTHRU_MAX(n) (EC_CMD_PASSTHRU_OFFSET(n) + 0x3fff)#define EC_CMD_PASSTHRU_OFFSET(n) (0x4000 * (n))#define EC_PRIVATE_HOST_COMMAND_VALUE(command) (EC_CMD_BOARD_SPECIFIC_BASE + (command))#define EC_CMD_BOARD_SPECIFIC_LAST 0x3FFF#define EC_CMD_BOARD_SPECIFIC_BASE 0x3E00#define EC_CMD_TP_FRAME_GET 0x0503#define EC_CMD_TP_FRAME_SNAPSHOT 0x0502#define EC_CMD_TP_FRAME_INFO 0x0501#define EC_CMD_TP_SELF_TEST 0x0500#define EC_CMD_FP_FRAME 0x0404#define EC_CMD_FP_INFO 0x0403#define FP_MODE_DONT_CHANGE (1<<31)#define FP_MODE_CAPTURE (1<<3)#define FP_MODE_FINGER_UP (1<<2)#define FP_MODE_FINGER_DOWN (1<<1)#define FP_MODE_DEEPSLEEP (1<<0)#define EC_CMD_FP_MODE 0x0402#define EC_CMD_FP_SENSOR_CONFIG 0x0401#define EC_FP_FLAG_NOT_COMPLETE 0x1#define EC_CMD_FP_PASSTHRU 0x0400#define EC_CMD_CR51_LAST 0x03FF#define EC_CMD_CR51_BASE 0x0300#define CBI_SET_INIT (1 << 1)#define CBI_SET_NO_SYNC (1 << 0)#define CBI_GET_RELOAD (1 << 0)#define EC_CMD_SET_CROS_BOARD_INFO 0x0120#define EC_CMD_GET_CROS_BOARD_INFO 0x011F#define EC_CMD_EFS_VERIFY 0x011E#define EC_CMD_RWSIG_ACTION 0x011D#define EC_CMD_RWSIG_CHECK_STATUS 0x011C#define EC_CMD_PD_CHIP_INFO 0x011B#define USB_PD_MUX_HPD_IRQ (1 << 3)#define USB_PD_MUX_POLARITY_INVERTED (1 << 2)#define USB_PD_MUX_DP_ENABLED (1 << 1)#define USB_PD_MUX_USB_ENABLED (1 << 0)#define EC_CMD_USB_PD_MUX_INFO 0x011A#define EC_CMD_PD_CONTROL 0x0119#define EC_CMD_PD_WRITE_LOG_ENTRY 0x0118#define EC_CMD_USB_PD_SET_AMODE 0x0117#define EC_CMD_USB_PD_GET_AMODE 0x0116#define MCDP_FAMILY(family) ((family[0] << 8) | family[1])#define MCDP_CHIPID(chipid) ((chipid[0] << 8) | chipid[1])#define PS_FAULT_DISCH 4#define PS_FAULT_OVP 3#define PS_FAULT_FAST_OCP 2#define PS_FAULT_OCP 1#define CHARGE_FLAGS_ROLE_MASK (7 << 0)#define CHARGE_FLAGS_TYPE_MASK (0xf << CHARGE_FLAGS_TYPE_SHIFT)#define CHARGE_FLAGS_TYPE_SHIFT 3#define CHARGE_FLAGS_OVERRIDE (1 << 13)#define CHARGE_FLAGS_DELAYED_OVERRIDE (1 << 14)#define CHARGE_FLAGS_DUAL_ROLE (1 << 15)#define PD_EVENT_NO_ENTRY 0xff#define PD_EVENT_VIDEO_CODEC (PD_EVENT_VIDEO_BASE+1)#define PD_EVENT_VIDEO_DP_MODE (PD_EVENT_VIDEO_BASE+0)#define PD_EVENT_VIDEO_BASE 0x60#define PD_EVENT_PS_FAULT (PD_EVENT_PS_BASE+0)#define PD_EVENT_PS_BASE 0x40#define PD_EVENT_ACC_RW_ERASE (PD_EVENT_ACC_BASE+1)#define PD_EVENT_ACC_RW_FAIL (PD_EVENT_ACC_BASE+0)#define PD_EVENT_ACC_BASE 0x20#define PD_EVENT_MCU_BOARD_CUSTOM (PD_EVENT_MCU_BASE+2)#define PD_EVENT_MCU_CONNECT (PD_EVENT_MCU_BASE+1)#define PD_EVENT_MCU_CHARGE (PD_EVENT_MCU_BASE+0)#define PD_EVENT_MCU_BASE 0x00#define PD_LOG_SIZE(size_port) ((size_port) & PD_LOG_SIZE_MASK)#define PD_LOG_PORT(size_port) ((size_port) >> PD_LOG_PORT_SHIFT)#define PD_LOG_PORT_SIZE(port,size) (((port) << PD_LOG_PORT_SHIFT) | ((size) & PD_LOG_SIZE_MASK))#define PD_LOG_PORT_SHIFT 5#define PD_LOG_PORT_MASK 0xe0#define PD_LOG_SIZE_MASK 0x1f#define PD_LOG_TIMESTAMP_SHIFT 10#define EC_CMD_PD_GET_LOG_ENTRY 0x0115#define EC_CMD_PD_CHARGE_PORT_OVERRIDE 0x0114#define EC_CMD_USB_PD_DISCOVERY 0x0113#define EC_CMD_USB_PD_DEV_INFO 0x0112#define EC_CMD_USB_PD_RW_HASH_ENTRY 0x0111#define EC_CMD_USB_PD_FW_UPDATE 0x0110#define PD_POWER_CHARGING_PORT 0xff#define EC_CMD_USB_PD_POWER_INFO 0x0103#define EC_USB_PD_MAX_PORTS 8#define EC_CMD_USB_PD_PORTS 0x0102#define PD_CTRL_RESP_ROLE_EXT_POWERED (1 << 6)#define PD_CTRL_RESP_ROLE_USB_COMM (1 << 5)#define PD_CTRL_RESP_ROLE_DR_DATA (1 << 4)#define PD_CTRL_RESP_ROLE_DR_POWER (1 << 3)#define PD_CTRL_RESP_ROLE_VCONN (1 << 2)#define PD_CTRL_RESP_ROLE_DATA (1 << 1)#define PD_CTRL_RESP_ROLE_POWER (1 << 0)#define PD_CTRL_RESP_ENABLED_PD_CAPABLE (1 << 2)#define PD_CTRL_RESP_ENABLED_CONNECTED (1 << 1)#define PD_CTRL_RESP_ENABLED_COMMS (1 << 0)#define EC_CMD_USB_PD_CONTROL 0x0101#define PD_EVENT_DATA_SWAP (1 << 3)#define PD_EVENT_IDENTITY_RECEIVED (1 << 2)#define PD_EVENT_POWER_CHANGE (1 << 1)#define PD_EVENT_UPDATE_DEVICE (1 << 0)#define EC_CMD_PD_HOST_EVENT_STATUS 0x0104#define PD_STATUS_EC_INT_ACTIVE (PD_STATUS_TCPC_ALERT_0 | PD_STATUS_TCPC_ALERT_1 | PD_STATUS_HOST_EVENT)#define PD_STATUS_TCPC_ALERT_3 (1 << 6)#define PD_STATUS_TCPC_ALERT_2 (1 << 5)#define PD_STATUS_TCPC_ALERT_1 (1 << 4)#define PD_STATUS_TCPC_ALERT_0 (1 << 3)#define PD_STATUS_JUMPED_TO_IMAGE (1 << 2)#define PD_STATUS_IN_RW (1 << 1)#define PD_STATUS_HOST_EVENT (1 << 0)#define EC_STATUS_HIBERNATING (1 << 0)#define EC_VER_PD_EXCHANGE_STATUS 2#define EC_CMD_PD_EXCHANGE_STATUS 0x0100#define EC_CMD_VERSION0 0x00DC#define EC_CMD_RESEND_RESPONSE 0x00DB#define EC_CMD_REBOOT 0x00D1#define EC_CMD_GET_PANIC_INFO 0x00D3#define EC_REBOOT_FLAG_SWITCH_RW_SLOT (1 << 2)#define EC_REBOOT_FLAG_ON_AP_SHUTDOWN (1 << 1)#define EC_REBOOT_FLAG_RESERVED0 (1 << 0)#define EC_CMD_REBOOT_EC 0x00D2#define EC_CMD_I2C_PASSTHRU_PROTECT 0x00B7#define VBOOT_MODE_RECOVERY 2#define VBOOT_MODE_DEVELOPER 1#define VBOOT_MODE_NORMAL 0#define EC_CMD_ENTERING_MODE 0x00B6#define EC_CMD_SB_FW_UPDATE 0x00B5#define EC_CMD_BATTERY_VENDOR_PARAM 0x00B4#define EC_CMD_SB_WRITE_BLOCK 0x00B3#define EC_CMD_SB_READ_BLOCK 0x00B2#define EC_CMD_SB_WRITE_WORD 0x00B1#define EC_CMD_SB_READ_WORD 0x00B0#define EC_DEVICE_EVENT_MASK(event_code) (1UL << (event_code % 32))#define EC_CMD_DEVICE_EVENT 0x00AA#define EC_CMD_HOST_SLEEP_EVENT 0x00A9#define EC_CMD_HIBERNATION_DELAY 0x00A8#define EC_CMD_OVERRIDE_DEDICATED_CHARGER_LIMIT 0x00A3#define EC_POWER_LIMIT_NONE 0xffff#define EC_CMD_EXTERNAL_POWER_LIMIT 0x00A2#define EC_CMD_CHARGE_CURRENT_LIMIT 0x00A1#define EC_CMD_CHARGE_STATE 0x00A0#define EC_HANG_STOP_NOW (1 << 31)#define EC_HANG_START_NOW (1 << 30)#define EC_HANG_STOP_ON_SUSPEND (1 << 10)#define EC_HANG_STOP_ON_HOST_COMMAND (1 << 9)#define EC_HANG_STOP_ON_POWER_RELEASE (1 << 8)#define EC_HANG_START_ON_RESUME (1 << 3)#define EC_HANG_START_ON_LID_OPEN (1 << 2)#define EC_HANG_START_ON_LID_CLOSE (1 << 1)#define EC_HANG_START_ON_POWER_PRESS (1 << 0)#define EC_CMD_HANG_DETECT 0x009F#define EC_I2C_STATUS_ERROR (EC_I2C_STATUS_NAK | EC_I2C_STATUS_TIMEOUT)#define EC_I2C_STATUS_TIMEOUT (1 << 1)#define EC_I2C_STATUS_NAK (1 << 0)#define EC_I2C_ADDR_MASK 0x3ff#define EC_I2C_FLAG_READ (1 << 15)#define EC_CMD_I2C_PASSTHRU 0x009E#define EC_CMD_POWER_INFO 0x009D#define EC_CMD_LDO_GET 0x009C#define EC_CMD_LDO_SET 0x009B#define EC_CMD_USB_MUX 0x009A#define EC_BATTERY_CUTOFF_FLAG_AT_SHUTDOWN (1 << 0)#define EC_CMD_BATTERY_CUT_OFF 0x0099#define EC_CMD_CONSOLE_READ 0x0098#define EC_CMD_CONSOLE_SNAPSHOT 0x0097#define EC_VER_CHARGE_CONTROL 1#define EC_CMD_CHARGE_CONTROL 0x0096#define EC_CMD_I2C_WRITE 0x0095#define EC_CMD_I2C_READ 0x0094#define EC_CMD_GPIO_GET 0x0093#define EC_CMD_GPIO_SET 0x0092#define EC_VER_SWITCH_ENABLE_WIRELESS 1#define EC_CMD_SWITCH_ENABLE_WIRELESS 0x0091#define EC_CMD_SWITCH_ENABLE_BKLIGHT 0x0090#define EC_CMD_HOST_EVENT 0x00A4#define EC_CMD_HOST_EVENT_CLEAR_B 0x008F#define EC_CMD_HOST_EVENT_SET_WAKE_MASK 0x008E#define EC_CMD_HOST_EVENT_CLEAR 0x008C#define EC_CMD_HOST_EVENT_SET_SCI_MASK 0x008B#define EC_CMD_HOST_EVENT_SET_SMI_MASK 0x008A#define EC_CMD_HOST_EVENT_GET_WAKE_MASK 0x008D#define EC_CMD_HOST_EVENT_GET_SCI_MASK 0x0089#define EC_CMD_HOST_EVENT_GET_SMI_MASK 0x0088#define EC_CMD_HOST_EVENT_GET_B 0x0087#define EC_CMD_TEMP_SENSOR_GET_INFO 0x0070#define EC_MKBP_FP_IMAGE_READY (1 << 31)#define EC_MKBP_FP_FINGER_UP (1 << 30)#define EC_MKBP_FP_FINGER_DOWN (1 << 29)#define EC_MKBP_FP_RAW_EVENT(fp_events) ((fp_events) & 0x00FFFFFF)#define EC_CMD_KEYBOARD_FACTORY_TEST 0x0068#define EC_MKBP_TABLET_MODE 1#define EC_MKBP_LID_OPEN 0#define EC_MKBP_RECOVERY 3#define EC_MKBP_VOL_DOWN 2#define EC_MKBP_VOL_UP 1#define EC_MKBP_POWER_BUTTON 0#define EC_CMD_GET_NEXT_EVENT 0x0067#define EC_CMD_KEYSCAN_SEQ_CTRL 0x0066#define EC_CMD_MKBP_GET_CONFIG 0x0065#define EC_CMD_MKBP_SET_CONFIG 0x0064#define EC_CMD_MKBP_SIMULATE_KEY 0x0062#define EC_CMD_MKBP_INFO 0x0061#define EC_CMD_MKBP_STATE 0x0060#define EC_CMD_TMP006_GET_RAW 0x0055#define EC_CMD_TMP006_SET_CALIBRATION 0x0054#define EC_CMD_TMP006_GET_CALIBRATION 0x0053#define EC_CMD_THERMAL_AUTO_FAN_CTRL 0x0052#define EC_CMD_THERMAL_GET_THRESHOLD 0x0051#define EC_CMD_THERMAL_SET_THRESHOLD 0x0050#define EC_CMD_VSTORE_WRITE 0x004B#define EC_CMD_VSTORE_READ 0x004A#define EC_CMD_VSTORE_INFO 0x0049#define EC_VSTORE_SLOT_MAX 32#define EC_CMD_PORT80_READ 0x0048#define EC_CMD_PORT80_LAST_BOOT 0x0048#define EC_RTC_ALARM_CLEAR 0#define EC_CMD_RTC_SET_ALARM 0x0047#define EC_CMD_RTC_SET_VALUE 0x0046#define EC_CMD_RTC_GET_ALARM 0x0045#define EC_CMD_RTC_GET_VALUE 0x0044#define EC_CMD_PSTORE_WRITE 0x0042#define EC_CMD_PSTORE_READ 0x0041#define EC_CMD_PSTORE_INFO 0x0040#define EC_CMD_USB_CHARGE_SET_MODE 0x0030#define EC_CMD_CONFIG_POWER_BUTTON 0x002D#define EC_CMD_FORCE_LID_OPEN 0x002C#define LID_ANGLE_UNRELIABLE 500#define MOTION_SENSE_SET_OFFSET 1#define EC_MOTION_SENSE_INVALID_CALIB_TEMP 0x8000#define EC_MOTION_SENSE_NO_VALUE -1#define MOTIONSENSE_SENSOR_FLAG_TABLET_MODE (1<<3)#define MOTIONSENSE_SENSOR_FLAG_WAKEUP (1<<2)#define MOTIONSENSE_SENSOR_FLAG_TIMESTAMP (1<<1)#define MOTIONSENSE_SENSOR_FLAG_FLUSH (1<<0)#define MOTIONSENSE_SENSOR_FLAG_PRESENT (1<<0)#define MOTIONSENSE_MODULE_FLAG_ACTIVE (1<<0)#define EC_CMD_MOTION_SENSE_CMD 0x002B#define EC_VBOOT_HASH_OFFSET_UPDATE 0xfffffffc#define EC_VBOOT_HASH_OFFSET_ACTIVE 0xfffffffd#define EC_VBOOT_HASH_OFFSET_RO 0xfffffffe#define EC_CMD_VBOOT_HASH 0x002A#define EC_LED_FLAGS_AUTO (1 << 1)#define EC_LED_FLAGS_QUERY (1 << 0)#define EC_CMD_LED_CONTROL 0x0029#define EC_CMD_LIGHTBAR_CMD 0x0028#define EC_CMD_PWM_GET_DUTY 0x0026#define EC_PWM_MAX_DUTY 0xffff#define EC_CMD_PWM_SET_DUTY 0x0025#define EC_CMD_PWM_SET_FAN_DUTY 0x0024#define EC_CMD_PWM_SET_KEYBOARD_BACKLIGHT 0x0023#define EC_CMD_PWM_GET_KEYBOARD_BACKLIGHT 0x0022#define EC_CMD_PWM_SET_FAN_TARGET_RPM 0x0021#define EC_CMD_PWM_GET_FAN_TARGET_RPM 0x0020#define EC_CMD_FLASH_SELECT 0x0019#define EC_CMD_FLASH_SPI_INFO 0x0018#define EC_VBNV_BLOCK_SIZE 16#define EC_VER_VBNV_CONTEXT 1#define EC_CMD_VBNV_CONTEXT 0x0017#define EC_VER_FLASH_REGION_INFO 1#define EC_CMD_FLASH_REGION_INFO 0x0016#define EC_FLASH_PROTECT_ROLLBACK_NOW (1 << 10)#define EC_FLASH_PROTECT_ROLLBACK_AT_BOOT (1 << 9)#define EC_FLASH_PROTECT_RW_NOW (1 << 8)#define EC_FLASH_PROTECT_RW_AT_BOOT (1 << 7)#define EC_FLASH_PROTECT_ALL_AT_BOOT (1 << 6)#define EC_FLASH_PROTECT_ERROR_INCONSISTENT (1 << 5)#define EC_FLASH_PROTECT_ERROR_STUCK (1 << 4)#define EC_FLASH_PROTECT_GPIO_ASSERTED (1 << 3)#define EC_FLASH_PROTECT_ALL_NOW (1 << 2)#define EC_FLASH_PROTECT_RO_NOW (1 << 1)#define EC_FLASH_PROTECT_RO_AT_BOOT (1 << 0)#define EC_VER_FLASH_PROTECT 1#define EC_CMD_FLASH_PROTECT 0x0015#define EC_VER_FLASH_WRITE 1#define EC_CMD_FLASH_ERASE 0x0013#define EC_FLASH_WRITE_VER0_SIZE 64#define EC_CMD_FLASH_WRITE 0x0012#define EC_CMD_FLASH_READ 0x0011#define EC_FLASH_INFO_SELECT_REQUIRED (1 << 1)#define EC_FLASH_INFO_ERASE_TO_0 (1 << 0)#define EC_VER_FLASH_INFO 2#define EC_CMD_FLASH_INFO 0x0010#define EC_CMD_SET_SKU_ID 0x000F#define EC_CMD_GET_SKU_ID 0x000E#define EC_FEATURE_MASK_1(event_code) (1UL << (event_code - 32))#define EC_FEATURE_MASK_0(event_code) (1UL << (event_code % 32))#define EC_CMD_GET_FEATURES 0x000D#define EC_CMD_GSV_PAUSE_IN_S5 0x000C#define EC_GSV_PARAM_MASK 0x00ffffff#define EC_GSV_SET 0x80000000#define EC_PROTOCOL_INFO_IN_PROGRESS_SUPPORTED (1 << 0)#define EC_CMD_GET_PROTOCOL_INFO 0x000B#define EC_CMD_TEST_PROTOCOL 0x000A#define EC_CMD_GET_COMMS_STATUS 0x0009#define EC_CMD_GET_CMD_VERSIONS 0x0008#define EC_CMD_READ_MEMMAP 0x0007#define EC_CMD_GET_BOARD_VERSION 0x0006#define EC_CMD_GET_CHIP_INFO 0x0005#define EC_CMD_GET_BUILD_INFO 0x0004#define EC_CMD_READ_TEST 0x0003#define EC_CMD_GET_VERSION 0x0002#define EC_CMD_HELLO 0x0001#define EC_CMD_PROTO_VERSION 0x0000#define EC_HOST_RESPONSE_VERSION 3#define EC_HOST_REQUEST_VERSION 3#define EC_COMMAND_PROTOCOL_3 0xda#define EC_PROTO2_MAX_RESPONSE_SIZE (EC_PROTO2_RESPONSE_OVERHEAD + EC_PROTO2_MAX_PARAM_SIZE)#define EC_PROTO2_MAX_REQUEST_SIZE (EC_PROTO2_REQUEST_OVERHEAD + EC_PROTO2_MAX_PARAM_SIZE)#define EC_PROTO2_MAX_PARAM_SIZE 0xfc#define EC_PROTO2_RESPONSE_OVERHEAD (EC_PROTO2_RESPONSE_HEADER_BYTES + EC_PROTO2_RESPONSE_TRAILER_BYTES)#define EC_PROTO2_RESPONSE_TRAILER_BYTES 1#define EC_PROTO2_RESPONSE_HEADER_BYTES 2#define EC_PROTO2_REQUEST_OVERHEAD (EC_PROTO2_REQUEST_HEADER_BYTES + EC_PROTO2_REQUEST_TRAILER_BYTES)#define EC_PROTO2_REQUEST_TRAILER_BYTES 1#define EC_PROTO2_REQUEST_HEADER_BYTES 3#define EC_SPI_OLD_READY 0xfd#define EC_SPI_NOT_READY 0xfc#define EC_SPI_RX_BAD_DATA 0xfb#define EC_SPI_PROCESSING 0xfa#define EC_SPI_RECEIVING 0xf9#define EC_SPI_RX_READY 0xf8#define EC_SPI_PAST_END 0xed#define EC_SPI_FRAME_START 0xec#define EC_HOST_ARGS_FLAG_TO_HOST 0x02#define EC_HOST_ARGS_FLAG_FROM_HOST 0x01#define EC_HOST_EVENT_MASK(event_code) (1ULL << ((event_code) - 1))#define EC_LPC_STATUS_BUSY_MASK (EC_LPC_STATUS_FROM_HOST | EC_LPC_STATUS_PROCESSING)#define EC_LPC_STATUS_RESERVED 0x80#define EC_LPC_STATUS_SMI_PENDING 0x40#define EC_LPC_STATUS_SCI_PENDING 0x20#define EC_LPC_STATUS_BURST_MODE 0x10#define EC_LPC_STATUS_LAST_CMD 0x08#define EC_LPC_STATUS_PROCESSING 0x04#define EC_LPC_STATUS_FROM_HOST 0x02#define EC_LPC_STATUS_TO_HOST 0x01#define __ec_todo_unpacked#define __ec_todo_packed __packed#define __ec_align_offset2 __packed#define __ec_align_offset1 __packed#define __ec_align_size1 __packed#define __ec_align4 __packed#define __ec_align2 __packed#define __ec_align1 __packed#define EC_ACPI_MEM_VERSION_CURRENT 2#define EC_ACPI_MEM_MAPPED_SIZE 0xe0#define EC_ACPI_MEM_MAPPED_BEGIN 0x20#define EC_ACPI_MEM_DEVICE_TABLET_MODE 0x01#define EC_ACPI_MEM_DEVICE_ORIENTATION 0x09#define EC_ACPI_MEM_CHARGING_LIMIT_DISABLED 0xff#define EC_ACPI_MEM_CHARGING_LIMIT_STEP_MA 64#define EC_ACPI_MEM_CHARGING_LIMIT 0x08#define EC_ACPI_MEM_TEMP_COMMIT_ENABLE_MASK (1 << 1)#define EC_ACPI_MEM_TEMP_COMMIT_SELECT_MASK (1 << 0)#define EC_ACPI_MEM_TEMP_COMMIT 0x07#define EC_ACPI_MEM_TEMP_THRESHOLD 0x06#define EC_ACPI_MEM_TEMP_ID 0x05#define EC_ACPI_MEM_FAN_DUTY 0x04#define EC_ACPI_MEM_KEYBOARD_BACKLIGHT 0x03#define EC_ACPI_MEM_TEST_COMPLIMENT 0x02#define EC_ACPI_MEM_TEST 0x01#define EC_ACPI_MEM_VERSION 0x00#define EC_CMD_ACPI_QUERY_EVENT 0x0084#define EC_CMD_ACPI_BURST_DISABLE 0x0083#define EC_CMD_ACPI_BURST_ENABLE 0x0082#define EC_CMD_ACPI_WRITE 0x0081#define EC_CMD_ACPI_READ 0x0080#define EC_WIRELESS_SWITCH_WLAN_POWER 0x08#define EC_WIRELESS_SWITCH_WWAN 0x04#define EC_WIRELESS_SWITCH_BLUETOOTH 0x02#define EC_WIRELESS_SWITCH_WLAN 0x01#define EC_WIRELESS_SWITCH_ALL ~0x00#define EC_HOST_CMD_FLAG_VERSION_3 0x02#define EC_HOST_CMD_FLAG_LPC_ARGS_SUPPORTED 0x01#define EC_SWITCH_IGNORE0 0x20#define EC_SWITCH_DEDICATED_RECOVERY 0x10#define EC_SWITCH_IGNORE1 0x08#define EC_SWITCH_WRITE_PROTECT_DISABLED 0x04#define EC_SWITCH_POWER_BUTTON_PRESSED 0x02#define EC_SWITCH_LID_OPEN 0x01#define EC_BATT_FLAG_LEVEL_CRITICAL 0x10#define EC_BATT_FLAG_CHARGING 0x08#define EC_BATT_FLAG_DISCHARGING 0x04#define EC_BATT_FLAG_BATT_PRESENT 0x02#define EC_BATT_FLAG_AC_PRESENT 0x01#define EC_FAN_SPEED_STALLED 0xfffe#define EC_FAN_SPEED_NOT_PRESENT 0xffff#define EC_FAN_SPEED_ENTRIES 4#define EC_TEMP_SENSOR_DEFAULT (296 - EC_TEMP_SENSOR_OFFSET)#define EC_ALS_ENTRIES 2#define EC_TEMP_SENSOR_OFFSET 200#define EC_TEMP_SENSOR_NOT_CALIBRATED 0xfc#define EC_TEMP_SENSOR_NOT_POWERED 0xfd#define EC_TEMP_SENSOR_ERROR 0xfe#define EC_TEMP_SENSOR_NOT_PRESENT 0xff#define EC_TEMP_SENSOR_B_ENTRIES 8#define EC_TEMP_SENSOR_ENTRIES 16#define EC_MEMMAP_ACC_STATUS_PRESENCE_BIT (1 << 7)#define EC_MEMMAP_ACC_STATUS_BUSY_BIT (1 << 4)#define EC_MEMMAP_ACC_STATUS_SAMPLE_ID_MASK 0x0f#define EC_MEMMAP_NO_ACPI 0xe0#define EC_MEMMAP_GYRO_DATA 0xa0#define EC_MEMMAP_ACC_DATA 0x92#define EC_MEMMAP_ACC_STATUS 0x90#define EC_MEMMAP_ALS 0x80#define EC_MEMMAP_BATT_TYPE 0x78#define EC_MEMMAP_BATT_SERIAL 0x70#define EC_MEMMAP_BATT_MODEL 0x68#define EC_MEMMAP_BATT_MFGR 0x60#define EC_MEMMAP_BATT_CCNT 0x5c#define EC_MEMMAP_BATT_LFCC 0x58#define EC_MEMMAP_BATT_DVLT 0x54#define EC_MEMMAP_BATT_DCAP 0x50#define EC_MEMMAP_BATT_FLAG 0x4c#define EC_MEMMAP_BATT_CAP 0x48#define EC_MEMMAP_BATT_RATE 0x44#define EC_MEMMAP_BATT_VOLT 0x40#define EC_MEMMAP_HOST_EVENTS 0x34#define EC_MEMMAP_SWITCHES 0x30#define EC_MEMMAP_HOST_CMD_FLAGS 0x27#define EC_MEMMAP_EVENTS_VERSION 0x26#define EC_MEMMAP_SWITCHES_VERSION 0x25#define EC_MEMMAP_BATTERY_VERSION 0x24#define EC_MEMMAP_THERMAL_VERSION 0x23#define EC_MEMMAP_ID_VERSION 0x22#define EC_MEMMAP_ID 0x20#define EC_MEMMAP_TEMP_SENSOR_B 0x18#define EC_MEMMAP_FAN 0x10#define EC_MEMMAP_TEMP_SENSOR 0x00#define EC_MEMMAP_TEXT_MAX 8#define EC_MEMMAP_SIZE 255#define EC_LPC_ADDR_MEMMAP 0x900#define EC_LPC_CMDR_SMI (1 << 6)#define EC_LPC_CMDR_SCI (1 << 5)#define EC_LPC_CMDR_ACPI_BRST (1 << 4)#define EC_LPC_CMDR_CMD (1 << 3)#define EC_LPC_CMDR_BUSY (1 << 2)#define EC_LPC_CMDR_PENDING (1 << 1)#define EC_LPC_CMDR_DATA (1 << 0)#define EC_HOST_CMD_REGION_SIZE 0x80#define EC_HOST_CMD_REGION1 0x880#define EC_HOST_CMD_REGION0 0x800#define EC_LPC_HOST_PACKET_SIZE 0x100#define EC_LPC_ADDR_HOST_PACKET 0x800#define EC_LPC_ADDR_HOST_PARAM 0x804#define EC_LPC_ADDR_HOST_ARGS 0x800#define EC_LPC_ADDR_HOST_CMD 0x204#define EC_LPC_ADDR_HOST_DATA 0x200#define EC_LPC_ADDR_ACPI_CMD 0x66#define EC_LPC_ADDR_ACPI_DATA 0x62#define EC_VER_MASK(version) (1UL << (version))#define EC_PROTO_VERSION 0x00000002#define __CROS_EC_COMMANDS_H#define __packed __attribute__((packed))#define _CROS_MESSAGE_H#define gpio_get_ops(dev) ((struct dm_gpio_ops *)(dev)->driver->ops)#define GPIOD_IS_OUT_ACTIVE (1 << 4)#define GPIOD_ACTIVE_LOW (1 << 3)#define GPIOD_IS_IN (1 << 2)#define GPIOD_IS_OUT (1 << 1)#define GPIOD_REQUESTED (1 << 0)#define _ASM_GENERIC_GPIO_H_#define __ASM_SANDBOX_GPIO_H#define _DM_OF_EXTRA_H#define CROS_EC_KEYSCAN_COLS 13#define ALIGN(x,a) __ALIGN_MASK((x),(typeof(x))(a)-1)#define __ALIGN_MASK(x,mask) (((x)+(mask))&~(mask))#define dm_cros_ec_get_ops(dev) ((struct dm_cros_ec_ops *)(dev)->driver->ops)#define _CROS_EC_H#define led_get_ops(dev) ((struct led_ops *)(dev)->driver->ops)#define __LED_H#define CONFIG_LED_BLINK 1#define PCI_EA_BAR4_MAGIC 0x74747474#define PCI_EA_BAR2_MAGIC 0x72727272#define PCI_CAP_EA_SIZE_HI 0x00000010ULL#define PCI_CAP_EA_SIZE_LO 0x0000ffff#define PCI_CAP_EA_BASE_HI4 0x00040000ULL#define PCI_CAP_EA_BASE_HI2 0x00020000ULL#define PCI_CAP_EA_BASE_LO4 0x00140000#define PCI_CAP_EA_BASE_LO2 0x00120000#define PCI_CAP_EA_BASE_LO1 0x00110000#define PCI_CAP_EA_BASE_LO0 0x00100000#define SANDBOX_CLK_RATE 32768#define SWAP_CASE_DRV_DATA 0x55aa#define PCI_VENDOR_ID_SANDBOX SANDBOX_PCI_VENDOR_ID#define PCI_EXT_CAP_ID_DSN_OFFSET 0x300#define PCI_EXT_CAP_ID_VC_OFFSET 0x200#define PCI_EXT_CAP_ID_ERR_OFFSET 0x100#define PCI_CAP_ID_EA_OFFSET 0x80#define PCI_CAP_ID_MSIX_OFFSET 0x70#define PCI_CAP_ID_EXP_OFFSET 0x60#define PCI_CAP_ID_PM_OFFSET 0x50#define SANDBOX_PCI_CLASS_SUB_CODE PCI_CLASS_SUB_CODE_COMM_SERIAL#define SANDBOX_PCI_CLASS_CODE PCI_CLASS_CODE_COMM#define SANDBOX_PCI_DEVICE_ID 0x5678#define SANDBOX_PCI_VENDOR_ID 0x1234#define SANDBOX_I2C_TEST_ADDR 0x59#define __ASM_TEST_H#define ENODEV 19#define IS_ENABLED(option) (config_enabled(option) || config_enabled(option ## _MODULE))#define CONFIG_LED 1#define ll_entry_declare(_type,_name,_list) _type _u_boot_list_2_ ## _list ## _2_ ## _name __aligned(4) __attribute__((unused, section(".u_boot_list_2_"#_list"_2_"#_name)))#define CONFIG_BOARD_LATE_INIT 1#define NUM_SLOTS 2#define BOOT_SLOT_NAME(slot_num) ('a' + (slot_num))#define __ANDROID_AB_H#define U_BOOT_CMD_MKENT_COMPLETE(_name,_maxargs,_rep,_cmd,_usage,_help,_comp) { #_name, _maxargs, _rep ? cmd_always_repeatable : cmd_never_repeatable, _cmd, _usage, _CMD_HELP(_help) _CMD_COMPLETE(_comp) }#define U_BOOT_CMD_COMPLETE(_name,_maxargs,_rep,_cmd,_usage,_help,_comp) ll_entry_declare(cmd_tbl_t, _name, cmd) = U_BOOT_CMD_MKENT_COMPLETE(_name, _maxargs, _rep, _cmd, _usage, _help, _comp);#define U_BOOT_CMD(_name,_maxargs,_rep,_cmd,_usage,_help) U_BOOT_CMD_COMPLETE(_name, _maxargs, _rep, _cmd, _usage, _help, NULL)#define _CMD_HELP(x) x,#define _CMD_COMPLETE(x) x,#define AVB_ALIGNMENT_SIZE 8#define AVB_ATTR_SENTINEL __attribute__((__sentinel__))#define AVB_ATTR_NO_RETURN __attribute__((noreturn))#define AVB_ATTR_PACKED __attribute__((packed))#define AVB_ATTR_WARN_UNUSED_RESULT __attribute__((warn_unused_result))#define AVB_SYSDEPS_H_#define AVB_INSIDE_LIBAVB_H#define AVB_DESCRIPTOR_H_#define AVB_CHAIN_PARTITION_DESCRIPTOR_H_#define AVB_SHA512_DIGEST_SIZE 64#define AVB_SHA256_DIGEST_SIZE 32#define AVB_SHA1_DIGEST_SIZE 20#define AVB_RSA8192_NUM_BYTES 1024#define AVB_RSA4096_NUM_BYTES 512#define AVB_RSA2048_NUM_BYTES 256#define AVB_CRYPTO_H_#define AVB_FOOTER_MAGIC_LEN 4#define AVB_FOOTER_VERSION_MINOR 0#define AVB_FOOTER_VERSION_MAJOR 1#define AVB_FOOTER_SIZE 64#define AVB_FOOTER_MAGIC "AVBf"#define AVB_FOOTER_H_#define AVB_HASH_DESCRIPTOR_H_#define AVB_HASHTREE_DESCRIPTOR_H_#define AVB_KERNEL_CMDLINE_DESCRIPTOR_H_#define AVB_NPV_PERSISTENT_DIGEST_PREFIX "avb.persistent_digest."#define AVB_OPS_H_#define AVB_PROPERTY_DESCRIPTOR_H_#define AVB_RELEASE_STRING_SIZE 48#define AVB_MAGIC_LEN 4#define AVB_MAGIC "AVB0"#define AVB_VBMETA_IMAGE_HEADER_SIZE 256#define AVB_VBMETA_IMAGE_H_#define AVB_MAX_NUMBER_OF_ROLLBACK_INDEX_LOCATIONS 32#define AVB_SLOT_VERIFY_H_#define avb_fatalv(message,__VA_ARGS__...) do { avb_printv(avb_basename(__FILE__), ":", AVB_TO_STRING(__LINE__), ": FATAL: ", message, ## __VA_ARGS__); avb_abort(); } while (0)#define avb_fatal(message) do { avb_printv(avb_basename(__FILE__), ":", AVB_TO_STRING(__LINE__), ": FATAL: ", message, NULL); avb_abort(); } while (0)#define avb_errorv(message,__VA_ARGS__...) do { avb_printv(avb_basename(__FILE__), ":", AVB_TO_STRING(__LINE__), ": ERROR: ", message, ## __VA_ARGS__); } while (0)#define avb_error(message) do { avb_printv(avb_basename(__FILE__), ":", AVB_TO_STRING(__LINE__), ": ERROR: ", message, NULL); } while (0)#define avb_debugv(message,__VA_ARGS__...)#define avb_debug(message)#define avb_assert_aligned(addr) avb_assert((((uintptr_t)addr) & (AVB_ALIGNMENT_SIZE - 1)) == 0)#define avb_assert_not_reached()#define avb_assert(expr)#define AVB_TO_STRING(x) AVB_STRINGIFY(x)#define AVB_STRINGIFY(x) #x#define AVB_UTIL_H_#define AVB_VERSION_SUB 0#define AVB_VERSION_MINOR 1#define AVB_VERSION_MAJOR 1#define AVB_VERSION_H_#define LIBAVB_H_#define MMC_CMD_SEND_TUNING_BLOCK_HS200 21#define MMC_CMD_SEND_TUNING_BLOCK 19#define CONFIG_SYS_MMC_MAX_BLK_COUNT 65535#define MMC_MIN_PART_SWITCH_TIME 30#define mmc_host_is_spi(mmc) 0#define MMC_CLK_DISABLE true#define MMC_CLK_ENABLE false#define UHS_CAPS (MMC_CAP(UHS_SDR12) | MMC_CAP(UHS_SDR25) | MMC_CAP(UHS_SDR50) | MMC_CAP(UHS_SDR104) | MMC_CAP(UHS_DDR50))#define mmc_get_ops(dev) ((struct dm_mmc_ops *)(dev)->driver->ops)#define MMC_PART_RPMB 3#define MMC_NUM_BOOT_PARTITION 2#define MMC_MAX_BLOCK_LEN 512#define MMC_ALL_SIGNAL_VOLTAGE (MMC_SIGNAL_VOLTAGE_120 | MMC_SIGNAL_VOLTAGE_180 | MMC_SIGNAL_VOLTAGE_330)#define MMC_QUIRK_RETRY_SET_BLOCKLEN BIT(1)#define MMC_QUIRK_RETRY_SEND_CID BIT(0)#define PART_ENH_ATTRIB (0x1f)#define ENHNCD_SUPPORT (0x2)#define PART_SUPPORT (0x1)#define PART_ACCESS_MASK (0x7)#define MMCPART_NOAVAILABLE (0xff)#define MMC_RSP_R7 (MMC_RSP_PRESENT|MMC_RSP_CRC|MMC_RSP_OPCODE)#define MMC_RSP_R6 (MMC_RSP_PRESENT|MMC_RSP_CRC|MMC_RSP_OPCODE)#define MMC_RSP_R5 (MMC_RSP_PRESENT|MMC_RSP_CRC|MMC_RSP_OPCODE)#define MMC_RSP_R4 (MMC_RSP_PRESENT)#define MMC_RSP_R3 (MMC_RSP_PRESENT)#define MMC_RSP_R2 (MMC_RSP_PRESENT|MMC_RSP_136|MMC_RSP_CRC)#define MMC_RSP_R1b (MMC_RSP_PRESENT|MMC_RSP_CRC|MMC_RSP_OPCODE| MMC_RSP_BUSY)#define MMC_RSP_R1 (MMC_RSP_PRESENT|MMC_RSP_CRC|MMC_RSP_OPCODE)#define MMC_RSP_NONE (0)#define MMC_RSP_OPCODE (1 << 4)#define MMC_RSP_BUSY (1 << 3)#define MMC_RSP_CRC (1 << 2)#define MMC_RSP_136 (1 << 1)#define MMC_RSP_PRESENT (1 << 0)#define R1_APP_CMD (1 << 5)#define R1_ILLEGAL_COMMAND (1 << 22)#define EXT_CSD_WR_DATA_REL_GP(x) (1 << ((x)+1))#define EXT_CSD_WR_DATA_REL_USR (1 << 0)#define EXT_CSD_HS_CTRL_REL (1 << 0)#define EXT_CSD_ENH_GP(x) (1 << ((x)+1))#define EXT_CSD_ENH_USR (1 << 0)#define EXT_CSD_PARTITION_SETTING_COMPLETED (1 << 0)#define EXT_CSD_BOOT_BUS_WIDTH_WIDTH(x) (x)#define EXT_CSD_BOOT_BUS_WIDTH_RESET(x) (x << 2)#define EXT_CSD_BOOT_BUS_WIDTH_MODE(x) (x << 3)#define EXT_CSD_EXTRACT_PARTITION_ACCESS(x) ((x) & 0x7)#define EXT_CSD_EXTRACT_BOOT_PART(x) (((x) >> 3) & 0x7)#define EXT_CSD_EXTRACT_BOOT_ACK(x) (((x) >> 6) & 0x1)#define EXT_CSD_PARTITION_ACCESS(x) (x << 0)#define EXT_CSD_BOOT_PART_NUM(x) (x << 3)#define EXT_CSD_BOOT_ACK(x) (x << 6)#define EXT_CSD_PARTITION_ACCESS_DISABLE (0 << 0)#define EXT_CSD_PARTITION_ACCESS_ENABLE (1 << 0)#define EXT_CSD_BOOT_PARTITION_ENABLE (1 << 3)#define EXT_CSD_BOOT_ACK_ENABLE (1 << 6)#define EXT_CSD_DRV_STR_SHIFT 4#define EXT_CSD_TIMING_HS400 3#define EXT_CSD_TIMING_HS200 2#define EXT_CSD_TIMING_HS 1#define EXT_CSD_TIMING_LEGACY 0#define EXT_CSD_BUS_WIDTH_STROBE BIT(7)#define EXT_CSD_DDR_FLAG BIT(2)#define EXT_CSD_DDR_BUS_WIDTH_8 6#define EXT_CSD_DDR_BUS_WIDTH_4 5#define EXT_CSD_BUS_WIDTH_8 2#define EXT_CSD_BUS_WIDTH_4 1#define EXT_CSD_BUS_WIDTH_1 0#define EXT_CSD_CARD_TYPE_HS400 (EXT_CSD_CARD_TYPE_HS400_1_8V | EXT_CSD_CARD_TYPE_HS400_1_2V)#define EXT_CSD_CARD_TYPE_HS400_1_2V BIT(7)#define EXT_CSD_CARD_TYPE_HS400_1_8V BIT(6)#define EXT_CSD_CARD_TYPE_HS200 (EXT_CSD_CARD_TYPE_HS200_1_8V | EXT_CSD_CARD_TYPE_HS200_1_2V)#define EXT_CSD_CARD_TYPE_HS200_1_2V BIT(5)#define EXT_CSD_CARD_TYPE_HS200_1_8V BIT(4)#define EXT_CSD_CARD_TYPE_DDR_52 (EXT_CSD_CARD_TYPE_DDR_1_8V | EXT_CSD_CARD_TYPE_DDR_1_2V)#define EXT_CSD_CARD_TYPE_DDR_1_2V (1 << 3)#define EXT_CSD_CARD_TYPE_DDR_1_8V (1 << 2)#define EXT_CSD_CARD_TYPE_52 (1 << 1)#define EXT_CSD_CARD_TYPE_26 (1 << 0)#define EXT_CSD_CMD_SET_CPSECURE (1 << 2)#define EXT_CSD_CMD_SET_SECURE (1 << 1)#define EXT_CSD_CMD_SET_NORMAL (1 << 0)#define EXT_CSD_BKOPS_SUPPORT 502#define EXT_CSD_GENERIC_CMD6_TIME 248#define EXT_CSD_BOOT_MULT 226#define EXT_CSD_HC_ERASE_GRP_SIZE 224#define EXT_CSD_HC_WP_GRP_SIZE 221#define EXT_CSD_SEC_CNT 212#define EXT_CSD_PART_SWITCH_TIME 199#define EXT_CSD_CARD_TYPE 196#define EXT_CSD_REV 192#define EXT_CSD_HS_TIMING 185#define EXT_CSD_STROBE_SUPPORT 184#define EXT_CSD_BUS_WIDTH 183#define EXT_CSD_PART_CONF 179#define EXT_CSD_BOOT_BUS_WIDTH 177#define EXT_CSD_ERASE_GROUP_DEF 175#define EXT_CSD_RPMB_MULT 168#define EXT_CSD_WR_REL_SET 167#define EXT_CSD_WR_REL_PARAM 166#define EXT_CSD_BKOPS_EN 163#define EXT_CSD_RST_N_FUNCTION 162#define EXT_CSD_PARTITIONING_SUPPORT 160#define EXT_CSD_MAX_ENH_SIZE_MULT 157#define EXT_CSD_PARTITIONS_ATTRIBUTE 156#define EXT_CSD_PARTITION_SETTING 155#define EXT_CSD_GP_SIZE_MULT 143#define EXT_CSD_ENH_SIZE_MULT 140#define EXT_CSD_ENH_START_ADDR 136#define SD_SWITCH_SWITCH 1#define SD_SWITCH_CHECK 0#define MMC_SWITCH_MODE_WRITE_BYTE 0x03#define MMC_SWITCH_MODE_CLEAR_BITS 0x02#define MMC_SWITCH_MODE_SET_BITS 0x01#define MMC_SWITCH_MODE_CMD_SET 0x00#define MMC_VDD_35_36 0x00800000#define MMC_VDD_34_35 0x00400000#define MMC_VDD_33_34 0x00200000#define MMC_VDD_32_33 0x00100000#define MMC_VDD_31_32 0x00080000#define MMC_VDD_30_31 0x00040000#define MMC_VDD_29_30 0x00020000#define MMC_VDD_28_29 0x00010000#define MMC_VDD_27_28 0x00008000#define MMC_VDD_26_27 0x00004000#define MMC_VDD_25_26 0x00002000#define MMC_VDD_24_25 0x00001000#define MMC_VDD_23_24 0x00000800#define MMC_VDD_22_23 0x00000400#define MMC_VDD_21_22 0x00000200#define MMC_VDD_20_21 0x00000100#define MMC_VDD_165_195 0x00000080#define MMC_STATE_PRG (7 << 9)#define MMC_STATUS_ERROR (1 << 19)#define MMC_STATUS_CURR_STATE (0xf << 9)#define MMC_STATUS_RDY_FOR_DATA (1 << 8)#define MMC_STATUS_SWITCH_ERROR (1 << 7)#define MMC_STATUS_MASK (~0x0206BF7F)#define MMC_SECURE_TRIM2_ARG 0x80008000#define MMC_SECURE_TRIM1_ARG 0x80000001#define MMC_DISCARD_ARG 0x00000003#define MMC_TRIM_ARG 0x00000001#define MMC_SECURE_ERASE_ARG 0x80000000#define MMC_ERASE_ARG 0x00000000#define OCR_ACCESS_MODE 0x60000000#define OCR_VOLTAGE_MASK 0x007FFF80#define OCR_S18R 0x1000000#define OCR_HCS 0x40000000#define OCR_BUSY 0x80000000#define SD_MODE_UHS_DDR50 BIT(UHS_DDR50_BUS_SPEED)#define SD_MODE_UHS_SDR104 BIT(UHS_SDR104_BUS_SPEED)#define SD_MODE_UHS_SDR50 BIT(UHS_SDR50_BUS_SPEED)#define SD_MODE_UHS_SDR25 BIT(UHS_SDR25_BUS_SPEED)#define SD_MODE_UHS_SDR12 BIT(UHS_SDR12_BUS_SPEED)#define UHS_DDR50_BUS_SPEED 4#define UHS_SDR104_BUS_SPEED 3#define UHS_SDR50_BUS_SPEED 2#define UHS_SDR25_BUS_SPEED 1#define HIGH_SPEED_BUS_SPEED 1#define UHS_SDR12_BUS_SPEED 0#define SD_HIGHSPEED_SUPPORTED 0x00020000#define SD_HIGHSPEED_BUSY 0x00020000#define SD_CMD_APP_SEND_SCR 51#define SD_CMD_APP_SEND_OP_COND 41#define SD_CMD_ERASE_WR_BLK_END 33#define SD_CMD_ERASE_WR_BLK_START 32#define SD_CMD_APP_SD_STATUS 13#define SD_CMD_APP_SET_BUS_WIDTH 6#define SD_CMD_SWITCH_UHS18V 11#define SD_CMD_SEND_IF_COND 8#define SD_CMD_SWITCH_FUNC 6#define SD_CMD_SEND_RELATIVE_ADDR 3#define MMC_CMD62_ARG2 0xcbaea7#define MMC_CMD62_ARG1 0xefac62ec#define MMC_CMD_RES_MAN 62#define MMC_CMD_SPI_CRC_ON_OFF 59#define MMC_CMD_SPI_READ_OCR 58#define MMC_CMD_APP_CMD 55#define MMC_CMD_ERASE 38#define MMC_CMD_ERASE_GROUP_END 36#define MMC_CMD_ERASE_GROUP_START 35#define MMC_CMD_WRITE_MULTIPLE_BLOCK 25#define MMC_CMD_WRITE_SINGLE_BLOCK 24#define MMC_CMD_SET_BLOCK_COUNT 23#define MMC_CMD_READ_MULTIPLE_BLOCK 18#define MMC_CMD_READ_SINGLE_BLOCK 17#define MMC_CMD_SET_BLOCKLEN 16#define MMC_CMD_SEND_STATUS 13#define MMC_CMD_STOP_TRANSMISSION 12#define MMC_CMD_SEND_CID 10#define MMC_CMD_SEND_CSD 9#define MMC_CMD_SEND_EXT_CSD 8#define MMC_CMD_SELECT_CARD 7#define MMC_CMD_SWITCH 6#define MMC_CMD_SET_DSR 4#define MMC_CMD_SET_RELATIVE_ADDR 3#define MMC_CMD_ALL_SEND_CID 2#define MMC_CMD_SEND_OP_COND 1#define MMC_CMD_GO_IDLE_STATE 0#define MMC_DATA_WRITE 2#define MMC_DATA_READ 1#define IS_MMC(x) ((x)->version & MMC_VERSION_MMC)#define IS_SD(x) ((x)->version & SD_VERSION_SD)#define SD_DATA_4BIT 0x00040000#define MMC_MODE_SPI BIT(27)#define MMC_MODE_1BIT BIT(28)#define MMC_MODE_4BIT BIT(29)#define MMC_MODE_8BIT BIT(30)#define MMC_CAP_CD_ACTIVE_HIGH BIT(16)#define MMC_CAP_NEEDS_POLL BIT(15)#define MMC_CAP_NONREMOVABLE BIT(14)#define MMC_MODE_HS400_ES MMC_CAP(MMC_HS_400_ES)#define MMC_MODE_HS400 MMC_CAP(MMC_HS_400)#define MMC_MODE_HS200 MMC_CAP(MMC_HS_200)#define MMC_MODE_DDR_52MHz MMC_CAP(MMC_DDR_52)#define MMC_MODE_HS_52MHz MMC_CAP(MMC_HS_52)#define MMC_MODE_HS (MMC_CAP(MMC_HS) | MMC_CAP(SD_HS))#define MMC_CAP(mode) (1 << mode)#define MMC_VERSION_5_1 MAKE_MMC_VERSION(5, 1, 0)#define MMC_VERSION_5_0 MAKE_MMC_VERSION(5, 0, 0)#define MMC_VERSION_4_5 MAKE_MMC_VERSION(4, 5, 0)#define MMC_VERSION_4_41 MAKE_MMC_VERSION(4, 4, 1)#define MMC_VERSION_4_4 MAKE_MMC_VERSION(4, 4, 0)#define MMC_VERSION_4_3 MAKE_MMC_VERSION(4, 3, 0)#define MMC_VERSION_4_2 MAKE_MMC_VERSION(4, 2, 0)#define MMC_VERSION_4_1 MAKE_MMC_VERSION(4, 1, 0)#define MMC_VERSION_4 MAKE_MMC_VERSION(4, 0, 0)#define MMC_VERSION_3 MAKE_MMC_VERSION(3, 0, 0)#define MMC_VERSION_2_2 MAKE_MMC_VERSION(2, 2, 0)#define MMC_VERSION_1_4 MAKE_MMC_VERSION(1, 4, 0)#define MMC_VERSION_1_2 MAKE_MMC_VERSION(1, 2, 0)#define MMC_VERSION_UNKNOWN MAKE_MMC_VERSION(0, 0, 0)#define SD_VERSION_1_10 MAKE_SD_VERSION(1, 10, 0)#define SD_VERSION_1_0 MAKE_SD_VERSION(1, 0, 0)#define SD_VERSION_2 MAKE_SD_VERSION(2, 0, 0)#define SD_VERSION_3 MAKE_SD_VERSION(3, 0, 0)#define EXTRACT_SDMMC_CHANGE_VERSION(x) ((u32)(x) & 0xff)#define EXTRACT_SDMMC_MINOR_VERSION(x) (((u32)(x) >> 8) & 0xff)#define EXTRACT_SDMMC_MAJOR_VERSION(x) (((u32)(x) >> 16) & 0xff)#define MAKE_MMC_VERSION(a,b,c) (MMC_VERSION_MMC | MAKE_SDMMC_VERSION(a, b, c))#define MAKE_SD_VERSION(a,b,c) (SD_VERSION_SD | MAKE_SDMMC_VERSION(a, b, c))#define MAKE_SDMMC_VERSION(a,b,c) ((((u32)(a)) << 16) | ((u32)(b) << 8) | (u32)(c))#define MMC_VERSION_MMC (1U << 30)#define SD_VERSION_SD (1U << 31)#define _MMC_H_#define CONFIG_MMC_HW_PARTITIONING 1#define CONFIG_MMC_WRITE 1#define CONFIG_DM_MMC 1#define CONFIG_DM_REGULATOR 1#define ALLOWED_BUF_ALIGN 8#define CONFIG_FASTBOOT_BUF_ADDR 0x0#define CONFIG_FASTBOOT_BUF_SIZE 0x8192#define VERITY_TABLE_OPT_LOGGING "ignore_corruption"#define VERITY_TABLE_OPT_RESTART "restart_on_corruption"#define AVB_MAX_ARGS 1024#define _AVB_VERIFY_H#define CONFIG_OPTEE_TA_AVB 1#define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))#define CMD_FLAG_REPEAT 0x0001#define AVB_BOOTARGS "avb_bootargs"#define UUID_STR_LEN 36#define U_BOOT_CMD_MKENT(_name,_maxargs,_rep,_cmd,_usage,_help) U_BOOT_CMD_MKENT_COMPLETE(_name, _maxargs, _rep, _cmd, _usage, _help, NULL)#define axi_get_ops(dev) ((struct axi_ops *)(dev)->driver->ops)#define _AXI_H_#define __maybe_unused __attribute__((unused))#define CONFIG_CMD_NET 1#define CONFIG_NR_DRAM_BANKS 1#define CONFIG_SANDBOX 1#define CONFIG_DM_ETH 1#define DM_UCLASS_ROOT_NON_CONST (((gd_t *)gd)->uclass_root)#define DM_ROOT_NON_CONST (((gd_t *)gd)->dm_root)#define _DM_DEVICE_INTERNAL_H#define _DM_LISTS_H_#define _DM_UCLASS_INTERNAL_H#define CONFIG_HAVE_BLOCK_DEVICE 1#define BMP_BI_RLE4 2#define BMP_BI_RLE8 1#define BMP_BI_RGB 0#define BMP_DATA_ALIGN 4#define _BMP_H_#define _LCD_H_#define CONFIG_CMD_BMP 1#define BMP_ALIGN_CENTER 0x7FFF#define _SPLASH_H_#define CONFIG_SPLASH_SCREEN_ALIGN#define MAX_FILES 3#define DEV_FLAGS_DM 0x00000004#define DEV_FLAGS_OUTPUT 0x00000002#define DEV_FLAGS_INPUT 0x00000001#define _STDIO_DEV_H_#define CONFIG_NETCONSOLE 1#define CONFIG_KEYBOARD#define CONFIG_SYS_STDIO_DEREGISTER 1#define video_get_ops(dev) ((struct video_ops *)(dev)->driver->ops)#define VNBITS(bpix) (1 << (bpix))#define VNBYTES(bpix) (1 << (bpix)) / 8#define _VIDEO_H_#define __le16_to_cpu(x) ((__force __u16)(__le16)(x))#define le16_to_cpu __le16_to_cpu#define CONFIG_SYS_MAXARGS 16#define CONFIG_CMD_GO 1#define __cpu_to_le32(x) ((__force __le32)(__u32)(x))#define cpu_to_le32 __cpu_to_le32#define CONFIG_SYS_BOOTCOUNT_LE#define bootcount_get_ops(dev) ((struct bootcount_ops *)(dev)->driver->ops)#define _BOOTCOUNT_H__#define CONFIG_BOOTCOUNT_LIMIT 1#define CONFIG_DM_BOOTCOUNT 1#define CONFIG_SYS_LONGHELP 1#define EFI_VARIABLE_MASK (EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_HARDWARE_ERROR_RECORD | EFI_VARIABLE_AUTHENTICATED_WRITE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS | EFI_VARIABLE_APPEND_WRITE)#define EFI_VARIABLE_APPEND_WRITE 0x0000000000000040#define EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS 0x0000000000000020#define EFI_VARIABLE_AUTHENTICATED_WRITE_ACCESS 0x0000000000000010#define EFI_VARIABLE_HARDWARE_ERROR_RECORD 0x0000000000000008#define EFI_VARIABLE_RUNTIME_ACCESS 0x0000000000000004#define EFI_VARIABLE_BOOTSERVICE_ACCESS 0x0000000000000002#define EFI_VARIABLE_NON_VOLATILE 0x0000000000000001#define EFI_TABLE_VERSION 1#define EFI_UNSPECIFIED_TIMEZONE 0x07ff#define EFI_TIME_IN_DAYLIGHT 0x2#define EFI_TIME_ADJUST_DAYLIGHT 0x1#define EFI_MAX_ALLOCATE_TYPE 3#define EFI_ALLOCATE_ADDRESS 2#define EFI_ALLOCATE_MAX_ADDRESS 1#define EFI_ALLOCATE_ANY_PAGES 0#define EFI_MEMORY_DESCRIPTOR_VERSION 1#define EFI_PAGE_MASK (EFI_PAGE_SIZE - 1)#define EFI_PAGE_SIZE (1ULL << EFI_PAGE_SHIFT)#define EFI_PAGE_SHIFT 12#define EFI_MEM_DESC_VERSION 1#define EFI_MEMORY_RUNTIME ((u64)0x8000000000000000ULL)#define EFI_MEMORY_RO ((u64)0x0000000000020000ULL)#define EFI_MEMORY_MORE_RELIABLE ((u64)0x0000000000010000ULL)#define EFI_MEMORY_NV ((u64)0x0000000000008000ULL)#define EFI_MEMORY_XP ((u64)0x0000000000004000ULL)#define EFI_MEMORY_RP ((u64)0x0000000000002000ULL)#define EFI_MEMORY_WP ((u64)0x0000000000001000ULL)#define EFI_MEMORY_UCE ((u64)0x0000000000000010ULL)#define EFI_MEMORY_WB ((u64)0x0000000000000008ULL)#define EFI_MEMORY_WT ((u64)0x0000000000000004ULL)#define EFI_MEMORY_WC ((u64)0x0000000000000002ULL)#define EFI_MEMORY_UC ((u64)0x0000000000000001ULL)#define EFI_GUID(a,b,c,d0,d1,d2,d3,d4,d5,d6,d7) {{ (a) & 0xff, ((a) >> 8) & 0xff, ((a) >> 16) & 0xff, ((a) >> 24) & 0xff, (b) & 0xff, ((b) >> 8) & 0xff, (c) & 0xff, ((c) >> 8) & 0xff, (d0), (d1), (d2), (d3), (d4), (d5), (d6), (d7) } }#define EFI_WARN_DELETE_FAILURE 2#define EFI_HTTP_ERROR (EFI_ERROR_MASK | 35)#define EFI_IP_ADDRESS_CONFLICT (EFI_ERROR_MASK | 34)#define EFI_COMPROMISED_DATA (EFI_ERROR_MASK | 33)#define EFI_INVALID_LANGUAGE (EFI_ERROR_MASK | 32)#define EFI_END_OF_FILE (EFI_ERROR_MASK | 31)#define EFI_END_OF_MEDIA (EFI_ERROR_MASK | 28)#define EFI_CRC_ERROR (EFI_ERROR_MASK | 27)#define EFI_SECURITY_VIOLATION (EFI_ERROR_MASK | 26)#define EFI_INCOMPATIBLE_VERSION (EFI_ERROR_MASK | 25)#define EFI_PROTOCOL_ERROR (EFI_ERROR_MASK | 24)#define EFI_TFTP_ERROR (EFI_ERROR_MASK | 23)#define EFI_ICMP_ERROR (EFI_ERROR_MASK | 22)#define EFI_ABORTED (EFI_ERROR_MASK | 21)#define EFI_ALREADY_STARTED (EFI_ERROR_MASK | 20)#define EFI_NOT_STARTED (EFI_ERROR_MASK | 19)#define EFI_TIMEOUT (EFI_ERROR_MASK | 18)#define EFI_NO_MAPPING (EFI_ERROR_MASK | 17)#define EFI_NO_RESPONSE (EFI_ERROR_MASK | 16)#define EFI_ACCESS_DENIED (EFI_ERROR_MASK | 15)#define EFI_NOT_FOUND (EFI_ERROR_MASK | 14)#define EFI_MEDIA_CHANGED (EFI_ERROR_MASK | 13)#define EFI_NO_MEDIA (EFI_ERROR_MASK | 12)#define EFI_VOLUME_FULL (EFI_ERROR_MASK | 11)#define EFI_VOLUME_CORRUPTED (EFI_ERROR_MASK | 10)#define EFI_OUT_OF_RESOURCES (EFI_ERROR_MASK | 9)#define EFI_WRITE_PROTECTED (EFI_ERROR_MASK | 8)#define EFI_DEVICE_ERROR (EFI_ERROR_MASK | 7)#define EFI_NOT_READY (EFI_ERROR_MASK | 6)#define EFI_BUFFER_TOO_SMALL (EFI_ERROR_MASK | 5)#define EFI_BAD_BUFFER_SIZE (EFI_ERROR_MASK | 4)#define EFI_UNSUPPORTED (EFI_ERROR_MASK | 3)#define EFI_INVALID_PARAMETER (EFI_ERROR_MASK | 2)#define EFI_LOAD_ERROR (EFI_ERROR_MASK | 1)#define EFI_SUCCESS 0#define EFI_ERROR_MASK (1UL << (EFI_BITS_PER_LONG - 1))#define EFI_BITS_PER_LONG (sizeof(long) * 8)#define EFI64_LOADER_SIGNATURE "EL64"#define EFI32_LOADER_SIGNATURE "EL32"#define efi_va_end __builtin_ms_va_end#define efi_va_arg __builtin_va_arg#define efi_va_start __builtin_ms_va_start#define efi_va_list __builtin_ms_va_list#define EFIAPI __attribute__((ms_abi))#define _EFI_H#define utf16_utf8_strcpy(d,s) utf16_utf8_strncpy((d), (s), SIZE_MAX)#define utf16_utf8_strlen(a) utf16_utf8_strnlen((a), SIZE_MAX)#define utf8_utf16_strcpy(d,s) utf8_utf16_strncpy((d), (s), SIZE_MAX)#define utf8_utf16_strlen(a) utf8_utf16_strnlen((a), SIZE_MAX)#define MAX_UTF8_PER_UTF16 3#define __CHARSET_H_#define _DISK_PART_EFI_H#define efi_intn_t ssize_t#define efi_uintn_t size_t#define aligned_u64 __u64 __aligned(8)#define LOAD_OPTION_CATEGORY_APP 0x00000100#define LOAD_OPTION_CATEGORY_BOOT 0x00000000#define LOAD_OPTION_CATEGORY 0x00001F00#define LOAD_OPTION_HIDDEN 0x00000008#define LOAD_OPTION_FORCE_RECONNECT 0x00000002#define LOAD_OPTION_ACTIVE 0x00000001#define EFI_UNICODE_COLLATION_PROTOCOL2_GUID EFI_GUID(0xa4c751fc, 0x23ae, 0x4c3e, 0x92, 0xe9, 0x49, 0x64, 0xcf, 0x63, 0xf3, 0x49)#define EFI_UNICODE_COLLATION_PROTOCOL_GUID EFI_GUID(0x1d85cd7f, 0xf43d, 0x11d2, 0x9a, 0x0c, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d)#define EFI_DRIVER_BINDING_PROTOCOL_GUID EFI_GUID(0x18a031ab, 0xb443, 0x4d1a, 0xa5, 0xc0, 0x0c, 0x09, 0x26, 0x1e, 0x9f, 0x71)#define EFI_FILE_VALID_ATTR 0x0000000000000037#define EFI_FILE_ARCHIVE 0x0000000000000020#define EFI_FILE_DIRECTORY 0x0000000000000010#define EFI_FILE_RESERVED 0x0000000000000008#define EFI_FILE_SYSTEM 0x0000000000000004#define EFI_FILE_HIDDEN 0x0000000000000002#define EFI_FILE_READ_ONLY 0x0000000000000001#define EFI_FILE_MODE_CREATE 0x8000000000000000#define EFI_FILE_MODE_WRITE 0x0000000000000002#define EFI_FILE_MODE_READ 0x0000000000000001#define EFI_FILE_SYSTEM_INFO_GUID EFI_GUID(0x09576e93, 0x6d3f, 0x11d2, 0x8e, 0x39, 0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b)#define EFI_FILE_INFO_GUID EFI_GUID(0x9576e92, 0x6d3f, 0x11d2, 0x8e, 0x39, 0x0, 0xa0, 0xc9, 0x69, 0x72, 0x3b)#define EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_REVISION 0x00010000#define EFI_FILE_PROTOCOL_LATEST_REVISION EFI_FILE_PROTOCOL_REVISION2#define EFI_FILE_PROTOCOL_REVISION2 0x00020000#define EFI_FILE_PROTOCOL_REVISION 0x00010000#define EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_GUID EFI_GUID(0x964e5b22, 0x6459, 0x11d2, 0x8e, 0x39, 0x0, 0xa0, 0xc9, 0x69, 0x72, 0x3b)#define EFI_PXE_BASE_CODE_PROTOCOL_GUID EFI_GUID(0x03c4e603, 0xac28, 0x11d3, 0x9a, 0x2d, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d)#define EFI_SIMPLE_NETWORK_PROTOCOL_REVISION 0x00010000#define EFI_SIMPLE_NETWORK_SOFTWARE_INTERRUPT 0x08#define EFI_SIMPLE_NETWORK_COMMAND_INTERRUPT 0x04#define EFI_SIMPLE_NETWORK_TRANSMIT_INTERRUPT 0x02#define EFI_SIMPLE_NETWORK_RECEIVE_INTERRUPT 0x01#define EFI_SIMPLE_NETWORK_RECEIVE_PROMISCUOUS_MULTICAST 0x10#define EFI_SIMPLE_NETWORK_RECEIVE_PROMISCUOUS 0x08#define EFI_SIMPLE_NETWORK_RECEIVE_BROADCAST 0x04#define EFI_SIMPLE_NETWORK_RECEIVE_MULTICAST 0x02#define EFI_SIMPLE_NETWORK_RECEIVE_UNICAST 0x01#define EFI_SIMPLE_NETWORK_PROTOCOL_GUID EFI_GUID(0xa19832b9, 0xac25, 0x11d3, 0x9a, 0x2d, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d)#define EFI_BLT_VIDEO_TO_VIDEO 3#define EFI_BLT_BUFFER_TO_VIDEO 2#define EFI_BLT_VIDEO_TO_BLT_BUFFER 1#define EFI_BLT_VIDEO_FILL 0#define EFI_GOT_BITMASK 2#define EFI_GOT_BGRA8 1#define EFI_GOT_RGBA8 0#define EFI_GRAPHICS_OUTPUT_PROTOCOL_GUID EFI_GUID(0x9042a9de, 0x23dc, 0x4a38, 0x96, 0xfb, 0x7a, 0xde, 0xd0, 0x80, 0x51, 0x6a)#define EFI_HII_CONFIG_ACCESS_PROTOCOL_GUID EFI_GUID(0x330d4706, 0xf2a0, 0x4e4f, 0xa3, 0x69, 0xb6, 0x6f, 0xa8, 0xd5, 0x43, 0x85)#define EFI_HII_CONFIG_ROUTING_PROTOCOL_GUID EFI_GUID(0x587e72d7, 0xcc50, 0x4f79, 0x82, 0x09, 0xca, 0x29, 0x1f, 0xc1, 0xa1, 0x0f)#define EFI_HII_DATABASE_PROTOCOL_GUID EFI_GUID(0xef9fc172, 0xa1b2, 0x4693, 0xb3, 0x27, 0x6d, 0x32, 0xfc, 0x41, 0x60, 0x42)#define EFI_HII_STRING_PROTOCOL_GUID EFI_GUID(0x0fd96974, 0x23aa, 0x4cdc, 0xb9, 0xcb, 0x98, 0xd1, 0x77, 0x50, 0x32, 0x2a)#define EFI_BROWSER_ACTION_DEFAULT_FIRMWARE 0x4000#define EFI_BROWSER_ACTION_DEFAULT_HARDWARE 0x3000#define EFI_BROWSER_ACTION_DEFAULT_PLATFORM 0x2000#define EFI_BROWSER_ACTION_DEFAULT_SAFE 0x1002#define EFI_BROWSER_ACTION_DEFAULT_MANUFACTURING 0x1001#define EFI_BROWSER_ACTION_DEFAULT_STANDARD 0x1000#define EFI_BROWSER_ACTION_SUBMITTED 5#define EFI_BROWSER_ACTION_FORM_CLOSE 4#define EFI_BROWSER_ACTION_FORM_OPEN 3#define EFI_BROWSER_ACTION_RETRIEVE 2#define EFI_BROWSER_ACTION_CHANGED 1#define EFI_BROWSER_ACTION_CHANGING 0#define EFI_BROWSER_ACTION_REQUEST_RECONNECT 8#define EFI_BROWSER_ACTION_REQUEST_FORM_DISCARD 7#define EFI_BROWSER_ACTION_REQUEST_FORM_APPLY 6#define EFI_BROWSER_ACTION_REQUEST_FORM_DISCARD_EXIT 5#define EFI_BROWSER_ACTION_REQUEST_FORM_SUBMIT_EXIT 4#define EFI_BROWSER_ACTION_REQUEST_EXIT 3#define EFI_BROWSER_ACTION_REQUEST_SUBMIT 2#define EFI_BROWSER_ACTION_REQUEST_RESET 1#define EFI_BROWSER_ACTION_REQUEST_NONE 0#define EFI_IFR_ONE_OF_OPTION_OP 0x09#define EFI_IFR_OPTION_DEFAULT_MFG 0x20#define EFI_IFR_OPTION_DEFAULT 0x10#define EFI_IFR_TYPE_REF 0x0C#define EFI_IFR_TYPE_BUFFER 0x0B#define EFI_IFR_TYPE_ACTION 0x0A#define EFI_IFR_TYPE_UNDEFINED 0x09#define EFI_IFR_TYPE_OTHER 0x08#define EFI_IFR_TYPE_STRING 0x07#define EFI_IFR_TYPE_DATE 0x06#define EFI_IFR_TYPE_TIME 0x05#define EFI_IFR_TYPE_BOOLEAN 0x04#define EFI_IFR_TYPE_NUM_SIZE_64 0x03#define EFI_IFR_TYPE_NUM_SIZE_32 0x02#define EFI_IFR_TYPE_NUM_SIZE_16 0x01#define EFI_IFR_TYPE_NUM_SIZE_8 0x00#define EFI_HII_SIBT_FONT 0x40#define EFI_HII_SIBT_EXT4 0x32#define EFI_HII_SIBT_EXT2 0x31#define EFI_HII_SIBT_EXT1 0x30#define EFI_HII_SIBT_SKIP1 0x22#define EFI_HII_SIBT_SKIP2 0x21#define EFI_HII_SIBT_DUPLICATE 0x20#define EFI_HII_SIBT_STRINGS_UCS2_FONT 0x17#define EFI_HII_SIBT_STRINGS_UCS2 0x16#define EFI_HII_SIBT_STRING_UCS2_FONT 0x15#define EFI_HII_SIBT_STRING_UCS2 0x14#define EFI_HII_SIBT_STRINGS_SCSU_FONT 0x13#define EFI_HII_SIBT_STRINGS_SCSU 0x12#define EFI_HII_SIBT_STRING_SCSU_FONT 0x11#define EFI_HII_SIBT_STRING_SCSU 0x10#define EFI_HII_SIBT_END 0x00#define EFI_HII_PACKAGE_TYPE_SYSTEM_END 0xFF#define EFI_HII_PACKAGE_TYPE_SYSTEM_BEGIN 0xE0#define EFI_HII_PACKAGE_END 0xDF#define EFI_HII_PACKAGE_ANIMATIONS 0x0A#define EFI_HII_PACKAGE_KEYBOARD_LAYOUT 0x09#define EFI_HII_PACKAGE_DEVICE_PATH 0x08#define EFI_HII_PACKAGE_SIMPLE_FONTS 0x07#define EFI_HII_PACKAGE_IMAGES 0x06#define EFI_HII_PACKAGE_FONTS 0x05#define EFI_HII_PACKAGE_STRINGS 0x04#define EFI_HII_PACKAGE_FORMS 0x02#define EFI_HII_PACKAGE_TYPE_GUID 0x01#define EFI_HII_PACKAGE_TYPE_ALL 0x00#define __EFI_HII_PACKAGE_TYPE_MASK 0xff#define __EFI_HII_PACKAGE_LEN_MASK 0xffffff#define __EFI_HII_PACKAGE_TYPE_SHIFT 24#define __EFI_HII_PACKAGE_LEN_SHIFT 0#define EFI_DEVICE_PATH_UTILITIES_PROTOCOL_GUID EFI_GUID(0x0379be4e, 0xd706, 0x437d, 0xb0, 0x37, 0xed, 0xb8, 0x2f, 0xb7, 0x72, 0xa4)#define EFI_DEVICE_PATH_TO_TEXT_PROTOCOL_GUID EFI_GUID(0x8b843e20, 0x8132, 0x4852, 0x90, 0xcc, 0x55, 0x1a, 0x4e, 0x4a, 0x7f, 0x1c)#define EFI_SIMPLE_TEXT_INPUT_PROTOCOL_GUID EFI_GUID(0x387477c1, 0x69c7, 0x11d2, 0x8e, 0x39, 0x0, 0xa0, 0xc9, 0x69, 0x72, 0x3b)#define EFI_TOGGLE_STATE_VALID 0x80#define EFI_KEY_STATE_EXPOSED 0x40#define EFI_CAPS_LOCK_ACTIVE 0x04#define EFI_NUM_LOCK_ACTIVE 0x02#define EFI_SCROLL_LOCK_ACTIVE 0x01#define EFI_TOGGLE_STATE_INVALID 0x00#define EFI_SHIFT_STATE_VALID 0x80000000#define EFI_SYS_REQ_PRESSED 0x00000200#define EFI_MENU_KEY_PRESSED 0x00000100#define EFI_LEFT_LOGO_PRESSED 0x00000080#define EFI_RIGHT_LOGO_PRESSED 0x00000040#define EFI_LEFT_ALT_PRESSED 0x00000020#define EFI_RIGHT_ALT_PRESSED 0x00000010#define EFI_LEFT_CONTROL_PRESSED 0x00000008#define EFI_RIGHT_CONTROL_PRESSED 0x00000004#define EFI_LEFT_SHIFT_PRESSED 0x00000002#define EFI_RIGHT_SHIFT_PRESSED 0x00000001#define EFI_SHIFT_STATE_INVALID 0x00000000#define EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL_GUID EFI_GUID(0xdd9e7534, 0x7762, 0x4698, 0x8c, 0x14, 0xf5, 0x85, 0x17, 0xa6, 0x25, 0xaa)#define EFI_ATTR_BG(attr) (((attr) >> 4) & 0x7)#define EFI_ATTR_BOLD(attr) (((attr) >> 3) & 0x01)#define EFI_ATTR_FG(attr) ((attr) & 0x07)#define EFI_BACKGROUND_LIGHTGRAY 0x70#define EFI_BACKGROUND_BROWN 0x60#define EFI_BACKGROUND_MAGENTA 0x50#define EFI_BACKGROUND_RED 0x40#define EFI_BACKGROUND_CYAN 0x30#define EFI_BACKGROUND_GREEN 0x20#define EFI_BACKGROUND_BLUE 0x10#define EFI_BACKGROUND_BLACK 0x00#define EFI_WHITE 0x0f#define EFI_YELLOW 0x0e#define EFI_LIGHTMAGENTA 0x0d#define EFI_LIGHTRED 0x0c#define EFI_LIGHTCYAN 0x0b#define EFI_LIGHTGREEN 0x0a#define EFI_LIGHTBLUE 0x09#define EFI_DARKGRAY 0x08#define EFI_BRIGHT 0x08#define EFI_LIGHTGRAY 0x07#define EFI_BROWN 0x06#define EFI_MAGENTA 0x05#define EFI_RED 0x04#define EFI_CYAN 0x03#define EFI_GREEN 0x02#define EFI_BLUE 0x01#define EFI_BLACK 0x00#define EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL_GUID EFI_GUID(0x387477c2, 0x69c7, 0x11d2, 0x8e, 0x39, 0x0, 0xa0, 0xc9, 0x69, 0x72, 0x3b)#define EFI_BLOCK_IO_PROTOCOL_REVISION3 0x0002001f#define EFI_BLOCK_IO_PROTOCOL_REVISION2 0x00020001#define EFI_BLOCK_IO_PROTOCOL_GUID EFI_GUID(0x964e5b21, 0x6459, 0x11d2, 0x8e, 0x39, 0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b)#define DEVICE_PATH_SUB_TYPE_FILE_PATH 0x04#define DEVICE_PATH_SUB_TYPE_CDROM_PATH 0x02#define DEVICE_PATH_SUB_TYPE_HARD_DRIVE_PATH 0x01#define DEVICE_PATH_TYPE_MEDIA_DEVICE 0x04#define DEVICE_PATH_SUB_TYPE_MSG_MMC 0x1d#define DEVICE_PATH_SUB_TYPE_MSG_SD 0x1a#define DEVICE_PATH_SUB_TYPE_MSG_USB_CLASS 0x0f#define DEVICE_PATH_SUB_TYPE_MSG_MAC_ADDR 0x0b#define DEVICE_PATH_SUB_TYPE_MSG_USB 0x05#define DEVICE_PATH_SUB_TYPE_MSG_SCSI 0x02#define DEVICE_PATH_SUB_TYPE_MSG_ATAPI 0x01#define DEVICE_PATH_TYPE_MESSAGING_DEVICE 0x03#define EISA_PNP_NUM(ID) ((ID) >> 16)#define EISA_PNP_ID(ID) EFI_PNP_ID(ID)#define EFI_PNP_ID(ID) (u32)(((ID) << 16) | 0x41D0)#define DEVICE_PATH_SUB_TYPE_ACPI_DEVICE 0x01#define DEVICE_PATH_TYPE_ACPI_DEVICE 0x02#define DEVICE_PATH_SUB_TYPE_VENDOR 0x04#define DEVICE_PATH_SUB_TYPE_MEMORY 0x03#define DEVICE_PATH_TYPE_HARDWARE_DEVICE 0x01#define DEVICE_PATH_SUB_TYPE_END 0xff#define DEVICE_PATH_SUB_TYPE_INSTANCE_END 0x01#define DEVICE_PATH_TYPE_END 0x7f#define EFI_DEVICE_PATH_PROTOCOL_GUID EFI_GUID(0x09576e91, 0x6d3f, 0x11d2, 0x8e, 0x39, 0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b)#define EFI_LOADED_IMAGE_PROTOCOL_REVISION 0x1000#define EFI_LOADED_IMAGE_DEVICE_PATH_PROTOCOL_GUID EFI_GUID(0xbc62157e, 0x3e33, 0x4fec, 0x99, 0x20, 0x2d, 0x3b, 0x36, 0xd7, 0x50, 0xdf)#define EFI_LOADED_IMAGE_PROTOCOL_GUID EFI_GUID(0x5b1b31a1, 0x9562, 0x11d2, 0x8e, 0x3f, 0x00, 0xa0, 0xc9, 0x69, 0x72, 0x3b)#define EFI_SYSTEM_TABLE_SIGNATURE ((u64)0x5453595320494249ULL)#define SMBIOS_TABLE_GUID EFI_GUID(0xeb9d2d31, 0x2d88, 0x11d3, 0x9a, 0x16, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d)#define EFI_ACPI_TABLE_GUID EFI_GUID(0x8868e871, 0xe4f1, 0x11d3, 0xbc, 0x22, 0x00, 0x80, 0xc7, 0x3c, 0x88, 0x81)#define EFI_FDT_GUID EFI_GUID(0xb1b621d5, 0xf19c, 0x41a5, 0x83, 0x0b, 0xd9, 0x15, 0x2c, 0x69, 0xaa, 0xe0)#define EFI_GLOBAL_VARIABLE_GUID EFI_GUID(0x8be4df61, 0x93ca, 0x11d2, 0xaa, 0x0d, 0x00, 0xe0, 0x98, 0x03, 0x2b, 0x8c)#define NULL_GUID EFI_GUID(0x00000000, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)#define EFI_EVENT_GROUP_RESET_SYSTEM EFI_GUID(0x62da6a56, 0x13fb, 0x485a, 0xa8, 0xda, 0xa3, 0xdd, 0x79, 0x12, 0xcb, 0x6b)#define EFI_EVENT_GROUP_READY_TO_BOOT EFI_GUID(0x7ce88fb3, 0x4bd7, 0x4679, 0x87, 0xa8, 0xa8, 0xd8, 0xde, 0xe5, 0x0d, 0x2b)#define EFI_EVENT_GROUP_MEMORY_MAP_CHANGE EFI_GUID(0x78bee926, 0x692f, 0x48fd, 0x9e, 0xdb, 0x01, 0x42, 0x2e, 0xf0, 0xd7, 0xab)#define EFI_EVENT_GROUP_VIRTUAL_ADDRESS_CHANGE EFI_GUID(0x13fa7698, 0xc831, 0x49c7, 0x87, 0xea, 0x8f, 0x43, 0xfc, 0xc2, 0x51, 0x96)#define EFI_EVENT_GROUP_EXIT_BOOT_SERVICES EFI_GUID(0x27abf055, 0xb1b8, 0x4c26, 0x80, 0x48, 0x74, 0x8f, 0x37, 0xba, 0xa2, 0xdf)#define EFI_RT_SUPPORTED_QUERY_VARIABLE_INFO 0x2000#define EFI_RT_SUPPORTED_QUERY_CAPSULE_CAPABILITIES 0x1000#define EFI_RT_SUPPORTED_UPDATE_CAPSULE 0x0800#define EFI_RT_SUPPORTED_RESET_SYSTEM 0x0400#define EFI_RT_SUPPORTED_GET_NEXT_HIGH_MONOTONIC_COUNT 0x0200#define EFI_RT_SUPPORTED_CONVERT_POINTER 0x0100#define EFI_RT_SUPPORTED_SET_VIRTUAL_ADDRESS_MAP 0x0080#define EFI_RT_SUPPORTED_SET_VARIABLE 0x0040#define EFI_RT_SUPPORTED_GET_NEXT_VARIABLE_NAME 0x0020#define EFI_RT_SUPPORTED_GET_VARIABLE 0x0010#define EFI_RT_SUPPORTED_SET_WAKEUP_TIME 0x0008#define EFI_RT_SUPPORTED_GET_WAKEUP_TIME 0x0004#define EFI_RT_SUPPORTED_SET_TIME 0x0002#define EFI_RT_SUPPORTED_GET_TIME 0x0001#define CAPSULE_FLAGS_INITIATE_RESET 0x00040000#define CAPSULE_FLAGS_POPULATE_SYSTEM_TABLE 0x00020000#define CAPSULE_FLAGS_PERSIST_ACROSS_RESET 0x00010000#define EFI_RUNTIME_SERVICES_SIGNATURE 0x56524553544e5552ULL#define EFI_OPEN_PROTOCOL_EXCLUSIVE 0x00000020#define EFI_OPEN_PROTOCOL_BY_DRIVER 0x00000010#define EFI_OPEN_PROTOCOL_BY_CHILD_CONTROLLER 0x00000008#define EFI_OPEN_PROTOCOL_TEST_PROTOCOL 0x00000004#define EFI_OPEN_PROTOCOL_GET_PROTOCOL 0x00000002#define EFI_OPEN_PROTOCOL_BY_HANDLE_PROTOCOL 0x00000001#define EFI_NATIVE_INTERFACE 0x00000000#define EFI_BOOT_SERVICES_SIGNATURE 0x56524553544f4f42#define TPL_HIGH_LEVEL 0x1F#define TPL_NOTIFY 0x10#define TPL_CALLBACK 0x08#define TPL_APPLICATION 0x04#define EVT_SIGNAL_VIRTUAL_ADDRESS_CHANGE 0x60000202#define EVT_SIGNAL_EXIT_BOOT_SERVICES 0x00000201#define EVT_NOTIFY_SIGNAL 0x00000200#define EVT_NOTIFY_WAIT 0x00000100#define EVT_RUNTIME 0x40000000#define EVT_TIMER 0x80000000#define EFI_SPECIFICATION_VERSION (2 << 16 | 80)#define _EFI_API_H#define CONFIG_EFI_LOADER 1#define __efi_runtime __attribute__ ((section (".text.efi_runtime")))#define __efi_runtime_data __attribute__ ((section (".data.efi_runtime")))#define EFI_DP_TYPE(_dp,_type,_subtype) (((_dp)->type == DEVICE_PATH_TYPE_ ## _type) && ((_dp)->sub_type == DEVICE_PATH_SUB_TYPE_ ## _subtype))#define efi_size_in_pages(size) ((size + EFI_PAGE_MASK) >> EFI_PAGE_SHIFT)#define EFI_CACHELINE_SIZE CONFIG_SYS_CACHELINE_SIZE#define EFI_PRINT(format,__VA_ARGS__...) ({ debug("%sEFI: " format, __efi_nesting(), ## __VA_ARGS__); })#define EFI_CALL_VOID(exp) do { debug("%sEFI: Call: %s\n", __efi_nesting_inc(), #exp); assert(__efi_exit_check()); exp; assert(__efi_entry_check()); debug("%sEFI: Return From: %s\n", __efi_nesting_dec(), #exp); } while(0)#define EFI_CALL(exp) ({ debug("%sEFI: Call: %s\n", __efi_nesting_inc(), #exp); assert(__efi_exit_check()); typeof(exp) _r = exp; assert(__efi_entry_check()); debug("%sEFI: %lu returned by %s\n", __efi_nesting_dec(), (unsigned long)((uintptr_t)_r & ~EFI_ERROR_MASK), #exp); _r; })#define EFI_EXIT(ret) ({ typeof(ret) _r = ret; debug("%sEFI: Exit: %s: %u\n", __efi_nesting_dec(), __func__, (u32)((uintptr_t) _r & ~EFI_ERROR_MASK)); assert(__efi_exit_check()); _r; })#define EFI_ENTRY(format,__VA_ARGS__...) do { assert(__efi_entry_check()); debug("%sEFI: Entry %s(" format ")\n", __efi_nesting_inc(), __func__, ## __VA_ARGS__); } while(0)#define U_BOOT_GUID EFI_GUID(0xe61d73b9, 0xa384, 0x4acc, 0xae, 0xab, 0x82, 0xe8, 0x28, 0xf3, 0x62, 0x8b)#define EFI_MAX_CONFIGURATION_TABLES 16#define _EFI_LOADER_H 1#define CONFIG_SYS_CACHELINE_SIZE ARCH_DMA_MINALIGN#define EFI_UNIT_TEST(__name) ll_entry_declare(struct efi_unit_test, __name, efi_unit_test)#define efi_st_todo(__VA_ARGS__...) (efi_st_printc(EFI_YELLOW, "%s(%u):\nTODO: ", __FILE__, __LINE__), efi_st_printc(EFI_YELLOW, __VA_ARGS__))#define efi_st_error(__VA_ARGS__...) (efi_st_printc(EFI_LIGHTRED, "%s(%u):\nERROR: ", __FILE__, __LINE__), efi_st_printc(EFI_LIGHTRED, __VA_ARGS__))#define efi_st_printf(__VA_ARGS__...) (efi_st_printc(-1, __VA_ARGS__))#define EFI_ST_SUCCESS_STR L"SUCCESS"#define EFI_ST_FAILURE 1#define EFI_ST_SUCCESS 0#define _EFI_SELFTEST_H#define LIBFDT_ENV_H#define ARCH_DMA_MINALIGN __BIGGEST_ALIGNMENT__#define DEFINE_CACHE_ALIGN_BUFFER(type,name,size) DEFINE_ALIGN_BUFFER(type, name, size, ARCH_DMA_MINALIGN)#define DEFINE_ALIGN_BUFFER(type,name,size,align) static char __ ## name[ALIGN(size * sizeof(type), align)] __aligned(align); static type *name = (type *)__ ## name#define ALLOC_CACHE_ALIGN_BUFFER(type,name,size) ALLOC_ALIGN_BUFFER(type, name, size, ARCH_DMA_MINALIGN)#define ALLOC_CACHE_ALIGN_BUFFER_PAD(type,name,size,pad) ALLOC_ALIGN_BUFFER_PAD(type, name, size, ARCH_DMA_MINALIGN, pad)#define ALLOC_ALIGN_BUFFER(type,name,size,align) ALLOC_ALIGN_BUFFER_PAD(type, name, size, align, 1)#define ALLOC_ALIGN_BUFFER_PAD(type,name,size,align,pad) char __ ## name[ROUND(PAD_SIZE((size) * sizeof(type), pad), align) + (align - 1)]; type *name = (type *)ALIGN((uintptr_t)__ ## name, align)#define PAD_SIZE(s,pad) (PAD_COUNT(s, pad) * pad)#define PAD_COUNT(s,pad) (((s) - 1) / (pad) + 1)#define __ALIGNMEM_H#define __BIGGEST_ALIGNMENT__ 16#define BOOTM_ERR_UNIMPLEMENTED (-3)#define BOOTM_ERR_OVERLAP (-2)#define BOOTM_ERR_RESET (-1)#define _BOOTM_H#define CONFIG_FIT_SIGNATURE 1#define ENV_ATTR_SEP ':'#define ENV_ATTR_LIST_DELIM ','#define __ENV_ATTR_H__#define H_ORIGIN_FLAGS (H_INTERACTIVE | H_PROGRAMMATIC)#define H_PROGRAMMATIC (1 << 9)#define H_MATCH_METHOD (H_MATCH_IDENT | H_MATCH_SUBSTR | H_MATCH_REGEX)#define H_MATCH_REGEX (1 << 8)#define H_MATCH_SUBSTR (1 << 7)#define H_MATCH_IDENT (1 << 6)#define H_MATCH_BOTH (H_MATCH_KEY | H_MATCH_DATA)#define H_MATCH_DATA (1 << 5)#define H_MATCH_KEY (1 << 4)#define H_HIDE_DOT (1 << 3)#define H_INTERACTIVE (1 << 2)#define H_FORCE (1 << 1)#define H_NOCLEAR (1 << 0)#define __set_errno(val) do { errno = val; } while (0)#define _SEARCH_H_#define ENV_FLAGS_VARACCESS_BIN_MASK 0x00000078#define ENV_FLAGS_VARACCESS_PREVENT_NONDEF_OVERWR 0x00000040#define ENV_FLAGS_VARACCESS_PREVENT_OVERWR 0x00000020#define ENV_FLAGS_VARACCESS_PREVENT_CREATE 0x00000010#define ENV_FLAGS_VARACCESS_PREVENT_DELETE 0x00000008#define ENV_FLAGS_VARTYPE_BIN_MASK 0x00000007#define ENV_FLAGS_LIST_STATIC ETHADDR_FLAGS NET_FLAGS SERIAL_FLAGS CONFIG_ENV_FLAGS_LIST_STATIC#define SERIAL_FLAGS "serial#:so,"#define NET_FLAGS "ipaddr:i," "gatewayip:i," "netmask:i," "serverip:i," "nvlan:d," "vlan:d," "dnsip:i,"#define ETHADDR_FLAGS "eth" ETHADDR_WILDCARD "addr:mo,"#define ETHADDR_WILDCARD "\\d*"#define CONFIG_ENV_FLAGS_LIST_STATIC ""#define ENV_FLAGS_VARACCESS_LOC 1#define ENV_FLAGS_VARTYPE_LOC 0#define ENV_FLAGS_ATTR_MAX_LEN 2#define ENV_FLAGS_VAR ".flags"#define __ENV_FLAGS_H__#define CONFIG_CMD_ENV_FLAGS 1#define CONFIG_REGEX 1#define U_BOOT_ENV_CALLBACK(name,callback) ll_entry_declare(struct env_clbk_tbl, name, env_clbk) = {#name, callback}#define ENV_CALLBACK_LIST_STATIC ENV_DOT_ESCAPE ENV_CALLBACK_VAR ":callbacks," ENV_DOT_ESCAPE ENV_FLAGS_VAR ":flags," "baudrate:baudrate," NET_CALLBACKS "loadaddr:loadaddr," SILENT_CALLBACK SPLASHIMAGE_CALLBACK "stdin:console,stdout:console,stderr:console," "serial#:serialno," CONFIG_ENV_CALLBACK_LIST_STATIC#define NET_CALLBACKS "bootfile:bootfile," "ipaddr:ipaddr," "gatewayip:gatewayip," "netmask:netmask," "serverip:serverip," "nvlan:nvlan," "vlan:vlan," DNS_CALLBACK "eth" ETHADDR_WILDCARD "addr:ethaddr,"#define DNS_CALLBACK "dnsip:dnsip,"#define ENV_DOT_ESCAPE "\\"#define SPLASHIMAGE_CALLBACK#define SILENT_CALLBACK "silent:silent,"#define CONFIG_ENV_CALLBACK_LIST_STATIC#define ENV_CALLBACK_VAR ".callbacks"#define __ENV_CALLBACK_H__#define CONFIG_CMD_DNS 1#define CONFIG_SILENT_CONSOLE 1#define ENV_SIZE (CONFIG_ENV_SIZE - ENV_HEADER_SIZE)#define ENV_HEADER_SIZE (sizeof(uint32_t))#define env_save_ptr(x) x#define ENV_NAME(_name) .name = _name,#define U_BOOT_ENV_LOCATION(__name) ll_entry_declare(struct env_driver, __name, env_driver)#define _ENVIRONMENT_H_#define CONFIG_CMD_SAVEENV 1#define MTD_NANDFLASH 4#define MTD_MLCNANDFLASH 8#define MTD_OTP_OFF 0#define MTD_OTP_FACTORY 1#define MTD_OTP_USER 2#define MTD_MAX_OOBFREE_ENTRIES 8#define MTD_MAX_ECCPOS_ENTRIES 64#define MEMWRITE _IOWR('M', 24, struct mtd_write_req)#define MEMISLOCKED _IOR('M', 23, struct erase_info_user)#define MEMREADOOB64 _IOWR('M', 22, struct mtd_oob_buf64)#define MEMWRITEOOB64 _IOWR('M', 21, struct mtd_oob_buf64)#define MEMERASE64 _IOW('M', 20, struct erase_info_user64)#define MTDFILEMODE _IO('M', 19)#define ECCGETSTATS _IOR('M', 18, struct mtd_ecc_stats)#define ECCGETLAYOUT _IOR('M', 17, struct nand_ecclayout_user)#define OTPLOCK _IOR('M', 16, struct otp_info)#define OTPGETREGIONINFO _IOW('M', 15, struct otp_info)#define OTPGETREGIONCOUNT _IOW('M', 14, int)#define OTPSELECT _IOR('M', 13, int)#define MEMSETBADBLOCK _IOW('M', 12, __kernel_loff_t)#define MEMGETBADBLOCK _IOW('M', 11, __kernel_loff_t)#define MEMGETOOBSEL _IOR('M', 10, struct nand_oobinfo)#define MEMGETREGIONINFO _IOWR('M', 8, struct region_info_user)#define MEMGETREGIONCOUNT _IOR('M', 7, int)#define MEMUNLOCK _IOW('M', 6, struct erase_info_user)#define MEMLOCK _IOW('M', 5, struct erase_info_user)#define MEMREADOOB _IOWR('M', 4, struct mtd_oob_buf)#define MEMWRITEOOB _IOWR('M', 3, struct mtd_oob_buf)#define MEMERASE _IOW('M', 2, struct erase_info_user)#define MEMGETINFO _IOR('M', 1, struct mtd_info_user)#define MTD_NANDECC_AUTOPL_USR 4#define MTD_NANDECC_PLACEONLY 3#define MTD_NANDECC_AUTOPLACE 2#define MTD_NANDECC_PLACE 1#define MTD_NANDECC_OFF 0#define MTD_CAP_NANDFLASH (MTD_WRITEABLE)#define MTD_CAP_NORFLASH (MTD_WRITEABLE | MTD_BIT_WRITEABLE)#define MTD_CAP_RAM (MTD_WRITEABLE | MTD_BIT_WRITEABLE | MTD_NO_ERASE)#define MTD_CAP_ROM 0#define MTD_POWERUP_LOCK 0x2000#define MTD_NO_ERASE 0x1000#define MTD_BIT_WRITEABLE 0x800#define MTD_WRITEABLE 0x400#define MTD_UBIVOLUME 7#define MTD_DATAFLASH 6#define MTD_NORFLASH 3#define MTD_ROM 2#define MTD_RAM 1#define MTD_ABSENT 0#define __MTD_ABI_H__#define __user#define __UBOOT__ 1#define ilog2(n) ( __builtin_constant_p(n) ? ( (n) < 2 ? 0 : (n) & (1ULL << 63) ? 63 : (n) & (1ULL << 62) ? 62 : (n) & (1ULL << 61) ? 61 : (n) & (1ULL << 60) ? 60 : (n) & (1ULL << 59) ? 59 : (n) & (1ULL << 58) ? 58 : (n) & (1ULL << 57) ? 57 : (n) & (1ULL << 56) ? 56 : (n) & (1ULL << 55) ? 55 : (n) & (1ULL << 54) ? 54 : (n) & (1ULL << 53) ? 53 : (n) & (1ULL << 52) ? 52 : (n) & (1ULL << 51) ? 51 : (n) & (1ULL << 50) ? 50 : (n) & (1ULL << 49) ? 49 : (n) & (1ULL << 48) ? 48 : (n) & (1ULL << 47) ? 47 : (n) & (1ULL << 46) ? 46 : (n) & (1ULL << 45) ? 45 : (n) & (1ULL << 44) ? 44 : (n) & (1ULL << 43) ? 43 : (n) & (1ULL << 42) ? 42 : (n) & (1ULL << 41) ? 41 : (n) & (1ULL << 40) ? 40 : (n) & (1ULL << 39) ? 39 : (n) & (1ULL << 38) ? 38 : (n) & (1ULL << 37) ? 37 : (n) & (1ULL << 36) ? 36 : (n) & (1ULL << 35) ? 35 : (n) & (1ULL << 34) ? 34 : (n) & (1ULL << 33) ? 33 : (n) & (1ULL << 32) ? 32 : (n) & (1ULL << 31) ? 31 : (n) & (1ULL << 30) ? 30 : (n) & (1ULL << 29) ? 29 : (n) & (1ULL << 28) ? 28 : (n) & (1ULL << 27) ? 27 : (n) & (1ULL << 26) ? 26 : (n) & (1ULL << 25) ? 25 : (n) & (1ULL << 24) ? 24 : (n) & (1ULL << 23) ? 23 : (n) & (1ULL << 22) ? 22 : (n) & (1ULL << 21) ? 21 : (n) & (1ULL << 20) ? 20 : (n) & (1ULL << 19) ? 19 : (n) & (1ULL << 18) ? 18 : (n) & (1ULL << 17) ? 17 : (n) & (1ULL << 16) ? 16 : (n) & (1ULL << 15) ? 15 : (n) & (1ULL << 14) ? 14 : (n) & (1ULL << 13) ? 13 : (n) & (1ULL << 12) ? 12 : (n) & (1ULL << 11) ? 11 : (n) & (1ULL << 10) ? 10 : (n) & (1ULL << 9) ? 9 : (n) & (1ULL << 8) ? 8 : (n) & (1ULL << 7) ? 7 : (n) & (1ULL << 6) ? 6 : (n) & (1ULL << 5) ? 5 : (n) & (1ULL << 4) ? 4 : (n) & (1ULL << 3) ? 3 : (n) & (1ULL << 2) ? 2 : 1) : (sizeof(n) <= 4) ? __ilog2_u32(n) : __ilog2_u64(n) )#define fls generic_fls#define order_base_2(n) ( __builtin_constant_p(n) ? ( ((n) == 0 || (n) == 1) ? 0 : ilog2((n) - 1) + 1) : __order_base_2(n) )#define rounddown_pow_of_two(n) ( __builtin_constant_p(n) ? ( (1UL << ilog2(n))) : __rounddown_pow_of_two(n) )#define roundup_pow_of_two(n) ( __builtin_constant_p(n) ? ( (n == 1) ? 1 : (1UL << (ilog2((n) - 1) + 1)) ) : __roundup_pow_of_two(n) )#define _LINUX_LOG2_H#define __attribute_const__ __attribute__((__const__))#define do_div(n,base) ({ u32 __base = (base); u32 __rem; (void)(((typeof((n)) *)0) == ((u64 *)0)); if (__builtin_constant_p(__base) && is_power_of_2(__base)) { __rem = (n) & (__base - 1); (n) >>= ilog2(__base); } else if (__div64_const32_is_OK && __builtin_constant_p(__base) && __base != 0) { u32 __res_lo, __n_lo = (n); (n) = __div64_const32(n, __base); __res_lo = (n); __rem = __n_lo - __res_lo * __base; } else if (likely(((n) >> 32) == 0)) { __rem = (u32)(n) % __base; (n) = (u32)(n) / __base; } else __rem = __div64_32(&(n), __base); __rem; })#define __div64_const32_is_OK (__GNUC__ >= 4)#define __div64_const32(n,___b) ({ u64 ___res, ___x, ___t, ___m, ___n = (n); u32 ___p, ___bias; ___p = 1 << ilog2(___b); ___m = (~0ULL / ___b) * ___p; ___m += (((~0ULL % ___b + 1) * ___p) + ___b - 1) / ___b; ___x = ~0ULL / ___b * ___b - 1; ___res = ((___m & 0xffffffff) * (___x & 0xffffffff)) >> 32; ___t = ___res += (___m & 0xffffffff) * (___x >> 32); ___res += (___x & 0xffffffff) * (___m >> 32); ___t = (___res < ___t) ? (1ULL << 32) : 0; ___res = (___res >> 32) + ___t; ___res += (___m >> 32) * (___x >> 32); ___res /= ___p; if (~0ULL % (___b / (___b & -___b)) == 0) { ___n /= (___b & -___b); ___m = ~0ULL / (___b / (___b & -___b)); ___p = 1; ___bias = 1; } else if (___res != ___x / ___b) { ___bias = 1; ___m = (~0ULL / ___b) * ___p; ___m += ((~0ULL % ___b + 1) * ___p) / ___b; } else { u32 ___bits = -(___m & -___m); ___bits |= ___m >> 32; ___bits = (~___bits) << 1; if (!___bits) { ___p /= (___m & -___m); ___m /= (___m & -___m); } else { ___p >>= ilog2(___bits); ___m >>= ilog2(___bits); } ___bias = 0; } ___res = __arch_xprod_64(___m, ___n, ___bias); ___res /= ___p; })#define likely(x) __builtin_expect(!!(x), 1)#define _ASM_GENERIC_DIV64_H#define BITS_PER_LONG 32#define EBADMSG 74#define EUCLEAN 117#define MTD_MAX_OOBFREE_ENTRIES_LARGE 32#define MTD_MAX_ECCPOS_ENTRIES_LARGE 680#define mtd_for_each_device(mtd) for ((mtd) = __mtd_next_device(0); (mtd) != NULL; (mtd) = __mtd_next_device(mtd->index + 1))#define mtd_device_register(master,parts,nr_parts) mtd_device_parse_register(master, NULL, NULL, parts, nr_parts)#define MTD_FAIL_ADDR_UNKNOWN -1LL#define MTD_ERASE_FAILED 0x10#define MTD_ERASE_DONE 0x08#define MTD_ERASE_SUSPEND 0x04#define MTD_ERASING 0x02#define MTD_ERASE_PENDING 0x01#define MAX_MTD_DEVICES 32#define __MTD_MTD_H__#define __MTD_FLASHCHIP_H__#define CONFIG_SYS_NAND_MAX_CHIPS 1#define ONENAND_BBT_READ_FATAL_ERROR 4#define ONENAND_BBT_READ_ECC_ERROR 2#define ONENAND_BBT_READ_ERROR 1#define ONENAND_BADBLOCK_POS 0#define NAND_LARGE_BADBLOCK_POS 0#define NAND_SMALL_BADBLOCK_POS 5#define NAND_BBT_SCAN_MAXBLOCKS 4#define NAND_BBT_DYNAMICSTRUCT 0x80000000#define NAND_BBT_NO_OOB_BBM 0x00080000#define NAND_BBT_NO_OOB 0x00040000#define NAND_BBT_USE_FLASH 0x00020000#define NAND_BBT_SCANLASTPAGE 0x00010000#define NAND_BBT_SCAN2NDPAGE 0x00008000#define NAND_BBT_SAVECONTENT 0x00004000#define NAND_BBT_WRITE 0x00002000#define NAND_BBT_CREATE_EMPTY 0x00000400#define NAND_BBT_CREATE 0x00000200#define NAND_BBT_VERSION 0x00000100#define NAND_BBT_PERCHIP 0x00000080#define NAND_BBT_ABSPAGE 0x00000020#define NAND_BBT_LASTBLOCK 0x00000010#define NAND_BBT_8BIT 0x00000008#define NAND_BBT_4BIT 0x00000004#define NAND_BBT_2BIT 0x00000002#define NAND_BBT_1BIT 0x00000001#define NAND_BBT_NRBITS_MSK 0x0000000F#define __LINUX_MTD_BBM_H#define NAND_CMD_READID 0x90#define NAND_CMD_PARAM 0xec#define NAND_CMD_GET_FEATURES 0xee#define NAND_CMD_SET_FEATURES 0xef#define ONFI_TIMING_MODE_UNKNOWN (1 << 6)#define BIT(nr) (1UL << (nr))#define NAND_ECC_CUSTOM_PAGE_ACCESS BIT(2)#define NAND_MAX_ID_LEN 8#define NAND_MAX_PAGESIZE 16384#define NAND_MAX_OOBSIZE 1664#define ONFI_EXT_SECTION_MAX 8#define NAND_ECC_STEP(type) ((type)->ecc.step_ds)#define NAND_ECC_STRENGTH(type) ((type)->ecc.strength_ds)#define NAND_ECC_INFO(_strength,_step) { .strength_ds = (_strength), .step_ds = (_step) }#define EXTENDED_ID_NAND(nm,devid,chipsz,opts) { .name = (nm), {{ .dev_id = (devid) }}, .chipsize = (chipsz), .options = (opts) }#define LEGACY_ID_NAND(nm,devid,chipsz,erasesz,opts) { .name = (nm), {{ .dev_id = (devid) }}, .pagesize = 512, .chipsize = (chipsz), .erasesize = (erasesz), .options = (opts) }#define NAND_MFR_ATO 0x9b#define NAND_MFR_INTEL 0x89#define NAND_MFR_SANDISK 0x45#define NAND_MFR_EON 0x92#define NAND_MFR_MACRONIX 0xc2#define NAND_MFR_AMD 0x01#define NAND_MFR_MICRON 0x2c#define NAND_MFR_HYNIX 0xad#define NAND_MFR_STMICRO 0x20#define NAND_MFR_RENESAS 0x07#define NAND_MFR_NATIONAL 0x8f#define NAND_MFR_FUJITSU 0x04#define NAND_MFR_SAMSUNG 0xec#define NAND_MFR_TOSHIBA 0x98#define NAND_ECC_CAPS_SINGLE(__name,__calc,__step,__VA_ARGS__...) static const int __name ## _strengths[] = { __VA_ARGS__ }; static const struct nand_ecc_step_info __name ## _stepinfo = { .stepsize = __step, .strengths = __name ## _strengths, .nstrengths = ARRAY_SIZE(__name ## _strengths), }; static const struct nand_ecc_caps __name = { .stepinfos = &__name ## _stepinfo, .nstepinfos = 1, .calc_ecc_bytes = __calc, }#define JEDEC_FEATURE_16_BIT_BUS (1 << 0)#define ONFI_SECTION_TYPE_2 2#define ONFI_SECTION_TYPE_1 1#define ONFI_SECTION_TYPE_0 0#define ONFI_CRC_BASE 0x4F4E#define ONFI_OPT_CMD_SET_GET_FEATURES (1 << 2)#define ONFI_SUBFEATURE_PARAM_LEN 4#define ONFI_FEATURE_ADDR_READ_RETRY 0x89#define ONFI_FEATURE_ADDR_TIMING_MODE 0x1#define ONFI_TIMING_MODE_5 (1 << 5)#define ONFI_TIMING_MODE_4 (1 << 4)#define ONFI_TIMING_MODE_3 (1 << 3)#define ONFI_TIMING_MODE_2 (1 << 2)#define ONFI_TIMING_MODE_1 (1 << 1)#define ONFI_TIMING_MODE_0 (1 << 0)#define ONFI_FEATURE_EXT_PARAM_PAGE (1 << 7)#define ONFI_FEATURE_16_BIT_BUS (1 << 0)#define NAND_CI_CELLTYPE_SHIFT 2#define NAND_CI_CELLTYPE_MSK 0x0C#define NAND_CI_CHIPNR_MSK 0x03#define NAND_CONTROLLER_ALLOC 0x80000000#define NAND_BBT_SCANNED 0x40000000#define NAND_USE_BOUNCE_BUFFER 0x00100000#define NAND_BUSWIDTH_AUTO 0x00080000#define NAND_SCAN_SILENT_NODEV 0x00040000#define NAND_OWN_BUFFERS 0x00020000#define NAND_SKIP_BBTSCAN 0x00010000#define NAND_HAS_SUBPAGE_WRITE(chip) !((chip)->options & NAND_NO_SUBPAGE_WRITE)#define NAND_HAS_SUBPAGE_READ(chip) ((chip->options & NAND_SUBPAGE_READ))#define NAND_HAS_CACHEPROG(chip) ((chip->options & NAND_CACHEPRG))#define NAND_SAMSUNG_LP_OPTIONS NAND_CACHEPRG#define NAND_ROW_ADDR_3 0x00004000#define NAND_NEED_SCRAMBLING 0x00002000#define NAND_SUBPAGE_READ 0x00001000#define NAND_ROM 0x00000800#define NAND_BROKEN_XD 0x00000400#define NAND_NO_SUBPAGE_WRITE 0x00000200#define NAND_NEED_READRDY 0x00000100#define NAND_COPYBACK 0x00000010#define NAND_CACHEPRG 0x00000008#define NAND_NO_PADDING 0x00000004#define NAND_BUSWIDTH_16 0x00000002#define NAND_GET_DEVICE 0x80#define NAND_ECC_MAXIMIZE BIT(1)#define NAND_ECC_GENERIC_ERASED_CHECK BIT(0)#define NAND_ECC_READSYN 2#define NAND_ECC_WRITE 1#define NAND_ECC_READ 0#define NAND_DATA_IFACE_CHECK_ONLY -1#define NAND_STATUS_WP 0x80#define NAND_STATUS_READY 0x40#define NAND_STATUS_TRUE_READY 0x20#define NAND_STATUS_FAIL_N1 0x02#define NAND_STATUS_FAIL 0x01#define NAND_CMD_NONE -1#define NAND_CMD_STATUS_CLEAR 0xff#define NAND_CMD_STATUS_RESET 0x7f#define NAND_CMD_STATUS_ERROR3 0x76#define NAND_CMD_STATUS_ERROR2 0x75#define NAND_CMD_STATUS_ERROR1 0x74#define NAND_CMD_STATUS_ERROR0 0x73#define NAND_CMD_STATUS_ERROR 0x72#define NAND_CMD_STATUS_MULTI 0x71#define NAND_CMD_DEPLETE2 0x38#define NAND_CMD_DEPLETE1 0x100#define NAND_CMD_CACHEDPROG 0x15#define NAND_CMD_RNDOUTSTART 0xE0#define NAND_CMD_READSTART 0x30#define NAND_CMD_UNLOCK2 0x24#define NAND_CMD_UNLOCK1 0x23#define NAND_CMD_LOCK 0x2a#define NAND_CMD_RESET 0xff#define NAND_CMD_ERASE2 0xd0#define NAND_CMD_RNDIN 0x85#define NAND_CMD_SEQIN 0x80#define NAND_CMD_STATUS 0x70#define NAND_CMD_ERASE1 0x60#define NAND_CMD_READOOB 0x50#define NAND_CMD_PAGEPROG 0x10#define NAND_CMD_RNDOUT 5#define NAND_CMD_READ1 1#define NAND_CMD_READ0 0#define NAND_CTRL_CHANGE 0x80#define NAND_CTRL_ALE (NAND_NCE | NAND_ALE)#define NAND_CTRL_CLE (NAND_NCE | NAND_CLE)#define NAND_ALE 0x04#define NAND_CLE 0x02#define NAND_NCE 0x01#define __LINUX_MTD_RAWNAND_H#define __iomem#define NAND_LOCK_STATUS_UNLOCK 0x04#define NAND_LOCK_STATUS_TIGHT 0x01#define WITH_WR_VERIFY (1 << 1)#define WITH_DROP_FFS (1 << 0)#define _NAND_H_#define __ismask(x) (_ctype[(int)(unsigned char)(x)])#define islower(c) ((__ismask(c)&(_L)) != 0)#define _L 0x02#define isupper(c) ((__ismask(c)&(_U)) != 0)#define _U 0x01#define toupper(c) __toupper(c)#define tolower(c) __tolower(c)#define toascii(c) (((unsigned char)(c))&0x7f)#define isascii(c) (((unsigned char)(c))<=0x7f)#define isblank(c) (c == ' ' || c == '\t')#define isxdigit(c) ((__ismask(c)&(_D|_X)) != 0)#define isspace(c) ((__ismask(c)&(_S)) != 0)#define ispunct(c) ((__ismask(c)&(_P)) != 0)#define isprint(c) ((__ismask(c)&(_P|_U|_L|_D|_SP)) != 0)#define isgraph(c) ((__ismask(c)&(_P|_U|_L|_D)) != 0)#define isdigit(c) ((__ismask(c)&(_D)) != 0)#define iscntrl(c) ((__ismask(c)&(_C)) != 0)#define isalpha(c) ((__ismask(c)&(_U|_L)) != 0)#define isalnum(c) ((__ismask(c)&(_U|_L|_D)) != 0)#define _SP 0x80#define _X 0x40#define _S 0x20#define _P 0x10#define _C 0x08#define _D 0x04#define _LINUX_CTYPE_H#define inflateInit2(strm,windowBits) inflateInit2_((strm), (windowBits), ZLIB_VERSION, sizeof(z_stream))#define inflateInit(strm) inflateInit_((strm), ZLIB_VERSION, sizeof(z_stream))#define Z_NULL (void *)0#define Z_DEFLATED 8#define Z_UNKNOWN 2#define Z_ASCII Z_TEXT#define Z_TEXT 1#define Z_BINARY 0#define Z_DEFAULT_STRATEGY 0#define Z_FIXED 4#define Z_RLE 3#define Z_HUFFMAN_ONLY 2#define Z_FILTERED 1#define Z_DEFAULT_COMPRESSION (-1)#define Z_BEST_COMPRESSION 9#define Z_BEST_SPEED 1#define Z_NO_COMPRESSION 0#define Z_VERSION_ERROR (-6)#define Z_BUF_ERROR (-5)#define Z_MEM_ERROR (-4)#define Z_DATA_ERROR (-3)#define Z_STREAM_ERROR (-2)#define Z_ERRNO (-1)#define Z_NEED_DICT 2#define Z_STREAM_END 1#define Z_OK 0#define Z_BLOCK 5#define Z_FINISH 4#define Z_FULL_FLUSH 3#define Z_SYNC_FLUSH 2#define Z_PARTIAL_FLUSH 1#define Z_NO_FLUSH 0#define z_off_t off_t#define FAR#define ZEXPORTVA#define ZEXPORT#define ZEXTERN extern#define OF(args) args#define MAX_WBITS 15#define MAX_MEM_LEVEL 9#define STDC99#define STDC#define ZLIB_VERNUM 0x1230#define ZLIB_VERSION "1.2.3"#define ZLIB_H#define IMAGE_FORMAT_ANDROID 0x03#define IMAGE_FORMAT_FIT 0x02#define CONFIG_ANDROID_BOOT_IMAGE 1#define CONFIG_FIT 1#define BOOTM_STATE_START (0x00000001)#define BOOTM_STATE_FINDOS (0x00000002)#define BOOTM_STATE_FINDOTHER (0x00000004)#define BOOTM_STATE_LOADOS (0x00000008)#define BOOTM_STATE_OS_PREP (0x00000100)#define CONFIG_OF_LIBFDT 1#define BOOTM_STATE_FDT (0x00000020)#define BOOTM_STATE_OS_CMDLINE (0x00000040)#define BOOTM_STATE_OS_BD_T (0x00000080)#define CONFIG_CMD_IMI 1#define CONFIG_CMD_BOOTD 1#define CONFIG_BOOTSTAGE_STASH_ADDR 0x0#define CONFIG_BOOTSTAGE_STASH_SIZE 0x4096#define __weak __attribute__((weak))#define __U_BOOT_BTRFS_H__#define FS_DT_LNK 10#define FS_DT_REG 8#define FS_DT_DIR 4#define FS_TYPE_BTRFS 5#define FS_TYPE_UBIFS 4#define FS_TYPE_SANDBOX 3#define FS_TYPE_EXT 2#define FS_TYPE_FAT 1#define FS_TYPE_ANY 0#define _FS_H#define __CBFS_H#define cpu_get_ops(dev) ((struct cpu_ops *)(dev)->driver->ops)#define __CPU_H#define CRAMFS_SET_NAMELEN(x,y) ((x)->namelen = (y))#define CRAMFS_SET_OFFSET(x,y) ((x)->offset = (y))#define CRAMFS_GET_OFFSET(x) ((x)->offset)#define CRAMFS_GET_NAMELEN(x) ((x)->namelen)#define CRAMFS_32(x) (x)#define CRAMFS_24(x) (x)#define CRAMFS_16(x) (x)#define CRAMFS_SUPPORTED_FLAGS ( 0x000000ff | CRAMFS_FLAG_HOLES | CRAMFS_FLAG_WRONG_SIGNATURE | CRAMFS_FLAG_SHIFTED_ROOT_OFFSET )#define CRAMFS_FLAG_SHIFTED_ROOT_OFFSET 0x00000400#define CRAMFS_FLAG_WRONG_SIGNATURE 0x00000200#define CRAMFS_FLAG_HOLES 0x00000100#define CRAMFS_FLAG_SORTED_DIRS 0x00000002#define CRAMFS_FLAG_FSID_VERSION_2 0x00000001#define CRAMFS_MAXPATHLEN (((1 << CRAMFS_NAMELEN_WIDTH) - 1) << 2)#define CRAMFS_OFFSET_WIDTH 26#define CRAMFS_NAMELEN_WIDTH 6#define CRAMFS_GID_WIDTH 8#define CRAMFS_SIZE_WIDTH 24#define CRAMFS_UID_WIDTH 16#define CRAMFS_MODE_WIDTH 16#define CRAMFS_SIGNATURE "Compressed ROMFS"#define CRAMFS_MAGIC 0x28cd3d45#define __CRAMFS_H#define MTD_DEV_TYPE_NOR 0x0001#define OFFSET_ADJUSTMENT 0#define S_IFMT 00170000#define S_IFDIR 0040000#define S_IFBLK 0060000#define S_IFCHR 0020000#define S_IFIFO 0010000#define S_IFLNK 0120000#define S_IFSOCK 0140000#define S_IFREG 0100000#define S_ISUID 0004000#define S_IXUSR 00100#define S_ISGID 0002000#define S_IXGRP 00010#define S_ISVTX 0001000#define S_IXOTH 00001#define DEBUGF(fmt,args...)#define DEBUG_CRAMFS#define _BCD_H#define rtc_get_ops(dev) ((struct rtc_ops *)(dev)->driver->ops)#define _RTC_H_#define CONFIG_DM_RTC 1#define i2c_mux_get_ops(dev) ((struct i2c_mux_ops *)(dev)->driver->ops)#define i2c_get_ops(dev) ((struct dm_i2c_ops *)(dev)->driver->ops)#define _I2C_H_#define CONFIG_DM_I2C 1#define RELOC(a) a#define __DM_DEMO_H#define CONFIG_SYS_LOAD_ADDR 0x00000000#define PART_NAME_LEN 32#define PART_TYPE_LEN 32#define __DM_UTIL_H#define CONFIG_DM_WARN 1#define ETHSW_MAX_CMD_PARAMS 20#define ETHSW_CMD_AGGR_GRP_NONE -1#define ETHSW_CMD_VLAN_ALL -1#define ETHSW_CMD_PORT_ALL -1#define _CMD_ETHSW_H_#define ETHSW_PORT_AGGR_HELP "ethsw [port <port_no>] aggr" " { [help] | show | <lag_group_no> } " "- get/set LAG group for a port"#define ETHSW_PORT_INGR_FLTR_HELP "ethsw [port <port_no>] ingress filtering" " { [help] | show | enable | disable } " "- enable/disable VLAN ingress filtering on port"#define ETHSW_VLAN_FDB_HELP "ethsw vlan fdb " "{ [help] | show | shared | private } " "- make VLAN learning shared or private"#define ETHSW_EGR_VLAN_TAG_HELP "ethsw [port <port_no>] egress tag " "{ [help] | show | pvid | classified } " "- Configure VID source for egress tag. " "Tag's VID could be the frame's classified VID or the PVID of the port"#define ETHSW_PORT_UNTAG_HELP "ethsw [port <port_no>] untagged " "{ [help] | show | all | none | pvid } " " - set egress tagging mode for a port"#define ETHSW_VLAN_HELP "ethsw [port <port_no>] vlan " "{ [help] | show | add <vid> | del <vid> } " "- add a VLAN to a port (VLAN members)"#define ETHSW_PVID_HELP "ethsw [port <port_no>] " "pvid { [help] | show | <pvid> } " "- set/show PVID (ingress and egress VLAN tagging) for a port"#define ETHSW_FDB_HELP "ethsw [port <port_no>] [vlan <vid>] fdb " "{ [help] | show | flush | { add | del } <mac> } " "- Add/delete a mac entry in FDB; use show to see FDB entries; " "if vlan <vid> is missing, VID 1 will be used"#define ETHSW_LEARN_HELP "ethsw [port <port_no>] learning " "{ [help] | show | auto | disable } " "- enable/disable/show learning configuration on a port"#define ETHSW_PORT_STATS_HELP "ethsw [port <port_no>] statistics " "{ [help] | [clear] } - show an l2 switch port's statistics"#define ETHSW_PORT_CONF_HELP "[port <port_no>] { enable | disable | show } " "- enable/disable a port; show a port's configuration"#define INDIRECT_BLOCKS 12#define EXT2_MAX_BLOCK_SIZE (1 << EXT2_MAX_BLOCK_LOG_SIZE)#define EXT2_MIN_BLOCK_SIZE (1 << EXT2_MIN_BLOCK_LOG_SIZE)#define EXT2_MAX_BLOCK_LOG_SIZE 16#define EXT2_MIN_BLOCK_LOG_SIZE 10#define SUCCESS 1#define EXT2_FT_DIR 2#define LOG2_BLOCK_SIZE(data) (le32_to_cpu (data->sblock.log2_block_size) + EXT2_MIN_BLOCK_LOG_SIZE)#define EXT2_BLOCK_SIZE(data) (1 << LOG2_BLOCK_SIZE(data))#define EXT2_ROOT_INO 2#define FILETYPE_INO_SYMLINK 0120000#define FILETYPE_INO_DIRECTORY 0040000#define FILETYPE_INO_REG 0100000#define FILETYPE_INO_MASK 0170000#define FILETYPE_SYMLINK 7#define FILETYPE_DIRECTORY 2#define FILETYPE_REG 1#define FILETYPE_UNKNOWN 0#define EXT2_MAX_SYMLINKCNT 8#define EXT2_PATH_MAX 4096#define EXT2_MAGIC 0xEF53#define LOG2_SECTOR_SIZE 9#define SECTOR_SIZE 0x200#define __EXT_COMMON__#define EXT4_BG_INODE_ZEROED 0x0004#define EXT4_BG_BLOCK_UNINIT 0x0002#define EXT4_BG_INODE_UNINIT 0x0001#define EXT4_INDIRECT_BLOCKS 12#define EXT4_FEATURE_INCOMPAT_64BIT 0x0080#define EXT4_FEATURE_INCOMPAT_EXTENTS 0x0040#define EXT4_FEATURE_RO_COMPAT_METADATA_CSUM 0x0400#define EXT4_FEATURE_RO_COMPAT_GDT_CSUM 0x0010#define EXT4_EXT_MAGIC 0xf30a#define EXT4_EXTENTS_FL 0x00080000#define EXT4_INDEX_FL 0x00001000#define __EXT4__#define CONFIG_EXT4_WRITE 1#define S_IWOTH 00002#define S_IROTH 00004#define S_IRWXO 00007#define S_IWGRP 00020#define S_IRGRP 00040#define S_IRWXG 00070#define S_IWUSR 00200#define S_IRUSR 00400#define S_IRWXU 00700#define S_ISSOCK(m) (((m) & S_IFMT) == S_IFSOCK)#define S_ISFIFO(m) (((m) & S_IFMT) == S_IFIFO)#define S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)#define S_ISCHR(m) (((m) & S_IFMT) == S_IFCHR)#define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)#define S_ISREG(m) (((m) & S_IFMT) == S_IFREG)#define S_ISLNK(m) (((m) & S_IFMT) == S_IFLNK)#define _LINUX_STAT_H#define CBWCDBLENGTH 16#define US_BBB_GET_MAX_LUN 0xfe#define US_BBB_RESET 0xff#define UMASS_BBB_CSW_SIZE 13#define CSWSTATUS_PHASE 0x2#define CSWSTATUS_FAILED 0x1#define CSWSTATUS_GOOD 0x0#define CSWSIGNATURE 0x53425355#define UMASS_BBB_CBW_SIZE 31#define CBWFLAGS_SBZ 0x7f#define CBWFLAGS_IN 0x80#define CBWFLAGS_OUT 0x00#define CBWSIGNATURE 0x43425355#define US_CBI_ADSC 0#define USB_REQ_SET_HUB_DEPTH 0x0c#define USB_HUB_PORT_MASK 0xf#define HUB_CHANGE_OVERCURRENT 0x0002#define HUB_CHANGE_LOCAL_POWER 0x0001#define HUB_STATUS_OVERCURRENT 0x0002#define HUB_STATUS_LOCAL_POWER 0x0001#define HUB_CHAR_TTTT 0x0060#define HUB_CHAR_OCPM 0x0018#define HUB_CHAR_COMPOUND 0x0004#define HUB_CHAR_LPSM 0x0003#define USB_SS_PORT_STAT_C_CONFIG_ERROR 0x0080#define USB_SS_PORT_STAT_C_LINK_STATE 0x0040#define USB_SS_PORT_STAT_C_BH_RESET 0x0020#define USB_PORT_STAT_C_RESET 0x0010#define USB_PORT_STAT_C_OVERCURRENT 0x0008#define USB_PORT_STAT_C_SUSPEND 0x0004#define USB_PORT_STAT_C_ENABLE 0x0002#define USB_PORT_STAT_C_CONNECTION 0x0001#define USB_SS_PORT_STAT_MASK (USB_PORT_STAT_CONNECTION | USB_PORT_STAT_ENABLE | USB_PORT_STAT_OVERCURRENT | USB_PORT_STAT_RESET)#define USB_SS_PORT_STAT_SPEED_5GBPS 0x0000#define USB_SS_PORT_STAT_SPEED 0x1c00#define USB_SS_PORT_STAT_POWER 0x0200#define USB_SS_PORT_STAT_LINK_STATE 0x01e0#define USB_PORT_STAT_SPEED_MASK (USB_PORT_STAT_LOW_SPEED | USB_PORT_STAT_HIGH_SPEED)#define USB_PORT_STAT_SUPER_SPEED 0x0600#define USB_PORT_STAT_HIGH_SPEED 0x0400#define USB_PORT_STAT_LOW_SPEED 0x0200#define USB_PORT_STAT_POWER 0x0100#define USB_PORT_STAT_RESET 0x0010#define USB_PORT_STAT_OVERCURRENT 0x0008#define USB_PORT_STAT_SUSPEND 0x0004#define USB_PORT_STAT_ENABLE 0x0002#define USB_PORT_STAT_CONNECTION 0x0001#define USB_SS_PORT_FEAT_C_BH_RESET 29#define USB_SS_PORT_FEAT_BH_RESET 28#define USB_SS_PORT_FEAT_C_CONFIG_ERROR 26#define USB_SS_PORT_FEAT_C_LINK_STATE 25#define USB_SS_PORT_FEAT_U2_TIMEOUT 24#define USB_SS_PORT_FEAT_U1_TIMEOUT 23#define USB_PORT_FEAT_TEST 21#define USB_PORT_FEAT_C_RESET 20#define USB_PORT_FEAT_C_OVER_CURRENT 19#define USB_PORT_FEAT_C_SUSPEND 18#define USB_PORT_FEAT_C_ENABLE 17#define USB_PORT_FEAT_C_CONNECTION 16#define USB_PORT_FEAT_HIGHSPEED 10#define USB_PORT_FEAT_LOWSPEED 9#define USB_PORT_FEAT_POWER 8#define USB_PORT_FEAT_RESET 4#define USB_PORT_FEAT_OVER_CURRENT 3#define USB_PORT_FEAT_SUSPEND 2#define USB_PORT_FEAT_ENABLE 1#define USB_PORT_FEAT_CONNECTION 0#define C_HUB_OVER_CURRENT 1#define C_HUB_LOCAL_POWER 0#define USB_RT_PORT (USB_TYPE_CLASS | USB_RECIP_OTHER)#define USB_RT_HUB (USB_TYPE_CLASS | USB_RECIP_DEVICE)#define USB_ST_NOT_PROC 0x80000000L#define USB_ST_BIT_ERR 0x40#define USB_ST_CRC_ERR 0x20#define USB_ST_NAK_REC 0x10#define USB_ST_BABBLE_DET 0x8#define USB_ST_BUF_ERR 0x4#define USB_ST_STALLED 0x2#define USB_ST_ACTIVE 0x1#define USB_PIPE_EP_MASK (0xf << USB_PIPE_EP_SHIFT)#define USB_PIPE_EP_SHIFT 15#define USB_PIPE_DEV_MASK (0x7f << USB_PIPE_DEV_SHIFT)#define USB_PIPE_DEV_SHIFT 8#define USB_PIPE_TYPE_MASK (3 << USB_PIPE_TYPE_SHIFT)#define USB_PIPE_TYPE_SHIFT 30#define USB_BULK 3#define USB_CONTROL 2#define USB_INTERRUPT 1#define USB_ISOCHRONOUS 0#define PIPE_DEVEP_MASK 0x0007ff00#define PIPE_BULK 3U#define PIPE_CONTROL 2U#define PIPE_INTERRUPT 1U#define PIPE_ISOCHRONOUS 0U#define USB_TEST_MODE_FORCE_ENABLE 0x05#define USB_TEST_MODE_PACKET 0x04#define USB_TEST_MODE_SE0_NAK 0x03#define USB_TEST_MODE_K 0x02#define USB_TEST_MODE_J 0x01#define USB_FEAT_TEST 0x02#define USB_FEAT_WAKEUP 0x01#define USB_FEAT_HALT 0x00#define USB_REQ_SET_PROTOCOL 0x0B#define USB_REQ_SET_IDLE 0x0A#define USB_REQ_SET_REPORT 0x09#define USB_REQ_GET_PROTOCOL 0x03#define USB_REQ_GET_IDLE 0x02#define USB_REQ_GET_REPORT 0x01#define USB_REQ_SYNCH_FRAME 0x0C#define USB_REQ_SET_INTERFACE 0x0B#define USB_REQ_GET_INTERFACE 0x0A#define USB_REQ_SET_CONFIGURATION 0x09#define USB_REQ_GET_CONFIGURATION 0x08#define USB_REQ_SET_DESCRIPTOR 0x07#define USB_REQ_GET_DESCRIPTOR 0x06#define USB_REQ_SET_ADDRESS 0x05#define USB_REQ_SET_FEATURE 0x03#define USB_REQ_CLEAR_FEATURE 0x01#define USB_REQ_GET_STATUS 0x00#define USB_PID_UNDEF_F 0x0f#define USB_PID_STALL 0x1e#define USB_PID_SETUP 0x2d#define USB_PID_PREAMBLE 0x3c#define USB_PID_DATA1 0x4b#define USB_PID_NAK 0x5a#define USB_PID_IN 0x69#define USB_PID_UNDEF_8 0x78#define USB_PID_UNDEF_7 0x87#define USB_PID_UNDEF_6 0x96#define USB_PID_SOF 0xa5#define USB_PID_UNDEF_4 0xb4#define USB_PID_DATA0 0xc3#define USB_PID_ACK 0xd2#define USB_PID_OUT 0xe1#define USB_PID_UNDEF_0 0xf0#define USB_ENDPOINT_XFER_INT 3#define USB_ENDPOINT_XFER_BULK 2#define USB_ENDPOINT_XFER_ISOC 1#define USB_ENDPOINT_XFER_CONTROL 0#define USB_ENDPOINT_XFERTYPE_MASK 0x03#define USB_ENDPOINT_DIR_MASK 0x80#define USB_ENDPOINT_NUMBER_MASK 0x0f#define USB_DT_HID_SIZE 9#define USB_DT_HUB_NONVAR_SIZE 7#define USB_DT_ENDPOINT_AUDIO_SIZE 9#define USB_DT_ENDPOINT_SIZE 7#define USB_DT_INTERFACE_SIZE 9#define USB_DT_CONFIG_SIZE 9#define USB_DT_DEVICE_SIZE 18#define USB_DT_SS_HUB (USB_TYPE_CLASS | 0x0a)#define USB_DT_HUB (USB_TYPE_CLASS | 0x09)#define USB_DT_PHYSICAL (USB_TYPE_CLASS | 0x03)#define USB_DT_REPORT (USB_TYPE_CLASS | 0x02)#define USB_DT_HID (USB_TYPE_CLASS | 0x01)#define USB_DT_ENDPOINT 0x05#define USB_DT_INTERFACE 0x04#define USB_DT_STRING 0x03#define USB_DT_CONFIG 0x02#define USB_DT_DEVICE 0x01#define EndpointOutRequest ((USB_DIR_OUT | USB_TYPE_STANDARD | USB_RECIP_INTERFACE) << 8)#define EndpointRequest ((USB_DIR_IN | USB_TYPE_STANDARD | USB_RECIP_INTERFACE) << 8)#define InterfaceRequest ((USB_DIR_IN | USB_TYPE_STANDARD | USB_RECIP_INTERFACE) << 8)#define DeviceOutRequest ((USB_DIR_OUT | USB_TYPE_STANDARD | USB_RECIP_DEVICE) << 8)#define DeviceRequest ((USB_DIR_IN | USB_TYPE_STANDARD | USB_RECIP_DEVICE) << 8)#define USB_DIR_IN 0x80#define USB_DIR_OUT 0#define USB_RECIP_OTHER 0x03#define USB_RECIP_ENDPOINT 0x02#define USB_RECIP_INTERFACE 0x01#define USB_RECIP_DEVICE 0x00#define USB_TYPE_RESERVED (0x03 << 5)#define USB_TYPE_VENDOR (0x02 << 5)#define USB_TYPE_CLASS (0x01 << 5)#define USB_TYPE_STANDARD (0x00 << 5)#define US_PR_BULK 0x50#define US_PR_CBI 0#define US_PR_CB 1#define US_SC_MAX US_SC_SCSI#define US_SC_MIN US_SC_RBC#define US_SC_SCSI 6#define US_SC_8070 5#define US_SC_UFI 4#define US_SC_QIC 3#define US_SC_8020 2#define US_SC_RBC 1#define USB_PROT_HID_MOUSE 2#define USB_PROT_HID_KEYBOARD 1#define USB_PROT_HID_NONE 0#define USB_SUB_HID_BOOT 1#define USB_SUB_HID_NONE 0#define USB_CLASS_VENDOR_SPEC 0xff#define USB_CLASS_DATA 10#define USB_CLASS_HUB 9#define USB_CLASS_MASS_STORAGE 8#define USB_CLASS_PRINTER 7#define USB_CLASS_HID 3#define USB_CLASS_COMM 2#define USB_CLASS_AUDIO 1#define USB_CLASS_PER_INTERFACE 0#define _USB_DEFS_H_#define _LINUX_UNALIGNED_LE_BYTESHIFT_H#define _LINUX_UNALIGNED_BE_BYTESHIFT_H#define __put_unaligned_be(val,ptr) ({ void *__gu_p = (ptr); switch (sizeof(*(ptr))) { case 1: *(u8 *)__gu_p = (__force u8)(val); break; case 2: put_unaligned_be16((__force u16)(val), __gu_p); break; case 4: put_unaligned_be32((__force u32)(val), __gu_p); break; case 8: put_unaligned_be64((__force u64)(val), __gu_p); break; default: __bad_unaligned_access_size(); break; } (void)0; })#define __put_unaligned_le(val,ptr) ({ void *__gu_p = (ptr); switch (sizeof(*(ptr))) { case 1: *(u8 *)__gu_p = (__force u8)(val); break; case 2: put_unaligned_le16((__force u16)(val), __gu_p); break; case 4: put_unaligned_le32((__force u32)(val), __gu_p); break; case 8: put_unaligned_le64((__force u64)(val), __gu_p); break; default: __bad_unaligned_access_size(); break; } (void)0; })#define __get_unaligned_be(ptr) ((__force typeof(*(ptr)))({ __builtin_choose_expr(sizeof(*(ptr)) == 1, *(ptr), __builtin_choose_expr(sizeof(*(ptr)) == 2, get_unaligned_be16((ptr)), __builtin_choose_expr(sizeof(*(ptr)) == 4, get_unaligned_be32((ptr)), __builtin_choose_expr(sizeof(*(ptr)) == 8, get_unaligned_be64((ptr)), __bad_unaligned_access_size())))); }))#define __get_unaligned_le(ptr) ((__force typeof(*(ptr)))({ __builtin_choose_expr(sizeof(*(ptr)) == 1, *(ptr), __builtin_choose_expr(sizeof(*(ptr)) == 2, get_unaligned_le16((ptr)), __builtin_choose_expr(sizeof(*(ptr)) == 4, get_unaligned_le32((ptr)), __builtin_choose_expr(sizeof(*(ptr)) == 8, get_unaligned_le64((ptr)), __bad_unaligned_access_size())))); }))#define _LINUX_UNALIGNED_GENERIC_H#define put_unaligned __put_unaligned_le#define get_unaligned __get_unaligned_le#define _GENERIC_UNALIGNED_H#define USB_ENDPOINT_INTRTYPE 0x30#define USB_EP_MAXP_MULT(m) (((m) & USB_EP_MAXP_MULT_MASK) >> USB_EP_MAXP_MULT_SHIFT)#define USB_EP_MAXP_MULT_MASK (3 << USB_EP_MAXP_MULT_SHIFT)#define USB_EP_MAXP_MULT_SHIFT 11#define USB_SELF_POWER_VBUS_MAX_DRAW 100#define USB3_LPM_MAX_U2_SEL_PEL 0xFFFF#define USB3_LPM_MAX_U1_SEL_PEL 0xFF#define USB3_LPM_DEVICE_INITIATED 0xFF#define USB3_LPM_U2_MAX_TIMEOUT 0xFE#define USB3_LPM_U1_MAX_TIMEOUT 0x7F#define USB3_LPM_DISABLED 0x0#define USB_ENDPOINT_SWITCH_SCALE 2#define USB_ENDPOINT_SWITCH_SWITCH 1#define USB_ENDPOINT_SWITCH_NO 0#define USB_ENDPOINT_SWITCH_MASK 0x03#define USB_DT_USB_SS_CONTN_ID_SIZE 20#define CONTAINER_ID_TYPE 4#define USB_DT_USB_SS_CAP_SIZE 10#define USB_5GBPS_OPERATION (1 << 3)#define USB_HIGH_SPEED_OPERATION (1 << 2)#define USB_FULL_SPEED_OPERATION (1 << 1)#define USB_LOW_SPEED_OPERATION (1)#define USB_LTM_SUPPORT (1 << 1)#define USB_SS_CAP_TYPE 3#define USB_DT_USB_EXT_CAP_SIZE 7#define USB_GET_BESL_DEEP(p) (((p) & (0xf << 12)) >> 12)#define USB_GET_BESL_BASELINE(p) (((p) & (0xf << 8)) >> 8)#define USB_BESL_DEEP_VALID (1 << 4)#define USB_BESL_BASELINE_VALID (1 << 3)#define USB_BESL_SUPPORT (1 << 2)#define USB_LPM_SUPPORT (1 << 1)#define USB_CAP_TYPE_EXT 2#define USB_WIRELESS_PHY_480 (1 << 7)#define USB_WIRELESS_PHY_400 (1 << 6)#define USB_WIRELESS_PHY_320 (1 << 5)#define USB_WIRELESS_PHY_200 (1 << 4)#define USB_WIRELESS_PHY_160 (1 << 3)#define USB_WIRELESS_PHY_107 (1 << 2)#define USB_WIRELESS_PHY_80 (1 << 1)#define USB_WIRELESS_PHY_53 (1 << 0)#define USB_WIRELESS_BEACON_NONE (3 << 2)#define USB_WIRELESS_BEACON_DIRECTED (2 << 2)#define USB_WIRELESS_BEACON_SELF (1 << 2)#define USB_WIRELESS_BEACON_MASK (3 << 2)#define USB_WIRELESS_P2P_DRD (1 << 1)#define USB_CAP_TYPE_WIRELESS_USB 1#define USB_DT_BOS_SIZE 5#define USB_ENC_TYPE_RSA_1 3#define USB_ENC_TYPE_CCM_1 2#define USB_ENC_TYPE_WIRED 1#define USB_ENC_TYPE_UNSECURE 0#define USB_OTG_HNP (1 << 1)#define USB_OTG_SRP (1 << 0)#define USB_SS_MULT(p) (1 + ((p) & 0x3))#define USB_DT_SS_EP_COMP_SIZE 6#define USB_ENDPOINT_USAGE_IMPLICIT_FB 0x20#define USB_ENDPOINT_USAGE_FEEDBACK 0x10#define USB_ENDPOINT_USAGE_DATA 0x00#define USB_ENDPOINT_USAGE_MASK 0x30#define USB_ENDPOINT_SYNC_SYNC (3 << 2)#define USB_ENDPOINT_SYNC_ADAPTIVE (2 << 2)#define USB_ENDPOINT_SYNC_ASYNC (1 << 2)#define USB_ENDPOINT_SYNC_NONE (0 << 2)#define USB_ENDPOINT_SYNCTYPE 0x0c#define USB_ENDPOINT_INTR_NOTIFICATION (1 << 4)#define USB_ENDPOINT_INTR_PERIODIC (0 << 4)#define USB_ENDPOINT_MAXP_MASK 0x07ff#define USB_ENDPOINT_MAX_ADJUSTABLE 0x80#define USB_CONFIG_ATT_BATTERY (1 << 4)#define USB_CONFIG_ATT_WAKEUP (1 << 5)#define USB_CONFIG_ATT_SELFPOWER (1 << 6)#define USB_CONFIG_ATT_ONE (1 << 7)#define USB_SUBCLASS_VENDOR_SPEC 0xff#define USB_CLASS_APP_SPEC 0xfe#define USB_CLASS_MISC 0xef#define USB_CLASS_WIRELESS_CONTROLLER 0xe0#define USB_CLASS_VIDEO 0x0e#define USB_CLASS_CONTENT_SEC 0x0d#define USB_CLASS_CSCID 0x0b#define USB_CLASS_CDC_DATA 0x0a#define USB_CLASS_STILL_IMAGE 6#define USB_CLASS_PHYSICAL 5#define USB_DT_CS_ENDPOINT (USB_TYPE_CLASS | USB_DT_ENDPOINT)#define USB_DT_CS_INTERFACE (USB_TYPE_CLASS | USB_DT_INTERFACE)#define USB_DT_CS_STRING (USB_TYPE_CLASS | USB_DT_STRING)#define USB_DT_CS_CONFIG (USB_TYPE_CLASS | USB_DT_CONFIG)#define USB_DT_CS_DEVICE (USB_TYPE_CLASS | USB_DT_DEVICE)#define USB_DT_HID_REPORT 0x22#define USB_DT_SS_ENDPOINT_COMP 0x30#define USB_DT_PIPE_USAGE 0x24#define USB_DT_CS_RADIO_CONTROL 0x23#define USB_DT_RPIPE 0x22#define USB_DT_WIRE_ADAPTER 0x21#define USB_DT_WIRELESS_ENDPOINT_COMP 0x11#define USB_DT_DEVICE_CAPABILITY 0x10#define USB_DT_BOS 0x0f#define USB_DT_ENCRYPTION_TYPE 0x0e#define USB_DT_KEY 0x0d#define USB_DT_SECURITY 0x0c#define USB_DT_INTERFACE_ASSOCIATION 0x0b#define USB_DT_DEBUG 0x0a#define USB_DT_OTG 0x09#define USB_DT_INTERFACE_POWER 0x08#define USB_DT_OTHER_SPEED_CONFIG 0x07#define USB_DT_DEVICE_QUALIFIER 0x06#define USB_DEV_STAT_LTM_ENABLED 4#define USB_DEV_STAT_U2_ENABLED 3#define USB_DEV_STAT_U1_ENABLED 2#define USB_ENDPOINT_HALT 0#define USB_INTRF_FUNC_SUSPEND_RW (1 << (8 + 1))#define USB_INTRF_FUNC_SUSPEND_LP (1 << (8 + 0))#define USB_INTR_FUNC_SUSPEND_OPT_MASK 0xFF00#define USB_INTRF_FUNC_SUSPEND 0#define USB_DEVICE_LTM_ENABLE 50#define USB_DEVICE_U2_ENABLE 49#define USB_DEVICE_U1_ENABLE 48#define TEST_FORCE_EN 5#define TEST_PACKET 4#define TEST_SE0_NAK 3#define TEST_K 2#define TEST_J 1#define USB_DEVICE_DEBUG_MODE 6#define USB_DEVICE_A_ALT_HNP_SUPPORT 5#define USB_DEVICE_A_HNP_SUPPORT 4#define USB_DEVICE_WUSB_DEVICE 3#define USB_DEVICE_B_HNP_ENABLE 3#define USB_DEVICE_BATTERY 2#define USB_DEVICE_TEST_MODE 2#define USB_DEVICE_REMOTE_WAKEUP 1#define USB_DEVICE_SELF_POWERED 0#define USB_REQ_SET_INTERFACE_DS 0x17#define USB_REQ_LOOPBACK_DATA_READ 0x16#define USB_REQ_LOOPBACK_DATA_WRITE 0x15#define USB_REQ_SET_WUSB_DATA 0x14#define USB_REQ_GET_SECURITY_DATA 0x13#define USB_REQ_SET_SECURITY_DATA 0x12#define USB_REQ_SET_CONNECTION 0x11#define USB_REQ_GET_HANDSHAKE 0x10#define USB_REQ_RPIPE_RESET 0x0F#define USB_REQ_SET_HANDSHAKE 0x0F#define USB_REQ_RPIPE_ABORT 0x0E#define USB_REQ_GET_ENCRYPTION 0x0E#define USB_REQ_SET_ENCRYPTION 0x0D#define USB_REQ_SET_ISOCH_DELAY 0x31#define USB_REQ_SET_SEL 0x30#define USB_RECIP_RPIPE 0x05#define USB_RECIP_PORT 0x04#define USB_RECIP_MASK 0x1f#define USB_TYPE_MASK (0x03 << 5)#define __LINUX_USB_CH9_H#define __KERNEL__ 1#define USB_MAXCHILDREN 8#define USB_MAXINTERFACES 8#define USB_MAXENDPOINTS 16#define usb_get_emul_ops(dev) ((struct dm_usb_ops *)(dev)->driver->ops)#define usb_get_ops(dev) ((struct dm_usb_ops *)(dev)->driver->ops)#define HUB_TTTT_32_BITS 0x60#define HUB_TTTT_24_BITS 0x40#define HUB_TTTT_16_BITS 0x20#define HUB_TTTT_8_BITS 0x00#define USB_HUB_PR_SS 3#define USB_HUB_PR_HS_MULTI_TT 2#define USB_HUB_PR_HS_SINGLE_TT 1#define USB_HUB_PR_HS_NO_TT 0#define USB_HUB_PR_FS 0#define U_BOOT_USB_DEVICE(__name,__match) ll_entry_declare(struct usb_driver_entry, __name, usb_driver_entry) = { .driver = llsym(struct driver, __name, driver), .match = __match, }#define USB_DEVICE(vend,prod) .match_flags = USB_DEVICE_ID_MATCH_DEVICE, .idVendor = (vend), .idProduct = (prod)#define USB_DEVICE_ID_MATCH_DEVICE (USB_DEVICE_ID_MATCH_VENDOR | USB_DEVICE_ID_MATCH_PRODUCT)#define USB_DEVICE_ID_MATCH_ALL 0x07ff#define USB_DEVICE_ID_MATCH_NONE 0x0800#define USB_DEVICE_ID_MATCH_INT_NUMBER 0x0400#define USB_DEVICE_ID_MATCH_INT_PROTOCOL 0x0200#define USB_DEVICE_ID_MATCH_INT_SUBCLASS 0x0100#define USB_DEVICE_ID_MATCH_INT_CLASS 0x0080#define USB_DEVICE_ID_MATCH_DEV_PROTOCOL 0x0040#define USB_DEVICE_ID_MATCH_DEV_SUBCLASS 0x0020#define USB_DEVICE_ID_MATCH_DEV_CLASS 0x0010#define USB_DEVICE_ID_MATCH_DEV_HI 0x0008#define USB_DEVICE_ID_MATCH_DEV_LO 0x0004#define USB_DEVICE_ID_MATCH_PRODUCT 0x0002#define USB_DEVICE_ID_MATCH_VENDOR 0x0001#define usb_pipe_ep_index(pipe) usb_pipecontrol(pipe) ? (usb_pipeendpoint(pipe) * 2) : ((usb_pipeendpoint(pipe) * 2) - (usb_pipein(pipe) ? 0 : 1))#define usb_pipebulk(pipe) (usb_pipetype((pipe)) == PIPE_BULK)#define usb_pipecontrol(pipe) (usb_pipetype((pipe)) == PIPE_CONTROL)#define usb_pipeint(pipe) (usb_pipetype((pipe)) == PIPE_INTERRUPT)#define usb_pipeisoc(pipe) (usb_pipetype((pipe)) == PIPE_ISOCHRONOUS)#define usb_pipetype(pipe) (((pipe) >> 30) & 3)#define usb_pipedata(pipe) (((pipe) >> 19) & 1)#define usb_pipeendpoint(pipe) (((pipe) >> 15) & 0xf)#define usb_pipe_endpdev(pipe) (((pipe) >> 8) & 0x7ff)#define usb_pipedevice(pipe) (((pipe) >> 8) & 0x7f)#define usb_pipein(pipe) (((pipe) >> 7) & 1)#define usb_pipeout(pipe) ((((pipe) >> 7) & 1) ^ 1)#define usb_packetid(pipe) (((pipe) & USB_DIR_IN) ? USB_PID_IN : USB_PID_OUT)#define usb_endpoint_halted(dev,ep,out) ((dev)->halted[out] & (1 << (ep)))#define usb_endpoint_running(dev,ep,out) ((dev)->halted[out] &= ~(1 << (ep)))#define usb_endpoint_halt(dev,ep,out) ((dev)->halted[out] |= (1 << (ep)))#define usb_endpoint_out(ep_dir) (((ep_dir >> 7) & 1) ^ 1)#define usb_settoggle(dev,ep,out,bit) ((dev)->toggle[out] = ((dev)->toggle[out] & ~(1 << ep)) | ((bit) << ep))#define usb_dotoggle(dev,ep,out) ((dev)->toggle[out] ^= (1 << ep))#define usb_gettoggle(dev,ep,out) (((dev)->toggle[out] >> ep) & 1)#define usb_rcvdefctrl(dev) ((PIPE_CONTROL << 30) | default_pipe(dev) | USB_DIR_IN)#define usb_snddefctrl(dev) ((PIPE_CONTROL << 30) | default_pipe(dev))#define usb_rcvintpipe(dev,endpoint) ((PIPE_INTERRUPT << 30) | create_pipe(dev, endpoint) | USB_DIR_IN)#define usb_sndintpipe(dev,endpoint) ((PIPE_INTERRUPT << 30) | create_pipe(dev, endpoint))#define usb_rcvbulkpipe(dev,endpoint) ((PIPE_BULK << 30) | create_pipe(dev, endpoint) | USB_DIR_IN)#define usb_sndbulkpipe(dev,endpoint) ((PIPE_BULK << 30) | create_pipe(dev, endpoint))#define usb_rcvisocpipe(dev,endpoint) ((PIPE_ISOCHRONOUS << 30) | create_pipe(dev, endpoint) | USB_DIR_IN)#define usb_sndisocpipe(dev,endpoint) ((PIPE_ISOCHRONOUS << 30) | create_pipe(dev, endpoint))#define usb_rcvctrlpipe(dev,endpoint) ((PIPE_CONTROL << 30) | create_pipe(dev, endpoint) | USB_DIR_IN)#define usb_sndctrlpipe(dev,endpoint) ((PIPE_CONTROL << 30) | create_pipe(dev, endpoint))#define default_pipe(dev) ((dev)->speed << 26)#define create_pipe(dev,endpoint) (((dev)->devnum << 8) | ((endpoint) << 15) | (dev)->maxpacketsize)#define swap_32(x) (x)#define swap_16(x) (x)#define __swap_32(x) ({ unsigned long x_ = (unsigned long)x; (unsigned long)( ((x_ & 0x000000FFUL) << 24) | ((x_ & 0x0000FF00UL) << 8) | ((x_ & 0x00FF0000UL) >> 8) | ((x_ & 0xFF000000UL) >> 24)); })#define __swap_16(x) ({ unsigned short x_ = (unsigned short)x; (unsigned short)( ((x_ & 0x00FFU) << 8) | ((x_ & 0xFF00U) >> 8)); })#define USB_MAX_STOR_DEV 7#define USB_UHCI_DEV_ID 0x7112#define USB_UHCI_VEND_ID 0x8086#define USB_TIMEOUT_MS(pipe) (usb_pipebulk(pipe) ? 5000 : 1000)#define USB_CNTL_TIMEOUT 100#define USB_MAX_HUB 16#define USB_MAXCONFIG 8#define USB_MAX_DEVICE 32#define USB_MAXALTSETTING 128#define USB_ALTSETTINGALLOC 4#define USB_DMA_MINALIGN 32#define _USB_H_#define CONFIG_DM_USB 1#define CONFIG_USB_KEYBOARD 1#define CONFIG_USB_STORAGE 1#define CONFIG_CMD_EXT4_WRITE 1#define CONFIG_CMD_USB 1#define EOPNOTSUPP 95#define gadget_for_each_ep(tmp,gadget) list_for_each_entry(tmp, &(gadget)->ep_list, ep_list)#define __LINUX_USB_GADGET_H#define small_const_nbits(nbits) (__builtin_constant_p(nbits) && (nbits) <= BITS_PER_LONG)#define BITS_TO_LONGS(nr) DIV_ROUND_UP(nr, BITS_PER_BYTE * sizeof(long))#define DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))#define BITS_PER_BYTE 8#define __LINUX_BITMAP_H#define DECLARE_BITMAP(name,bits) unsigned long name[BITS_TO_LONGS(bits)]#define MAX_CONFIG_INTERFACES 16#define USB_GADGET_DELAYED_STATUS 0x7fff#define __LINUX_USB_COMPOSITE_H#define DECLARE_GADGET_BIND_CALLBACK(usb_fname,callback_ptr) ll_entry_declare(struct g_dnl_bind_callback, __usb_function_name_ ## usb_fname, g_dnl_bind_callbacks) = { .usb_function_name = #usb_fname, .fptr = callback_ptr }#define __G_DOWNLOAD_H_#define FASTBOOT_RESPONSE_LEN (64 + 1)#define FASTBOOT_COMMAND_LEN (64 + 1)#define FASTBOOT_VERSION "0.4"#define _FASTBOOT_H_#define pr_err(fmt,__VA_ARGS__...) __printk(3, pr_fmt(fmt), ## __VA_ARGS__)#define CONFIG_LOGLEVEL 4#define __printk(level,fmt,__VA_ARGS__...) ({ level < CONFIG_LOGLEVEL ? printk(fmt, ## __VA_ARGS__) : 0; })#define printk(fmt,__VA_ARGS__...) printf(fmt, ## __VA_ARGS__)#define CONFIG_UDP_FUNCTION_FASTBOOT 1#define __stringify_1(x...) #x#define __stringify(x...) __stringify_1(x)#define SREC_MAXBINLEN 255#define SREC_MAXRECLEN (512 + 4)#define SREC_E_BADCHKS -3#define SREC_E_NOSREC -2#define SREC_E_BADTYPE -1#define SREC_REC_OK SREC_EMPTY#define SREC_EMPTY 10#define SREC_END2 9#define SREC_END3 8#define SREC_END4 7#define SREC_COUNT 5#define SREC_DATA4 3#define SREC_DATA3 2#define SREC_DATA2 1#define SREC_START 0#define ata_id_u64(id,n) ( ((u64) (id)[(n) + 3] << 48) | ((u64) (id)[(n) + 2] << 32) | ((u64) (id)[(n) + 1] << 16) | ((u64) (id)[(n) + 0]) )#define sata_pmp_gscr_ports(gscr) ((gscr)[SATA_PMP_GSCR_PORT_INFO] & 0xf)#define sata_pmp_gscr_rev(gscr) (((gscr)[SATA_PMP_GSCR_REV] >> 8) & 0xff)#define sata_pmp_gscr_devid(gscr) ((gscr)[SATA_PMP_GSCR_PROD_ID] >> 16)#define sata_pmp_gscr_vendor(gscr) ((gscr)[SATA_PMP_GSCR_PROD_ID] & 0xffff)#define ata_id_cdb_intr(id) (((id)[0] & 0x60) == 0x20)#define ata_id_u32(id,n) (((u32) (id)[(n) + 1] << 16) | ((u32) (id)[(n)]))#define ata_id_has_iordy(id) ((id)[49] & (1 << 11))#define ata_id_iordy_disable(id) ((id)[49] & (1 << 10))#define ata_id_removeable(id) ((id)[0] & (1 << 7))#define ata_id_queue_depth(id) (((id)[75] & 0x1f) + 1)#define ata_id_has_ncq(id) ((id)[76] & (1 << 8))#define ata_id_has_dma(id) ((id)[49] & (1 << 8))#define ata_id_has_lba(id) ((id)[49] & (1 << 9))#define ata_id_is_ata(id) (((id)[0] & (1 << 15)) == 0)#define __LIBATA_H__#define IDE_MAX_PIO_MODE 4#define ATA_RESET_TIME 60#define ATA_SECTORWORDS (512 / sizeof(uint32_t))#define ATA_BLOCKSHIFT 9#define ATA_BLOCKSIZE 512#define ATA_DATA_READY (ATA_STAT_DRQ)#define ATA_DRIVE_READY (ATA_READY_STAT | ATA_STAT_SEEK)#define ATA_BAD_STAT (ATA_BAD_R_STAT | ATA_STAT_DRQ)#define ATA_BAD_W_STAT (ATA_BAD_R_STAT | ATA_STAT_FAULT)#define ATA_BAD_R_STAT (ATA_STAT_BUSY | ATA_STAT_ERR)#define ATA_OK_STAT(stat,good,bad) (((stat)&((good)|(bad)))==(good))#define ATA_GET_STAT() inb(ATA_STATUS)#define ATA_GET_ERR() inb(ATA_STATUS)#define ATAPI_CMD_READ_12 0xA8#define ATAPI_CMD_START_STOP 0x1B#define ATAPI_CMD_READ_CAP 0x25#define ATAPI_CMD_REQ_SENSE 0x03#define ATAPI_CMD_INQUIRY 0x12#define ATAPI_CMD_PACKET 0xA0#define ATAPI_CMD_IDENT 0xA1#define ATA_CMD_FLUSH_EXT 0xEA#define ATA_CMD_FLUSH 0xE7#define ATA_CMD_VRFY_EXT 0x42#define ATA_CMD_WRITE_EXT 0x34#define ATA_CMD_READ_EXT 0x24#define ATA_CMD_CHK_PWR 0xE5#define ATA_CMD_SETF 0xEF#define ATA_CMD_IDENT 0xEC#define ATA_CMD_WR_DMAN 0xCB#define ATA_CMD_WR_DMA 0xCA#define ATA_CMD_RD_DMAN 0xC9#define ATA_CMD_RD_DMA 0xC8#define ATA_CMD_SETMULT 0xC6#define ATA_CMD_WR_MULT 0xC5#define ATA_CMD_RD_MULT 0xC4#define ATA_CMD_INIT 0x91#define ATA_CMD_DIAG 0x90#define ATA_CMD_SEEK 0x70#define ATA_CMD_VRFYN 0x41#define ATA_CMD_VRFY 0x40#define ATA_CMD_WRITEN 0x31#define ATA_CMD_WRITE 0x30#define ATA_CMD_READN 0x21#define ATA_CMD_READ 0x20#define ATA_LBA 0xE0#define ATA_DEVICE(x) ((x & 1)<<4)#define ATA_STAT_ERR 0x01#define ATA_STAT_INDEX 0x02#define ATA_STAT_CORR 0x04#define ATA_STAT_DRQ 0x08#define ATA_STAT_SEEK 0x10#define ATA_STAT_FAULT 0x20#define ATA_STAT_READY 0x40#define ATA_STAT_BUSY 0x80#define ATA_LBA_SEL ATA_DEV_CTL#define ATA_LBA_HIGH ATA_CYL_HIGH#define ATA_LBA_MID ATA_CYL_LOW#define ATA_LBA_LOW ATA_SECT_NUM#define ATA_DEV_CTL ATA_IO_ALT(6)#define ATA_STATUS ATA_COMMAND#define ATA_DATA_ODD ATA_IO_REG(9)#define ATA_DATA_EVEN ATA_IO_REG(8)#define ATA_COMMAND ATA_IO_REG(7)#define ATA_DEV_HD ATA_IO_REG(6)#define ATA_CYL_HIGH ATA_IO_REG(5)#define ATA_CYL_LOW ATA_IO_REG(4)#define ATA_SECT_NUM ATA_IO_REG(3)#define ATA_SECT_CNT ATA_IO_REG(2)#define ATA_ERROR_REG ATA_IO_REG(1)#define ATA_DATA_REG ATA_IO_DATA(0)#define ATA_IO_ALT(x) (CONFIG_SYS_ATA_ALT_OFFSET +((x) * CONFIG_SYS_ATA_STRIDE))#define ATA_IO_REG(x) (CONFIG_SYS_ATA_REG_OFFSET +((x) * CONFIG_SYS_ATA_STRIDE))#define ATA_IO_DATA(x) (CONFIG_SYS_ATA_DATA_OFFSET+((x) * CONFIG_SYS_ATA_STRIDE))#define _ATA_H#define CONFIG_SYS_ATA_STRIDE 4#define CASE_LOWER_EXT 16#define CASE_LOWER_BASE 8#define CHECK_CLUST(x,fatsize) ((x) <= 1 || (x) >= ((fatsize) != 32 ? ((fatsize) != 16 ? 0xff0 : 0xfff0) : 0xffffff0))#define IS_LAST_CLUST(x,fatsize) ((x) >= ((fatsize) != 32 ? ((fatsize) != 16 ? 0xff8 : 0xfff8) : 0xffffff8))#define START(dent) (FAT2CPU16((dent)->start) + (mydata->fatsize != 32 ? 0 : (FAT2CPU16((dent)->starthi) << 16)))#define FAT2CPU32 le32_to_cpu#define FAT2CPU16 le16_to_cpu#define FSTYPE_NONE (-1)#define ISDIRDELIM(c) ((c) == '/' || (c) == '\\')#define LAST_LONG_ENTRY_MASK 0x40#define aRING 0x05#define DELETED_FLAG ((char)0xe5)#define ATTR_VFAT (ATTR_RO | ATTR_HIDDEN | ATTR_SYS | ATTR_VOLUME)#define ATTR_ARCH 32#define ATTR_DIR 16#define ATTR_VOLUME 8#define ATTR_SYS 4#define ATTR_HIDDEN 2#define ATTR_RO 1#define SIGNLEN 8#define FAT32_SIGN "FAT32   "#define FAT16_SIGN "FAT16   "#define FAT12_SIGN "FAT12   "#define MAX_LFN_SLOT 20#define FAT32BUFSIZE (FATBUFSIZE/4)#define FAT16BUFSIZE (FATBUFSIZE/2)#define FAT12BUFSIZE ((FATBUFSIZE*2)/3)#define FATBUFSIZE (mydata->sect_size * FATBUFBLOCKS)#define FATBUFBLOCKS 6#define DIRENTSPERCLUST ((mydata->clust_size * mydata->sect_size) / sizeof(dir_entry))#define DIRENTSPERBLOCK (mydata->sect_size / sizeof(dir_entry))#define MAX_CLUSTSIZE CONFIG_FS_FAT_MAX_CLUSTSIZE#define PREFETCH_BLOCKS 2#define VFAT_MAXSEQ 9#define VFAT_MAXLEN_BYTES 256#define _FAT_H_#define CONFIG_FAT_WRITE 1#define MAX_LEVEL 32#define FDT_BEGIN_NODE 0x1#define FDT_END_NODE 0x2#define FDT_PROP 0x3#define FDT_NOP 0x4#define FDT_END 0x9#define CMD_FDT_MAX_DUMP 64#define __cpu_to_be32(x) ((__force __be32)__swab32((x)))#define cpu_to_be32 __cpu_to_be32#define cpu_to_fdt32(x) cpu_to_be32(x)#define FDT_ERR_BADVERSION 10#define fdt_version(fdt) (fdt_get_header(fdt, version))#define FDT_FIRST_SUPPORTED_VERSION 0x02#define fdt_last_comp_version(fdt) (fdt_get_header(fdt, last_comp_version))#define FDT_LAST_SUPPORTED_VERSION 0x11#define SCRATCHPAD 1024#define fdt_magic(fdt) (fdt_get_header(fdt, magic))#define fdt_off_dt_struct(fdt) (fdt_get_header(fdt, off_dt_struct))#define fdt_off_mem_rsvmap(fdt) (fdt_get_header(fdt, off_mem_rsvmap))#define fdt_boot_cpuid_phys(fdt) (fdt_get_header(fdt, boot_cpuid_phys))#define fdt_size_dt_struct(fdt) (fdt_get_header(fdt, size_dt_struct))#define CONFIG_OF_LIBFDT_OVERLAY 1#define led_blink(x,y,z,a)#define putLabeledWord(x,y) printf("%s %08x\n", x, (unsigned int)y)#define ldr_output_string(x) puts(x)#define putnstr(str,size) printf("%*.*s", size, size, str)#define UDEBUG printf#define mmalloc malloc#define putstr(x) printf("%s", x)#define ldr_memcpy memcpy#define ldr_strncmp strncmp#define ldr_strlen strlen#define MTD_DEV_TYPE(type) (type == MTD_DEV_TYPE_NAND ? "nand" : (type == MTD_DEV_TYPE_NOR ? "nor" : (type == MTD_DEV_TYPE_ONENAND ? "onenand" : "spi-nand")))#define MTD_DEV_TYPE_SPINAND 0x0008#define MTD_DEV_TYPE_ONENAND 0x0004#define MTD_DEV_TYPE_NAND 0x0002#define load_kernel_h#define JFFS2_INO_FLAG_USERCOMPR 2#define JFFS2_INO_FLAG_PREREAD 1#define JFFS2_NODETYPE_SUMMARY (JFFS2_FEATURE_RWCOMPAT_DELETE | JFFS2_NODE_ACCURATE | 6)#define JFFS2_NODETYPE_PADDING (JFFS2_FEATURE_RWCOMPAT_DELETE | JFFS2_NODE_ACCURATE | 4)#define JFFS2_NODETYPE_CLEANMARKER (JFFS2_FEATURE_RWCOMPAT_DELETE | JFFS2_NODE_ACCURATE | 3)#define JFFS2_NODETYPE_INODE (JFFS2_FEATURE_INCOMPAT | JFFS2_NODE_ACCURATE | 2)#define JFFS2_NODETYPE_DIRENT (JFFS2_FEATURE_INCOMPAT | JFFS2_NODE_ACCURATE | 1)#define JFFS2_FEATURE_RWCOMPAT_DELETE 0x0000#define JFFS2_FEATURE_RWCOMPAT_COPY 0x4000#define JFFS2_FEATURE_ROCOMPAT 0x8000#define JFFS2_FEATURE_INCOMPAT 0xc000#define JFFS2_NODE_ACCURATE 0x2000#define JFFS2_COMPAT_MASK 0xc000#define JFFS2_NUM_COMPR 7#define JFFS2_COMPR_ZLIB 0x06#define JFFS2_COMPR_DYNRUBIN 0x05#define JFFS2_COMPR_COPY 0x04#define JFFS2_COMPR_RUBINMIPS 0x03#define JFFS2_COMPR_RTIME 0x02#define JFFS2_COMPR_ZERO 0x01#define JFFS2_COMPR_NONE 0x00#define JFFS2_MIN_DATA_LEN 128#define JFFS2_MAX_NAME_LEN 254#define JFFS2_SUM_MAGIC 0x02851885#define JFFS2_DIRTY_BITMASK 0x0000#define JFFS2_EMPTY_BITMASK 0xffff#define KSAMTIB_CIGAM_2SFFJ 0x5981#define JFFS2_MAGIC_BITMASK 0x1985#define JFFS2_OLD_MAGIC_BITMASK 0x1984#define JFFS2_SUPER_MAGIC 0x72b6#define __LINUX_JFFS2_H__#define TMP_PROT_OFF "protect off <part-id>\n    - make partition writable\n"#define TMP_PROT_ON "protect on <part-id>\n    - protect partition\n"#define TMP_ERASE "erase <part-id>\n    - erase partition\n"#define CONFIG_CMD_MTDPARTS 1#define CONFIG_SYS_HZ 1000#define CONFIG_DM_GPIO 1#define EBUSY 16#define ULL(x) (_ULL(x))#define UL(x) (_UL(x))#define _BITULL(x) (_ULL(1) << (x))#define _BITUL(x) (_UL(1) << (x))#define _ULL(x) (_AC(x, ULL))#define _UL(x) (_AC(x, UL))#define _AT(T,X) ((T)(X))#define _AC(X,Y) __AC(X,Y)#define __AC(X,Y) (X ## Y)#define _LINUX_CONST_H#define SZ_4G _AC(0x100000000, ULL)#define SZ_2G 0x80000000#define SZ_1G 0x40000000#define SZ_512M 0x20000000#define SZ_256M 0x10000000#define SZ_128M 0x08000000#define SZ_64M 0x04000000#define SZ_32M 0x02000000#define SZ_16M 0x01000000#define SZ_8M 0x00800000#define SZ_4M 0x00400000#define SZ_2M 0x00200000#define SZ_1M 0x00100000#define SZ_512K 0x00080000#define SZ_256K 0x00040000#define SZ_128K 0x00020000#define SZ_64K 0x00010000#define SZ_32K 0x00008000#define SZ_16K 0x00004000#define SZ_8K 0x00002000#define SZ_4K 0x00001000#define SZ_2K 0x00000800#define SZ_1K 0x00000400#define SZ_512 0x00000200#define SZ_256 0x00000100#define SZ_128 0x00000080#define SZ_64 0x00000040#define SZ_32 0x00000020#define SZ_16 0x00000010#define SZ_8 0x00000008#define SZ_4 0x00000004#define SZ_2 0x00000002#define SZ_1 0x00000001#define __LINUX_SIZES_H__#define __STDLIB_H_#define CONFIG_CMD_GPT_RENAME 1#define CONFIG_RANDOM_UUID 1#define MAX_SEARCH_PARTITIONS 64#define UUID_STR_FORMAT_STD 0#define CONFIG_PARTITION_UUIDS 1#define UUID_STR_FORMAT_GUID BIT(0)#define CONFIG_HASH_VERIFY 1#define HARGS 6#define ll_entry_count(_type,_list) ({ _type *start = ll_entry_start(_type, _list); _type *end = ll_entry_end(_type, _list); unsigned int _ll_result = end - start; _ll_result; })#define __SANDBOX_BLOCK_DEV__#define CONFIG_HOST_MAX_DEVICES 4#define __BOOTRETRY_H#define _IO_MUX_H#define __CONSOLE_H#define CONFIG_CONSOLE_MUX 1#define EDID_CEA861_DB_LEN(_x,offset) GET_BITS((_x).data[offset], 4, 0)#define EDID_CEA861_DB_TYPE(_x,offset) GET_BITS((_x).data[offset], 7, 5)#define EDID_CEA861_DTD_COUNT(_x) GET_BITS(((_x).dtd_count), 3, 0)#define EDID_CEA861_SUPPORTS_YUV422(_x) GET_BIT(((_x).dtd_count), 4)#define EDID_CEA861_SUPPORTS_YUV444(_x) GET_BIT(((_x).dtd_count), 5)#define EDID_CEA861_SUPPORTS_BASIC_AUDIO(_x) GET_BIT(((_x).dtd_count), 6)#define EDID_CEA861_SUPPORTS_UNDERSCAN(_x) GET_BIT(((_x).dtd_count), 7)#define EDID_CEA861_EXTENSION_TAG 0x02#define EDID1_INFO_STANDARD_TIMING_VFREQ(_x,_i) GET_BITS(((_x).standard_timings[_i].aspect_vfreq), 5, 0)#define EDID1_INFO_STANDARD_TIMING_ASPECT(_x,_i) GET_BITS(((_x).standard_timings[_i].aspect_vfreq), 7, 6)#define EDID1_INFO_STANDARD_TIMING_XRESOLUTION(_x,_i) (((_x).standard_timings[_i]).xresolution)#define EDID1_INFO_ESTABLISHED_TIMING_1152X870_75(_x) GET_BIT(((_x).established_timings[2]), 7)#define EDID1_INFO_ESTABLISHED_TIMING_1280X1024_75(_x) GET_BIT(((_x).established_timings[1]), 0)#define EDID1_INFO_ESTABLISHED_TIMING_1024X768_75(_x) GET_BIT(((_x).established_timings[1]), 1)#define EDID1_INFO_ESTABLISHED_TIMING_1024X768_70(_x) GET_BIT(((_x).established_timings[1]), 2)#define EDID1_INFO_ESTABLISHED_TIMING_1024X768_60(_x) GET_BIT(((_x).established_timings[1]), 3)#define EDID1_INFO_ESTABLISHED_TIMING_1024X768_87I(_x) GET_BIT(((_x).established_timings[1]), 4)#define EDID1_INFO_ESTABLISHED_TIMING_832X624_75(_x) GET_BIT(((_x).established_timings[1]), 5)#define EDID1_INFO_ESTABLISHED_TIMING_800X600_75(_x) GET_BIT(((_x).established_timings[1]), 6)#define EDID1_INFO_ESTABLISHED_TIMING_800X600_72(_x) GET_BIT(((_x).established_timings[1]), 7)#define EDID1_INFO_ESTABLISHED_TIMING_800X600_60(_x) GET_BIT(((_x).established_timings[0]), 0)#define EDID1_INFO_ESTABLISHED_TIMING_800X600_56(_x) GET_BIT(((_x).established_timings[0]), 1)#define EDID1_INFO_ESTABLISHED_TIMING_640X480_75(_x) GET_BIT(((_x).established_timings[0]), 2)#define EDID1_INFO_ESTABLISHED_TIMING_640X480_72(_x) GET_BIT(((_x).established_timings[0]), 3)#define EDID1_INFO_ESTABLISHED_TIMING_640X480_67(_x) GET_BIT(((_x).established_timings[0]), 4)#define EDID1_INFO_ESTABLISHED_TIMING_640X480_60(_x) GET_BIT(((_x).established_timings[0]), 5)#define EDID1_INFO_ESTABLISHED_TIMING_720X400_88(_x) GET_BIT(((_x).established_timings[0]), 6)#define EDID1_INFO_ESTABLISHED_TIMING_720X400_70(_x) GET_BIT(((_x).established_timings[0]), 7)#define EDID1_INFO_FEATURE_DEFAULT_GTF_SUPPORT(_x) GET_BIT(((_x).feature_support), 0)#define EDID1_INFO_FEATURE_PREFERRED_TIMING_MODE(_x) GET_BIT(((_x).feature_support), 1)#define EDID1_INFO_FEATURE_RGB(_x) GET_BIT(((_x).feature_support), 2)#define EDID1_INFO_FEATURE_DISPLAY_TYPE(_x) GET_BITS(((_x).feature_support), 4, 3)#define EDID1_INFO_FEATURE_ACTIVE_OFF(_x) GET_BIT(((_x).feature_support), 5)#define EDID1_INFO_FEATURE_SUSPEND(_x) GET_BIT(((_x).feature_support), 6)#define EDID1_INFO_FEATURE_STANDBY(_x) GET_BIT(((_x).feature_support), 7)#define EDID1_INFO_VIDEO_INPUT_SERRATION_V(_x) GET_BIT(((_x).video_input_definition), 0)#define EDID1_INFO_VIDEO_INPUT_SYNC_ON_GREEN(_x) GET_BIT(((_x).video_input_definition), 1)#define EDID1_INFO_VIDEO_INPUT_COMPOSITE_SYNC(_x) GET_BIT(((_x).video_input_definition), 2)#define EDID1_INFO_VIDEO_INPUT_SEPARATE_SYNC(_x) GET_BIT(((_x).video_input_definition), 3)#define EDID1_INFO_VIDEO_INPUT_BLANK_TO_BLACK(_x) GET_BIT(((_x).video_input_definition), 4)#define EDID1_INFO_VIDEO_INPUT_VOLTAGE_LEVEL(_x) GET_BITS(((_x).video_input_definition), 6, 5)#define EDID1_INFO_VIDEO_INPUT_DIGITAL(_x) GET_BIT(((_x).video_input_definition), 7)#define EDID1_INFO_SERIAL_NUMBER(_x) (((uint32_t)(_x).serial_number[3] << 24) + ((_x).serial_number[2] << 16) + ((_x).serial_number[1] << 8) + (_x).serial_number[0])#define EDID1_INFO_PRODUCT_CODE(_x) (((uint16_t)(_x).product_code[1] << 8) + (_x).product_code[0])#define EDID1_INFO_MANUFACTURER_NAME_CHAR3(_x) GET_BITS(((_x).manufacturer_name[1]), 4, 0)#define EDID1_INFO_MANUFACTURER_NAME_CHAR2(_x) ((GET_BITS(((_x).manufacturer_name[0]), 1, 0) << 3) + GET_BITS(((_x).manufacturer_name[1]), 7, 5))#define EDID1_INFO_MANUFACTURER_NAME_CHAR1(_x) GET_BITS(((_x).manufacturer_name[0]), 6, 2)#define EDID1_INFO_MANUFACTURER_NAME_ZERO(_x) GET_BIT(((_x).manufacturer_name[0]), 7)#define EDID_DETAILED_TIMING_FLAG_INTERLEAVED(_x) GET_BIT((_x).flags, 0)#define EDID_DETAILED_TIMING_FLAG_HSYNC_POLARITY(_x) GET_BIT((_x).flags, 1)#define EDID_DETAILED_TIMING_FLAG_VSYNC_POLARITY(_x) GET_BIT((_x).flags, 2)#define EDID_DETAILED_TIMING_FLAG_POLARITY(_x) GET_BITS((_x).flags, 2, 1)#define EDID_DETAILED_TIMING_FLAG_DIGITAL_COMPOSITE(_x) GET_BITS((_x).flags, 4, 3)#define EDID_DETAILED_TIMING_FLAG_STEREO(_x) GET_BITS((_x).flags, 6, 5)#define EDID_DETAILED_TIMING_FLAG_INTERLACED(_x) GET_BIT((_x).flags, 7)#define EDID_DETAILED_TIMING_VIMAGE_SIZE(_x) ((GET_BITS((_x).himage_vimage_size_hi, 3, 0) << 8) + (_x).vimage_size)#define EDID_DETAILED_TIMING_HIMAGE_SIZE(_x) ((GET_BITS((_x).himage_vimage_size_hi, 7, 4) << 8) + (_x).himage_size)#define EDID_DETAILED_TIMING_VSYNC_PULSE_WIDTH(_x) ((GET_BITS((_x).hsync_vsync_offset_pulse_width_hi, 1, 0) << 4) + GET_BITS((_x).vsync_offset_pulse_width, 3, 0))#define EDID_DETAILED_TIMING_VSYNC_OFFSET(_x) ((GET_BITS((_x).hsync_vsync_offset_pulse_width_hi, 3, 2) << 4) + GET_BITS((_x).vsync_offset_pulse_width, 7, 4))#define EDID_DETAILED_TIMING_HSYNC_PULSE_WIDTH(_x) ((GET_BITS((_x).hsync_vsync_offset_pulse_width_hi, 5, 4) << 8) + (_x).hsync_pulse_width)#define EDID_DETAILED_TIMING_HSYNC_OFFSET(_x) ((GET_BITS((_x).hsync_vsync_offset_pulse_width_hi, 7, 6) << 8) + (_x).hsync_offset)#define EDID_DETAILED_TIMING_VERTICAL_BLANKING(_x) ((GET_BITS((_x).vertical_active_blanking_hi, 3, 0) << 8) + (_x).vertical_blanking)#define EDID_DETAILED_TIMING_VERTICAL_ACTIVE(_x) ((GET_BITS((_x).vertical_active_blanking_hi, 7, 4) << 8) + (_x).vertical_active)#define EDID_DETAILED_TIMING_HORIZONTAL_BLANKING(_x) ((GET_BITS((_x).horizontal_active_blanking_hi, 3, 0) << 8) + (_x).horizontal_blanking)#define EDID_DETAILED_TIMING_HORIZONTAL_ACTIVE(_x) ((GET_BITS((_x).horizontal_active_blanking_hi, 7, 4) << 8) + (_x).horizontal_active)#define EDID_DETAILED_TIMING_PIXEL_CLOCK(_x) (((((uint32_t)(_x).pixel_clock[1]) << 8) + (_x).pixel_clock[0]) * 10000)#define GET_BITS(_x,_pos_msb,_pos_lsb) (((_x) >> (_pos_lsb)) & ((1 << ((_pos_msb) - (_pos_lsb) + 1)) - 1))#define GET_BIT(_x,_pos) (((_x) >> (_pos)) & 1)#define HDMI_IEEE_OUI 0x000c03#define EDID_EXT_SIZE 256#define EDID_SIZE 128#define __EDID_H_#define DEFAULT_ADDR_LEN (-1)#define CONFIG_SYS_EEPROM_PAGE_WRITE_DELAY_MS 0#define DISP_LINE_LEN 16#define CONFIG_I2C_EDID#define WATCHDOG_RESET watchdog_reset#define INIT_FUNC_WATCHDOG_RESET init_func_watchdog_reset,#define INIT_FUNC_WATCHDOG_INIT init_func_watchdog_init,#define _WATCHDOG_H_#define CONFIG_WATCHDOG 1#define EQ 0#define NE 1#define LT 2#define GT 3#define LE 4#define GE 5#define BLINK "|blink [blink-freq in ms]"#define LED_TOGGLE LEDST_COUNT#define EXPORT_FUNC(impl,res,func,__VA_ARGS__...) res(*func)(__VA_ARGS__);#define CONFIG_CMD_SPI 1#define CONFIG_DM_SPI 1#define CONFIG_CMD_I2C 1#define XF_VERSION 9#define __EXPORTS_H__#define CYGACC_CALL_IF_DELAY_US(x) udelay(x)#define diag_vsprintf vsprintf#define diag_printf printf#define diag_vprintf vprintf#define CYGACC_CALL_IF_SET_CONSOLE_COMM(x)#define CYGNUM_CALL_IF_SET_COMM_ID_QUERY_CURRENT#define xyzModem_abort 2#define xyzModem_close 1#define xyzModem_sequence -8#define xyzModem_cksum -7#define xyzModem_frame -6#define xyzModem_cancel -5#define xyzModem_eof -4#define xyzModem_timeout -3#define xyzModem_noZmodem -2#define xyzModem_access -1#define xyzModem_ymodem 2#define xyzModem_xmodem 1#define _XYZMODEM_H_#define END_CHAR 0x0D#define K_ESCAPE 0x23#define SEND_DATA_SIZE 20#define START_CHAR 0x01#define ETX_CHAR 0x03#define untochar(x) ((int) (((x) - SPACE) & 0xff))#define SPACE 0x20#define tochar(x) ((char) (((x) + SPACE) & 0xff))#define DATA_TYPE 'D'#define SEND_TYPE 'S'#define BREAK_TYPE 'B'#define ACK_TYPE 'Y'#define NACK_TYPE 'N'#define XOFF_CHAR 19#define XON_CHAR 17#define CONFIG_CMD_LOADB 1#define CONFIG_CMD_LOADS 1#define CONFIG_LOG_TEST 1#define Byte LZByte#define LookToRead_BUF_SIZE (1 << 14)#define WSTRING_PATH_SEPARATOR L"/"#define STRING_PATH_SEPARATOR "/"#define WCHAR_PATH_SEPARATOR L'/'#define CHAR_PATH_SEPARATOR '/'#define IAlloc_Free(p,a) (p)->Free((p), a)#define IAlloc_Alloc(p,size) (p)->Alloc((p), size)#define MY_FAST_CALL#define MY_CDECL#define False 0#define True 1#define UINT64_CONST(n) n ## ULL#define RINOK(x) { int __result__ = (x); if (__result__ != 0) return __result__; }#define SZ_ERROR_NO_ARCHIVE 17#define SZ_ERROR_ARCHIVE 16#define SZ_ERROR_THREAD 12#define SZ_ERROR_FAIL 11#define SZ_ERROR_PROGRESS 10#define SZ_ERROR_WRITE 9#define SZ_ERROR_READ 8#define SZ_ERROR_OUTPUT_EOF 7#define SZ_ERROR_INPUT_EOF 6#define SZ_ERROR_PARAM 5#define SZ_ERROR_UNSUPPORTED 4#define SZ_ERROR_CRC 3#define SZ_ERROR_MEM 2#define SZ_ERROR_DATA 1#define SZ_OK 0#define __7Z_TYPES_H#define __TYPES_H__FAKE__#define __LZMA_TOOL_H__#define __LZMATOOLS_H__FAKE__#define _MD5_H#define CHUNKSZ_MD5 (64 * 1024)#define MDIO_NAME_LEN 32#define CONFIG_DM_MDIO 1#define MDIO_DEVAD_NONE (-1)#define PHY_MAX_ADDR 32#define CONFIG_CRC32_VERIFY 1#define CONFIG_SYS_MEMTEST_START 0x00100000#define CONFIG_SYS_MEMTEST_END (CONFIG_SYS_MEMTEST_START + 0x1000)#define CONFIG_SYS_MEMTEST_SCRATCH 0#define CONFIG_CMD_RANDOM 1#define CONFIG_CMD_CRC32 1#define CONFIG_CMD_MEMINFO 1#define CONFIG_CMD_MEMTEST 1#define CONFIG_LOOPW 1#define ADVERTISE_PAUSE_CAP 0x0400#define FLOW_CTRL_TX 0x01#define FLOW_CTRL_RX 0x02#define ADVERTISE_PAUSE_ASYM 0x0800#define LPA_10FULL 0x0040#define LPA_DUPLEX (LPA_10FULL | LPA_100FULL)#define LPA_100FULL 0x0100#define LPA_100BASE4 0x0200#define LPA_100HALF 0x0080#define LPA_10HALF 0x0020#define MII_MMD_CTRL_INCR_ON_WT 0xC000#define MII_MMD_CTRL_INCR_RDWT 0x8000#define MII_MMD_CTRL_NOINCR 0x4000#define MII_MMD_CTRL_ADDR 0x0000#define MII_MMD_CTRL_DEVAD_MASK 0x1f#define LPA_1000HALF 0x0400#define LPA_1000FULL 0x0800#define LPA_1000REMRXOK 0x1000#define LPA_1000LOCALRXOK 0x2000#define CTL1000_ENABLE_MASTER 0x1000#define CTL1000_AS_MASTER 0x0800#define ADVERTISE_1000HALF 0x0100#define ADVERTISE_1000FULL 0x0200#define NWAYTEST_RESV2 0xfe00#define NWAYTEST_LOOPBACK 0x0100#define NWAYTEST_RESV1 0x00ff#define ESTATUS_1000_THALF 0x1000#define ESTATUS_1000_TFULL 0x2000#define ESTATUS_1000_XHALF 0x4000#define ESTATUS_1000_XFULL 0x8000#define EXPANSION_RESV 0xffe0#define EXPANSION_MFAULTS 0x0010#define EXPANSION_NPCAPABLE 0x0008#define EXPANSION_ENABLENPAGE 0x0004#define EXPANSION_LCWP 0x0002#define EXPANSION_NWAY 0x0001#define LPA_100 (LPA_100FULL | LPA_100HALF | LPA_100BASE4)#define LPA_NPAGE 0x8000#define LPA_LPACK 0x4000#define LPA_RFAULT 0x2000#define LPA_RESV 0x1000#define LPA_PAUSE_ASYM 0x0800#define LPA_PAUSE_CAP 0x0400#define LPA_1000XPAUSE_ASYM 0x0100#define LPA_1000XPAUSE 0x0080#define LPA_1000XHALF 0x0040#define LPA_1000XFULL 0x0020#define LPA_SLCT 0x001f#define ADVERTISE_ALL (ADVERTISE_10HALF | ADVERTISE_10FULL | ADVERTISE_100HALF | ADVERTISE_100FULL)#define ADVERTISE_FULL (ADVERTISE_100FULL | ADVERTISE_10FULL | ADVERTISE_CSMA)#define ADVERTISE_NPAGE 0x8000#define ADVERTISE_LPACK 0x4000#define ADVERTISE_RFAULT 0x2000#define ADVERTISE_RESV 0x1000#define ADVERTISE_100BASE4 0x0200#define ADVERTISE_1000XPSE_ASYM 0x0100#define ADVERTISE_100FULL 0x0100#define ADVERTISE_1000XPAUSE 0x0080#define ADVERTISE_100HALF 0x0080#define ADVERTISE_1000XHALF 0x0040#define ADVERTISE_10FULL 0x0040#define ADVERTISE_1000XFULL 0x0020#define ADVERTISE_10HALF 0x0020#define ADVERTISE_CSMA 0x0001#define ADVERTISE_SLCT 0x001f#define BMSR_100BASE4 0x8000#define BMSR_100FULL 0x4000#define BMSR_100HALF 0x2000#define BMSR_10FULL 0x1000#define BMSR_10HALF 0x0800#define BMSR_100FULL2 0x0400#define BMSR_100HALF2 0x0200#define BMSR_ESTATEN 0x0100#define BMSR_RESV 0x00c0#define BMSR_ANEGCOMPLETE 0x0020#define BMSR_RFAULT 0x0010#define BMSR_ANEGCAPABLE 0x0008#define BMSR_LSTATUS 0x0004#define BMSR_JCD 0x0002#define BMSR_ERCAP 0x0001#define BMCR_SPEED10 0x0000#define BMCR_RESET 0x8000#define BMCR_LOOPBACK 0x4000#define BMCR_SPEED100 0x2000#define BMCR_ANENABLE 0x1000#define BMCR_PDOWN 0x0800#define BMCR_ISOLATE 0x0400#define BMCR_ANRESTART 0x0200#define BMCR_FULLDPLX 0x0100#define BMCR_CTST 0x0080#define BMCR_SPEED1000 0x0040#define BMCR_RESV 0x003f#define MII_NCONFIG 0x1c#define MII_TPISTATUS 0x1b#define MII_RESV2 0x1a#define MII_PHYADDR 0x19#define MII_LBRERROR 0x18#define MII_RESV1 0x17#define MII_SREVISION 0x16#define MII_RERRCOUNTER 0x15#define MII_NWAYTEST 0x14#define MII_FCSCOUNTER 0x13#define MII_DCOUNTER 0x12#define MII_ESTATUS 0x0f#define MII_MMD_DATA 0x0e#define MII_MMD_CTRL 0x0d#define MII_STAT1000 0x0a#define MII_CTRL1000 0x09#define MII_EXPANSION 0x06#define MII_LPA 0x05#define MII_ADVERTISE 0x04#define MII_PHYSID2 0x03#define MII_PHYSID1 0x02#define MII_BMSR 0x01#define MII_BMCR 0x00#define __LINUX_MII_H__#define ETHTOOL_FLASH_MAX_FILENAME 128#define SOPASS_MAX 6#define ETHTOOL_BUSINFO_LEN 32#define ETHTOOL_FWVERS_LEN 32#define ETH_RESET_SHARED_SHIFT 16#define RX_CLS_FLOW_DISC 0xffffffffffffffffULL#define RXH_DISCARD (1 << 31)#define RXH_L4_B_2_3 (1 << 7)#define RXH_L4_B_0_1 (1 << 6)#define RXH_IP_DST (1 << 5)#define RXH_IP_SRC (1 << 4)#define RXH_L3_PROTO (1 << 3)#define RXH_VLAN (1 << 2)#define RXH_L2DA (1 << 1)#define ETHER_FLOW 0x12#define IPV6_FLOW 0x11#define IPV4_FLOW 0x10#define IP_USER_FLOW 0x0d#define ESP_V6_FLOW 0x0c#define AH_V6_FLOW 0x0b#define ESP_V4_FLOW 0x0a#define AH_V4_FLOW 0x09#define AH_ESP_V6_FLOW 0x08#define SCTP_V6_FLOW 0x07#define UDP_V6_FLOW 0x06#define TCP_V6_FLOW 0x05#define AH_ESP_V4_FLOW 0x04#define SCTP_V4_FLOW 0x03#define UDP_V4_FLOW 0x02#define TCP_V4_FLOW 0x01#define WAKE_MAGICSECURE (1 << 6)#define WAKE_MAGIC (1 << 5)#define WAKE_ARP (1 << 4)#define WAKE_BCAST (1 << 3)#define WAKE_MCAST (1 << 2)#define WAKE_UCAST (1 << 1)#define WAKE_PHY (1 << 0)#define ETH_TP_MDI_X 0x02#define ETH_TP_MDI 0x01#define ETH_TP_MDI_INVALID 0x00#define AUTONEG_ENABLE 0x01#define AUTONEG_DISABLE 0x00#define XCVR_DUMMY3 0x04#define XCVR_DUMMY2 0x03#define XCVR_DUMMY1 0x02#define XCVR_EXTERNAL 0x01#define XCVR_INTERNAL 0x00#define PORT_OTHER 0xff#define PORT_NONE 0xef#define PORT_DA 0x05#define PORT_BNC 0x04#define PORT_FIBRE 0x03#define PORT_MII 0x02#define PORT_AUI 0x01#define PORT_TP 0x00#define DUPLEX_FULL 0x01#define DUPLEX_HALF 0x00#define SPEED_10000 10000#define SPEED_2500 2500#define SPEED_1000 1000#define SPEED_100 100#define SPEED_10 10#define ADVERTISED_1000baseX_Full (1 << 22)#define ADVERTISED_1000baseX_Half (1 << 21)#define ADVERTISED_10000baseR_FEC (1 << 20)#define ADVERTISED_10000baseKR_Full (1 << 19)#define ADVERTISED_10000baseKX4_Full (1 << 18)#define ADVERTISED_1000baseKX_Full (1 << 17)#define ADVERTISED_Backplane (1 << 16)#define ADVERTISED_2500baseX_Full (1 << 15)#define ADVERTISED_Asym_Pause (1 << 14)#define ADVERTISED_Pause (1 << 13)#define ADVERTISED_10000baseT_Full (1 << 12)#define ADVERTISED_BNC (1 << 11)#define ADVERTISED_FIBRE (1 << 10)#define ADVERTISED_MII (1 << 9)#define ADVERTISED_AUI (1 << 8)#define ADVERTISED_TP (1 << 7)#define ADVERTISED_Autoneg (1 << 6)#define ADVERTISED_1000baseT_Full (1 << 5)#define ADVERTISED_1000baseT_Half (1 << 4)#define ADVERTISED_100baseT_Full (1 << 3)#define ADVERTISED_100baseT_Half (1 << 2)#define ADVERTISED_10baseT_Full (1 << 1)#define ADVERTISED_10baseT_Half (1 << 0)#define SUPPORTED_1000baseX_Full (1 << 22)#define SUPPORTED_1000baseX_Half (1 << 21)#define SUPPORTED_10000baseR_FEC (1 << 20)#define SUPPORTED_10000baseKR_Full (1 << 19)#define SUPPORTED_10000baseKX4_Full (1 << 18)#define SUPPORTED_1000baseKX_Full (1 << 17)#define SUPPORTED_Backplane (1 << 16)#define SUPPORTED_2500baseX_Full (1 << 15)#define SUPPORTED_Asym_Pause (1 << 14)#define SUPPORTED_Pause (1 << 13)#define SUPPORTED_10000baseT_Full (1 << 12)#define SUPPORTED_BNC (1 << 11)#define SUPPORTED_FIBRE (1 << 10)#define SUPPORTED_MII (1 << 9)#define SUPPORTED_AUI (1 << 8)#define SUPPORTED_TP (1 << 7)#define SUPPORTED_Autoneg (1 << 6)#define SUPPORTED_1000baseT_Full (1 << 5)#define SUPPORTED_1000baseT_Half (1 << 4)#define SUPPORTED_100baseT_Full (1 << 3)#define SUPPORTED_100baseT_Half (1 << 2)#define SUPPORTED_10baseT_Full (1 << 1)#define SUPPORTED_10baseT_Half (1 << 0)#define SPARC_ETH_SSET ETHTOOL_SSET#define SPARC_ETH_GSET ETHTOOL_GSET#define ETHTOOL_SFEATURES 0x0000003b#define ETHTOOL_GFEATURES 0x0000003a#define ETHTOOL_SRXFHINDIR 0x00000039#define ETHTOOL_GRXFHINDIR 0x00000038#define ETHTOOL_GSSET_INFO 0x00000037#define ETHTOOL_GRXNTUPLE 0x00000036#define ETHTOOL_SRXNTUPLE 0x00000035#define ETHTOOL_RESET 0x00000034#define ETHTOOL_FLASHDEV 0x00000033#define ETHTOOL_SRXCLSRLINS 0x00000032#define ETHTOOL_SRXCLSRLDEL 0x00000031#define ETHTOOL_GRXCLSRLALL 0x00000030#define ETHTOOL_GRXCLSRULE 0x0000002f#define ETHTOOL_GRXCLSRLCNT 0x0000002e#define ETHTOOL_GRXRINGS 0x0000002d#define ETHTOOL_SGRO 0x0000002c#define ETHTOOL_GGRO 0x0000002b#define ETHTOOL_SRXFH 0x0000002a#define ETHTOOL_GRXFH 0x00000029#define ETHTOOL_SPFLAGS 0x00000028#define ETHTOOL_GPFLAGS 0x00000027#define ETHTOOL_SFLAGS 0x00000026#define ETHTOOL_GFLAGS 0x00000025#define ETHTOOL_SGSO 0x00000024#define ETHTOOL_GGSO 0x00000023#define ETHTOOL_SUFO 0x00000022#define ETHTOOL_GUFO 0x00000021#define ETHTOOL_GPERMADDR 0x00000020#define ETHTOOL_STSO 0x0000001f#define ETHTOOL_GTSO 0x0000001e#define ETHTOOL_GSTATS 0x0000001d#define ETHTOOL_PHYS_ID 0x0000001c#define ETHTOOL_GSTRINGS 0x0000001b#define ETHTOOL_TEST 0x0000001a#define ETHTOOL_SSG 0x00000019#define ETHTOOL_GSG 0x00000018#define ETHTOOL_STXCSUM 0x00000017#define ETHTOOL_GTXCSUM 0x00000016#define ETHTOOL_SRXCSUM 0x00000015#define ETHTOOL_GRXCSUM 0x00000014#define ETHTOOL_SPAUSEPARAM 0x00000013#define ETHTOOL_GPAUSEPARAM 0x00000012#define ETHTOOL_SRINGPARAM 0x00000011#define ETHTOOL_GRINGPARAM 0x00000010#define ETHTOOL_SCOALESCE 0x0000000f#define ETHTOOL_GCOALESCE 0x0000000e#define ETHTOOL_SEEPROM 0x0000000c#define ETHTOOL_GEEPROM 0x0000000b#define ETHTOOL_GLINK 0x0000000a#define ETHTOOL_NWAY_RST 0x00000009#define ETHTOOL_SMSGLVL 0x00000008#define ETHTOOL_GMSGLVL 0x00000007#define ETHTOOL_SWOL 0x00000006#define ETHTOOL_GWOL 0x00000005#define ETHTOOL_GREGS 0x00000004#define ETHTOOL_GDRVINFO 0x00000003#define ETHTOOL_SSET 0x00000002#define ETHTOOL_GSET 0x00000001#define ETHTOOL_F_COMPAT (1 << ETHTOOL_F_COMPAT__BIT)#define ETHTOOL_F_WISH (1 << ETHTOOL_F_WISH__BIT)#define ETHTOOL_F_UNSUPPORTED (1 << ETHTOOL_F_UNSUPPORTED__BIT)#define ETH_RX_NFC_IP4 1#define ETH_GSTRING_LEN 32#define _LINUX_ETHTOOL_H#define MDIO_PHY_ID_C45 0x8000#define MDIO_EMULATE_C22 4#define MDIO_PRTAD_NONE (-1)#define MDIO_PHY_ID_C45_MASK (MDIO_PHY_ID_C45 | MDIO_PHY_ID_PRTAD | MDIO_PHY_ID_DEVAD)#define MDIO_PHY_ID_DEVAD 0x001f#define MDIO_PHY_ID_PRTAD 0x03e0#define MDIO_PMA_LASI_RXALARM 0x0004#define MDIO_PMA_LASI_TXALARM 0x0002#define MDIO_PMA_LASI_LSALARM 0x0001#define MDIO_PMA_LASI_TX_LASERBICURRFLT 0x0200#define MDIO_PMA_LASI_TX_LASERTEMPFLT 0x0100#define MDIO_PMA_LASI_TX_LASERPOWERFLT 0x0080#define MDIO_PMA_LASI_TX_PMALFLT 0x0010#define MDIO_PMA_LASI_TX_PCSLFLT 0x0008#define MDIO_PMA_LASI_TX_PHYXSLFLT 0x0001#define MDIO_PMA_LASI_RX_WISLFLT 0x0200#define MDIO_PMA_LASI_RX_OPTICPOWERFLT 0x0020#define MDIO_PMA_LASI_RX_PMALFLT 0x0010#define MDIO_PMA_LASI_RX_PCSLFLT 0x0008#define MDIO_PMA_LASI_RX_PHYXSLFLT 0x0001#define MDIO_EEE_10GKR 0x0040#define MDIO_EEE_10GKX4 0x0020#define MDIO_EEE_1000KX 0x0010#define MDIO_EEE_10GT 0x0008#define MDIO_EEE_1000T MDIO_AN_EEE_ADV_1000T#define MDIO_EEE_100TX MDIO_AN_EEE_ADV_100TX#define MDIO_AN_EEE_ADV_1000T 0x0004#define MDIO_AN_EEE_ADV_100TX 0x0002#define MDIO_AN_10GBT_STAT_MSFLT 0x8000#define MDIO_AN_10GBT_STAT_MS 0x4000#define MDIO_AN_10GBT_STAT_LOCOK 0x2000#define MDIO_AN_10GBT_STAT_REMOK 0x1000#define MDIO_AN_10GBT_STAT_LP10G 0x0800#define MDIO_AN_10GBT_STAT_LPLTABLE 0x0400#define MDIO_AN_10GBT_STAT_LPTRR 0x0200#define MDIO_AN_10GBT_CTRL_ADV10G 0x1000#define MDIO_PCS_10GBRT_STAT2_BER 0x3f00#define MDIO_PCS_10GBRT_STAT2_ERR 0x00ff#define MDIO_PCS_10GBRT_STAT1_BLKLK 0x0001#define MDIO_PMA_10GBR_FECABLE_ERRABLE 0x0002#define MDIO_PMA_10GBR_FECABLE_ABLE 0x0001#define MDIO_PMA_10GBT_SNR_MAX 127#define MDIO_PMA_10GBT_SNR_BIAS 0x8000#define MDIO_PMA_10GBT_TXPWR_SHORT 0x0001#define MDIO_PMA_10GBT_SWAPPOL_DREV 0x0800#define MDIO_PMA_10GBT_SWAPPOL_CREV 0x0400#define MDIO_PMA_10GBT_SWAPPOL_BREV 0x0200#define MDIO_PMA_10GBT_SWAPPOL_AREV 0x0100#define MDIO_PMA_10GBT_SWAPPOL_CDNX 0x0002#define MDIO_PMA_10GBT_SWAPPOL_ABNX 0x0001#define MDIO_PHYXS_LNSTAT_ALIGN 0x1000#define MDIO_PHYXS_LNSTAT_SYNC3 0x0008#define MDIO_PHYXS_LNSTAT_SYNC2 0x0004#define MDIO_PHYXS_LNSTAT_SYNC1 0x0002#define MDIO_PHYXS_LNSTAT_SYNC0 0x0001#define MDIO_PMA_EXTABLE_10BT 0x0100#define MDIO_PMA_EXTABLE_100BTX 0x0080#define MDIO_PMA_EXTABLE_1000BKX 0x0040#define MDIO_PMA_EXTABLE_1000BT 0x0020#define MDIO_PMA_EXTABLE_10GBKR 0x0010#define MDIO_PMA_EXTABLE_10GBKX4 0x0008#define MDIO_PMA_EXTABLE_10GBT 0x0004#define MDIO_PMA_EXTABLE_10GBLRM 0x0002#define MDIO_PMA_EXTABLE_10GCX4 0x0001#define MDIO_PMD_RXDET_3 0x0010#define MDIO_PMD_RXDET_2 0x0008#define MDIO_PMD_RXDET_1 0x0004#define MDIO_PMD_RXDET_0 0x0002#define MDIO_PMD_RXDET_GLOBAL 0x0001#define MDIO_PMD_TXDIS_3 0x0010#define MDIO_PMD_TXDIS_2 0x0008#define MDIO_PMD_TXDIS_1 0x0004#define MDIO_PMD_TXDIS_0 0x0002#define MDIO_PMD_TXDIS_GLOBAL 0x0001#define MDIO_PCS_STAT2_TXFLTABLE 0x2000#define MDIO_PCS_STAT2_RXFLTABLE 0x1000#define MDIO_PCS_STAT2_10GBW 0x0004#define MDIO_PCS_STAT2_10GBX 0x0002#define MDIO_PCS_STAT2_10GBR 0x0001#define MDIO_PMA_STAT2_TXFLTABLE 0x2000#define MDIO_PMA_STAT2_RXFLTABLE 0x1000#define MDIO_PMA_STAT2_EXTABLE 0x0200#define MDIO_PMD_STAT2_TXDISAB 0x0100#define MDIO_PMA_STAT2_10GBSR 0x0080#define MDIO_PMA_STAT2_10GBLR 0x0040#define MDIO_PMA_STAT2_10GBER 0x0020#define MDIO_PMA_STAT2_10GBLX4 0x0010#define MDIO_PMA_STAT2_10GBSW 0x0008#define MDIO_PMA_STAT2_10GBLW 0x0004#define MDIO_PMA_STAT2_10GBEW 0x0002#define MDIO_PMA_STAT2_LBABLE 0x0001#define MDIO_STAT2_DEVPRST_VAL 0x8000#define MDIO_STAT2_DEVPRST 0xc000#define MDIO_STAT2_TXFAULT 0x0800#define MDIO_STAT2_RXFAULT 0x0400#define MDIO_PCS_CTRL2_10GBT 0x0003#define MDIO_PCS_CTRL2_10GBW 0x0002#define MDIO_PCS_CTRL2_10GBX 0x0001#define MDIO_PCS_CTRL2_10GBR 0x0000#define MDIO_PCS_CTRL2_TYPE 0x0003#define MDIO_PMA_CTRL2_10BT 0x000f#define MDIO_PMA_CTRL2_100BTX 0x000e#define MDIO_PMA_CTRL2_1000BKX 0x000d#define MDIO_PMA_CTRL2_1000BT 0x000c#define MDIO_PMA_CTRL2_10GBKR 0x000b#define MDIO_PMA_CTRL2_10GBKX4 0x000a#define MDIO_PMA_CTRL2_10GBT 0x0009#define MDIO_PMA_CTRL2_10GBLRM 0x0008#define MDIO_PMA_CTRL2_10GBSR 0x0007#define MDIO_PMA_CTRL2_10GBLR 0x0006#define MDIO_PMA_CTRL2_10GBER 0x0005#define MDIO_PMA_CTRL2_10GBLX4 0x0004#define MDIO_PMA_CTRL2_10GBSW 0x0003#define MDIO_PMA_CTRL2_10GBLW 0x0002#define MDIO_PMA_CTRL2_10GBEW 0x0001#define MDIO_PMA_CTRL2_10GBCX4 0x0000#define MDIO_PMA_CTRL2_TYPE 0x000f#define MDIO_DEVS_LINK (MDIO_DEVS_PMAPMD | MDIO_DEVS_WIS | MDIO_DEVS_PCS | MDIO_DEVS_PHYXS | MDIO_DEVS_DTEXS | MDIO_DEVS_AN)#define MDIO_DEVS_VEND2 MDIO_DEVS_PRESENT(MDIO_MMD_VEND2)#define MDIO_DEVS_VEND1 MDIO_DEVS_PRESENT(MDIO_MMD_VEND1)#define MDIO_DEVS_C22EXT MDIO_DEVS_PRESENT(MDIO_MMD_C22EXT)#define MDIO_DEVS_AN MDIO_DEVS_PRESENT(MDIO_MMD_AN)#define MDIO_DEVS_TC MDIO_DEVS_PRESENT(MDIO_MMD_TC)#define MDIO_DEVS_DTEXS MDIO_DEVS_PRESENT(MDIO_MMD_DTEXS)#define MDIO_DEVS_PHYXS MDIO_DEVS_PRESENT(MDIO_MMD_PHYXS)#define MDIO_DEVS_PCS MDIO_DEVS_PRESENT(MDIO_MMD_PCS)#define MDIO_DEVS_WIS MDIO_DEVS_PRESENT(MDIO_MMD_WIS)#define MDIO_DEVS_PMAPMD MDIO_DEVS_PRESENT(MDIO_MMD_PMAPMD)#define MDIO_DEVS_PRESENT(devad) (1 << (devad))#define MDIO_PCS_SPEED_10P2B 0x0002#define MDIO_PMA_SPEED_10 0x0040#define MDIO_PMA_SPEED_100 0x0020#define MDIO_PMA_SPEED_1000 0x0010#define MDIO_PMA_SPEED_10P 0x0004#define MDIO_PMA_SPEED_2B 0x0002#define MDIO_SPEED_10G 0x0001#define MDIO_AN_STAT1_XNP 0x0080#define MDIO_AN_STAT1_PAGE 0x0040#define MDIO_AN_STAT1_COMPLETE BMSR_ANEGCOMPLETE#define MDIO_AN_STAT1_RFAULT BMSR_RFAULT#define MDIO_AN_STAT1_ABLE BMSR_ANEGCAPABLE#define MDIO_AN_STAT1_LPABLE 0x0001#define MDIO_STAT1_FAULT 0x0080#define MDIO_STAT1_LSTATUS BMSR_LSTATUS#define MDIO_STAT1_LPOWERABLE 0x0002#define MDIO_CTRL1_SPEED10P2B (MDIO_CTRL1_SPEEDSELEXT | 0x04)#define MDIO_CTRL1_SPEED10G (MDIO_CTRL1_SPEEDSELEXT | 0x00)#define MDIO_PCS_CTRL1_CLKSTOP_EN 0x400#define MDIO_AN_CTRL1_XNP 0x2000#define MDIO_AN_CTRL1_ENABLE BMCR_ANENABLE#define MDIO_AN_CTRL1_RESTART BMCR_ANRESTART#define MDIO_PHYXS_CTRL1_LOOPBACK BMCR_LOOPBACK#define MDIO_PCS_CTRL1_LOOPBACK BMCR_LOOPBACK#define MDIO_PMA_CTRL1_SPEED100 BMCR_SPEED100#define MDIO_PMA_CTRL1_SPEED1000 BMCR_SPEED1000#define MDIO_PMA_CTRL1_LOOPBACK 0x0001#define MDIO_CTRL1_RESET BMCR_RESET#define MDIO_CTRL1_LPOWER BMCR_PDOWN#define MDIO_CTRL1_FULLDPLX BMCR_FULLDPLX#define MDIO_CTRL1_SPEEDSEL (MDIO_CTRL1_SPEEDSELEXT | 0x003c)#define MDIO_CTRL1_SPEEDSELEXT (BMCR_SPEED1000 | BMCR_SPEED100)#define MDIO_PMA_LASI_STAT 0x9005#define MDIO_PMA_LASI_TXSTAT 0x9004#define MDIO_PMA_LASI_RXSTAT 0x9003#define MDIO_PMA_LASI_CTRL 0x9002#define MDIO_PMA_LASI_TXCTRL 0x9001#define MDIO_PMA_LASI_RXCTRL 0x9000#define MDIO_AN_10GBT_STAT 33#define MDIO_AN_10GBT_CTRL 32#define MDIO_PCS_10GBRT_STAT2 33#define MDIO_PCS_10GBRT_STAT1 32#define MDIO_PCS_10GBX_STAT1 24#define MDIO_PMA_10GBR_FECABLE 170#define MDIO_PMA_10GBT_SNR 133#define MDIO_PMA_10GBT_TXPWR 131#define MDIO_PMA_10GBT_SWAPPOL 130#define MDIO_AN_EEE_LPABLE 61#define MDIO_AN_EEE_ADV 60#define MDIO_PHYXS_LNSTAT 24#define MDIO_PCS_EEE_WK_ERR 22#define MDIO_PCS_EEE_ABLE 20#define MDIO_AN_LPA 19#define MDIO_AN_ADVERTISE 16#define MDIO_PKGID2 15#define MDIO_PKGID1 14#define MDIO_PMA_EXTABLE 11#define MDIO_PMA_RXDET 10#define MDIO_PMA_TXDIS 9#define MDIO_STAT2 8#define MDIO_CTRL2 7#define MDIO_DEVS2 6#define MDIO_DEVS1 5#define MDIO_SPEED 4#define MDIO_DEVID2 MII_PHYSID2#define MDIO_DEVID1 MII_PHYSID1#define MDIO_STAT1 MII_BMSR#define MDIO_CTRL1 MII_BMCR#define MDIO_MMD_VEND2 31#define MDIO_MMD_VEND1 30#define MDIO_MMD_C22EXT 29#define MDIO_MMD_AN 7#define MDIO_MMD_TC 6#define MDIO_MMD_DTEXS 5#define MDIO_MMD_PHYXS 4#define MDIO_MMD_PCS 3#define MDIO_MMD_WIS 2#define MDIO_MMD_PMAPMD 1#define __LINUX_MDIO_H__#define _PHY_INTERFACE_H#define PHY_10BT_FEATURES (SUPPORTED_10baseT_Half | SUPPORTED_10baseT_Full)#define PHY_BASIC_FEATURES (PHY_10BT_FEATURES | PHY_100BT_FEATURES | PHY_DEFAULT_FEATURES)#define PHY_GBIT_FEATURES (PHY_BASIC_FEATURES | PHY_1000BT_FEATURES)#define PHY_10G_FEATURES (PHY_GBIT_FEATURES | SUPPORTED_10000baseT_Full)#define PHY_100BT_FEATURES (SUPPORTED_100baseT_Half | SUPPORTED_100baseT_Full)#define PHY_DEFAULT_FEATURES (SUPPORTED_Autoneg | SUPPORTED_TP | SUPPORTED_MII)#define PHY_1000BT_FEATURES (SUPPORTED_1000baseT_Half | SUPPORTED_1000baseT_Full)#define PHY_UID_IN112525_S03 0x02107440#define PHY_UID_TN2020 0x00a19410#define PHY_UID_CS4223 0x03e57003#define PHY_UID_CS4340 0x13e51002#define PHY_ANEG_TIMEOUT 4000#define PHY_FLAG_BROKEN_RESET (1 << 0)#define PHY_FIXED_ID 0xa5a55a5a#define _PHY_H#define mdio_mux_get_ops(dev) ((struct mdio_mux_ops *)(dev)->driver->ops)#define MDIO_MUX_SELECT_NONE -1#define mdio_get_ops(dev) ((struct mdio_ops *)(dev)->driver->ops)#define ESTATUS_1000XH 0x4000#define ESTATUS_1000XF 0x8000#define PHY_1000BTSR_1000HD 0x0400#define PHY_1000BTSR_1000FD 0x0800#define PHY_1000BTSR_RRS 0x1000#define PHY_1000BTSR_LRS 0x2000#define PHY_1000BTSR_MSCR 0x4000#define PHY_1000BTSR_MSCF 0x8000#define PHY_1000BTCR_1000HD 0x0100#define PHY_1000BTCR_1000FD 0x0200#define PHY_ANLPAR_PSB_802_9 0x0002#define PHY_ANLPAR_PSB_802_3 0x0001#define MII_MIPSCR 0x11#define FULL 44#define HALF 22#define _10BASET 10#define _100BASET 100#define _1000BASET 1000#define AUTO 99#define _miiphy_h_#define CONFIG_DM_MDIO_MUX 1#define CONFIG_CMD_TIMER 1#define PART_ADD_DESC_MAXLEN 64#define MTDPARTS_MAXLEN 512#define PARTITION_MAXLEN 16#define MTDIDS_MAXLEN 128#define MTD_WRITEABLE_CMD 1#define OFFSET_NOT_SPECIFIED (~0llu)#define SIZE_REMAINING (~0llu)#define MIN_PART_SIZE 4096#define SIZE_GB ((u32)1024*1024*1024)#define SIZE_MB ((u32)1024*1024)#define SIZE_KB ((u32)1024)#define CONFIG_MTDPARTS_DEFAULT ""#define MTDPARTS_DEFAULT CONFIG_MTDPARTS_DEFAULT#define CONFIG_MTDIDS_DEFAULT ""#define MTDIDS_DEFAULT CONFIG_MTDIDS_DEFAULT#define __swab16(x) (__builtin_constant_p((__u16)(x)) ? ___swab16((x)) : __fswab16((x)))#define __cpu_to_be16(x) ((__force __be16)__swab16((x)))#define ___htons(x) __cpu_to_be16(x)#define htons(x) ___htons(x)#define ___swab16(x) ((__u16)( (((__u16)(x) & (__u16)0x00ffU) << 8) | (((__u16)(x) & (__u16)0xff00U) >> 8) ))#define __be16_to_cpu(x) __swab16((__force __u16)(__be16)(x))#define ___ntohs(x) __be16_to_cpu(x)#define ntohs(x) ___ntohs(x)#define CONFIG_CMD_TFTPPUT 1#define CONFIG_BOOTP_SERVERIP#define CONFIG_BOOTP_DNS2#define CONFIG_CMD_SNTP 1#define CONFIG_CMD_NFS 1#define CONFIG_CMD_DHCP 1#define CONFIG_CMD_RARP 1#define CONFIG_CMD_TFTPSRV 1#define CONFIG_CMD_TFTPBOOT 1#define CONFIG_CMD_BOOTP 1#define CONFIG_CMD_LINK_LOCAL 1#define CONFIG_CMD_CDP 1#define CONFIG_CMD_PING 1#define MAX_ENV_SIZE (1 << 20)#define CONFIG_SYS_CBSIZE 1024#define ARP_HLEN_ASCII (ARP_HLEN * 2) + (ARP_HLEN - 1)#define ARP_HLEN 6#define EEXIST 17#define CONFIG_CMD_NVEDIT_EFI 1#define CONFIG_CMD_ASKENV 1#define CONFIG_CMD_EDITENV 1#define CONFIG_CMD_ENV_CALLBACK 1#define CONFIG_CMD_EXPORTENV 1#define CONFIG_CMD_GREPENV 1#define CONFIG_CMD_IMPORTENV 1#define CONFIG_CMD_RUN 1#define CONFIG_CMD_ENV_EXISTS 1#define CONFIG_ENV_IS_NOWHERE 1#define hex_asc_hi(x) hex_asc[((x) & 0xf0) >> 4]#define hex_asc_lo(x) hex_asc[((x) & 0x0f)]#define HEXDUMP_H#define __NVME_H__#define video_osd_get_ops(dev) ((struct video_osd_ops *)(dev)->driver->ops)#define _VIDEO_OSD_H_#define _ASM_PROCESSOR_H#define pinctrl_get_ops(dev) ((struct pinctrl_ops *)(dev)->driver->ops)#define PINMUX_SIZE 40#define PINNAME_SIZE 10#define __PINCTRL_H#define CONFIG_PINCTRL 1#define CONFIG_PINCTRL_GENERIC 1#define LIMIT_DEVNAME 30#define __POWER_CHARGER_H_#define pmic_spi_flags (p->hw.spi.flags)#define pmic_spi_bitlen (p->hw.spi.bitlen)#define pmic_i2c_tx_num (p->hw.i2c.tx_num)#define pmic_i2c_addr (p->hw.i2c.addr)#define __CORE_PMIC_H_#define CONFIG_DM_PMIC 1#define EFAULT 14#define LIMIT_DEV 32#define LIMIT_PARENT 20#define __MENU_H__#define MAX_NEST_LEVEL 16#define EMLINK 31#define IMAGE_FORMAT_INVALID 0x00#define CONFIG_CMD_BOOTZ 1#define ___ntohl(x) __be32_to_cpu(x)#define ntohl(x) ___ntohl(x)#define PXELINUX_DIR "pxelinux.cfg/"#define MAX_TFTP_PATH_LEN 127#define ENAMETOOLONG 36#define CONFIG_CMD_FS_GENERIC 1#define CONFIG_CMD_FAT 1#define CONFIG_CMD_EXT2 1#define CONFIG_SYS_ARCH "sandbox"#define FW_CFG_MAX_FILE_PATH 56#define BIOS_LINKER_LOADER_FILESZ FW_CFG_MAX_FILE_PATH#define FW_CFG_DMA_ENABLED (1 << 1)#define FW_CFG_DMA_SELECT (1 << 3)#define FW_CFG_DMA_SKIP (1 << 2)#define FW_CFG_DMA_READ (1 << 1)#define FW_CFG_DMA_ERROR (1 << 0)#define QEMU_FW_CFG_SIGNATURE (('Q' << 24) | ('E' << 16) | ('M' << 8) | 'U')#define FW_CFG_ENTRY_MASK ~(FW_CFG_WRITE_CHANNEL | FW_CFG_ARCH_LOCAL)#define FW_CFG_MAX_ENTRY (FW_CFG_FILE_FIRST + FW_CFG_FILE_SLOTS)#define FW_CFG_FILE_SLOTS 0x10#define __FW_CFG__#define _INCLUDE_REGULATOR_H_#define LIMIT_INFO 18#define LIMIT_DEVNAME 20#define LIMIT_OFNAME 32#define ENXIO 6#define rproc_get_ops(dev) ((struct dm_rproc_ops *)(dev)->driver->ops)#define _RPROC_H_#define CONFIG_REMOTEPROC 1#define AHCI_MAX_PORTS 32#define ahci_get_ops(dev) ((struct ahci_ops *)(dev)->driver->ops)#define ATA_FLAG_NO_ATAPI (1 << 11)#define ATA_FLAG_PIO_DMA (1 << 8)#define ATA_FLAG_SATA_RESET (1 << 7)#define ATA_FLAG_MMIO (1 << 6)#define ATA_FLAG_NO_LEGACY (1 << 4)#define ATA_FLAG_SATA (1 << 3)#define PORT_CMD_ICC_SLUMBER (0x6 << 28)#define PORT_CMD_ICC_PARTIAL (0x2 << 28)#define PORT_CMD_ICC_ACTIVE (0x1 << 28)#define PORT_CMD_START (1 << 0)#define PORT_CMD_SPIN_UP (1 << 1)#define PORT_CMD_POWER_ON (1 << 2)#define PORT_CMD_CLO (1 << 3)#define PORT_CMD_FIS_RX (1 << 4)#define PORT_CMD_FIS_ON (1 << 14)#define PORT_CMD_LIST_ON (1 << 15)#define PORT_CMD_ATAPI (1 << 24)#define PORT_SCR_STAT_DET_PHYRDY 0x3#define PORT_SCR_STAT_DET_COMINIT 0x1#define PORT_SCR_STAT_DET_MASK 0x3#define DEF_PORT_IRQ PORT_IRQ_FATAL | PORT_IRQ_PHYRDY | PORT_IRQ_CONNECT | PORT_IRQ_SG_DONE | PORT_IRQ_UNK_FIS | PORT_IRQ_SDB_FIS | PORT_IRQ_DMAS_FIS | PORT_IRQ_PIOS_FIS | PORT_IRQ_D2H_REG_FIS#define PORT_IRQ_FATAL PORT_IRQ_TF_ERR | PORT_IRQ_HBUS_ERR | PORT_IRQ_HBUS_DATA_ERR | PORT_IRQ_IF_ERR#define PORT_IRQ_D2H_REG_FIS (1 << 0)#define PORT_IRQ_PIOS_FIS (1 << 1)#define PORT_IRQ_DMAS_FIS (1 << 2)#define PORT_IRQ_SDB_FIS (1 << 3)#define PORT_IRQ_UNK_FIS (1 << 4)#define PORT_IRQ_SG_DONE (1 << 5)#define PORT_IRQ_CONNECT (1 << 6)#define PORT_IRQ_DEV_ILCK (1 << 7)#define PORT_IRQ_PHYRDY (1 << 22)#define PORT_IRQ_BAD_PMP (1 << 23)#define PORT_IRQ_OVERFLOW (1 << 24)#define PORT_IRQ_IF_NONFATAL (1 << 26)#define PORT_IRQ_IF_ERR (1 << 27)#define PORT_IRQ_HBUS_DATA_ERR (1 << 28)#define PORT_IRQ_HBUS_ERR (1 << 29)#define PORT_IRQ_TF_ERR (1 << 30)#define PORT_IRQ_COLD_PRES (1 << 31)#define PORT_SCR_ACT 0x34#define PORT_SCR_ERR 0x30#define PORT_SCR_CTL 0x2c#define PORT_SCR_STAT 0x28#define PORT_SCR 0x28#define PORT_CMD_ISSUE 0x38#define PORT_SIG 0x24#define PORT_TFDATA 0x20#define PORT_CMD 0x18#define PORT_IRQ_MASK 0x14#define PORT_IRQ_STAT 0x10#define PORT_FIS_ADDR_HI 0x0c#define PORT_FIS_ADDR 0x08#define PORT_LST_ADDR_HI 0x04#define PORT_LST_ADDR 0x00#define HOST_AHCI_EN (1 << 31)#define HOST_IRQ_EN (1 << 1)#define HOST_RESET (1 << 0)#define HOST_CAP2 0x24#define HOST_VERSION 0x10#define HOST_PORTS_IMPL 0x0c#define HOST_IRQ_STAT 0x08#define HOST_CTL 0x04#define HOST_CAP 0x00#define RX_FIS_D2H_REG 0x40#define AHCI_CMD_CLR_BUSY (1 << 10)#define AHCI_CMD_RESET (1 << 8)#define AHCI_CMD_PREFETCH (1 << 7)#define AHCI_CMD_WRITE (1 << 6)#define AHCI_CMD_ATAPI (1 << 5)#define AHCI_PORT_PRIV_DMA_SZ (AHCI_CMD_SLOT_SZ * AHCI_MAX_CMD_SLOT + AHCI_CMD_TBL_SZ + AHCI_RX_FIS_SZ)#define AHCI_CMD_TBL_SZ AHCI_CMD_TBL_HDR + (AHCI_MAX_SG * 16)#define AHCI_CMD_TBL_CDB 0x40#define AHCI_CMD_TBL_HDR 0x80#define AHCI_RX_FIS_SZ 256#define AHCI_MAX_CMD_SLOT 32#define AHCI_CMD_SLOT_SZ 32#define AHCI_MAX_SG 56#define AHCI_PCI_BAR 0x24#define _AHCI_H_#define __SATA_H__#define binman_sym(_type,_entry_name,_prop_name) BINMAN_SYM_MISSING#define binman_sym_extern(_type,_entry_name,_prop_name)#define binman_sym_declare_optional(_type,_entry_name,_prop_name)#define binman_sym_declare(_type,_entry_name,_prop_name)#define BINMAN_SYM_MISSING (-1UL)#define __BINMAN_SYM_H#define CONFIG_SPL_BOARD_LOAD_IMAGE#define __asm_spl_h#define __HANDOFF_H#define SPL_LOAD_IMAGE_METHOD(_name,_priority,_boot_device,_method) SPL_LOAD_IMAGE(_method ## _priority ## _boot_device) = { .boot_device = _boot_device, .load_image = _method, }#define SPL_LOAD_IMAGE(__name) ll_entry_declare(struct spl_image_loader, __name, spl_image_loader)#define SPL_FIT_FOUND 2#define SPL_COPY_PAYLOAD_ONLY 1#define SPL_TPL_PROMPT ""#define SPL_TPL_NAME ""#define MMCSD_MODE_EMMCBOOT 3#define MMCSD_MODE_FS 2#define MMCSD_MODE_RAW 1#define MMCSD_MODE_UNDEFINED 0#define UBOOT_NOT_LOADED_FROM_SPL 0x13578642#define _SPL_H_#define SCSI_INT_STATE 0x00010000#define SCSI_UNEXP_DIS 0x00000104#define SCSI_MA_TIME_OUT 0x00000103#define SCSI_HNS_TIME_OUT 0x00000102#define SCSI_SEL_TIME_OUT 0x00000101#define SCSI_IDENTIFY 0xC0#define scsi_get_ops(dev) ((struct scsi_ops *)(dev)->driver->ops)#define SCSI_WRITE_SAME 0x41#define SCSI_WRITE_LONG 0x3F#define SCSI_WRT_VERIFY 0x2E#define SCSI_WRITE10 0x2A#define SCSI_WRITE6 0x0A#define SCSI_VERIFY 0x2F#define SCSI_SYNC_CACHE 0x35#define SCSI_START_STP 0x1B#define SCSI_SET_LIMIT 0x33#define SCSI_SEND_DIAG 0x1D#define SCSI_SEEK10 0x2B#define SCSI_SEEK6 0x0B#define SCSI_SRCH_DAT_L 0x32#define SCSI_SRCH_DAT_H 0x30#define SCSI_SRCH_DAT_E 0x31#define SCSI_REZERO 0x01#define SCSI_RELEASE 0x17#define SCSI_RCV_DIAG 0x1C#define SCSI_REASS_BLK 0x07#define SCSI_READ_LONG 0x3E#define SCSI_RD_DEFECT 0x37#define SCSI_RD_CAPAC16 0x9e#define SCSI_RD_CAPAC10 SCSI_RD_CAPAC#define SCSI_RD_CAPAC 0x25#define SCSI_READ16 0x48#define SCSI_READ10 0x28#define SCSI_READ6 0x08#define SCSI_MED_REMOVL 0x1E#define SCSI_PREFETCH 0x34#define SCSI_LCK_UN_CAC 0x36#define SCSI_FORMAT 0x04#define SCSI_COMPARE 0x39#define SCSI_WRITE_BUFF 0x3B#define SCSI_TST_U_RDY 0x00#define SCSI_REQ_SENSE 0x03#define SCSI_READ_BUFF 0x3C#define SCSI_MODE_SEN10 0x5A#define SCSI_MODE_SEN6 0x1A#define SCSI_MODE_SEL10 0x55#define SCSI_MODE_SEL6 0x15#define SCSI_LOG_SENSE 0x4D#define SCSI_LOG_SELECT 0x4C#define SCSI_INQUIRY 0x12#define SCSI_COP_VERIFY 0x3A#define SCSI_COPY 0x18#define SCSI_CHANGE_DEF 0x40#define SENSE_MISCOMPARE 0xE#define SENSE_VOLUME_OVERFLOW 0xD#define SENSE_ABORTED_COMMAND 0xB#define SENSE_COPY_ABORTED 0xA#define SENSE_VENDOR_SPECIFIC 0x9#define SENSE_BLANK_CHECK 0x8#define SENSE_DATA_PROTECT 0x7#define SENSE_UNIT_ATTENTION 0x6#define SENSE_ILLEGAL_REQUEST 0x5#define SENSE_HARDWARE_ERROR 0x4#define SENSE_MEDIUM_ERROR 0x3#define SENSE_NOT_READY 0x2#define SENSE_RECOVERED_ERROR 0x1#define SENSE_NO_SENSE 0x0#define S_SENSE (0x80)#define S_ILLEGAL (0xff)#define S_QUEUE_FULL (0x28)#define S_TERMINATED (0x20)#define S_CONFLICT (0x18)#define S_INT_COND_MET (0x14)#define S_INT (0x10)#define S_BUSY (0x08)#define S_COND_MET (0x04)#define S_CHECK_COND (0x02)#define S_GOOD (0x00)#define M_X_PPR_REQ (0x04)#define M_X_WIDE_REQ (0x03)#define M_X_SYNC_REQ (0x01)#define M_X_MODIFY_DP (0x00)#define M_IDENTIFY (0x80)#define M_IGN_RESIDUE (0x23)#define M_ORDERED_TAG (0x22)#define M_HEAD_TAG (0x21)#define M_SIMPLE_TAG (0x20)#define M_TERMINATE (0x11)#define M_REL_REC (0x10)#define M_INIT_REC (0x0f)#define M_CLEAR_QUEUE (0x0e)#define M_ABORT_TAG (0x0d)#define M_RESET (0x0c)#define M_FCOMPLETE (0x0b)#define M_LCOMPLETE (0x0a)#define M_PARITY (0x09)#define M_NOOP (0x08)#define M_REJECT (0x07)#define M_ABORT (0x06)#define M_ID_ERROR (0x05)#define M_DISCONNECT (0x04)#define M_RESTORE_DP (0x03)#define M_SAVE_DP (0x02)#define M_EXTENDED (0x01)#define M_COMPLETE (0x00)#define _SCSI_H#define SLRE_HEADER_DEFINED#define SLRE_BUFSZ 16384#define SLRE_PATSZ 4096#define SPI_XFER_BEGIN BIT(0)#define SPI_XFER_END BIT(1)#define spi_emul_get_ops(dev) ((struct dm_spi_emul_ops *)(dev)->driver->ops)#define spi_get_ops(dev) ((struct dm_spi_ops *)(dev)->driver->ops)#define spi_alloc_slave_base(bus,cs) spi_do_alloc_slave(0, sizeof(struct spi_slave), bus, cs)#define spi_alloc_slave(_struct,bus,cs) spi_do_alloc_slave(offsetof(_struct, slave), sizeof(_struct), bus, cs)#define SPI_XFER_MMAP_END BIT(3)#define SPI_XFER_MMAP BIT(2)#define SPI_XFER_ONCE (SPI_XFER_BEGIN | SPI_XFER_END)#define SPI_DEFAULT_WORDLEN 8#define SPI_PREAMBLE_END_BYTE 0xec#define SPI_RX_QUAD BIT(13)#define SPI_RX_DUAL BIT(12)#define SPI_RX_SLOW BIT(11)#define SPI_TX_QUAD BIT(10)#define SPI_TX_DUAL BIT(9)#define SPI_TX_BYTE BIT(8)#define SPI_PREAMBLE BIT(7)#define SPI_SLAVE BIT(6)#define SPI_LOOP BIT(5)#define SPI_3WIRE BIT(4)#define SPI_LSB_FIRST BIT(3)#define SPI_CS_HIGH BIT(2)#define SPI_MODE_3 (SPI_CPOL|SPI_CPHA)#define SPI_MODE_2 (SPI_CPOL|0)#define SPI_MODE_1 (0|SPI_CPHA)#define SPI_MODE_0 (0|0)#define SPI_CPOL BIT(1)#define SPI_CPHA BIT(0)#define _SPI_H_#define CFI_MFR_WINBOND 0x00DA#define CFI_MFR_TOSHIBA 0x0098#define CFI_MFR_MICRON 0x002C#define CFI_MFR_ST 0x0020#define CFI_MFR_SST 0x00BF#define CFI_MFR_SHARP 0x00B0#define CFI_MFR_SAMSUNG 0x00EC#define CFI_MFR_PMC 0x009D#define CFI_MFR_NEC 0x0010#define CFI_MFR_MACRONIX 0x00C2#define CFI_MFR_INTEL 0x0089#define CFI_MFR_HYUNDAI 0x00AD#define CFI_MFR_FUJITSU 0x0004#define CFI_MFR_EON 0x001C#define CFI_MFR_ATMEL 0x001F#define CFI_MFR_AMIC 0x0037#define CFI_MFR_AMD 0x0001#define CFI_MFR_CONTINUATION 0x007F#define CFI_ID_ANY 0xFFFF#define CFI_MFR_ANY 0xFFFF#define __MTD_CFI_H__#define GENMASK(h,l) (((~0UL) << (l)) & (~0UL >> (CONFIG_SANDBOX_BITS_PER_LONG - 1 - (h))))#define SNOR_PROTO_DATA_MASK GENMASK(7, 0)#define CONFIG_SANDBOX_BITS_PER_LONG 64#define SNOR_PROTO_DATA_SHIFT 0#define SNOR_PROTO_ADDR_MASK GENMASK(15, 8)#define SNOR_PROTO_ADDR_SHIFT 8#define SNOR_PROTO_INST_MASK GENMASK(23, 16)#define SNOR_PROTO_INST_SHIFT 16#define SNOR_PROTO_IS_DTR BIT(24)#define SNOR_PROTO_STR(_inst_nbits,_addr_nbits,_data_nbits) (SNOR_PROTO_INST(_inst_nbits) | SNOR_PROTO_ADDR(_addr_nbits) | SNOR_PROTO_DATA(_data_nbits))#define SNOR_PROTO_INST(_nbits) ((((unsigned long)(_nbits)) << SNOR_PROTO_INST_SHIFT) & SNOR_PROTO_INST_MASK)#define SNOR_PROTO_ADDR(_nbits) ((((unsigned long)(_nbits)) << SNOR_PROTO_ADDR_SHIFT) & SNOR_PROTO_ADDR_MASK)#define SNOR_PROTO_DATA(_nbits) ((((unsigned long)(_nbits)) << SNOR_PROTO_DATA_SHIFT) & SNOR_PROTO_DATA_MASK)#define SNOR_PROTO_DTR(_inst_nbits,_addr_nbits,_data_nbits) (SNOR_PROTO_IS_DTR | SNOR_PROTO_STR(_inst_nbits, _addr_nbits, _data_nbits))#define SPI_NOR_MAX_CMD_SIZE 8#define SNOR_HWCAPS_PP_8_8_8 BIT(22)#define SNOR_HWCAPS_PP_1_8_8 BIT(21)#define SNOR_HWCAPS_PP_1_1_8 BIT(20)#define SNOR_HWCAPS_PP_OCTO GENMASK(22, 20)#define SNOR_HWCAPS_PP_4_4_4 BIT(19)#define SNOR_HWCAPS_PP_1_4_4 BIT(18)#define SNOR_HWCAPS_PP_1_1_4 BIT(17)#define SNOR_HWCAPS_PP_QUAD GENMASK(19, 17)#define SNOR_HWCAPS_PP BIT(16)#define SNOR_HWCAPS_PP_MASK GENMASK(22, 16)#define SNOR_HWCAPS_READ_1_8_8_DTR BIT(14)#define SNOR_HWCAPS_READ_8_8_8 BIT(13)#define SNOR_HWCAPS_READ_1_8_8 BIT(12)#define SNOR_HWCAPS_READ_1_1_8 BIT(11)#define SNOR_HWCPAS_READ_OCTO GENMASK(14, 11)#define SNOR_HWCAPS_READ_1_4_4_DTR BIT(10)#define SNOR_HWCAPS_READ_4_4_4 BIT(9)#define SNOR_HWCAPS_READ_1_4_4 BIT(8)#define SNOR_HWCAPS_READ_1_1_4 BIT(7)#define SNOR_HWCAPS_READ_QUAD GENMASK(10, 7)#define SNOR_HWCAPS_READ_1_2_2_DTR BIT(6)#define SNOR_HWCAPS_READ_2_2_2 BIT(5)#define SNOR_HWCAPS_READ_1_2_2 BIT(4)#define SNOR_HWCAPS_READ_1_1_2 BIT(3)#define SNOR_HWCAPS_READ_DUAL GENMASK(6, 3)#define SNOR_HWCAPS_READ_1_1_1_DTR BIT(2)#define SNOR_HWCAPS_READ_FAST BIT(1)#define SNOR_HWCAPS_READ BIT(0)#define SNOR_HWCAPS_READ_MASK GENMASK(14, 0)#define spi_flash spi_nor#define SR2_QUAD_EN_BIT7 BIT(7)#define CR_QUAD_EN_SPAN BIT(1)#define FSR_PT_ERR BIT(1)#define FSR_P_ERR BIT(4)#define FSR_E_ERR BIT(5)#define FSR_READY BIT(7)#define EVCR_QUAD_EN_MICRON BIT(7)#define SR_QUAD_EN_MX BIT(6)#define SR_P_ERR BIT(6)#define SR_E_ERR BIT(5)#define SR_SRWD BIT(7)#define SR_TB BIT(5)#define SR_BP2 BIT(4)#define SR_BP1 BIT(3)#define SR_BP0 BIT(2)#define SR_WEL BIT(1)#define SR_WIP BIT(0)#define SPINOR_OP_WD_EVCR 0x61#define SPINOR_OP_RD_EVCR 0x65#define SPINOR_OP_CLSR 0x30#define SPINOR_OP_BRRD 0x16#define SPINOR_OP_BRWR 0x17#define SPINOR_OP_EX4B 0xe9#define SPINOR_OP_EN4B 0xb7#define XSR_RDY BIT(7)#define XSR_PAGESIZE BIT(0)#define SPINOR_OP_XRDSR 0xd7#define SPINOR_OP_XPP 0x82#define SPINOR_OP_XSE 0x50#define SPINOR_OP_AAI_WP 0xad#define SPINOR_OP_WRDI 0x04#define SPINOR_OP_BP 0x02#define SPINOR_OP_READ_1_4_4_DTR_4B 0xee#define SPINOR_OP_READ_1_2_2_DTR_4B 0xbe#define SPINOR_OP_READ_1_1_1_DTR_4B 0x0e#define SPINOR_OP_READ_1_4_4_DTR 0xed#define SPINOR_OP_READ_1_2_2_DTR 0xbd#define SPINOR_OP_READ_1_1_1_DTR 0x0d#define SPINOR_OP_SE_4B 0xdc#define SPINOR_OP_BE_32K_4B 0x5c#define SPINOR_OP_BE_4K_4B 0x21#define SPINOR_OP_PP_1_4_4_4B 0x3e#define SPINOR_OP_PP_1_1_4_4B 0x34#define SPINOR_OP_PP_4B 0x12#define SPINOR_OP_READ_1_4_4_4B 0xec#define SPINOR_OP_READ_1_1_4_4B 0x6c#define SPINOR_OP_READ_1_2_2_4B 0xbc#define SPINOR_OP_READ_1_1_2_4B 0x3c#define SPINOR_OP_READ_FAST_4B 0x0c#define SPINOR_OP_READ_4B 0x13#define SPINOR_OP_WREAR 0xc5#define SPINOR_OP_RDEAR 0xc8#define SPINOR_OP_CLFSR 0x50#define SPINOR_OP_RDFSR 0x70#define SPINOR_OP_RDCR 0x35#define SPINOR_OP_RDSFDP 0x5a#define SPINOR_OP_RDID 0x9f#define SPINOR_OP_SE 0xd8#define SPINOR_OP_CHIP_ERASE 0xc7#define SPINOR_OP_BE_32K 0x52#define SPINOR_OP_BE_4K_PMC 0xd7#define SPINOR_OP_BE_4K 0x20#define SPINOR_OP_PP_1_4_4 0x38#define SPINOR_OP_PP_1_1_4 0x32#define SPINOR_OP_PP 0x02#define SPINOR_OP_READ_1_4_4 0xeb#define SPINOR_OP_READ_1_1_4 0x6b#define SPINOR_OP_READ_1_2_2 0xbb#define SPINOR_OP_READ_1_1_2 0x3b#define SPINOR_OP_READ_FAST 0x0b#define SPINOR_OP_READ 0x03#define SPINOR_OP_WRSR2 0x3e#define SPINOR_OP_RDSR2 0x3f#define SPINOR_OP_WRSR 0x01#define SPINOR_OP_RDSR 0x05#define SPINOR_OP_WREN 0x06#define SNOR_MFR_WINBOND 0xef#define SNOR_MFR_SST CFI_MFR_SST#define SNOR_MFR_SPANSION CFI_MFR_AMD#define SNOR_MFR_MACRONIX CFI_MFR_MACRONIX#define SNOR_MFR_MICRON CFI_MFR_MICRON#define SNOR_MFR_ST CFI_MFR_ST#define SNOR_MFR_INTEL CFI_MFR_INTEL#define SNOR_MFR_GIGADEVICE 0xc8#define SNOR_MFR_ATMEL CFI_MFR_ATMEL#define __LINUX_MTD_SPI_NOR_H#define sf_get_ops(dev) ((struct dm_spi_flash_ops *)(dev)->driver->ops)#define CONFIG_ENV_SPI_MODE CONFIG_SF_DEFAULT_MODE#define CONFIG_ENV_SPI_MAX_HZ CONFIG_SF_DEFAULT_SPEED#define CONFIG_ENV_SPI_CS CONFIG_SF_DEFAULT_CS#define CONFIG_ENV_SPI_BUS CONFIG_SF_DEFAULT_BUS#define _SPI_FLASH_H_#define CONFIG_DM_SPI_FLASH 1#define CONFIG_CMD_SF_TEST 1#define CONFIG_SYS_TEXT_BASE 0x0#define min_t(type,x,y) ({ type __min1 = (x); type __min2 = (y); __min1 < __min2 ? __min1: __min2; })#define CONFIG_SF_DEFAULT_BUS 0#define CONFIG_SF_DEFAULT_CS 0#define CONFIG_SF_DEFAULT_SPEED 1000000#define CONFIG_SF_DEFAULT_MODE 0x3#define SF_TEST_HELP "\nsf test offset len		" "- run a very basic destructive test"#define sound_get_ops(dev) ((struct sound_ops *)(dev)->driver->ops)#define __SOUND_H__#define __MAPMEM_H#define CONFIG_ARCH_MAP_SYSMEM 1#define FIT_IMAGES_PATH "/images"#define FIT_DEFAULT_PROP "default"#define CONFIG_CMD_SOURCE 1#define CONFIG_DEFAULT_SPI_MODE 0x0#define CONFIG_DEFAULT_SPI_BUS 0#define MAX_SPI_BYTES 32#define OP_INVALID 0#define OP_STR_EMPTY 4#define OP_STR_NEMPTY 5#define OP_STR_EQ 6#define OP_STR_NEQ 7#define OP_STR_LT 8#define OP_STR_GT 9#define OP_INT_EQ 10#define OP_INT_NEQ 11#define OP_INT_LT 12#define OP_INT_LE 13#define OP_INT_GT 14#define OP_INT_GE 15#define OP_FILE_EXISTS 16#define OP_OR 2#define OP_AND 3#define OP_NOT 1#define TPM_DEV_BUFSIZE 1260#define TPM_COMMAND_NO_ARG(cmd) int do_ ## cmd(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[]) { struct udevice *dev; int rc; rc = get_tpm(&dev); if (rc) return rc; if (argc != 1) return CMD_RET_USAGE; return report_return_code(cmd(dev)); }#define MAKE_TPM_CMD_ENTRY(cmd) U_BOOT_CMD_MKENT(cmd, 0, 1, do_tpm_ ## cmd, "", "")#define tpm_get_ops(dev) ((struct tpm_ops *)device_get_ops(dev))#define TPM_PCR_MINIMUM_DIGEST_SIZE 20#define TPM_HEADER_SIZE 10#define __TPM_COMMON_H#define CONFIG_TPM_V2 1#define CONFIG_TPM_V1 1#define __TPM_USER_UTILS_H#define TPM_SHA1_160_HASH_LEN 0x14#define TPM_NV_PER_WRITEALL BIT(12)#define TPM_NV_PER_WRITEDEFINE BIT(13)#define TPM_NV_PER_WRITE_STCLEAR BIT(14)#define TPM_NV_PER_READ_STCLEAR BIT(31)#define TPM_NV_PER_PPWRITE BIT(0)#define TPM_NV_PER_PPREAD BIT(16)#define TPM_NV_PER_GLOBALLOCK BIT(15)#define TPM_TAG_PERMANENT_FLAGS 0x001f#define __TPM_V1_H#define TPM2_DIGEST_LEN 32#define __TPM_V2_H#define VOIDTEST(XFUNC) int do_test_ ## XFUNC(cmd_tbl_t *cmd_tbl, int flag, int argc, char * const argv[]) { struct udevice *dev; int ret; ret = get_tpm(&dev); if (ret) return ret; return test_ ## XFUNC(dev); }#define TPM_CHECK(tpm_command) do { uint32_t result; result = (tpm_command); if (result != TPM_SUCCESS) { printf("TEST FAILED: line %d: " #tpm_command ": 0x%x\n", __LINE__, result); return result; } } while (0)#define PRESENCE 8#define TPM_MAX_NV_WRITES_NOOWNER 64#define INDEX0 0xda70#define TTPM_CHECK(op,time_limit) do { ulong start, time; uint32_t __result; start = get_timer(0); __result = op; if (__result != TPM_SUCCESS) { printf("\t" #op ": error 0x%x\n", __result); return -1; } time = get_timer(start); printf("\t" #op ": %lu ms\n", time); if (time > (ulong)time_limit) { printf("\t" #op " exceeded " #time_limit " ms\n"); } } while (0)#define PHYS_PRESENCE 4#define PERMPPGL (TPM_NV_PER_PPWRITE | TPM_NV_PER_GLOBALLOCK)#define INDEX1 0xda71#define PERMPP TPM_NV_PER_PPWRITE#define INDEX_INITIALISED 0xda80#define INDEX2 0xda72#define INDEX3 0xda73#define VOIDENT(XNAME) U_BOOT_CMD_MKENT(XNAME, 0, 1, do_test_ ## XNAME, "", ""),#define reboot() do { printf("\trebooting...\n"); reset_cpu(0); } while (0)#define stdin 0#define __cpu_to_le16(x) ((__force __le16)(__u16)(x))#define cpu_to_le16 __cpu_to_le16#define U_BOOT_BUILD_DATE 0x20190730#define U_BOOT_DMI_DATE "07/30/2019"#define U_BOOT_TZ "+0000"#define U_BOOT_TIME "09:43:04"#define U_BOOT_DATE "Jul 30 2019"#define __TIMESTAMP_H__#define LD_VERSION_STRING "GNU ld (GNU Binutils for Ubuntu) 2.31.1"#define CC_VERSION_STRING "gcc (Ubuntu 8.3.0-6ubuntu1~18.10.1) 8.3.0"#define U_BOOT_VERSION "U-Boot " PLAIN_VERSION#define PLAIN_VERSION "2019.10-rc1-dirty"#define U_BOOT_VERSION_STRING U_BOOT_VERSION " (" U_BOOT_DATE " - " U_BOOT_TIME " " U_BOOT_TZ ")" CONFIG_IDENT_STRING#define __VERSION_H__#define DISPLAY_OPTIONS_BANNER_LENGTH 200#define CONFIG_IDENT_STRING ""#define _LINUX_VIRTIO_TYPES_H#define __bitwise#define WARN_ON(condition) ({ int __ret_warn_on = !!(condition); if (unlikely(__ret_warn_on)) printk("WARNING at %s:%d/%s()!\n", __FILE__, __LINE__, __func__); unlikely(__ret_warn_on); })#define __compiletime_assert(condition,msg,prefix,suffix) do { bool __cond = !(condition); extern void prefix ## suffix(void) __compiletime_error(msg); if (__cond) prefix ## suffix(); __compiletime_error_fallback(__cond); } while (0)#define _compiletime_assert(condition,msg,prefix,suffix) __compiletime_assert(condition, msg, prefix, suffix)#define compiletime_assert(condition,msg) _compiletime_assert(condition, msg, __compiletime_assert_, __LINE__)#define BUILD_BUG_ON_MSG(cond,msg) compiletime_assert(!(cond), msg)#define BUILD_BUG_ON(condition) BUILD_BUG_ON_MSG(condition, "BUILD_BUG_ON failed: " #condition)#define __compiletime_error(message) __attribute__((error(message)))#define __compiletime_error_fallback(condition) do { } while (0)#define BIT_ULL(nr) (1ULL << (nr))#define __cpu_to_le64(x) ((__force __le64)(__u64)(x))#define cpu_to_le64 __cpu_to_le64#define __swab64(x) (__builtin_constant_p((__u64)(x)) ? ___swab64((x)) : __fswab64((x)))#define __cpu_to_be64(x) ((__force __be64)__swab64((x)))#define cpu_to_be64 __cpu_to_be64#define ___swab64(x) ((__u64)( (__u64)(((__u64)(x) & (__u64)0x00000000000000ffULL) << 56) | (__u64)(((__u64)(x) & (__u64)0x000000000000ff00ULL) << 40) | (__u64)(((__u64)(x) & (__u64)0x0000000000ff0000ULL) << 24) | (__u64)(((__u64)(x) & (__u64)0x00000000ff000000ULL) << 8) | (__u64)(((__u64)(x) & (__u64)0x000000ff00000000ULL) >> 8) | (__u64)(((__u64)(x) & (__u64)0x0000ff0000000000ULL) >> 24) | (__u64)(((__u64)(x) & (__u64)0x00ff000000000000ULL) >> 40) | (__u64)(((__u64)(x) & (__u64)0xff00000000000000ULL) >> 56) ))#define __le64_to_cpu(x) ((__force __u64)(__le64)(x))#define le64_to_cpu __le64_to_cpu#define __be64_to_cpu(x) __swab64((__force __u64)(__be64)(x))#define be64_to_cpu __be64_to_cpu#define cpu_to_be16 __cpu_to_be16#define be16_to_cpu __be16_to_cpu#define virtio_cread_feature(vdev,fbit,structname,member,ptr) ({ int _r = 0; if (!virtio_has_feature(vdev, fbit)) _r = -ENOENT; else virtio_cread(vdev, structname, member, ptr); _r; })#define virtio_cwrite(vdev,structname,member,ptr) do { if (!typecheck(typeof((((structname *)0)->member)), *(ptr))) WARN_ON((*ptr) == 1); switch (sizeof(*ptr)) { case 1: virtio_cwrite8(vdev, offsetof(structname, member), *(ptr)); break; case 2: virtio_cwrite16(vdev, offsetof(structname, member), *(ptr)); break; case 4: virtio_cwrite32(vdev, offsetof(structname, member), *(ptr)); break; case 8: virtio_cwrite64(vdev, offsetof(structname, member), *(ptr)); break; default: WARN_ON(true); } } while (0)#define virtio_cread(vdev,structname,member,ptr) do { if (!typecheck(typeof((((structname *)0)->member)), *(ptr))) (*ptr) = 1; switch (sizeof(*ptr)) { case 1: *(ptr) = virtio_cread8(vdev, offsetof(structname, member)); break; case 2: *(ptr) = virtio_cread16(vdev, offsetof(structname, member)); break; case 4: *(ptr) = virtio_cread32(vdev, offsetof(structname, member)); break; case 8: *(ptr) = virtio_cread64(vdev, offsetof(structname, member)); break; default: WARN_ON(true); } } while (0)#define virtio_get_ops(dev) ((struct dm_virtio_ops *)(dev)->driver->ops)#define VIRTIO_F_SR_IOV 37#define VIRTIO_F_IOMMU_PLATFORM 33#define VIRTIO_F_VERSION_1 32#define VIRTIO_F_ANY_LAYOUT 27#define VIRTIO_F_NOTIFY_ON_EMPTY 24#define VIRTIO_TRANSPORT_F_END 38#define VIRTIO_TRANSPORT_F_START 28#define VIRTIO_CONFIG_S_FAILED 0x80#define VIRTIO_CONFIG_S_NEEDS_RESET 0x40#define VIRTIO_CONFIG_S_FEATURES_OK 8#define VIRTIO_CONFIG_S_DRIVER_OK 4#define VIRTIO_CONFIG_S_DRIVER 2#define VIRTIO_CONFIG_S_ACKNOWLEDGE 1#define VIRTIO_BLK_DRV_NAME "virtio-blk"#define VIRTIO_NET_DRV_NAME "virtio-net"#define VIRTIO_ID_MAX_NUM 3#define VIRTIO_ID_BLOCK 2#define VIRTIO_ID_NET 1#define __VIRTIO_H__#define W1_FAMILY_EEP_SANDBOX 0xfe#define W1_FAMILY_DS2502 0x09#define W1_FAMILY_DS2431 0x2d#define W1_FAMILY_DS24B33 0x23#define __W1_H#define __W1_EEPROM_H#define BZ_EXTERN extern#define BZ_API(func) func#define BZ_EXPORT#define BZ_CONFIG_ERROR (-9)#define BZ_OUTBUFF_FULL (-8)#define BZ_UNEXPECTED_EOF (-7)#define BZ_IO_ERROR (-6)#define BZ_DATA_ERROR_MAGIC (-5)#define BZ_DATA_ERROR (-4)#define BZ_MEM_ERROR (-3)#define BZ_PARAM_ERROR (-2)#define BZ_SEQUENCE_ERROR (-1)#define BZ_STREAM_END 4#define BZ_FINISH_OK 3#define BZ_FLUSH_OK 2#define BZ_RUN_OK 1#define BZ_OK 0#define BZ_FINISH 2#define BZ_FLUSH 1#define BZ_RUN 0#define BZ_NO_STDIO#define _BZLIB_H#define CONFIG_SYS_XIMG_LEN 0x800000#define CHUNKSZ (64 * 1024)#define CONFIG_GZIP 1#define CONFIG_BZIP2#define BOOT_CTRL_VERSION 1#define BOOT_CTRL_MAGIC 0x42414342#define __ANDROID_BOOTLOADER_MESSAGE_H#define log_err(_fmt...) log(LOG_CATEGORY, LOGL_ERR, ## _fmt)#define ENODATA 61#define log_debug(_fmt...) log(LOG_CATEGORY, LOGL_DEBUG, ## _fmt)#define _POST_H#define CONFIG_BOOTDELAY 2#define debug_bootkeys(fmt,args...) debug_cond(DEBUG_BOOTKEYS, fmt, ## args)#define DEBUG_BOOTKEYS 0#define MAX_DELAY_STOP_STR 32#define TEE_UUID_LEN 16#define TEE_ORIGIN_TRUSTED_APP 0x00000004#define TEE_ORIGIN_TEE 0x00000003#define TEE_ORIGIN_COMMS 0x00000002#define TEE_ERROR_STORAGE_NO_SPACE 0xffff3041#define TEE_ERROR_TARGET_DEAD 0xffff3024#define TEE_ERROR_OVERFLOW 0xffff300f#define TEE_ERROR_OUT_OF_MEMORY 0xffff000c#define TEE_ERROR_SECURITY 0xffff000f#define TEE_ERROR_COMMUNICATION 0xffff000e#define TEE_ERROR_NOT_SUPPORTED 0xffff000a#define TEE_ERROR_NOT_IMPLEMENTED 0xffff0009#define TEE_ERROR_ITEM_NOT_FOUND 0xffff0008#define TEE_ERROR_BAD_PARAMETERS 0xffff0006#define TEE_ERROR_GENERIC 0xffff0000#define TEE_ERROR_STORAGE_NOT_AVAILABLE 0xf0100003#define TEE_SUCCESS 0x00000000#define TEE_PARAM_ATTR_MASK (TEE_PARAM_ATTR_TYPE_MASK | TEE_PARAM_ATTR_META)#define TEE_PARAM_ATTR_META 0x100#define TEE_PARAM_ATTR_TYPE_MASK 0xff#define TEE_PARAM_ATTR_TYPE_MEMREF_INOUT 7#define TEE_PARAM_ATTR_TYPE_MEMREF_OUTPUT 6#define TEE_PARAM_ATTR_TYPE_MEMREF_INPUT 5#define TEE_PARAM_ATTR_TYPE_VALUE_INOUT 3#define TEE_PARAM_ATTR_TYPE_VALUE_OUTPUT 2#define TEE_PARAM_ATTR_TYPE_VALUE_INPUT 1#define TEE_PARAM_ATTR_TYPE_NONE 0#define TEE_SHM_ALLOC BIT(2)#define TEE_SHM_SEC_REGISTER BIT(1)#define TEE_SHM_REGISTER BIT(0)#define TEE_GEN_CAP_REG_MEM BIT(1)#define TEE_GEN_CAP_GP BIT(0)#define __TEE_H#define TA_AVB_CMD_WRITE_PERSIST_VALUE 5#define TA_AVB_CMD_READ_PERSIST_VALUE 4#define TA_AVB_CMD_WRITE_LOCK_STATE 3#define TA_AVB_CMD_READ_LOCK_STATE 2#define TA_AVB_CMD_WRITE_ROLLBACK_INDEX 1#define TA_AVB_CMD_READ_ROLLBACK_INDEX 0#define TA_AVB_MAX_ROLLBACK_LOCATIONS 256#define TA_AVB_UUID { 0x023f8f1a, 0x292a, 0x432b, { 0x8f, 0xc4, 0xde, 0x84, 0x71, 0x35, 0x80, 0x67 } }#define __TA_AVB_H#define CONFIG_BLOBLIST_ADDR 0xe000#define CONFIG_BLOBLIST_SIZE 0x400#define log_msg_ret(_msg,_ret) ({ int __ret = (_ret); if (__ret < 0) log(LOG_CATEGORY, LOGL_ERR, "%s: returning err=%d\n", _msg, __ret); __ret; })#define EPROTONOSUPPORT 93#define EFBIG 27#define log_ret(_ret) ({ int __ret = (_ret); if (__ret < 0) log(LOG_CATEGORY, LOGL_ERR, "returning err=%d\n", __ret); __ret; })#define foreach_rec(_rec,_hdr) for (_rec = bloblist_first_blob(_hdr); _rec; _rec = bloblist_next_blob(_hdr, _rec))#define ESPIPE 29#define __BLOBLIST_H#define __INITCALL_H#define _RELOCATE_H_#define _STATUS_LED_H_#define _TIMER_H_#define TRACE_CALL_TYPE(call) ((call)->flags & 0xc0000000UL)#define __TRACE_H#define CONFIG_TIMER_EARLY 1#define CONFIG_BOOTSTAGE_STASH 1#define CONFIG_SYS_MALLOC_LEN (32 << 20)#define CONFIG_SYS_SDRAM_BASE 0#define CONFIG_BAUDRATE 115200#define CONFIG_SYSRESET 1#define CONFIG_DISPLAY_BOARDINFO 1#define CONFIG_MISC_INIT_F#define CONFIG_CPU 1#define __API_H#define _OF_LIVE_H#define __UBOOT_ONENAND_H#define serial_get_ops(dev) ((struct dm_serial_ops *)(dev)->driver->ops)#define SERIAL_DEFAULT_ADDRESS 0xBADACCE5#define SERIAL_DEFAULT_CONFIG (SERIAL_PAR_NONE << SERIAL_PAR_SHIFT | SERIAL_8_BITS << SERIAL_BITS_SHIFT | SERIAL_ONE_STOP << SERIAL_STOP_SHIFT)#define SERIAL_CONFIG(par,bits,stop) (par << SERIAL_PAR_SHIFT | bits << SERIAL_BITS_SHIFT | stop << SERIAL_STOP_SHIFT)#define SERIAL_GET_STOP(config) ((config & SERIAL_STOP_MASK) >> SERIAL_STOP_SHIFT)#define SERIAL_SET_STOP(stop) ((stop << SERIAL_STOP_SHIFT) & SERIAL_STOP_MASK)#define SERIAL_STOP_MASK (0x3 << SERIAL_STOP_SHIFT)#define SERIAL_STOP_SHIFT 4#define SERIAL_GET_BITS(config) ((config & SERIAL_BITS_MASK) >> SERIAL_BITS_SHIFT)#define SERIAL_SET_BITS(bits) ((bits << SERIAL_BITS_SHIFT) & SERIAL_BITS_MASK)#define SERIAL_BITS_MASK (0x3 << SERIAL_BITS_SHIFT)#define SERIAL_BITS_SHIFT 2#define SERIAL_GET_PARITY(config) ((config & SERIAL_PAR_MASK) >> SERIAL_PAR_SHIFT)#define SERIAL_SET_PARITY(parity) ((parity << SERIAL_PAR_SHIFT) & SERIAL_PAR_MASK)#define SERIAL_PAR_MASK (0x03 << SERIAL_PAR_SHIFT)#define SERIAL_PAR_SHIFT 0#define usbtty_tstc() 0#define usbtty_puts(a)#define usbtty_putc(a)#define usbtty_getc() 0#define __SERIAL_H__#define WATCHDOG_TIMEOUT_SECS (CONFIG_WATCHDOG_TIMEOUT_MSECS / 1000)#define CONFIG_WATCHDOG_TIMEOUT_MSECS (60 * 1000)#define _WDT_H_#define CONFIG_MMC 1#define CONFIG_DISPLAY_BOARDINFO_LATE 1#define CONFIG_SCSI 1#define CONFIG_IDE 1#define IH_ARCH_DEFAULT IH_ARCH_SANDBOX#define IMAGE_ENABLE_FIT CONFIG_IS_ENABLED(FIT)#define IMAGE_ENABLE_OF_LIBFDT CONFIG_IS_ENABLED(OF_LIBFDT)#define CONFIG_LMB#define CONSOLE_ARG "console="#define CONSOLE_ARG_LEN (sizeof(CONSOLE_ARG) - 1)#define ALIGN_DOWN(x,a) ALIGN((x) - ((a) - 1), (a))#define CONFIG_SYS_BOOTM_LEN 0x800000#define IH_INITRD_ARCH IH_ARCH_DEFAULT#define CONFIG_CMD_FDT 1#define EFI_GOP_INFO_MAGIC 0xfeedface#define EFI_GOP_INFO_OFFSET 0x6100#define BOOT_IMAGE_SIZE_OFFSET 0x5004#define E820_SIGNATURE 0x534d4150#define E820_INFO_OFFSET 0x4a00#define E820_DATA_OFFSET 0x4000#define X86_BOOT_LINE_OFFSET 0x1200#define VXWORKS_PHYS_MEM_BASE 0x100000#define _VXWORKS_H_#define OPTEE_ARCH_ARM64 1#define OPTEE_ARCH_ARM32 0#define OPTEE_VERSION 1#define OPTEE_MAGIC 0x4554504f#define _OPTEE_H#define fit_unsupported_reset(msg) printf("! %s:%d " "FIT images not supported for '%s' " "- must reset board to recover!\n", __FILE__, __LINE__, (msg))#define CONFIG_BOOTM_LINUX 1#define CONFIG_BOOTM_NETBSD 1#define CONFIG_BOOTM_RTEMS 1#define CONFIG_BOOTM_PLAN9 1#define CONFIG_BOOTM_VXWORKS 1#define CONFIG_BOOTSTAGE_RECORD_COUNT 30#define CONFIG_HUSH_PARSER 1#define CMD_FLAG_ENV 0x0004#define FLAG_PARSE_SEMICOLON (1 << 1)#define FLAG_EXIT_FROM_LOOP 1#define FLAG_CONT_ON_NEWLINE (1 << 3)#define _LINUX_STDDEF_H#define FLAG_REPARSING (1 << 2)#define _CLI_HUSH_H_#define SPECIAL_VAR_SYMBOL 03#define SUBSTED_VAR_SYMBOL 04#define __U_BOOT__#define NULL_O_STRING {NULL,0,0,0,0}#define b_peek(input) ((input)->peek(input))#define syntax() syntax_err()#define b_getch(input) ((input)->get(input))#define EOF -1#define NRES (sizeof(reserved_list)/sizeof(struct reserved_combo))#define FLAG_START (1<<RES_XXXX)#define FLAG_END (1<<RES_NONE)#define error_msg printf#define final_printf debug_printf#define xstrdup strdup#define CONFIG_SYS_PROMPT "=> "#define CONFIG_SYS_PROMPT_HUSH_PS2 "> "#define B_NOSPAC 1#define B_CHUNK (100)#define FLAG_THEN (1<<RES_THEN)#define FLAG_ELIF (1<<RES_ELIF)#define FLAG_ELSE (1<<RES_ELSE)#define FLAG_FI (1<<RES_FI)#define FLAG_IN (1<<RES_IN)#define FLAG_DO (1<<RES_DO)#define FLAG_DONE (1<<RES_DONE)#define FLAG_UNTIL (1<<RES_UNTIL)#define FLAG_WHILE (1<<RES_WHILE)#define FLAG_FOR (1<<RES_FOR)#define FLAG_IF (1<<RES_IF)#define CONFIG_CMDLINE_EDITING 1#define getcmd_getch() getc()#define CTL_CH(c) ((c) - 'a' + 1)#define BEGINNING_OF_LINE() { while (num) { getcmd_putch(CTL_BACKSPACE); num--; } }#define getcmd_putch(ch) putc(ch)#define CTL_BACKSPACE ('\b')#define putnstr(str,n) printf("%.*s", (int)n, str)#define ERASE_TO_EOL() { if (num < eol_num) { printf("%*s", (int)(eol_num - num), ""); do { getcmd_putch(CTL_BACKSPACE); } while (--eol_num > num); } }#define REFRESH_TO_EOL() { if (num < eol_num) { wlen = eol_num - num; putnstr(buf + num, wlen); num = eol_num; } }#define DEL ((char)255)#define DEL7 ((char)127)#define getcmd_cbeep() getcmd_putch('\a')#define CREAD_HIST_CHAR ('!')#define HIST_MAX 20#define HIST_SIZE CONFIG_SYS_CBSIZE#define add_idx_minus_one() ((hist_add_idx == 0) ? hist_max : hist_add_idx-1)#define debug_parser(fmt,args...) debug_cond(DEBUG_PARSER, fmt, ## args)#define DEBUG_PARSER 0#define CMD_FLAG_BOOTD 0x0002#define CONFIG_SYS_XTRACE "y"#define CONFIG_SYS_HELP_CMD_WIDTH 10#define CMD_DATA_SIZE#define DEBUG_UART_FUNCS static inline void _printch(int ch) { if (ch == '\n') _debug_uart_putc('\r'); _debug_uart_putc(ch); } void printch(int ch) { _printch(ch); } void printascii(const char *str) { while (*str) _printch(*str++); } static inline void printhex1(uint digit) { digit &= 0xf; _debug_uart_putc(digit > 9 ? digit - 10 + 'a' : digit + '0'); } static inline void printhex(uint value, int digits) { while (digits-- > 0) printhex1(value >> (4 * digits)); } void printhex2(uint value) { printhex(value, 2); } void printhex4(uint value) { printhex(value, 4); } void printhex8(uint value) { printhex(value, 8); } void printdec(uint value) { if (value > 10) { printdec(value / 10); value %= 10; } else if (value == 10) { _debug_uart_putc('1'); value = 0; } _debug_uart_putc('0' + value); } void debug_uart_init(void) { board_debug_uart_init(); _debug_uart_init(); _DEBUG_UART_ANNOUNCE }#define serial_din(reg) serial_in_shift((char *)com_port + ((char *)reg - (char *)com_port) * (1 << CONFIG_DEBUG_UART_SHIFT), CONFIG_DEBUG_UART_SHIFT)#define serial_dout(reg,value) serial_out_shift((char *)com_port + ((char *)reg - (char *)com_port) * (1 << CONFIG_DEBUG_UART_SHIFT), CONFIG_DEBUG_UART_SHIFT, value)#define _DEBUG_UART_ANNOUNCE#define _DEBUG_UART_H#define OVERWRITE_CONSOLE 0#define stdout 1#define stderr 2#define PRE_CONSOLE_FLUSHPOINT2_EVERYTHING_BUT_SERIAL 1#define PRE_CONSOLE_FLUSHPOINT1_SERIAL 0#define CONFIG_CONSOLE_RECORD_OUT_SIZE 0x1000#define CONFIG_CONSOLE_RECORD_IN_SIZE 0x100#define CONFIG_DEBUG_UART 1#define CONFIG_PRE_CON_BUF_SZ 4096#define CONFIG_PRE_CON_BUF_ADDR 0xf0000#define CIRC_BUF_IDX(idx) ((idx) % (unsigned long)CONFIG_PRE_CON_BUF_SZ)#define CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)#define va_start(v,l) __builtin_va_start(v,l)#define va_end(v) __builtin_va_end(v)#define CONFIG_DM_SERIAL 1#define CONFIG_SILENT_CONSOLE_UPDATE_ON_SET 1#define CONFIG_SYS_CONSOLE_IS_IN_ENV 1#define sbrked_mem (current_mallinfo.arena)#define chunksize(p) ((p)->size & ~(SIZE_BITS))#define top (av_[2])#define SIZE_BITS (PREV_INUSE|IS_MMAPPED)#define PREV_INUSE 0x1#define IS_MMAPPED 0x2#define MINSIZE (sizeof(struct malloc_chunk))#define NAV 128#define bin_at(i) ((mbinptr)((char*)&(av_[2*(i) + 2]) - 2*SIZE_SZ))#define SIZE_SZ (sizeof(INTERNAL_SIZE_T))#define check_free_chunk(P) do_check_free_chunk(P)#define inuse(p) ((((mchunkptr)(((char*)(p))+((p)->size & ~PREV_INUSE)))->size) & PREV_INUSE)#define check_inuse_chunk(P) do_check_inuse_chunk(P)#define next_chunk(p) ((mchunkptr)( ((char*)(p)) + ((p)->size & ~PREV_INUSE) ))#define DEBUG#define last(b) ((b)->bk)#define mem2chunk(mem) ((mchunkptr)((char*)(mem) - 2*SIZE_SZ))#define chunk_is_mmapped(p) ((p)->size & IS_MMAPPED)#define set_head(p,s) ((p)->size = (s))#define check_chunk(P) do_check_chunk(P)#define CONFIG_SYS_MALLOC_CLEAR_ON_INIT 1#define MALLOC_ALIGNMENT (SIZE_SZ + SIZE_SZ)#define request2size(req) (((long)((req) + (SIZE_SZ + MALLOC_ALIGN_MASK)) < (long)(MINSIZE + MALLOC_ALIGN_MASK)) ? MINSIZE : (((req) + (SIZE_SZ + MALLOC_ALIGN_MASK)) & ~(MALLOC_ALIGN_MASK)))#define MALLOC_ALIGN_MASK (MALLOC_ALIGNMENT - 1)#define set_inuse_bit_at_offset(p,s) (((mchunkptr)(((char*)(p)) + (s)))->size |= PREV_INUSE)#define set_head_size(p,s) ((p)->size = (((p)->size & PREV_INUSE) | (s)))#define chunk2mem(p) ((Void_t*)((char*)(p) + 2*SIZE_SZ))#define chunk_at_offset(p,s) ((mchunkptr)(((char*)(p)) + (s)))#define unlink(P,BK,FD) { BK = P->bk; FD = P->fd; FD->bk = BK; BK->fd = FD; }#define prev_inuse(p) ((p)->size & PREV_INUSE)#define prev_chunk(p) ((mchunkptr)( ((char*)(p)) - ((p)->prev_size) ))#define last_remainder (bin_at(1))#define inuse_bit_at_offset(p,s) (((mchunkptr)(((char*)(p)) + (s)))->size & PREV_INUSE)#define link_last_remainder(P) { last_remainder->fd = last_remainder->bk = P; P->fd = P->bk = last_remainder; }#define set_foot(p,s) (((mchunkptr)((char*)(p) + (s)))->prev_size = (s))#define frontlink(P,S,IDX,BK,FD) { if (S < MAX_SMALLBIN_SIZE) { IDX = smallbin_index(S); mark_binblock(IDX); BK = bin_at(IDX); FD = BK->fd; P->bk = BK; P->fd = FD; FD->bk = BK->fd = P; } else { IDX = bin_index(S); BK = bin_at(IDX); FD = BK->fd; if (FD == BK) mark_binblock(IDX); else { while (FD != BK && S < chunksize(FD)) FD = FD->fd; BK = FD->bk; } P->bk = BK; P->fd = FD; FD->bk = BK->fd = P; } }#define MAX_SMALLBIN_SIZE 512#define smallbin_index(sz) (((unsigned long)(sz)) >> 3)#define binblocks_w (av_[1])#define mark_binblock(ii) (binblocks_w = (mbinptr)(binblocks_r | idx2binblock(ii)))#define binblocks_r ((INTERNAL_SIZE_T)av_[1])#define idx2binblock(ix) ((unsigned)1 << (ix / BINBLOCKWIDTH))#define BINBLOCKWIDTH 4#define bin_index(sz) (((((unsigned long)(sz)) >> 9) == 0) ? (((unsigned long)(sz)) >> 3): ((((unsigned long)(sz)) >> 9) <= 4) ? 56 + (((unsigned long)(sz)) >> 6): ((((unsigned long)(sz)) >> 9) <= 20) ? 91 + (((unsigned long)(sz)) >> 9): ((((unsigned long)(sz)) >> 9) <= 84) ? 110 + (((unsigned long)(sz)) >> 12): ((((unsigned long)(sz)) >> 9) <= 340) ? 119 + (((unsigned long)(sz)) >> 15): ((((unsigned long)(sz)) >> 9) <= 1364) ? 124 + (((unsigned long)(sz)) >> 18): 126)#define is_small_request(nb) (nb < MAX_SMALLBIN_SIZE - SMALLBIN_WIDTH)#define SMALLBIN_WIDTH 8#define next_bin(b) ((mbinptr)((char*)(b) + 2 * sizeof(mbinptr)))#define check_malloced_chunk(P,N) do_check_malloced_chunk(P,N)#define clear_last_remainder (last_remainder->fd = last_remainder->bk = last_remainder)#define first(b) ((b)->fd)#define prev_bin(b) ((mbinptr)((char*)(b) - 2 * sizeof(mbinptr)))#define initial_top ((mchunkptr)(bin_at(0)))#define aligned_OK(m) (((unsigned long)((m)) & (MALLOC_ALIGN_MASK)) == 0)#define IAV(i) bin_at(i), bin_at(i)#define clear_binblock(ii) (binblocks_w = (mbinptr)(binblocks_r & ~(idx2binblock(ii))))#define MAX_SMALLBIN 63#define clear_inuse_bit_at_offset(p,s) (((mchunkptr)(((char*)(p)) + (s)))->size &= ~(PREV_INUSE))#define clear_inuse(p) ((mchunkptr)(((char*)(p)) + ((p)->size & ~PREV_INUSE)))->size &= ~(PREV_INUSE)#define set_inuse(p) ((mchunkptr)(((char*)(p)) + ((p)->size & ~PREV_INUSE)))->size |= PREV_INUSE#define CONFIG_UNIT_TEST 1#define EXPORT_FUNC(f,a,x,__VA_ARGS__...) gd->jt->x = f;#define miiphy_set_current_dev dummy#define mdio_phydev_for_ethname dummy#define phy_find_by_mask dummy#define mdio_get_current_dev dummy#define FDT_ERR_NOSPACE 3#define fdt64_to_cpu(x) be64_to_cpu(x)#define OF_BAD_ADDR FDT_ADDR_T_NONE#define OF_MAX_ADDR_CELLS 4#define OF_CHECK_COUNTS(na,ns) ((na) > 0 && (na) <= OF_MAX_ADDR_CELLS && (ns) > 0)#define be32_to_cpup __be32_to_cpup#define CONFIG_SYS_PCI_NR_INBOUND_WIN 4#define FDT_PCI_MEM64 (0x03000000)#define FDT_PCI_MEM32 (0x02000000)#define FDT_PCI_PREFETCH (0x40000000)#define MEMORY_BANKS_MAX 4#define cpu_to_fdt64(x) cpu_to_be64(x)#define FDT_PCI_IO (0x01000000)#define CONFIG_ARCH_FIXUP_FDT_MEMORY 1#define __HW_SHA_H#define multi_hash() 1#define HASH_MAX_DIGEST_SIZE 32#define CHUNKSZ_CRC32 (64 * 1024)#define CONFIG_SHA1 1#define SHA1_SUM_LEN 20#define CHUNKSZ_SHA1 (64 * 1024)#define CONFIG_SHA256 1#define SHA256_SUM_LEN 32#define CHUNKSZ_SHA256 (64 * 1024)#define CONFIG_CMD_HASH 1#define IH_MAGIC 0x27051956#define IH_NMLEN 32#define image_set_hdr_b(f) static inline void image_set_ ## f(image_header_t *hdr, uint8_t val) { hdr->ih_ ## f = val; }#define image_set_hdr_l(f) static inline void image_set_ ## f(image_header_t *hdr, uint32_t val) { hdr->ih_ ## f = cpu_to_uimage(val); }#define cpu_to_uimage(x) cpu_to_be32(x)#define image_get_hdr_b(f) static inline uint8_t image_get_ ## f(const image_header_t *hdr) { return hdr->ih_ ## f; }#define image_get_hdr_l(f) static inline uint32_t image_get_ ## f(const image_header_t *hdr) { return uimage_to_cpu(hdr->ih_ ## f); }#define uimage_to_cpu(x) be32_to_cpu(x)#define U_BOOT_FIT_LOADABLE_HANDLER(_type,_handler) ll_entry_declare(struct fit_loadable_tbl, _function, fit_loadable) = { .type = _type, .handler = _handler, }#define FDT_ERROR ((ulong)(-1))#define fit_unsupported(msg) printf("! %s:%d " "FIT images not supported for '%s'\n", __FILE__, __LINE__, (msg))#define IMAGE_ENABLE_BEST_MATCH 0#define gd_fdt_blob() (gd->fdt_blob)#define IMAGE_ENABLE_VERIFY CONFIG_IS_ENABLED(FIT_SIGNATURE)#define IMAGE_ENABLE_SIGN 0#define FIT_MAX_HASH_LEN HASH_MAX_DIGEST_SIZE#define FIT_STANDALONE_PROP "standalone"#define FIT_FIRMWARE_PROP "firmware"#define FIT_FPGA_PROP "fpga"#define FIT_SETUP_PROP "setup"#define FIT_LOADABLE_PROP "loadables"#define FIT_FDT_PROP "fdt"#define FIT_RAMDISK_PROP "ramdisk"#define FIT_KERNEL_PROP "kernel"#define FIT_LOAD_PROP "load"#define FIT_ENTRY_PROP "entry"#define FIT_COMP_PROP "compression"#define FIT_OS_PROP "os"#define FIT_TYPE_PROP "type"#define FIT_ARCH_PROP "arch"#define FIT_DESC_PROP "description"#define FIT_TIMESTAMP_PROP "timestamp"#define FIT_DATA_SIZE_PROP "data-size"#define FIT_DATA_OFFSET_PROP "data-offset"#define FIT_DATA_POSITION_PROP "data-position"#define FIT_DATA_PROP "data"#define FIT_SIG_NODENAME "signature"#define FIT_IGNORE_PROP "uboot-ignore"#define FIT_VALUE_PROP "value"#define FIT_ALGO_PROP "algo"#define FIT_HASH_NODENAME "hash"#define FIT_CONFS_PATH "/configurations"#define IMAGE_ENABLE_TIMESTAMP 1#define BOOTM_STATE_RAMDISK (0x00000010)#define LZ4F_MAGIC 0x184D2204#define IMAGE_OF_SYSTEM_SETUP 0#define IMAGE_OF_BOARD_SETUP 0#define IMAGE_BOOT_GET_CMDLINE 0#define IMAGE_ENABLE_SHA256 1#define IMAGE_ENABLE_SHA1 1#define IMAGE_ENABLE_MD5 1#define IMAGE_ENABLE_CRC32 1#define IMAGE_INDENT_STRING "   "#define IMAGE_ENABLE_IGNORE 1#define __IMAGE_H__#define CONFIG_CMD_DATE 1#define CONFIG_TIMESTAMP#define CONFIG_FIT_VERBOSE 1#define CONFIG_FIT_ENABLE_SHA256_SUPPORT 1#define ANDR_BOOT_EXTRA_ARGS_SIZE 1024#define ANDR_BOOT_ARGS_SIZE 512#define ANDR_BOOT_NAME_SIZE 16#define ANDR_BOOT_MAGIC_SIZE 8#define ANDR_BOOT_MAGIC "ANDROID!"#define _ANDROID_IMAGE_H_#define ANDROID_IMAGE_DEFAULT_KERNEL_ADDR 0x10008000#define FDT_RAMDISK_OVERHEAD 0x80#define CONFIG_SYS_FDT_PAD 0x3000#define EBADF 9#define EXDEV 18#define fdt_for_each_subnode(node,fdt,parent) for (node = fdt_first_subnode(fdt, parent); node >= 0; node = fdt_next_subnode(fdt, node))#define FDT_ERR_TRUNCATED 8#define FDT_ERR_BADSTRUCTURE 11#define RSA_MAX_SIG_BITS 4096#define RSA_MAX_KEY_BITS 4096#define RSA_MIN_KEY_BITS 2048#define RSA4096_BYTES (4096 / 8)#define RSA2048_BYTES (2048 / 8)#define RSA_DEFAULT_PADDING_NAME "pkcs-1.5"#define _RSA_H#define CONFIG_FIT_ENABLE_RSASSA_PSS_SUPPORT 1#define IMAGE_MAX_HASHED_NODES 100#define CONFIG_FIT_SIGNATURE_MAX_SIZE 0x10000000#define SHA1_DER_LEN 15#define SHA256_DER_LEN 19#define FPGA_NO_ENC_OR_NO_AUTH 2#define FPGA_ENC_USR_KEY 1#define FPGA_INVALID_DEVICE -1#define FPGA_FAIL -1#define FPGA_SUCCESS 0#define CONFIG_MAX_FPGA_DEVICES 5#define _FPGA_H_#define _XILINX_H_#define LZO_E_NOT_YET_IMPLEMENTED (-9)#define LZO_E_INPUT_NOT_CONSUMED (-8)#define LZO_E_EOF_NOT_FOUND (-7)#define LZO_E_LOOKBEHIND_OVERRUN (-6)#define LZO_E_OUTPUT_OVERRUN (-5)#define LZO_E_INPUT_OVERRUN (-4)#define LZO_E_NOT_COMPRESSIBLE (-3)#define LZO_E_OUT_OF_MEMORY (-2)#define LZO_E_ERROR (-1)#define LZO_E_OK 0#define lzo1x_worst_compress(x) ((x) + ((x) / 16) + 64 + 3)#define LZO1X_1_MEM_COMPRESS LZO1X_MEM_COMPRESS#define LZO1X_MEM_COMPRESS (16384 * sizeof(unsigned char *))#define __LZO_H__#define LZMA_REQUIRED_INPUT_MAX 20#define CLzmaProb UInt16#define LzmaDec_Construct(p) { (p)->dic = 0; (p)->probs = 0; }#define LZMA_PROPS_SIZE 5#define __LZMA_DEC_H#define __LZMADEC_H__FAKE__#define CONFIG_SUPPORT_RAW_INITRD 1#define CONFIG_LZMA 1#define CONFIG_LZO 1#define CONFIG_LZ4 1#define CONFIG_SYS_BARGSIZE 512#define CONFIG_CMD_BDI 1#define roundup(x,y) ( { const typeof(y) __y = y; (((x) + (__y - 1)) / __y) * __y; } )#define rounddown(x,y) ( { typeof(x) __x = (x); __x - (__x % (y)); } )#define IOTRACE_IMPL#define WARN_ONCE(condition,format...) ({ static bool __warned; int __ret_warn_once = !!(condition); if (unlikely(__ret_warn_once && !__warned)) { __warned = true; WARN(1, format); } unlikely(__ret_warn_once); })#define WARN(condition,format...) ({ int __ret_warn_on = !!(condition); if (unlikely(__ret_warn_on)) printf(format); unlikely(__ret_warn_on); })#define CONFIG_LOG_DEFAULT_LEVEL 6#define LOG_DRIVER(_name) ll_entry_declare(struct log_driver, _name, log_driver)#define __AUTOBOOT_H#define CONFIG_AUTOBOOT 1#define warn_non_spl(fmt,args...) debug_cond(!_SPL_BUILD, fmt, ## args)#define _SPL_BUILD 0#define log_io(_fmt...) log(LOG_CATEGORY, LOGL_DEBUG_IO, ## _fmt)#define log_content(_fmt...) log(LOG_CATEGORY, LOGL_DEBUG_CONTENT, ## _fmt)#define log_info(_fmt...) log(LOG_CATEGORY, LOGL_INFO, ## _fmt)#define log_notice(_fmt...) log(LOG_CATEGORY, LOGL_NOTICE, ## _fmt)#define log_warning(_fmt...) log(LOG_CATEGORY, LOGL_WARNING, ## _fmt)#define __LOG_H#define CONFIG_LOG_ERROR_RETURN 1#define LOG_CATEGORY LOGC_ALLOC#define PKTBUFSRX 4#define VLAN_IDMASK 0x0fff#define VLAN_NONE 4095#define RINGSZ_LOG2 2#define RINGSZ 4#define PKTSIZE_ALIGN 1536#define PKTSIZE 1522#define IP_ICMP_HDR_SIZE (IP_HDR_SIZE + ICMP_HDR_SIZE)#define ICMP_HDR_SIZE (sizeof(struct icmp_hdr))#define ICMP_NOT_REACH_PORT 3#define ICMP_REDIR_HOST 1#define ICMP_REDIR_NET 0#define ICMP_ECHO_REQUEST 8#define ICMP_REDIRECT 5#define ICMP_NOT_REACH 3#define ICMP_ECHO_REPLY 0#define ARP_HDR_SIZE (8+20)#define ar_tpa ar_data[ARP_HLEN + ARP_PLEN + ARP_HLEN]#define ar_tha ar_data[ARP_HLEN + ARP_PLEN]#define ar_spa ar_data[ARP_HLEN]#define ar_sha ar_data[0]#define RARPOP_REPLY 4#define RARPOP_REQUEST 3#define ARPOP_REPLY 2#define ARPOP_REQUEST 1#define ARP_PLEN 4#define ARP_ETHER 1#define UDP_HDR_SIZE (IP_UDP_HDR_SIZE - IP_HDR_SIZE)#define IP_UDP_HDR_SIZE (sizeof(struct ip_udp_hdr))#define IP_HDR_SIZE (sizeof(struct ip_hdr))#define IP_FLAGS_MFRAG 0x2000#define IP_FLAGS_DFRAG 0x4000#define IP_FLAGS_RES 0x8000#define IP_FLAGS 0xe000#define IP_OFFS 0x1fff#define IPPROTO_UDP 17#define IPPROTO_ICMP 1#define PROT_PPP_SES 0x8864#define PROT_IPV6 0x86dd#define PROT_VLAN 0x8100#define PROT_RARP 0x8035#define PROT_WOL 0x0842#define PROT_ARP 0x0806#define PROT_IP 0x0800#define VLAN_ETHER_HDR_SIZE (sizeof(struct vlan_ethernet_hdr))#define E802_HDR_SIZE (sizeof(struct e802_hdr))#define ETHER_HDR_SIZE (sizeof(struct ethernet_hdr))#define eth_get_ops(dev) ((struct eth_ops *)(dev)->driver->ops)#define PKTALIGN ARCH_DMA_MINALIGN#define DEBUG_INT_STATE 0#define DEBUG_NET_PKT 0#define DEBUG_DEV_PKT 0#define DEBUG_LL_STATE 0#define __NET_H__#define __always_inline inline __attribute__((always_inline))#define sync()#define EINTR 4#define debug(fmt,args...)#define CONFIG_PHYLIB 1#define CONFIG_DM_KEYBOARD 1#define CONFIG_SYS_DEVICE_NULLDEV 1#define __le16_to_cpus(x) do { (void)(x); } while (0)#define le16_to_cpus __le16_to_cpus#define USB_BUFSIZ 512#define noinline __attribute__((noinline))#define PORT_OVERCURRENT_MAX_SCAN_COUNT 3#define ENOTCONN 107#define HUB_SHORT_RESET_TIME 20#define MAX_TRIES 5#define HUB_LONG_RESET_TIME 200#define llsym(_type,_name,_list) ((_type *)&_u_boot_list_2_ ## _list ## _2_ ## _name)#define DEVNAME "usbkbd"#define ENOLINK 67#define USB_KBD_BOOT_REPORT_SIZE 8#define min(x,y) ({ typeof(x) _min1 = (x); typeof(y) _min2 = (y); (void) (&_min1 == &_min2); _min1 < _min2 ? _min1 : _min2; })#define REPEAT_RATE 40#define USB_KBD_BUFFER_LEN 0x20#define CONFIG_SYS_USB_EVENT_POLL 1#define USB_KBD_CTRL (1 << 3)#define LEFT_CNTR (1 << 0)#define RIGHT_CNTR (1 << 4)#define REPEAT_DELAY 10#define USB_KBD_CAPSLOCK (1 << 1)#define CAPITAL_MASK 0x20#define LEFT_SHIFT (1 << 1)#define RIGHT_SHIFT (1 << 5)#define NUM_LOCK 0x53#define USB_KBD_NUMLOCK (1 << 0)#define CAPS_LOCK 0x39#define SCROLL_LOCK 0x47#define USB_KBD_SCROLLLOCK (1 << 2)#define USB_KBD_LEDMASK (USB_KBD_NUMLOCK | USB_KBD_CAPSLOCK | USB_KBD_SCROLLLOCK)#define RIGHT_GUI (1 << 7)#define RIGHT_ALT (1 << 6)#define LEFT_GUI (1 << 3)#define LEFT_ALT (1 << 2)#define USB_READY (1 << 0)#define LOG2(x) (((x & 0xaaaaaaaa) ? 1 : 0) + ((x & 0xcccccccc) ? 2 : 0) + ((x & 0xf0f0f0f0) ? 4 : 0) + ((x & 0xff00ff00) ? 8 : 0) + ((x & 0xffff0000) ? 16 : 0))#define USB_STOR_TRANSPORT_GOOD 0#define USHRT_MAX ((u16)(~0U))#define USB_STOR_TRANSPORT_ERROR -2#define USB_TRANSPORT_NOT_READY_RETRY 10#define USB_STOR_TRANSPORT_FAILED -1#define USB_TRANSPORT_UNKNOWN_RETRY 5#define US_DIRECTION(x) ((us_direction[x>>3] >> (x & 7)) & 1)#define CAN 0x18#define BSP 0x08#define ZM_DEBUG(x)#define xyzModem_MAX_RETRIES 20#define EOF 0x1A#define ACK 0x06#define NAK 0x15#define xyzModem_MAX_RETRIES_WITH_CRC 10#define SOH 0x01#define STX 0x02#define xyzModem_CAN_COUNT 3#define EOT 0x04#define xyzModem_CHAR_TIMEOUT 2000#define __inline__ __inline__ __attribute__((always_inline)) notrace#define __UBIFS_UBOOT_H__#define PART_TYPE_ALL -1#define BOOT_PART_TYPE "U-Boot"#define PART_UNSPECIFIED -2#define PART_AUTO -1#define PART_TYPE_UNKNOWN 0x00#define DEV_TYPE_UNKNOWN 0xff#define PRINTF(fmt,args...)#define CONFIG_MAC_PARTITION 1#define CONFIG_DOS_PARTITION 1#define CONFIG_ISO_PARTITION 1#define CONFIG_AMIGA_PARTITION 1#define CONFIG_EFI_PARTITION 1#define DEV_TYPE_HARDDISK 0x00#define DEV_TYPE_CDROM 0x05#define DEV_TYPE_OPDISK 0x07#define DEV_TYPE_TAPE 0x01#define AMIGA_ID_BOOT 0x424f4f54#define AMIGA_ID_PART 0x50415254#define AMIGA_ID_RDISK 0x5244534B#define AMIGA_BLOCK_LIMIT 16#define DEFAULT_SECTOR_SIZE 2048#define _DISK_PART_AMIGA_H#define PART_TYPE_AMIGA 0x04#define AMIGA_ENTRY_NUMBERS 8#define U_BOOT_PART_TYPE(__name) ll_entry_declare(struct part_driver, __name, part_driver)#define DOS_PBR 1#define DOS_MBR 0#define DOS_PBR_MEDIA_TYPE_OFFSET 0x15#define DOS_PBR32_FSTYPE_OFFSET 0x52#define DOS_PBR_FSTYPE_OFFSET 0x36#define DOS_PART_MAGIC_OFFSET 0x1fe#define DOS_PART_TBL_OFFSET 0x1be#define DOS_PART_DISKSIG_OFFSET 0x1b8#define _DISK_PART_DOS_H#define MAX_EXT_PARTS 256#define DOS_PART_DEFAULT_SECTOR 512#define PART_TYPE_DOS 0x02#define DOS_ENTRY_NUMBERS 8#define part_get_info_ptr(x) x#define part_print_ptr(x) x#define MSDOS_MBR_SIGNATURE 0xAA55#define EFI_PMBR_OSTYPE_EFI_GPT 0xEE#define GPT_PRIMARY_PARTITION_TABLE_LBA 1ULL#define PARTNAME_SZ (72 / sizeof(efi_char16_t))#define CONFIG_EFI_PARTITION_ENTRIES_NUMBERS 128#define GPT_ENTRY_NUMBERS CONFIG_EFI_PARTITION_ENTRIES_NUMBERS#define GPT_HEADER_SIGNATURE_UBOOT 0x5452415020494645ULL#define GPT_HEADER_REVISION_V1 0x00010000#define CONFIG_EFI_PARTITION_ENTRIES_OFF 0#define MSDOS_MBR_BOOT_CODE_SIZE 440#define PART_TYPE_EFI 0x05#define PARTITION_SYSTEM_GUID EFI_GUID( 0xC12A7328, 0xF81F, 0x11d2, 0xBA, 0x4B, 0x00, 0xA0, 0xC9, 0x3E, 0xC9, 0x3B)#define PARTITION_BASIC_DATA_GUID EFI_GUID( 0xEBD0A0A2, 0xB9E5, 0x4433, 0x87, 0xC0, 0x68, 0xB6, 0xB7, 0x26, 0x99, 0xC7)#define PVD_OFFSET 0x10#define BRVD 0x11#define _PART_CD_H#define CD_SECTSIZE 2048#define PART_TYPE_ISO 0x03#define ISO_ENTRY_NUMBERS 64#define MAC_STATUS_BOOTABLE 8#define APPLE_AUX_TYPE "Apple_UNIX_SVR2"#define MAC_PARTITION_MAGIC 0x504d#define MAC_DRIVER_MAGIC 0x4552#define _DISK_PART_MAC_H#define PART_TYPE_MAC 0x01#define MAC_ENTRY_NUMBERS 64#define ADC_MAX_CHANNEL 31#define ADC_CHANNEL(x) (1 << x)#define _ADC_H_#define CHECK_NUMBER true#define CHECK_MASK (!CHECK_NUMBER)#define sdelay(x) udelay(x)#define ADC_UCLASS_PLATDATA_SIZE sizeof(struct adc_uclass_platdata)#define CONFIG_SANDBOX_ARCH#define SANDBOX_ADC_VSS_VALUE 0#define SANDBOX_ADC_CHANNEL3_DATA 0x3000#define SANDBOX_ADC_CHANNEL2_DATA 0x2000#define SANDBOX_ADC_CHANNEL1_DATA 0x1000#define SANDBOX_ADC_CHANNEL0_DATA 0x0#define SANDBOX_ADC_CHANNELS 4#define SANDBOX_ADC_DATA_MASK 0xffff#define SANDBOX_ADC_DEVNAME "adc@0"#define _SANDBOX_ADC_H_#define CONFIG_SYS_SATA_MAX_DEVICE 2#define CONFIG_PARTITIONS 1#define axi_emul_get_ops(dev) ((struct axi_emul_ops *)(dev)->driver->ops)#define __asm_axi_h#define ENOTBLK 15#define CONFIG_SYS_IDE_MAXDEVICE 2#define CONFIG_SYS_ATA_REG_OFFSET 1#define IDE_TIME_OUT 2000#define IDE_SPIN_UP_TIME_OUT 5000#define CONFIG_SYS_ATA_BASE_ADDR 0x100#define ATA_CURR_BASE(dev) (CONFIG_SYS_ATA_BASE_ADDR+ide_bus_offset[IDE_BUS(dev)])#define CONFIG_SYS_IDE_MAXBUS 1#define IDE_BUS(dev) (dev / (CONFIG_SYS_IDE_MAXDEVICE / CONFIG_SYS_IDE_MAXBUS))#define CONFIG_SYS_ATA_DATA_OFFSET 0#define LOG2_INVALID(type) ((type)((sizeof(type)<<3)-1))#define ide_reset()#define CONFIG_SYS_ATA_PORT_ADDR(port) (port)#define PCI_CLASS_STORAGE_IDE 0x0101#define CONFIG_SYS_ATA_IDE0_OFFSET 0#define ATAPI_TIME_OUT 7000#define SYNC#define EIEIO#define board_get_ops(dev) ((struct board_ops *)(dev)->driver->ops)#define no_printk(fmt,__VA_ARGS__...) ({ if (0) printk(fmt, ## __VA_ARGS__); 0; })#define pr_debug(fmt,__VA_ARGS__...) no_printk(pr_fmt(fmt), ## __VA_ARGS__)#define cache_get_ops(dev) ((struct cache_ops *)(dev)->driver->ops)#define __CACHE_H#define CLK_DIVIDER_HIWORD_MASK BIT(3)#define pr_warning(fmt,__VA_ARGS__...) __printk(4, pr_fmt(fmt), ## __VA_ARGS__)#define pr_warn pr_warning#define UBOOT_DM_CLK_CCF_DIVIDER "ccf_clk_divider"#define CONFIG_SANDBOX_CLK_CCF 1#define to_clk_divider(_clk) container_of(_clk, struct clk_divider, clk)#define clk_div_mask(width) ((1 << (width)) - 1)#define CLK_DIVIDER_ALLOW_ZERO BIT(2)#define DIV_ROUND_DOWN_ULL(ll,d) ({ unsigned long long _tmp = (ll); do_div(_tmp, d); _tmp; })#define DIV_ROUND_UP_ULL(ll,d) DIV_ROUND_DOWN_ULL((ll) + (d) - 1, (d))#define CLK_DIVIDER_ONE_BASED BIT(0)#define CLK_DIVIDER_POWER_OF_TWO BIT(1)#define CLK_DIVIDER_MAX_AT_ZERO BIT(6)#define UBOOT_DM_CLK_IMX_FIXED_FACTOR "ccf_clk_fixed_factor"#define to_clk_fixed_factor(_clk) container_of(_clk, struct clk_fixed_factor, clk)#define CLK_MUX_HIWORD_MASK BIT(2)#define ffs generic_ffs#define UBOOT_DM_CLK_CCF_MUX "ccf_clk_mux"#define to_clk_mux(_clk) container_of(_clk, struct clk_mux, clk)#define CLK_MUX_INDEX_BIT BIT(1)#define CLK_MUX_INDEX_ONE BIT(0)#define __DT_STRUCTS#define CLK_GET_RATE_NOCACHE BIT(6)#define to_clk_fixed_factor(dev) ((struct clk_fixed_factor *)dev_get_platdata(dev))#define to_clk_fixed_rate(dev) ((struct clk_fixed_rate *)dev_get_platdata(dev))#define __SANDBOX_CLK_H#define CLK_SET_RATE_NO_REPARENT BIT(7)#define CLK_SET_RATE_PARENT BIT(2)#define __SANDBOX_CLK_H__#define to_clk_gate2(_clk) container_of(_clk, struct clk_gate2, clk)#define _CLK_H_#define CONFIG_CLK 1#define _CLK_UCLASS_H#define CLK_DIVIDER_READ_ONLY BIT(5)#define CLK_DIVIDER_ROUND_CLOSEST BIT(4)#define CLK_MUX_ROUND_CLOSEST BIT(4)#define CLK_MUX_READ_ONLY BIT(3)#define CLK_DUTY_CYCLE_PARENT BIT(13)#define CLK_OPS_PARENT_ENABLE BIT(12)#define CLK_IS_CRITICAL BIT(11)#define CLK_SET_RATE_UNGATE BIT(10)#define CLK_RECALC_NEW_RATES BIT(9)#define CLK_GET_ACCURACY_NOCACHE BIT(8)#define CLK_IS_BASIC BIT(5)#define CLK_IGNORE_UNUSED BIT(3)#define CLK_SET_PARENT_GATE BIT(1)#define CLK_SET_RATE_GATE BIT(0)#define __LINUX_CLK_PROVIDER_H#define __MACH_IMX_CLK_H#define UBOOT_DM_CLK_IMX_GATE2 "imx_clk_gate2"#define UBOOT_DM_CLK_IMX_PFD "imx_clk_pfd"#define to_clk_pfd(_clk) container_of(_clk, struct clk_pfd, clk)#define OTG 0xc#define CLR 0x8#define SET 0x4#define UBOOT_DM_CLK_IMX_PLLV3 "imx_clk_pllv3"#define ENOTSUPP 524#define to_clk_pllv3(_clk) container_of(_clk, struct clk_pllv3, clk)#define of_node_get(x) (x)#define for_each_of_allnodes(dn) for_each_of_allnodes_from(NULL, dn)#define for_each_of_allnodes_from(from,dn) for (dn = of_find_all_nodes(from); dn; dn = of_find_all_nodes(dn))#define _DM_OF_ACCESS_H#define _POWER_DOMAIN_H#define CONFIG_POWER_DOMAIN 1#define CONFIG_DM_SEQ_ALIAS 1#define BUG_ON(condition) do { if (unlikely(condition)) BUG(); } while (0)#define BUG() do { printk("BUG at %s:%d/%s()!\n", __FILE__, __LINE__, __func__); panic("BUG!"); } while (0)#define CONFIG_OF_TRANSLATE 1#define CONFIG_SIMPLE_BUS 1#define IORESOURCE_TYPE_BITS 0x00000f00#define devm_release_mem_region(dev,start,n) __devm_release_region(dev, &iomem_resource, (start), (n))#define devm_release_region(dev,start,n) __devm_release_region(dev, &ioport_resource, (start), (n))#define devm_request_mem_region(dev,start,n,name) __devm_request_region(dev, &iomem_resource, (start), (n), (name))#define devm_request_region(dev,start,n,name) __devm_request_region(dev, &ioport_resource, (start), (n), (name))#define release_mem_region(start,n) __release_region(&iomem_resource, (start), (n))#define check_mem_region(start,n) __check_region(&iomem_resource, (start), (n))#define release_region(start,n) __release_region(&ioport_resource, (start), (n))#define rename_region(region,newname) do { (region)->name = (newname); } while (0)#define request_mem_region_exclusive(start,n,name) __request_region(&iomem_resource, (start), (n), (name), IORESOURCE_EXCLUSIVE)#define request_mem_region(start,n,name) __request_region(&iomem_resource, (start), (n), (name), 0)#define __request_mem_region(start,n,name,excl) __request_region(&iomem_resource, (start), (n), (name), excl)#define request_region(start,n,name) __request_region(&ioport_resource, (start), (n), (name), 0)#define IORESOURCE_PCI_FIXED (1<<4)#define IORESOURCE_ROM_BIOS_COPY (1<<3)#define IORESOURCE_ROM_COPY (1<<2)#define IORESOURCE_ROM_SHADOW (1<<1)#define IORESOURCE_ROM_ENABLE (1<<0)#define IORESOURCE_IO_FIXED (1<<1)#define IORESOURCE_IO_16BIT_ADDR (1<<0)#define IORESOURCE_MEM_EXPANSIONROM (1<<6)#define IORESOURCE_MEM_SHADOWABLE (1<<5)#define IORESOURCE_MEM_32BIT (3<<3)#define IORESOURCE_MEM_8AND16BIT (2<<3)#define IORESOURCE_MEM_16BIT (1<<3)#define IORESOURCE_MEM_8BIT (0<<3)#define IORESOURCE_MEM_TYPE_MASK (3<<3)#define IORESOURCE_MEM_RANGELENGTH (1<<2)#define IORESOURCE_MEM_CACHEABLE (1<<1)#define IORESOURCE_MEM_WRITEABLE (1<<0)#define IORESOURCE_DMA_TYPEF (3<<6)#define IORESOURCE_DMA_TYPEB (2<<6)#define IORESOURCE_DMA_TYPEA (1<<6)#define IORESOURCE_DMA_COMPATIBLE (0<<6)#define IORESOURCE_DMA_SPEED_MASK (3<<6)#define IORESOURCE_DMA_WORD (1<<4)#define IORESOURCE_DMA_BYTE (1<<3)#define IORESOURCE_DMA_MASTER (1<<2)#define IORESOURCE_DMA_16BIT (2<<0)#define IORESOURCE_DMA_8AND16BIT (1<<0)#define IORESOURCE_DMA_8BIT (0<<0)#define IORESOURCE_DMA_TYPE_MASK (3<<0)#define IORESOURCE_IRQ_OPTIONAL (1<<5)#define IORESOURCE_IRQ_SHAREABLE (1<<4)#define IORESOURCE_IRQ_LOWLEVEL (1<<3)#define IORESOURCE_IRQ_HIGHLEVEL (1<<2)#define IORESOURCE_IRQ_LOWEDGE (1<<1)#define IORESOURCE_IRQ_HIGHEDGE (1<<0)#define IORESOURCE_BUSY 0x80000000#define IORESOURCE_AUTO 0x40000000#define IORESOURCE_UNSET 0x20000000#define IORESOURCE_DISABLED 0x10000000#define IORESOURCE_EXCLUSIVE 0x08000000#define IORESOURCE_MEM_64 0x00100000#define IORESOURCE_STARTALIGN 0x00040000#define IORESOURCE_SIZEALIGN 0x00020000#define IORESOURCE_SHADOWABLE 0x00010000#define IORESOURCE_RANGELENGTH 0x00008000#define IORESOURCE_CACHEABLE 0x00004000#define IORESOURCE_READONLY 0x00002000#define IORESOURCE_PREFETCH 0x00001000#define IORESOURCE_DMA 0x00000800#define IORESOURCE_IRQ 0x00000400#define IORESOURCE_MEM 0x00000200#define IORESOURCE_IO 0x00000100#define IORESOURCE_BITS 0x000000ff#define _LINUX_IOPORT_H#define __deprecated#define for_each_property_of_node(dn,pp) for (pp = dn->properties; pp != NULL; pp = pp->next)#define EILSEQ 84#define be64_to_cpup __be64_to_cpup#define EOVERFLOW 75#define __for_each_child_of_node(parent,child) for (child = __of_get_next_child(parent, NULL); child != NULL; child = __of_get_next_child(parent, child))#define INT_MAX ((int)(~0U>>1))#define OF_CHECK_COUNTS(na,ns) (OF_CHECK_ADDR_COUNT(na) && (ns) > 0)#define OF_CHECK_ADDR_COUNT(na) ((na) > 0 && (na) <= OF_MAX_ADDR_CELLS)#define regmap_read_poll_timeout(map,addr,val,cond,sleep_us,timeout_ms) regmap_read_poll_timeout_test(map, addr, val, cond, sleep_us, timeout_ms, 0)#define regmap_read_poll_timeout_test(map,addr,val,cond,sleep_us,timeout_ms,test_add_time) ({ unsigned long __start = get_timer(0); int __ret; for (;;) { __ret = regmap_read((map), (addr), &(val)); if (__ret) break; if (cond) break; if (IS_ENABLED(CONFIG_SANDBOX) && test_add_time) timer_test_add_offset(test_add_time); if ((timeout_ms) && get_timer(__start) > (timeout_ms)) { __ret = regmap_read((map), (addr), &(val)); break; } if ((sleep_us)) udelay((sleep_us)); } __ret ?: ((cond) ? 0 : -ETIMEDOUT); })#define regmap_get(map,type,member,valp) regmap_range_get(map, 0, type, member, valp)#define regmap_range_get(map,range,type,member,valp) regmap_raw_read_range(map, range, offsetof(type, member), (void *)valp, sizeof(((type *)0)->member))#define regmap_set(map,type,member,val) regmap_range_set(map, 0, type, member, val)#define regmap_range_set(map,range,type,member,val) do { typeof(((type *)0)->member) __tmp = val; regmap_raw_write_range(map, range, offsetof(type, member), &__tmp, sizeof(((type *)0)->member)); } while (0)#define __REGMAP_H#define _DM_OF_ADDR_H#define ERANGE 34#define syscon_get_ops(dev) ((struct syscon_ops *)(dev)->driver->ops)#define __SYSCON_H#define EPFNOSUPPORT 96#define _RSA_MOD_EXP_H#define WIDTH 8#define HEIGHT 6#define DMA_SUPPORTS_DEV_TO_DEV BIT(3)#define DMA_SUPPORTS_DEV_TO_MEM BIT(2)#define DMA_SUPPORTS_MEM_TO_DEV BIT(1)#define DMA_SUPPORTS_MEM_TO_MEM BIT(0)#define _DMA_H_#define CONFIG_DMA 1#define CONFIG_DMA_CHANNELS 1#define _DMA_UCLASS_H#define SANDBOX_DMA_CH_CNT 3#define SANDBOX_DMA_BUF_SIZE 1024#define BYTES_PER_DOT 0x20000#define __NET_FASTBOOT_H__#define _FASTBOOT_INTERNAL_H_#define _FB_MMC_H_#define _FB_NAND_H_#define FASTBOOT_ENV_PREFIX "fastboot."#define GPIO_TRANSITORY 8#define GPIO_PERSISTENT 0#define GPIO_OPEN_SOURCE (GPIO_SINGLE_ENDED | GPIO_LINE_OPEN_SOURCE)#define GPIO_OPEN_DRAIN (GPIO_SINGLE_ENDED | GPIO_LINE_OPEN_DRAIN)#define GPIO_LINE_OPEN_DRAIN 4#define GPIO_LINE_OPEN_SOURCE 0#define GPIO_SINGLE_ENDED 2#define GPIO_PUSH_PULL 0#define GPIO_ACTIVE_LOW 1#define GPIO_ACTIVE_HIGH 0#define _DT_BINDINGS_GPIO_GPIO_H#define REG_TYPE 0x4#define REG_SUBTYPE 0x5#define PON_INT_RT_STS 0x10#define KPDPWR_ON_INT_BIT 0#define RESIN_ON_INT_BIT 1#define REG_OFFSET(x) ((x) * 0x100)#define REG_CTL 0x40#define REG_CTL_OUTPUT_MASK 0x0F#define REG_STATUS 0x08#define REG_STATUS_VAL_MASK 0x1#define REG_CTL_MODE_MASK 0x70#define REG_CTL_MODE_INPUT 0x00#define REG_CTL_MODE_INOUT 0x20#define REG_CTL_MODE_OUTPUT 0x10#define REG_EN_CTL 0x46#define REG_EN_CTL_ENABLE (1 << 7)#define REG_DIG_PULL_CTL 0x42#define REG_DIG_PULL_NO_PU 0x5#define REG_DIG_VIN_CTL 0x41#define REG_DIG_VIN_VIN0 0#define REG_DIG_OUT_CTL 0x45#define REG_DIG_OUT_CTL_CMOS (0x0 << 4)#define REG_DIG_OUT_CTL_DRIVE_L 0x1#define CONFIG_SANDBOX_GPIO_COUNT 128#define GPIOF_OUTPUT (1 << 0)#define GPIOF_ODR (1 << 2)#define GPIOF_HIGH (1 << 1)#define _HWSPINLOCK_H_#define CONFIG_DM_HWSPINLOCK 1#define ETIMEDOUT 110#define TPS65090_FET_DRIVER "tps65090_fet"#define TPS65090_I2C_ADDR 0x48#define __TPS65090_PMIC_H_#define DEFAULT_UDELAY 5#define EREMOTEIO 121#define I2C_NOACK 1#define I2C_ACK 0#define RETRIES 0#define I2C_MAX_OFFSET_LEN 4#define EADDRNOTAVAIL 99#define _KEY_MATRIX_H#define ALT 0x0200#define BRK 0x0100#define E1 0x0080#define ESC 0x0040#define EXT 0x0020#define CTRL 0x0010#define SHIFT 0x0008#define CAPS 0x0004#define NUM 0x0002#define STP 0x0001#define NORMAL 0x0000#define ES 8#define EX 7#define ST 6#define CP 5#define AK 4#define NM 3#define CN 2#define SH 1#define AS 0#define KBD_RESET_TRIES 3#define KBD_TIMEOUT 1000#define KBD_GER 1#define KBD_US 0#define KBD_POR 0xaa#define KBD_ACK 0xfa#define KBC_TEST_OK 0x55#define CMD_RESET_KBD 0xff#define CMD_DRAIN_OUTPUT 0xf4#define CMD_SET_KBD_LED 0xed#define CMD_KBD_EN 0xae#define CMD_KBD_DIS 0xad#define CMD_SELF_TEST 0xaa#define CMD_WR_CONFIG 0x60#define CMD_RD_CONFIG 0x20#define CONFIG_AT_TRANS (1 << 6)#define CONFIG_MCLK_DIS (1 << 5)#define CONFIG_KCLK_DIS (1 << 4)#define CONFIG_SET_BIST (1 << 2)#define CONFIG_MIRQ_EN (1 << 1)#define CONFIG_KIRQ_EN (1 << 0)#define STATUS_IBF (1 << 1)#define STATUS_OBF (1 << 0)#define I8042_CMD_REG 0x64#define I8042_STS_REG 0x64#define I8042_DATA_REG 0x60#define _I8042_H_#define in8(p) inb(p)#define out8(p,v) outb(v, p)#define keyboard_get_ops(dev) ((struct keyboard_ops *)(dev)->driver->ops)#define __KEYBOARD_H#define _LINUX_INPUT_H#define ANSI_CHAR_MAX 3#define _MAILBOX_H#define _MAILBOX_UCLASS_H#define SANDBOX_MBOX_PING_XOR 0x12345678#define __SANDBOX_MBOX_H#define SANDBOX_MBOX_CHANNELS 2#define LOG_CATEGORY UCLASS_CROS_EC#define UHEPI_SUPPORTED 1#define UHEPI_NOT_SUPPORTED 2#define INVALID_HCMD 0xFF#define debug_trace(fmt,b...)#define __SANDBOX_SDL_H#define CONFIG_SANDBOX_SDL#define KEYBOARD_COLS 13#define KEYBOARD_ROWS 8#define __I2C_EEPROM#define debug_buffer(x,__VA_ARGS__...)#define _MISC_H_#define pwrseq_get_ops(dev) ((struct pwrseq_ops *)(dev)->driver->ops)#define __pwrseq_h#define barrier() __asm__ __volatile__("": : :"memory")#define offset_to_barnum(offset) (((offset) - PCI_BASE_ADDRESS_0) / sizeof(u32))#define PCI_CAP_ID_EA_SIZE (sizeof(ea_regs) + 4)#define PCI_CAP_ID_EA_ENTRY_CNT 4#define EMEDIUMTYPE 124#define _MMC_PRIVATE_H_#define pr_info(fmt,__VA_ARGS__...) __printk(6, pr_fmt(fmt), ## __VA_ARGS__)#define ENOMEDIUM 123#define CONFIG_MMC_QUIRKS 1#define for_each_mmc_mode_by_pref(caps,mwt) for (mwt = mmc_modes_by_pref; mwt < mmc_modes_by_pref + ARRAY_SIZE(mmc_modes_by_pref); mwt++) if (caps & MMC_CAP(mwt->mode))#define for_each_supported_width(caps,ddr,ecbv) for (ecbv = ext_csd_bus_width; ecbv < ext_csd_bus_width + ARRAY_SIZE(ext_csd_bus_width); ecbv++) if ((ddr == ecbv->is_ddr) && (caps & ecbv->cap))#define for_each_sd_mode_by_pref(caps,mwt) for (mwt = sd_modes_by_pref; mwt < sd_modes_by_pref + ARRAY_SIZE(sd_modes_by_pref); mwt++) if (caps & MMC_CAP(mwt->mode))#define DEFAULT_CMD6_TIMEOUT_MS 500#define ECOMM 70#define CONFIG_MMC_VERBOSE 1#define div64_ul(x,y) div_u64((x), (y))#define div64_long(x,y) div_s64((x), (y))#define _LINUX_MATH64_H#define __SIZEOF_INT128__ 16#define U32_MAX ((u32)~0U)#define _MTD_H_#define MTD_NAME_MAX_LEN 20#define crc32(seed,data,length) crc32_le(seed, (unsigned char const *)data, length)#define _LINUX_CRC32_H#define rbtree_postorder_for_each_entry_safe(pos,n,root,field) for (pos = rb_entry_safe(rb_first_postorder(root), typeof(*pos), field); pos && ({ n = rb_entry_safe(rb_next_postorder(&pos->field), typeof(*pos), field); 1; }); pos = n)#define rb_entry_safe(ptr,type,member) ({ typeof(ptr) ____ptr = (ptr); ____ptr ? rb_entry(____ptr, type, member) : NULL; })#define RB_CLEAR_NODE(node) ((node)->__rb_parent_color = (unsigned long)(node))#define RB_EMPTY_NODE(node) ((node)->__rb_parent_color == (unsigned long)(node))#define RB_EMPTY_ROOT(root) ((root)->rb_node == NULL)#define rb_entry(ptr,type,member) container_of(ptr, type, member)#define RB_ROOT (struct rb_root) { NULL, }#define rb_parent(r) ((struct rb_node *)((r)->__rb_parent_color & ~3))#define _LINUX_RBTREE_H#define UBI_MAX_SG_COUNT 64#define UBI_ALL -1#define __LINUX_UBI_H__#define __UBOOT_UBI_H#define UBI_FM_MAX_POOL_SIZE 256#define UBI_FM_MAX_BLOCKS 32#define UBI_VOL_NAME_MAX 127#define UBI_FM_MIN_POOL_SIZE 8#define UBI_FM_MAX_START 64#define UBI_FM_EBA_MAGIC 0xf0c040a8#define UBI_FM_POOL_MAGIC 0x67AF4D08#define UBI_FM_VHDR_MAGIC 0xFA370ED1#define UBI_FM_HDR_MAGIC 0xD4B82EF7#define UBI_FM_SB_MAGIC 0x7B11D69F#define UBI_FM_FMT_VERSION 1#define UBI_FM_DATA_VOLUME_ID (UBI_LAYOUT_VOLUME_ID + 2)#define UBI_FM_SB_VOLUME_ID (UBI_LAYOUT_VOLUME_ID + 1)#define UBI_VTBL_RECORD_SIZE_CRC (UBI_VTBL_RECORD_SIZE - sizeof(__be32))#define UBI_VTBL_RECORD_SIZE sizeof(struct ubi_vtbl_record)#define UBI_MAX_VOLUMES 128#define UBI_LAYOUT_VOLUME_COMPAT UBI_COMPAT_REJECT#define UBI_LAYOUT_VOLUME_NAME "layout volume"#define UBI_LAYOUT_VOLUME_EBS 2#define UBI_LAYOUT_VOLUME_ALIGN 1#define UBI_LAYOUT_VOLUME_TYPE UBI_VID_DYNAMIC#define UBI_LAYOUT_VOLUME_ID UBI_INTERNAL_VOL_START#define UBI_INTERNAL_VOL_START (0x7FFFFFFF - 4096)#define UBI_INT_VOL_COUNT 1#define UBI_VID_HDR_SIZE_CRC (UBI_VID_HDR_SIZE - sizeof(__be32))#define UBI_EC_HDR_SIZE_CRC (UBI_EC_HDR_SIZE - sizeof(__be32))#define UBI_VID_HDR_SIZE sizeof(struct ubi_vid_hdr)#define UBI_EC_HDR_SIZE sizeof(struct ubi_ec_hdr)#define UBI_VID_HDR_MAGIC 0x55424921#define UBI_EC_HDR_MAGIC 0x55424923#define UBI_CRC32_INIT 0xFFFFFFFFU#define UBI_MAX_ERASECOUNTER 0x7FFFFFFF#define UBI_VERSION 1#define __UBI_MEDIA_H__#define UBI_MAX_RNVOL 32#define UBI_MAX_VOLUME_NAME 127#define MAX_UBI_MTD_NAME_LEN 127#define UBI_IOCVOLRMBLK _IO(UBI_VOL_IOC_MAGIC, 8)#define UBI_IOCVOLCRBLK _IOW(UBI_VOL_IOC_MAGIC, 7, struct ubi_blkcreate_req)#define UBI_IOCSETVOLPROP _IOW(UBI_VOL_IOC_MAGIC, 6, struct ubi_set_vol_prop_req)#define UBI_IOCEBISMAP _IOR(UBI_VOL_IOC_MAGIC, 5, __s32)#define UBI_IOCEBUNMAP _IOW(UBI_VOL_IOC_MAGIC, 4, __s32)#define UBI_IOCEBMAP _IOW(UBI_VOL_IOC_MAGIC, 3, struct ubi_map_req)#define UBI_IOCEBCH _IOW(UBI_VOL_IOC_MAGIC, 2, __s32)#define UBI_IOCEBER _IOW(UBI_VOL_IOC_MAGIC, 1, __s32)#define UBI_IOCVOLUP _IOW(UBI_VOL_IOC_MAGIC, 0, __s64)#define UBI_VOL_IOC_MAGIC 'O'#define UBI_IOCDET _IOW(UBI_CTRL_IOC_MAGIC, 65, __s32)#define UBI_IOCATT _IOW(UBI_CTRL_IOC_MAGIC, 64, struct ubi_attach_req)#define UBI_CTRL_IOC_MAGIC 'o'#define UBI_IOCRNVOL _IOW(UBI_IOC_MAGIC, 3, struct ubi_rnvol_req)#define UBI_IOCRSVOL _IOW(UBI_IOC_MAGIC, 2, struct ubi_rsvol_req)#define UBI_IOCRMVOL _IOW(UBI_IOC_MAGIC, 1, __s32)#define UBI_IOCMKVOL _IOW(UBI_IOC_MAGIC, 0, struct ubi_mkvol_req)#define UBI_IOC_MAGIC 'o'#define UBI_DEV_NUM_AUTO (-1)#define UBI_VOL_NUM_AUTO (-1)#define __UBI_USER_H__#define dbg_bld(fmt,__VA_ARGS__...) ubi_dbg_msg("bld", fmt, ## __VA_ARGS__)#define dbg_io(fmt,__VA_ARGS__...) ubi_dbg_msg("io", fmt, ## __VA_ARGS__)#define dbg_wl(fmt,__VA_ARGS__...) ubi_dbg_msg("wl", fmt, ## __VA_ARGS__)#define dbg_eba(fmt,__VA_ARGS__...) ubi_dbg_msg("eba", fmt, ## __VA_ARGS__)#define dbg_gen(fmt,__VA_ARGS__...) ubi_dbg_msg("gen", fmt, ## __VA_ARGS__)#define ubi_dbg_msg(type,fmt,__VA_ARGS__...) pr_debug("UBI DBG " type " (pid %d): " fmt "\n", current->pid, ## __VA_ARGS__)#define ubi_dbg_print_hex_dump(ps,pt,r,g,b,len,a) print_hex_dump(ps, pt, r, g, b, len, a)#define ubi_assert(expr) do { if (unlikely(!(expr))) { pr_debug("UBI assert failed in %s at %u\n", __func__, __LINE__); dump_stack(); } } while (0)#define __UBI_DEBUG_H__#define ubi_warn(ubi,fmt,__VA_ARGS__...) pr_warn(UBI_NAME_STR "%d warning: %s: " fmt "\n", ubi->ubi_num, __func__, ## __VA_ARGS__)#define UBI_NAME_STR "ubi"#define UBI_DFS_DIR_LEN (3 + 2 + 1)#define UBI_BGT_NAME_PATTERN "ubi_bgt%dd"#define UBI_PROT_QUEUE_LEN 10#define ubi_rb_for_each_entry(rb,pos,root,member) for (rb = rb_first(root), pos = (rb ? container_of(rb, typeof(*pos), member) : NULL); rb; rb = rb_next(rb), pos = (rb ? container_of(rb, typeof(*pos), member) : NULL))#define ubi_for_each_protected_peb(ubi,i,e) for ((i) = 0; (i) < UBI_PROT_QUEUE_LEN; (i)++) list_for_each_entry((e), &(ubi->pq[(i)]), u.list)#define ubi_for_each_scrub_peb(ubi,e,tmp_rb) ubi_rb_for_each_entry((tmp_rb), (e), &(ubi)->scrub, u.rb)#define ubi_for_each_used_peb(ubi,e,tmp_rb) ubi_rb_for_each_entry((tmp_rb), (e), &(ubi)->used, u.rb)#define ubi_for_each_free_peb(ubi,e,tmp_rb) ubi_rb_for_each_entry((tmp_rb), (e), &(ubi)->free, u.rb)#define ubi_gluebi_updated(vol)#define ubi_create_gluebi(ubi,vol) 0#define UBI_DFS_DIR_NAME "ubi%d"#define UBI_UNKNOWN -1#define UBI_IO_RETRIES 3#define UBI_LEB_UNMAPPED -1#define ubi_err(ubi,fmt,__VA_ARGS__...) pr_err(UBI_NAME_STR "%d error: %s: " fmt "\n", ubi->ubi_num, __func__, ## __VA_ARGS__)#define ubi_msg(ubi,fmt,__VA_ARGS__...) printk(UBI_NAME_STR "%d: " fmt "\n", ubi->ubi_num, ## __VA_ARGS__)#define UBI_MAX_DEVICES 32#define __UBI_UBI_H__#define ubi_sysfs_close(__VA_ARGS__...) do { } while (0)#define ubi_sysfs_init(__VA_ARGS__...) 0#define put_device(__VA_ARGS__...)#define get_device(__VA_ARGS__...)#define CONFIG_MTD_UBI_MODULE#define CONFIG_MTD_UBI_BEB_RESERVE 1#define MTDPART_SIZ_FULL (0)#define MTDPART_OFS_APPEND (-1)#define MTDPART_OFS_NXTBLK (-2)#define MTDPART_OFS_RETAIN (-3)#define MTD_PARTITIONS_H#define EROFS 30#define KERN_NOTICE#define KERN_WARNING#define MAX_IDR_ID 64#define DEFINE_IDR(name) struct idr name;#define LOG_CATEGORY UCLASS_SPI_FLASH#define __ASM_SPI_H__#define IDCODE_LEN 3#define JEDEC_MFR(info) ((info)->id[0])#define SPI_NOR_MAX_ID_LEN 6#define JEDEC_ID(info) (((info)->id[1]) << 8 | ((info)->id[2]))#define SF_ADDR_LEN 3#define STAT_WEL (1 << 1)#define SECT_4K BIT(0)#define STAT_BP_MASK (7 << STAT_BP_SHIFT)#define STAT_BP_SHIFT 2#define STAT_WIP (1 << 0)#define CONFIG_SPI_FLASH 1#define USE_CLSR BIT(14)#define SPI_NOR_SKIP_SFDP BIT(13)#define NO_CHIP_ERASE BIT(12)#define SPI_NOR_4B_OPCODES BIT(11)#define SPI_S3AN BIT(10)#define SPI_NOR_HAS_TB BIT(9)#define SPI_NOR_HAS_LOCK BIT(8)#define USE_FSR BIT(7)#define SPI_NOR_QUAD_READ BIT(6)#define SPI_NOR_DUAL_READ BIT(5)#define SECT_4K_PMC BIT(4)#define SPI_NOR_NO_FR BIT(3)#define SST_WRITE BIT(2)#define SPI_NOR_NO_ERASE BIT(1)#define SPI_NOR_MAX_ADDR_WIDTH 4#define _SF_INTERNAL_H_#define SPI_MEM_OP(__cmd,__addr,__dummy,__data) { .cmd = __cmd, .addr = __addr, .dummy = __dummy, .data = __data, }#define SPI_MEM_OP_NO_DATA { }#define SPI_MEM_OP_DATA_OUT(__nbytes,__buf,__buswidth) { .dir = SPI_MEM_DATA_OUT, .nbytes = __nbytes, .buf.out = __buf, .buswidth = __buswidth, }#define SPI_MEM_OP_DATA_IN(__nbytes,__buf,__buswidth) { .dir = SPI_MEM_DATA_IN, .nbytes = __nbytes, .buf.in = __buf, .buswidth = __buswidth, }#define SPI_MEM_OP_NO_DUMMY { }#define SPI_MEM_OP_DUMMY(__nbytes,__buswidth) { .nbytes = __nbytes, .buswidth = __buswidth, }#define SPI_MEM_OP_NO_ADDR { }#define SPI_MEM_OP_ADDR(__nbytes,__val,__buswidth) { .nbytes = __nbytes, .val = __val, .buswidth = __buswidth, }#define SPI_MEM_OP_CMD(__opcode,__buswidth) { .buswidth = __buswidth, .opcode = __opcode, }#define __UBOOT_SPI_MEM_H#define CONFIG_SPI_FLASH_STMICRO 1#define CONFIG_SPI_FLASH_SST 1#define CONFIG_SPI_FLASH_USE_4K_SECTORS 1#define CONFIG_SPI_FLASH_MACRONIX 1#define CONFIG_SPI_FLASH_SPANSION 1#define CONFIG_SPI_FLASH_WINBOND 1#define hweight32(x) generic_hweight32(x)#define DEFAULT_READY_WAIT_JIFFIES (40UL * HZ)#define HZ CONFIG_SYS_HZ#define UINT_MAX (~0U)#define CONFIG_SPI_FLASH_ATMEL 1#define INFO(_name,_jedec_id,_ext_id,_sector_size,_n_sectors,_flags) INFO_NAME(_name) .id = { ((_jedec_id) >> 16) & 0xff, ((_jedec_id) >> 8) & 0xff, (_jedec_id) & 0xff, ((_ext_id) >> 8) & 0xff, (_ext_id) & 0xff, }, .id_len = (!(_jedec_id) ? 0 : (3 + ((_ext_id) ? 2 : 0))), .sector_size = (_sector_size), .n_sectors = (_n_sectors), .page_size = 256, .flags = (_flags),#define INFO_NAME(_name) .name = _name,#define CONFIG_SPI_FLASH_EON 1#define CONFIG_SPI_FLASH_GIGADEVICE 1#define INFO6(_name,_jedec_id,_ext_id,_sector_size,_n_sectors,_flags) INFO_NAME(_name) .id = { ((_jedec_id) >> 16) & 0xff, ((_jedec_id) >> 8) & 0xff, (_jedec_id) & 0xff, ((_ext_id) >> 16) & 0xff, ((_ext_id) >> 8) & 0xff, (_ext_id) & 0xff, }, .id_len = 6, .sector_size = (_sector_size), .n_sectors = (_n_sectors), .page_size = 256, .flags = (_flags),#define FDT_MAX_DEPTH 32#define FDT_IS_ANY 0x1f#define FDT_ANY_GLOBAL (FDT_IS_NODE | FDT_IS_PROP | FDT_IS_VALUE | FDT_IS_COMPAT)#define FDT_NODE_HAS_PROP (1 << 4)#define FDT_IS_COMPAT (1 << 3)#define FDT_IS_VALUE (1 << 2)#define FDT_IS_PROP (1 << 1)#define FDT_IS_NODE (1 << 0)#define FDT_REG_ADD_MEM_RSVMAP (1 << 4)#define FDT_REG_ALL_SUBNODES (1 << 3)#define FDT_REG_DIRECT_SUBNODES (1 << 2)#define FDT_REG_SUPERNODES (1 << 1)#define FDT_REG_ADD_STRING_TAB (1 << 0)#define _INCLUDE_LIBFDT_H_#define __ASM_GENERIC_U_BOOT_H__#define _MEMBUFF_H#define SANDBOX_PHY_ADDR 5#define SANDBOX_PHY_REG_CNT 2#define CONFIG_NETCONSOLE_BUFFER_SIZE 512#define __ETH_H#define lower_32_bits(n) ((u32)(n))#define upper_32_bits(n) ((u32)(((n) >> 16) >> 16))#define NVME_VS(major,minor) (((major) << 16) | ((minor) << 8))#define NVME_CAP_MPSMAX(cap) (((cap) >> 52) & 0xf)#define NVME_CAP_MPSMIN(cap) (((cap) >> 48) & 0xf)#define NVME_CAP_STRIDE(cap) (((cap) >> 32) & 0xf)#define NVME_CAP_TIMEOUT(cap) (((cap) >> 24) & 0xff)#define NVME_CAP_MQES(cap) ((cap) & 0xffff)#define __DRIVER_NVME_H__#define MAX_PRP_POOL 512#define NVME_Q_DEPTH 2#define IO_TIMEOUT 30#define NVME_AQ_DEPTH 2#define NVME_CQ_SIZE(depth) (depth * sizeof(struct nvme_completion))#define NVME_SQ_SIZE(depth) (depth * sizeof(struct nvme_command))#define ADMIN_TIMEOUT 60#define ETIME 62#define PCI_CLASS_STORAGE_EXPRESS 0x010802#define pch_get_ops(dev) ((struct pch_ops *)(dev)->driver->ops)#define BIOS_CTRL_BIOSWE BIT(0)#define PCH_RCBA 0xf0#define __pch_h#define GPIO_BASE 0x44#define BIOS_CTRL 0xd8#define IO_BASE 0x4c#define GPIO_BASE 0x48#define SBASE_ADDR 0x54#define __pci_internal_h#define CONFIG_PCI_PNP 1#define PCI_CLASS_BRIDGE_PCI 0x0604#define EPIPE 32#define PCI_CLASS_DISPLAY_VGA 0x0300#define PCI_CLASS_BRIDGE_CARDBUS 0x0607#define PCI_CLASS_PROCESSOR_POWERPC 0x0b20#define CONFIG_SYS_PCI_CACHE_LINE_SIZE 8#define PCI_CLASS_NOT_DEFINED 0x0000#define PCI_BASE_CLASS_STORAGE 0x01#define PCI_BASE_CLASS_NETWORK 0x02#define PCI_BASE_CLASS_DISPLAY 0x03#define PCI_BASE_CLASS_MULTIMEDIA 0x04#define PCI_BASE_CLASS_MEMORY 0x05#define PCI_BASE_CLASS_BRIDGE 0x06#define PCI_BASE_CLASS_COMMUNICATION 0x07#define PCI_BASE_CLASS_SYSTEM 0x08#define PCI_BASE_CLASS_INPUT 0x09#define PCI_BASE_CLASS_DOCKING 0x0a#define PCI_BASE_CLASS_PROCESSOR 0x0b#define PCI_BASE_CLASS_SERIAL 0x0c#define PCI_BASE_CLASS_INTELLIGENT 0x0e#define PCI_BASE_CLASS_SATELLITE 0x0f#define PCI_BASE_CLASS_CRYPT 0x10#define PCI_BASE_CLASS_SIGNAL_PROCESSING 0x11#define PCI_CLASS_OTHERS 0xff#define PCI_HOSE_OP(rw,name,size,type) int pci_hose_ ## rw ## _config_ ## name(struct pci_controller *hose, pci_dev_t dev, int offset, type value) { return pci_ ## rw ## _config ## size(dev, offset, value); }#define M _X86EMU_env#define INTR_HALTED 0x4#define INTR_ASYNCH 0x2#define INTR_SYNCH 0x1#define SYSMODE_CLRMASK (SYSMODE_SEG_DS_SS | SYSMODE_SEGOVR_CS | SYSMODE_SEGOVR_DS | SYSMODE_SEGOVR_ES | SYSMODE_SEGOVR_FS | SYSMODE_SEGOVR_GS | SYSMODE_SEGOVR_SS | SYSMODE_PREFIX_DATA | SYSMODE_PREFIX_ADDR)#define SYSMODE_SEGMASK (SYSMODE_SEG_DS_SS | SYSMODE_SEGOVR_CS | SYSMODE_SEGOVR_DS | SYSMODE_SEGOVR_ES | SYSMODE_SEGOVR_FS | SYSMODE_SEGOVR_GS | SYSMODE_SEGOVR_SS)#define SYSMODE_HALTED 0x40000000#define SYSMODE_EXTRN_INTR 0x20000000#define SYSMODE_INTR_PENDING 0x10000000#define SYSMODE_PREFIX_ADDR 0x00000400#define SYSMODE_PREFIX_DATA 0x00000200#define SYSMODE_PREFIX_REPNE 0x00000100#define SYSMODE_PREFIX_REPE 0x00000080#define SYSMODE_SEGOVR_SS 0x00000040#define SYSMODE_SEGOVR_GS 0x00000020#define SYSMODE_SEGOVR_FS 0x00000010#define SYSMODE_SEGOVR_ES 0x00000008#define SYSMODE_SEGOVR_DS 0x00000004#define SYSMODE_SEGOVR_CS 0x00000002#define SYSMODE_SEG_DS_SS 0x00000001#define F_ALL_CALC 0xff0000#define F_SF_CALC 0x040000#define F_ZF_CALC 0x020000#define F_PF_CALC 0x010000#define CONDITIONAL_SET_FLAG(COND,FLAG) if (COND) SET_FLAG(FLAG); else CLEAR_FLAG(FLAG)#define CLEARALL_FLAG(m) (M.x86.R_FLG = 0)#define ACCESS_FLAG(flag) (M.x86.R_FLG & (flag))#define CLEAR_FLAG(flag) (M.x86.R_FLG &= ~(flag))#define SET_FLAG(flag) (M.x86.R_FLG |= (flag))#define TOGGLE_FLAG(flag) (M.x86.R_FLG ^= (flag))#define F_OF 0x0800#define F_DF 0x0400#define F_IF 0x0200#define F_TF 0x0100#define F_SF 0x0080#define F_ZF 0x0040#define F_AF 0x0010#define F_PF 0x0004#define F_CF 0x0001#define F_MSK (FB_CF|FB_PF|FB_AF|FB_ZF|FB_SF|FB_TF|FB_IF|FB_DF|FB_OF)#define F_ALWAYS_ON (0x0002)#define FB_OF 0x0800#define FB_DF 0x0400#define FB_IF 0x0200#define FB_TF 0x0100#define FB_SF 0x0080#define FB_ZF 0x0040#define FB_AF 0x0010#define FB_PF 0x0004#define FB_CF 0x0001#define R_GS seg.GS#define R_FS seg.FS#define R_ES seg.ES#define R_SS seg.SS#define R_DS seg.DS#define R_CS seg.CS#define R_EFLG spc.FLAGS#define R_EIP spc.IP.I32_reg.e_reg#define R_EDI spc.DI.I32_reg.e_reg#define R_ESI spc.SI.I32_reg.e_reg#define R_EBP spc.BP.I32_reg.e_reg#define R_ESP spc.SP.I32_reg.e_reg#define R_FLG spc.FLAGS#define R_IP spc.IP.I16_reg.x_reg#define R_DI spc.DI.I16_reg.x_reg#define R_SI spc.SI.I16_reg.x_reg#define R_BP spc.BP.I16_reg.x_reg#define R_SP spc.SP.I16_reg.x_reg#define R_EDX gen.D.I32_reg.e_reg#define R_ECX gen.C.I32_reg.e_reg#define R_EBX gen.B.I32_reg.e_reg#define R_EAX gen.A.I32_reg.e_reg#define R_DX gen.D.I16_reg.x_reg#define R_CX gen.C.I16_reg.x_reg#define R_BX gen.B.I16_reg.x_reg#define R_AX gen.A.I16_reg.x_reg#define R_DL gen.D.I8_reg.l_reg#define R_DH gen.D.I8_reg.h_reg#define R_CL gen.C.I8_reg.l_reg#define R_CH gen.C.I8_reg.h_reg#define R_BL gen.B.I8_reg.l_reg#define R_BH gen.B.I8_reg.h_reg#define R_AL gen.A.I8_reg.l_reg#define R_AH gen.A.I8_reg.h_reg#define __X86EMU_REGS_H#define _BIOS_EMUL_H#define PCI_ROM_HDR 0xaa55#define _PCI_ROM_H#define VESA_GET_CUR_MODE 0x4f03#define VESA_SET_MODE 0x4f02#define VESA_GET_MODE_INFO 0x4f01#define VESA_GET_INFO 0x4f00#define _VBE_H#define GDF__8BIT_332RGB 5#define GDF_24BIT_888RGB 4#define GDF_32BIT_X888RGB 3#define GDF_16BIT_565RGB 2#define GDF_15BIT_555RGB 1#define GDF__8BIT_INDEX 0#define _VIDEO_FB_H_#define ORIG_VIDEO_POINTS (screen_info.orig_video_points)#define ORIG_VIDEO_ISVGA (screen_info.orig_video_isVGA)#define ORIG_VIDEO_LINES (screen_info.orig_video_lines)#define ORIG_VIDEO_EGA_BX (screen_info.orig_video_ega_bx)#define ORIG_VIDEO_COLS (screen_info.orig_video_cols)#define ORIG_VIDEO_MODE (screen_info.orig_video_mode)#define ORIG_Y (screen_info.orig_y)#define ORIG_X (screen_info.orig_x)#define VIDEO_FLAGS_NOCURSOR (1 << 0)#define VIDEO_TYPE_EFI 0x70#define VIDEO_TYPE_PMAC 0x60#define VIDEO_TYPE_SUNPCI 0x51#define VIDEO_TYPE_SUN 0x50#define VIDEO_TYPE_TGAC 0x40#define VIDEO_TYPE_SGI 0x33#define VIDEO_TYPE_MIPS_G364 0x31#define VIDEO_TYPE_PICA_S3 0x30#define VIDEO_TYPE_VLFB 0x23#define VIDEO_TYPE_VGAC 0x22#define VIDEO_TYPE_EGAC 0x21#define VIDEO_TYPE_EGAM 0x20#define VIDEO_TYPE_CGA 0x11#define VIDEO_TYPE_MDA 0x10#define _SCREEN_INFO_H#define FDT_DEV_INFO_CELLS 4#define FDT_DEV_INFO_SIZE (FDT_DEV_INFO_CELLS * sizeof(u32))#define SANDBOX_PCI_DEVFN(d,f) ((d << 3) | f)#define pci_ep_get_ops(dev) ((struct pci_ep_ops *)(dev)->driver->ops)#define _PCI_EP_H#define __GENERIC_PHY_H#define CONFIG_PHY 1#define CONFIG_PINCONF 1#define CONFIG_PINMUX 1#define CONFIG_PINCTRL_FULL 1#define _POWER_DOMAIN_UCLASS_H#define __SANDBOX_POWER_DOMAIN_H#define SANDBOX_POWER_DOMAINS 3#define VOL_MAX_IDX 0x3f#define VOL_MIN_IDX 0x00#define LDO_EN_MASK 0x80#define BUCK_EN_MASK 0x80#define LDO_VOL_MASK 0x3f#define BUCK_VOL_MASK 0x3f#define ACT8846_NUM_OF_REGS 12#define _PMIC_ACT8846_H_#define MAX77686_BBCVS_3_5V (3 << 3)#define MAX77686_BBCHOSTEN (1 << 0)#define MAX77686_32KHCP_EN (1 << 1)#define MAX77686_LD10CTRL1_1_8V 0x14#define MAX77686_LD05CTRL1_1_8V 0x14#define MAX77686_LD03CTRL1_1_8V 0x14#define MAX77686_LD02CTRL1_1_5V 0x1c#define MAX77686_BUCK4CTRL_ON (1 << 4)#define MAX77686_BUCK4DVS1_1_2V 0x30#define MAX77686_BUCK3CTRL_ON (1 << 4)#define MAX77686_BUCK3DVS1_1_0125V 0x21#define MAX77686_BUCK2CTRL_ON (1 << 4)#define MAX77686_BUCK2DVS1_1_3V 0x38#define MAX77686_BUCK1CTRL_EN (3 << 0)#define MAX77686_BUCK1OUT_1_05V 0x6#define MAX77686_BUCK1OUT_1V 0x5#define MAX77686_BUCK_UV_HSTEP 50000#define MAX77686_BUCK_UV_LSTEP 12500#define MAX77686_BUCK_UV_HMIN 750000#define MAX77686_BUCK_UV_LMIN 600000#define MAX77686_LDO_UV_HSTEP 50000#define MAX77686_LDO_UV_LSTEP 25000#define MAX77686_LDO_UV_MIN 800000#define MAX77686_BUCK_MODE_ON 0x03#define MAX77686_BUCK_MODE_LPM 0x02#define MAX77686_BUCK_MODE_STANDBY 0x01#define MAX77686_BUCK_MODE_OFF 0x00#define MAX77686_BUCK_MODE_SHIFT_2 0x04#define MAX77686_BUCK_MODE_SHIFT_1 0x00#define MAX77686_BUCK_MODE_MASK 0x03#define MAX77686_BUCK_VOLT_MASK 0x3f#define MAX77686_BUCK_VOLT_MAX_HEX 0x3f#define MAX77686_BUCK234_VOLT_MASK 0xff#define MAX77686_BUCK234_VOLT_MAX_HEX 0xff#define MAX77686_LDO_MODE_ON (0x03 << 0x06)#define MAX77686_LDO_MODE_STANDBY_LPM (0x02 << 0x06)#define MAX77686_LDO_MODE_STANDBY (0x01 << 0x06)#define MAX77686_LDO_MODE_LPM (0x01 << 0x06)#define MAX77686_LDO_MODE_OFF (0x00 << 0x06)#define MAX77686_LDO_MODE_MASK 0xc0#define MAX77686_LDO_VOLT_MASK 0x3f#define MAX77686_LDO_VOLT_MAX_HEX 0x3f#define MAX77686_BUCK_DRIVER "max77686_buck"#define MAX77686_LDO_DRIVER "max77686_ldo"#define MAX77686_BUCK_NUM 9#define MAX77686_LDO_NUM 26#define MAX77686_I2C_ADDR (0x12 >> 1)#define __MAX77686_H_#define MC34708_TRANSFER_SIZE 3#define SW_MODE_PFMPFM 0x0f#define SW_MODE_PWMPFM 0x0d#define SW_MODE_APSPFM 0x0c#define SW_MODE_APSAPS 0x08#define SW_MODE_PWMAPS 0x06#define SW_MODE_PWMPWM 0x05#define SW_MODE_APSOFF 0x04#define SW_MODE_PFMOFF 0x03#define SW_MODE_PWMOFF 0x01#define SW_MODE_OFFOFF 0x00#define MC34708_SW5UOMODE 0x800000#define MC34708_SW5MHMODE 0x400000#define MC34708_SW5MODE_MASK 0x3c0000#define MC34708_SW4BUOMODE 0x020000#define MC34708_SW4BMHMODE 0x010000#define MC34708_SW4BMODE_MASK 0x00f000#define MC34708_SW4AUOMODE 0x000800#define MC34708_SW4AMHMODE 0x000400#define MC34708_SW4AMODE_MASK 0x0003c0#define MC34708_SW3UOMODE 0x000020#define MC34708_SW3MHMODE 0x000010#define MC34708_SW3MODE_MASK 0x00000f#define MC34708_REG_SW345_OPMODE 29#define MC34708_PLLX 0x800000#define MC34708_PLLEN 0x400000#define MC34708_SW2DVSSPEED 0x300000#define MC34708_SW2UOMODE 0x080000#define MC34708_SW2MHMODE 0x040000#define MC34708_SW2MODE_MASK 0x03c000#define MC34708_SW1DVSSPEED 0x0000c0#define MC34708_SW1AUOMODE 0x000020#define MC34708_SW1AMHMODE 0x000010#define MC34708_SW1AMODE_MASK 0x00000f#define MC34708_REG_SW12_OPMODE 28#define SWBST_AUTO 0x8#define SWBST_CTRL 31#define VUSBEN_MC34708 (1 << 3)#define VUSBSEL_MC34708 (1 << 2)#define TIMER_4S_MC34708 0x100#define TIMER_MASK_MC34708 0x300#define SWx_1_300V_MC34708 0x34#define SWx_1_250V_MC34708 0x30#define SWx_1_110V_MC34708 0x24#define SWx_VOLT_MASK_MC34708 0x3F#define RTCRSTI (1 << 7)#define BATTDETEN (1 << 19)#define COINCHEN (1 << 23)#define PWUP (1 << 21)#define PWGT2SPIEN (1 << 16)#define PWGT1SPIEN (1 << 15)#define GPO4STBY (1 << 13)#define GPO4EN (1 << 12)#define GPO3STBY (1 << 11)#define GPO3EN (1 << 10)#define GPO2STBY (1 << 9)#define GPO2EN (1 << 8)#define GPO1STBY (1 << 7)#define GPO1EN (1 << 6)#define __FSL_PMIC_H__#define SWITCH_SIZE 0x7#define PWM_PFM 0xd#define APS_PFM 0xc#define APS_APS 0x8#define PWM_APS 0x6#define PWM_PWM 0x5#define APS_OFF 0x4#define PFM_OFF 0x3#define PWM_OFF 0x1#define OFF_OFF 0x0#define SWBST_MODE_APS 3#define SWBST_MODE_AUTO 2#define SWBST_MODE_PFM 1#define SWBST_MODE_OFF 0#define SWBST_MODE_SHIFT 0x2#define SWBST_MODE_MASK 0xC#define SWBST_VOL_MASK 0x3#define SWBST_5_15V 3#define SWBST_5_10V 2#define SWBST_5_05V 1#define SWBST_5_00V 0#define VREFDDRCON_EN (1 << 4)#define LDO_MODE_ON 1#define LDO_MODE_OFF 0#define LDO_MODE_MASK (1 << 4)#define LDO_MODE_SHIFT 4#define LDO_EN (1 << 4)#define LDO_VOL_MASK 0xf#define LDOB_3_30V 15#define LDOB_3_20V 14#define LDOB_3_10V 13#define LDOB_3_00V 12#define LDOB_2_90V 11#define LDOB_2_80V 10#define LDOB_2_70V 9#define LDOB_2_60V 8#define LDOB_2_50V 7#define LDOB_2_40V 6#define LDOB_2_30V 5#define LDOB_2_20V 4#define LDOB_2_10V 3#define LDOB_2_00V 2#define LDOB_1_90V 1#define LDOB_1_80V 0#define LDOA_1_55V 15#define LDOA_1_50V 14#define LDOA_1_45V 13#define LDOA_1_40V 12#define LDOA_1_35V 11#define LDOA_1_30V 10#define LDOA_1_25V 9#define LDOA_1_20V 8#define LDOA_1_15V 7#define LDOA_1_10V 6#define LDOA_1_05V 5#define LDOA_1_00V 4#define LDOA_0_95V 3#define LDOA_0_90V 2#define LDOA_0_85V 1#define LDOA_0_80V 0#define SW1xCONF_DVSSPEED_16US 0xc0#define SW1xCONF_DVSSPEED_8US 0x80#define SW1xCONF_DVSSPEED_4US 0x40#define SW1xCONF_DVSSPEED_2US 0x00#define SW1xCONF_DVSSPEED_MASK 0xc0#define SW_MODE_SHIFT 0#define SW_MODE_MASK 0xf#define SW1x_OFF_MASK 0x3f#define SW1x_STBY_MASK 0x3f#define SW1x_NORMAL_MASK 0x3f#define SW1x_1_875V 63#define SW1x_1_850V 62#define SW1x_1_825V 61#define SW1x_1_800V 60#define SW1x_1_775V 59#define SW1x_1_750V 58#define SW1x_1_725V 57#define SW1x_1_700V 56#define SW1x_1_675V 55#define SW1x_1_650V 54#define SW1x_1_625V 53#define SW1x_1_600V 52#define SW1x_1_575V 51#define SW1x_1_550V 50#define SW1x_1_525V 49#define SW1x_1_500V 48#define SW1x_1_475V 47#define SW1x_1_450V 46#define SW1x_1_425V 45#define SW1x_1_400V 44#define SW1x_1_375V 43#define SW1x_1_350V 42#define SW1x_1_325V 41#define SW1x_1_300V 40#define SW1x_1_275V 39#define SW1x_1_250V 38#define SW1x_1_225V 37#define SW1x_1_200V 36#define SW1x_1_175V 35#define SW1x_1_150V 34#define SW1x_1_125V 33#define SW1x_1_100V 32#define SW1x_1_075V 31#define SW1x_1_050V 30#define SW1x_1_025V 29#define SW1x_1_000V 28#define SW1x_0_975V 27#define SW1x_0_950V 26#define SW1x_0_925V 25#define SW1x_0_900V 24#define SW1x_0_875V 23#define SW1x_0_850V 22#define SW1x_0_825V 21#define SW1x_0_800V 20#define SW1x_0_775V 19#define SW1x_0_750V 18#define SW1x_0_725V 17#define SW1x_0_700V 16#define SW1x_0_675V 15#define SW1x_0_650V 14#define SW1x_0_625V 13#define SW1x_0_600V 12#define SW1x_0_575V 11#define SW1x_0_550V 10#define SW1x_0_525V 9#define SW1x_0_500V 8#define SW1x_0_475V 7#define SW1x_0_450V 6#define SW1x_0_425V 5#define SW1x_0_400V 4#define SW1x_0_375V 3#define SW1x_0_350V 2#define SW1x_0_325V 1#define SW1x_0_300V 0#define PFUZE100_SW1ABC_SETP(x) ((x - 3000) / 250)#define PFUZE100_CONF_OFFSET 4#define PFUZE100_MODE_OFFSET 3#define PFUZE100_OFF_OFFSET 2#define PFUZE100_STBY_OFFSET 1#define PFUZE100_VOL_OFFSET 0#define PFUZE100_REGULATOR_DRIVER "pfuze100_regulator"#define __PFUZE100_PMIC_H_#define PFUZE3000_VLDO_SETP(x) ((x - 8000) / 500)#define PFUZE3000_SW3_SETP(x) ((x - 9000) / 500)#define PFUZE3000_SW1AB_SETP(x) ((x - 7000) / 250)#define __PFUZE3000_PMIC_H_#define PID_MASK (0xFF << PID_SHIFT)#define PID_SHIFT 8#define REG_MASK 0xFF#define CONFIG_PMIC_CHILDREN 1#define RK8XX_ID_MSK 0xfff0#define _PMIC_RK8XX_H_#define S2MPS11_LDO_MODE_ON (0x3 << 6)#define S2MPS11_LDO_MODE_STANDBY_LPM (0x2 << 6)#define S2MPS11_LDO_MODE_STANDBY (0x1 << 6)#define S2MPS11_LDO_MODE_OFF (0x0 << 6)#define S2MPS11_LDO_MODE_SHIFT 6#define S2MPS11_LDO_MODE_MASK 0x3#define S2MPS11_LDO_UV_MIN 800000#define S2MPS11_LDO_STEP 25000#define S2MPS11_LDO_VOLT_MAX_HEX 0x3F#define S2MPS11_LDO_VOLT_MASK 0x3F#define S2MPS11_BUCK_MODE_ON (0x3 << 6)#define S2MPS11_BUCK_MODE_STANDBY (0x1 << 6)#define S2MPS11_BUCK_MODE_OFF (0x0 << 6)#define S2MPS11_BUCK_MODE_MASK (0x3)#define S2MPS11_BUCK_MODE_SHIFT 6#define S2MPS11_BUCK9_VOLT_MAX_HEX 0x5F#define S2MPS11_BUCK7_8_10_VOLT_MAX_HEX 0xDC#define S2MPS11_BUCK5_VOLT_MAX_HEX 0xDF#define S2MPS11_BUCK_VOLT_MAX_HEX 0xA0#define S2MPS11_BUCK9_UV_MIN 1400000#define S2MPS11_BUCK_UV_HMIN 750000#define S2MPS11_BUCK_UV_MIN 600000#define S2MPS11_BUCK9_STEP 25000#define S2MPS11_BUCK_HSTEP 12500#define S2MPS11_BUCK_LSTEP 6250#define S2MPS11_BUCK9_VOLT_MASK 0x1f#define S2MPS11_BUCK_VOLT_MASK 0xff#define S2MPS11_OF_LDO_PREFIX "LDO"#define S2MPS11_LDO_DRIVER "s2mps11_ldo"#define S2MPS11_OF_BUCK_PREFIX "BUCK"#define S2MPS11_BUCK_DRIVER "s2mps11_buck"#define S2MPS11_BUCK_NUM 10#define S2MPS11_LDO_NUM 26#define S2MPS11_LDO26_ENABLE 0xec#define __S2MPS11__H__#define S5M8767_BUCK_DRIVER "s5m8767_buck"#define S5M8767_LDO_DRIVER "s5m8767_ldo"#define __S5M8767_H_#define SANDBOX_LDO2_AUTOSET_EXPECTED_ENABLE false#define SANDBOX_LDO2_AUTOSET_EXPECTED_UA -ENOSYS#define SANDBOX_LDO2_AUTOSET_EXPECTED_UV 3000000#define SANDBOX_LDO1_AUTOSET_EXPECTED_ENABLE true#define SANDBOX_LDO1_AUTOSET_EXPECTED_UA 100000#define SANDBOX_LDO1_AUTOSET_EXPECTED_UV 1800000#define SANDBOX_BUCK2_SET_UV 3300000#define SANDBOX_BUCK2_INITIAL_EXPECTED_UV 3000000#define SANDBOX_BUCK1_AUTOSET_EXPECTED_ENABLE true#define SANDBOX_BUCK1_AUTOSET_EXPECTED_UA 200000#define SANDBOX_BUCK1_AUTOSET_EXPECTED_UV 1200000#define SANDBOX_LDO2_PLATNAME "VDD_LCD_3.3V"#define SANDBOX_LDO2_DEVNAME "ldo2"#define SANDBOX_LDO1_PLATNAME "VDD_EMMC_1.8V"#define SANDBOX_LDO1_DEVNAME "ldo1"#define SANDBOX_BUCK3_PLATNAME "buck_SUPPLY_1.5V"#define SANDBOX_BUCK3_DEVNAME "no_match_by_nodename"#define SANDBOX_BUCK2_PLATNAME "SUPPLY_3.3V"#define SANDBOX_BUCK2_DEVNAME "buck2"#define SANDBOX_BUCK1_PLATNAME "SUPPLY_1.2V"#define SANDBOX_BUCK1_DEVNAME "buck1"#define OM2REG(x) (x)#define VAL2REG(min,step,val) (((val) - (min)) / (step))#define REG2VAL(min,step,reg) ((min) + ((step) * (reg)))#define OUT_LDO2_UV_STEP 50000#define OUT_LDO2_UV_MAX 3950000#define OUT_LDO2_UV_MIN 750000#define OUT_LDO1_UA_STEP 50000#define OUT_LDO1_UA_MAX 200000#define OUT_LDO1_UA_MIN 100000#define OUT_LDO1_UV_STEP 25000#define OUT_LDO1_UV_MAX 2400000#define OUT_LDO1_UV_MIN 800000#define OUT_BUCK2_UV_STEP 50000#define OUT_BUCK2_UV_MAX 3950000#define OUT_BUCK2_UV_MIN 750000#define OUT_BUCK1_UA_STEP 25000#define OUT_BUCK1_UA_MAX 250000#define OUT_BUCK1_UA_MIN 150000#define OUT_BUCK1_UV_STEP 25000#define OUT_BUCK1_UV_MAX 2400000#define OUT_BUCK1_UV_MIN 800000#define SANDBOX_LDO_COUNT 2#define SANDBOX_BUCK_COUNT 3#define SANDBOX_OF_BUCK_PREFIX "buck"#define SANDBOX_BUCK_DRIVER "sandbox_buck"#define SANDBOX_OF_LDO_PREFIX "ldo"#define SANDBOX_LDO_DRIVER "sandbox_ldo"#define _SANDBOX_PMIC_H_#define MODE(_id,_val,_name) { .id = _id, .register_value = _val, .name = _name, }#define PFUZE3000_SW1_REG(_name,base,step) { .name = #_name, .type = REGULATOR_TYPE_BUCK, .uV_step = (step), .vsel_reg = (base) + PFUZE100_VOL_OFFSET, .vsel_mask = 0x1F, .stby_reg = (base) + PFUZE100_STBY_OFFSET, .stby_mask = 0x1F, }#define PFUZE100_SWB_REG(_name,base,mask,step,voltages) { .name = #_name, .type = REGULATOR_TYPE_BUCK, .uV_step = (step), .vsel_reg = (base), .vsel_mask = (mask), .volt_table = (voltages), }#define PFUZE3000_SW3_REG(_name,base,step) { .name = #_name, .type = REGULATOR_TYPE_BUCK, .uV_step = (step), .vsel_reg = (base) + PFUZE100_VOL_OFFSET, .vsel_mask = 0xF, .stby_reg = (base) + PFUZE100_STBY_OFFSET, .stby_mask = 0xF, }#define PFUZE100_SNVS_REG(_name,base,mask,voltages) { .name = #_name, .type = REGULATOR_TYPE_OTHER, .vsel_reg = (base), .vsel_mask = (mask), .volt_table = (voltages), }#define PFUZE100_FIXED_REG(_name,base,vol) { .name = #_name, .type = REGULATOR_TYPE_FIXED, .voltage = (vol), }#define PFUZE100_VGEN_REG(_name,base,step) { .name = #_name, .type = REGULATOR_TYPE_LDO, .uV_step = (step), .vsel_reg = (base), .vsel_mask = 0xF, .stby_reg = (base), .stby_mask = 0x20, }#define PFUZE3000_VCC_REG(_name,base,step) { .name = #_name, .type = REGULATOR_TYPE_LDO, .uV_step = (step), .vsel_reg = (base), .vsel_mask = 0x3, .stby_reg = (base), .stby_mask = 0x20, }#define PFUZE100_SW_REG(_name,base,step) { .name = #_name, .type = REGULATOR_TYPE_BUCK, .uV_step = (step), .vsel_reg = (base) + PFUZE100_VOL_OFFSET, .vsel_mask = 0x3F, .stby_reg = (base) + PFUZE100_STBY_OFFSET, .stby_mask = 0x3F, }#define PFUZE3000_SW2_REG(_name,base,step) { .name = #_name, .type = REGULATOR_TYPE_BUCK, .uV_step = (step), .vsel_reg = (base) + PFUZE100_VOL_OFFSET, .vsel_mask = 0x7, .stby_reg = (base) + PFUZE100_STBY_OFFSET, .stby_mask = 0x7, }#define abs(x) ({ long ret; if (sizeof(x) == sizeof(long)) { long __x = (x); ret = (__x < 0) ? -__x : __x; } else { int __x = (x); ret = (__x < 0) ? -__x : __x; } ret; })#define _REGULATOR_COMMON_H#define RK818_USB_CHG_SD_VSEL_MASK 0x70#define RK818_USB_ILIM_SEL_MASK 0x0f#define RK818_LDO_VSEL_MASK 0x1f#define RK818_LDO3_ON_VSEL_MASK 0xf#define RK808_LDO_VSEL_MASK 0x1f#define RK808_BUCK4_VSEL_MASK 0xf#define RK818_BUCK_VSEL_MASK 0x3f#define RK818_BUCK4_VSEL_MASK 0x1f#define RK808_BUCK_VSEL_MASK 0x3f#define RK818_BOOST_ON_VSEL_MASK 0xe0#define ENABLE_DRIVER#define MODE(_id,_val,_name) [_id] = { .id = _id, .register_value = _val, .name = _name, }#define RANGE(_min,_max,_step) { .min = _min, .max = _max, .step = _step, }#define pwm_get_ops(dev) ((struct pwm_ops *)(dev)->driver->ops)#define _pwm_h_#define CONFIG_DM_PWM 1#define ram_get_ops(dev) ((struct ram_ops *)(dev)->driver->ops)#define __RAM_H#define EI_NIDENT 16#define R_RISCV_RELATIVE 3#define R_RISCV_64 2#define R_RISCV_32 1#define R_AARCH64_RELATIVE 1027#define R_AARCH64_NONE 0#define R_ARM_RELATIVE 23#define R_ARM_NONE 0#define R_PPC_TOC16 255#define R_PPC_DIAB_RELSDA_HA 185#define R_PPC_DIAB_RELSDA_HI 184#define R_PPC_DIAB_RELSDA_LO 183#define R_PPC_DIAB_SDA21_HA 182#define R_PPC_DIAB_SDA21_HI 181#define R_PPC_DIAB_SDA21_LO 180#define R_PPC_EMB_RELSDA 116#define R_PPC_EMB_BIT_FLD 115#define R_PPC_EMB_RELST_HA 114#define R_PPC_EMB_RELST_HI 113#define R_PPC_EMB_RELST_LO 112#define R_PPC_EMB_RELSEC16 111#define R_PPC_EMB_MRKREF 110#define R_PPC_EMB_SDA21 109#define R_PPC_EMB_SDA2REL 108#define R_PPC_EMB_SDA2I16 107#define R_PPC_EMB_SDAI16 106#define R_PPC_EMB_NADDR16_HA 105#define R_PPC_EMB_NADDR16_HI 104#define R_PPC_EMB_NADDR16_LO 103#define R_PPC_EMB_NADDR16 102#define R_PPC_EMB_NADDR32 101#define R_PPC_NUM 37#define R_PPC_SECTOFF_HA 36#define R_PPC_SECTOFF_HI 35#define R_PPC_SECTOFF_LO 34#define R_PPC_SECTOFF 33#define R_PPC_SDAREL16 32#define R_PPC_PLT16_HA 31#define R_PPC_PLT16_HI 30#define R_PPC_PLT16_LO 29#define R_PPC_PLTREL32 28#define R_PPC_PLT32 27#define R_PPC_REL32 26#define R_PPC_UADDR16 25#define R_PPC_UADDR32 24#define R_PPC_LOCAL24PC 23#define R_PPC_RELATIVE 22#define R_PPC_JMP_SLOT 21#define R_PPC_GLOB_DAT 20#define R_PPC_COPY 19#define R_PPC_PLTREL24 18#define R_PPC_GOT16_HA 17#define R_PPC_GOT16_HI 16#define R_PPC_GOT16_LO 15#define R_PPC_GOT16 14#define R_PPC_REL14_BRNTAKEN 13#define R_PPC_REL14_BRTAKEN 12#define R_PPC_REL14 11#define R_PPC_REL24 10#define R_PPC_ADDR14_BRNTAKEN 9#define R_PPC_ADDR14_BRTAKEN 8#define R_PPC_ADDR14 7#define R_PPC_ADDR16_HA 6#define R_PPC_ADDR16_HI 5#define R_PPC_ADDR16_LO 4#define R_PPC_ADDR16 3#define R_PPC_ADDR24 2#define R_PPC_ADDR32 1#define R_PPC_NONE 0#define EF_PPC_RELOCATABLE_LIB 0x00008000#define EF_PPC_RELOCATABLE 0x00010000#define EF_PPC64_ELFV2_ABI 0x00000002#define EF_PPC64_ELFV1_ABI 0x00000001#define EF_PPC_EMB 0x80000000#define R_X86_64_NUM 16#define R_X86_64_PC8 15#define R_X86_64_8 14#define R_X86_64_PC16 13#define R_X86_64_16 12#define R_X86_64_32S 11#define R_X86_64_32 10#define R_X86_64_GOTPCREL 9#define R_X86_64_RELATIVE 8#define R_X86_64_JUMP_SLOT 7#define R_X86_64_GLOB_DAT 6#define R_X86_64_COPY 5#define R_X86_64_PLT32 4#define R_X86_64_GOT32 3#define R_X86_64_PC32 2#define R_X86_64_64 1#define R_X86_64_NONE 0#define R_386_NUM 11#define R_386_GOTPC 10#define R_386_GOTOFF 9#define R_386_RELATIVE 8#define R_386_JMP_SLOT 7#define R_386_GLOB_DAT 6#define R_386_COPY 5#define R_386_PLT32 4#define R_386_GOT32 3#define R_386_PC32 2#define R_386_32 1#define R_386_NONE 0#define ELF_TARG_VER 1#define DF_STATIC_TLS 0x10#define DF_BIND_NOW 0x08#define DF_TEXTREL 0x04#define DF_SYMBOLIC 0x02#define DF_ORIGIN 0x01#define DT_HIPROC 0x7fffffff#define DT_LOPROC 0x70000000#define DT_HIOS 0x6fffffff#define DT_LOOS 0x60000000#define DT_NUM 34#define DT_PREINIT_ARRAYSZ 33#define DT_PREINIT_ARRAY 32#define DT_ENCODING 32#define DT_FLAGS 30#define DT_RUNPATH 29#define DT_FINI_ARRAYSZ 28#define DT_INIT_ARRAYSZ 27#define DT_FINI_ARRAY 26#define DT_INIT_ARRAY 25#define DT_BIND_NOW 24#define DT_JMPREL 23#define DT_TEXTREL 22#define DT_DEBUG 21#define DT_PLTREL 20#define DT_RELENT 19#define DT_RELSZ 18#define DT_REL 17#define DT_SYMBOLIC 16#define DT_RPATH 15#define DT_SONAME 14#define DT_FINI 13#define DT_INIT 12#define DT_SYMENT 11#define DT_STRSZ 10#define DT_RELAENT 9#define DT_RELASZ 8#define DT_RELA 7#define DT_SYMTAB 6#define DT_STRTAB 5#define DT_HASH 4#define DT_PLTGOT 3#define DT_PLTRELSZ 2#define DT_NEEDED 1#define DT_NULL 0#define ELF64_R_TYPE(i) ((i) & 0xffffffff)#define ELF64_R_SYM(i) ((i) >> 32)#define PF_MASKPROC 0xf0000000#define PF_MASKOS 0x0ff00000#define PF_R 0x4#define PF_W 0x2#define PF_X 0x1#define PT_HIPROC 0x7fffffff#define PT_LOPROC 0x70000000#define PT_HIOS 0x6fffffff#define PT_LOOS 0x60000000#define PT_NUM 8#define PT_TLS 7#define PT_PHDR 6#define PT_SHLIB 5#define PT_NOTE 4#define PT_INTERP 3#define PT_DYNAMIC 2#define PT_LOAD 1#define PT_NULL 0#define ELF32_R_INFO(s,t) (((s) << 8) + (unsigned char)(t))#define ELF32_R_TYPE(i) ((unsigned char) (i))#define ELF32_R_SYM(i) ((i) >> 8)#define STV_PROTECTED 3#define STV_HIDDEN 2#define STV_INTERNAL 1#define STV_DEFAULT 0#define STT_HIPROC 15#define STT_LOPROC 13#define STT_HIOS 12#define STT_LOOS 10#define STT_TLS 6#define STT_NUM 5#define STT_FILE 4#define STT_SECTION 3#define STT_FUNC 2#define STT_OBJECT 1#define STT_NOTYPE 0#define STB_HIPROC 15#define STB_LOPROC 13#define STB_HIOS 12#define STB_LOOS 10#define STB_NUM 3#define STB_WEAK 2#define STB_GLOBAL 1#define STB_LOCAL 0#define ELF32_ST_VISIBILITY(x) ((x) & 0x3)#define ELF32_ST_INFO(b,t) (((b) << 4) + ((t) & 0xf))#define ELF32_ST_TYPE(x) (((unsigned int) x) & 0xf)#define ELF32_ST_BIND(x) ((x) >> 4)#define STN_UNDEF 0#define GRP_MASKPROC 0xf0000000#define GRP_MASKOS 0x0ff00000#define GRP_COMDAT 0x1#define SHF_MASKPROC 0xf0000000#define SHF_MASKOS 0x0ff00000#define SHF_TLS 0x400#define SHF_GROUP 0x200#define SHF_OS_NONCONFORMING 0x100#define SHF_LINK_ORDER 0x80#define SHF_INFO_LINK 0x40#define SHF_STRINGS 0x20#define SHF_MERGE 0x10#define SHF_EXECINSTR 0x4#define SHF_ALLOC 0x2#define SHF_WRITE 0x1#define ELF_TEXT ".text"#define ELF_TDATA1 ".tdata1"#define ELF_TDATA ".tdata"#define ELF_TBSS ".tbss"#define ELF_SYMTAB_SHNDX ".symtab_shndx"#define ELF_SYMTAB ".symtab"#define ELF_STRTAB ".strtab"#define ELF_SHSTRTAB ".shstrtab"#define ELF_RODATA1 ".rodata1"#define ELF_RODATA ".rodata"#define ELF_REL_TEXT ".rel.text"#define ELF_REL_RODATA ".rel.rodata"#define ELF_REL_DYN ".rel.dyn"#define ELF_REL_INIT ".rel.init"#define ELF_REL_FINI ".rel.fini"#define ELF_REL_DATA ".rel.data"#define ELF_PREINIT_ARRAY ".preinit_array"#define ELF_PLT ".plt"#define ELF_NOTE ".note"#define ELF_LINE ".line"#define ELF_INTERP ".interp"#define ELF_INIT_ARRAY ".init_array"#define ELF_INIT ".init"#define ELF_HASH ".hash"#define ELF_GOT ".got"#define ELF_FINI_ARRAY ".fini_array"#define ELF_FINI ".fini"#define ELF_DYNSYM ".dynsym"#define ELF_DYNSTR ".dynstr"#define ELF_DYNAMIC ".dynamic"#define ELF_DEBUG ".debug"#define ELF_DATA1 ".data1"#define ELF_DATA ".data"#define ELF_COMMENT ".comment"#define ELF_BSS ".bss"#define SHT_HIUSER 0xffffffff#define SHT_LOUSER 0x80000000#define SHT_HIPROC 0x7fffffff#define SHT_LOPROC 0x70000000#define SHT_HIOS 0x6fffffff#define SHT_LOOS 0x60000000#define SHT_NUM 19#define SHT_SYMTAB_SHNDX 18#define SHT_GROUP 17#define SHT_PREINIT_ARRAY 16#define SHT_FINI_ARRAY 15#define SHT_INIT_ARRAY 14#define SHT_DYNSYM 11#define SHT_SHLIB 10#define SHT_REL 9#define SHT_NOBITS 8#define SHT_NOTE 7#define SHT_DYNAMIC 6#define SHT_HASH 5#define SHT_RELA 4#define SHT_STRTAB 3#define SHT_SYMTAB 2#define SHT_PROGBITS 1#define SHT_NULL 0#define SHN_HIRESERVE 0xffff#define SHN_XINDEX 0xffff#define SHN_COMMON 0xfff2#define SHN_ABS 0xfff1#define SHN_HIOS 0xff3f#define SHN_LOOS 0xff20#define SHN_HIPROC 0xff1f#define SHN_LOPROC 0xff00#define SHN_LORESERVE 0xff00#define SHN_UNDEF 0#define EV_NUM 2#define EV_CURRENT 1#define EV_NONE 0#define EM_NUM 92#define EM_PJ 91#define EM_MN10200 90#define EM_MN10300 89#define EM_M32R 88#define EM_V850 87#define EM_D30V 86#define EM_D10V 85#define EM_FR30 84#define EM_AVR 83#define EM_PRISM 82#define EM_HUANY 81#define EM_MMIX 80#define EM_ZSP 79#define EM_FIREPATH 78#define EM_JAVELIN 77#define EM_CHRIS 76#define EM_VAX 75#define EM_ST19 74#define EM_SVX 73#define EM_68HC05 72#define EM_68HC08 71#define EM_68HC11 70#define EM_68HC16 69#define EM_ST7 68#define EM_ST9PLUS 67#define EM_FX66 66#define EM_PDSP 63#define EM_X86_64 62#define EM_TINYJ 61#define EM_ST100 60#define EM_ME16 59#define EM_STARCORE 58#define EM_NDR1 57#define EM_NCPU 56#define EM_PCP 55#define EM_MMA 54#define EM_68HC12 53#define EM_COLDFIRE 52#define EM_MIPS_X 51#define EM_IA_64 50#define EM_H8_500 49#define EM_H8S 48#define EM_H8_300H 47#define EM_H8_300 46#define EM_ARC 45#define EM_TRICORE 44#define EM_SPARCV9 43#define EM_SH 42#define EM_ALPHA 41#define EM_ARM 40#define EM_RCE 39#define EM_RH32 38#define EM_FR20 37#define EM_V800 36#define EM_S390 22#define EM_PPC64 21#define EM_PPC 20#define EM_960 19#define EM_SPARC32PLUS 18#define EM_VPP500 17#define EM_PARISC 15#define EM_MIPS_RS4_BE 10#define EM_S370 9#define EM_MIPS 8#define EM_860 7#define EM_88K 5#define EM_68K 4#define EM_386 3#define EM_SPARC 2#define EM_M32 1#define EM_NONE 0#define ET_HIPROC 0xffff#define ET_LOPROC 0xff00#define ET_HIOS 0xfeff#define ET_LOOS 0xfe00#define ET_NUM 5#define ET_CORE 4#define ET_DYN 3#define ET_EXEC 2#define ET_REL 1#define ET_NONE 0#define IS_ELF(ehdr) ((ehdr).e_ident[EI_MAG0] == ELFMAG0 && (ehdr).e_ident[EI_MAG1] == ELFMAG1 && (ehdr).e_ident[EI_MAG2] == ELFMAG2 && (ehdr).e_ident[EI_MAG3] == ELFMAG3)#define ELFABIVERSION 0#define ELFOSABI_OPENBSD 12#define ELFOSABI_MODESTO 11#define ELFOSABI_TRU64 10#define ELFOSABI_FREEBSD 9#define ELFOSABI_IRIX 8#define ELFOSABI_AIX 7#define ELFOSABI_SOLARIS 6#define ELFOSABI_LINUX 3#define ELFOSABI_NETBSD 2#define ELFOSABI_HPUX 1#define ELFOSABI_NONE 0#define ELFDATANUM 3#define ELFDATA2MSB 2#define ELFDATA2LSB 1#define ELFDATANONE 0#define ELFCLASSNUM 3#define ELFCLASS64 2#define ELFCLASS32 1#define ELFCLASSNONE 0#define SELFMAG 4#define ELFMAG "\177ELF"#define ELFMAG3 'F'#define ELFMAG2 'L'#define ELFMAG1 'E'#define ELFMAG0 0x7f#define EI_PAD 9#define EI_ABIVERSION 8#define EI_OSABI 7#define EI_VERSION 6#define EI_DATA 5#define EI_CLASS 4#define EI_MAG3 3#define EI_MAG2 2#define EI_MAG1 1#define EI_MAG0 0#define _ELF_H#define printk_once(fmt,__VA_ARGS__...) printk(fmt, ## __VA_ARGS__)#define pr_devel(fmt,__VA_ARGS__...) no_printk(pr_fmt(fmt), ## __VA_ARGS__)#define pr_cont(fmt,__VA_ARGS__...) printk(fmt, ## __VA_ARGS__)#define pr_notice(fmt,__VA_ARGS__...) __printk(5, pr_fmt(fmt), ## __VA_ARGS__)#define pr_crit(fmt,__VA_ARGS__...) __printk(2, pr_fmt(fmt), ## __VA_ARGS__)#define pr_alert(fmt,__VA_ARGS__...) __printk(1, pr_fmt(fmt), ## __VA_ARGS__)#define pr_emerg(fmt,__VA_ARGS__...) __printk(0, pr_fmt(fmt), ## __VA_ARGS__)#define KERN_CONT#define KERN_DEBUG#define KERN_INFO#define KERN_ERR#define KERN_CRIT#define KERN_ALERT#define KERN_EMERG#define __KERNEL_PRINTK__#define pr_fmt(fmt) "%s: " fmt, __func__#define SANDBOX_RPROC_DEV_TO_PHY_OFFSET 0x1000#define _RESET_H#define CONFIG_DM_RESET 1#define _RESET_UCLASS_H#define __SANDBOX_RESET_H#define SANDBOX_RESET_SIGNALS 101#define days_in_month(a) (month_days[(a) - 1])#define days_in_year(a) (leapyear(a) ? 366 : 365)#define leapyear(year) ((year) % 4 == 0)#define SECYR (SECDAY * 365)#define SECDAY 86400L#define STARTOFTIME 1970#define FEBRUARY 2#define __asm_rtc_h#define LEAPS_THRU_END_OF(y) ((y) / 4 - (y) / 100 + (y) / 400)#define RTC_CTL_REG_ADDR 0x0F#define RTC_CTL_BIT_RST BIT(0)#define RTC_FLAG_REG_ADDR 0x0E#define RTC_FLAG_BIT_V1F BIT(0)#define RTC_FLAG_BIT_V2F BIT(1)#define RTC_SEC_REG_ADDR 0x00#define RTC_MIN_REG_ADDR 0x01#define RTC_HR_REG_ADDR 0x02#define RTC_DATE_REG_ADDR 0x04#define RTC_MON_REG_ADDR 0x05#define RTC_YR_REG_ADDR 0x06#define RTC_DAY_REG_ADDR 0x03#define REG_COUNT 0x80#define CONFIG_SYS_SCSI_MAX_DEVICE 2#define CONFIG_SYS_SCSI_MAX_SCSI_ID 8#define CONFIG_SYS_SCSI_MAX_LUN 4#define SCSI_MAX_WRITE_BLK 0xFFFF#define SCSI_MAX_READ_BLK 0xFFFF#define SCSI_LBA48_READ 0xFFFFFFF#define SCSI_DEV_LIST {SCSI_VEND_ID, SCSI_DEV_ID}#define CONFIG_SCSI_AHCI_PLAT#define CONFIG_DEBUG_UART_SANDBOX 1#define CONFIG_DM_STDIO 1#define CONFIG_SERIAL_PRESENT 1#define INDEX 0#define CONFIG_REQUIRE_SERIAL_CONSOLE 1#define CONFIG_SYS_BAUDRATE_TABLE {4800, 9600, 19200, 38400, 57600, 115200}#define smem_get_ops(dev) ((struct smem_ops *)(dev)->driver->ops)#define _smemh_#define audio_codec_get_ops(dev) ((struct audio_codec_ops *)(dev)->driver->ops)#define __AUDIO_CODEC_H__#define i2s_get_ops(dev) ((struct i2s_ops *)(dev)->driver->ops)#define FIFO_LENGTH 64#define I2S_TX_OFF 0#define I2S_TX_ON 1#define SND_SOC_CLOCK_OUT 1#define SND_SOC_CLOCK_IN 0#define SND_SOC_DAIFMT_MASTER_MASK 0xf000#define SND_SOC_DAIFMT_INV_MASK 0x0f00#define SND_SOC_DAIFMT_CLOCK_MASK 0x00f0#define SND_SOC_DAIFMT_FORMAT_MASK 0x000f#define SND_SOC_DAIFMT_CBS_CFS (4 << 12)#define SND_SOC_DAIFMT_CBM_CFS (3 << 12)#define SND_SOC_DAIFMT_CBS_CFM (2 << 12)#define SND_SOC_DAIFMT_CBM_CFM (1 << 12)#define SND_SOC_DAIFMT_IB_IF (4 << 8)#define SND_SOC_DAIFMT_IB_NF (3 << 8)#define SND_SOC_DAIFMT_NB_IF (2 << 8)#define SND_SOC_DAIFMT_NB_NF (1 << 8)#define SND_SOC_DAIFMT_LSB SND_SOC_DAIFMT_RIGHT_J#define SND_SOC_DAIFMT_MSB SND_SOC_DAIFMT_LEFT_J#define SND_SOC_DAIFMT_PDM 7#define SND_SOC_DAIFMT_AC97 6#define SND_SOC_DAIFMT_DSP_B 5#define SND_SOC_DAIFMT_DSP_A 4#define SND_SOC_DAIFMT_LEFT_J 3#define SND_SOC_DAIFMT_RIGHT_J 2#define SND_SOC_DAIFMT_I2S 1#define __I2S_H__#define LOG_CATEGORY UCLASS_SOUND#define EALREADY 114#define SOUND_BITS_IN_BYTE 8#define LOG_CATEGORY UCLASS_SPI#define CONFIG_SPI_IDLE_VAL 0xFF#define SPI_DEFAULT_SPEED_HZ 100000#define EMUL_GPIO_COUNT 4#define EMUL_GPIO_REG_END 0x46#define EMUL_PERM_R 0x1#define EMUL_PERM_RW (EMUL_PERM_R | EMUL_PERM_W)#define EMUL_PERM_W 0x2#define EMUL_GPIO_PID_START 0xC0#define EMUL_GPIO_PID_END 0xC3#define _SPMI_SPMI_H#define LOG_CATEGORY UCLASS_SYSRESET#define EINPROGRESS 115#define __SANDBOXTEE_H#define SANDBOX_TIMER_RATE 1000000#define __tpm_internal_h#define SANDBOX_TPM_PCR_NB 1#define TPM2_PROPERTIES_OFFSET 0x0000020E#define __linux_crc8_h#define TPM_RESPONSE_HEADER_LENGTH 10#define FIRMWARE_NV_INDEX 0x1007#define KERNEL_NV_INDEX 0x1008#define NV_DATA_SIZE 0x20#define ROLLBACK_SPACE_KERNEL_UID 0x4752574C#define BACKUP_NV_INDEX 0x1009#define FWMP_NV_INDEX 0x100a#define REC_HASH_NV_INDEX 0x100b#define TPM_REQUEST_HEADER_LENGTH 10#define ROLLBACK_SPACE_KERNEL_VERSION 2#define NV_DATA_PUBLIC_PERMISSIONS_OFFSET 60#define REC_HASH_NV_SIZE VB2_SHA256_DIGEST_SIZE#define __LINUX_USB_OTG_H#define __constant_cpu_to_le16(x) ((__force __le16)(__u16)(x))#define SANDBOX_NUM_PORTS 4#define backlight_get_ops(dev) ((struct backlight_ops *)(dev)->driver->ops)#define vidconsole_get_ops(dev) ((struct vidconsole_ops *)(dev)->driver->ops)#define VID_TO_POS(x) ((x) * VID_FRAC_DIV)#define VID_TO_PIXEL(x) ((x) / VID_FRAC_DIV)#define VID_FRAC_DIV 256#define __video_console_h#define VIDEO_FONT_CHARS 256#define VIDEO_FONT_SIZE (VIDEO_FONT_CHARS * VIDEO_FONT_HEIGHT)#define VIDEO_FONT_HEIGHT 16#define VIDEO_FONT_WIDTH 8#define _VIDEO_FONT_DATA_#define _VIDEO_FONT_#define CONFIG_VIDEO_BPP8 1#define CONFIG_VIDEO_BPP16 1#define CONFIG_VIDEO_BPP32 1#define STBTT_strlen(x) strlen(x)#define STBTT_ifloor tt_floor#define STBTT_malloc(size,u) ((void)(u), malloc(size))#define STBTT_free(size,u) ((void)(u), free(size))#define STBTT_MAX_OVERSAMPLE 8#define STBTT_memset memset#define STBTT__OVER_MASK (STBTT_MAX_OVERSAMPLE-1)#define STBTT_assert(x)#define STBTT__NOTUSED(v) (void)sizeof(v)#define STBTT_RASTERIZER_VERSION 2#define STBTT__COMPARE(a,b) ((a)->y0 < (b)->y0)#define STBTT_fabs tt_fabs#define STBTT_iceil tt_ceil#define ttCHAR(p) (* (stbtt_int8 *) (p))#define STBTT_sqrt tt_sqrt#define stbtt_vertex_type short#define STBTT_memcpy memcpy#define ttBYTE(p) (* (stbtt_uint8 *) (p))#define stbtt_tag(p,str) stbtt_tag4(p,str[0],str[1],str[2],str[3])#define stbtt_tag4(p,c0,c1,c2,c3) ((p)[0] == (c0) && (p)[1] == (c1) && (p)[2] == (c2) && (p)[3] == (c3))#define ttFixed(p) ttLONG(p)#define STBTT_MACSTYLE_NONE 8#define STBTT_MACSTYLE_UNDERSCORE 4#define STBTT_MACSTYLE_ITALIC 2#define STBTT_MACSTYLE_BOLD 1#define STBTT_MACSTYLE_DONTCARE 0#define STBTT_POINT_SIZE(x) (-(x))#define STBTT_DEF extern#define __STB_INCLUDE_STB_TRUETYPE_H__#define STB_TRUETYPE_IMPLEMENTATION#define CONFIG_CONSOLE_TRUETYPE_SIZE 18#define EBFONT 59#define POS_HISTORY_SIZE (CONFIG_SYS_CBSIZE * 11 / 10)#define CONFIG_CONSOLE_TRUETYPE_NIMBUS 1#define FONT_ENTRY(_name) { .name = #_name, .begin = __ttf_ ## _name ## _begin, .end = __ttf_ ## _name ## _end, }#define CONFIG_CONSOLE_TRUETYPE_CANTORAONE 1#define FONT_DECL(_name) extern u8 __ttf_ ## _name ## _begin[]; extern u8 __ttf_ ## _name ## _end[];#define FONT_IS_VALID(name) (abs(FONT_END(name) - FONT_BEGIN) > 4)#define FONT_END(name) __ttf_ ## name ## _end#define FONT_BEGIN(name) __ttf_ ## name ## _begin#define panel_get_ops(dev) ((struct panel_ops *)(dev)->driver->ops)#define _PANEL_H#define LOG_CATEGORY UCLASS_PANEL_BACKLIGHT#define _BACKLIGHT_H#define display_get_ops(dev) ((struct dm_display_ops *)(dev)->driver->ops)#define _DISPLAY_H#define UNIT_TEST(_name,_flags,_suite) ll_entry_declare(struct unit_test, _name, _suite) = { .file = __FILE__, .name = #_name, .flags = _flags, .func = _name, }#define __TEST_TEST_H#define DM_TEST(_name,_flags) UNIT_TEST(_name, _flags, dm_test)#define DM_TEST_START_TOTAL 5#define __DM_TEST_H#define CONFIG_VIDEO_ANSI 1#define CONFIG_CONSOLE_SCROLL_LINES 1#define CONFIG_CONSOLE_TRUETYPE 1#define CONFIG_VIDEO_SANDBOX_SDL 1#define CONFIG_VIDEO_BMP_RLE8#define BMP_RLE8_ESCAPE 0#define BMP_RLE8_EOL 0#define BMP_RLE8_EOBMP 1#define BMP_RLE8_DELTA 2#define VIRTIO_BLK_S_UNSUPP 2#define VIRTIO_BLK_S_IOERR 1#define VIRTIO_BLK_S_OK 0#define VIRTIO_BLK_T_BARRIER 0x80000000#define VIRTIO_BLK_T_GET_ID 8#define VIRTIO_BLK_T_FLUSH 4#define VIRTIO_BLK_T_SCSI_CMD 2#define VIRTIO_BLK_T_OUT 1#define VIRTIO_BLK_T_IN 0#define VIRTIO_BLK_ID_BYTES 20#define VIRTIO_BLK_F_CONFIG_WCE 11#define VIRTIO_BLK_F_FLUSH 9#define VIRTIO_BLK_F_SCSI 7#define VIRTIO_BLK_F_BARRIER 0#define VIRTIO_BLK_F_MQ 12#define VIRTIO_BLK_F_TOPOLOGY 10#define VIRTIO_BLK_F_BLK_SIZE 6#define VIRTIO_BLK_F_RO 5#define VIRTIO_BLK_F_GEOMETRY 4#define VIRTIO_BLK_F_SEG_MAX 2#define VIRTIO_BLK_F_SIZE_MAX 1#define _LINUX_VIRTIO_BLK_H#define typecheck(type,x) ({ type __dummy; typeof(x) __dummy2; (void)(&__dummy == &__dummy2); 1; })#define devm_ioremap(dev,offset,size) ioremap(offset, size)#define _LINUX_IO_H#define VIRTIO_MMIO_VRING_ALIGN PAGE_SIZE#define PAGE_SHIFT 12#define VIRTIO_MMIO_INT_CONFIG BIT(1)#define VIRTIO_MMIO_INT_VRING BIT(0)#define VIRTIO_MMIO_CONFIG 0x100#define VIRTIO_MMIO_CONFIG_GENERATION 0x0fc#define VIRTIO_MMIO_QUEUE_USED_HIGH 0x0a4#define VIRTIO_MMIO_QUEUE_USED_LOW 0x0a0#define VIRTIO_MMIO_QUEUE_AVAIL_HIGH 0x094#define VIRTIO_MMIO_QUEUE_AVAIL_LOW 0x090#define VIRTIO_MMIO_QUEUE_DESC_HIGH 0x084#define VIRTIO_MMIO_QUEUE_DESC_LOW 0x080#define VIRTIO_MMIO_STATUS 0x070#define VIRTIO_MMIO_INTERRUPT_ACK 0x064#define VIRTIO_MMIO_INTERRUPT_STATUS 0x060#define VIRTIO_MMIO_QUEUE_NOTIFY 0x050#define VIRTIO_MMIO_QUEUE_READY 0x044#define VIRTIO_MMIO_QUEUE_PFN 0x040#define VIRTIO_MMIO_QUEUE_ALIGN 0x03c#define VIRTIO_MMIO_QUEUE_NUM 0x038#define VIRTIO_MMIO_QUEUE_NUM_MAX 0x034#define VIRTIO_MMIO_QUEUE_SEL 0x030#define VIRTIO_MMIO_GUEST_PAGE_SIZE 0x028#define VIRTIO_MMIO_DRIVER_FEATURES_SEL 0x024#define VIRTIO_MMIO_DRIVER_FEATURES 0x020#define VIRTIO_MMIO_DEVICE_FEATURES_SEL 0x014#define VIRTIO_MMIO_DEVICE_FEATURES 0x010#define VIRTIO_MMIO_VENDOR_ID 0x00c#define VIRTIO_MMIO_DEVICE_ID 0x008#define VIRTIO_MMIO_VERSION 0x004#define VIRTIO_MMIO_MAGIC_VALUE 0x000#define _LINUX_VIRTIO_MMIO_H#define VIRTIO_NET_CTRL_GUEST_OFFLOADS_SET 0#define VIRTIO_NET_CTRL_GUEST_OFFLOADS 5#define VIRTIO_NET_CTRL_MQ_VQ_PAIRS_MAX 0x8000#define VIRTIO_NET_CTRL_MQ_VQ_PAIRS_MIN 1#define VIRTIO_NET_CTRL_MQ_VQ_PAIRS_SET 0#define VIRTIO_NET_CTRL_MQ 4#define VIRTIO_NET_CTRL_ANNOUNCE_ACK 0#define VIRTIO_NET_CTRL_ANNOUNCE 3#define VIRTIO_NET_CTRL_VLAN_DEL 1#define VIRTIO_NET_CTRL_VLAN_ADD 0#define VIRTIO_NET_CTRL_VLAN 2#define VIRTIO_NET_CTRL_MAC_ADDR_SET 1#define VIRTIO_NET_CTRL_MAC_TABLE_SET 0#define VIRTIO_NET_CTRL_MAC 1#define VIRTIO_NET_CTRL_RX_NOBCAST 5#define VIRTIO_NET_CTRL_RX_NOUNI 4#define VIRTIO_NET_CTRL_RX_NOMULTI 3#define VIRTIO_NET_CTRL_RX_ALLUNI 2#define VIRTIO_NET_CTRL_RX_ALLMULTI 1#define VIRTIO_NET_CTRL_RX_PROMISC 0#define VIRTIO_NET_CTRL_RX 0#define VIRTIO_NET_ERR 1#define VIRTIO_NET_OK 0#define VIRTIO_NET_HDR_GSO_ECN 0x80#define VIRTIO_NET_HDR_GSO_TCPV6 0x04#define VIRTIO_NET_HDR_GSO_UDP 0x03#define VIRTIO_NET_HDR_GSO_TCPV4 0x01#define VIRTIO_NET_HDR_GSO_NONE 0x00#define VIRTIO_NET_HDR_F_DATA_VALID 0x02#define VIRTIO_NET_HDR_F_NEEDS_CSUM 0x01#define VIRTIO_NET_S_ANNOUNCE 2#define VIRTIO_NET_S_LINK_UP 1#define VIRTIO_NET_F_GSO 6#define VIRTIO_NET_F_SPEED_DUPLEX 63#define VIRTIO_NET_F_CTRL_MAC_ADDR 23#define VIRTIO_NET_F_MQ 22#define VIRTIO_NET_F_GUEST_ANNOUNCE 21#define VIRTIO_NET_F_CTRL_RX_EXTRA 20#define VIRTIO_NET_F_CTRL_VLAN 19#define VIRTIO_NET_F_CTRL_RX 18#define VIRTIO_NET_F_CTRL_VQ 17#define VIRTIO_NET_F_STATUS 16#define VIRTIO_NET_F_MRG_RXBUF 15#define VIRTIO_NET_F_HOST_UFO 14#define VIRTIO_NET_F_HOST_ECN 13#define VIRTIO_NET_F_HOST_TSO6 12#define VIRTIO_NET_F_HOST_TSO4 11#define VIRTIO_NET_F_GUEST_UFO 10#define VIRTIO_NET_F_GUEST_ECN 9#define VIRTIO_NET_F_GUEST_TSO6 8#define VIRTIO_NET_F_GUEST_TSO4 7#define VIRTIO_NET_F_MAC 5#define VIRTIO_NET_F_MTU 3#define VIRTIO_NET_F_CTRL_GUEST_OFFLOADS 2#define VIRTIO_NET_F_GUEST_CSUM 1#define VIRTIO_NET_F_CSUM 0#define _LINUX_VIRTIO_NET_H#define VIRTIO_NET_RX_BUF_SIZE 1526#define VIRTIO_NET_NUM_RX_BUFS 32#define VIRTIO_PCI_COMMON_Q_USEDHI 52#define VIRTIO_PCI_COMMON_Q_USEDLO 48#define VIRTIO_PCI_COMMON_Q_AVAILHI 44#define VIRTIO_PCI_COMMON_Q_AVAILLO 40#define VIRTIO_PCI_COMMON_Q_DESCHI 36#define VIRTIO_PCI_COMMON_Q_DESCLO 32#define VIRTIO_PCI_COMMON_Q_NOFF 30#define VIRTIO_PCI_COMMON_Q_ENABLE 28#define VIRTIO_PCI_COMMON_Q_MSIX 26#define VIRTIO_PCI_COMMON_Q_SIZE 24#define VIRTIO_PCI_COMMON_Q_SELECT 22#define VIRTIO_PCI_COMMON_CFGGENERATION 21#define VIRTIO_PCI_COMMON_STATUS 20#define VIRTIO_PCI_COMMON_NUMQ 18#define VIRTIO_PCI_COMMON_MSIX 16#define VIRTIO_PCI_COMMON_GF 12#define VIRTIO_PCI_COMMON_GFSELECT 8#define VIRTIO_PCI_COMMON_DF 4#define VIRTIO_PCI_COMMON_DFSELECT 0#define VIRTIO_PCI_NOTIFY_CAP_MULT 16#define VIRTIO_PCI_CAP_LENGTH 12#define VIRTIO_PCI_CAP_OFFSET 8#define VIRTIO_PCI_CAP_BAR 4#define VIRTIO_PCI_CAP_CFG_TYPE 3#define VIRTIO_PCI_CAP_LEN 2#define VIRTIO_PCI_CAP_NEXT 1#define VIRTIO_PCI_CAP_VNDR 0#define VIRTIO_PCI_CAP_PCI_CFG 5#define VIRTIO_PCI_CAP_DEVICE_CFG 4#define VIRTIO_PCI_CAP_ISR_CFG 3#define VIRTIO_PCI_CAP_NOTIFY_CFG 2#define VIRTIO_PCI_CAP_COMMON_CFG 1#define VIRTIO_MSI_NO_VECTOR 0xffff#define VIRTIO_PCI_ISR_CONFIG 0x2#define VIRTIO_PCI_VRING_ALIGN 4096#define VIRTIO_PCI_QUEUE_ADDR_SHIFT 12#define VIRTIO_PCI_ABI_VERSION 0#define VIRTIO_PCI_CONFIG_OFF(msix) ((msix) ? 24 : 20)#define VIRTIO_MSI_QUEUE_VECTOR 22#define VIRTIO_MSI_CONFIG_VECTOR 20#define VIRTIO_PCI_ISR 19#define VIRTIO_PCI_STATUS 18#define VIRTIO_PCI_QUEUE_NOTIFY 16#define VIRTIO_PCI_QUEUE_SEL 14#define VIRTIO_PCI_QUEUE_NUM 12#define VIRTIO_PCI_QUEUE_PFN 8#define VIRTIO_PCI_GUEST_FEATURES 4#define VIRTIO_PCI_HOST_FEATURES 0#define _LINUX_VIRTIO_PCI_H#define VIRTIO_PCI_DRV_NAME "virtio-pci.l"#define VIRTIO_PCI_VENDOR_ID 0x1af4#define VIRTIO_PCI_DEVICE_ID00 0x1000#define VIRTIO_PCI_DEVICE_ID01 0x1001#define VIRTIO_PCI_DEVICE_ID02 0x1002#define VIRTIO_PCI_DEVICE_ID03 0x1003#define VIRTIO_PCI_DEVICE_ID04 0x1004#define VIRTIO_PCI_DEVICE_ID05 0x1005#define VIRTIO_PCI_DEVICE_ID06 0x1006#define VIRTIO_PCI_DEVICE_ID07 0x1007#define VIRTIO_PCI_DEVICE_ID08 0x1008#define VIRTIO_PCI_DEVICE_ID09 0x1009#define VIRTIO_PCI_DEVICE_ID0A 0x100a#define VIRTIO_PCI_DEVICE_ID0B 0x100b#define VIRTIO_PCI_DEVICE_ID0C 0x100c#define VIRTIO_PCI_DEVICE_ID0D 0x100d#define VIRTIO_PCI_DEVICE_ID0E 0x100e#define VIRTIO_PCI_DEVICE_ID0F 0x100f#define VIRTIO_PCI_DEVICE_ID10 0x1010#define VIRTIO_PCI_DEVICE_ID11 0x1011#define VIRTIO_PCI_DEVICE_ID12 0x1012#define VIRTIO_PCI_DEVICE_ID13 0x1013#define VIRTIO_PCI_DEVICE_ID14 0x1014#define VIRTIO_PCI_DEVICE_ID15 0x1015#define VIRTIO_PCI_DEVICE_ID16 0x1016#define VIRTIO_PCI_DEVICE_ID17 0x1017#define VIRTIO_PCI_DEVICE_ID18 0x1018#define VIRTIO_PCI_DEVICE_ID19 0x1019#define VIRTIO_PCI_DEVICE_ID1A 0x101a#define VIRTIO_PCI_DEVICE_ID1B 0x101b#define VIRTIO_PCI_DEVICE_ID1C 0x101c#define VIRTIO_PCI_DEVICE_ID1D 0x101d#define VIRTIO_PCI_DEVICE_ID1E 0x101e#define VIRTIO_PCI_DEVICE_ID1F 0x101f#define VIRTIO_PCI_DEVICE_ID20 0x1020#define VIRTIO_PCI_DEVICE_ID21 0x1021#define VIRTIO_PCI_DEVICE_ID22 0x1022#define VIRTIO_PCI_DEVICE_ID23 0x1023#define VIRTIO_PCI_DEVICE_ID24 0x1024#define VIRTIO_PCI_DEVICE_ID25 0x1025#define VIRTIO_PCI_DEVICE_ID26 0x1026#define VIRTIO_PCI_DEVICE_ID27 0x1027#define VIRTIO_PCI_DEVICE_ID28 0x1028#define VIRTIO_PCI_DEVICE_ID29 0x1029#define VIRTIO_PCI_DEVICE_ID2A 0x102a#define VIRTIO_PCI_DEVICE_ID2B 0x102b#define VIRTIO_PCI_DEVICE_ID2C 0x102c#define VIRTIO_PCI_DEVICE_ID2D 0x102d#define VIRTIO_PCI_DEVICE_ID2E 0x102e#define VIRTIO_PCI_DEVICE_ID2F 0x102f#define VIRTIO_PCI_DEVICE_ID30 0x1030#define VIRTIO_PCI_DEVICE_ID31 0x1031#define VIRTIO_PCI_DEVICE_ID32 0x1032#define VIRTIO_PCI_DEVICE_ID33 0x1033#define VIRTIO_PCI_DEVICE_ID34 0x1034#define VIRTIO_PCI_DEVICE_ID35 0x1035#define VIRTIO_PCI_DEVICE_ID36 0x1036#define VIRTIO_PCI_DEVICE_ID37 0x1037#define VIRTIO_PCI_DEVICE_ID38 0x1038#define VIRTIO_PCI_DEVICE_ID39 0x1039#define VIRTIO_PCI_DEVICE_ID3A 0x103a#define VIRTIO_PCI_DEVICE_ID3B 0x103b#define VIRTIO_PCI_DEVICE_ID3C 0x103c#define VIRTIO_PCI_DEVICE_ID3D 0x103d#define VIRTIO_PCI_DEVICE_ID3E 0x103e#define VIRTIO_PCI_DEVICE_ID3F 0x103f#define VIRTIO_PCI_DRV_NAME "virtio-pci.m"#define VIRTIO_PCI_DEVICE_ID00 0x1040#define VIRTIO_PCI_DEVICE_ID01 0x1041#define VIRTIO_PCI_DEVICE_ID02 0x1042#define VIRTIO_PCI_DEVICE_ID03 0x1043#define VIRTIO_PCI_DEVICE_ID04 0x1044#define VIRTIO_PCI_DEVICE_ID05 0x1045#define VIRTIO_PCI_DEVICE_ID06 0x1046#define VIRTIO_PCI_DEVICE_ID07 0x1047#define VIRTIO_PCI_DEVICE_ID08 0x1048#define VIRTIO_PCI_DEVICE_ID09 0x1049#define VIRTIO_PCI_DEVICE_ID0A 0x104a#define VIRTIO_PCI_DEVICE_ID0B 0x104b#define VIRTIO_PCI_DEVICE_ID0C 0x104c#define VIRTIO_PCI_DEVICE_ID0D 0x104d#define VIRTIO_PCI_DEVICE_ID0E 0x104e#define VIRTIO_PCI_DEVICE_ID0F 0x104f#define VIRTIO_PCI_DEVICE_ID10 0x1050#define VIRTIO_PCI_DEVICE_ID11 0x1051#define VIRTIO_PCI_DEVICE_ID12 0x1052#define VIRTIO_PCI_DEVICE_ID13 0x1053#define VIRTIO_PCI_DEVICE_ID14 0x1054#define VIRTIO_PCI_DEVICE_ID15 0x1055#define VIRTIO_PCI_DEVICE_ID16 0x1056#define VIRTIO_PCI_DEVICE_ID17 0x1057#define VIRTIO_PCI_DEVICE_ID18 0x1058#define VIRTIO_PCI_DEVICE_ID19 0x1059#define VIRTIO_PCI_DEVICE_ID1A 0x105a#define VIRTIO_PCI_DEVICE_ID1B 0x105b#define VIRTIO_PCI_DEVICE_ID1C 0x105c#define VIRTIO_PCI_DEVICE_ID1D 0x105d#define VIRTIO_PCI_DEVICE_ID1E 0x105e#define VIRTIO_PCI_DEVICE_ID1F 0x105f#define VIRTIO_PCI_DEVICE_ID20 0x1060#define VIRTIO_PCI_DEVICE_ID21 0x1061#define VIRTIO_PCI_DEVICE_ID22 0x1062#define VIRTIO_PCI_DEVICE_ID23 0x1063#define VIRTIO_PCI_DEVICE_ID24 0x1064#define VIRTIO_PCI_DEVICE_ID25 0x1065#define VIRTIO_PCI_DEVICE_ID26 0x1066#define VIRTIO_PCI_DEVICE_ID27 0x1067#define VIRTIO_PCI_DEVICE_ID28 0x1068#define VIRTIO_PCI_DEVICE_ID29 0x1069#define VIRTIO_PCI_DEVICE_ID2A 0x106a#define VIRTIO_PCI_DEVICE_ID2B 0x106b#define VIRTIO_PCI_DEVICE_ID2C 0x106c#define VIRTIO_PCI_DEVICE_ID2D 0x106d#define VIRTIO_PCI_DEVICE_ID2E 0x106e#define VIRTIO_PCI_DEVICE_ID2F 0x106f#define VIRTIO_PCI_DEVICE_ID30 0x1070#define VIRTIO_PCI_DEVICE_ID31 0x1071#define VIRTIO_PCI_DEVICE_ID32 0x1072#define VIRTIO_PCI_DEVICE_ID33 0x1073#define VIRTIO_PCI_DEVICE_ID34 0x1074#define VIRTIO_PCI_DEVICE_ID35 0x1075#define VIRTIO_PCI_DEVICE_ID36 0x1076#define VIRTIO_PCI_DEVICE_ID37 0x1077#define VIRTIO_PCI_DEVICE_ID38 0x1078#define VIRTIO_PCI_DEVICE_ID39 0x1079#define VIRTIO_PCI_DEVICE_ID3A 0x107a#define VIRTIO_PCI_DEVICE_ID3B 0x107b#define VIRTIO_PCI_DEVICE_ID3C 0x107c#define VIRTIO_PCI_DEVICE_ID3D 0x107d#define VIRTIO_PCI_DEVICE_ID3E 0x107e#define VIRTIO_PCI_DEVICE_ID3F 0x107f#define WRITE_ONCE(x,val) ({ union { typeof(x) __val; char __c[1]; } __u = { .__val = (__force typeof(x)) (val) }; __write_once_size(&(x), __u.__c, sizeof(x)); __u.__val; })#define vring_avail_event(vr) (*(__virtio16 *)&(vr)->used->ring[(vr)->num])#define vring_used_event(vr) ((vr)->avail->ring[(vr)->num])#define VRING_DESC_ALIGN_SIZE 16#define VRING_USED_ALIGN_SIZE 4#define VRING_AVAIL_ALIGN_SIZE 2#define VIRTIO_RING_F_EVENT_IDX 29#define VIRTIO_RING_F_INDIRECT_DESC 28#define VRING_AVAIL_F_NO_INTERRUPT 1#define VRING_USED_F_NO_NOTIFY 1#define VRING_DESC_F_INDIRECT 4#define VRING_DESC_F_WRITE 2#define VRING_DESC_F_NEXT 1#define _LINUX_VIRTIO_RING_H#define uninitialized_var(x) x = x#define W1_TIMING_G 0#define W1_TIMING_H 480#define W1_TIMING_I 70#define W1_TIMING_J 410#define W1_TIMING_A 6#define W1_TIMING_C 60#define W1_TIMING_B 64#define W1_TIMING_D 10#define W1_TIMING_E 9#define W1_TIMING_F 55#define W1_MATCH_ROM 0x55#define W1_SEARCH 0xf0#define W1_SKIP_ROM 0xcc#define EEP_SANDBOX_SAMPLE_MEM "this is a sample EEPROM memory string."#define W1_F2D_READ_EEPROM 0xf0#define MEM_LAYOUT_ENV_SETTINGS "bootm_size=0x10000000\0" "kernel_addr_r=0x1000000\0" "fdt_addr_r=0xc00000\0" "ramdisk_addr_r=0x2000000\0" "scriptaddr=0x1000\0" "pxefile_addr_r=0x2000\0"#define CONFIG_EXTRA_ENV_SETTINGS SANDBOX_SERIAL_SETTINGS SANDBOX_ETH_SETTINGS BOOTENV MEM_LAYOUT_ENV_SETTINGS#define BOOTENV_SET_VIRTIO_NEED_INIT "virtio_need_init=; "#define BOOTENV BOOTENV_SHARED_HOST BOOTENV_SHARED_MMC BOOTENV_SHARED_PCI BOOTENV_SHARED_USB BOOTENV_SHARED_SATA BOOTENV_SHARED_SCSI BOOTENV_SHARED_NVME BOOTENV_SHARED_IDE BOOTENV_SHARED_UBIFS BOOTENV_SHARED_EFI BOOTENV_SHARED_VIRTIO "boot_prefixes=/ /boot/\0" "boot_scripts=boot.scr.uimg boot.scr\0" "boot_script_dhcp=boot.scr.uimg\0" BOOTENV_BOOT_TARGETS "boot_syslinux_conf=extlinux/extlinux.conf\0" "boot_extlinux=" "sysboot ${devtype} ${devnum}:${distro_bootpart} any " "${scriptaddr} ${prefix}${boot_syslinux_conf}\0" "scan_dev_for_extlinux=" "if test -e ${devtype} " "${devnum}:${distro_bootpart} " "${prefix}${boot_syslinux_conf}; then " "echo Found ${prefix}${boot_syslinux_conf}; " "run boot_extlinux; " "echo SCRIPT FAILED: continuing...; " "fi\0" "boot_a_script=" "load ${devtype} ${devnum}:${distro_bootpart} " "${scriptaddr} ${prefix}${script}; " "source ${scriptaddr}\0" "scan_dev_for_scripts=" "for script in ${boot_scripts}; do " "if test -e ${devtype} " "${devnum}:${distro_bootpart} " "${prefix}${script}; then " "echo Found U-Boot script " "${prefix}${script}; " "run boot_a_script; " "echo SCRIPT FAILED: continuing...; " "fi; " "done\0" "scan_dev_for_boot=" "echo Scanning ${devtype} " "${devnum}:${distro_bootpart}...; " "for prefix in ${boot_prefixes}; do " "run scan_dev_for_extlinux; " "run scan_dev_for_scripts; " "done;" SCAN_DEV_FOR_EFI "\0" "scan_dev_for_boot_part=" "part list ${devtype} ${devnum} -bootable devplist; " "env exists devplist || setenv devplist 1; " "for distro_bootpart in ${devplist}; do " "if fstype ${devtype} " "${devnum}:${distro_bootpart} " "bootfstype; then " "run scan_dev_for_boot; " "fi; " "done; " "setenv devplist\0" BOOT_TARGET_DEVICES(BOOTENV_DEV) "distro_bootcmd=" BOOTENV_SET_SCSI_NEED_INIT BOOTENV_SET_NVME_NEED_INIT BOOTENV_SET_IDE_NEED_INIT BOOTENV_SET_VIRTIO_NEED_INIT "for target in ${boot_targets}; do " "run bootcmd_${target}; " "done\0"#define BOOTENV_SET_IDE_NEED_INIT "setenv ide_need_init; "#define BOOTENV_SET_NVME_NEED_INIT "setenv nvme_need_init; "#define BOOTENV_SET_SCSI_NEED_INIT "scsi_need_init=; "#define BOOTENV_DEV_BLKDEV(devtypeu,devtypel,instance) "bootcmd_" #devtypel #instance "=" "devnum=" #instance "; " "run " #devtypel "_boot\0"#define BOOTENV_DEV_HOST BOOTENV_DEV_BLKDEV#define BOOTENV_DEV(devtypeu,devtypel,instance) BOOTENV_DEV_ ## devtypeu(devtypeu, devtypel, instance)#define BOOT_TARGET_DEVICES(func) func(HOST, host, 1) func(HOST, host, 0)#define SCAN_DEV_FOR_EFI#define BOOTENV_DEV_NAME_BLKDEV(devtypeu,devtypel,instance) #devtypel #instance " "#define BOOTENV_DEV_NAME_HOST BOOTENV_DEV_NAME_BLKDEV#define BOOTENV_DEV_NAME(devtypeu,devtypel,instance) BOOTENV_DEV_NAME_ ## devtypeu(devtypeu, devtypel, instance)#define BOOTENV_BOOT_TARGETS "boot_targets=" BOOT_TARGET_DEVICES(BOOTENV_DEV_NAME) "\0"#define BOOTENV_SHARED_BLKDEV_BODY(devtypel) "if " #devtypel " dev ${devnum}; then " "devtype=" #devtypel "; " "run scan_dev_for_boot_part; " "fi\0"#define BOOTENV_SHARED_VIRTIO "virtio_init=" "if ${virtio_need_init}; then " "virtio_need_init=false; " "virtio scan; " "fi\0" "virtio_boot=" BOOTENV_RUN_PCI_ENUM BOOTENV_RUN_VIRTIO_INIT BOOTENV_SHARED_BLKDEV_BODY(virtio)#define BOOTENV_RUN_VIRTIO_INIT "run virtio_init; "#define BOOTENV_RUN_PCI_ENUM "run boot_pci_enum; "#define BOOTENV_SHARED_EFI#define BOOTENV_SHARED_UBIFS#define BOOTENV_SHARED_IDE "ide_init=" "if ${ide_need_init}; then " "setenv ide_need_init false; " "ide reset; " "fi\0" "ide_boot=" BOOTENV_RUN_IDE_INIT BOOTENV_SHARED_BLKDEV_BODY(ide)#define BOOTENV_RUN_IDE_INIT "run ide_init; "#define BOOTENV_SHARED_NVME "nvme_init=" "if ${nvme_need_init}; then " "setenv nvme_need_init false; " "nvme scan; " "fi\0" "nvme_boot=" BOOTENV_RUN_NVME_INIT BOOTENV_SHARED_BLKDEV_BODY(nvme)#define BOOTENV_RUN_NVME_INIT "run nvme_init; "#define BOOTENV_SHARED_SCSI "scsi_init=" "if ${scsi_need_init}; then " "scsi_need_init=false; " "scsi scan; " "fi\0" "scsi_boot=" BOOTENV_RUN_SCSI_INIT BOOTENV_SHARED_BLKDEV_BODY(scsi)#define BOOTENV_RUN_SCSI_INIT "run scsi_init; "#define BOOTENV_SHARED_BLKDEV(devtypel) #devtypel "_boot=" BOOTENV_SHARED_BLKDEV_BODY(devtypel)#define BOOTENV_SHARED_SATA BOOTENV_SHARED_BLKDEV(sata)#define BOOTENV_SHARED_USB "boot_net_usb_start=usb start\0" "usb_boot=" "usb start; " BOOTENV_SHARED_BLKDEV_BODY(usb)#define BOOTENV_SHARED_PCI "boot_pci_enum=pci enum\0"#define BOOTENV_SHARED_MMC#define BOOTENV_SHARED_HOST BOOTENV_SHARED_BLKDEV(host)#define SANDBOX_ETH_SETTINGS "ethaddr=00:00:11:22:33:44\0" "eth1addr=00:00:11:22:33:45\0" "eth3addr=00:00:11:22:33:46\0" "eth5addr=00:00:11:22:33:47\0" "ipaddr=1.2.3.4\0"#define SANDBOX_SERIAL_SETTINGS "stdin=serial,cros-ec-keyb,usbkbd\0" "stdout=serial,vidconsole\0" "stderr=serial,vidconsole\0"#define CONFIG_BOOTCOUNT_BOOTLIMIT 0#define CONFIG_SYS_BOARD "sandbox"#define CONFIG_SYS_CPU "sandbox"#define CONFIG_ENV_VARS_UBOOT_CONFIG 1#define CONFIG_BOOTCOMMAND "run distro_bootcmd"#define ENOMSG 42#define ENV_FLAGS_NET_VARTYPE_REPS "im"#define BTRFS_UUID_SIZE 16#define BTRFS_EXTENDED_PROFILE_MASK (BTRFS_BLOCK_GROUP_PROFILE_MASK | BTRFS_AVAIL_ALLOC_BIT_SINGLE)#define BTRFS_SPACE_INFO_GLOBAL_RSV (1ULL << 49)#define BTRFS_AVAIL_ALLOC_BIT_SINGLE (1ULL << 48)#define BTRFS_BLOCK_GROUP_RAID56_MASK (BTRFS_BLOCK_GROUP_RAID5 | BTRFS_BLOCK_GROUP_RAID6)#define BTRFS_BLOCK_GROUP_PROFILE_MASK (BTRFS_BLOCK_GROUP_RAID0 | BTRFS_BLOCK_GROUP_RAID1 | BTRFS_BLOCK_GROUP_RAID5 | BTRFS_BLOCK_GROUP_RAID6 | BTRFS_BLOCK_GROUP_DUP | BTRFS_BLOCK_GROUP_RAID10)#define BTRFS_BLOCK_GROUP_TYPE_MASK (BTRFS_BLOCK_GROUP_DATA | BTRFS_BLOCK_GROUP_SYSTEM | BTRFS_BLOCK_GROUP_METADATA)#define BTRFS_BLOCK_GROUP_RESERVED (BTRFS_AVAIL_ALLOC_BIT_SINGLE | BTRFS_SPACE_INFO_GLOBAL_RSV)#define BTRFS_BLOCK_GROUP_RAID6 (1ULL << 8)#define BTRFS_BLOCK_GROUP_RAID5 (1ULL << 7)#define BTRFS_BLOCK_GROUP_RAID10 (1ULL << 6)#define BTRFS_BLOCK_GROUP_DUP (1ULL << 5)#define BTRFS_BLOCK_GROUP_RAID1 (1ULL << 4)#define BTRFS_BLOCK_GROUP_RAID0 (1ULL << 3)#define BTRFS_BLOCK_GROUP_METADATA (1ULL << 2)#define BTRFS_BLOCK_GROUP_SYSTEM (1ULL << 1)#define BTRFS_BLOCK_GROUP_DATA (1ULL << 0)#define BTRFS_FILE_EXTENT_PREALLOC 2#define BTRFS_FILE_EXTENT_REG 1#define BTRFS_FILE_EXTENT_INLINE 0#define BTRFS_ROOT_SUBVOL_DEAD (1ULL << 48)#define BTRFS_ROOT_SUBVOL_RDONLY (1ULL << 0)#define BTRFS_EXTENT_FLAG_SUPER (1ULL << 48)#define BTRFS_BLOCK_FLAG_FULL_BACKREF (1ULL << 8)#define BTRFS_EXTENT_FLAG_TREE_BLOCK (1ULL << 1)#define BTRFS_EXTENT_FLAG_DATA (1ULL << 0)#define BTRFS_SUPER_FLAG_METADUMP (1ULL << 33)#define BTRFS_SUPER_FLAG_SEEDING (1ULL << 32)#define BTRFS_SUPER_FLAG_ERROR (1ULL << 2)#define BTRFS_HEADER_FLAG_RELOC (1ULL << 1)#define BTRFS_HEADER_FLAG_WRITTEN (1ULL << 0)#define BTRFS_FREE_SPACE_BITMAP 2#define BTRFS_FREE_SPACE_EXTENT 1#define BTRFS_FT_MAX 9#define BTRFS_FT_XATTR 8#define BTRFS_FT_SYMLINK 7#define BTRFS_FT_SOCK 6#define BTRFS_FT_FIFO 5#define BTRFS_FT_BLKDEV 4#define BTRFS_FT_CHRDEV 3#define BTRFS_FT_DIR 2#define BTRFS_FT_REG_FILE 1#define BTRFS_FT_UNKNOWN 0#define BTRFS_CSUM_TYPE_CRC32 0#define BTRFS_CSUM_SIZE 32#define BTRFS_STRING_ITEM_KEY 253#define BTRFS_UUID_KEY_RECEIVED_SUBVOL 252#define BTRFS_UUID_KEY_SUBVOL 251#define BTRFS_DEV_REPLACE_KEY 250#define BTRFS_PERSISTENT_ITEM_KEY 249#define BTRFS_DEV_STATS_KEY 249#define BTRFS_TEMPORARY_ITEM_KEY 248#define BTRFS_BALANCE_ITEM_KEY 248#define BTRFS_QGROUP_RELATION_KEY 246#define BTRFS_QGROUP_LIMIT_KEY 244#define BTRFS_QGROUP_INFO_KEY 242#define BTRFS_QGROUP_STATUS_KEY 240#define BTRFS_CHUNK_ITEM_KEY 228#define BTRFS_DEV_ITEM_KEY 216#define BTRFS_DEV_EXTENT_KEY 204#define BTRFS_FREE_SPACE_BITMAP_KEY 200#define BTRFS_FREE_SPACE_EXTENT_KEY 199#define BTRFS_FREE_SPACE_INFO_KEY 198#define BTRFS_BLOCK_GROUP_ITEM_KEY 192#define BTRFS_SHARED_DATA_REF_KEY 184#define BTRFS_SHARED_BLOCK_REF_KEY 182#define BTRFS_EXTENT_REF_V0_KEY 180#define BTRFS_EXTENT_DATA_REF_KEY 178#define BTRFS_TREE_BLOCK_REF_KEY 176#define BTRFS_METADATA_ITEM_KEY 169#define BTRFS_EXTENT_ITEM_KEY 168#define BTRFS_ROOT_REF_KEY 156#define BTRFS_ROOT_BACKREF_KEY 144#define BTRFS_ROOT_ITEM_KEY 132#define BTRFS_EXTENT_CSUM_KEY 128#define BTRFS_EXTENT_DATA_KEY 108#define BTRFS_DIR_INDEX_KEY 96#define BTRFS_DIR_ITEM_KEY 84#define BTRFS_DIR_LOG_INDEX_KEY 72#define BTRFS_DIR_LOG_ITEM_KEY 60#define BTRFS_ORPHAN_ITEM_KEY 48#define BTRFS_XATTR_ITEM_KEY 24#define BTRFS_INODE_EXTREF_KEY 13#define BTRFS_INODE_REF_KEY 12#define BTRFS_INODE_ITEM_KEY 1#define BTRFS_DEV_REPLACE_DEVID 0ULL#define BTRFS_EMPTY_SUBVOL_DIR_OBJECTID 2#define BTRFS_BTREE_INODE_OBJECTID 1#define BTRFS_DEV_ITEMS_OBJECTID 1ULL#define BTRFS_FIRST_CHUNK_TREE_OBJECTID 256ULL#define BTRFS_LAST_FREE_OBJECTID -256ULL#define BTRFS_FIRST_FREE_OBJECTID 256ULL#define BTRFS_MULTIPLE_OBJECTIDS -255ULL#define BTRFS_FREE_INO_OBJECTID -12ULL#define BTRFS_FREE_SPACE_OBJECTID -11ULL#define BTRFS_EXTENT_CSUM_OBJECTID -10ULL#define BTRFS_DATA_RELOC_TREE_OBJECTID -9ULL#define BTRFS_TREE_RELOC_OBJECTID -8ULL#define BTRFS_TREE_LOG_FIXUP_OBJECTID -7ULL#define BTRFS_TREE_LOG_OBJECTID -6ULL#define BTRFS_ORPHAN_OBJECTID -5ULL#define BTRFS_BALANCE_OBJECTID -4ULL#define BTRFS_DEV_STATS_OBJECTID 0ULL#define BTRFS_FREE_SPACE_TREE_OBJECTID 10ULL#define BTRFS_UUID_TREE_OBJECTID 9ULL#define BTRFS_QUOTA_TREE_OBJECTID 8ULL#define BTRFS_CSUM_TREE_OBJECTID 7ULL#define BTRFS_ROOT_TREE_DIR_OBJECTID 6ULL#define BTRFS_FS_TREE_OBJECTID 5ULL#define BTRFS_DEV_TREE_OBJECTID 4ULL#define BTRFS_CHUNK_TREE_OBJECTID 3ULL#define BTRFS_EXTENT_TREE_OBJECTID 2ULL#define BTRFS_ROOT_TREE_OBJECTID 1ULL#define BTRFS_FSID_SIZE 16#define BTRFS_LABEL_SIZE 256#define BTRFS_NAME_MAX 255#define BTRFS_VOL_NAME_MAX 255#define __BTRFS_BTRFS_TREE_H__#define BTRFS_MAX_LEVEL 8#define BTRFS_NUM_BACKUP_ROOTS 4#define BTRFS_SYSTEM_CHUNK_ARRAY_SIZE 2048#define btrfs_path_item_ptr(p,t) ((t *) btrfs_path_leaf_data((p)))#define btrfs_item_ptr(l,s,t) ((t *) btrfs_leaf_data((l),(s)))#define BTRFS_FEATURE_INCOMPAT_SAFE_CLEAR 0ULL#define BTRFS_FEATURE_INCOMPAT_SAFE_SET (BTRFS_FEATURE_INCOMPAT_EXTENDED_IREF)#define BTRFS_FEATURE_INCOMPAT_SUPP (BTRFS_FEATURE_INCOMPAT_MIXED_BACKREF | BTRFS_FEATURE_INCOMPAT_DEFAULT_SUBVOL | BTRFS_FEATURE_INCOMPAT_MIXED_GROUPS | BTRFS_FEATURE_INCOMPAT_BIG_METADATA | BTRFS_FEATURE_INCOMPAT_COMPRESS_LZO | BTRFS_FEATURE_INCOMPAT_RAID56 | BTRFS_FEATURE_INCOMPAT_EXTENDED_IREF | BTRFS_FEATURE_INCOMPAT_SKINNY_METADATA | BTRFS_FEATURE_INCOMPAT_NO_HOLES)#define BTRFS_FEATURE_COMPAT_RO_SAFE_CLEAR 0ULL#define BTRFS_FEATURE_COMPAT_RO_SAFE_SET 0ULL#define BTRFS_FEATURE_COMPAT_RO_SUPP (BTRFS_FEATURE_COMPAT_RO_FREE_SPACE_TREE | BTRFS_FEATURE_COMPAT_RO_FREE_SPACE_TREE_VALID)#define BTRFS_FEATURE_COMPAT_SAFE_CLEAR 0ULL#define BTRFS_FEATURE_COMPAT_SAFE_SET 0ULL#define BTRFS_FEATURE_COMPAT_SUPP 0ULL#define BTRFS_MIXED_BACKREF_REV 1#define BTRFS_OLD_BACKREF_REV 0#define BTRFS_BACKREF_REV_MASK (((u64)BTRFS_BACKREF_REV_MAX - 1) << BTRFS_BACKREF_REV_SHIFT)#define BTRFS_BACKREF_REV_SHIFT 56#define BTRFS_BACKREF_REV_MAX 256#define BTRFS_FS_STATE_DUMMY_FS_INFO 4#define BTRFS_FS_STATE_DEV_REPLACING 3#define BTRFS_FS_STATE_TRANS_ABORTED 2#define BTRFS_FS_STATE_REMOUNTING 1#define BTRFS_FS_STATE_ERROR 0#define BTRFS_MAX_EXTENT_SIZE SZ_128M#define BTRFS_DIRTY_METADATA_THRESH SZ_32M#define BTRFS_IOPRIO_READA (IOPRIO_PRIO_VALUE(IOPRIO_CLASS_IDLE, 0))#define BTRFS_EMPTY_DIR_SIZE 0#define BTRFS_LINK_MAX 65535U#define BTRFS_NAME_LEN 255#define BTRFS_MAX_METADATA_BLOCKSIZE 65536#define BTRFS_COMPAT_EXTENT_TREE_V0#define BTRFS_MAX_MIRRORS 3#define BTRFS_MAGIC 0x4D5F53665248425FULL#define __BTRFS_CTREE_H__#define CALL_MACRO_FOR_EACH(x,__VA_ARGS__...) _VM_GET_NTH_ARG("", ## __VA_ARGS__, _VM_HELP_31, _VM_HELP_30, _VM_HELP_29, _VM_HELP_28, _VM_HELP_27, _VM_HELP_26, _VM_HELP_25, _VM_HELP_24, _VM_HELP_23, _VM_HELP_22, _VM_HELP_21, _VM_HELP_20, _VM_HELP_19, _VM_HELP_18, _VM_HELP_17, _VM_HELP_16, _VM_HELP_15, _VM_HELP_14, _VM_HELP_13, _VM_HELP_12, _VM_HELP_11, _VM_HELP_10, _VM_HELP_9, _VM_HELP_8, _VM_HELP_7, _VM_HELP_6, _VM_HELP_5, _VM_HELP_4, _VM_HELP_3, _VM_HELP_2, _VM_HELP_1, _VM_HELP_0)(x, __VA_ARGS__)#define _VM_HELP_31(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_30(_call, __VA_ARGS__)#define _VM_HELP_30(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_29(_call, __VA_ARGS__)#define _VM_HELP_29(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_28(_call, __VA_ARGS__)#define _VM_HELP_28(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_27(_call, __VA_ARGS__)#define _VM_HELP_27(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_26(_call, __VA_ARGS__)#define _VM_HELP_26(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_25(_call, __VA_ARGS__)#define _VM_HELP_25(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_24(_call, __VA_ARGS__)#define _VM_HELP_24(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_23(_call, __VA_ARGS__)#define _VM_HELP_23(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_22(_call, __VA_ARGS__)#define _VM_HELP_22(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_21(_call, __VA_ARGS__)#define _VM_HELP_21(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_20(_call, __VA_ARGS__)#define _VM_HELP_20(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_19(_call, __VA_ARGS__)#define _VM_HELP_19(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_18(_call, __VA_ARGS__)#define _VM_HELP_18(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_17(_call, __VA_ARGS__)#define _VM_HELP_17(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_16(_call, __VA_ARGS__)#define _VM_HELP_16(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_15(_call, __VA_ARGS__)#define _VM_HELP_15(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_14(_call, __VA_ARGS__)#define _VM_HELP_14(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_13(_call, __VA_ARGS__)#define _VM_HELP_13(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_12(_call, __VA_ARGS__)#define _VM_HELP_12(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_11(_call, __VA_ARGS__)#define _VM_HELP_11(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_10(_call, __VA_ARGS__)#define _VM_HELP_10(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_9(_call, __VA_ARGS__)#define _VM_HELP_9(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_8(_call, __VA_ARGS__)#define _VM_HELP_8(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_7(_call, __VA_ARGS__)#define _VM_HELP_7(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_6(_call, __VA_ARGS__)#define _VM_HELP_6(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_5(_call, __VA_ARGS__)#define _VM_HELP_5(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_4(_call, __VA_ARGS__)#define _VM_HELP_4(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_3(_call, __VA_ARGS__)#define _VM_HELP_3(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_2(_call, __VA_ARGS__)#define _VM_HELP_2(_call,x,__VA_ARGS__...) _call(x) _VM_HELP_1(_call, __VA_ARGS__)#define _VM_HELP_1(_call,x,__VA_ARGS__...) _call(x)#define _VM_HELP_0(_call,__VA_ARGS__...)#define _VM_GET_NTH_ARG(_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26,_27,_28,_29,_30,_31,_32,N,__VA_ARGS__...) N#define __VARIADIC_MACRO_H__#define DEFINE_CONV(n,__VA_ARGS__...) static inline struct n *n ## _to_disk(struct n * r) { return r; } static inline struct n *n ## _to_cpu(struct n * r) { return r; }#define DEFINE_CONV_ALT(n,a,__VA_ARGS__...) static inline struct n *n ## _to_disk_ ## a(struct n * r) { return r; } static inline struct n *n ## _to_cpu_ ## a(struct n * r) { return r; }#define __BTRFS_CONV_FUNCS_H__#define __BTRFS_BTRFS_H__#define _DEFUN(a,b,c) a(c)#define _CONST const#define MONSPERYEAR 12#define SECSPERMIN 60L#define SECSPERHOUR (SECSPERMIN * MINSPERHOUR)#define SECSPERDAY (SECSPERHOUR * HOURSPERDAY)#define MINSPERHOUR 60L#define HOURSPERDAY 24L#define EPOCH_WDAY 4#define DAYSPERWEEK 7#define EPOCH_YEAR 1970#define isleap(y) ((((y) % 4) == 0 && ((y) % 100) != 0) || ((y) % 400) == 0)#define YEAR_BASE 1900#define _REENT_ONLY#define _AND ,#define _LINUX_TIME_H#define CONFIG_LIB_UUID 1#define ZSTD_FRAMEHEADERSIZE_MAX 18#define ZSTD_FRAMEHEADERSIZE_MIN 6#define ZSTD_BLOCKSIZE_ABSOLUTEMAX (128 * 1024)#define ZSTD_TARGETLENGTH_MAX 999#define ZSTD_TARGETLENGTH_MIN 4#define ZSTD_SEARCHLENGTH_MIN 3#define ZSTD_SEARCHLENGTH_MAX 7#define ZSTD_SEARCHLOG_MIN 1#define ZSTD_SEARCHLOG_MAX (ZSTD_WINDOWLOG_MAX-1)#define ZSTD_HASHLOG3_MAX 17#define ZSTD_CHAINLOG_MIN ZSTD_HASHLOG_MIN#define ZSTD_CHAINLOG_MAX (ZSTD_WINDOWLOG_MAX+1)#define ZSTD_HASHLOG_MIN 6#define ZSTD_HASHLOG_MAX ZSTD_WINDOWLOG_MAX#define ZSTD_WINDOWLOG_MIN 10#define ZSTD_WINDOWLOG_MAX ((unsigned int)(sizeof(size_t) == 4 ? ZSTD_WINDOWLOG_MAX_32 : ZSTD_WINDOWLOG_MAX_64))#define ZSTD_WINDOWLOG_MAX_64 27#define ZSTD_WINDOWLOG_MAX_32 27#define ZSTD_CONTENTSIZE_ERROR (0ULL - 2)#define ZSTD_CONTENTSIZE_UNKNOWN (0ULL - 1)#define ZSTD_MAGIC_SKIPPABLE_START 0x184D2A50U#define ZSTD_MAGICNUMBER 0xFD2FB528#define ZSTD_H#define ZSTD_BTRFS_MAX_INPUT (1 << ZSTD_BTRFS_MAX_WINDOWLOG)#define ZSTD_BTRFS_MAX_WINDOWLOG 17#define PRESET_DICT 0x20#define __U_BOOT_FS_INTERNAL_H__#define BTRFS_SUPER_INFO_SIZE 4096#define BTRFS_SUPER_FLAG_SUPP (BTRFS_HEADER_FLAG_WRITTEN | BTRFS_HEADER_FLAG_RELOC | BTRFS_SUPER_FLAG_ERROR | BTRFS_SUPER_FLAG_SEEDING | BTRFS_SUPER_FLAG_METADUMP)#define IS_ALIGNED(x,a) (((x) & ((typeof(x))(a) - 1)) == 0)#define PART_OFFSET(x) ((ulong)x->offset)#define OFFSET(x) ((x)->i_ino)#define CRAMINO(x) (CRAMFS_GET_OFFSET(x) ? CRAMFS_GET_OFFSET(x)<<2 : 1)#define SUPERBLOCK_START (2 * 512)#define SUPERBLOCK_SIZE 1024#define F_FILE 1#define EXT4_FEATURE_COMPAT_HAS_JOURNAL 0x0004#define EXT2_JOURNAL_INO 8#define MAX_JOURNAL_ENTRIES 100#define EXT2_JOURNAL_SUPERBLOCK 0#define EXT3_JOURNAL_COMMIT_BLOCK 2#define EXT3_JOURNAL_MAGIC_NUMBER 0xc03b3998U#define EXT3_JOURNAL_DESCRIPTOR_BLOCK 1#define EXT3_JOURNAL_FLAG_SAME_UUID 2#define EXT3_JOURNAL_FLAG_LAST_TAG 8#define NO 0#define TRANSACTION_COMPLETE 0#define EXT3_FEATURE_INCOMPAT_RECOVER 0x0004#define RECOVER 1#define JBD2_FEATURE_COMPAT_CHECKSUM 0x00000001#define TRANSACTION_RUNNING 1#define YES 1#define EXT3_JOURNAL_REVOKE_BLOCK 5#define SCAN 0#define EXT3_JOURNAL_FLAG_DELETED 4#define EXT3_JOURNAL_FLAG_ESCAPE 1#define EXT3_JOURNAL_SUPERBLOCK_V2 4#define EXT3_JOURNAL_SUPERBLOCK_V1 3#define __EXT4_JRNL__#define __CRC16_H#define BLOCK_NO_ONE 1#define __EXT4_COMMON__#define TYPE_DIR 0x2#define TYPE_FILE 0x1#define TYPE_ANY (TYPE_FILE | TYPE_DIR)#define CONFIG_SATA 1#define ENOTDIR 20#define CONFIG_FS_FAT_MAX_CLUSTSIZE 65536#define DOS_BOOT_MAGIC_OFFSET 0x1fe#define DOS_FS_TYPE_OFFSET 0x36#define DOS_FS32_TYPE_OFFSET 0x52#define EISDIR 21#define __SANDBOX_FS__#define CONFIG_CMD_BOOTEFI 1#define CONFIG_FS_FAT 1#define CONFIG_FS_EXT4 1#define CONFIG_FS_BTRFS 1#define CONFIG_CMD_TPM_V1 1#define CONFIG_SPMI_SANDBOX 1#define CONFIG_INPUT 1#define CONFIG_PCI_ENDPOINT 1#define CONFIG_PCI_SANDBOX_EP 1#define CONFIG_IP_DEFRAG 1#define CONFIG_CMD_MD5SUM 1#define CONFIG_AXI 1#define CONFIG_BITREVERSE 1#define CONFIG_CMD_PXE 1#define CONFIG_CMD_BOOTSTAGE 1#define CONFIG_REGMAP 1#define CONFIG_STRTO 1#define CONFIG_TFTP_BLOCKSIZE 512#define CONFIG_VIRTIO_BLK 1#define CONFIG_CMD_BIND 1#define CONFIG_CMD_CRAMFS 1#define CONFIG_ANDROID_AB 1#define CONFIG_SYS_MALLOC_F 1#define CONFIG_SANDBOX_MBOX 1#define CONFIG_REGULATOR_ACT8846 1#define CONFIG_REGULATOR_S5M8767 1#define CONFIG_CONSOLE_ROTATION 1#define CONFIG_PMIC_ACT8846 1#define CONFIG_CMD_GPT 1#define CONFIG_CMD_MII 1#define CONFIG_RSA_SOFTWARE_EXP 1#define CONFIG_BOOTP_GATEWAY 1#define CONFIG_DM_REGULATOR_PFUZE100 1#define CONFIG_SPL_LOGLEVEL 4#define CONFIG_FIRMWARE 1#define CONFIG_NET_TFTP_VARS 1#define CONFIG_DEFAULT_DEVICE_TREE "sandbox"#define CONFIG_LIB_RAND 1#define CONFIG_MENU 1#define CONFIG_CMD_QFW 1#define CONFIG_I2C_ARB_GPIO_CHALLENGE 1#define CONFIG_PWRSEQ 1#define CONFIG_FS_CRAMFS 1#define CONFIG_CMD_PMIC 1#define CONFIG_CMD_REGULATOR 1#define CONFIG_VIRTIO_MMIO 1#define CONFIG_MKIMAGE_DTC_PATH "dtc"#define CONFIG_CMD_LICENSE 1#define CONFIG_HWSPINLOCK_SANDBOX 1#define CONFIG_W1_GPIO 1#define CONFIG_ADC 1#define CONFIG_I8042_KEYB 1#define CONFIG_CMD_GPIO 1#define CONFIG_TPM2_TIS_SANDBOX 1#define CONFIG_SYS_I2C_EEPROM_BUS 0#define CONFIG_BOOTP_VCI_STRING "U-Boot"#define CONFIG_PINCTRL_SANDBOX 1#define CONFIG_CMD_ITEST 1#define CONFIG_SOUND_SANDBOX 1#define CONFIG_SYS_I2C_EEPROM_ADDR_OVERFLOW 0x0#define CONFIG_CMD_LZMADEC 1#define CONFIG_CRC32C 1#define CONFIG_EXPERT 1#define CONFIG_USE_BOOTCOMMAND 1#define CONFIG_SYS_I2C_SANDBOX 1#define CONFIG_CMD_IO 1#define CONFIG_CMD_AXI 1#define CONFIG_DM_DEMO 1#define CONFIG_CMD_DM 1#define CONFIG_MD5 1#define CONFIG_SPL_SYS_MALLOC_F_LEN 0x2800#define CONFIG_LOCALVERSION_AUTO 1#define CONFIG_CMD_GETTIME 1#define CONFIG_RBTREE 1#define CONFIG_CMD_ECHO 1#define CONFIG_CMD_XIMG 1#define CONFIG_DM_DEMO_SIMPLE 1#define CONFIG_CMD_MEMORY 1#define CONFIG_I2C_CROS_EC_TUNNEL 1#define CONFIG_CMD_CPU 1#define CONFIG_QFW 1#define CONFIG_CMD_PINMUX 1#define CONFIG_SYS_BOOTCOUNT_MAGIC 0xB001C041#define CONFIG_VIRTIO 1#define CONFIG_DM_REGULATOR_SANDBOX 1#define CONFIG_CMD_LOG 1#define CONFIG_LOCALVERSION ""#define CONFIG_CROS_EC 1#define CONFIG_AVB_VERIFY 1#define CONFIG_BOOTSTAGE_FDT 1#define CONFIG_BACKLIGHT_PWM 1#define CONFIG_SPL_PMIC_CHILDREN 1#define CONFIG_CMD_CROS_EC 1#define CONFIG_RSA 1#define CONFIG_DISTRO_DEFAULTS 1#define CONFIG_CMD_READ 1#define CONFIG_CMD_BLOCK_CACHE 1#define CONFIG_DEBUG_UART_CLOCK 0#define CONFIG_BUILD_BIN2C 1#define CONFIG_SPL_BOOTSTAGE_RECORD_COUNT 5#define CONFIG_SPL_I2C_MUX 1#define CONFIG_CMD_NVME 1#define CONFIG_SUPPORT_OF_CONTROL 1#define CONFIG_CMD_SCSI 1#define CONFIG_W1_EEPROM_SANDBOX 1#define CONFIG_SPRINTF 1#define CONFIG_ETH_SANDBOX_RAW 1#define CONFIG_ADC_SANDBOX 1#define CONFIG_DM_DEMO_SHAPE 1#define CONFIG_SYS_I2C_EEPROM_ADDR_LEN 1#define CONFIG_EFI_UNICODE_COLLATION_PROTOCOL2 1#define CONFIG_MISC 1#define CONFIG_SPMI 1#define CONFIG_CMD_AVB 1#define CONFIG_PWM_SANDBOX 1#define CONFIG_MDIO_MUX_SANDBOX 1#define CONFIG_REGULATOR_RK8XX 1#define CONFIG_SANDBOX_GPIO 1#define CONFIG_SYS_EEPROM_PAGE_WRITE_BITS 0#define CONFIG_SPL_PWRSEQ 1#define CONFIG_BOARD_SANDBOX 1#define CONFIG_CMD_DHRYSTONE 1#define CONFIG_TEST_FDTDEC 1#define CONFIG_VIRTIO_NET 1#define CONFIG_BOOTP_SUBNETMASK 1#define CONFIG_WDT_SANDBOX 1#define CONFIG_NET 1#define CONFIG_SANDBOX_OSD 1#define CONFIG_DM_I2C_GPIO 1#define CONFIG_CMD_IDE 1#define CONFIG_TPM_TIS_SANDBOX 1#define CONFIG_CROS_EC_LPC 1#define CONFIG_EFI_DEVICE_PATH_TO_TEXT 1#define CONFIG_ZSTD 1#define CONFIG_SYS_CONFIG_NAME "sandbox"#define CONFIG_CONSOLE_NORMAL 1#define CONFIG_FASTBOOT 1#define CONFIG_CMD_TIME 1#define CONFIG_HOST_64BIT 1#define CONFIG_BOOTP_BOOTPATH 1#define CONFIG_BOARD 1#define CONFIG_UT_DM 1#define CONFIG_PRINTF 1#define CONFIG_DM_BOOTCOUNT_RTC 1#define CONFIG_PMIC_RK8XX 1#define CONFIG_CMD_ETHSW 1#define CONFIG_SYS_EEPROM_SIZE 256#define CONFIG_W1 1#define CONFIG_TPL_SERIAL_PRESENT 1#define CONFIG_FS_CBFS 1#define CONFIG_CMD_TPM 1#define CONFIG_SPI_MEM 1#define CONFIG_SPL_SERIAL_PRESENT 1#define CONFIG_CMD_PART 1#define CONFIG_BOOTSTAGE_REPORT 1#define CONFIG_SYS_EXTRA_OPTIONS ""#define CONFIG_TPL_BOOTSTAGE_RECORD_COUNT 5#define CONFIG_CROS_EC_SPI 1#define CONFIG_SANDBOX_SPI 1#define CONFIG_CMD_DEMO 1#define CONFIG_BOOTP_HOSTNAME 1#define CONFIG_CROS_EC_I2C 1#define CONFIG_UT_TIME 1#define CONFIG_RTC_RV8803 1#define CONFIG_ZYNQ_GEM_I2C_MAC_OFFSET 0x0#define CONFIG_DM_REGULATOR_COMMON 1#define CONFIG_CMD_MX_CYCLIC 1#define CONFIG_CMD_CBFS 1#define CONFIG_SOUND 1#define CONFIG_XXHASH 1#define CONFIG_DM_PMIC_MAX77686 1#define CONFIG_DM_PMIC_PFUZE100 1#define CONFIG_PMIC_S2MPS11 1#define CONFIG_SMEM 1#define CONFIG_UT_LIB 1#define CONFIG_UT_ENV 1#define CONFIG_UT_OVERLAY 1#define CONFIG_VIRTIO_PCI 1#define CONFIG_CMD_LED 1#define CONFIG_PMIC_S5M8767 1#define CONFIG_CMD_SF 1#define CONFIG_CMD_SETEXPR 1#define CONFIG_BOOTP_DNS 1#define CONFIG_TPL_SYS_MALLOC_F_LEN 0x2800#define CONFIG_SMBIOS_PRODUCT_NAME "sandbox"#define CONFIG_PHY_SANDBOX 1#define CONFIG_EFI_PLATFORM_LANG_CODES "en-US"#define CONFIG_OSD 1#define CONFIG_UT_UNICODE 1#define CONFIG_REMOTEPROC_SANDBOX 1#define CONFIG_CMD_W1 1#define CONFIG_CMD_FLASH 1#define CONFIG_DM_REGULATOR_MAX77686 1#define CONFIG_CMD_IOTRACE 1#define CONFIG_EFI_LOADER_HII 1#define CONFIG_BUILD_TARGET ""#define CONFIG_TEE 1#define CONFIG_CMD_CONFIG 1#define CONFIG_DEBUG_UART_BASE 0x0#define CONFIG_CC_OPTIMIZE_FOR_SIZE 1#define CONFIG_CROS_EC_KEYB 1#define CONFIG_SYSCON 1#define CONFIG_BOOTP_PXE 1#define CONFIG_OF_HOSTFILE 1#define CONFIG_SANDBOX_SERIAL 1#define CONFIG_NETDEVICES 1#define CONFIG_CMD_MISC 1#define CONFIG_MDIO_SANDBOX 1#define CONFIG_DM_PMIC_SANDBOX 1#define CONFIG_DM_REGULATOR_FIXED 1#define CONFIG_SANDBOX_DMA 1#define CONFIG_RAM 1#define CONFIG_DEBUG_UART_SHIFT 0#define CONFIG_SANDBOX_TEE 1#define CONFIG_CMD_REMOTEPROC 1#define CONFIG_SANDBOX_RESET 1#define CONFIG_NVME 1#define CONFIG_FIT_EXTERNAL_OFFSET 0x0#define CONFIG_DTC 1#define CONFIG_SPI 1#define CONFIG_I2C_CROS_EC_LDO 1#define CONFIG_SANDBOX_TIMER 1#define CONFIG_TPM 1#define CONFIG_I2C_MUX 1#define CONFIG_PCH 1#define CONFIG_ETH_SANDBOX 1#define CONFIG_SMBIOS_MANUFACTURER ""#define CONFIG_LIBAVB 1#define CONFIG_I2C_EEPROM 1#define CONFIG_SANDBOX_POWER_DOMAIN 1#define CONFIG_DEFAULT_FDT_FILE ""#define CONFIG_REGULATOR_TPS65090 1#define CONFIG_DM_MAILBOX 1#define CONFIG_PMIC_PM8916 1#define CONFIG_EFI_UNICODE_CAPITALIZATION 1#define CONFIG_CMD_SOUND 1#define CONFIG_CMD_CONSOLE 1#define CONFIG_CMD_TPM_TEST 1#define CONFIG_HASH 1#define CONFIG_ERRNO_STR 1#define CONFIG_CMD_BTRFS 1#define CONFIG_W1_EEPROM 1#define CONFIG_CMD_OSD 1#define CONFIG_AXI_SANDBOX 1#define CONFIG_SPL_IMAGE "spl/u-boot-spl.bin"#define CONFIG_MMC_SANDBOX 1#define CONFIG_CMD_PCI 1#define CONFIG_GENERATE_SMBIOS_TABLE 1#define CONFIG_PMIC_TPS65090 1#define CONFIG_EFI_GET_TIME 1#define CONFIG_CMD_VIRTIO 1#define CONFIG_TPL_LOGLEVEL 4#define CONFIG_USB_EMUL 1#define CONFIG_USB 1#define CONFIG_CMD_TPM_V2 1#define CONFIG_LOG_CONSOLE 1#define CONFIG_SPI_FLASH_SANDBOX 1#define CONFIG_SANDBOX_SMEM 1#define CONFIG_CROS_EC_SANDBOX 1#define CONFIG_HEXDUMP 1#define CONFIG_CLK_CCF 1#define CONFIG_CMD_SATA 1#define CONFIG_ZLIB 1#define CONFIG_DM_PMIC_MC34708 1#define CONFIG_CMD_FASTBOOT 1#define CONFIG_LED_GPIO 1#define CONFIG_CMD_BOOTCOUNT 1#define CONFIG_VIRTIO_SANDBOX 1#define CONFIG_CMD_EXT4 1#define CONFIG_CMD_BOOTM 1#define CONFIG_PCI_SANDBOX 1#define CONFIG_CMD_AB_SELECT 1#define CONFIG_PM8916_GPIO 1#define CONFIG_IS_MODULE(option) config_enabled(CONFIG_VAL(option ## _MODULE))#define CONFIG_IS_BUILTIN(option) config_enabled(CONFIG_VAL(option))#define IS_MODULE(option) config_enabled(option ## _MODULE)#define IS_BUILTIN(option) config_enabled(option)#define __LINUX_KCONFIG_H#define _CONFIG_DEFAULTS_H_#define __CONFIG_UNCMD_SPL_H__#define BOOTENV_DEV_NAME_PXE(devtypeu,devtypel,instance) "pxe "#define BOOTENV_DEV_PXE(devtypeu,devtypel,instance) "bootcmd_pxe=" BOOTENV_RUN_NET_USB_START BOOTENV_RUN_PCI_ENUM "dhcp; " "if pxe get; then " "pxe boot; " "fi\0"#define BOOTENV_DEV_NAME_DHCP(devtypeu,devtypel,instance) "dhcp "#define BOOTENV_DEV_DHCP(devtypeu,devtypel,instance) "bootcmd_dhcp=" BOOTENV_RUN_NET_USB_START BOOTENV_RUN_PCI_ENUM "if dhcp ${scriptaddr} ${boot_script_dhcp}; then " "source ${scriptaddr}; " "fi;" BOOTENV_EFI_RUN_DHCP "\0"#define BOOTENV_EFI_RUN_DHCP "setenv efi_fdtfile ${fdtfile}; " BOOTENV_EFI_SET_FDTFILE_FALLBACK "setenv efi_old_vci ${bootp_vci};" "setenv efi_old_arch ${bootp_arch};" "setenv bootp_vci " BOOTENV_EFI_PXE_VCI ";" "setenv bootp_arch " BOOTENV_EFI_PXE_ARCH ";" "if dhcp ${kernel_addr_r}; then " "tftpboot ${fdt_addr_r} dtb/${efi_fdtfile};" "if fdt addr ${fdt_addr_r}; then " "bootefi ${kernel_addr_r} ${fdt_addr_r}; " "else " "bootefi ${kernel_addr_r} ${fdtcontroladdr};" "fi;" "fi;" "setenv bootp_vci ${efi_old_vci};" "setenv bootp_arch ${efi_old_arch};" "setenv efi_fdtfile;" "setenv efi_old_arch;" "setenv efi_old_vci;"#define BOOTENV_EFI_PXE_VCI "PXEClient:Arch:00007:UNDI:003000"#define BOOTENV_EFI_PXE_ARCH "0x7"#define BOOTENV_DEV_NAME_VIRTIO BOOTENV_DEV_NAME_BLKDEV#define BOOTENV_DEV_VIRTIO BOOTENV_DEV_BLKDEV#define BOOTENV_DEV_NAME_USB BOOTENV_DEV_NAME_BLKDEV#define BOOTENV_DEV_USB BOOTENV_DEV_BLKDEV#define BOOTENV_RUN_NET_USB_START "run boot_net_usb_start; "#define BOOTENV_DEV_NAME_IDE BOOTENV_DEV_NAME_BLKDEV#define BOOTENV_DEV_IDE BOOTENV_DEV_BLKDEV#define BOOTENV_DEV_NAME_SCSI BOOTENV_DEV_NAME_BLKDEV#define BOOTENV_DEV_SCSI BOOTENV_DEV_BLKDEV#define BOOTENV_DEV_NAME_NVME BOOTENV_DEV_NAME_BLKDEV#define BOOTENV_DEV_NVME BOOTENV_DEV_BLKDEV#define BOOTENV_DEV_NAME_SATA BOOTENV_DEV_NAME_BLKDEV#define BOOTENV_DEV_SATA BOOTENV_DEV_BLKDEV#define BOOTENV_DEV_NAME_UBIFS BOOT_TARGET_DEVICES_references_UBIFS_without_CONFIG_CMD_UBIFS#define BOOTENV_DEV_UBIFS BOOT_TARGET_DEVICES_references_UBIFS_without_CONFIG_CMD_UBIFS#define BOOTENV_DEV_NAME_MMC BOOT_TARGET_DEVICES_references_MMC_without_CONFIG_CMD_MMC#define BOOTENV_DEV_MMC BOOT_TARGET_DEVICES_references_MMC_without_CONFIG_CMD_MMC#define _CONFIG_CMD_DISTRO_BOOTCMD_H#define CONFIG_SYS_ATA_ALT_OFFSET 2#define CONFIG_GZIP_COMPRESSED#define CONFIG_LCD_BMP_RLE8#define LCD_BPP LCD_COLOR16#define CONFIG_BOOTP_SEND_HOSTNAME#define CONFIG_UDP_CHECKSUM#define CONFIG_KEEP_SERVERADDR#define CONFIG_PHYSMEM#define __CONFIG_H#define _ASM_CONFIG_H_#define __CONFIG_FALLBACKS_H#define CONFIG_BOARDDIR board/sandbox#define ERECALLCONFLICT 530#define EIOCBQUEUED 529#define EJUKEBOX 528#define EBADTYPE 527#define ESERVERFAULT 526#define ETOOSMALL 525#define EBADCOOKIE 523#define ENOTSYNC 522#define EBADHANDLE 521#define EOPENSTALE 518#define EPROBE_DEFER 517#define ERESTART_RESTARTBLOCK 516#define ENOIOCTLCMD 515#define ERESTARTNOHAND 514#define ERESTARTNOINTR 513#define ERESTARTSYS 512#define EHWPOISON 133#define ERFKILL 132#define ENOTRECOVERABLE 131#define EOWNERDEAD 130#define EKEYREJECTED 129#define EKEYREVOKED 128#define EKEYEXPIRED 127#define ENOKEY 126#define ECANCELED 125#define EDQUOT 122#define EISNAM 120#define ENAVAIL 119#define ENOTNAM 118#define ESTALE 116#define EHOSTUNREACH 113#define EHOSTDOWN 112#define ECONNREFUSED 111#define ETOOMANYREFS 109#define ESHUTDOWN 108#define EISCONN 106#define ENOBUFS 105#define ECONNRESET 104#define ECONNABORTED 103#define ENETRESET 102#define ENETUNREACH 101#define ENETDOWN 100#define EADDRINUSE 98#define EAFNOSUPPORT 97#define ESOCKTNOSUPPORT 94#define ENOPROTOOPT 92#define EPROTOTYPE 91#define EMSGSIZE 90#define EDESTADDRREQ 89#define ENOTSOCK 88#define EUSERS 87#define ESTRPIPE 86#define ERESTART 85#define ELIBEXEC 83#define ELIBMAX 82#define ELIBSCN 81#define ELIBBAD 80#define ELIBACC 79#define EREMCHG 78#define EBADFD 77#define ENOTUNIQ 76#define EDOTDOT 73#define EMULTIHOP 72#define EPROTO 71#define ESRMNT 69#define EADV 68#define EREMOTE 66#define ENOPKG 65#define ENONET 64#define ENOSR 63#define ENOSTR 60#define EDEADLOCK EDEADLK#define EBADSLT 57#define EBADRQC 56#define ENOANO 55#define EXFULL 54#define EBADR 53#define EBADE 52#define EL2HLT 51#define ENOCSI 50#define EUNATCH 49#define ELNRNG 48#define EL3RST 47#define EL3HLT 46#define EL2NSYNC 45#define ECHRNG 44#define EIDRM 43#define EWOULDBLOCK EAGAIN#define ELOOP 40#define ENOTEMPTY 39#define ENOLCK 37#define EDEADLK 35#define EDOM 33#define ETXTBSY 26#define ENOTTY 25#define EMFILE 24#define ENFILE 23#define ECHILD 10#define ESRCH 3#define _LINUX_ERRNO_H#define _ERRNO_H#define typecheck_fn(type,function) ({ typeof(type) __tmp = function; (void)__tmp; })#define TYPECHECK_H_INCLUDED#define offsetof(TYPE,MEMBER) ((size_t) &((TYPE *)0)->MEMBER)#define __ARCH_ARM_POSIX_TYPES_H#define __FDSET_LONGS (__FD_SETSIZE/__NFDBITS)#define __NFDBITS (8 * sizeof(unsigned long))#define __FDMASK(d) (1UL << ((d) % __NFDBITS))#define __FDELT(d) ((d) / __NFDBITS)#define __ASM_SANDBOX_TYPES_H#define __bool_true_false_are_defined 1#define _STDBOOL_H#define aligned_le64 __le64 __aligned(8)#define aligned_be64 __be64 __aligned(8)#define __BIT_TYPES_DEFINED__#define _CADDR_T#define _CLOCK_T#define _TIME_T#define _SSIZE_T#define time_in_range_open(a,b,c) (time_after_eq(a,b) && time_before(a,c))#define time_in_range(a,b,c) (time_after_eq(a,b) && time_before_eq(a,c))#define time_before_eq(a,b) time_after_eq(b,a)#define time_after_eq(a,b) (typecheck(unsigned long, a) && typecheck(unsigned long, b) && ((long)((a) - (b)) >= 0))#define time_before(a,b) time_after(b,a)#define time_after(a,b) (typecheck(unsigned long, a) && typecheck(unsigned long, b) && ((long)((b) - (a)) < 0))#define _TIME_H#define DO_DEPS_ONLY 1#define BITS_PER_LONG_LONG 64#define __no_sanitize_address __attribute__((no_sanitize_address))#define KASAN_ABI_VERSION 4#define asm_volatile_goto(x...) do { asm goto(x); asm (""); } while (0)#define __assume_aligned(a,__VA_ARGS__...) __attribute__((__assume_aligned__(a, ## __VA_ARGS__)))#define __visible __attribute__((externally_visible))#define __noclone __attribute__((__noclone__))#define unreachable() __builtin_unreachable()#define __compiletime_warning(message) __attribute__((warning(message)))#define __UNIQUE_ID(prefix) __PASTE(__PASTE(__UNIQUE_ID_, prefix), __COUNTER__)#define __cold __attribute__((__cold__))#define __compiler_offsetof(a,b) __builtin_offsetof(a, b)#define __used __attribute__((__used__))#define __must_check __attribute__((warn_unused_result))#define __always_unused __attribute__((unused))#define __scanf(a,b) __attribute__((format(scanf, a, b)))#define __printf(a,b) __attribute__((format(printf, a, b)))#define __pure __attribute__((pure))#define __naked __attribute__((naked)) noinline __noclone notrace#define __alias(symbol) __attribute__((alias(#symbol)))#define __deprecated __attribute__((deprecated))#define __inline __inline __attribute__((always_inline)) notrace#define __must_be_array(a) BUILD_BUG_ON_ZERO(__same_type((a), &(a)[0]))#define OPTIMIZER_HIDE_VAR(var) __asm__ ("" : "=r" (var) : "0" (var))#define RELOC_HIDE(ptr,off) ({ unsigned long __ptr; __asm__ ("" : "=r"(__ptr) : "0"(ptr)); (typeof(ptr)) (__ptr + (off)); })#define barrier_data(ptr) __asm__ __volatile__("": :"r"(ptr) :"memory")#define GCC_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)#define __GNUC_PATCHLEVEL__ 0#define __LINUX_COMPILER_H#define __READ_ONCE_SIZE ({ switch (size) { case 1: *(__u8 *)res = *(volatile __u8 *)p; break; case 2: *(__u16 *)res = *(volatile __u16 *)p; break; case 4: *(__u32 *)res = *(volatile __u32 *)p; break; case 8: *(__u64 *)res = *(volatile __u64 *)p; break; default: barrier(); __builtin_memcpy((void *)res, (const void *)p, size); barrier(); } })#define nokprobe_inline inline#define __kprobes#define lockless_dereference(p) ({ typeof(p) _________p1 = READ_ONCE(p); smp_read_barrier_depends(); (_________p1); })#define ACCESS_ONCE(x) (*__ACCESS_ONCE(x))#define __ACCESS_ONCE(x) ({ __maybe_unused typeof(x) __var = (__force typeof(x)) 0; (volatile typeof(x) *)&(x); })#define compiletime_assert_atomic_type(t) compiletime_assert(__native_word(t), "Need native word sized stores/loads for atomicity.")#define __compiletime_object_size(obj) -1#define __native_word(t) (sizeof(t) == sizeof(char) || sizeof(t) == sizeof(short) || sizeof(t) == sizeof(int) || sizeof(t) == sizeof(long))#define __same_type(a,b) __builtin_types_compatible_p(typeof(a), typeof(b))#define __section(S) __attribute__ ((__section__(#S)))#define noinline_for_stack noinline#define __deprecated_for_modules#define smp_cond_acquire(cond) do { while (!(cond)) cpu_relax(); smp_rmb(); } while (0)#define READ_ONCE_NOCHECK(x) __READ_ONCE(x, 0)#define READ_ONCE(x) __READ_ONCE(x, 1)#define __READ_ONCE(x,check) ({ union { typeof(x) __val; char __c[1]; } __u; if (check) __read_once_size(&(x), __u.__c, sizeof(x)); else __read_once_size_nocheck(&(x), __u.__c, sizeof(x)); __u.__val; })#define __PASTE(a,b) ___PASTE(a,b)#define ___PASTE(a,b) a ## b#define __pmem#define __rcu#define __percpu#define __cond_lock(x,c) (c)#define __release(x) (void)0#define __acquire(x) (void)0#define __releases(x)#define __acquires(x)#define __must_hold(x)#define __builtin_warning(x,y...) (1)#define __chk_io_ptr(x) (void)0#define __chk_user_ptr(x) (void)0#define __nocast#define __safe#define __kernel#define local_irq_restore(x)#define local_save_flags(x)#define local_irq_disable()#define local_irq_enable()#define local_irq_save(x)#define __ASM_SANDBOX_SYSTEM_H#define _ASM_GENERIC_BITOPS_FLS_H_#define _ASM_GENERIC_BITOPS___FLS_H_#define _ASM_GENERIC_BITOPS_FLS64_H_#define _ASM_GENERIC_BITOPS___FFS_H_#define BIT_MASK(nr) (1UL << ((nr) % BITS_PER_LONG))#define BIT_WORD(nr) ((nr) / BITS_PER_LONG)#define minix_find_first_zero_bit(addr,size) find_first_zero_bit(addr, size)#define minix_test_bit(nr,addr) test_bit(nr, addr)#define minix_test_and_clear_bit(nr,addr) test_and_clear_bit(nr, addr)#define minix_set_bit(nr,addr) set_bit(nr, addr)#define minix_test_and_set_bit(nr,addr) test_and_set_bit(nr, addr)#define ext2_find_next_zero_bit find_next_zero_bit#define ext2_find_first_zero_bit find_first_zero_bit#define ext2_test_bit test_bit#define ext2_clear_bit test_and_clear_bit#define ext2_set_bit test_and_set_bit#define hweight8(x) generic_hweight8(x)#define hweight16(x) generic_hweight16(x)#define smp_mb__after_clear_bit() do { } while (0)#define smp_mb__before_clear_bit() do { } while (0)#define __ASM_SANDBOX_BITOPS_H#define __clear_bit generic_clear_bit#define __set_bit generic_set_bit#define GENMASK_ULL(h,l) (((~0ULL) << (l)) & (~0ULL >> (BITS_PER_LONG_LONG - 1 - (h))))#define BIT_ULL_WORD(nr) ((nr) / BITS_PER_LONG_LONG)#define BIT_ULL_MASK(nr) (1ULL << ((nr) % BITS_PER_LONG_LONG))#define _LINUX_BITOPS_H#define __va_list__#define _VA_LIST_T_H#define _VA_LIST#define _VA_LIST_#define __va_copy(d,s) __builtin_va_copy(d,s)#define va_copy(d,s) __builtin_va_copy(d,s)#define va_arg(v,l) __builtin_va_arg(v,l)#define __GNUC_VA_LIST#define _ANSI_STDARG_H_#define _STDARG_H#define __VSPRINTF_H#define BUILD_BUG() BUILD_BUG_ON_MSG(1, "BUILD_BUG failed")#define BUILD_BUG_ON_INVALID(e) ((void)(sizeof((__force long)(e))))#define BUILD_BUG_ON_NULL(e) ((void *)sizeof(struct { int:(-!!(e)); }))#define BUILD_BUG_ON_ZERO(e) (sizeof(struct { int:(-!!(e)); }))#define BUILD_BUG_ON_NOT_POWER_OF_2(n) BUILD_BUG_ON((n) == 0 || (((n) & ((n) - 1)) != 0))#define __BUILD_BUG_ON_NOT_POWER_OF_2(n) BUILD_BUG_ON(((n) & ((n) - 1)) != 0)#define _LINUX_BUILD_BUG_H#define eprintf(fmt,args...) fprintf(stderr, fmt, ## args)#define eputs(s) fputs(stderr, s)#define eputc(c) fputc(stderr, c)#define __STDIO_H#define WARN_ON_ONCE(condition) ({ static bool __warned; int __ret_warn_once = !!(condition); if (unlikely(__ret_warn_once && !__warned)) { __warned = true; WARN_ON(1); } unlikely(__ret_warn_once); })#define _LINUX_BUG_H#define swap(a,b) do { typeof(a) __tmp = (a); (a) = (b); (b) = __tmp; } while (0)#define clamp_val(val,lo,hi) clamp_t(typeof(val), val, lo, hi)#define clamp_t(type,val,lo,hi) min_t(type, max_t(type, val, lo), hi)#define max_t(type,x,y) ({ type __max1 = (x); type __max2 = (y); __max1 > __max2 ? __max1: __max2; })#define clamp(val,lo,hi) min((typeof(val))max(val, lo), hi)#define min_not_zero(x,y) ({ typeof(x) __x = (x); typeof(y) __y = (y); __x == 0 ? __y : ((__y == 0) ? __x : min(__x, __y)); })#define max3(x,y,z) max((typeof(x))max(x, y), z)#define min3(x,y,z) min((typeof(x))min(x, y), z)#define abs64(x) ({ s64 __x = (x); (__x < 0) ? -__x : __x; })#define mult_frac(x,numer,denom) ( { typeof(x) quot = (x) / (denom); typeof(x) rem = (x) % (denom); (quot * (numer)) + ((rem * (numer)) / (denom)); } )#define DIV_ROUND_CLOSEST_ULL(x,divisor) ( { typeof(divisor) __d = divisor; unsigned long long _tmp = (x) + (__d) / 2; do_div(_tmp, __d); _tmp; } )#define DIV_ROUND_CLOSEST(x,divisor) ( { typeof(x) __x = x; typeof(divisor) __d = divisor; (((typeof(x))-1) > 0 || ((typeof(divisor))-1) > 0 || (__x) > 0) ? (((__x) + ((__d) / 2)) / (__d)) : (((__x) - ((__d) / 2)) / (__d)); } )#define DIV_ROUND_UP_SECTOR_T(ll,d) DIV_ROUND_UP_ULL(ll, d)#define FIELD_SIZEOF(t,f) (sizeof(((t*)0)->f))#define round_down(x,y) ((x) & ~__round_mask(x, y))#define round_up(x,y) ((((x)-1) | __round_mask(x, y))+1)#define __round_mask(x,y) ((__typeof__(x))((y)-1))#define PTR_ALIGN(p,a) ((typeof(p))ALIGN((unsigned long)(p), (a)))#define REPEAT_BYTE(x) ((~0ul / 0xff) * (x))#define STACK_MAGIC 0xdeadbeef#define UINT64_MAX U64_MAX#define UINT32_MAX U32_MAX#define S64_MIN ((s64)(-S64_MAX - 1))#define S64_MAX ((s64)(U64_MAX>>1))#define U64_MAX ((u64)~0ULL)#define S32_MIN ((s32)(-S32_MAX - 1))#define S32_MAX ((s32)(U32_MAX>>1))#define S16_MIN ((s16)(-S16_MAX - 1))#define S16_MAX ((s16)(U16_MAX>>1))#define U16_MAX ((u16)~0U)#define S8_MIN ((s8)(-S8_MAX - 1))#define S8_MAX ((s8)(U8_MAX>>1))#define U8_MAX ((u8)~0U)#define ULLONG_MAX (~0ULL)#define LLONG_MIN (-LLONG_MAX - 1)#define LLONG_MAX ((long long)(~0ULL>>1))#define ULONG_MAX (~0UL)#define LONG_MIN (-LONG_MAX - 1)#define LONG_MAX ((long)(~0UL>>1))#define INT_MIN (-INT_MAX - 1)#define SHRT_MIN ((s16)(-SHRT_MAX - 1))#define SHRT_MAX ((s16)(USHRT_MAX>>1))#define _LINUX_KERNEL_H#define _LINUX_DELAY_H#define _LINUX_STRING_H_#define _LINUX_LINUX_STRING_H_#define __LINUX_STRINGIFY_H#define __ASM_SANDBOX_PTRACE_H#define __ALIGN_STR ".align 4"#define __ALIGN .align 4#define SYMBOL_NAME_LABEL(X) X ## :#define SYMBOL_NAME(X) X#define SYMBOL_NAME_STR(X) #X#define asmlinkage CPP_ASMLINKAGE#define CPP_ASMLINKAGE#define ASM_NL ;#define _LINUX_LINKAGE_H#define _IDE_H#define UUID_VARIANT 0x1#define UUID_VARIANT_SHIFT 7#define UUID_VARIANT_MASK 0xc0#define UUID_VERSION 0x4#define UUID_VERSION_SHIFT 12#define UUID_VERSION_MASK 0xf000#define UUID_BIN_LEN sizeof(struct uuid)#define UUID_STR_UPPER_CASE BIT(1)#define __UUID_H__#define _LINUX_POISON_H#define PARTITION_LINUX_LVM_GUID EFI_GUID( 0xe6d6d379, 0xf507, 0x44c2, 0xa2, 0x3c, 0x23, 0x8f, 0x2a, 0x3d, 0xf9, 0x28)#define PARTITION_LINUX_SWAP_GUID EFI_GUID( 0x0657fd6d, 0xa4ab, 0x43c4, 0x84, 0xe5, 0x09, 0x33, 0xc8, 0x4b, 0x4f, 0x4f)#define PARTITION_LINUX_RAID_GUID EFI_GUID( 0xa19d880f, 0x05fc, 0x4d3b, 0xa0, 0x06, 0x74, 0x3f, 0x0f, 0x84, 0x91, 0x1e)#define PARTITION_LINUX_FILE_SYSTEM_DATA_GUID EFI_GUID(0x0FC63DAF, 0x8483, 0x4772, 0x8E, 0x79, 0x3D, 0x69, 0xD8, 0x47, 0x7D, 0xE4)#define PARTITION_MSFT_RESERVED_GUID EFI_GUID( 0xE3C9E316, 0x0B5C, 0x4DB8, 0x81, 0x7D, 0xF9, 0x2D, 0xF0, 0x02, 0x15, 0xAE)#define LEGACY_MBR_PARTITION_GUID EFI_GUID( 0x024DEE41, 0x33E7, 0x11d3, 0x9D, 0x69, 0x00, 0x08, 0xC7, 0x81, 0xF3, 0x9F)#define GPT_ENTRY_SIZE 128#define EFI_PMBR_OSTYPE_EFI 0xEF#define BOOT_PART_COMP "PPCBoot"#define _PART_H#define CONFIG_SYS_MAX_FLASH_SECT 512#define FLASH_WRITE_TIMEOUT 500#define FLASH_ERASE_TIMEOUT 120000#define FLASH_BTYPE 0x0001#define FLASH_AMD_COMP 0x000FFFFF#define FLASH_VENDMASK 0xFFFF0000#define FLASH_TYPEMASK 0x0000FFFF#define FLASH_MAN_MCHP 0x02000000#define FLASH_MAN_CFI 0x01000000#define FLASH_MAN_ATM 0x00600000#define FLASH_MAN_SHARP 0x00500000#define FLASH_MAN_MT 0x00400000#define FLASH_MAN_INTEL 0x00300000#define FLASH_MAN_SST 0x00100000#define FLASH_MAN_EXCEL 0x00060000#define FLASH_MAN_TOSH 0x00050000#define FLASH_MAN_STM 0x00040000#define FLASH_MAN_MX 0x00030000#define FLASH_MAN_BM 0x00020000#define FLASH_MAN_FUJ 0x00010000#define FLASH_MAN_AMD 0x00000000#define FLASH_UNKNOWN 0xFFFF#define FLASH_STM32 0x00F2#define FLASH_S29GL128N 0x00F1#define FLASH_S29GL064M 0x00F0#define FLASH_MT28S4M16LC 0x00E1#define FLASH_FUJLV650 0x00D0#define FLASH_28F256J3A 0x00C6#define FLASH_28F128J3A 0x00C4#define FLASH_28F640J3A 0x00C2#define FLASH_28F320J3A 0x00C0#define FLASH_28F256K3 0x00B8#define FLASH_28F128K3 0x00B6#define FLASH_28F64K3 0x00B4#define FLASH_AMDL163B 0x00B3#define FLASH_AMDL163T 0x00B2#define FLASH_28F256L18T 0x00B0#define FLASH_MXLV320T 0x00AC#define FLASH_MXLV320B 0x00AB#define FLASH_AMLV256U 0x00AA#define FLASH_AMLV320T 0x00A8#define FLASH_AMLV320B 0x00A7#define FLASH_AMLV128U 0x00A6#define FLASH_AMLV640U 0x00A4#define FLASH_AT040 0x00A5#define FLASH_AM065 0x0093#define FLASH_AM033 0x00A3#define FLASH_AMLV320U 0x00A2#define FLASH_28F640C3B 0x00A1#define FLASH_28F640C3T 0x00A0#define FLASH_28F320C3B 0x009F#define FLASH_28F320C3T 0x009E#define FLASH_28F160C3B 0x009D#define FLASH_28F160C3T 0x009C#define FLASH_28F800C3B 0x009B#define FLASH_28F800C3T 0x009A#define FLASH_28F640J5 0x0099#define FLASH_AM065D 0x0093#define FLASH_28F160F3B 0x0093#define FLASH_LH28F016SCT 0x0092#define FLASH_AM033C 0x0091#define FLASH_AM640U 0x0090#define FLASH_28F320S3 0x0088#define FLASH_28F160S3 0x0086#define FLASH_28F320J5 0x0085#define FLASH_AM29F800B 0x0084#define FLASH_28F800_B 0x0083#define FLASH_28F016SV 0x0081#define FLASH_28F008S5 0x0080#define FLASH_INTEL640B 0x007B#define FLASH_INTEL640T 0x007A#define FLASH_INTEL320B 0x0079#define FLASH_INTEL320T 0x0078#define FLASH_INTEL160B 0x0077#define FLASH_INTEL160T 0x0076#define FLASH_INTEL800B 0x0075#define FLASH_INTEL800T 0x0074#define FLASH_28F400_B 0x0063#define FLASH_28F400_T 0x0062#define FLASH_MCHP100B 0x0061#define FLASH_MCHP100T 0x0060#define FLASH_STM800DB 0x005B#define FLASH_STM800DT 0x00D7#define FLASH_STM320DB 0x00CB#define FLASH_STMW320DB 0x0053#define FLASH_STMW320DT 0x0052#define FLASH_STM800AB 0x0051#define FLASH_SST040 0x000E#define FLASH_SST020 0x0024#define FLASH_SST640 0x004A#define FLASH_SST320 0x0048#define FLASH_SST160A 0x0046#define FLASH_SST800A 0x0044#define FLASH_SST400A 0x0042#define FLASH_SST200A 0x0040#define FLASH_AMDL640MT 0x001A#define FLASH_AMDL640MB 0x0019#define FLASH_AMD016 0x0018#define FLASH_AMDL640 0x0016#define FLASH_AMDLV065D 0x001A#define FLASH_AMDLV033C 0x0018#define FLASH_AMDL324B 0x0015#define FLASH_AMDL324T 0x0014#define FLASH_AMDL323B 0x0013#define FLASH_AMDL323T 0x0012#define FLASH_AMDL322B 0x0011#define FLASH_AMDL322T 0x0010#define FLASH_AM080 0x000A#define FLASH_AM320B 0x0009#define FLASH_AM320T 0x0008#define FLASH_AM160B 0x0007#define FLASH_AM160LV 0x0046#define FLASH_AM160T 0x0006#define FLASH_AM116DB 0x0027#define FLASH_AM116DT 0x0026#define FLASH_AM800B 0x0005#define FLASH_AM800T 0x0004#define FLASH_AM400B 0x0003#define FLASH_AM400T 0x0002#define FLASH_AM040 0x0001#define NUMONYX_256MBIT 0x8922#define TOSH_ID_FVB160 0x43#define TOSH_ID_FVT160 0xC2#define SHARP_ID_28F008SC 0xA6A6A6A6#define SHARP_ID_28F016SCZ 0xA0A0A0A0#define SHARP_ID_28F016SCL 0xAAAAAAAA#define INTEL_ID_28F320S3 0x00D400D4#define INTEL_ID_28F160S3 0x00D000D0#define INTEL_ID_28F256P30B 0x881C881C#define INTEL_ID_28F256P30T 0x88198819#define INTEL_ID_28F128P30B 0x881B881B#define INTEL_ID_28F128P30T 0x88188818#define INTEL_ID_28F64P30B 0x881A881A#define INTEL_ID_28F64P30T 0x88178817#define INTEL_ID_28F256K3 0x88038803#define INTEL_ID_28F128K3 0x88028802#define INTEL_ID_28F64K3 0x88018801#define INTEL_ID_28F256L18T 0x880D880D#define INTEL_ID_28F256J3A 0x001D001D#define INTEL_ID_28F128J3A 0x00180018#define INTEL_ID_28F640J3A 0x00170017#define INTEL_ID_28F320J3A 0x00160016#define INTEL_ID_28F640J5 0x00150015#define INTEL_ID_28F320J5 0x00140014#define INTEL_ID_28F128J3 0x89188918#define INTEL_ID_28F640C3B 0x88CD88CD#define INTEL_ID_28F640C3T 0x88CC88CC#define INTEL_ID_28F320C3B 0x88C588C5#define INTEL_ID_28F320C3T 0x88C488C4#define INTEL_ID_28F160C3B 0x88C388C3#define INTEL_ID_28F160C3T 0x88C288C2#define INTEL_ID_28F800C3B 0x88C188C1#define INTEL_ID_28F800C3T 0x88C088C0#define INTEL_ID_28F160F3B 0x88F488F4#define INTEL_ID_28F640B3B 0x88998899#define INTEL_ID_28F640B3T 0x88988898#define INTEL_ID_28F320B3B 0x88978897#define INTEL_ID_28F320B3T 0x88968896#define INTEL_ID_28F160B3B 0x88918891#define INTEL_ID_28F160B3T 0x88908890#define INTEL_ID_28F800B3B 0x88938893#define INTEL_ID_28F800B3T 0x88928892#define INTEL_ID_28F016S 0x66a066a0#define FLASH_PSD4256GV 0x00E9#define STM_ID_29W040B 0x00E300E3#define STM_ID_29W320EB 0x22572257#define STM_ID_29W320ET 0x22562256#define STM_ID_29W320DB 0x22CB22CB#define STM_ID_29W320DT 0x22CA22CA#define STM_ID_x800AB 0x005B005B#define STM_ID_F040B 0xE2#define SST_ID_xF040 0xBFD7BFD7#define SST_ID_xF020 0xBFD6BFD6#define SST_ID_xF6402 0x236A236A#define SST_ID_xF6401 0x236B236B#define SST_ID_xF3202 0x235A235A#define SST_ID_xF3201 0x235B235B#define SST_ID_xF1602 0x234A234A#define SST_ID_xF1601 0x234B234B#define SST_ID_xF160A 0x27822782#define SST_ID_xF800A 0x27812781#define SST_ID_xF400A 0x27802780#define SST_ID_xF200A 0x27892789#define FUJI_ID_29LV650UE 0x22d722d7#define FUJI_ID_29F800TA 0x22D622D6#define FUJI_ID_29F800BA 0x22582258#define ATM_ID_BV6416 0x000000D6#define ATM_ID_BV1614A 0x000000C8#define ATM_ID_BV1614 0x000000C0#define AMD_ID_LV650U 0x22D722D7#define AMD_ID_LV640U 0x22D722D7#define AMD_ID_LV320B_3 0x22002200#define AMD_ID_LV320B_2 0x221A221A#define AMD_ID_GL128N_3 0x22012201#define AMD_ID_GL128N_2 0x22212221#define AMD_ID_GL064MT_3 0x22012201#define AMD_ID_GL064MT_2 0x22102210#define AMD_ID_GL064M_3 0x22012201#define AMD_ID_GL064M_2 0x22132213#define AMD_ID_LV256U_3 0x22012201#define AMD_ID_LV256U_2 0x22122212#define AMD_ID_LV128U_3 0x22002200#define AMD_ID_LV128U_2 0x22122212#define AMD_ID_LV640MB_3 0x22002200#define AMD_ID_LV640MB_2 0x22102210#define AMD_ID_LV640MT_3 0x22012201#define AMD_ID_LV640MT_2 0x22102210#define AMD_ID_LV640U_3 0x22012201#define AMD_ID_LV640U_2 0x220C220C#define AMD_ID_DL640G_3 0x22012201#define AMD_ID_DL640G_2 0x22022202#define AMD_ID_MIRROR 0x227E227E#define AMD_ID_DL640 0x227E227E#define AMD_ID_DL324B 0x225F225F#define AMD_ID_DL324T 0x225C225C#define AMD_ID_DL323B 0x22532253#define AMD_ID_DL323T 0x22502250#define AMD_ID_DL322B 0x22562256#define AMD_ID_DL322T 0x22552255#define MX_ID_LV320B 0x22A822A8#define AMD_ID_LV320B 0x22F922F9#define MX_ID_LV320T 0x22A722A7#define AMD_ID_LV320T 0x22F622F6#define AMD_ID_DL163B 0x222B222B#define AMD_ID_DL163T 0x22282228#define AMD_ID_LV160B 0x22492249#define AMD_ID_LV160T 0x22C422C4#define AMD_ID_LV800B 0x225B225B#define AMD_ID_LV800T 0x22DA22DA#define AMD_ID_LV065D 0x93#define AMD_ID_LV033C 0xA3#define AMD_ID_LV400B 0x22BA22BA#define AMD_ID_LV400T 0x22B922B9#define AMD_ID_PL160CB 0x22452245#define AMD_ID_LV016B 0xc8#define AMD_ID_LV116DB 0x4C#define AMD_ID_LV116DT 0xC7#define AMD_ID_F032B 0x41#define AMD_ID_F016D 0xAD#define AMD_ID_F080B 0xD5#define STM_ID_M29W040B 0xE3#define AMD_ID_F040B 0xA4#define ATM_ID_LV040 0x13#define AMD_ID_F065D 0x93#define AMD_ID_F033C 0xA3#define AMD_ID_LV040B 0x4F#define MT_ID_28F400_B 0x44714471#define MT_ID_28F400_T 0x44704470#define EON_MANUFACT 0x011C011C#define EON_ALT_MANU 0x001C001C#define WINB_MANUFACT 0x00DA00DA#define AMIC_MANUFACT 0x00370037#define EXCEL_MANUFACT 0x004A004A#define MT2_MANUFACT 0x002C002C#define TOSH_MANUFACT 0x00980098#define MX_MANUFACT 0x00C200C2#define INTEL_ALT_MANU 0x00B000B0#define INTEL_MANUFACT 0x00890089#define MT_MANUFACT 0x00890089#define SST_MANUFACT 0x00BF00BF#define STM_MANUFACT 0x00200020#define ATM_MANUFACT 0x001F001F#define FUJ_MANUFACT 0x00040004#define AMD_MANUFACT 0x00010001#define FLAG_SETENV 0x80#define FLAG_PROTECT_INVALID 0x03#define FLAG_PROTECT_CLEAR 0x02#define FLAG_PROTECT_SET 0x01#define ERR_ABORTED 256#define ERR_PROG_ERROR 128#define ERR_UNKNOWN_FLASH_TYPE 64#define ERR_UNKNOWN_FLASH_VENDOR 32#define ERR_ALIGN 16#define ERR_INVAL 8#define ERR_PROTECTED 4#define ERR_NOT_ERASED 2#define ERR_TIMEOUT 1#define ERR_OK 0#define CFI_FLASH_SHIFT_WIDTH 3#define FLASH_CFI_X16X32 0x05#define FLASH_CFI_X8X16 0x02#define FLASH_CFI_X16 0x01#define FLASH_CFI_X8 0x00#define FLASH_CFI_BY64 0x08#define FLASH_CFI_BY32 0x04#define FLASH_CFI_BY16 0x02#define FLASH_CFI_BY8 0x01#define FLASH_CFI_64BIT 0x08#define FLASH_CFI_32BIT 0x04#define FLASH_CFI_16BIT 0x02#define FLASH_CFI_8BIT 0x01#define _FLASH_H_#define __arch__swab64s(x) do { *(x) = __swab64p((x)); } while (0)#define __arch__swab64p(x) __swab64(*(x))#define __SWAB_64_THRU_32__#define __arch__swab32s(x) do { *(x) = __swab32p((x)); } while (0)#define __arch__swab32p(x) __swab32(*(x))#define __arch__swab32(x) ___swab32(x)#define __arch__swab16s(x) do { *(x) = __swab16p((x)); } while (0)#define __arch__swab16p(x) __swab16(*(x))#define __arch__swab16(x) ___swab16(x)#define swab64s __swab64s#define swab32s __swab32s#define swab16s __swab16s#define swab64p __swab64p#define swab32p __swab32p#define swab16p __swab16p#define swab64 __swab64#define swab32 __swab32#define swab16 __swab16#define __arch__swab64(x) ___swab64(x)#define _LINUX_BYTEORDER_SWAB_H#define __cpu_to_le32s(x) do { (void)(x); } while (0)#define __le32_to_cpus(x) do { (void)(x); } while (0)#define htonl(x) ___htonl(x)#define ___htonl(x) __cpu_to_be32(x)#define be16_to_cpus __be16_to_cpus#define cpu_to_be16s __cpu_to_be16s#define be32_to_cpus __be32_to_cpus#define cpu_to_be32s __cpu_to_be32s#define be64_to_cpus __be64_to_cpus#define cpu_to_be64s __cpu_to_be64s#define cpu_to_le16s __cpu_to_le16s#define le32_to_cpus __le32_to_cpus#define cpu_to_le32s __cpu_to_le32s#define le64_to_cpus __le64_to_cpus#define cpu_to_le64s __cpu_to_le64s#define be16_to_cpup __be16_to_cpup#define cpu_to_be16p __cpu_to_be16p#define cpu_to_be32p __cpu_to_be32p#define cpu_to_be64p __cpu_to_be64p#define le16_to_cpup __le16_to_cpup#define cpu_to_le16p __cpu_to_le16p#define le32_to_cpup __le32_to_cpup#define cpu_to_le32p __cpu_to_le32p#define le64_to_cpup __le64_to_cpup#define cpu_to_le64p __cpu_to_le64p#define _LINUX_BYTEORDER_GENERIC_H#define __be16_to_cpus(x) __swab16s((x))#define __cpu_to_be16s(x) __swab16s((x))#define __be32_to_cpus(x) __swab32s((x))#define __cpu_to_be32s(x) __swab32s((x))#define __be64_to_cpus(x) __swab64s((x))#define __cpu_to_be64s(x) __swab64s((x))#define __cpu_to_le16s(x) do { (void)(x); } while (0)#define __le64_to_cpus(x) do { (void)(x); } while (0)#define __cpu_to_le64s(x) do { (void)(x); } while (0)#define __constant_be16_to_cpu(x) ___constant_swab16((__force __u16)(__be16)(x))#define __constant_cpu_to_be16(x) ((__force __be16)___constant_swab16((x)))#define __constant_be32_to_cpu(x) ___constant_swab32((__force __u32)(__be32)(x))#define __constant_cpu_to_be32(x) ((__force __be32)___constant_swab32((x)))#define __constant_be64_to_cpu(x) ___constant_swab64((__force __u64)(__be64)(x))#define __constant_cpu_to_be64(x) ((__force __be64)___constant_swab64((x)))#define __constant_le16_to_cpu(x) ((__force __u16)(__le16)(x))#define __constant_le32_to_cpu(x) ((__force __u32)(__le32)(x))#define __constant_cpu_to_le32(x) ((__force __le32)(__u32)(x))#define __constant_le64_to_cpu(x) ((__force __u64)(__le64)(x))#define __constant_cpu_to_le64(x) ((__force __le64)(__u64)(x))#define __constant_ntohs(x) ___constant_swab16((__force __be16)(x))#define __constant_htons(x) ((__force __be16)___constant_swab16((x)))#define __constant_ntohl(x) ___constant_swab32((__force __be32)(x))#define __constant_htonl(x) ((__force __be32)___constant_swab32((x)))#define __LITTLE_ENDIAN_BITFIELD#define _LINUX_BYTEORDER_LITTLE_ENDIAN_H#define __BYTEORDER_HAS_U64__#define __ASM_SANDBOX_BYTEORDER_H#define __COMPILER_H__#define __SIZEOF_LONG__ 8#define _U_BOOT_SANDBOX_H_#define _U_BOOT_H_ 1#define MAX_LMB_REGIONS 8#define _LINUX_LMB_H#define ll_end(_type) ({ static char end[0] __aligned(4) __attribute__((unused, section(".u_boot_list_3"))); (_type *)&end; })#define ll_start(_type) ({ static char start[0] __aligned(4) __attribute__((unused, section(".u_boot_list_1"))); (_type *)&start; })#define ll_entry_get(_type,_name,_list) ({ extern _type _u_boot_list_2_ ## _list ## _2_ ## _name; _type *_ll_result = &_u_boot_list_2_ ## _list ## _2_ ## _name; _ll_result; })#define ll_entry_declare_list(_type,_name,_list) _type _u_boot_list_2_ ## _list ## _2_ ## _name[] __aligned(4) __attribute__((unused, section(".u_boot_list_2_"#_list"_2_"#_name)))#define __LINKER_LISTS_H__#define U_BOOT_CMD_WITH_SUBCMDS(_name,_usage,_help,__VA_ARGS__...) U_BOOT_SUBCMDS(_name, __VA_ARGS__) U_BOOT_CMDREP_COMPLETE(_name, CONFIG_SYS_MAXARGS, do_ ## _name, _usage, _help, complete_ ## _name)#define U_BOOT_SUBCMD_MKENT(_name,_maxargs,_rep,_do_cmd) U_BOOT_SUBCMD_MKENT_COMPLETE(_name, _maxargs, _rep, _do_cmd, NULL)#define U_BOOT_SUBCMD_MKENT_COMPLETE(_name,_maxargs,_rep,_do_cmd,_comp) U_BOOT_CMD_MKENT_COMPLETE(_name, _maxargs, _rep, _do_cmd, "", "", _comp)#define U_BOOT_CMDREP_COMPLETE(_name,_maxargs,_cmd_rep,_usage,_help,_comp) ll_entry_declare(cmd_tbl_t, _name, cmd) = U_BOOT_CMDREP_MKENT_COMPLETE(_name, _maxargs, _cmd_rep, _usage, _help, _comp)#define U_BOOT_CMDREP_MKENT_COMPLETE(_name,_maxargs,_cmd_rep,_usage,_help,_comp) { #_name, _maxargs, _cmd_rep, cmd_discard_repeatable, _usage, _CMD_HELP(_help) _CMD_COMPLETE(_comp) }#define U_BOOT_SUBCMDS(_cmdname,__VA_ARGS__...) static cmd_tbl_t _cmdname ## _subcmds[] = { __VA_ARGS__ }; U_BOOT_SUBCMDS_RELOC(_cmdname) U_BOOT_SUBCMDS_DO_CMD(_cmdname) U_BOOT_SUBCMDS_COMPLETE(_cmdname)#define U_BOOT_SUBCMDS_COMPLETE(_cmdname) static int complete_ ## _cmdname(int argc, char * const argv[], char last_char, int maxv, char *cmdv[]) { return complete_subcmdv(_cmdname ## _subcmds, ARRAY_SIZE(_cmdname ## _subcmds), argc - 1, argv + 1, last_char, maxv, cmdv); }#define U_BOOT_SUBCMDS_DO_CMD(_cmdname) static int do_ ## _cmdname(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[], int *repeatable) { cmd_tbl_t *subcmd; _cmdname ## _subcmds_reloc(); if (argc < 2 || argc > CONFIG_SYS_MAXARGS) return CMD_RET_USAGE; subcmd = find_cmd_tbl(argv[1], _cmdname ## _subcmds, ARRAY_SIZE(_cmdname ## _subcmds)); if (!subcmd || argc - 1 > subcmd->maxargs) return CMD_RET_USAGE; if (flag == CMD_FLAG_REPEAT && !cmd_is_repeatable(subcmd)) return CMD_RET_SUCCESS; return subcmd->cmd_rep(subcmd, flag, argc - 1, argv + 1, repeatable); }#define U_BOOT_SUBCMDS_RELOC(_cmdname) static void _cmdname ## _subcmds_reloc(void) { }#define __COMMAND_H#define _HASH_H#define strtoul(cp,endp,base) simple_strtoul(cp, endp, base)#define FDT_V17_SIZE (FDT_V16_SIZE + sizeof(fdt32_t))#define FDT_V16_SIZE FDT_V3_SIZE#define FDT_V3_SIZE (FDT_V2_SIZE + sizeof(fdt32_t))#define FDT_V2_SIZE (FDT_V1_SIZE + sizeof(fdt32_t))#define FDT_V1_SIZE (7*sizeof(fdt32_t))#define FDT_TAGSIZE sizeof(fdt32_t)#define FDT_MAGIC 0xd00dfeed#define FDT_H#define fdt_set_hdr_(name) static inline void fdt_set_ ## name(void *fdt, uint32_t val) { struct fdt_header *fdth = (struct fdt_header *)fdt; fdth->name = cpu_to_fdt32(val); }#define fdt_appendprop_string(fdt,nodeoffset,name,str) fdt_appendprop((fdt), (nodeoffset), (name), (str), strlen(str)+1)#define fdt_setprop_empty(fdt,nodeoffset,name) fdt_setprop((fdt), (nodeoffset), (name), NULL, 0)#define fdt_property_string(fdt,name,str) fdt_property(fdt, name, str, strlen(str)+1)#define FDT_MAX_NCELLS 4#define fdt_for_each_property_offset(property,fdt,node) for (property = fdt_first_property_offset(fdt, node); property >= 0; property = fdt_next_property_offset(fdt, property))#define FDT_MAX_PHANDLE 0xfffffffe#define FDT_ERR_MAX 17#define FDT_ERR_NOPHANDLES 17#define FDT_ERR_BADOVERLAY 16#define FDT_ERR_BADVALUE 15#define FDT_ERR_BADNCELLS 14#define FDT_ERR_INTERNAL 13#define FDT_ERR_BADLAYOUT 12#define FDT_ERR_BADMAGIC 9#define FDT_ERR_BADSTATE 7#define FDT_ERR_BADPHANDLE 6#define FDT_ERR_BADPATH 5#define FDT_ERR_BADOFFSET 4#define FDT_ERR_EXISTS 2#define LIBFDT_H#define PCI_VENDOR_ID_OCZ 0x1b85#define PCI_DEVICE_ID_XEN_PLATFORM 0x0001#define PCI_VENDOR_ID_XEN 0x5853#define PCI_DEVICE_ID_RME_DIGI32_8 0x9898#define PCI_DEVICE_ID_RME_DIGI32_PRO 0x9897#define PCI_DEVICE_ID_RME_DIGI32 0x9896#define PCI_VENDOR_ID_XILINX_RME 0xea60#define PCI_DEVICE_ID_TIGERJET_100 0x0002#define PCI_DEVICE_ID_TIGERJET_300 0x0001#define PCI_VENDOR_ID_TIGERJET 0xe159#define PCI_SUBDEVICE_ID_EXSYS_4055 0x4055#define PCI_SUBDEVICE_ID_EXSYS_4014 0x4014#define PCI_SUBVENDOR_ID_EXSYS 0xd84d#define PCI_DEVICE_ID_DIGIUM_HFC4S 0xb410#define PCI_VENDOR_ID_DIGIUM 0xd161#define PCI_VENDOR_ID_3COM_2 0xa727#define PCI_DEVICE_ID_NETMOS_9922 0x9922#define PCI_DEVICE_ID_NETMOS_9912 0x9912#define PCI_DEVICE_ID_NETMOS_9904 0x9904#define PCI_DEVICE_ID_NETMOS_9901 0x9901#define PCI_DEVICE_ID_NETMOS_9900 0x9900#define PCI_DEVICE_ID_NETMOS_9865 0x9865#define PCI_DEVICE_ID_NETMOS_9855 0x9855#define PCI_DEVICE_ID_NETMOS_9845 0x9845#define PCI_DEVICE_ID_NETMOS_9835 0x9835#define PCI_DEVICE_ID_NETMOS_9815 0x9815#define PCI_DEVICE_ID_NETMOS_9805 0x9805#define PCI_DEVICE_ID_NETMOS_9755 0x9755#define PCI_DEVICE_ID_NETMOS_9745 0x9745#define PCI_DEVICE_ID_NETMOS_9735 0x9735#define PCI_DEVICE_ID_NETMOS_9715 0x9715#define PCI_DEVICE_ID_NETMOS_9705 0x9705#define PCI_VENDOR_ID_NETMOS 0x9710#define PCI_DEVICE_ID_HOLTEK_6565 0x6565#define PCI_VENDOR_ID_HOLTEK 0x9412#define PCI_DEVICE_ID_ADAPTEC2_SCAMP 0x0503#define PCI_DEVICE_ID_ADAPTEC2_OBSIDIAN 0x0500#define PCI_DEVICE_ID_ADAPTEC2_7899P 0x00cf#define PCI_DEVICE_ID_ADAPTEC2_7899D 0x00c3#define PCI_DEVICE_ID_ADAPTEC2_7899B 0x00c1#define PCI_DEVICE_ID_ADAPTEC2_7899A 0x00c0#define PCI_DEVICE_ID_ADAPTEC2_7892P 0x008f#define PCI_DEVICE_ID_ADAPTEC2_7892D 0x0083#define PCI_DEVICE_ID_ADAPTEC2_7892B 0x0081#define PCI_DEVICE_ID_ADAPTEC2_7892A 0x0080#define PCI_DEVICE_ID_ADAPTEC2_7896 0x005f#define PCI_DEVICE_ID_ADAPTEC2_3950U2D 0x0051#define PCI_DEVICE_ID_ADAPTEC2_3940U2 0x0050#define PCI_DEVICE_ID_ADAPTEC2_7890 0x001f#define PCI_DEVICE_ID_ADAPTEC2_7890B 0x0013#define PCI_DEVICE_ID_ADAPTEC2_2930U2 0x0011#define PCI_DEVICE_ID_ADAPTEC2_2940U2 0x0010#define PCI_VENDOR_ID_ADAPTEC2 0x9005#define PCI_DEVICE_ID_ADAPTEC_7888 0x8878#define PCI_DEVICE_ID_ADAPTEC_7887 0x8778#define PCI_DEVICE_ID_ADAPTEC_7886 0x8678#define PCI_DEVICE_ID_ADAPTEC_7885 0x8578#define PCI_DEVICE_ID_ADAPTEC_7884 0x8478#define PCI_DEVICE_ID_ADAPTEC_7883 0x8378#define PCI_DEVICE_ID_ADAPTEC_7882 0x8278#define PCI_DEVICE_ID_ADAPTEC_7881 0x8178#define PCI_DEVICE_ID_ADAPTEC_7880 0x8078#define PCI_DEVICE_ID_ADAPTEC_7895 0x7895#define PCI_DEVICE_ID_ADAPTEC_7874 0x7478#define PCI_DEVICE_ID_ADAPTEC_7873 0x7378#define PCI_DEVICE_ID_ADAPTEC_7872 0x7278#define PCI_DEVICE_ID_ADAPTEC_7871 0x7178#define PCI_DEVICE_ID_ADAPTEC_7870 0x7078#define PCI_DEVICE_ID_ADAPTEC_7861 0x6178#define PCI_DEVICE_ID_ADAPTEC_7860 0x6078#define PCI_DEVICE_ID_ADAPTEC_1480A 0x6075#define PCI_DEVICE_ID_ADAPTEC_3860 0x6038#define PCI_DEVICE_ID_ADAPTEC_7855 0x5578#define PCI_DEVICE_ID_ADAPTEC_7850 0x5078#define PCI_DEVICE_ID_ADAPTEC_38602 0x3860#define PCI_DEVICE_ID_ADAPTEC_7821 0x2178#define PCI_DEVICE_ID_ADAPTEC_7810 0x1078#define PCI_VENDOR_ID_ADAPTEC 0x9004#define PCI_VENDOR_ID_KTI 0x8e2e#define PCI_SUBDEVICE_ID_COMPUTONE_PG6 0x0003#define PCI_SUBDEVICE_ID_COMPUTONE_PG8 0x0002#define PCI_SUBDEVICE_ID_COMPUTONE_PG4 0x0001#define PCI_SUBVENDOR_ID_COMPUTONE 0x8e0e#define PCI_DEVICE_ID_COMPUTONE_PG 0x0302#define PCI_DEVICE_ID_COMPUTONE_IP2EX 0x0291#define PCI_VENDOR_ID_COMPUTONE 0x8e0e#define PCI_DEVICE_ID_SCALEMP_VSMP_CTL 0x1010#define PCI_VENDOR_ID_SCALEMP 0x8686#define PCI_DEVICE_ID_INTEL_S21152BB 0xb152#define PCI_DEVICE_ID_INTEL_WILDCATPOINT_LPC 0x9cc3#define PCI_DEVICE_ID_INTEL_WILDCATPOINT_ADSP 0x9cb6#define PCI_DEVICE_ID_INTEL_WILDCATPOINT_HDA 0x9ca0#define PCI_DEVICE_ID_INTEL_WILDCATPOINT_AHCI 0x9c83#define PCI_DEVICE_ID_INTEL_LYNXPOINT_LPC 0x9c45#define PCI_DEVICE_ID_INTEL_LYNXPOINT_AHCI 0x9c03#define PCI_DEVICE_ID_INTEL_IXP2800 0x9004#define PCI_DEVICE_ID_INTEL_TCF_UART_3 0x8814#define PCI_DEVICE_ID_INTEL_TCF_UART_2 0x8813#define PCI_DEVICE_ID_INTEL_TCF_UART_1 0x8812#define PCI_DEVICE_ID_INTEL_TCF_UART_0 0x8811#define PCI_DEVICE_ID_INTEL_TCF_SATA 0x880b#define PCI_DEVICE_ID_INTEL_TCF_SDIO_1 0x880a#define PCI_DEVICE_ID_INTEL_TCF_SDIO_0 0x8809#define PCI_DEVICE_ID_INTEL_TCF_GBE 0x8802#define PCI_DEVICE_ID_INTEL_IXP4XX 0x8500#define PCI_DEVICE_ID_INTEL_84460GX 0x84ea#define PCI_DEVICE_ID_INTEL_82454NX 0x84cb#define PCI_DEVICE_ID_INTEL_82451NX 0x84ca#define PCI_DEVICE_ID_INTEL_82450GX 0x84c5#define PCI_DEVICE_ID_INTEL_82454GX 0x84c4#define PCI_DEVICE_ID_INTEL_ITC_LPC 0x8186#define PCI_DEVICE_ID_INTEL_SCH_IDE 0x811a#define PCI_DEVICE_ID_INTEL_SCH_LPC 0x8119#define PCI_DEVICE_ID_INTEL_82372FB_1 0x7601#define PCI_DEVICE_ID_INTEL_82443GX_2 0x71a2#define PCI_DEVICE_ID_INTEL_82443GX_0 0x71a0#define PCI_DEVICE_ID_INTEL_82443MX_3 0x719b#define PCI_DEVICE_ID_INTEL_82443MX_1 0x7199#define PCI_DEVICE_ID_INTEL_82443MX_0 0x7198#define PCI_DEVICE_ID_INTEL_440MX_6 0x7196#define PCI_DEVICE_ID_INTEL_440MX 0x7195#define PCI_DEVICE_ID_INTEL_82443BX_2 0x7192#define PCI_DEVICE_ID_INTEL_82443BX_1 0x7191#define PCI_DEVICE_ID_INTEL_82443BX_0 0x7190#define PCI_DEVICE_ID_INTEL_82443LX_1 0x7181#define PCI_DEVICE_ID_INTEL_82443LX_0 0x7180#define PCI_DEVICE_ID_INTEL_82810E_IG 0x7125#define PCI_DEVICE_ID_INTEL_82810E_MC 0x7124#define PCI_DEVICE_ID_INTEL_82810_IG3 0x7123#define PCI_DEVICE_ID_INTEL_82810_MC3 0x7122#define PCI_DEVICE_ID_INTEL_82810_IG1 0x7121#define PCI_DEVICE_ID_INTEL_82810_MC1 0x7120#define PCI_DEVICE_ID_INTEL_82371AB_3 0x7113#define PCI_DEVICE_ID_INTEL_82371AB_2 0x7112#define PCI_DEVICE_ID_INTEL_82371AB 0x7111#define PCI_DEVICE_ID_INTEL_82371AB_0 0x7110#define PCI_DEVICE_ID_INTEL_82439TX 0x7100#define PCI_DEVICE_ID_INTEL_82437VX 0x7030#define PCI_DEVICE_ID_INTEL_82371SB_2 0x7020#define PCI_DEVICE_ID_INTEL_82371SB_1 0x7010#define PCI_DEVICE_ID_INTEL_82371SB_0 0x7000#define PCI_DEVICE_ID_INTEL_EP80579_1 0x5032#define PCI_DEVICE_ID_INTEL_EP80579_0 0x5031#define PCI_DEVICE_ID_INTEL_IOAT_SCNB 0x65ff#define PCI_DEVICE_ID_INTEL_5400_FBD1 0x4036#define PCI_DEVICE_ID_INTEL_5400_FBD0 0x4035#define PCI_DEVICE_ID_INTEL_5400_ERR 0x4030#define PCI_DEVICE_ID_INTEL_5100_22 0x65f6#define PCI_DEVICE_ID_INTEL_5100_21 0x65f5#define PCI_DEVICE_ID_INTEL_5100_19 0x65f3#define PCI_DEVICE_ID_INTEL_5100_16 0x65f0#define PCI_DEVICE_ID_INTEL_IOAT_SNB 0x402f#define PCI_DEVICE_ID_INTEL_JAKETOWN_UBOX 0x3ce0#define PCI_DEVICE_ID_INTEL_UNC_R3QPI1 0x3c45#define PCI_DEVICE_ID_INTEL_UNC_R3QPI0 0x3c44#define PCI_DEVICE_ID_INTEL_UNC_R2PCIE 0x3c43#define PCI_DEVICE_ID_INTEL_UNC_QPI1 0x3c42#define PCI_DEVICE_ID_INTEL_UNC_QPI0 0x3c41#define PCI_DEVICE_ID_INTEL_UNC_IMC3 0x3cb5#define PCI_DEVICE_ID_INTEL_UNC_IMC2 0x3cb4#define PCI_DEVICE_ID_INTEL_UNC_IMC1 0x3cb1#define PCI_DEVICE_ID_INTEL_UNC_IMC0 0x3cb0#define PCI_DEVICE_ID_INTEL_UNC_HA 0x3c46#define PCI_DEVICE_ID_INTEL_IOAT_SNB9 0x3c2f#define PCI_DEVICE_ID_INTEL_IOAT_SNB8 0x3c2e#define PCI_DEVICE_ID_INTEL_IOAT_SNB7 0x3c27#define PCI_DEVICE_ID_INTEL_IOAT_SNB6 0x3c26#define PCI_DEVICE_ID_INTEL_IOAT_SNB5 0x3c25#define PCI_DEVICE_ID_INTEL_IOAT_SNB4 0x3c24#define PCI_DEVICE_ID_INTEL_IOAT_SNB3 0x3c23#define PCI_DEVICE_ID_INTEL_IOAT_SNB2 0x3c22#define PCI_DEVICE_ID_INTEL_IOAT_SNB1 0x3c21#define PCI_DEVICE_ID_INTEL_IOAT_SNB0 0x3c20#define PCI_DEVICE_ID_INTEL_5_3400_SERIES_SMBUS 0x3b30#define PCI_DEVICE_ID_INTEL_5_3400_SERIES_LPC_MAX 0x3b1f#define PCI_DEVICE_ID_INTEL_5_3400_SERIES_LPC_MIN 0x3b00#define PCI_DEVICE_ID_INTEL_ICH10_5 0x3a60#define PCI_DEVICE_ID_INTEL_ICH10_4 0x3a30#define PCI_DEVICE_ID_INTEL_ICH10_3 0x3a1a#define PCI_DEVICE_ID_INTEL_ICH10_2 0x3a18#define PCI_DEVICE_ID_INTEL_ICH10_1 0x3a16#define PCI_DEVICE_ID_INTEL_ICH10_0 0x3a14#define PCI_DEVICE_ID_INTEL_IOAT_JSF9 0x3719#define PCI_DEVICE_ID_INTEL_IOAT_JSF8 0x3718#define PCI_DEVICE_ID_INTEL_IOAT_JSF7 0x3717#define PCI_DEVICE_ID_INTEL_IOAT_JSF6 0x3716#define PCI_DEVICE_ID_INTEL_IOAT_JSF5 0x3715#define PCI_DEVICE_ID_INTEL_IOAT_JSF4 0x3714#define PCI_DEVICE_ID_INTEL_IOAT_JSF3 0x3713#define PCI_DEVICE_ID_INTEL_IOAT_JSF2 0x3712#define PCI_DEVICE_ID_INTEL_IOAT_JSF1 0x3711#define PCI_DEVICE_ID_INTEL_IOAT_JSF0 0x3710#define PCI_DEVICE_ID_INTEL_FBD_CNB 0x360c#define PCI_DEVICE_ID_INTEL_IOAT_CNB 0x360b#define PCI_DEVICE_ID_INTEL_I7300_MCH_FB1 0x3610#define PCI_DEVICE_ID_INTEL_I7300_MCH_FB0 0x360f#define PCI_DEVICE_ID_INTEL_I7300_MCH_ERR 0x360c#define PCI_DEVICE_ID_INTEL_E7525_MCH 0x359e#define PCI_DEVICE_ID_INTEL_MCH_PC1 0x359a#define PCI_DEVICE_ID_INTEL_MCH_PC 0x3599#define PCI_DEVICE_ID_INTEL_MCH_PB1 0x3598#define PCI_DEVICE_ID_INTEL_MCH_PB 0x3597#define PCI_DEVICE_ID_INTEL_MCH_PA1 0x3596#define PCI_DEVICE_ID_INTEL_MCH_PA 0x3595#define PCI_DEVICE_ID_INTEL_E7320_MCH 0x3592#define PCI_DEVICE_ID_INTEL_E7520_MCH 0x3590#define PCI_DEVICE_ID_INTEL_82855GM_IG 0x3582#define PCI_DEVICE_ID_INTEL_82855GM_HB 0x3580#define PCI_DEVICE_ID_INTEL_82854_IG 0x358e#define PCI_DEVICE_ID_INTEL_82854_HB 0x358c#define PCI_DEVICE_ID_INTEL_82830_CGC 0x3577#define PCI_DEVICE_ID_INTEL_82830_HB 0x3575#define PCI_DEVICE_ID_INTEL_IOAT_TBG3 0x3433#define PCI_DEVICE_ID_INTEL_IOAT_TBG2 0x3432#define PCI_DEVICE_ID_INTEL_IOAT_TBG1 0x3431#define PCI_DEVICE_ID_INTEL_IOAT_TBG0 0x3430#define PCI_DEVICE_ID_INTEL_X58_HUB_MGMT 0x342e#define PCI_DEVICE_ID_INTEL_IOAT_TBG7 0x342c#define PCI_DEVICE_ID_INTEL_IOAT_TBG6 0x342b#define PCI_DEVICE_ID_INTEL_IOAT_TBG5 0x342a#define PCI_DEVICE_ID_INTEL_IOAT_TBG4 0x3429#define PCI_DEVICE_ID_INTEL_82855PM_HB 0x3340#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_TC_REV2 0x2db3#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_RANK_REV2 0x2db2#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_ADDR_REV2 0x2db1#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH2_CTRL_REV2 0x2db0#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_TC_REV2 0x2dab#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_RANK_REV2 0x2daa#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_ADDR_REV2 0x2da9#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_CTRL_REV2 0x2da8#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_TC_REV2 0x2da3#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_RANK_REV2 0x2da2#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_ADDR_REV2 0x2da1#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_CTRL_REV2 0x2da0#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TEST_REV2 0x2d9c#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_RAS_REV2 0x2d9a#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TAD_REV2 0x2d99#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MCR_REV2 0x2d98#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_TC 0x2cab#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_RANK 0x2caa#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_ADDR 0x2ca9#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH1_CTRL 0x2ca8#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_TC 0x2ca3#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_RANK 0x2ca2#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_ADDR 0x2ca1#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_CH0_CTRL 0x2ca0#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TEST 0x2c9C#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MC_TAD 0x2c99#define PCI_DEVICE_ID_INTEL_LYNNFIELD_MCR 0x2c98#define PCI_DEVICE_ID_INTEL_LYNNFIELD_QPI_PHY0 0x2c91#define PCI_DEVICE_ID_INTEL_LYNNFIELD_QPI_LINK0 0x2c90#define PCI_DEVICE_ID_INTEL_LYNNFIELD_SAD 0x2c81#define PCI_DEVICE_ID_INTEL_LYNNFIELD_NONCORE_REV2 0x2c70#define PCI_DEVICE_ID_INTEL_LYNNFIELD_NONCORE_ALT 0x2c51#define PCI_DEVICE_ID_INTEL_LYNNFIELD_NONCORE 0x2c50#define PCI_DEVICE_ID_INTEL_I7_NONCORE_ALT 0x2c40#define PCI_DEVICE_ID_INTEL_I7_NONCORE 0x2c41#define PCI_DEVICE_ID_INTEL_I7_MC_CH2_TC 0x2c33#define PCI_DEVICE_ID_INTEL_I7_MC_CH2_RANK 0x2c32#define PCI_DEVICE_ID_INTEL_I7_MC_CH2_ADDR 0x2c31#define PCI_DEVICE_ID_INTEL_I7_MC_CH2_CTRL 0x2c30#define PCI_DEVICE_ID_INTEL_I7_MC_CH1_TC 0x2c2b#define PCI_DEVICE_ID_INTEL_I7_MC_CH1_RANK 0x2c2a#define PCI_DEVICE_ID_INTEL_I7_MC_CH1_ADDR 0x2c29#define PCI_DEVICE_ID_INTEL_I7_MC_CH1_CTRL 0x2c28#define PCI_DEVICE_ID_INTEL_I7_MC_CH0_TC 0x2c23#define PCI_DEVICE_ID_INTEL_I7_MC_CH0_RANK 0x2c22#define PCI_DEVICE_ID_INTEL_I7_MC_CH0_ADDR 0x2c21#define PCI_DEVICE_ID_INTEL_I7_MC_CH0_CTRL 0x2c20#define PCI_DEVICE_ID_INTEL_I7_MC_TEST 0x2c1c#define PCI_DEVICE_ID_INTEL_I7_MC_RAS 0x2c1a#define PCI_DEVICE_ID_INTEL_I7_MC_TAD 0x2c19#define PCI_DEVICE_ID_INTEL_I7_MCR 0x2c18#define PCI_DEVICE_ID_INTEL_ICH9_AHCI 0x2922#define PCI_DEVICE_ID_INTEL_ICH9_8 0x2918#define PCI_DEVICE_ID_INTEL_ICH9_7 0x2916#define PCI_DEVICE_ID_INTEL_ICH9_6 0x2930#define PCI_DEVICE_ID_INTEL_ICH9_5 0x2919#define PCI_DEVICE_ID_INTEL_ICH9_4 0x2914#define PCI_DEVICE_ID_INTEL_ICH9_3 0x2913#define PCI_DEVICE_ID_INTEL_ICH9_2 0x2912#define PCI_DEVICE_ID_INTEL_ICH9_1 0x2917#define PCI_DEVICE_ID_INTEL_ICH9_0 0x2910#define PCI_DEVICE_ID_INTEL_ICH8_6 0x2850#define PCI_DEVICE_ID_INTEL_ICH8_5 0x283e#define PCI_DEVICE_ID_INTEL_ICH8_4 0x2815#define PCI_DEVICE_ID_INTEL_ICH8_3 0x2814#define PCI_DEVICE_ID_INTEL_ICH8_2 0x2812#define PCI_DEVICE_ID_INTEL_ICH8_1 0x2811#define PCI_DEVICE_ID_INTEL_ICH8_0 0x2810#define PCI_DEVICE_ID_INTEL_COUGARPOINT_HDMI 0x2806#define PCI_DEVICE_ID_INTEL_ICH7_21 0x27df#define PCI_DEVICE_ID_INTEL_ICH7_20 0x27de#define PCI_DEVICE_ID_INTEL_ICH7_19 0x27dd#define PCI_DEVICE_ID_INTEL_ICH7_17 0x27da#define PCI_DEVICE_ID_INTEL_NM10_AHCI 0x27c1#define PCI_DEVICE_ID_INTEL_ICH7_31 0x27bd#define PCI_DEVICE_ID_INTEL_TGP_LPC 0x27bc#define PCI_DEVICE_ID_INTEL_ICH7_30 0x27b0#define PCI_DEVICE_ID_INTEL_ICH7_1 0x27b9#define PCI_DEVICE_ID_INTEL_ICH7_0 0x27b8#define PCI_DEVICE_ID_INTEL_ESB2_18 0x269e#define PCI_DEVICE_ID_INTEL_ESB2_17 0x269b#define PCI_DEVICE_ID_INTEL_ESB2_14 0x2698#define PCI_DEVICE_ID_INTEL_ESB2_0 0x2670#define PCI_DEVICE_ID_INTEL_ICH6_19 0x266f#define PCI_DEVICE_ID_INTEL_ICH6_18 0x266e#define PCI_DEVICE_ID_INTEL_ICH6_17 0x266d#define PCI_DEVICE_ID_INTEL_ICH6_16 0x266a#define PCI_DEVICE_ID_INTEL_ICH6_2 0x2642#define PCI_DEVICE_ID_INTEL_ICH6_1 0x2641#define PCI_DEVICE_ID_INTEL_ICH6_0 0x2640#define PCI_DEVICE_ID_INTEL_82945GM_IG 0x27A2#define PCI_DEVICE_ID_INTEL_82945GM_HB 0x27A0#define PCI_DEVICE_ID_INTEL_3000_HB 0x2778#define PCI_DEVICE_ID_INTEL_82945G_IG 0x2772#define PCI_DEVICE_ID_INTEL_82945G_HB 0x2770#define PCI_DEVICE_ID_INTEL_5000_FBD1 0x25F6#define PCI_DEVICE_ID_INTEL_5000_FBD0 0x25F5#define PCI_DEVICE_ID_INTEL_5000_ERR 0x25F0#define PCI_DEVICE_ID_INTEL_82915GM_IG 0x2592#define PCI_DEVICE_ID_INTEL_82915GM_HB 0x2590#define PCI_DEVICE_ID_INTEL_82915G_IG 0x2582#define PCI_DEVICE_ID_INTEL_82915G_HB 0x2580#define PCI_DEVICE_ID_INTEL_82875_HB 0x2578#define PCI_DEVICE_ID_INTEL_82865_IG 0x2572#define PCI_DEVICE_ID_INTEL_82865_HB 0x2570#define PCI_DEVICE_ID_INTEL_82845G_IG 0x2562#define PCI_DEVICE_ID_INTEL_82845G_HB 0x2560#define PCI_DEVICE_ID_INTEL_E7501_MCH 0x254c#define PCI_DEVICE_ID_INTEL_82860_HB 0x2531#define PCI_DEVICE_ID_INTEL_82850_HB 0x2530#define PCI_DEVICE_ID_INTEL_82820_UP_HB 0x2501#define PCI_DEVICE_ID_INTEL_82820_HB 0x2500#define PCI_DEVICE_ID_INTEL_ESB_10 0x25ac#define PCI_DEVICE_ID_INTEL_ESB_9 0x25ab#define PCI_DEVICE_ID_INTEL_ESB_5 0x25a6#define PCI_DEVICE_ID_INTEL_ESB_4 0x25a4#define PCI_DEVICE_ID_INTEL_ESB_2 0x25a2#define PCI_DEVICE_ID_INTEL_ESB_1 0x25a1#define PCI_DEVICE_ID_INTEL_82801EB_13 0x24dd#define PCI_DEVICE_ID_INTEL_82801EB_12 0x24dc#define PCI_DEVICE_ID_INTEL_82801EB_11 0x24db#define PCI_DEVICE_ID_INTEL_82801EB_6 0x24d6#define PCI_DEVICE_ID_INTEL_82801EB_5 0x24d5#define PCI_DEVICE_ID_INTEL_82801EB_3 0x24d3#define PCI_DEVICE_ID_INTEL_82801EB_1 0x24d1#define PCI_DEVICE_ID_INTEL_82801EB_0 0x24d0#define PCI_DEVICE_ID_INTEL_82801DB_12 0x24cc#define PCI_DEVICE_ID_INTEL_82801DB_11 0x24cb#define PCI_DEVICE_ID_INTEL_82801DB_10 0x24ca#define PCI_DEVICE_ID_INTEL_82801DB_9 0x24c9#define PCI_DEVICE_ID_INTEL_82801DB_6 0x24c6#define PCI_DEVICE_ID_INTEL_82801DB_5 0x24c5#define PCI_DEVICE_ID_INTEL_82801DB_3 0x24c3#define PCI_DEVICE_ID_INTEL_82801DB_2 0x24c2#define PCI_DEVICE_ID_INTEL_82801DB_1 0x24c1#define PCI_DEVICE_ID_INTEL_82801DB_0 0x24c0#define PCI_DEVICE_ID_INTEL_82801CA_12 0x248c#define PCI_DEVICE_ID_INTEL_82801CA_11 0x248b#define PCI_DEVICE_ID_INTEL_82801CA_10 0x248a#define PCI_DEVICE_ID_INTEL_82801CA_6 0x2486#define PCI_DEVICE_ID_INTEL_82801CA_5 0x2485#define PCI_DEVICE_ID_INTEL_82801CA_3 0x2483#define PCI_DEVICE_ID_INTEL_82801CA_0 0x2480#define PCI_DEVICE_ID_INTEL_82801E_11 0x245b#define PCI_DEVICE_ID_INTEL_82801E_0 0x2450#define PCI_DEVICE_ID_INTEL_82801BA_11 0x244e#define PCI_DEVICE_ID_INTEL_82801BA_10 0x244c#define PCI_DEVICE_ID_INTEL_82801BA_9 0x244b#define PCI_DEVICE_ID_INTEL_82801BA_8 0x244a#define PCI_DEVICE_ID_INTEL_82801BA_6 0x2448#define PCI_DEVICE_ID_INTEL_82801BA_4 0x2445#define PCI_DEVICE_ID_INTEL_82801BA_2 0x2443#define PCI_DEVICE_ID_INTEL_82801BA_0 0x2440#define PCI_DEVICE_ID_INTEL_82801AB_8 0x2428#define PCI_DEVICE_ID_INTEL_82801AB_6 0x2426#define PCI_DEVICE_ID_INTEL_82801AB_5 0x2425#define PCI_DEVICE_ID_INTEL_82801AB_3 0x2423#define PCI_DEVICE_ID_INTEL_82801AB_1 0x2421#define PCI_DEVICE_ID_INTEL_82801AB_0 0x2420#define PCI_DEVICE_ID_INTEL_82801AA_8 0x2418#define PCI_DEVICE_ID_INTEL_82801AA_6 0x2416#define PCI_DEVICE_ID_INTEL_82801AA_5 0x2415#define PCI_DEVICE_ID_INTEL_82801AA_3 0x2413#define PCI_DEVICE_ID_INTEL_82801AA_1 0x2411#define PCI_DEVICE_ID_INTEL_82801AA_0 0x2410#define PCI_DEVICE_ID_INTEL_DH89XXCC_LPC_MAX 0x231f#define PCI_DEVICE_ID_INTEL_DH89XXCC_LPC_MIN 0x2310#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_MAX 0x1e5f#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_Z77 0x1e44#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_Z75 0x1e46#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_UM77 0x1e58#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_SFF_SAMPLE 0x1e43#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_QS77 0x1e56#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_QM77 0x1e55#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_Q77 0x1e47#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_Q75 0x1e48#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_NM70 0x1e5f#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_MBL_SAMPLE 0x1e42#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_HM77 0x1e57#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_HM76 0x1e59#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_HM75 0x1e5d#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_HM70 0x1e5e#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_H77 0x1e4A#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_C216 0x1e53#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_B75 0x1e49#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_LPC_MIN 0x1e41#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_XHCI 0x1e31#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_HDA 0x1e20#define PCI_DEVICE_ID_INTEL_PANTHERPOINT_AHCI_MOBILE 0x1e03#define PCI_DEVICE_ID_INTEL_PATSBURG_LPC_1 0x1d41#define PCI_DEVICE_ID_INTEL_PATSBURG_LPC_0 0x1d40#define PCI_DEVICE_ID_INTEL_PATSBURG_LPC 0x1d40#define PCI_DEVICE_ID_INTEL_PATSBURG_SMBUS 0x1d22#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_MAX 0x1c5f#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_H61 0x1c5c#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_C206 0x1c56#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_C204 0x1c54#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_C202 0x1c52#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_B65 0x1c50#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_QM67 0x1c4f#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_Q67 0x1c4e#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_QS67 0x1c4d#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_Q65 0x1c4c#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_HM67 0x1c4b#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_H67 0x1c4a#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_HM65 0x1c49#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_UM67 0x1c47#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_P67 0x1c46#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_Z68 0x1c44#define PCI_DEVICE_ID_INTEL_COUGARPOINT_LPC_MIN 0x1c41#define PCI_DEVICE_ID_INTEL_COUGARPOINT_SMBUS 0x1c22#define PCI_DEVICE_ID_INTEL_COUGARPOINT_HDA 0x1c20#define PCI_DEVICE_ID_INTEL_COUGARPOINT_AHCI_SERIES6 0x1c02#define PCI_DEVICE_ID_INTEL_COUGARPOINT_AHCI_MOBILE 0x1c03#define PCI_DEVICE_ID_INTEL_IOAT 0x1a38#define PCI_DEVICE_ID_INTEL_82845_HB 0x1a30#define PCI_DEVICE_ID_INTEL_82840_HB 0x1a21#define PCI_DEVICE_ID_INTEL_80960_RP 0x1960#define PCI_DEVICE_ID_INTEL_I210_SERDES_FLASHLESS 0x157c#define PCI_DEVICE_ID_INTEL_I210_COPPER_FLASHLESS 0x157b#define PCI_DEVICE_ID_INTEL_I211_COPPER 0x1539#define PCI_DEVICE_ID_INTEL_I210_EXTPHY 0x1538#define PCI_DEVICE_ID_INTEL_I210_1000BASEKX 0x1537#define PCI_DEVICE_ID_INTEL_I210_SERDES 0x1536#define PCI_DEVICE_ID_INTEL_I210_COPPER 0x1533#define PCI_DEVICE_ID_INTEL_I211_UNPROGRAMMED 0x1532#define PCI_DEVICE_ID_INTEL_I210_UNPROGRAMMED 0x1531#define PCI_DEVICE_ID_INTEL_82439 0x1250#define PCI_DEVICE_ID_INTEL_82380FB 0x124b#define PCI_DEVICE_ID_INTEL_82441 0x1237#define PCI_DEVICE_ID_INTEL_82371MX 0x1234#define PCI_DEVICE_ID_INTEL_82371FB_1 0x1230#define PCI_DEVICE_ID_INTEL_82371FB_0 0x122e#define PCI_DEVICE_ID_INTEL_82437 0x122d#define PCI_DEVICE_ID_INTEL_7205_0 0x255d#define PCI_DEVICE_ID_INTEL_7505_0 0x2550#define PCI_DEVICE_ID_INTEL_82092AA_0 0x1221#define PCI_DEVICE_ID_INTEL_82815_CGC 0x1132#define PCI_DEVICE_ID_INTEL_82815_MC 0x1130#define PCI_DEVICE_ID_INTEL_82573L_SOL 0x108F#define PCI_DEVICE_ID_INTEL_82573E_SOL 0x1085#define PCI_DEVICE_ID_INTEL_8257X_SOL 0x1062#define PCI_DEVICE_ID_INTEL_80003ES2LAN_SERDES_SPT 0x10BB#define PCI_DEVICE_ID_INTEL_80003ES2LAN_COPPER_SPT 0x10BA#define PCI_DEVICE_ID_INTEL_80003ES2LAN_SERDES_DPT 0x1098#define PCI_DEVICE_ID_INTEL_80003ES2LAN_COPPER_DPT 0x1096#define PCI_DEVICE_ID_INTEL_82546GB_QUAD_COPPER_KSP3 0x10B5#define PCI_DEVICE_ID_INTEL_82574L 0x10D3#define PCI_DEVICE_ID_INTEL_82573L 0x109A#define PCI_DEVICE_ID_INTEL_82573E_IAMT 0x108C#define PCI_DEVICE_ID_INTEL_82573E 0x108B#define PCI_DEVICE_ID_INTEL_82572EI 0x10B9#define PCI_DEVICE_ID_INTEL_82572EI_SERDES 0x107F#define PCI_DEVICE_ID_INTEL_82572EI_FIBER 0x107E#define PCI_DEVICE_ID_INTEL_82572EI_COPPER 0x107D#define PCI_DEVICE_ID_INTEL_82571EB_SERDES_QUAD 0x10DA#define PCI_DEVICE_ID_INTEL_82571EB_SERDES_DUAL 0x10D9#define PCI_DEVICE_ID_INTEL_82571EB_QUAD_COPPER_LOWPROFILE 0x10BC#define PCI_DEVICE_ID_INTEL_82571EB_QUAD_FIBER 0x10A5#define PCI_DEVICE_ID_INTEL_82571PT_QUAD_COPPER 0x10D5#define PCI_DEVICE_ID_INTEL_82571EB_QUAD_COPPER 0x10A4#define PCI_DEVICE_ID_INTEL_82571EB_SERDES 0x1060#define PCI_DEVICE_ID_INTEL_82571EB_FIBER 0x105F#define PCI_DEVICE_ID_INTEL_82571EB_COPPER 0x105E#define PCI_DEVICE_ID_INTEL_82562ET 0x1031#define PCI_DEVICE_ID_INTEL_82557 0x1229#define PCI_DEVICE_ID_INTEL_82559ER 0x1209#define PCI_DEVICE_ID_INTEL_82559 0x1030#define PCI_DEVICE_ID_INTEL_82545GM_COPPER 0x1026#define PCI_DEVICE_ID_INTEL_82540EM_LOM 0x1015#define PCI_DEVICE_ID_INTEL_82546GB_COPPER 0x1079#define PCI_DEVICE_ID_INTEL_82546EB_FIBER 0x1012#define PCI_DEVICE_ID_INTEL_82545EM_FIBER 0x1011#define PCI_DEVICE_ID_INTEL_82546EB_COPPER 0x1010#define PCI_DEVICE_ID_INTEL_82545EM_COPPER 0x100F#define PCI_DEVICE_ID_INTEL_82540EM 0x100E#define PCI_DEVICE_ID_INTEL_82544GC_LOM 0x100D#define PCI_DEVICE_ID_INTEL_82544GC_COPPER 0x100C#define PCI_DEVICE_ID_INTEL_82544EI_FIBER 0x1009#define PCI_DEVICE_ID_INTEL_82544EI_COPPER 0x1008#define PCI_DEVICE_ID_INTEL_82543GC_COPPER 0x1004#define PCI_DEVICE_ID_INTEL_82543GC_FIBER 0x1001#define PCI_DEVICE_ID_INTEL_82542 0x1000#define PCI_DEVICE_ID_INTEL_82541GI_LF 0x107c#define PCI_DEVICE_ID_INTEL_82541ER 0x1078#define PCI_DEVICE_ID_INTEL_BYT_EMMC2 0x0f50#define PCI_DEVICE_ID_INTEL_VALLEYVIEW_SATA_ALT 0x0f23#define PCI_DEVICE_ID_INTEL_VALLEYVIEW_SATA 0x0f22#define PCI_DEVICE_ID_INTEL_VALLEYVIEW_IDE_ALT 0x0f21#define PCI_DEVICE_ID_INTEL_VALLEYVIEW_IDE 0x0f20#define PCI_DEVICE_ID_INTEL_VALLEYVIEW_LPC 0x0f1c#define PCI_DEVICE_ID_INTEL_BYT_SD 0x0f16#define PCI_DEVICE_ID_INTEL_BYT_SDIO 0x0f15#define PCI_DEVICE_ID_INTEL_CENTERTON_ILB 0x0c60#define PCI_DEVICE_ID_INTEL_I960RM 0x0962#define PCI_DEVICE_ID_INTEL_I960 0x0960#define PCI_DEVICE_ID_INTEL_QRK_ILB 0x095E#define PCI_DEVICE_ID_INTEL_QRK_EMAC 0x0937#define PCI_DEVICE_ID_INTEL_QRK_UART 0x0936#define PCI_DEVICE_ID_INTEL_QRK_SDIO 0x08A7#define PCI_DEVICE_ID_INTEL_MRST_SD2 0x084F#define PCI_DEVICE_ID_INTEL_MFD_EMMC1 0x0824#define PCI_DEVICE_ID_INTEL_MFD_EMMC0 0x0823#define PCI_DEVICE_ID_INTEL_MFD_SDIO2 0x0822#define PCI_DEVICE_ID_INTEL_MFD_SDIO1 0x0821#define PCI_DEVICE_ID_INTEL_MFD_SD 0x0820#define PCI_DEVICE_ID_INTEL_MRST_SD1 0x0808#define PCI_DEVICE_ID_INTEL_MRST_SD0 0x0807#define PCI_DEVICE_ID_INTEL_82378 0x0484#define PCI_DEVICE_ID_INTEL_82424 0x0483#define PCI_DEVICE_ID_INTEL_82375 0x0482#define PCI_DEVICE_ID_INTEL_80333_1 0x0372#define PCI_DEVICE_ID_INTEL_80333_0 0x0370#define PCI_DEVICE_ID_INTEL_80332_1 0x0332#define PCI_DEVICE_ID_INTEL_80332_0 0x0330#define PCI_DEVICE_ID_INTEL_PXHV 0x032C#define PCI_DEVICE_ID_INTEL_PXH_1 0x032A#define PCI_DEVICE_ID_INTEL_PXH_0 0x0329#define PCI_DEVICE_ID_INTEL_PXHD_1 0x0321#define PCI_DEVICE_ID_INTEL_PXHD_0 0x0320#define PCI_DEVICE_ID_INTEL_HSW_IMC 0x0c00#define PCI_DEVICE_ID_INTEL_IVB_IMC 0x0154#define PCI_DEVICE_ID_INTEL_SNB_IMC 0x0100#define PCI_DEVICE_ID_INTEL_EESSC 0x0008#define PCI_VENDOR_ID_INTEL 0x8086#define PCI_DEVICE_ID_DCI_PCCOM2 0x0004#define PCI_DEVICE_ID_DCI_PCCOM8 0x0002#define PCI_DEVICE_ID_DCI_PCCOM4 0x0001#define PCI_VENDOR_ID_DCI 0x6666#define PCI_DEVICE_ID_DUNORD_I3000 0x0001#define PCI_VENDOR_ID_DUNORD 0x5544#define PCI_DEVICE_ID_S3_SONICVIBES 0xca00#define PCI_DEVICE_ID_S3_PROSAVAGE8 0x8d04#define PCI_DEVICE_ID_S3_SAVAGE4 0x8a25#define PCI_DEVICE_ID_S3_968 0x88f0#define PCI_DEVICE_ID_S3_868 0x8880#define PCI_DEVICE_ID_S3_TRIO 0x8811#define PCI_VENDOR_ID_S3 0x5333#define PCI_DEVICE_ID_ACCESSIO_WDG_CSM 0x22c0#define PCI_VENDOR_ID_ACCESSIO 0x494f#define PCI_DEVICE_ID_AKS_ALADDINCARD 0x0100#define PCI_VENDOR_ID_AKS 0x416c#define PCI_DEVICE_ID_NX3031 0x0100#define PCI_DEVICE_ID_NX2031_XG_MGMT2 0x0025#define PCI_DEVICE_ID_NX2031_XG_MGMT 0x0024#define PCI_DEVICE_ID_NX2031_HMEZ 0x0005#define PCI_DEVICE_ID_NX2031_IMEZ 0x0004#define PCI_DEVICE_ID_NX2031_4GCU 0x0003#define PCI_DEVICE_ID_NX2031_10GCX4 0x0002#define PCI_DEVICE_ID_NX2031_10GXSR 0x0001#define PCI_VENDOR_ID_NETXEN 0x4040#define PCI_DEVICE_ID_3DLABS_PERMEDIA2V 0x0009#define PCI_DEVICE_ID_3DLABS_PERMEDIA2 0x0007#define PCI_VENDOR_ID_3DLABS 0x3d3d#define PCI_DEVICE_ID_HINT_VXPROII_IDE 0x8013#define PCI_VENDOR_ID_HINT 0x3388#define PCI_DEVICE_ID_TEHUTI_3014 0x3014#define PCI_DEVICE_ID_TEHUTI_3010 0x3010#define PCI_DEVICE_ID_TEHUTI_3009 0x3009#define PCI_VENDOR_ID_TEHUTI 0x1fc9#define PCI_DEVICE_ID_TEKRAM_DC290 0xdc29#define PCI_VENDOR_ID_TEKRAM 0x1de1#define PCI_SUBSYSTEM_ID_CIRCUITCO_MINNOWBOARD 0x0001#define PCI_VENDOR_ID_CIRCUITCO 0x1cc8#define PCI_VENDOR_ID_ASMEDIA 0x1b21#define PCI_VENDOR_ID_AZWAVE 0x1a3b#define PCI_VENDOR_ID_QMI 0x1a32#define PCI_DEVICE_ID_KORENIX_JETCARDF3 0x17ff#define PCI_DEVICE_ID_KORENIX_JETCARDF2 0x1700#define PCI_DEVICE_ID_KORENIX_JETCARDF1 0x16ff#define PCI_DEVICE_ID_KORENIX_JETCARDF0 0x1600#define PCI_VENDOR_ID_KORENIX 0x1982#define PCI_DEVICE_ID_JMICRON_JMB390_MS 0x2393#define PCI_DEVICE_ID_JMICRON_JMB388_ESD 0x2392#define PCI_DEVICE_ID_JMICRON_JMB388_SD 0x2391#define PCI_DEVICE_ID_JMICRON_JMB385_MS 0x2388#define PCI_DEVICE_ID_JMICRON_JMB38X_MS 0x2383#define PCI_DEVICE_ID_JMICRON_JMB38X_MMC 0x2382#define PCI_DEVICE_ID_JMICRON_JMB38X_SD 0x2381#define PCI_DEVICE_ID_JMICRON_JMB369 0x2369#define PCI_DEVICE_ID_JMICRON_JMB368 0x2368#define PCI_DEVICE_ID_JMICRON_JMB366 0x2366#define PCI_DEVICE_ID_JMICRON_JMB365 0x2365#define PCI_DEVICE_ID_JMICRON_JMB364 0x2364#define PCI_DEVICE_ID_JMICRON_JMB363 0x2363#define PCI_DEVICE_ID_JMICRON_JMB362 0x2362#define PCI_DEVICE_ID_JMICRON_JMB361 0x2361#define PCI_DEVICE_ID_JMICRON_JMB360 0x2360#define PCI_VENDOR_ID_JMICRON 0x197B#define PCI_DEVICE_ID_ATTANSIC_L2 0x2048#define PCI_DEVICE_ID_ATTANSIC_L1 0x1048#define PCI_VENDOR_ID_ATTANSIC 0x1969#define PCI_VENDOR_ID_PASEMI 0x1959#define PCI_DEVICE_ID_MPC8610 0x7018#define PCI_DEVICE_ID_MPC8641D 0x7011#define PCI_DEVICE_ID_MPC8641 0x7010#define PCI_DEVICE_ID_P5010 0x0429#define PCI_DEVICE_ID_P5010E 0x0428#define PCI_DEVICE_ID_P5020 0x0421#define PCI_DEVICE_ID_P5020E 0x0420#define PCI_DEVICE_ID_P3041 0x041F#define PCI_DEVICE_ID_P3041E 0x041E#define PCI_DEVICE_ID_P2040 0x0411#define PCI_DEVICE_ID_P2040E 0x0410#define PCI_DEVICE_ID_P4040 0x0409#define PCI_DEVICE_ID_P4040E 0x0408#define PCI_DEVICE_ID_P4080 0x0401#define PCI_DEVICE_ID_P4080E 0x0400#define PCI_DEVICE_ID_P1013 0x0119#define PCI_DEVICE_ID_P1013E 0x0118#define PCI_DEVICE_ID_P1022 0x0111#define PCI_DEVICE_ID_P1022E 0x0110#define PCI_DEVICE_ID_P1011 0x0109#define PCI_DEVICE_ID_P1011E 0x0108#define PCI_DEVICE_ID_P1021 0x0103#define PCI_DEVICE_ID_P1021E 0x0102#define PCI_DEVICE_ID_P1020 0x0101#define PCI_DEVICE_ID_P1020E 0x0100#define PCI_DEVICE_ID_P2010 0x0079#define PCI_DEVICE_ID_P2010E 0x0078#define PCI_DEVICE_ID_P2020 0x0071#define PCI_DEVICE_ID_P2020E 0x0070#define PCI_DEVICE_ID_MPC8536 0x0051#define PCI_DEVICE_ID_MPC8536E 0x0050#define PCI_DEVICE_ID_MPC8572 0x0041#define PCI_DEVICE_ID_MPC8572E 0x0040#define PCI_DEVICE_ID_MPC8544 0x0033#define PCI_DEVICE_ID_MPC8544E 0x0032#define PCI_DEVICE_ID_MPC8533 0x0031#define PCI_DEVICE_ID_MPC8533E 0x0030#define PCI_DEVICE_ID_MPC8567 0x0023#define PCI_DEVICE_ID_MPC8567E 0x0022#define PCI_DEVICE_ID_MPC8568 0x0021#define PCI_DEVICE_ID_MPC8568E 0x0020#define PCI_DEVICE_ID_MPC8569 0x0060#define PCI_DEVICE_ID_MPC8569E 0x0061#define PCI_DEVICE_ID_MPC8545 0x001a#define PCI_DEVICE_ID_MPC8545E 0x0019#define PCI_DEVICE_ID_MPC8547E 0x0018#define PCI_DEVICE_ID_MPC8543 0x0015#define PCI_DEVICE_ID_MPC8543E 0x0014#define PCI_DEVICE_ID_MPC8548 0x0013#define PCI_DEVICE_ID_MPC8548E 0x0012#define PCI_DEVICE_ID_MPC8377 0x00c7#define PCI_DEVICE_ID_MPC8377E 0x00c6#define PCI_DEVICE_ID_MPC8378 0x00c5#define PCI_DEVICE_ID_MPC8378E 0x00c4#define PCI_DEVICE_ID_MPC8314 0x00b7#define PCI_DEVICE_ID_MPC8314E 0x00b6#define PCI_DEVICE_ID_MPC8315 0x00b5#define PCI_DEVICE_ID_MPC8315E 0x00b4#define PCI_DEVICE_ID_MPC8308 0xc006#define PCI_VENDOR_ID_FREESCALE 0x1957#define PCI_DEVICE_ID_TDI_EHCI 0x0101#define PCI_VENDOR_ID_TDI 0x192E#define PCI_DEVICE_ID_SOLARFLARE_SFC4000B 0x0710#define PCI_DEVICE_ID_SOLARFLARE_SFC4000A_1 0x6703#define PCI_DEVICE_ID_SOLARFLARE_SFC4000A_0 0x0703#define PCI_VENDOR_ID_SOLARFLARE 0x1924#define PCI_DEVICE_ID_RENESAS_SH7786 0x0010#define PCI_DEVICE_ID_RENESAS_SH7785 0x0007#define PCI_DEVICE_ID_RENESAS_SH7763 0x0004#define PCI_DEVICE_ID_RENESAS_SH7780 0x0002#define PCI_DEVICE_ID_RENESAS_SH7781 0x0001#define PCI_VENDOR_ID_RENESAS 0x1912#define PCI_VENDOR_ID_SILAN 0x1904#define PCI_VENDOR_ID_COMMTECH 0x18f7#define PCI_VENDOR_ID_TOPSPIN 0x1867#define PCI_DEVICE_ID_SITECOM_DC105V2 0x3069#define PCI_VENDOR_ID_SITECOM 0x182d#define PCI_DEVICE_ID_HERC_UNI 0x5832#define PCI_DEVICE_ID_HERC_WIN 0x5732#define PCI_DEVICE_ID_S2IO_UNI 0x5831#define PCI_DEVICE_ID_S2IO_WIN 0x5731#define PCI_VENDOR_ID_S2IO 0x17d5#define PCI_DEVICE_ID_ARECA_1681 0x1681#define PCI_DEVICE_ID_ARECA_1680 0x1680#define PCI_DEVICE_ID_ARECA_1381 0x1381#define PCI_DEVICE_ID_ARECA_1380 0x1380#define PCI_DEVICE_ID_ARECA_1280 0x1280#define PCI_DEVICE_ID_ARECA_1270 0x1270#define PCI_DEVICE_ID_ARECA_1260 0x1260#define PCI_DEVICE_ID_ARECA_1230 0x1230#define PCI_DEVICE_ID_ARECA_1220 0x1220#define PCI_DEVICE_ID_ARECA_1210 0x1210#define PCI_DEVICE_ID_ARECA_1202 0x1202#define PCI_DEVICE_ID_ARECA_1201 0x1201#define PCI_DEVICE_ID_ARECA_1200 0x1200#define PCI_DEVICE_ID_ARECA_1170 0x1170#define PCI_DEVICE_ID_ARECA_1160 0x1160#define PCI_DEVICE_ID_ARECA_1130 0x1130#define PCI_DEVICE_ID_ARECA_1120 0x1120#define PCI_DEVICE_ID_ARECA_1110 0x1110#define PCI_VENDOR_ID_ARECA 0x17d3#define PCI_VENDOR_ID_LENOVO 0x17aa#define PCI_DEVICE_ID_RDC_D1010 0x1010#define PCI_DEVICE_ID_RDC_R6061 0x6061#define PCI_DEVICE_ID_RDC_R6060 0x6060#define PCI_DEVICE_ID_RDC_R6040 0x6040#define PCI_DEVICE_ID_RDC_R6030 0x6030#define PCI_DEVICE_ID_RDC_R6020 0x6020#define PCI_VENDOR_ID_RDC 0x17f3#define PCI_DEVICE_ID_BELKIN_F5D7010V7 0x701f#define PCI_VENDOR_ID_BELKIN 0x1799#define PCI_DEVICE_ID_ALTIMA_AC1003 0x03eb#define PCI_DEVICE_ID_ALTIMA_AC9100 0x03ea#define PCI_DEVICE_ID_ALTIMA_AC1001 0x03e9#define PCI_DEVICE_ID_ALTIMA_AC1000 0x03e8#define PCI_VENDOR_ID_ALTIMA 0x173b#define PCI_DEVICE_ID_LINKSYS_EG1064 0x1064#define PCI_VENDOR_ID_LINKSYS 0x1737#define PCI_DEVICE_ID_VITESSE_VSC7174 0x7174#define PCI_VENDOR_ID_VITESSE 0x1725#define PCI_DEVICE_ID_CENATEK_IDE 0x0001#define PCI_VENDOR_ID_CENATEK 0x16CA#define PCI_DEVICE_ID_REVOLUTION 0x0044#define PCI_VENDOR_ID_NETCELL 0x169c#define PCI_VENDOR_ID_ATHEROS 0x168c#define PCI_DEVICE_ID_BCM1250_HT 0x0002#define PCI_DEVICE_ID_BCM1250_PCI 0x0001#define PCI_VENDOR_ID_SIBYTE 0x166d#define PCI_DEVICE_ID_BROCADE_CT_FC 0x0021#define PCI_DEVICE_ID_BROCADE_FC_8G1P 0x0017#define PCI_DEVICE_ID_BROCADE_CT 0x0014#define PCI_VENDOR_ID_BROCADE 0x1657#define PCI_VENDOR_ID_ARIMA 0x161f#define PCI_DEVICE_ID_FARSITE_TE1C 0x1612#define PCI_DEVICE_ID_FARSITE_TE1 0x1610#define PCI_DEVICE_ID_FARSITE_T4U 0x0640#define PCI_DEVICE_ID_FARSITE_T2U 0x0620#define PCI_DEVICE_ID_FARSITE_T1U 0x0610#define PCI_DEVICE_ID_FARSITE_T4P 0x0440#define PCI_DEVICE_ID_FARSITE_T2P 0x0400#define PCI_VENDOR_ID_FARSITE 0x1619#define PCI_VENDOR_ID_PDC 0x15e9#define PCI_DEVICE_ID_ADDIDATA_APCIe7800 0x7013#define PCI_DEVICE_ID_ADDIDATA_APCIe7500 0x7012#define PCI_DEVICE_ID_ADDIDATA_APCIe7420 0x7011#define PCI_DEVICE_ID_ADDIDATA_APCIe7300 0x7010#define PCI_DEVICE_ID_ADDIDATA_APCI7800_3 0x700F#define PCI_DEVICE_ID_ADDIDATA_APCI7300_3 0x700E#define PCI_DEVICE_ID_ADDIDATA_APCI7420_3 0x700D#define PCI_DEVICE_ID_ADDIDATA_APCI7500_3 0x700C#define PCI_DEVICE_ID_ADDIDATA_APCI7300_2 0x700B#define PCI_DEVICE_ID_ADDIDATA_APCI7420_2 0x700A#define PCI_DEVICE_ID_ADDIDATA_APCI7500_2 0x7009#define PCI_DEVICE_ID_ADDIDATA_APCI7800 0x818E#define PCI_DEVICE_ID_ADDIDATA_APCI7300 0x7002#define PCI_DEVICE_ID_ADDIDATA_APCI7420 0x7001#define PCI_DEVICE_ID_ADDIDATA_APCI7500 0x7000#define PCI_VENDOR_ID_ADDIDATA 0x15B8#define PCI_VENDOR_ID_ADDIDATA_OLD 0x10E8#define PCI_DEVICE_ID_QUICKNET_XJ 0x0500#define PCI_VENDOR_ID_QUICKNET 0x15e2#define PCI_VENDOR_ID_DFI 0x15bd#define PCI_DEVICE_ID_MELLANOX_SINAI 0x6274#define PCI_DEVICE_ID_MELLANOX_SINAI_OLD 0x5e8c#define PCI_DEVICE_ID_MELLANOX_ARBEL 0x6282#define PCI_DEVICE_ID_MELLANOX_ARBEL_COMPAT 0x6278#define PCI_DEVICE_ID_MELLANOX_TAVOR_BRIDGE 0x5a46#define PCI_DEVICE_ID_MELLANOX_TAVOR 0x5a44#define PCI_VENDOR_ID_MELLANOX 0x15b3#define PCI_DEVICE_ID_ZOLTRIX_2BD0 0x2bd0#define PCI_VENDOR_ID_ZOLTRIX 0x15b0#define PCI_DEVICE_ID_RASTEL_2PORT 0x2000#define PCI_VENDOR_ID_MORETON 0x15aa#define PCI_DEVICE_ID_SYBA_1P_ECP 0x0783#define PCI_DEVICE_ID_SYBA_2P_EPP 0x0782#define PCI_VENDOR_ID_SYBA 0x1592#define PCI_SUBDEVICE_ID_PCI_RAS8 0xf010#define PCI_SUBDEVICE_ID_PCI_RAS4 0xf001#define PCI_SUBVENDOR_ID_PERLE 0x155f#define PCI_DEVICE_ID_MIPS_MSC01 0x0001#define PCI_VENDOR_ID_MIPS 0x153f#define PCI_DEVICE_ID_ENE_722 0x1422#define PCI_DEVICE_ID_ENE_720 0x1421#define PCI_DEVICE_ID_ENE_1420 0x1420#define PCI_DEVICE_ID_ENE_712 0x1412#define PCI_DEVICE_ID_ENE_710 0x1411#define PCI_DEVICE_ID_ENE_1410 0x1410#define PCI_DEVICE_ID_ENE_1225 0x1225#define PCI_DEVICE_ID_ENE_1211 0x1211#define PCI_DEVICE_ID_ENE_CB714_SD_2 0x0751#define PCI_DEVICE_ID_ENE_CB714_SD 0x0750#define PCI_DEVICE_ID_ENE_CB712_SD_2 0x0551#define PCI_DEVICE_ID_ENE_CB712_SD 0x0550#define PCI_DEVICE_ID_ENE_CB710_FLASH 0x0510#define PCI_VENDOR_ID_ENE 0x1524#define PCI_DEVICE_ID_MAINPINE_PBRIDGE 0x0100#define PCI_VENDOR_ID_MAINPINE 0x1522#define PCI_DEVICE_ID_TOPIC_TP560 0x0000#define PCI_VENDOR_ID_TOPIC 0x151f#define PCI_DEVICE_ID_BCM4401B0 0x4402#define PCI_DEVICE_ID_BCM4401 0x4401#define PCI_DEVICE_ID_TIGON3_5906M 0x1713#define PCI_DEVICE_ID_TIGON3_5906 0x1712#define PCI_DEVICE_ID_TIGON3_5901_2 0x170e#define PCI_DEVICE_ID_BCM4401B1 0x170c#define PCI_DEVICE_ID_TIGON3_5901 0x170d#define PCI_DEVICE_ID_TIGON3_5753F 0x16fe#define PCI_DEVICE_ID_TIGON3_5753M 0x16fd#define PCI_DEVICE_ID_TIGON3_5753 0x16f7#define PCI_DEVICE_ID_TIGON3_5781 0x16dd#define PCI_DEVICE_ID_TIGON3_5703A3 0x16c7#define PCI_DEVICE_ID_TIGON3_5702A3 0x16c6#define PCI_DEVICE_ID_NX2_57810_VF 0x16af#define PCI_DEVICE_ID_NX2_57810_MF 0x16ae#define PCI_DEVICE_ID_NX2_57840_VF 0x16ad#define PCI_DEVICE_ID_NX2_5708S 0x16ac#define PCI_DEVICE_ID_NX2_5706S 0x16aa#define PCI_DEVICE_ID_NX2_57800_VF 0x16a9#define PCI_DEVICE_ID_TIGON3_5704S 0x16a8#define PCI_DEVICE_ID_TIGON3_5703X 0x16a7#define PCI_DEVICE_ID_TIGON3_5702X 0x16a6#define PCI_DEVICE_ID_NX2_57800_MF 0x16a5#define PCI_DEVICE_ID_NX2_57840_MF 0x16a4#define PCI_DEVICE_ID_NX2_57840_2_20 0x16a2#define PCI_DEVICE_ID_NX2_57840_4_10 0x16a1#define PCI_DEVICE_ID_TIGON3_5789 0x169d#define PCI_DEVICE_ID_TIGON3_5788 0x169c#define PCI_DEVICE_ID_TIGON3_5787 0x169b#define PCI_DEVICE_ID_TIGON3_5786 0x169a#define PCI_DEVICE_ID_TIGON3_5784 0x1698#define PCI_DEVICE_ID_TIGON3_5782 0x1696#define PCI_DEVICE_ID_TIGON3_5787M 0x1693#define PCI_DEVICE_ID_NX2_57810 0x168e#define PCI_DEVICE_ID_NX2_57840 0x168d#define PCI_DEVICE_ID_NX2_57800 0x168a#define PCI_DEVICE_ID_TIGON3_5764 0x1684#define PCI_DEVICE_ID_TIGON3_5761 0x1681#define PCI_DEVICE_ID_TIGON3_5761E 0x1680#define PCI_DEVICE_ID_TIGON3_5787F 0x167f#define PCI_DEVICE_ID_TIGON3_5751F 0x167e#define PCI_DEVICE_ID_TIGON3_5751M 0x167d#define PCI_DEVICE_ID_TIGON3_5755 0x167b#define PCI_DEVICE_ID_TIGON3_5754 0x167a#define PCI_DEVICE_ID_TIGON3_5715S 0x1679#define PCI_DEVICE_ID_TIGON3_5715 0x1678#define PCI_DEVICE_ID_TIGON3_5751 0x1677#define PCI_DEVICE_ID_TIGON3_5750 0x1676#define PCI_DEVICE_ID_TIGON3_5756 0x1674#define PCI_DEVICE_ID_TIGON3_5755M 0x1673#define PCI_DEVICE_ID_TIGON3_5754M 0x1672#define PCI_DEVICE_ID_NX2_57712_VF 0x166f#define PCI_DEVICE_ID_TIGON3_5705F 0x166e#define PCI_DEVICE_ID_TIGON3_5780S 0x166b#define PCI_DEVICE_ID_TIGON3_5780 0x166a#define PCI_DEVICE_ID_TIGON3_5714S 0x1669#define PCI_DEVICE_ID_TIGON3_5714 0x1668#define PCI_DEVICE_ID_NX2_57712_MF 0x1663#define PCI_DEVICE_ID_NX2_57712E 0x1663#define PCI_DEVICE_ID_NX2_57712 0x1662#define PCI_DEVICE_ID_TIGON3_5705M_2 0x165e#define PCI_DEVICE_ID_TIGON3_5705M 0x165d#define PCI_DEVICE_ID_TIGON3_5723 0x165b#define PCI_DEVICE_ID_TIGON3_5722 0x165a#define PCI_DEVICE_ID_TIGON3_5721 0x1659#define PCI_DEVICE_ID_TIGON3_5719 0x1657#define PCI_DEVICE_ID_TIGON3_5705_2 0x1654#define PCI_DEVICE_ID_TIGON3_5705 0x1653#define PCI_DEVICE_ID_NX2_57711E 0x1650#define PCI_DEVICE_ID_NX2_57711 0x164f#define PCI_DEVICE_ID_NX2_57710 0x164e#define PCI_DEVICE_ID_TIGON3_5702FE 0x164d#define PCI_DEVICE_ID_NX2_5708 0x164c#define PCI_DEVICE_ID_NX2_5706 0x164a#define PCI_DEVICE_ID_TIGON3_5704S_2 0x1649#define PCI_DEVICE_ID_TIGON3_5704 0x1648#define PCI_DEVICE_ID_TIGON3_5703 0x1647#define PCI_DEVICE_ID_TIGON3_5702 0x1646#define PCI_DEVICE_ID_TIGON3_5701 0x1645#define PCI_DEVICE_ID_TIGON3_5700 0x1644#define PCI_DEVICE_ID_NX2_5709S 0x163a#define PCI_DEVICE_ID_NX2_5709 0x1639#define PCI_DEVICE_ID_TIGON3_5752M 0x1601#define PCI_DEVICE_ID_TIGON3_5752 0x1600#define PCI_VENDOR_ID_BROADCOM 0x14e4#define PCI_VENDOR_ID_BCM_GVC 0x14a4#define PCI_VENDOR_ID_AMPLICON 0x14dc#define PCI_SUBDEVICE_ID_AFAVLAB_P061 0x2150#define PCI_DEVICE_ID_AFAVLAB_P030 0x2182#define PCI_DEVICE_ID_AFAVLAB_P028 0x2180#define PCI_VENDOR_ID_AFAVLAB 0x14db#define PCI_DEVICE_ID_SP1011 0x0010#define PCI_VENDOR_ID_SIPACKETS 0x14d9#define PCI_DEVICE_ID_PANACOM_DUALMODEM 0x0402#define PCI_DEVICE_ID_PANACOM_QUADMODEM 0x0400#define PCI_VENDOR_ID_PANACOM 0x14d4#define PCI_DEVICE_ID_TITAN_800B 0xA004#define PCI_DEVICE_ID_TITAN_400 0xA003#define PCI_DEVICE_ID_TITAN_200 0xA005#define PCI_DEVICE_ID_TITAN_100 0xA001#define PCI_DEVICE_ID_TITAN_800L 0x8080#define PCI_DEVICE_ID_TITAN_400L 0x8040#define PCI_DEVICE_ID_TITAN_210L 0x8021#define PCI_DEVICE_ID_TITAN_200L 0x8020#define PCI_DEVICE_ID_TITAN_110L 0x8011#define PCI_DEVICE_ID_TITAN_100L 0x8010#define PCI_DEVICE_ID_TITAN_010L 0x8001#define PCI_VENDOR_ID_TITAN 0x14D2#define PCI_VENDOR_ID_MYRICOM 0x14c1#define PCI_VENDOR_ID_AMBIT 0x1468#define PCI_VENDOR_ID_GIGABYTE 0x1458#define PCI_VENDOR_ID_SAMSUNG 0x144d#define PCI_VENDOR_ID_ADLINK 0x144a#define PCI_VENDOR_ID_CHELSIO 0x1425#define PCI_SUBDEVICE_ID_OXSEMI_C950 0x0001#define PCI_DEVICE_ID_OXSEMI_16PCI952PP 0x9523#define PCI_DEVICE_ID_OXSEMI_16PCI952 0x9521#define PCI_DEVICE_ID_OXSEMI_16PCI954PP 0x9513#define PCI_DEVICE_ID_OXSEMI_16PCI95N 0x9511#define PCI_DEVICE_ID_OXSEMI_C950 0x950B#define PCI_DEVICE_ID_OXSEMI_16PCI954 0x9501#define PCI_DEVICE_ID_OXSEMI_PCIe952_1_GU 0xC11C#define PCI_DEVICE_ID_OXSEMI_PCIe952_1_U 0xC118#define PCI_DEVICE_ID_OXSEMI_PCIe952_1_G 0xC114#define PCI_DEVICE_ID_OXSEMI_PCIe952_1 0xC110#define PCI_DEVICE_ID_OXSEMI_PCIe952_0_G 0xC104#define PCI_DEVICE_ID_OXSEMI_PCIe952_0 0xC100#define PCI_DEVICE_ID_OXSEMI_PCIe840_G 0xC004#define PCI_DEVICE_ID_OXSEMI_PCIe840 0xC000#define PCI_DEVICE_ID_OXSEMI_12PCI840 0x8403#define PCI_VENDOR_ID_OXSEMI 0x1415#define PCI_DEVICE_ID_VT1724 0x1724#define PCI_DEVICE_ID_ICE_1712 0x1712#define PCI_VENDOR_ID_ICE 0x1412#define PCI_DEVICE_ID_TIMEDIA_1889 0x7168#define PCI_VENDOR_ID_TIMEDIA 0x1409#define PCI_DEVICE_ID_LAVA_BOCA_IOPPAR 0x8800#define PCI_DEVICE_ID_LAVA_DUAL_PAR_B 0x8003#define PCI_DEVICE_ID_LAVA_DUAL_PAR_A 0x8002#define PCI_DEVICE_ID_LAVA_PARALLEL 0x8000#define PCI_DEVICE_ID_LAVA_PORT_650 0x0600#define PCI_DEVICE_ID_LAVA_SSERIAL 0x0500#define PCI_DEVICE_ID_LAVA_QUAD_B 0x0202#define PCI_DEVICE_ID_LAVA_QUAD_A 0x0201#define PCI_DEVICE_ID_LAVA_PORT_PLUS 0x0200#define PCI_DEVICE_ID_LAVA_OCTO_B 0x0181#define PCI_DEVICE_ID_LAVA_OCTO_A 0x0180#define PCI_DEVICE_ID_LAVA_QUATTRO_B 0x0121#define PCI_DEVICE_ID_LAVA_QUATTRO_A 0x0120#define PCI_DEVICE_ID_LAVA_QUATRO_B 0x0102#define PCI_DEVICE_ID_LAVA_QUATRO_A 0x0101#define PCI_DEVICE_ID_LAVA_DSERIAL 0x0100#define PCI_VENDOR_ID_LAVA 0x1407#define PCI_VENDOR_ID_MEILHAUS 0x1402#define PCI_VENDOR_ID_ADVANTECH 0x13fe#define PCI_DEVICE_ID_CMEDIA_CM8738B 0x0112#define PCI_DEVICE_ID_CMEDIA_CM8738 0x0111#define PCI_DEVICE_ID_CMEDIA_CM8338B 0x0101#define PCI_DEVICE_ID_CMEDIA_CM8338A 0x0100#define PCI_VENDOR_ID_CMEDIA 0x13f6#define PCI_VENDOR_ID_SUNDANCE 0x13f0#define PCI_DEVICE_ID_ABOCOM_2BD1 0x2BD1#define PCI_VENDOR_ID_ABOCOM 0x13D1#define PCI_DEVICE_ID_IOMEGA_BUZ 0x4231#define PCI_VENDOR_ID_IOMEGA 0x13ca#define PCI_DEVICE_ID_3WARE_9000 0x1002#define PCI_DEVICE_ID_3WARE_7000 0x1001#define PCI_DEVICE_ID_3WARE_1000 0x1000#define PCI_VENDOR_ID_3WARE 0x13C1#define PCI_DEVICE_ID_MICROGATE_SCA 0x0030#define PCI_DEVICE_ID_MICROGATE_USC 0x0010#define PCI_VENDOR_ID_MICROGATE 0x13c0#define PCI_DEVICE_ID_EXAR_XR17V358 0x0358#define PCI_DEVICE_ID_EXAR_XR17V354 0x0354#define PCI_DEVICE_ID_EXAR_XR17V352 0x0352#define PCI_DEVICE_ID_EXAR_XR17C158 0x0158#define PCI_DEVICE_ID_EXAR_XR17C154 0x0154#define PCI_DEVICE_ID_EXAR_XR17C152 0x0152#define PCI_VENDOR_ID_EXAR 0x13a8#define PCI_SUBDEVICE_ID_CCD_OV8S 0xE998#define PCI_SUBDEVICE_ID_CCD_OV4S 0xE888#define PCI_SUBDEVICE_ID_CCD_OV2S 0xE884#define PCI_SUBDEVICE_ID_CCD_HFCE1 0xC523#define PCI_DEVICE_ID_CCD_B701 0xb701#define PCI_DEVICE_ID_CCD_B700 0xb700#define PCI_SUBDEVICE_ID_CCD_HFC8S 0xB622#define PCI_SUBDEVICE_ID_CCD_HFC4S 0xB620#define PCI_SUBDEVICE_ID_CCD_BN8SP 0xB56B#define PCI_SUBDEVICE_ID_CCD_BNE1M 0xB56A#define PCI_SUBDEVICE_ID_CCD_BN2SM 0xB569#define PCI_SUBDEVICE_ID_CCD_BN4SM 0xB568#define PCI_SUBDEVICE_ID_CCD_BN1SM 0xB567#define PCI_SUBDEVICE_ID_CCD_BN2S 0xB566#define PCI_SUBDEVICE_ID_CCD_BNE1DP 0xB565#define PCI_SUBDEVICE_ID_CCD_BNE1D 0xB564#define PCI_SUBDEVICE_ID_CCD_BNE1 0xB563#define PCI_SUBDEVICE_ID_CCD_BN8S 0xB562#define PCI_SUBDEVICE_ID_CCD_BN4S 0xB560#define PCI_SUBDEVICE_ID_CCD_JH8S 0xB55B#define PCI_SUBDEVICE_ID_CCD_JHSE1 0xB553#define PCI_SUBDEVICE_ID_CCD_IOB8ST_1 0xB552#define PCI_SUBDEVICE_ID_CCD_JH4S20 0xB550#define PCI_SUBDEVICE_ID_CCD_SWYX4S 0xB540#define PCI_SUBDEVICE_ID_CCD_IOB1E1 0xB523#define PCI_SUBDEVICE_ID_CCD_IOB8ST 0xB522#define PCI_SUBDEVICE_ID_CCD_IOB8STR 0xB521#define PCI_SUBDEVICE_ID_CCD_IOB4ST 0xB520#define PCI_DEVICE_ID_CCD_B100 0xb100#define PCI_DEVICE_ID_CCD_B00C 0xb00c#define PCI_DEVICE_ID_CCD_B00B 0xb00b#define PCI_DEVICE_ID_CCD_B00A 0xb00a#define PCI_DEVICE_ID_CCD_B009 0xb009#define PCI_DEVICE_ID_CCD_B008 0xb008#define PCI_DEVICE_ID_CCD_B007 0xb007#define PCI_DEVICE_ID_CCD_B006 0xb006#define PCI_DEVICE_ID_CCD_B000 0xb000#define PCI_SUBDEVICE_ID_CCD_SPDE1 0x3137#define PCI_SUBDEVICE_ID_CCD_SPD4S 0x3136#define PCI_DEVICE_ID_CCD_HFCE1 0x30B1#define PCI_DEVICE_ID_CCD_2BD0 0x2bd0#define PCI_DEVICE_ID_CCD_HFC8S 0x16B8#define PCI_SUBDEVICE_ID_CCD_PMX2S 0x1234#define PCI_DEVICE_ID_CCD_HFC4S 0x08B4#define PCI_VENDOR_ID_CCD 0x1397#define PCI_DEVICE_ID_MOXA_C320 0x3200#define PCI_DEVICE_ID_MOXA_C218 0x2180#define PCI_DEVICE_ID_MOXA_CP204J 0x2040#define PCI_DEVICE_ID_MOXA_CP168EL 0x1682#define PCI_DEVICE_ID_MOXA_CP168U 0x1681#define PCI_DEVICE_ID_MOXA_C168 0x1680#define PCI_DEVICE_ID_MOXA_CP134U 0x1340#define PCI_DEVICE_ID_MOXA_CP132U 0x1321#define PCI_DEVICE_ID_MOXA_CP132 0x1320#define PCI_DEVICE_ID_MOXA_CP118EL 0x1181#define PCI_DEVICE_ID_MOXA_CP118U 0x1180#define PCI_DEVICE_ID_MOXA_CP114 0x1141#define PCI_DEVICE_ID_MOXA_CT114 0x1140#define PCI_DEVICE_ID_MOXA_CP104EL 0x1043#define PCI_DEVICE_ID_MOXA_CP104JU 0x1042#define PCI_DEVICE_ID_MOXA_CP104U 0x1041#define PCI_DEVICE_ID_MOXA_C104 0x1040#define PCI_DEVICE_ID_MOXA_CP102U 0x1022#define PCI_DEVICE_ID_MOXA_CP102UL 0x1021#define PCI_DEVICE_ID_MOXA_CP102 0x1020#define PCI_DEVICE_ID_MOXA_RC7000 0x0001#define PCI_VENDOR_ID_MOXA 0x1393#define PCI_DEVICE_ID_APPLICOM_PCI2000PFB 0x0003#define PCI_DEVICE_ID_APPLICOM_PCI2000IBS_CAN 0x0002#define PCI_DEVICE_ID_APPLICOM_PCIGENERIC 0x0001#define PCI_VENDOR_ID_APPLICOM 0x1389#define PCI_DEVICE_ID_NETGEAR_GA620 0x620a#define PCI_VENDOR_ID_NETGEAR 0x1385#define PCI_DEVICE_ID_LMC_T1 0x0006#define PCI_DEVICE_ID_LMC_SSI 0x0005#define PCI_DEVICE_ID_LMC_DS3 0x0004#define PCI_DEVICE_ID_LMC_HSSI 0x0003#define PCI_VENDOR_ID_LMC 0x1376#define PCI_DEVICE_ID_CNET_GIGACARD 0x434e#define PCI_VENDOR_ID_CNET 0x1371#define PCI_DEVICE_ID_MCHIP_KL5A72002 0xff01#define PCI_VENDOR_ID_KAWASAKI 0x136b#define PCI_SUBDEVICE_ID_DIGIGRAM_LX6464ES_CAE_SERIAL_SUBSYSTEM 0xc002#define PCI_SUBDEVICE_ID_DIGIGRAM_LX6464ES_SERIAL_SUBSYSTEM 0xc001#define PCI_VENDOR_ID_DIGIGRAM 0x1369#define PCI_SUBDEVICE_ID_HYPERCOPE_CHAMP2 0x0108#define PCI_SUBDEVICE_ID_HYPERCOPE_METRO 0x0107#define PCI_SUBDEVICE_ID_HYPERCOPE_ERGO 0x0106#define PCI_SUBDEVICE_ID_HYPERCOPE_OLD_ERGO 0x0104#define PCI_DEVICE_ID_HYPERCOPE_PLX 0x9050#define PCI_VENDOR_ID_HYPERCOPE 0x1365#define PCI_DEVICE_ID_SEALEVEL_UCOMM8 0x7804#define PCI_DEVICE_ID_SEALEVEL_7803 0x7803#define PCI_DEVICE_ID_SEALEVEL_COMM8 0x7801#define PCI_DEVICE_ID_SEALEVEL_COMM4 0x7401#define PCI_DEVICE_ID_SEALEVEL_UCOMM232 0x7202#define PCI_DEVICE_ID_SEALEVEL_UCOMM422 0x7402#define PCI_DEVICE_ID_SEALEVEL_UCOMM2 0x7201#define PCI_DEVICE_ID_SEALEVEL_U530 0x7101#define PCI_VENDOR_ID_SEALEVEL 0x135e#define PCI_DEVICE_ID_QUATECH_SPPXP_100 0x0278#define PCI_DEVICE_ID_QUATECH_ESCLP100 0x01E0#define PCI_DEVICE_ID_QUATECH_SSCLP200 0x01C0#define PCI_DEVICE_ID_QUATECH_DSC200E 0x01B1#define PCI_DEVICE_ID_QUATECH_DSCLP200 0x01B0#define PCI_DEVICE_ID_QUATECH_QSCLP200 0x01A0#define PCI_DEVICE_ID_QUATECH_SSCLP100 0x0190#define PCI_DEVICE_ID_QUATECH_DSC100E 0x0181#define PCI_DEVICE_ID_QUATECH_DSCLP100 0x0180#define PCI_DEVICE_ID_QUATECH_QSCLP100 0x0170#define PCI_DEVICE_ID_QUATECH_DSCP200 0x0150#define PCI_DEVICE_ID_QUATECH_QSCP200 0x0140#define PCI_DEVICE_ID_QUATECH_DSCP100 0x0130#define PCI_DEVICE_ID_QUATECH_QSCP100 0x0120#define PCI_DEVICE_ID_QUATECH_ESC100M 0x0060#define PCI_DEVICE_ID_QUATECH_ESC100D 0x0050#define PCI_DEVICE_ID_QUATECH_QSC200 0x0040#define PCI_DEVICE_ID_QUATECH_DSC200 0x0030#define PCI_DEVICE_ID_QUATECH_DSC100 0x0020#define PCI_DEVICE_ID_QUATECH_QSC100 0x0010#define PCI_VENDOR_ID_QUATECH 0x135C#define PCI_DEVICE_ID_INTASHIELD_IS400 0x0dc0#define PCI_DEVICE_ID_INTASHIELD_IS200 0x0d80#define PCI_VENDOR_ID_INTASHIELD 0x135a#define PCI_DEVICE_ID_DOMEX_DMX3191D 0x0001#define PCI_VENDOR_ID_DOMEX 0x134a#define PCI_DEVICE_ID_MICRO_MEMORY_6155 0x6155#define PCI_DEVICE_ID_MICRO_MEMORY_5425CN 0x5425#define PCI_DEVICE_ID_MICRO_MEMORY_5415CN 0x5415#define PCI_VENDOR_ID_MICRO_MEMORY 0x1332#define PCI_VENDOR_ID_RADISYS 0x1331#define PCI_SUBDEVICE_ID_SIIG_DUAL_SERIAL 0x2530#define PCI_SUBDEVICE_ID_SIIG_QUARTET_SERIAL 0x2050#define PCI_DEVICE_ID_SIIG_8S_20x_850 0x2082#define PCI_DEVICE_ID_SIIG_8S_20x_650 0x2081#define PCI_DEVICE_ID_SIIG_8S_20x_550 0x2080#define PCI_DEVICE_ID_SIIG_2S1P_20x_850 0x2062#define PCI_DEVICE_ID_SIIG_2S1P_20x_650 0x2061#define PCI_DEVICE_ID_SIIG_2S1P_20x_550 0x2060#define PCI_DEVICE_ID_SIIG_4S_20x_850 0x2052#define PCI_DEVICE_ID_SIIG_4S_20x_650 0x2051#define PCI_DEVICE_ID_SIIG_4S_20x_550 0x2050#define PCI_DEVICE_ID_SIIG_1S1P_20x_850 0x2012#define PCI_DEVICE_ID_SIIG_1S1P_20x_650 0x2011#define PCI_DEVICE_ID_SIIG_1S1P_20x_550 0x2010#define PCI_DEVICE_ID_SIIG_2P1S_20x_850 0x2042#define PCI_DEVICE_ID_SIIG_2P1S_20x_650 0x2041#define PCI_DEVICE_ID_SIIG_2P1S_20x_550 0x2040#define PCI_DEVICE_ID_SIIG_2S_20x_850 0x2032#define PCI_DEVICE_ID_SIIG_2S_20x_650 0x2031#define PCI_DEVICE_ID_SIIG_2S_20x_550 0x2030#define PCI_DEVICE_ID_SIIG_2P_20x 0x2021#define PCI_DEVICE_ID_SIIG_1P_20x 0x2020#define PCI_DEVICE_ID_SIIG_1S_20x_850 0x2002#define PCI_DEVICE_ID_SIIG_1S_20x_650 0x2001#define PCI_DEVICE_ID_SIIG_1S_20x_550 0x2000#define PCI_DEVICE_ID_SIIG_4S_10x_850 0x1052#define PCI_DEVICE_ID_SIIG_4S_10x_650 0x1051#define PCI_DEVICE_ID_SIIG_4S_10x_550 0x1050#define PCI_DEVICE_ID_SIIG_2S1P_10x_850 0x1036#define PCI_DEVICE_ID_SIIG_2S1P_10x_650 0x1035#define PCI_DEVICE_ID_SIIG_2S1P_10x_550 0x1034#define PCI_DEVICE_ID_SIIG_2S_10x_850 0x1032#define PCI_DEVICE_ID_SIIG_2S_10x_650 0x1031#define PCI_DEVICE_ID_SIIG_2S_10x_550 0x1030#define PCI_DEVICE_ID_SIIG_2P_10x 0x1021#define PCI_DEVICE_ID_SIIG_1P_10x 0x1020#define PCI_DEVICE_ID_SIIG_1S1P_10x_850 0x1012#define PCI_DEVICE_ID_SIIG_1S1P_10x_650 0x1011#define PCI_DEVICE_ID_SIIG_1S1P_10x_550 0x1010#define PCI_DEVICE_ID_SIIG_1S_10x_850 0x1002#define PCI_DEVICE_ID_SIIG_1S_10x_650 0x1001#define PCI_DEVICE_ID_SIIG_1S_10x_550 0x1000#define PCI_SUBVENDOR_ID_SIIG 0x131f#define PCI_VENDOR_ID_SIIG 0x131f#define PCI_VENDOR_ID_CB 0x1307#define PCI_DEVICE_ID_ESDGMBH_CPCIASIO4 0x0111#define PCI_VENDOR_ID_ESDGMBH 0x12fe#define PCI_DEVICE_ID_LML_33R10 0x8a02#define PCI_VENDOR_ID_ELECTRONICDESIGNGMBH 0x12f8#define PCI_DEVICE_ID_AUREAL_ADVANTAGE 0x0003#define PCI_DEVICE_ID_AUREAL_VORTEX_2 0x0002#define PCI_DEVICE_ID_AUREAL_VORTEX_1 0x0001#define PCI_VENDOR_ID_AUREAL 0x12eb#define PCI_SUBDEVICE_ID_CHASE_PCIRAS8 0xF010#define PCI_SUBDEVICE_ID_CHASE_PCIRAS4 0xF001#define PCI_SUBVENDOR_ID_CHASE_PCIRAS 0x124D#define PCI_SUBDEVICE_ID_CHASE_PCIFAST16FMC 0x0041#define PCI_SUBDEVICE_ID_CHASE_PCIFAST16 0x0011#define PCI_SUBDEVICE_ID_CHASE_PCIFAST8 0x0021#define PCI_SUBDEVICE_ID_CHASE_PCIFAST4 0x0031#define PCI_SUBVENDOR_ID_CHASE_PCIFAST 0x12E0#define PCI_DEVICE_ID_NVIDIA_SGS_RIVA128 0x0018#define PCI_VENDOR_ID_NVIDIA_SGS 0x12d2#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8_485 0x0332#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_485 0x0331#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_485 0x0330#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8 0x0322#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4 0x0321#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2 0x0320#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_4 0x0312#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_2 0x0311#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_1_1 0x0310#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_8_232 0x0302#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_4_232 0x0301#define PCI_SUBDEVICE_ID_CONNECT_TECH_PCI_UART_2_232 0x0300#define PCI_SUBDEVICE_ID_CONNECT_TECH_TITAN_4 0x0202#define PCI_SUBDEVICE_ID_CONNECT_TECH_TITAN_2 0x0201#define PCI_SUBDEVICE_ID_CONNECT_TECH_NT960PCI 0x0100#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_PTM 0x000D#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_20MHZ 0x000C#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH041101V1 0x000B#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH081101V1 0x000A#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485_2_6 0x0009#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_485 0x0008#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_485_2_2 0x0007#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_485 0x0006#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485_4_4 0x0005#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_485 0x0004#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH2_232 0x0003#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH4_232 0x0002#define PCI_SUBDEVICE_ID_CONNECT_TECH_BH8_232 0x0001#define PCI_SUBVENDOR_ID_CONNECT_TECH 0x12c4#define PCI_VENDOR_ID_ALTEON 0x12ae#define PCI_DEVICE_ID_ESS_ESS0100 0x0100#define PCI_DEVICE_ID_ITE_IT8330G_0 0xe886#define PCI_DEVICE_ID_ITE_8872 0x8872#define PCI_DEVICE_ID_ITE_8152 0x8152#define PCI_DEVICE_ID_ITE_8213 0x8213#define PCI_DEVICE_ID_ITE_8212 0x8212#define PCI_DEVICE_ID_ITE_8211 0x8211#define PCI_DEVICE_ID_ITE_8172 0x8172#define PCI_VENDOR_ID_ITE 0x1283#define PCI_DEVICE_ID_DAVICOM_DM9102A 0x9102#define PCI_VENDOR_ID_DAVICOM 0x1282#define PCI_VENDOR_ID_ROCKWELL 0x127A#define PCI_DEVICE_ID_EFFICEON 0x0060#define PCI_VENDOR_ID_TRANSMETA 0x1279#define PCI_DEVICE_ID_ENSONIQ_ES1371 0x1371#define PCI_DEVICE_ID_ENSONIQ_ES1370 0x5000#define PCI_DEVICE_ID_ENSONIQ_CT5880 0x5880#define PCI_VENDOR_ID_ENSONIQ 0x1274#define PCI_DEVICE_ID_SMI_501 0x0501#define PCI_DEVICE_ID_SMI_810 0x0810#define PCI_DEVICE_ID_SMI_712 0x0712#define PCI_DEVICE_ID_SMI_710 0x0710#define PCI_VENDOR_ID_SMI 0x126f#define PCI_DEVICE_ID_SATSAGEM_NICCY 0x1016#define PCI_VENDOR_ID_SATSAGEM 0x1267#define PCI_DEVICE_ID_ESS_MAESTRO3_2 0x199b#define PCI_DEVICE_ID_ESS_MAESTRO3_HW 0x199a#define PCI_DEVICE_ID_ESS_MAESTRO3_1 0x1999#define PCI_DEVICE_ID_ESS_MAESTRO3 0x1998#define PCI_DEVICE_ID_ESS_CANYON3D_2 0x1992#define PCI_DEVICE_ID_ESS_CANYON3D_2LE 0x1990#define PCI_DEVICE_ID_ESS_ALLEGRO 0x1989#define PCI_DEVICE_ID_ESS_ALLEGRO_1 0x1988#define PCI_DEVICE_ID_ESS_ESS1978 0x1978#define PCI_DEVICE_ID_ESS_ESS1968 0x1968#define PCI_VENDOR_ID_ESS 0x125d#define PCI_SUBDEVICE_ID_AT_2701FX 0x2703#define PCI_SUBDEVICE_ID_AT_2700FX 0x2701#define PCI_VENDOR_ID_AT 0x1259#define PCI_VENDOR_ID_STALLION 0x124d#define PCI_DEVICE_ID_AVM_T1 0x1200#define PCI_DEVICE_ID_AVM_C2 0x1100#define PCI_DEVICE_ID_AVM_A1_V2 0x0e00#define PCI_DEVICE_ID_AVM_A1 0x0a00#define PCI_DEVICE_ID_AVM_C4 0x0800#define PCI_DEVICE_ID_AVM_B1 0x0700#define PCI_VENDOR_ID_AVM 0x1244#define PCI_DEVICE_ID_3DFX_VOODOO5 0x0009#define PCI_DEVICE_ID_3DFX_VOODOO3 0x0005#define PCI_DEVICE_ID_3DFX_BANSHEE 0x0003#define PCI_DEVICE_ID_3DFX_VOODOO2 0x0002#define PCI_DEVICE_ID_3DFX_VOODOO 0x0001#define PCI_VENDOR_ID_3DFX 0x121a#define PCI_DEVICE_ID_O2_8321 0x8321#define PCI_DEVICE_ID_O2_8320 0x8320#define PCI_DEVICE_ID_O2_8221 0x8221#define PCI_DEVICE_ID_O2_8220 0x8220#define PCI_DEVICE_ID_O2_8120 0x8120#define PCI_DEVICE_ID_O2_6933 0x6933#define PCI_DEVICE_ID_O2_6812 0x6872#define PCI_DEVICE_ID_O2_6836 0x6836#define PCI_DEVICE_ID_O2_6832 0x6832#define PCI_DEVICE_ID_O2_6730 0x673a#define PCI_DEVICE_ID_O2_6729 0x6729#define PCI_VENDOR_ID_O2 0x1217#define PCI_DEVICE_ID_ESSENTIAL_ROADRUNNER 0x0001#define PCI_VENDOR_ID_ESSENTIAL 0x120f#define PCI_DEVICE_ID_PC300_TE_M_1 0x0321#define PCI_DEVICE_ID_PC300_TE_M_2 0x0320#define PCI_DEVICE_ID_PC300_TE_1 0x0311#define PCI_DEVICE_ID_PC300_TE_2 0x0310#define PCI_DEVICE_ID_PC300_RX_1 0x0301#define PCI_DEVICE_ID_PC300_RX_2 0x0300#define PCI_DEVICE_ID_CYCLOM_Z_Hi 0x0201#define PCI_DEVICE_ID_CYCLOM_Z_Lo 0x0200#define PCI_DEVICE_ID_CYCLOM_8Y_Hi 0x0105#define PCI_DEVICE_ID_CYCLOM_8Y_Lo 0x0104#define PCI_DEVICE_ID_CYCLOM_4Y_Hi 0x0103#define PCI_DEVICE_ID_CYCLOM_4Y_Lo 0x0102#define PCI_DEVICE_ID_CYCLOM_Y_Hi 0x0101#define PCI_DEVICE_ID_CYCLOM_Y_Lo 0x0100#define PCI_VENDOR_ID_CYCLADES 0x120e#define PCI_DEVICE_ID_CRP16INTF 0x0903#define PCI_DEVICE_ID_UPCI_RM3_4PORT 0x080D#define PCI_DEVICE_ID_UPCI_RM3_8PORT 0x080C#define PCI_DEVICE_ID_URP8OCTA 0x0805#define PCI_DEVICE_ID_URP16INTF 0x0803#define PCI_DEVICE_ID_URP8INTF 0x0802#define PCI_DEVICE_ID_URP32INTF 0x0801#define PCI_DEVICE_ID_RP2_422 0x000F#define PCI_DEVICE_ID_RP2_232 0x000E#define PCI_DEVICE_ID_RP4M 0x000D#define PCI_DEVICE_ID_RPP8 0x000B#define PCI_DEVICE_ID_RPP4 0x000A#define PCI_DEVICE_ID_RP16SNI 0x0009#define PCI_DEVICE_ID_RP8SNI 0x0008#define PCI_DEVICE_ID_RP4J 0x0007#define PCI_DEVICE_ID_RP8J 0x0006#define PCI_DEVICE_ID_RP8OCTA 0x0005#define PCI_DEVICE_ID_RP4QUAD 0x0004#define PCI_DEVICE_ID_RP16INTF 0x0003#define PCI_DEVICE_ID_RP8INTF 0x0002#define PCI_DEVICE_ID_RP32INTF 0x0001#define PCI_VENDOR_ID_RP 0x11fe#define PCI_VENDOR_ID_PMC_Sierra 0x11f8#define PCI_DEVICE_ID_COMPEX_ENET100VG4 0x0112#define PCI_VENDOR_ID_COMPEX 0x11f6#define PCI_DEVICE_ID_ZORAN_36120 0x6120#define PCI_DEVICE_ID_ZORAN_36057 0x6057#define PCI_VENDOR_ID_ZORAN 0x11de#define PCI_DEVICE_ID_SEGA_BBA 0x1234#define PCI_DEVICE_ID_AD1889JS 0x1889#define PCI_VENDOR_ID_ANALOG_DEVICES 0x11d4#define PCI_SUBDEVICE_ID_SPECIALIX_SPEED4 0xa004#define PCI_DEVICE_ID_SPECIALIX_RIO 0x8000#define PCI_DEVICE_ID_SPECIALIX_IO8 0x2000#define PCI_VENDOR_ID_SPECIALIX 0x11cb#define PCI_DEVICE_ID_ATT_VENUS_MODEM 0x480#define PCI_VENDOR_ID_ATT 0x11c1#define PCI_DEVICE_ID_V3_V351 0x0002#define PCI_DEVICE_ID_V3_V960 0x0001#define PCI_VENDOR_ID_V3 0x11b0#define PCI_DEVICE_ID_MARVELL_88ALP01_CCIC 0x4102#define PCI_DEVICE_ID_MARVELL_88ALP01_SD 0x4101#define PCI_DEVICE_ID_MARVELL_88ALP01_NAND 0x4100#define PCI_DEVICE_ID_MARVELL_MV64460 0x6480#define PCI_DEVICE_ID_MARVELL_MV64360 0x6460#define PCI_DEVICE_ID_MARVELL_GT64260 0x6430#define PCI_DEVICE_ID_MARVELL_GT64111 0x4146#define PCI_VENDOR_ID_MARVELL_EXT 0x1b4b#define PCI_VENDOR_ID_MARVELL 0x11ab#define PCI_SUBDEVICE_ID_KEYSPAN_SX2 0x5334#define PCI_SUBVENDOR_ID_KEYSPAN 0x11a9#define PCI_DEVICE_ID_FUJITSU_FS50 0x0003#define PCI_DEVICE_ID_FUJITSU_FS155 0x0001#define PCI_VENDOR_ID_FUJITSU_ME 0x119e#define PCI_DEVICE_ID_ZEITNET_1225 0x0002#define PCI_DEVICE_ID_ZEITNET_1221 0x0001#define PCI_VENDOR_ID_ZEITNET 0x1193#define PCI_DEVICE_ID_ARTOP_8060 0x8060#define PCI_DEVICE_ID_ARTOP_AEC7612SUW 0x8050#define PCI_DEVICE_ID_ARTOP_AEC7612D 0x8040#define PCI_DEVICE_ID_ARTOP_AEC7612S 0x8030#define PCI_DEVICE_ID_ARTOP_AEC7612U 0x8020#define PCI_DEVICE_ID_ARTOP_AEC7612UW 0x8010#define PCI_DEVICE_ID_ARTOP_AEC7610 0x8002#define PCI_DEVICE_ID_ARTOP_ATP867B 0x000B#define PCI_DEVICE_ID_ARTOP_ATP867A 0x000A#define PCI_DEVICE_ID_ARTOP_ATP865R 0x0009#define PCI_DEVICE_ID_ARTOP_ATP865 0x0008#define PCI_DEVICE_ID_ARTOP_ATP860R 0x0007#define PCI_DEVICE_ID_ARTOP_ATP860 0x0006#define PCI_DEVICE_ID_ARTOP_ATP850UF 0x0005#define PCI_VENDOR_ID_ARTOP 0x1191#define PCI_DEVICE_ID_DLINK_DGE510T 0x4c00#define PCI_DEVICE_ID_DLINK_8139 0x1300#define PCI_VENDOR_ID_DLINK 0x1186#define PCI_DEVICE_ID_RICOH_R5C843 0x0843#define PCI_DEVICE_ID_RICOH_R5C832 0x0832#define PCI_DEVICE_ID_RICOH_R5CE823 0xe823#define PCI_DEVICE_ID_RICOH_R5CE822 0xe822#define PCI_DEVICE_ID_RICOH_R5C822 0x0822#define PCI_DEVICE_ID_RICOH_RL5C478 0x0478#define PCI_DEVICE_ID_RICOH_RL5C476 0x0476#define PCI_DEVICE_ID_RICOH_RL5C475 0x0475#define PCI_DEVICE_ID_RICOH_RL5C466 0x0466#define PCI_DEVICE_ID_RICOH_RL5C465 0x0465#define PCI_VENDOR_ID_RICOH 0x1180#define PCI_VENDOR_ID_ATTO 0x117c#define PCI_DEVICE_ID_TOSHIBA_SPIDER_NET 0x01b3#define PCI_DEVICE_ID_TOSHIBA_TC86C001_MISC 0x0108#define PCI_DEVICE_ID_TOSHIBA_TC86C001_IDE 0x0105#define PCI_DEVICE_ID_TOSHIBA_TC35815_TX4939 0x0032#define PCI_DEVICE_ID_TOSHIBA_TC35815_NWU 0x0031#define PCI_DEVICE_ID_TOSHIBA_TC35815CF 0x0030#define PCI_VENDOR_ID_TOSHIBA_2 0x102f#define PCI_DEVICE_ID_TOSHIBA_TOPIC100 0x0617#define PCI_DEVICE_ID_TOSHIBA_TOPIC97 0x060f#define PCI_DEVICE_ID_TOSHIBA_TOPIC95 0x060a#define PCI_DEVICE_ID_TOSHIBA_PICCOLO_5 0x0105#define PCI_DEVICE_ID_TOSHIBA_PICCOLO_3 0x0103#define PCI_DEVICE_ID_TOSHIBA_PICCOLO_2 0x0102#define PCI_DEVICE_ID_TOSHIBA_PICCOLO_1 0x0101#define PCI_VENDOR_ID_TOSHIBA 0x1179#define PCI_SUBDEVICE_ID_SBE_2T3E3_P1 0x0902#define PCI_SUBDEVICE_ID_SBE_2T3E3_P0 0x0901#define PCI_SUBDEVICE_ID_SBE_T3E3 0x0009#define PCI_DEVICE_ID_SBE_WANXL400 0x0104#define PCI_DEVICE_ID_SBE_WANXL200 0x0302#define PCI_DEVICE_ID_SBE_WANXL100 0x0301#define PCI_VENDOR_ID_SBE 0x1176#define PCI_DEVICE_ID_SERVERWORKS_HT1100LD 0x0408#define PCI_DEVICE_ID_SERVERWORKS_CSB6LPC 0x0227#define PCI_DEVICE_ID_SERVERWORKS_CSB6IDE2 0x0217#define PCI_DEVICE_ID_SERVERWORKS_HT1000IDE 0x0214#define PCI_DEVICE_ID_SERVERWORKS_CSB6IDE 0x0213#define PCI_DEVICE_ID_SERVERWORKS_CSB5IDE 0x0212#define PCI_DEVICE_ID_SERVERWORKS_OSB4IDE 0x0211#define PCI_DEVICE_ID_SERVERWORKS_HT1000SB 0x0205#define PCI_DEVICE_ID_SERVERWORKS_CSB6 0x0203#define PCI_DEVICE_ID_SERVERWORKS_CSB5 0x0201#define PCI_DEVICE_ID_SERVERWORKS_OSB4 0x0200#define PCI_DEVICE_ID_SERVERWORKS_HT2000_PCIE 0x0132#define PCI_DEVICE_ID_SERVERWORKS_EPB 0x0103#define PCI_DEVICE_ID_SERVERWORKS_HT1000_PXB 0x0036#define PCI_DEVICE_ID_SERVERWORKS_GCNB_LE 0x0017#define PCI_DEVICE_ID_SERVERWORKS_LE 0x0009#define PCI_DEVICE_ID_SERVERWORKS_HE 0x0008#define PCI_VENDOR_ID_SERVERWORKS 0x1166#define PCI_DEVICE_ID_XIRCOM_X3201_MDM 0x0103#define PCI_DEVICE_ID_XIRCOM_RBM56G 0x0101#define PCI_VENDOR_ID_XIRCOM 0x115d#define PCIE_DEVICE_ID_NEO_4_IBM 0x00F4#define PCI_DEVICE_ID_NEO_2RJ45PRI 0x00CB#define PCI_DEVICE_ID_NEO_2RJ45 0x00CA#define PCI_DEVICE_ID_NEO_2DB9PRI 0x00C9#define PCI_DEVICE_ID_NEO_2DB9 0x00C8#define PCI_DEVICE_ID_DIGI_NEO_8 0x00B1#define PCI_DEVICE_ID_DIGI_DF_M_A 0x0073#define PCI_DEVICE_ID_DIGI_DF_M_IOM2_A 0x0072#define PCI_DEVICE_ID_DIGI_DF_M_E 0x0071#define PCI_DEVICE_ID_DIGI_DF_M_IOM2_E 0x0070#define PCI_VENDOR_ID_DIGI 0x114f#define PCI_DEVICE_ID_SYSKONNECT_9MXX 0x4500#define PCI_DEVICE_ID_SYSKONNECT_9DXX 0x4400#define PCI_DEVICE_ID_SYSKONNECT_YU 0x4320#define PCI_DEVICE_ID_SYSKONNECT_GE 0x4300#define PCI_DEVICE_ID_SYSKONNECT_TR 0x4200#define PCI_VENDOR_ID_SYSKONNECT 0x1148#define PCI_DEVICE_ID_ZIATECH_5550_HC 0x5550#define PCI_VENDOR_ID_ZIATECH 0x1138#define PCI_VENDOR_ID_CISCO 0x1137#define PCI_DEVICE_ID_EICON_MAESTRAP 0xe014#define PCI_DEVICE_ID_EICON_MAESTRAQ_U 0xe013#define PCI_DEVICE_ID_EICON_MAESTRAQ 0xe012#define PCI_DEVICE_ID_EICON_MAESTRA 0xe010#define PCI_DEVICE_ID_EICON_DIVA202 0xe00b#define PCI_DEVICE_ID_EICON_DIVA201 0xe005#define PCI_DEVICE_ID_EICON_DIVA20_U 0xe004#define PCI_DEVICE_ID_EICON_DIVA20 0xe002#define PCI_VENDOR_ID_EICON 0x1133#define PCI_DEVICE_ID_PHILIPS_SAA9730 0x9730#define PCI_DEVICE_ID_PHILIPS_SAA7146 0x7146#define PCI_VENDOR_ID_PHILIPS 0x1131#define PCI_DEVICE_ID_FORE_PCA200E 0x0300#define PCI_VENDOR_ID_FORE 0x1127#define PCI_DEVICE_ID_IDT_IDT77201 0x0001#define PCI_VENDOR_ID_IDT 0x111d#define PCI_DEVICE_ID_EF_ATM_LANAIHB 0x0005#define PCI_DEVICE_ID_EF_ATM_LANAI2 0x0003#define PCI_DEVICE_ID_EF_ATM_ASIC 0x0002#define PCI_DEVICE_ID_EF_ATM_FPGA 0x0000#define PCI_VENDOR_ID_EF 0x111a#define PCI_DEVICE_ID_VORTEX_GDT6x21RP 0x0105#define PCI_DEVICE_ID_VORTEX_GDT6x11RP 0x0104#define PCI_DEVICE_ID_VORTEX_GDT6557RP 0x0103#define PCI_DEVICE_ID_VORTEX_GDT6537RP 0x0102#define PCI_DEVICE_ID_VORTEX_GDT6x27RP 0x0101#define PCI_DEVICE_ID_VORTEX_GDT6x17RP 0x0100#define PCI_DEVICE_ID_VORTEX_GDT6555 0x000d#define PCI_DEVICE_ID_VORTEX_GDT6535 0x000c#define PCI_DEVICE_ID_VORTEX_GDT6x25 0x000b#define PCI_DEVICE_ID_VORTEX_GDT6x15 0x000a#define PCI_DEVICE_ID_VORTEX_GDT6557 0x0009#define PCI_DEVICE_ID_VORTEX_GDT6537 0x0008#define PCI_DEVICE_ID_VORTEX_GDT6x27 0x0007#define PCI_DEVICE_ID_VORTEX_GDT6x17 0x0006#define PCI_DEVICE_ID_VORTEX_GDT6550 0x0005#define PCI_DEVICE_ID_VORTEX_GDT6530 0x0004#define PCI_DEVICE_ID_VORTEX_GDT6x20 0x0003#define PCI_DEVICE_ID_VORTEX_GDT6x10 0x0002#define PCI_DEVICE_ID_VORTEX_GDT6000B 0x0001#define PCI_DEVICE_ID_VORTEX_GDT60x0 0x0000#define PCI_VENDOR_ID_VORTEX 0x1119#define PCI_DEVICE_ID_SIEMENS_DSCC4 0x2102#define PCI_VENDOR_ID_SIEMENS 0x110A#define PCI_DEVICE_ID_VIA_ANON 0xFFFF#define PCI_DEVICE_ID_VIA_VX855_IDE 0xC409#define PCI_DEVICE_ID_VIA_83_87XX_1 0xB198#define PCI_DEVICE_ID_VIA_838X_1 0xB188#define PCI_DEVICE_ID_VIA_82C598_1 0x8598#define PCI_DEVICE_ID_VIA_8371_1 0x8391#define PCI_DEVICE_ID_VIA_VX900 0x8410#define PCI_DEVICE_ID_VIA_VX855 0x8409#define PCI_DEVICE_ID_VIA_VX800 0x8353#define PCI_DEVICE_ID_VIA_CX700_IDE 0x0581#define PCI_DEVICE_ID_VIA_CX700 0x8324#define PCI_DEVICE_ID_VIA_8365_1 0x8305#define PCI_DEVICE_ID_VIA_8231_4 0x8235#define PCI_DEVICE_ID_VIA_8231 0x8231#define PCI_DEVICE_ID_VIA_SATA_EIDE 0x5324#define PCI_DEVICE_ID_VIA_8237S 0x3372#define PCI_DEVICE_ID_VIA_8237A 0x3337#define PCI_DEVICE_ID_VIA_8261 0x3402#define PCI_DEVICE_ID_VIA_8251 0x3287#define PCI_DEVICE_ID_VIA_8237 0x3227#define PCI_DEVICE_ID_VIA_8783_0 0x3208#define PCI_DEVICE_ID_VIA_8378_0 0x3205#define PCI_DEVICE_ID_VIA_8377_0 0x3189#define PCI_DEVICE_ID_VIA_8385_0 0x3188#define PCI_DEVICE_ID_VIA_8235 0x3177#define PCI_DEVICE_ID_VIA_8754C_0 0x3168#define PCI_DEVICE_ID_VIA_6410 0x3164#define PCI_DEVICE_ID_VIA_XN266 0x3156#define PCI_DEVICE_ID_VIA_8237_SATA 0x3149#define PCI_DEVICE_ID_VIA_8703_51_0 0x3148#define PCI_DEVICE_ID_VIA_8233A 0x3147#define PCI_DEVICE_ID_VIA_8753_0 0x3128#define PCI_DEVICE_ID_VIA_862X_0 0x3123#define PCI_DEVICE_ID_VIA_612X 0x3119#define PCI_DEVICE_ID_VIA_XM266 0x3116#define PCI_DEVICE_ID_VIA_8361 0x3112#define PCI_DEVICE_ID_VIA_8233C_0 0x3109#define PCI_DEVICE_ID_VIA_8235_USB_2 0x3104#define PCI_DEVICE_ID_VIA_8622 0x3102#define PCI_DEVICE_ID_VIA_8653_0 0x3101#define PCI_DEVICE_ID_VIA_8367_0 0x3099#define PCI_DEVICE_ID_VIA_8633_0 0x3091#define PCI_DEVICE_ID_VIA_8233_0 0x3074#define PCI_DEVICE_ID_VIA_8233_5 0x3059#define PCI_DEVICE_ID_VIA_82C686_5 0x3058#define PCI_DEVICE_ID_VIA_82C686_4 0x3057#define PCI_DEVICE_ID_VIA_82C596B_3 0x3051#define PCI_DEVICE_ID_VIA_82C596_3 0x3050#define PCI_DEVICE_ID_VIA_82C586_3 0x3040#define PCI_DEVICE_ID_VIA_82C586_2 0x3038#define PCI_DEVICE_ID_VIA_82C576_1 0x1571#define PCI_DEVICE_ID_VIA_82C691_0 0x0691#define PCI_DEVICE_ID_VIA_82C686 0x0686#define PCI_DEVICE_ID_VIA_8605_0 0x0605#define PCI_DEVICE_ID_VIA_8601_0 0x0601#define PCI_DEVICE_ID_VIA_82C598_0 0x0598#define PCI_DEVICE_ID_VIA_82C597_0 0x0597#define PCI_DEVICE_ID_VIA_82C596 0x0596#define PCI_DEVICE_ID_VIA_82C586_0 0x0586#define PCI_DEVICE_ID_VIA_82C576 0x0576#define PCI_DEVICE_ID_VIA_82C586_1 0x0571#define PCI_DEVICE_ID_VIA_82C561 0x0561#define PCI_DEVICE_ID_VIA_8501_0 0x0501#define PCI_DEVICE_ID_VIA_6415 0x0415#define PCI_DEVICE_ID_VIA_8371_0 0x0391#define PCI_DEVICE_ID_VIA_VT3364 0x0364#define PCI_DEVICE_ID_VIA_VT3351 0x0351#define PCI_DEVICE_ID_VIA_VT3336 0x0336#define PCI_DEVICE_ID_VIA_VT3324 0x0324#define PCI_DEVICE_ID_VIA_P4M890 0x0327#define PCI_DEVICE_ID_VIA_P4M800CE 0x0314#define PCI_DEVICE_ID_VIA_8363_0 0x0305#define PCI_DEVICE_ID_VIA_3296_0 0x0296#define PCI_DEVICE_ID_VIA_K8T800PRO_0 0x0282#define PCI_DEVICE_ID_VIA_3269_0 0x0269#define PCI_DEVICE_ID_VIA_PX8X0_0 0x0259#define PCI_DEVICE_ID_VIA_PT880ULTRA 0x0308#define PCI_DEVICE_ID_VIA_PT880 0x0258#define PCI_DEVICE_ID_VIA_3238_0 0x0238#define PCI_DEVICE_ID_VIA_8380_0 0x0204#define PCI_DEVICE_ID_VIA_8763_0 0x0198#define PCI_VENDOR_ID_VIA 0x1106#define PCI_DEVICE_ID_TTI_HPT372N 0x0009#define PCI_DEVICE_ID_TTI_HPT374 0x0008#define PCI_DEVICE_ID_TTI_HPT371 0x0007#define PCI_DEVICE_ID_TTI_HPT302 0x0006#define PCI_DEVICE_ID_TTI_HPT372 0x0005#define PCI_DEVICE_ID_TTI_HPT366 0x0004#define PCI_DEVICE_ID_TTI_HPT343 0x0003#define PCI_VENDOR_ID_TTI 0x1103#define PCI_DEVICE_ID_ECTIVA_EV1938 0x8938#define PCI_VENDOR_ID_ECTIVA 0x1102#define PCI_SUBDEVICE_ID_CREATIVE_HENDRIX 0x6000#define PCI_SUBDEVICE_ID_CREATIVE_SB1270 0x0062#define PCI_SUBDEVICE_ID_CREATIVE_SB08803 0x0043#define PCI_SUBDEVICE_ID_CREATIVE_SB08802 0x0042#define PCI_SUBDEVICE_ID_CREATIVE_SB08801 0x0041#define PCI_SUBDEVICE_ID_CREATIVE_SB0760 0x0024#define PCI_DEVICE_ID_CREATIVE_CA01322 0x0011#define PCI_DEVICE_ID_CREATIVE_20K2 0x000b#define PCI_DEVICE_ID_CREATIVE_20K1 0x0005#define PCI_DEVICE_ID_CREATIVE_EMU10K1 0x0002#define PCI_VENDOR_ID_CREATIVE 0x1102#define PCI_VENDOR_ID_INIT 0x1101#define PCI_DEVICE_ID_XILINX_HAMMERFALL_DSP_MADI 0x3fc6#define PCI_DEVICE_ID_XILINX_HAMMERFALL_DSP 0x3fc5#define PCI_DEVICE_ID_RME_DIGI96_8_PAD_OR_PST 0x3fc3#define PCI_DEVICE_ID_RME_DIGI96_8_PRO 0x3fc2#define PCI_DEVICE_ID_RME_DIGI96_8 0x3fc1#define PCI_DEVICE_ID_RME_DIGI96 0x3fc0#define PCI_VENDOR_ID_XILINX 0x10ee#define PCI_DEVICE_ID_REALTEK_8168 0x8168#define PCI_DEVICE_ID_REALTEK_8139 0x8139#define PCI_VENDOR_ID_REALTEK 0x10ec#define PCI_DEVICE_ID_INTERG_5050 0x5050#define PCI_DEVICE_ID_INTERG_5000 0x5000#define PCI_DEVICE_ID_INTERG_2010 0x2010#define PCI_DEVICE_ID_INTERG_2000 0x2000#define PCI_DEVICE_ID_INTERG_1682 0x1682#define PCI_VENDOR_ID_INTERG 0x10ea#define PCI_VENDOR_ID_AMCC 0x10e8#define PCI_DEVICE_ID_TUNDRA_CA91C042 0x0000#define PCI_VENDOR_ID_TUNDRA 0x10e3#define PCI_DEVICE_ID_IMS_TT3D 0x9135#define PCI_DEVICE_ID_IMS_TT128 0x9128#define PCI_VENDOR_ID_IMS 0x10e0#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP89_SATA 0x0D85#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP79_SMBUS 0x0AA2#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP73_SMBUS 0x07D8#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP77_IDE 0x0759#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP78S_SMBUS 0x0752#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP73_IDE 0x056C#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP67_IDE 0x0560#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP67_SMBUS 0x0542#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP65_IDE 0x0448#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP65_SMBUS 0x0446#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA3 0x03F7#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA2 0x03F6#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_IDE 0x03EC#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SMBUS 0x03EB#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP61_SATA 0x03E7#define PCI_DEVICE_ID_NVIDIA_NVENET_15 0x0373#define PCI_DEVICE_ID_NVIDIA_MCP55_BRIDGE_V4 0x0364#define PCI_DEVICE_ID_NVIDIA_MCP55_BRIDGE_V0 0x0360#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_1100 0x034E#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_GO1000 0x034C#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5700_2 0x0348#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5700_1 0x0347#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700VE 0x0344#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700LE 0x0343#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700 0x0342#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5700_ULTRA 0x0341#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_700 0x033F#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_3000 0x0338#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900ZT 0x0334#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5950_ULTRA 0x0333#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900XT 0x0332#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900 0x0331#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5900_ULTRA 0x0330#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5100 0x032D#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5300 0x032C#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_500 0x032B#define PCI_DEVICE_ID_NVIDIA_QUADRO_NVS_280_PCI 0x032A#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO_5200 0x0329#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5250_32 0x0328#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5100 0x0327#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5500 0x0326#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5250 0x0325#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5200 0x0324#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200SE 0x0323#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200_1 0x0322#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200_ULTRA 0x0321#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5200 0x0320#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_GO700 0x031C#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5650 0x031B#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_GO5600 0x031A#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600SE 0x0314#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600 0x0312#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5600_ULTRA 0x0311#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_1000 0x0309#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_2000 0x0308#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5800 0x0302#define PCI_DEVICE_ID_NVIDIA_GEFORCE_FX_5800_ULTRA 0x0301#define PCI_DEVICE_ID_NVIDIA_QUADRO4_700_GOGL 0x028C#define PCI_DEVICE_ID_NVIDIA_QUADRO4_780_XGL 0x0289#define PCI_DEVICE_ID_NVIDIA_QUADRO4_980_XGL 0x0288#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_4200_GO 0x0286#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800SE 0x0282#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800_8X 0x0281#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4800 0x0280#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA2 0x037F#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA 0x037E#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_IDE 0x036E#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SMBUS 0x0368#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SATA2 0x0267#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SATA 0x0266#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_IDE 0x0265#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP51_SMBUS 0x0264#define PCI_DEVICE_ID_NVIDIA_QUADRO4_700XGL 0x025B#define PCI_DEVICE_ID_NVIDIA_QUADRO4_750XGL 0x0259#define PCI_DEVICE_ID_NVIDIA_QUADRO4_900XGL 0x0258#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4200 0x0253#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4400 0x0251#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_TI_4600 0x0250#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B_GT 0x0215#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B_LE 0x0212#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800B 0x0211#define PCI_DEVICE_ID_NVIDIA_QUADRO_DDC 0x0203#define PCI_DEVICE_ID_NVIDIA_GEFORCE3_2 0x0202#define PCI_DEVICE_ID_NVIDIA_GEFORCE3_1 0x0201#define PCI_DEVICE_ID_NVIDIA_GEFORCE3 0x0200#define PCI_DEVICE_ID_NVIDIA_NFORCE2 0x01e0#define PCI_DEVICE_ID_NVIDIA_MCP1_MODEM 0x01c1#define PCI_DEVICE_ID_NVIDIA_NFORCE_IDE 0x01bc#define PCI_DEVICE_ID_NVIDIA_NFORCE_SMBUS 0x01b4#define PCI_DEVICE_ID_NVIDIA_MCP1_AUDIO 0x01b1#define PCI_DEVICE_ID_NVIDIA_NFORCE 0x01a4#define PCI_DEVICE_ID_NVIDIA_IGEFORCE2 0x01a0#define PCI_DEVICE_ID_NVIDIA_QUADRO4_380_XGL 0x018B#define PCI_DEVICE_ID_NVIDIA_QUADRO4_280_NVS 0x018A#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_MAC 0x0189#define PCI_DEVICE_ID_NVIDIA_QUADRO4_580_XGL 0x0188#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_488_GO 0x0187#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_448_GO 0x0186#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_4000 0x0185#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_420_8X 0x0183#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440SE_8X 0x0182#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440_8X 0x0181#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_410_GO_M16 0x017D#define PCI_DEVICE_ID_NVIDIA_QUADRO4_500_GOGL 0x017C#define PCI_DEVICE_ID_NVIDIA_QUADRO4_550XGL 0x017B#define PCI_DEVICE_ID_NVIDIA_QUADRO4_200 0x017A#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_440_GO_M64 0x0179#define PCI_DEVICE_ID_NVIDIA_QUADRO4_500XGL 0x0178#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_460_GO 0x0177#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_420_GO_M32 0x0176#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_420_GO 0x0175#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_440_GO 0x0174#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440_SE 0x0173#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_420 0x0172#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_440 0x0171#define PCI_DEVICE_ID_NVIDIA_GEFORCE4_MX_460 0x0170#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6250_1 0x0168#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6200_1 0x0167#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6250 0x0166#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_6200 0x0164#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6200_TURBOCACHE 0x0161#define PCI_DEVICE_ID_NVIDIA_QUADRO2_PRO 0x0153#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_ULTRA 0x0152#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_GTS2 0x0151#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_GTS 0x0150#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6200 0x014F#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_540 0x014E#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6610_XL 0x0145#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6600 0x0141#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6600_GT 0x0140#define PCI_DEVICE_ID_NVIDIA_QUADRO2_MXR 0x0113#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_GO 0x0112#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_MX2 0x0111#define PCI_DEVICE_ID_NVIDIA_GEFORCE2_MX 0x0110#define PCI_DEVICE_ID_NVIDIA_QUADRO 0x0103#define PCI_DEVICE_ID_NVIDIA_GEFORCE_DDR 0x0101#define PCI_DEVICE_ID_NVIDIA_GEFORCE_SDR 0x0100#define PCIE_DEVICE_ID_NVIDIA_QUADRO_NVS280 0x00fd#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6800_GT 0x00f9#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6200_ALT1 0x00f3#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6600_ALT2 0x00f2#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6600_ALT1 0x00f1#define PCIE_DEVICE_ID_NVIDIA_GEFORCE_6800_ALT1 0x00f0#define PCI_DEVICE_ID_NVIDIA_NFORCE3S_SATA2 0x00ee#define PCI_DEVICE_ID_NVIDIA_CK8S_AUDIO 0x00ea#define PCI_DEVICE_ID_NVIDIA_NFORCE3S_IDE 0x00e5#define PCI_DEVICE_ID_NVIDIA_NFORCE3S_SMBUS 0x00e4#define PCI_DEVICE_ID_NVIDIA_NFORCE3S_SATA 0x00e3#define PCI_DEVICE_ID_NVIDIA_NFORCE3S 0x00e1#define PCI_DEVICE_ID_NVIDIA_MCP3_AUDIO 0x00da#define PCI_DEVICE_ID_NVIDIA_MCP3_MODEM 0x00d9#define PCI_DEVICE_ID_NVIDIA_NFORCE3_IDE 0x00d5#define PCI_DEVICE_ID_NVIDIA_NFORCE3_SMBUS 0x00d4#define PCI_DEVICE_ID_NVIDIA_NFORCE3 0x00d1#define PCI_DEVICE_ID_QUADRO_FX_1400 0x00ce#define PCI_DEVICE_ID_QUADRO_FX_GO1400 0x00cc#define PCI_DEVICE_ID_GEFORCE_GO_6800_ULTRA 0x00c9#define PCI_DEVICE_ID_GEFORCE_GO_6800 0x00c8#define PCI_DEVICE_ID_GEFORCE_6800A_LE 0x00c2#define PCI_DEVICE_ID_GEFORCE_6800A 0x00c1#define PCI_DEVICE_ID_NVIDIA_ITNT2 0x00A0#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_7800_GTX 0x0099#define PCI_DEVICE_ID_NVIDIA_GEFORCE_GO_7800 0x0098#define PCI_DEVICE_ID_NVIDIA_GEFORCE_7800_GTX 0x0091#define PCI_DEVICE_ID_NVIDIA_GEFORCE_7800_GT 0x0090#define PCI_DEVICE_ID_NVIDIA_NFORCE2S_SATA 0x008e#define PCI_DEVICE_ID_NVIDIA_CK8_AUDIO 0x008a#define PCI_DEVICE_ID_NVIDIA_MCP2S_MODEM 0x0089#define PCI_DEVICE_ID_NVIDIA_NFORCE2S_IDE 0x0085#define PCI_DEVICE_ID_NVIDIA_NFORCE2S_SMBUS 0x0084#define PCI_DEVICE_ID_NVIDIA_MCP2_AUDIO 0x006a#define PCI_DEVICE_ID_NVIDIA_MCP2_MODEM 0x0069#define PCI_DEVICE_ID_NVIDIA_NFORCE2_IDE 0x0065#define PCI_DEVICE_ID_NVIDIA_NFORCE2_SMBUS 0x0064#define PCI_DEVICE_ID_NVIDIA_CK804_PCIE 0x005d#define PCI_DEVICE_ID_NVIDIA_CK804_AUDIO 0x0059#define PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_SATA2 0x0055#define PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_SATA 0x0054#define PCI_DEVICE_ID_NVIDIA_NFORCE_CK804_IDE 0x0053#define PCI_DEVICE_ID_NVIDIA_NFORCE4_SMBUS 0x0052#define PCI_DEVICE_ID_NVIDIA_QUADRO_FX_4000 0x004E#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_GT 0x0045#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_LE 0x0042#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800 0x0041#define PCI_DEVICE_ID_NVIDIA_GEFORCE_6800_ULTRA 0x0040#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SATA2 0x003e#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SATA 0x0036#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_IDE 0x0035#define PCI_DEVICE_ID_NVIDIA_NFORCE_MCP04_SMBUS 0x0034#define PCI_DEVICE_ID_NVIDIA_UVTNT2 0x002D#define PCI_DEVICE_ID_NVIDIA_VTNT2 0x002C#define PCI_DEVICE_ID_NVIDIA_TNT_UNKNOWN 0x002a#define PCI_DEVICE_ID_NVIDIA_UTNT2 0x0029#define PCI_DEVICE_ID_NVIDIA_TNT2 0x0028#define PCI_DEVICE_ID_NVIDIA_TNT 0x0020#define PCI_VENDOR_ID_NVIDIA 0x10de#define PCI_DEVICE_ID_TCONRAD_TOKENRING 0x0508#define PCI_VENDOR_ID_TCONRAD 0x10da#define PCI_DEVICE_ID_NEOMAGIC_NM256XL_PLUS_AUDIO 0x8016#define PCI_DEVICE_ID_NEOMAGIC_NM256ZX_AUDIO 0x8006#define PCI_DEVICE_ID_NEOMAGIC_NM256AV_AUDIO 0x8005#define PCI_VENDOR_ID_NEOMAGIC 0x10c8#define PCI_DEVICE_ID_AL_M7101 0x7101#define PCI_DEVICE_ID_AL_M5451 0x5451#define PCI_DEVICE_ID_AL_M5229 0x5229#define PCI_DEVICE_ID_AL_M5228 0x5228#define PCI_DEVICE_ID_AL_M5219 0x5219#define PCI_DEVICE_ID_AL_M1689 0x1689#define PCI_DEVICE_ID_AL_M1683 0x1683#define PCI_DEVICE_ID_AL_M1681 0x1681#define PCI_DEVICE_ID_AL_M1671 0x1671#define PCI_DEVICE_ID_AL_M1651 0x1651#define PCI_DEVICE_ID_AL_M1647 0x1647#define PCI_DEVICE_ID_AL_M1644 0x1644#define PCI_DEVICE_ID_AL_M1641 0x1641#define PCI_DEVICE_ID_AL_M1632 0x1632#define PCI_DEVICE_ID_AL_M1631 0x1631#define PCI_DEVICE_ID_AL_M1621 0x1621#define PCI_DEVICE_ID_AL_M1563 0x1563#define PCI_DEVICE_ID_AL_M1541 0x1541#define PCI_DEVICE_ID_AL_M1535 0x1535#define PCI_DEVICE_ID_AL_M1533 0x1533#define PCI_VENDOR_ID_AL 0x10b9#define PCI_DEVICE_ID_3COM_3CR990SVR 0x990a#define PCI_DEVICE_ID_3COM_3CR990SVR97 0x9909#define PCI_DEVICE_ID_3COM_3CR990SVR95 0x9908#define PCI_DEVICE_ID_3COM_3CR990_FX 0x9905#define PCI_DEVICE_ID_3COM_3CR990B 0x9904#define PCI_DEVICE_ID_3COM_3CR990_TX_97 0x9903#define PCI_DEVICE_ID_3COM_3CR990_TX_95 0x9902#define PCI_DEVICE_ID_3COM_3CR990 0x9900#define PCI_DEVICE_ID_3COM_3C940B 0x80eb#define PCI_DEVICE_ID_3COM_3C359 0x3590#define PCI_DEVICE_ID_3COM_3C339 0x3390#define PCI_DEVICE_ID_3COM_3C940 0x1700#define PCI_DEVICE_ID_3COM_3C985 0x0001#define PCI_VENDOR_ID_3COM 0x10b7#define PCI_DEVICE_ID_MADGE_MK2 0x0002#define PCI_VENDOR_ID_MADGE 0x10b6#define PCI_DEVICE_ID_PLX_GTEK_SERIAL2 0xa001#define PCI_DEVICE_ID_PLX_9080 0x9080#define PCI_DEVICE_ID_PLX_9056 0x9056#define PCI_DEVICE_ID_PLX_9050 0x9050#define PCI_DEVICE_ID_PLX_9030 0x9030#define PCI_DEVICE_ID_PLX_PCI200SYN 0x3196#define PCI_DEVICE_ID_PLX_OLITEC 0x1187#define PCI_DEVICE_ID_PLX_R753 0x1152#define PCI_DEVICE_ID_PLX_DJINN_ITOO 0x1151#define PCI_DEVICE_ID_PLX_SPCOM200 0x1103#define PCI_DEVICE_ID_PLX_1077 0x1077#define PCI_DEVICE_ID_PLX_SPCOM800 0x1076#define PCI_DEVICE_ID_PLX_ROMULUS 0x106a#define PCI_DEVICE_ID_PLX_R685 0x1030#define PCI_VENDOR_ID_PLX 0x10b5#define PCI_DEVICE_ID_WINBOND_83C553 0x0565#define PCI_DEVICE_ID_WINBOND_82C105 0x0105#define PCI_VENDOR_ID_WINBOND 0x10ad#define PCI_DEVICE_ID_SGI_IOC4 0x100a#define PCI_DEVICE_ID_SGI_LITHIUM 0x1002#define PCI_DEVICE_ID_SGI_IOC3 0x0003#define PCI_VENDOR_ID_SGI 0x10a9#define PCI_DEVICE_ID_BROOKTREE_879 0x0879#define PCI_DEVICE_ID_BROOKTREE_878 0x0878#define PCI_VENDOR_ID_BROOKTREE 0x109e#define PCI_DEVICE_ID_SIL3132 0x3132#define PCI_DEVICE_ID_SIL3131 0x3131#define PCI_DEVICE_ID_SIL3124 0x3124#define PCI_DEVICE_ID_SII_3112 0x3112#define PCI_DEVICE_ID_SII_680 0x0680#define PCI_DEVICE_ID_SII_1210SA 0x0240#define PCI_VENDOR_ID_SILICONIMAGE 0x1095#define PCI_DEVICE_ID_CMD_649 0x0649#define PCI_DEVICE_ID_CMD_648 0x0648#define PCI_DEVICE_ID_CMD_646 0x0646#define PCI_DEVICE_ID_CMD_643 0x0643#define PCI_VENDOR_ID_CMD 0x1095#define PCI_DEVICE_ID_NI_PCI8432_2324 0x70ee#define PCI_DEVICE_ID_NI_PXI8432_2324 0x70ec#define PCI_DEVICE_ID_NI_PCI8432_2322 0x70ea#define PCI_DEVICE_ID_NI_PXI8432_2322 0x70e8#define PCI_DEVICE_ID_NI_PCI8430_23216 0x70e7#define PCI_DEVICE_ID_NI_PXI8430_23216 0x70e6#define PCI_DEVICE_ID_NI_PCI8430_2328 0x70e4#define PCI_DEVICE_ID_NI_PXI8430_2328 0x70e2#define PCI_DEVICE_ID_NI_PCI8430_2324 0x70df#define PCI_DEVICE_ID_NI_PXI8430_2324 0x70dd#define PCI_DEVICE_ID_NI_PCI8430_2322 0x70db#define PCI_DEVICE_ID_NI_PXI8430_2322 0x7080#define PCI_DEVICE_ID_NI_PCI23216 0xd2b0#define PCI_DEVICE_ID_NI_PCI2324I 0xd270#define PCI_DEVICE_ID_NI_PCI2322I 0xd250#define PCI_DEVICE_ID_NI_PXI8420_23216 0xd1f1#define PCI_DEVICE_ID_NI_PXI8420_2328 0xd1f0#define PCI_DEVICE_ID_NI_PXI8420_2324 0xd1e0#define PCI_DEVICE_ID_NI_PXI8420_2322 0xd1d0#define PCI_DEVICE_ID_NI_PXI8422_2324 0xd1a0#define PCI_DEVICE_ID_NI_PXI8422_2322 0xd190#define PCI_DEVICE_ID_NI_PCI2328 0xd150#define PCI_DEVICE_ID_NI_PCI2324 0xd140#define PCI_DEVICE_ID_NI_PCI2322 0xd130#define PCI_VENDOR_ID_NI 0x1093#define PCI_DEVICE_ID_SUN_CASSINI 0xabba#define PCI_DEVICE_ID_SUN_TOMATILLO 0xa801#define PCI_DEVICE_ID_SUN_HUMMINGBIRD 0xa001#define PCI_DEVICE_ID_SUN_SABRE 0xa000#define PCI_DEVICE_ID_SUN_SCHIZO 0x8001#define PCI_DEVICE_ID_SUN_PBM 0x8000#define PCI_DEVICE_ID_SUN_SIMBA 0x5000#define PCI_DEVICE_ID_SUN_GEM 0x2bad#define PCI_DEVICE_ID_SUN_RIO_USB 0x1103#define PCI_DEVICE_ID_SUN_RIO_1394 0x1102#define PCI_DEVICE_ID_SUN_RIO_GEM 0x1101#define PCI_DEVICE_ID_SUN_RIO_EBUS 0x1100#define PCI_DEVICE_ID_SUN_HAPPYMEAL 0x1001#define PCI_DEVICE_ID_SUN_EBUS 0x1000#define PCI_VENDOR_ID_SUN 0x108e#define PCI_DEVICE_ID_OLICOM_OC2326 0x0014#define PCI_DEVICE_ID_OLICOM_OC2183 0x0013#define PCI_DEVICE_ID_OLICOM_OC2325 0x0012#define PCI_VENDOR_ID_OLICOM 0x108d#define PCI_DEVICE_ID_CONTAQ_82C693 0xc693#define PCI_VENDOR_ID_CONTAQ 0x1080#define PCI_DEVICE_ID_CYRIX_5530_VIDEO 0x0104#define PCI_DEVICE_ID_CYRIX_5530_AUDIO 0x0103#define PCI_DEVICE_ID_CYRIX_5530_IDE 0x0102#define PCI_DEVICE_ID_CYRIX_5530_LEGACY 0x0100#define PCI_DEVICE_ID_CYRIX_5520 0x0002#define PCI_DEVICE_ID_CYRIX_PCI_MASTER 0x0001#define PCI_DEVICE_ID_CYRIX_5510 0x0000#define PCI_VENDOR_ID_CYRIX 0x1078#define PCI_DEVICE_ID_QLOGIC_ISP5432 0x5432#define PCI_DEVICE_ID_QLOGIC_ISP5422 0x5422#define PCI_DEVICE_ID_QLOGIC_ISP2522 0x2522#define PCI_DEVICE_ID_QLOGIC_ISP2512 0x2512#define PCI_DEVICE_ID_QLOGIC_ISP2432 0x2432#define PCI_DEVICE_ID_QLOGIC_ISP2422 0x2422#define PCI_DEVICE_ID_QLOGIC_ISP6322 0x6322#define PCI_DEVICE_ID_QLOGIC_ISP6312 0x6312#define PCI_DEVICE_ID_QLOGIC_ISP2322 0x2322#define PCI_DEVICE_ID_QLOGIC_ISP2312 0x2312#define PCI_DEVICE_ID_QLOGIC_ISP2300 0x2300#define PCI_DEVICE_ID_QLOGIC_ISP2200 0x2200#define PCI_DEVICE_ID_QLOGIC_ISP2100 0x2100#define PCI_DEVICE_ID_QLOGIC_ISP1280 0x1280#define PCI_DEVICE_ID_QLOGIC_ISP1240 0x1240#define PCI_DEVICE_ID_QLOGIC_ISP12160 0x1216#define PCI_DEVICE_ID_QLOGIC_ISP1080 0x1080#define PCI_DEVICE_ID_QLOGIC_ISP1020 0x1020#define PCI_DEVICE_ID_QLOGIC_ISP10160 0x1016#define PCI_VENDOR_ID_QLOGIC 0x1077#define PCI_DEVICE_ID_YAMAHA_754 0x0012#define PCI_DEVICE_ID_YAMAHA_744 0x0010#define PCI_DEVICE_ID_YAMAHA_740C 0x000c#define PCI_DEVICE_ID_YAMAHA_740 0x000a#define PCI_DEVICE_ID_YAMAHA_724F 0x000d#define PCI_DEVICE_ID_YAMAHA_724 0x0004#define PCI_VENDOR_ID_YAMAHA 0x1073#define PCI_DEVICE_ID_APPLE_TIGON3 0x1645#define PCI_DEVICE_ID_APPLE_IPID2_GMAC 0x006b#define PCI_DEVICE_ID_APPLE_IPID2_FW 0x006a#define PCI_DEVICE_ID_APPLE_IPID2_ATA 0x0069#define PCI_DEVICE_ID_APPLE_IPID2_AGP 0x0066#define PCI_DEVICE_ID_APPLE_U4_PCIE 0x005b#define PCI_DEVICE_ID_APPLE_U3H_AGP 0x0059#define PCI_DEVICE_ID_APPLE_U3L_AGP 0x0058#define PCI_DEVICE_ID_APPLE_SH_SUNGEM 0x0051#define PCI_DEVICE_ID_APPLE_SH_ATA 0x0050#define PCI_DEVICE_ID_APPLE_K2_GMAC 0x004c#define PCI_DEVICE_ID_APPLE_U3_AGP 0x004b#define PCI_DEVICE_ID_APPLE_K2_ATA100 0x0043#define PCI_DEVICE_ID_APPLE_IPID_ATA100 0x003b#define PCI_DEVICE_ID_APPLE_UNI_N_AGP2 0x0034#define PCI_DEVICE_ID_APPLE_UNI_N_ATA 0x0033#define PCI_DEVICE_ID_APPLE_UNI_N_GMAC2 0x0032#define PCI_DEVICE_ID_APPLE_UNI_N_PCI15 0x002e#define PCI_DEVICE_ID_APPLE_UNI_N_AGP15 0x002d#define PCI_DEVICE_ID_APPLE_UNI_N_AGP_P 0x0027#define PCI_DEVICE_ID_APPLE_UNI_N_GMACP 0x0024#define PCI_DEVICE_ID_APPLE_UNI_N_GMAC 0x0021#define PCI_DEVICE_ID_APPLE_UNI_N_AGP 0x0020#define PCI_DEVICE_ID_APPLE_UNI_N_FW 0x0018#define PCI_DEVICE_ID_APPLE_HYDRA 0x000e#define PCI_DEVICE_ID_APPLE_BANDIT 0x0001#define PCI_VENDOR_ID_APPLE 0x106b#define PCI_DEVICE_ID_MYLEX_DAC960_GEM 0xB166#define PCI_DEVICE_ID_MYLEX_DAC960_BA 0xBA56#define PCI_DEVICE_ID_MYLEX_DAC960_LP 0x0050#define PCI_DEVICE_ID_MYLEX_DAC960_LA 0x0020#define PCI_DEVICE_ID_MYLEX_DAC960_PG 0x0010#define PCI_DEVICE_ID_MYLEX_DAC960_PD 0x0002#define PCI_DEVICE_ID_MYLEX_DAC960_P 0x0001#define PCI_VENDOR_ID_MYLEX 0x1069#define PCI_DEVICE_ID_PICOPOWER_PT86C523BBP 0x8002#define PCI_DEVICE_ID_PICOPOWER_PT86C523 0x0002#define PCI_VENDOR_ID_PICOPOWER 0x1066#define PCI_DEVICE_ID_UMC_UM8886A 0x886a#define PCI_DEVICE_ID_UMC_UM8886BF 0x673a#define PCI_DEVICE_ID_UMC_UM8673F 0x0101#define PCI_VENDOR_ID_UMC 0x1060#define PCI_VENDOR_ID_FOXCONN 0x105b#define PCI_DEVICE_ID_PROMISE_20277 0x7275#define PCI_DEVICE_ID_PROMISE_20276 0x5275#define PCI_DEVICE_ID_PROMISE_20275 0x1275#define PCI_DEVICE_ID_PROMISE_20271 0x6269#define PCI_DEVICE_ID_PROMISE_20270 0x6268#define PCI_DEVICE_ID_PROMISE_20269 0x4d69#define PCI_DEVICE_ID_PROMISE_20268 0x4d68#define PCI_DEVICE_ID_PROMISE_20263 0x0D38#define PCI_DEVICE_ID_PROMISE_20262 0x4d38#define PCI_DEVICE_ID_PROMISE_20246 0x4d33#define PCI_DEVICE_ID_PROMISE_20267 0x4d30#define PCI_DEVICE_ID_PROMISE_20265 0x0d30#define PCI_VENDOR_ID_PROMISE 0x105a#define PCI_DEVICE_ID_MOTOROLA_MPC5200B 0x5809#define PCI_DEVICE_ID_MOTOROLA_MPC5200 0x5803#define PCI_DEVICE_ID_MOTOROLA_HARRIER 0x480b#define PCI_DEVICE_ID_MOTOROLA_HAWK 0x4803#define PCI_DEVICE_ID_MOTOROLA_FALCON 0x4802#define PCI_DEVICE_ID_MOTOROLA_RAVEN 0x4801#define PCI_DEVICE_ID_MOTOROLA_MPC107 0x0004#define PCI_DEVICE_ID_MOTOROLA_MPC106 0x0002#define PCI_DEVICE_ID_MOTOROLA_MPC105 0x0001#define PCI_VENDOR_ID_MOTOROLA 0x1057#define PCI_DEVICE_ID_EFAR_SLC90E66_3 0x9463#define PCI_DEVICE_ID_EFAR_SLC90E66_1 0x9130#define PCI_VENDOR_ID_EFAR 0x1055#define PCI_DEVICE_ID_ANIGMA_MC145575 0x0100#define PCI_VENDOR_ID_ANIGMA 0x1051#define PCI_DEVICE_ID_WINBOND2_6692 0x6692#define PCI_DEVICE_ID_WINBOND2_89C940F 0x5a5a#define PCI_VENDOR_ID_WINBOND2 0x1050#define PCI_VENDOR_ID_SONY 0x104d#define PCI_DEVICE_ID_TI_XX20_FM 0xac8f#define PCI_DEVICE_ID_TI_X420 0xac8e#define PCI_DEVICE_ID_TI_X620 0xac8d#define PCI_DEVICE_ID_TI_1510 0xac56#define PCI_DEVICE_ID_TI_1520 0xac55#define PCI_DEVICE_ID_TI_1620 0xac54#define PCI_DEVICE_ID_TI_1451A 0xac52#define PCI_DEVICE_ID_TI_1420 0xac51#define PCI_DEVICE_ID_TI_1410 0xac50#define PCI_DEVICE_ID_TI_7410 0xac49#define PCI_DEVICE_ID_TI_7610 0xac48#define PCI_DEVICE_ID_TI_7510 0xac47#define PCI_DEVICE_ID_TI_4520 0xac46#define PCI_DEVICE_ID_TI_4510 0xac44#define PCI_DEVICE_ID_TI_4451 0xac42#define PCI_DEVICE_ID_TI_4410 0xac41#define PCI_DEVICE_ID_TI_1251B 0xac1f#define PCI_DEVICE_ID_TI_1211 0xac1e#define PCI_DEVICE_ID_TI_1251A 0xac1d#define PCI_DEVICE_ID_TI_1225 0xac1c#define PCI_DEVICE_ID_TI_1450 0xac1b#define PCI_DEVICE_ID_TI_1210 0xac1a#define PCI_DEVICE_ID_TI_1221 0xac19#define PCI_DEVICE_ID_TI_1220 0xac17#define PCI_DEVICE_ID_TI_1250 0xac16#define PCI_DEVICE_ID_TI_1131 0xac15#define PCI_DEVICE_ID_TI_1031 0xac13#define PCI_DEVICE_ID_TI_1130 0xac12#define PCI_DEVICE_ID_TI_XIO2000A 0x8231#define PCI_DEVICE_ID_TI_XX12_FM 0x803b#define PCI_DEVICE_ID_TI_XX12 0x8039#define PCI_DEVICE_ID_TI_X515 0x8036#define PCI_DEVICE_ID_TI_XX21_XX11_SD 0x8034#define PCI_DEVICE_ID_TI_XX21_XX11_FM 0x8033#define PCI_DEVICE_ID_TI_XX21_XX11 0x8031#define PCI_DEVICE_ID_TI_4450 0x8011#define PCI_DEVICE_ID_TI_TVP4020 0x3d07#define PCI_VENDOR_ID_TI 0x104c#define PCI_DEVICE_ID_BUSLOGIC_FLASHPOINT 0x8130#define PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER 0x1040#define PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER_NC 0x0140#define PCI_VENDOR_ID_BUSLOGIC 0x104B#define PCI_DEVICE_ID_STMICRO_VIC 0xCC16#define PCI_DEVICE_ID_STMICRO_ESRAM 0xCC15#define PCI_DEVICE_ID_STMICRO_SATA_PHY 0xCC14#define PCI_DEVICE_ID_STMICRO_DBP 0xCC13#define PCI_DEVICE_ID_STMICRO_MLB 0xCC12#define PCI_DEVICE_ID_STMICRO_CAN 0xCC11#define PCI_DEVICE_ID_STMICRO_AUDIO_ROUTER_MSPS 0xCC10#define PCI_DEVICE_ID_STMICRO_AUDIO_ROUTER_SRCS 0xCC0F#define PCI_DEVICE_ID_STMICRO_AUDIO_ROUTER_DMA 0xCC0E#define PCI_DEVICE_ID_STMICRO_VIP 0xCC0D#define PCI_DEVICE_ID_STMICRO_GPIO 0xCC0C#define PCI_DEVICE_ID_STMICRO_SDIO 0xCC0B#define PCI_DEVICE_ID_STMICRO_SDIO_EMMC 0xCC0A#define PCI_DEVICE_ID_STMICRO_MAC 0xCC09#define PCI_DEVICE_ID_STMICRO_SPI_HS 0xCC08#define PCI_DEVICE_ID_STMICRO_I2C 0xCC07#define PCI_DEVICE_ID_STMICRO_SATA 0xCC06#define PCI_DEVICE_ID_STMICRO_SOC_DMA 0xCC05#define PCI_DEVICE_ID_STMICRO_UART_NO_HWFC 0xCC04#define PCI_DEVICE_ID_STMICRO_UART_HWFC 0xCC03#define PCI_DEVICE_ID_STMICRO_USB_OTG 0xCC02#define PCI_DEVICE_ID_STMICRO_USB_OHCI 0xCC01#define PCI_DEVICE_ID_STMICRO_USB_HOST 0xCC00#define PCI_VENDOR_ID_STMICRO 0x104A#define PCI_DEVICE_ID_ELSA_QS3000 0x3000#define PCI_DEVICE_ID_ELSA_MICROLINK 0x1000#define PCI_VENDOR_ID_ELSA 0x1048#define PCI_DEVICE_ID_OPTI_82C825 0xd568#define PCI_DEVICE_ID_OPTI_82C700 0xc700#define PCI_DEVICE_ID_OPTI_82C621 0xc621#define PCI_DEVICE_ID_OPTI_82C558 0xc558#define PCI_VENDOR_ID_OPTI 0x1045#define PCI_DEVICE_ID_DPT 0xa400#define PCI_VENDOR_ID_DPT 0x1044#define PCI_DEVICE_ID_ASUSTEK_0675 0x0675#define PCI_VENDOR_ID_ASUSTEK 0x1043#define PCI_DEVICE_ID_PCTECH_SAMURAI_IDE 0x3020#define PCI_DEVICE_ID_PCTECH_RZ1001 0x1001#define PCI_DEVICE_ID_PCTECH_RZ1000 0x1000#define PCI_VENDOR_ID_PCTECH 0x1042#define PCI_DEVICE_ID_HP_ZX2_IOC 0x4031#define PCI_DEVICE_ID_HP_CISSI 0x3239#define PCI_DEVICE_ID_HP_CISSH 0x323c#define PCI_DEVICE_ID_HP_CISSF 0x323b#define PCI_DEVICE_ID_HP_CISSE 0x323a#define PCI_DEVICE_ID_HP_CISSD 0x3238#define PCI_DEVICE_ID_HP_CISSC 0x3230#define PCI_DEVICE_ID_HP_CISSA 0x3220#define PCI_DEVICE_ID_HP_DIVA_HURRICANE 0x132a#define PCI_DEVICE_ID_HP_DIVA_RMP3 0x1301#define PCI_DEVICE_ID_HP_DIVA_AUX 0x1290#define PCI_DEVICE_ID_HP_DIVA_EVEREST 0x1282#define PCI_DEVICE_ID_HP_SX1000_IOC 0x127c#define PCI_DEVICE_ID_HP_PCIX_LBA 0x122e#define PCI_DEVICE_ID_HP_ZX1_IOC 0x122a#define PCI_DEVICE_ID_HP_DIVA_POWERBAR 0x1227#define PCI_DEVICE_ID_HP_DIVA_KEYSTONE 0x1226#define PCI_DEVICE_ID_HP_DIVA_HALFDOME 0x1223#define PCI_DEVICE_ID_HP_VISUALIZE_FXE 0x108b#define PCI_DEVICE_ID_HP_REO_IOC 0x10f1#define PCI_DEVICE_ID_HP_DIVA_MAESTRO 0x104B#define PCI_DEVICE_ID_HP_DIVA_TOSCA2 0x104A#define PCI_DEVICE_ID_HP_DIVA_TOSCA1 0x1049#define PCI_DEVICE_ID_HP_DIVA 0x1048#define PCI_DEVICE_ID_HP_J2970A 0x1042#define PCI_DEVICE_ID_HP_J2973A 0x1040#define PCI_DEVICE_ID_HP_J2585B 0x1031#define PCI_DEVICE_ID_HP_J2585A 0x1030#define PCI_DEVICE_ID_HP_TACHLITE 0x1029#define PCI_DEVICE_ID_HP_TACHYON 0x1028#define PCI_DEVICE_ID_HP_VISUALIZE_FX2 0x100a#define PCI_DEVICE_ID_HP_VISUALIZE_FX4 0x1008#define PCI_DEVICE_ID_HP_VISUALIZE_FX6 0x1006#define PCI_DEVICE_ID_HP_VISUALIZE_EG 0x1005#define PCI_VENDOR_ID_HP_3PAR 0x1590#define PCI_VENDOR_ID_HP 0x103c#define PCI_DEVICE_ID_SI_7018 0x7018#define PCI_DEVICE_ID_SI_7016 0x7016#define PCI_DEVICE_ID_SI_7013 0x7013#define PCI_DEVICE_ID_SI_7012 0x7012#define PCI_DEVICE_ID_SI_5600 0x5600#define PCI_DEVICE_ID_SI_5598 0x5598#define PCI_DEVICE_ID_SI_5597 0x5597#define PCI_DEVICE_ID_SI_5596 0x5596#define PCI_DEVICE_ID_SI_5591 0x5591#define PCI_DEVICE_ID_SI_5582 0x5582#define PCI_DEVICE_ID_SI_5581 0x5581#define PCI_DEVICE_ID_SI_5571 0x5571#define PCI_DEVICE_ID_SI_5518 0x5518#define PCI_DEVICE_ID_SI_5517 0x5517#define PCI_DEVICE_ID_SI_5513 0x5513#define PCI_DEVICE_ID_SI_5511 0x5511#define PCI_DEVICE_ID_SI_1180 0x1180#define PCI_DEVICE_ID_SI_968 0x0968#define PCI_DEVICE_ID_SI_966 0x0966#define PCI_DEVICE_ID_SI_965 0x0965#define PCI_DEVICE_ID_SI_963 0x0963#define PCI_DEVICE_ID_SI_962 0x0962#define PCI_DEVICE_ID_SI_961 0x0961#define PCI_DEVICE_ID_SI_900 0x0900#define PCI_DEVICE_ID_SI_760 0x0760#define PCI_DEVICE_ID_SI_755 0x0755#define PCI_DEVICE_ID_SI_746 0x0746#define PCI_DEVICE_ID_SI_745 0x0745#define PCI_DEVICE_ID_SI_741 0x0741#define PCI_DEVICE_ID_SI_740 0x0740#define PCI_DEVICE_ID_SI_735 0x0735#define PCI_DEVICE_ID_SI_630_VGA 0x6300#define PCI_DEVICE_ID_SI_733 0x0733#define PCI_DEVICE_ID_SI_730 0x0730#define PCI_DEVICE_ID_SI_661 0x0661#define PCI_DEVICE_ID_SI_655 0x0655#define PCI_DEVICE_ID_SI_651 0x0651#define PCI_DEVICE_ID_SI_650 0x0650#define PCI_DEVICE_ID_SI_648 0x0648#define PCI_DEVICE_ID_SI_646 0x0646#define PCI_DEVICE_ID_SI_645 0x0645#define PCI_DEVICE_ID_SI_640 0x0640#define PCI_DEVICE_ID_SI_635 0x0635#define PCI_DEVICE_ID_SI_633 0x0633#define PCI_DEVICE_ID_SI_630 0x0630#define PCI_DEVICE_ID_SI_620 0x0620#define PCI_DEVICE_ID_SI_550_VGA 0x5315#define PCI_DEVICE_ID_SI_540_VGA 0x5300#define PCI_DEVICE_ID_SI_550 0x0550#define PCI_DEVICE_ID_SI_540 0x0540#define PCI_DEVICE_ID_SI_530 0x0530#define PCI_DEVICE_ID_SI_315PRO 0x0325#define PCI_DEVICE_ID_SI_315 0x0315#define PCI_DEVICE_ID_SI_315H 0x0310#define PCI_DEVICE_ID_SI_300 0x0300#define PCI_DEVICE_ID_SI_496 0x0496#define PCI_DEVICE_ID_SI_501 0x0406#define PCI_DEVICE_ID_SI_6205 0x0205#define PCI_DEVICE_ID_SI_5597_VGA 0x0200#define PCI_DEVICE_ID_SI_LPC 0x0018#define PCI_DEVICE_ID_SI_SMBUS 0x0016#define PCI_DEVICE_ID_SI_ACPI 0x0009#define PCI_DEVICE_ID_SI_503 0x0008#define PCI_DEVICE_ID_SI_6202 0x0002#define PCI_DEVICE_ID_SI_5591_AGP 0x0001#define PCI_VENDOR_ID_SI 0x1039#define PCI_DEVICE_ID_FD_36C70 0x0000#define PCI_VENDOR_ID_FD 0x1036#define PCI_DEVICE_ID_NEC_PC9821NRB06 0x800d#define PCI_DEVICE_ID_NEC_PC9821CS01 0x800c#define PCI_DEVICE_ID_NEC_VRC5477_AC97 0x00a6#define PCI_DEVICE_ID_NEC_VRC4173 0x00a5#define PCI_DEVICE_ID_NEC_VRC5476 0x009b#define PCI_DEVICE_ID_NEC_PCX2 0x0046#define PCI_DEVICE_ID_NEC_NAPCCARD 0x003e#define PCI_DEVICE_ID_NEC_CBUS_3 0x003b#define PCI_DEVICE_ID_NEC_USB 0x0035#define PCI_DEVICE_ID_NEC_CBUS_2 0x002d#define PCI_DEVICE_ID_NEC_STARALPHA2 0x002c#define PCI_DEVICE_ID_NEC_VL 0x0016#define PCI_DEVICE_ID_NEC_GRAPH 0x0009#define PCI_DEVICE_ID_NEC_ACCEL_2 0x0008#define PCI_DEVICE_ID_NEC_UXBUS 0x0007#define PCI_DEVICE_ID_NEC_ACCEL_1 0x0006#define PCI_DEVICE_ID_NEC_486 0x0005#define PCI_DEVICE_ID_NEC_R4000 0x0004#define PCI_DEVICE_ID_NEC_ATM 0x0003#define PCI_DEVICE_ID_NEC_LOCAL 0x0002#define PCI_DEVICE_ID_NEC_CBUS_1 0x0001#define PCI_VENDOR_ID_NEC 0x1033#define PCI_DEVICE_ID_MIRO_DC30PLUS 0xd801#define PCI_DEVICE_ID_MIRO_DC10PLUS 0x7efe#define PCI_DEVICE_ID_MIRO_36050 0x5601#define PCI_VENDOR_ID_MIRO 0x1031#define PCI_DEVICE_ID_CT_69030 0x0c30#define PCI_DEVICE_ID_CT_65555 0x00e5#define PCI_DEVICE_ID_CT_65554 0x00e4#define PCI_DEVICE_ID_CT_65550 0x00e0#define PCI_DEVICE_ID_CT_65548 0x00dc#define PCI_DEVICE_ID_CT_65545 0x00d8#define PCI_DEVICE_ID_CT_69000 0x00c0#define PCI_VENDOR_ID_CT 0x102c#define PCI_VENDOR_ID_MOBILITY_ELECTRONICS 0x14f2#define PCI_DEVICE_ID_MATROX_VIA 0x4536#define PCI_DEVICE_ID_MATROX_G550 0x2527#define PCI_DEVICE_ID_MATROX_G200EV_PCI 0x0530#define PCI_DEVICE_ID_MATROX_G400 0x0525#define PCI_DEVICE_ID_MATROX_G200_AGP 0x0521#define PCI_DEVICE_ID_MATROX_G200_PCI 0x0520#define PCI_DEVICE_ID_MATROX_G100_AGP 0x1001#define PCI_DEVICE_ID_MATROX_G100_MM 0x1000#define PCI_DEVICE_ID_MATROX_MGA_IMP 0x0d10#define PCI_DEVICE_ID_MATROX_MIL_2_AGP 0x051f#define PCI_DEVICE_ID_MATROX_MYS_AGP 0x051e#define PCI_DEVICE_ID_MATROX_MIL_2 0x051b#define PCI_DEVICE_ID_MATROX_MYS 0x051A#define PCI_DEVICE_ID_MATROX_MIL 0x0519#define PCI_DEVICE_ID_MATROX_MGA_2 0x0518#define PCI_VENDOR_ID_MATROX 0x102B#define PCI_DEVICE_ID_DELL_PERC5 0x0015#define PCI_DEVICE_ID_DELL_RAC4 0x0012#define PCI_DEVICE_ID_DELL_RACIII 0x0008#define PCI_VENDOR_ID_DELL 0x1028#define PCI_DEVICE_ID_AI_M1435 0x1435#define PCI_VENDOR_ID_AI 0x1025#define PCI_DEVICE_ID_TRIDENT_8500 0x8500#define PCI_DEVICE_ID_TRIDENT_8420 0x8420#define PCI_DEVICE_ID_TRIDENT_8400 0x8400#define PCI_DEVICE_ID_TRIDENT_9880 0x9880#define PCI_DEVICE_ID_TRIDENT_9850 0x9850#define PCI_DEVICE_ID_TRIDENT_9750 0x9750#define PCI_DEVICE_ID_TRIDENT_9660 0x9660#define PCI_DEVICE_ID_TRIDENT_9440 0x9440#define PCI_DEVICE_ID_TRIDENT_9420 0x9420#define PCI_DEVICE_ID_TRIDENT_9525 0x9525#define PCI_DEVICE_ID_TRIDENT_9520 0x9520#define PCI_DEVICE_ID_TRIDENT_939A 0x939A#define PCI_DEVICE_ID_TRIDENT_9397 0x9397#define PCI_DEVICE_ID_TRIDENT_9388 0x9388#define PCI_DEVICE_ID_TRIDENT_9320 0x9320#define PCI_DEVICE_ID_TRIDENT_4DWAVE_NX 0x2001#define PCI_DEVICE_ID_TRIDENT_4DWAVE_DX 0x2000#define PCI_VENDOR_ID_TRIDENT 0x1023#define PCI_DEVICE_ID_AMD_HUDSON2_IDE 0x780c#define PCI_DEVICE_ID_AMD_HUDSON2_SMBUS 0x780b#define PCI_DEVICE_ID_AMD_HUDSON2_SATA_IDE 0x7800#define PCI_DEVICE_ID_AMD_LX_AES 0x2082#define PCI_DEVICE_ID_AMD_LX_VIDEO 0x2081#define PCI_DEVICE_ID_AMD_CS5536_IDE 0x209A#define PCI_DEVICE_ID_AMD_CS5536_UOC 0x2097#define PCI_DEVICE_ID_AMD_CS5536_UDC 0x2096#define PCI_DEVICE_ID_AMD_CS5536_EHC 0x2095#define PCI_DEVICE_ID_AMD_CS5536_OHC 0x2094#define PCI_DEVICE_ID_AMD_CS5536_AUDIO 0x2093#define PCI_DEVICE_ID_AMD_CS5536_FLASH 0x2091#define PCI_DEVICE_ID_AMD_CS5536_ISA 0x2090#define PCI_DEVICE_ID_AMD_CS5535_IDE 0x208F#define PCI_DEVICE_ID_AMD_8132_BRIDGE 0x7458#define PCI_DEVICE_ID_AMD_8131_APIC 0x7451#define PCI_DEVICE_ID_AMD_8131_BRIDGE 0x7450#define PCI_DEVICE_ID_AMD_8151_0 0x7454#define PCI_DEVICE_ID_AMD_8111_AUDIO 0x746d#define PCI_DEVICE_ID_AMD_8111_SMBUS 0x746b#define PCI_DEVICE_ID_AMD_8111_SMBUS2 0x746a#define PCI_DEVICE_ID_AMD_8111_IDE 0x7469#define PCI_DEVICE_ID_AMD_8111_LPC 0x7468#define PCI_DEVICE_ID_AMD_8111_PCI 0x7460#define PCI_DEVICE_ID_AMD_OPUS_7445 0x7445#define PCI_DEVICE_ID_AMD_VIPER_7443 0x7443#define PCI_DEVICE_ID_AMD_OPUS_7443 0x7443#define PCI_DEVICE_ID_AMD_OPUS_7441 0x7441#define PCI_DEVICE_ID_AMD_VIPER_7440 0x7440#define PCI_DEVICE_ID_AMD_VIPER_7413 0x7413#define PCI_DEVICE_ID_AMD_VIPER_7411 0x7411#define PCI_DEVICE_ID_AMD_VIPER_7410 0x7410#define PCI_DEVICE_ID_AMD_VIPER_740B 0x740B#define PCI_DEVICE_ID_AMD_VIPER_7409 0x7409#define PCI_DEVICE_ID_AMD_COBRA_7401 0x7401#define PCI_DEVICE_ID_AMD_FE_GATE_700E 0x700E#define PCI_DEVICE_ID_AMD_FE_GATE_700C 0x700C#define PCI_DEVICE_ID_AMD_FE_GATE_7007 0x7007#define PCI_DEVICE_ID_AMD_FE_GATE_7006 0x7006#define PCI_DEVICE_ID_AMD_SERENADE 0x36c0#define PCI_DEVICE_ID_AMD_SCSI 0x2020#define PCI_DEVICE_ID_AMD_LANCE_HOME 0x2001#define PCI_DEVICE_ID_AMD_LANCE 0x2000#define PCI_DEVICE_ID_AMD_CNB17H_F3 0x1703#define PCI_DEVICE_ID_AMD_16H_M30H_NB_F4 0x1584#define PCI_DEVICE_ID_AMD_16H_M30H_NB_F3 0x1583#define PCI_DEVICE_ID_AMD_16H_NB_F4 0x1534#define PCI_DEVICE_ID_AMD_16H_NB_F3 0x1533#define PCI_DEVICE_ID_AMD_15H_NB_F5 0x1605#define PCI_DEVICE_ID_AMD_15H_NB_F4 0x1604#define PCI_DEVICE_ID_AMD_15H_NB_F3 0x1603#define PCI_DEVICE_ID_AMD_15H_NB_F2 0x1602#define PCI_DEVICE_ID_AMD_15H_NB_F1 0x1601#define PCI_DEVICE_ID_AMD_15H_NB_F0 0x1600#define PCI_DEVICE_ID_AMD_15H_M30H_NB_F4 0x141e#define PCI_DEVICE_ID_AMD_15H_M30H_NB_F3 0x141d#define PCI_DEVICE_ID_AMD_15H_M10H_F3 0x1403#define PCI_DEVICE_ID_AMD_11H_NB_LINK 0x1304#define PCI_DEVICE_ID_AMD_11H_NB_MISC 0x1303#define PCI_DEVICE_ID_AMD_11H_NB_DRAM 0x1302#define PCI_DEVICE_ID_AMD_11H_NB_MAP 0x1301#define PCI_DEVICE_ID_AMD_11H_NB_HT 0x1300#define PCI_DEVICE_ID_AMD_10H_NB_LINK 0x1204#define PCI_DEVICE_ID_AMD_10H_NB_MISC 0x1203#define PCI_DEVICE_ID_AMD_10H_NB_DRAM 0x1202#define PCI_DEVICE_ID_AMD_10H_NB_MAP 0x1201#define PCI_DEVICE_ID_AMD_10H_NB_HT 0x1200#define PCI_DEVICE_ID_AMD_K8_NB_MISC 0x1103#define PCI_DEVICE_ID_AMD_K8_NB_MEMCTL 0x1102#define PCI_DEVICE_ID_AMD_K8_NB_ADDRMAP 0x1101#define PCI_DEVICE_ID_AMD_K8_NB 0x1100#define PCI_VENDOR_ID_AMD 0x1022#define PCI_DEVICE_ID_AMI_MEGARAID2 0x9060#define PCI_DEVICE_ID_AMI_MEGARAID 0x9010#define PCI_DEVICE_ID_AMI_MEGARAID3 0x1960#define PCI_VENDOR_ID_AMI 0x101e#define PCI_DEVICE_ID_WD_90C 0xc24a#define PCI_VENDOR_ID_WD 0x101c#define PCI_DEVICE_ID_COMPEX2_100VG 0x0005#define PCI_VENDOR_ID_COMPEX2 0x101a#define PCI_DEVICE_ID_UNISYS_DMA_DIRECTOR 0x001C#define PCI_VENDOR_ID_UNISYS 0x1018#define PCI_SUBDEVICE_ID_IBM_SATURN_SERIAL_ONE_PORT 0x03d4#define PCI_SUBVENDOR_ID_IBM 0x1014#define PCI_DEVICE_ID_IBM_ICOM_FOUR_PORT_MODEL 0x252#define PCI_DEVICE_ID_IBM_ICOM_V2_ONE_PORT_RVX_ONE_PORT_MDM_PCIE 0x0361#define PCI_DEVICE_ID_IBM_ICOM_V2_ONE_PORT_RVX_ONE_PORT_MDM 0x0251#define PCI_DEVICE_ID_IBM_ICOM_V2_TWO_PORTS_RVX 0x021A#define PCI_DEVICE_ID_IBM_ICOM_DEV_ID_2 0x0219#define PCI_DEVICE_ID_IBM_ICOM_DEV_ID_1 0x0031#define PCI_DEVICE_ID_IBM_OBSIDIAN 0x02BD#define PCI_DEVICE_ID_IBM_GEMSTONE 0xB166#define PCI_DEVICE_ID_IBM_CITRINE 0x028C#define PCI_DEVICE_ID_IBM_SNIPE 0x0180#define PCI_DEVICE_ID_IBM_405GP 0x0156#define PCI_DEVICE_ID_IBM_CPC710_PCI64 0x00fc#define PCI_DEVICE_ID_IBM_TR_WAKE 0x003e#define PCI_DEVICE_ID_IBM_TR 0x0018#define PCI_VENDOR_ID_IBM 0x1014#define PCI_DEVICE_ID_CIRRUS_4615 0x6004#define PCI_DEVICE_ID_CIRRUS_4612 0x6003#define PCI_DEVICE_ID_CIRRUS_4610 0x6001#define PCI_DEVICE_ID_CIRRUS_7543 0x1202#define PCI_DEVICE_ID_CIRRUS_6832 0x1110#define PCI_DEVICE_ID_CIRRUS_6729 0x1100#define PCI_DEVICE_ID_CIRRUS_5465 0x00d6#define PCI_DEVICE_ID_CIRRUS_5464 0x00d4#define PCI_DEVICE_ID_CIRRUS_5462 0x00d0#define PCI_DEVICE_ID_CIRRUS_5480 0x00bc#define PCI_DEVICE_ID_CIRRUS_5446 0x00b8#define PCI_DEVICE_ID_CIRRUS_5436 0x00ac#define PCI_DEVICE_ID_CIRRUS_5434_8 0x00a8#define PCI_DEVICE_ID_CIRRUS_5434_4 0x00a4#define PCI_DEVICE_ID_CIRRUS_5430 0x00a0#define PCI_DEVICE_ID_CIRRUS_7548 0x0038#define PCI_VENDOR_ID_CIRRUS 0x1013#define PCI_DEVICE_ID_COMPAQ_42XX 0x0046#define PCI_DEVICE_ID_DEC_21285 0x1065#define PCI_DEVICE_ID_DEC_21154 0x0026#define PCI_DEVICE_ID_DEC_21153 0x0025#define PCI_DEVICE_ID_DEC_21152 0x0024#define PCI_DEVICE_ID_DEC_21150 0x0022#define PCI_DEVICE_ID_DEC_21052 0x0021#define PCI_DEVICE_ID_DEC_21142 0x0019#define PCI_DEVICE_ID_DEC_TULIP_PLUS 0x0014#define PCI_DEVICE_ID_DEC_FDDI 0x000F#define PCI_DEVICE_ID_DEC_TGA2 0x000D#define PCI_DEVICE_ID_DEC_TULIP_FAST 0x0009#define PCI_DEVICE_ID_DEC_TGA 0x0004#define PCI_DEVICE_ID_DEC_TULIP 0x0002#define PCI_DEVICE_ID_DEC_BRD 0x0001#define PCI_VENDOR_ID_DEC 0x1011#define PCI_DEVICE_ID_WEITEK_P9100 0x9100#define PCI_DEVICE_ID_WEITEK_P9000 0x9001#define PCI_VENDOR_ID_WEITEK 0x100e#define PCI_DEVICE_ID_TSENG_ET6000 0x3208#define PCI_DEVICE_ID_TSENG_W32P_d 0x3207#define PCI_DEVICE_ID_TSENG_W32P_c 0x3206#define PCI_DEVICE_ID_TSENG_W32P_b 0x3205#define PCI_DEVICE_ID_TSENG_W32P_2 0x3202#define PCI_VENDOR_ID_TSENG 0x100c#define PCI_DEVICE_ID_NS_GX_HOST_BRIDGE 0x0028#define PCI_DEVICE_ID_NS_87410 0xd001#define PCI_DEVICE_ID_NS_SC1100_XBUS 0x0515#define PCI_DEVICE_ID_NS_SC1100_SMI 0x0511#define PCI_DEVICE_ID_NS_SC1100_BRIDGE 0x0510#define PCI_DEVICE_ID_NS_SCx200_XBUS 0x0505#define PCI_DEVICE_ID_NS_SCx200_VIDEO 0x0504#define PCI_DEVICE_ID_NS_SCx200_AUDIO 0x0503#define PCI_DEVICE_ID_NS_SCx200_IDE 0x0502#define PCI_DEVICE_ID_NS_SCx200_SMI 0x0501#define PCI_DEVICE_ID_NS_SCx200_BRIDGE 0x0500#define PCI_DEVICE_ID_NS_SATURN 0x0035#define PCI_DEVICE_ID_NS_GX_VIDEO 0x0030#define PCI_DEVICE_ID_NS_CS5535_USB 0x002f#define PCI_DEVICE_ID_NS_CS5535_AUDIO 0x002e#define PCI_DEVICE_ID_NS_CS5535_IDE 0x002d#define PCI_DEVICE_ID_NS_CS5535_ISA 0x002b#define PCI_DEVICE_ID_NS_83820 0x0022#define PCI_DEVICE_ID_NS_83815 0x0020#define PCI_DEVICE_ID_NS_87560_USB 0x0012#define PCI_DEVICE_ID_NS_87560_LIO 0x000e#define PCI_DEVICE_ID_NS_87415 0x0002#define PCI_VENDOR_ID_NS 0x100b#define PCI_DEVICE_ID_ADL_2301 0x2301#define PCI_VENDOR_ID_ADL 0x1005#define PCI_DEVICE_ID_RD890_IOMMU 0x5a23#define PCI_DEVICE_ID_VLSI_VAS96011 0x0702#define PCI_DEVICE_ID_VLSI_82C147 0x0105#define PCI_DEVICE_ID_VLSI_82C535 0x0104#define PCI_DEVICE_ID_VLSI_82C534 0x0102#define PCI_DEVICE_ID_VLSI_82C532 0x0101#define PCI_DEVICE_ID_VLSI_82C543 0x000d#define PCI_DEVICE_ID_VLSI_82C541 0x000c#define PCI_DEVICE_ID_VLSI_82C597 0x0009#define PCI_DEVICE_ID_VLSI_82C594 0x0007#define PCI_DEVICE_ID_VLSI_82C593 0x0006#define PCI_DEVICE_ID_VLSI_82C592 0x0005#define PCI_VENDOR_ID_VLSI 0x1004#define PCI_DEVICE_ID_ATI_IXP700_IDE 0x439c#define PCI_DEVICE_ID_ATI_SBX00_OHCI 0x4397#define PCI_DEVICE_ID_ATI_SBX00_EHCI 0x4396#define PCI_DEVICE_ID_ATI_SBX00_SATA_AHCI 0x4391#define PCI_DEVICE_ID_ATI_IXP700_SATA 0x4390#define PCI_DEVICE_ID_ATI_IXP600_IDE 0x438c#define PCI_DEVICE_ID_ATI_SBX00_SMBUS 0x4385#define PCI_DEVICE_ID_ATI_SBX00_PCI_BRIDGE 0x4384#define PCI_DEVICE_ID_ATI_IXP600_SATA 0x4380#define PCI_DEVICE_ID_ATI_IXP400_SATA2 0x437a#define PCI_DEVICE_ID_ATI_IXP400_SATA 0x4379#define PCI_DEVICE_ID_ATI_IXP400_IDE 0x4376#define PCI_DEVICE_ID_ATI_IXP400_SMBUS 0x4372#define PCI_DEVICE_ID_ATI_IXP300_SATA 0x436e#define PCI_DEVICE_ID_ATI_IXP300_IDE 0x4369#define PCI_DEVICE_ID_ATI_IXP300_SMBUS 0x4363#define PCI_DEVICE_ID_ATI_IXP200_SMBUS 0x4353#define PCI_DEVICE_ID_ATI_IXP200_IDE 0x4349#define PCI_DEVICE_ID_ATI_WRESTLER 0x9806#define PCI_DEVICE_ID_ATI_EVERGREEN2 0x9804#define PCI_DEVICE_ID_ATI_EVERGREEN 0x9802#define PCI_DEVICE_ID_ATI_RS480 0x5950#define PCI_DEVICE_ID_ATI_RS400_200 0x5a33#define PCI_DEVICE_ID_ATI_RS400_166 0x5a32#define PCI_DEVICE_ID_ATI_RS400_133 0x5a31#define PCI_DEVICE_ID_ATI_RS400_100 0x5a30#define PCI_DEVICE_ID_ATI_RS350_200 0x7833#define PCI_DEVICE_ID_ATI_RS350_166 0x7832#define PCI_DEVICE_ID_ATI_RS350_133 0x7831#define PCI_DEVICE_ID_ATI_RS350_100 0x7830#define PCI_DEVICE_ID_ATI_RS300_200 0x5833#define PCI_DEVICE_ID_ATI_RS300_166 0x5832#define PCI_DEVICE_ID_ATI_RS300_133 0x5831#define PCI_DEVICE_ID_ATI_RS300_100 0x5830#define PCI_DEVICE_ID_ATI_RS250 0xcab3#define PCI_DEVICE_ID_ATI_RS200_B 0xcbb2#define PCI_DEVICE_ID_ATI_RS200 0xcab2#define PCI_DEVICE_ID_ATI_RS100 0xcab0#define PCI_DEVICE_ID_ATI_RADEON_Lg 0x4c67#define PCI_DEVICE_ID_ATI_RADEON_Lf 0x4c66#define PCI_DEVICE_ID_ATI_RADEON_Le 0x4c65#define PCI_DEVICE_ID_ATI_RADEON_Ld 0x4c64#define PCI_DEVICE_ID_ATI_RADEON_LX 0x4c58#define PCI_DEVICE_ID_ATI_RADEON_LW 0x4c57#define PCI_DEVICE_ID_ATI_RADEON_LZ 0x4c5a#define PCI_DEVICE_ID_ATI_RADEON_LY 0x4c59#define PCI_DEVICE_ID_ATI_RADEON_NG 0x4e47#define PCI_DEVICE_ID_ATI_RADEON_NF 0x4e46#define PCI_DEVICE_ID_ATI_RADEON_NE 0x4e45#define PCI_DEVICE_ID_ATI_RADEON_ND 0x4e44#define PCI_DEVICE_ID_ATI_RADEON_Yd 0x5964#define PCI_DEVICE_ID_ATI_RADEON_Ya 0x5961#define PCI_DEVICE_ID_ATI_RADEON_Ig 0x4967#define PCI_DEVICE_ID_ATI_RADEON_If 0x4966#define PCI_DEVICE_ID_ATI_RADEON_Ie 0x4965#define PCI_DEVICE_ID_ATI_RADEON_Id 0x4964#define PCI_DEVICE_ID_ATI_RADEON_QX 0x5158#define PCI_DEVICE_ID_ATI_RADEON_QW 0x5157#define PCI_DEVICE_ID_ATI_RADEON_QM 0x514d#define PCI_DEVICE_ID_ATI_RADEON_BB 0x4242#define PCI_DEVICE_ID_ATI_RADEON_Ql 0x516c#define PCI_DEVICE_ID_ATI_RADEON_QO 0x514f#define PCI_DEVICE_ID_ATI_RADEON_QN 0x514e#define PCI_DEVICE_ID_ATI_RADEON_QL 0x514c#define PCI_DEVICE_ID_ATI_RADEON_QZ 0x515a#define PCI_DEVICE_ID_ATI_RADEON_QY 0x5159#define PCI_DEVICE_ID_ATI_RADEON_QG 0x5147#define PCI_DEVICE_ID_ATI_RADEON_QF 0x5146#define PCI_DEVICE_ID_ATI_RADEON_QE 0x5145#define PCI_DEVICE_ID_ATI_RADEON_QD 0x5144#define PCI_DEVICE_ID_ATI_RAGE128_PX 0x5058#define PCI_DEVICE_ID_ATI_RAGE128_PW 0x5057#define PCI_DEVICE_ID_ATI_RAGE128_PV 0x5056#define PCI_DEVICE_ID_ATI_RAGE128_PU 0x5055#define PCI_DEVICE_ID_ATI_RAGE128_PT 0x5054#define PCI_DEVICE_ID_ATI_RAGE128_PS 0x5053#define PCI_DEVICE_ID_ATI_RAGE128_PR 0x5052#define PCI_DEVICE_ID_ATI_RAGE128_PQ 0x5051#define PCI_DEVICE_ID_ATI_RAGE128_PP 0x5050#define PCI_DEVICE_ID_ATI_RAGE128_PO 0x504F#define PCI_DEVICE_ID_ATI_RAGE128_PN 0x504E#define PCI_DEVICE_ID_ATI_RAGE128_PM 0x504D#define PCI_DEVICE_ID_ATI_RAGE128_PL 0x504C#define PCI_DEVICE_ID_ATI_RAGE128_PK 0x504B#define PCI_DEVICE_ID_ATI_RAGE128_PJ 0x504A#define PCI_DEVICE_ID_ATI_RAGE128_PI 0x5049#define PCI_DEVICE_ID_ATI_RAGE128_PH 0x5048#define PCI_DEVICE_ID_ATI_RAGE128_PG 0x5047#define PCI_DEVICE_ID_ATI_RAGE128_PF 0x5046#define PCI_DEVICE_ID_ATI_RAGE128_PE 0x5045#define PCI_DEVICE_ID_ATI_RAGE128_PD 0x5044#define PCI_DEVICE_ID_ATI_RAGE128_PC 0x5043#define PCI_DEVICE_ID_ATI_RAGE128_PB 0x5042#define PCI_DEVICE_ID_ATI_RAGE128_PA 0x5041#define PCI_DEVICE_ID_ATI_RAGE128_ML 0x4d4c#define PCI_DEVICE_ID_ATI_RAGE128_MF 0x4d46#define PCI_DEVICE_ID_ATI_RAGE128_LF 0x4c46#define PCI_DEVICE_ID_ATI_RAGE128_LE 0x4c45#define PCI_DEVICE_ID_ATI_RAGE128_TU 0x5455#define PCI_DEVICE_ID_ATI_RAGE128_TT 0x5454#define PCI_DEVICE_ID_ATI_RAGE128_TS 0x5453#define PCI_DEVICE_ID_ATI_RAGE128_TR 0x5452#define PCI_DEVICE_ID_ATI_RAGE128_TL 0x544c#define PCI_DEVICE_ID_ATI_RAGE128_TF 0x5446#define PCI_DEVICE_ID_ATI_RAGE128_SN 0x534e#define PCI_DEVICE_ID_ATI_RAGE128_SM 0x534d#define PCI_DEVICE_ID_ATI_RAGE128_SL 0x534c#define PCI_DEVICE_ID_ATI_RAGE128_SK 0x534b#define PCI_DEVICE_ID_ATI_RAGE128_SH 0x5348#define PCI_DEVICE_ID_ATI_RAGE128_SG 0x5347#define PCI_DEVICE_ID_ATI_RAGE128_SF 0x5346#define PCI_DEVICE_ID_ATI_RAGE128_SE 0x5345#define PCI_DEVICE_ID_ATI_RAGE128_RL 0x524c#define PCI_DEVICE_ID_ATI_RAGE128_RK 0x524b#define PCI_DEVICE_ID_ATI_RAGE128_RG 0x5247#define PCI_DEVICE_ID_ATI_RAGE128_RF 0x5246#define PCI_DEVICE_ID_ATI_RAGE128_RE 0x5245#define PCI_DEVICE_ID_ATI_264VV 0x5656#define PCI_DEVICE_ID_ATI_264VU 0x5655#define PCI_DEVICE_ID_ATI_264VT 0x5654#define PCI_DEVICE_ID_ATI_264_LT 0x4c54#define PCI_DEVICE_ID_ATI_215_LS 0x4c53#define PCI_DEVICE_ID_ATI_215_LR 0x4c52#define PCI_DEVICE_ID_ATI_215_LN 0x4c4E#define PCI_DEVICE_ID_ATI_215_LM 0x4c4D#define PCI_DEVICE_ID_ATI_215_LI 0x4c49#define PCI_DEVICE_ID_ATI_215_LG 0x4c47#define PCI_DEVICE_ID_ATI_215_LD 0x4c44#define PCI_DEVICE_ID_ATI_215_LB 0x4c42#define PCI_DEVICE_ID_ATI_210888GX 0x4758#define PCI_DEVICE_ID_ATI_215_IZ 0x475A#define PCI_DEVICE_ID_ATI_215_IW 0x4757#define PCI_DEVICE_ID_ATI_215_IV 0x4756#define PCI_DEVICE_ID_ATI_215GTB 0x4755#define PCI_DEVICE_ID_ATI_215GT 0x4754#define PCI_DEVICE_ID_ATI_215XL 0x4752#define PCI_DEVICE_ID_ATI_215GQ 0x4751#define PCI_DEVICE_ID_ATI_215GP 0x4750#define PCI_DEVICE_ID_ATI_215GI 0x4749#define PCI_DEVICE_ID_ATI_215GD 0x4744#define PCI_DEVICE_ID_ATI_215GB 0x4742#define PCI_DEVICE_ID_ATI_215ET222 0x4554#define PCI_DEVICE_ID_ATI_210888CX 0x4358#define PCI_DEVICE_ID_ATI_215CT222 0x4354#define PCI_DEVICE_ID_ATI_68800 0x4158#define PCI_VENDOR_ID_ATI 0x1002#define PCI_DEVICE_ID_LSI_SAS1078 0x0060#define PCI_DEVICE_ID_LSI_SAS1068E 0x0058#define PCI_DEVICE_ID_LSI_SAS1066E 0x005A#define PCI_DEVICE_ID_LSI_SAS1064E 0x0056#define PCI_DEVICE_ID_LSI_SAS1064A 0x005C#define PCI_DEVICE_ID_LSI_SAS1068 0x0054#define PCI_DEVICE_ID_LSI_SAS1066 0x005E#define PCI_DEVICE_ID_LSI_SAS1064R 0x0411#define PCI_DEVICE_ID_LSI_SAS1064 0x0050#define PCI_DEVICE_ID_LSI_63C815 0x1000#define PCI_DEVICE_ID_LSI_61C102 0x0901#define PCI_DEVICE_ID_NCR_YELLOWFIN 0x0701#define PCI_DEVICE_ID_LSI_FC919X 0x0628#define PCI_DEVICE_ID_LSI_FC949ES 0x0646#define PCI_DEVICE_ID_LSI_FC949X 0x0640#define PCI_DEVICE_ID_LSI_FC939X 0x0642#define PCI_DEVICE_ID_LSI_FC929X 0x0626#define PCI_DEVICE_ID_LSI_FC919_LAN 0x0625#define PCI_DEVICE_ID_LSI_FC919 0x0624#define PCI_DEVICE_ID_LSI_FC929_LAN 0x0623#define PCI_DEVICE_ID_LSI_FC929 0x0622#define PCI_DEVICE_ID_LSI_FC909 0x0621#define PCI_DEVICE_ID_NCR_53C875J 0x008f#define PCI_DEVICE_ID_LSI_53C1035 0x0040#define PCI_DEVICE_ID_LSI_1030_53C1035 0x0032#define PCI_DEVICE_ID_LSI_53C1030 0x0030#define PCI_DEVICE_ID_LSI_53C1010_66 0x0021#define PCI_DEVICE_ID_LSI_53C1010_33 0x0020#define PCI_DEVICE_ID_LSI_53C875A 0x0013#define PCI_DEVICE_ID_LSI_53C895A 0x0012#define PCI_DEVICE_ID_NCR_53C1510 0x0010#define PCI_DEVICE_ID_NCR_53C875 0x000f#define PCI_DEVICE_ID_NCR_53C885 0x000d#define PCI_DEVICE_ID_NCR_53C895 0x000c#define PCI_DEVICE_ID_NCR_53C896 0x000b#define PCI_DEVICE_ID_LSI_53C1510 0x000a#define PCI_DEVICE_ID_NCR_53C860 0x0006#define PCI_DEVICE_ID_LSI_53C810AP 0x0005#define PCI_DEVICE_ID_NCR_53C815 0x0004#define PCI_DEVICE_ID_NCR_53C825 0x0003#define PCI_DEVICE_ID_NCR_53C820 0x0002#define PCI_DEVICE_ID_NCR_53C810 0x0001#define PCI_VENDOR_ID_LSI_LOGIC 0x1000#define PCI_VENDOR_ID_NCR 0x1000#define PCI_DEVICE_ID_COMPAQ_NETFLEX3B 0xf150#define PCI_DEVICE_ID_COMPAQ_THUNDER 0xf130#define PCI_DEVICE_ID_COMPAQ_CISSC 0x46#define PCI_DEVICE_ID_COMPAQ_CISSB 0xb178#define PCI_DEVICE_ID_COMPAQ_CISS 0xb060#define PCI_DEVICE_ID_COMPAQ_NETEL100I 0xb011#define PCI_DEVICE_ID_COMPAQ_NETEL100PI 0xae43#define PCI_DEVICE_ID_COMPAQ_NETEL100D 0xae40#define PCI_DEVICE_ID_COMPAQ_NETFLEX3I 0xae35#define PCI_DEVICE_ID_COMPAQ_TRIFLEX_IDE 0xae33#define PCI_DEVICE_ID_COMPAQ_NETEL10 0xae34#define PCI_DEVICE_ID_COMPAQ_NETEL100 0xae32#define PCI_DEVICE_ID_COMPAQ_SMART2P 0xae10#define PCI_DEVICE_ID_COMPAQ_TACHYON 0xa0fc#define PCI_DEVICE_ID_COMPAQ_TOKENRING 0x0508#define PCI_VENDOR_ID_COMPAQ 0x0e11#define PCI_DEVICE_ID_BERKOM_SCITEL_QUADRO 0xffa8#define PCI_DEVICE_ID_BERKOM_A4T 0xffa4#define PCI_DEVICE_ID_BERKOM_T_CONCEPT 0xffa2#define PCI_DEVICE_ID_BERKOM_A1T 0xffa1#define PCI_VENDOR_ID_BERKOM 0x0871#define PCI_DEVICE_ID_DYNALINK_IS64PH 0x1702#define PCI_VENDOR_ID_DYNALINK 0x0675#define PCI_DEVICE_ID_TTTECH_MC322 0x000a#define PCI_VENDOR_ID_TTTECH 0x0357#define PCI_CLASS_SP_OTHER 0x1180#define PCI_CLASS_SP_DPIO 0x1100#define PCI_CLASS_CRYPT_OTHER 0x1080#define PCI_CLASS_CRYPT_ENTERTAINMENT 0x1001#define PCI_CLASS_CRYPT_NETWORK 0x1000#define PCI_CLASS_SATELLITE_DATA 0x0f04#define PCI_CLASS_SATELLITE_VOICE 0x0f03#define PCI_CLASS_SATELLITE_AUDIO 0x0f01#define PCI_CLASS_SATELLITE_TV 0x0f00#define PCI_CLASS_INTELLIGENT_I2O 0x0e00#define PCI_CLASS_WIRELESS_WHCI 0x0d1010#define PCI_CLASS_WIRELESS_RF_CONTROLLER 0x0d10#define PCI_BASE_CLASS_WIRELESS 0x0d#define PCI_CLASS_SERIAL_SMBUS 0x0c05#define PCI_CLASS_SERIAL_FIBER 0x0c04#define PCI_CLASS_SERIAL_USB_XHCI 0x0c0330#define PCI_CLASS_SERIAL_USB_EHCI 0x0c0320#define PCI_CLASS_SERIAL_USB_OHCI 0x0c0310#define PCI_CLASS_SERIAL_USB_UHCI 0x0c0300#define PCI_CLASS_SERIAL_USB 0x0c03#define PCI_CLASS_SERIAL_SSA 0x0c02#define PCI_CLASS_SERIAL_ACCESS 0x0c01#define PCI_CLASS_SERIAL_FIREWIRE_OHCI 0x0c0010#define PCI_CLASS_SERIAL_FIREWIRE 0x0c00#define PCI_CLASS_PROCESSOR_CO 0x0b40#define PCI_CLASS_PROCESSOR_MIPS 0x0b30#define PCI_CLASS_PROCESSOR_ALPHA 0x0b10#define PCI_CLASS_PROCESSOR_PENTIUM 0x0b02#define PCI_CLASS_PROCESSOR_486 0x0b01#define PCI_CLASS_PROCESSOR_386 0x0b00#define PCI_CLASS_DOCKING_OTHER 0x0a80#define PCI_CLASS_DOCKING_GENERIC 0x0a00#define PCI_CLASS_INPUT_OTHER 0x0980#define PCI_CLASS_INPUT_GAMEPORT 0x0904#define PCI_CLASS_INPUT_SCANNER 0x0903#define PCI_CLASS_INPUT_MOUSE 0x0902#define PCI_CLASS_INPUT_PEN 0x0901#define PCI_CLASS_INPUT_KEYBOARD 0x0900#define PCI_CLASS_SYSTEM_OTHER 0x0880#define PCI_CLASS_SYSTEM_SDHCI 0x0805#define PCI_CLASS_SYSTEM_PCI_HOTPLUG 0x0804#define PCI_CLASS_SYSTEM_RTC 0x0803#define PCI_CLASS_SYSTEM_TIMER 0x0802#define PCI_CLASS_SYSTEM_DMA 0x0801#define PCI_CLASS_SYSTEM_PIC_IOXAPIC 0x080020#define PCI_CLASS_SYSTEM_PIC_IOAPIC 0x080010#define PCI_CLASS_SYSTEM_PIC 0x0800#define PCI_CLASS_COMMUNICATION_OTHER 0x0780#define PCI_CLASS_COMMUNICATION_MODEM 0x0703#define PCI_CLASS_COMMUNICATION_MULTISERIAL 0x0702#define PCI_CLASS_COMMUNICATION_PARALLEL 0x0701#define PCI_CLASS_COMMUNICATION_SERIAL 0x0700#define PCI_CLASS_BRIDGE_OTHER 0x0680#define PCI_CLASS_BRIDGE_RACEWAY 0x0608#define PCI_CLASS_BRIDGE_NUBUS 0x0606#define PCI_CLASS_BRIDGE_PCMCIA 0x0605#define PCI_CLASS_BRIDGE_MC 0x0603#define PCI_CLASS_BRIDGE_EISA 0x0602#define PCI_CLASS_BRIDGE_ISA 0x0601#define PCI_CLASS_BRIDGE_HOST 0x0600#define PCI_CLASS_MEMORY_OTHER 0x0580#define PCI_CLASS_MEMORY_FLASH 0x0501#define PCI_CLASS_MEMORY_RAM 0x0500#define PCI_CLASS_MULTIMEDIA_OTHER 0x0480#define PCI_CLASS_MULTIMEDIA_HD_AUDIO 0x0403#define PCI_CLASS_MULTIMEDIA_PHONE 0x0402#define PCI_CLASS_MULTIMEDIA_AUDIO 0x0401#define PCI_CLASS_MULTIMEDIA_VIDEO 0x0400#define PCI_CLASS_DISPLAY_OTHER 0x0380#define PCI_CLASS_DISPLAY_3D 0x0302#define PCI_CLASS_DISPLAY_XGA 0x0301#define PCI_CLASS_NETWORK_OTHER 0x0280#define PCI_CLASS_NETWORK_ATM 0x0203#define PCI_CLASS_NETWORK_FDDI 0x0202#define PCI_CLASS_NETWORK_TOKEN_RING 0x0201#define PCI_CLASS_NETWORK_ETHERNET 0x0200#define PCI_CLASS_STORAGE_OTHER 0x0180#define PCI_CLASS_STORAGE_SAS 0x0107#define PCI_CLASS_STORAGE_SATA_AHCI 0x010601#define PCI_CLASS_STORAGE_SATA 0x0106#define PCI_CLASS_STORAGE_RAID 0x0104#define PCI_CLASS_STORAGE_IPI 0x0103#define PCI_CLASS_STORAGE_FLOPPY 0x0102#define PCI_CLASS_STORAGE_SCSI 0x0100#define PCI_CLASS_NOT_DEFINED_VGA 0x0001#define __FDT_SUPPORT_H#define SHA1_SUM_POS -0x20#define _SHA1_H#define _SHA256_H#define _RSA_CHECKSUM_H#define _DM_UCLASS_ID_H#define __ASM_GBL_DATA_H#define __INIT_H_ 1#define __DISPLAY_OPTIONS_H#define _UBOOT_CRC_H#define __SANDBOX_CACHE_H__#define VLAN_N_VID 4096#define VLAN_VID_MASK 0x0fff#define VLAN_TAG_PRESENT VLAN_CFI_MASK#define VLAN_CFI_MASK 0x1000#define VLAN_PRIO_SHIFT 13#define VLAN_PRIO_MASK 0xe000#define VLAN_ETH_FRAME_LEN 1518#define VLAN_ETH_DATA_LEN 1500#define VLAN_ETH_ZLEN 64#define VLAN_ETH_HLEN 18#define VLAN_HLEN 4#define _UAPI_LINUX_IF_ETHER_H#define BOOTSTAGE_MARKER() bootstage_mark_code(__FILE__, __func__, __LINE__)#define ENABLE_BOOTSTAGE#define _BOOTSTAGE_H#define COMMENT(x) asm volatile("\n.ascii \"->#" x "\"")#define OFFSET(sym,str,mem) DEFINE(sym, offsetof(struct str, mem))#define BLANK() asm volatile("\n.ascii \"->\"" : : )#define DEFINE(sym,val) asm volatile("\n.ascii \"->" #sym " %0 " #val "\"" : : "i" (val))#define __LINUX_KBUILD_H#define bitrev8(x) ({ u8 __x = x; __builtin_constant_p(__x) ? __constant_bitrev8(__x) : __bitrev8(__x) ; })#define bitrev8x4(x) ({ u32 __x = x; __builtin_constant_p(__x) ? __constant_bitrev8x4(__x) : __bitrev8x4(__x); })#define bitrev16(x) ({ u16 __x = x; __builtin_constant_p(__x) ? __constant_bitrev16(__x) : __bitrev16(__x); })#define bitrev32(x) ({ u32 __x = x; __builtin_constant_p(__x) ? __constant_bitrev32(__x) : __bitrev32(__x); })#define __constant_bitrev8(x) ({ u8 __x = x; __x = (__x >> 4) | (__x << 4); __x = ((__x & (u8)0xCCU) >> 2) | ((__x & (u8)0x33U) << 2); __x = ((__x & (u8)0xAAU) >> 1) | ((__x & (u8)0x55U) << 1); __x; })#define __constant_bitrev8x4(x) ({ u32 __x = x; __x = ((__x & (u32)0xF0F0F0F0UL) >> 4) | ((__x & (u32)0x0F0F0F0FUL) << 4); __x = ((__x & (u32)0xCCCCCCCCUL) >> 2) | ((__x & (u32)0x33333333UL) << 2); __x = ((__x & (u32)0xAAAAAAAAUL) >> 1) | ((__x & (u32)0x55555555UL) << 1); __x; })#define __constant_bitrev16(x) ({ u16 __x = x; __x = (__x >> 8) | (__x << 8); __x = ((__x & (u16)0xF0F0U) >> 4) | ((__x & (u16)0x0F0FU) << 4); __x = ((__x & (u16)0xCCCCU) >> 2) | ((__x & (u16)0x3333U) << 2); __x = ((__x & (u16)0xAAAAU) >> 1) | ((__x & (u16)0x5555U) << 1); __x; })#define __constant_bitrev32(x) ({ u32 __x = x; __x = (__x >> 16) | (__x << 16); __x = ((__x & (u32)0xFF00FF00UL) >> 8) | ((__x & (u32)0x00FF00FFUL) << 8); __x = ((__x & (u32)0xF0F0F0F0UL) >> 4) | ((__x & (u32)0x0F0F0F0FUL) << 4); __x = ((__x & (u32)0xCCCCCCCCUL) >> 2) | ((__x & (u32)0x33333333UL) << 2); __x = ((__x & (u32)0xAAAAAAAAUL) >> 1) | ((__x & (u32)0x55555555UL) << 1); __x; })#define __bitrev8x4(x) (__bitrev32(swab32(x)))#define _LINUX_BITREV_H#define BZ_N_GROUPS 6#define BZ_MAX_ALPHA_SIZE 258#define BZ_MAX_SELECTORS (2 + (900000 / BZ_G_SIZE))#define BZ_G_SIZE 50#define MTFL_SIZE 16#define MTFA_SIZE 4096#define BZ_RAND_DECLS Int32 rNToGo; Int32 rTPos#define BZ_GET_SMALL(cccc) cccc = BZ2_indexIntoF ( s->tPos, s->cftab ); s->tPos = GET_LL(s->tPos);#define GET_LL(i) (((UInt32)s->ll16[i]) | (GET_LL4(i) << 16))#define SET_LL(i,n) { s->ll16[i] = (UInt16)(n & 0x0000ffff); SET_LL4(i, n >> 16); }#define GET_LL4(i) ((((UInt32)(s->ll4[(i) >> 1])) >> (((i) << 2) & 0x4)) & 0xF)#define SET_LL4(i,n) { if (((i) & 0x1) == 0) s->ll4[(i) >> 1] = (s->ll4[(i) >> 1] & 0xf0) | (n); else s->ll4[(i) >> 1] = (s->ll4[(i) >> 1] & 0x0f) | ((n) << 4); }#define BZ_GET_FAST_C(cccc) c_tPos = c_tt[c_tPos]; cccc = (UChar)(c_tPos & 0xff); c_tPos >>= 8;#define BZ_GET_FAST(cccc) s->tPos = s->tt[s->tPos]; cccc = (UChar)(s->tPos & 0xff); s->tPos >>= 8;#define BZ_X_CCRC_4 50#define BZ_X_CCRC_3 49#define BZ_X_CCRC_2 48#define BZ_X_CCRC_1 47#define BZ_X_ENDHDR_6 46#define BZ_X_ENDHDR_5 45#define BZ_X_ENDHDR_4 44#define BZ_X_ENDHDR_3 43#define BZ_X_ENDHDR_2 42#define BZ_X_MTF_6 41#define BZ_X_MTF_5 40#define BZ_X_MTF_4 39#define BZ_X_MTF_3 38#define BZ_X_MTF_2 37#define BZ_X_MTF_1 36#define BZ_X_CODING_3 35#define BZ_X_CODING_2 34#define BZ_X_CODING_1 33#define BZ_X_SELECTOR_3 32#define BZ_X_SELECTOR_2 31#define BZ_X_SELECTOR_1 30#define BZ_X_MAPPING_2 29#define BZ_X_MAPPING_1 28#define BZ_X_ORIGPTR_3 27#define BZ_X_ORIGPTR_2 26#define BZ_X_ORIGPTR_1 25#define BZ_X_RANDBIT 24#define BZ_X_BCRC_4 23#define BZ_X_BCRC_3 22#define BZ_X_BCRC_2 21#define BZ_X_BCRC_1 20#define BZ_X_BLKHDR_6 19#define BZ_X_BLKHDR_5 18#define BZ_X_BLKHDR_4 17#define BZ_X_BLKHDR_3 16#define BZ_X_BLKHDR_2 15#define BZ_X_BLKHDR_1 14#define BZ_X_MAGIC_4 13#define BZ_X_MAGIC_3 12#define BZ_X_MAGIC_2 11#define BZ_X_MAGIC_1 10#define BZ_X_OUTPUT 2#define BZ_X_IDLE 1#define BZ_N_OVERSHOOT (BZ_N_RADIX + BZ_N_QSORT + BZ_N_SHELL + 2)#define BZ_N_SHELL 18#define BZ_N_QSORT 12#define BZ_N_RADIX 2#define BZ_S_INPUT 2#define BZ_S_OUTPUT 1#define BZ_M_FINISHING 4#define BZ_M_FLUSHING 3#define BZ_M_RUNNING 2#define BZ_M_IDLE 1#define BZ_UPDATE_CRC(crcVar,cha) { crcVar = (crcVar << 8) ^ BZ2_crc32Table[(crcVar >> 24) ^ ((UChar)cha)]; }#define BZ_FINALISE_CRC(crcVar) { crcVar = ~(crcVar); }#define BZ_INITIALISE_CRC(crcVar) { crcVar = 0xffffffffL; }#define BZ_RAND_UPD_MASK if (s->rNToGo == 0) { s->rNToGo = BZ2_rNums[s->rTPos]; s->rTPos++; if (s->rTPos == 512) s->rTPos = 0; } s->rNToGo--;#define BZ_RAND_MASK ((s->rNToGo == 1) ? 1 : 0)#define BZ_RAND_INIT_MASK s->rNToGo = 0; s->rTPos = 0#define BZ_N_ITERS 4#define BZ_RUNB 1#define BZ_RUNA 0#define BZ_MAX_CODE_LEN 23#define BZ_HDR_0 0x30#define BZ_HDR_h 0x68#define BZ_HDR_Z 0x5a#define BZ_HDR_B 0x42#define BZFREE(ppp) (strm->bzfree)(strm->opaque,(ppp))#define BZALLOC(nnn) (strm->bzalloc)(strm->opaque,(nnn),1)#define VPrintf5(zf,za1,za2,za3,za4,za5)#define VPrintf4(zf,za1,za2,za3,za4)#define VPrintf3(zf,za1,za2,za3)#define VPrintf2(zf,za1,za2)#define VPrintf1(zf,za1)#define VPrintf0(zf)#define AssertD(cond,msg)#define AssertH(cond,errcode) { if (!(cond)) bz_internal_error ( errcode ); }#define False ((Bool)0)#define True ((Bool)1)#define BZ_VERSION "1.0.2, 30-Dec-2001"#define _BZLIB_PRIVATE_H#define ADD_CHAR_TO_BLOCK(zs,zchh0) { UInt32 zchh = (UInt32)(zchh0); if (zchh != zs->state_in_ch && zs->state_in_len == 1) { UChar ch = (UChar)(zs->state_in_ch); BZ_UPDATE_CRC( zs->blockCRC, ch ); zs->inUse[zs->state_in_ch] = True; zs->block[zs->nblock] = (UChar)ch; zs->nblock++; zs->state_in_ch = zchh; } else if (zchh != zs->state_in_ch || zs->state_in_len == 255) { if (zs->state_in_ch < 256) add_pair_to_block ( zs ); zs->state_in_ch = zchh; zs->state_in_len = 1; } else { zs->state_in_len++; } }#define BIGFREQ(b) (ftab[((b)+1) << 8] - ftab[(b) << 8])#define SETMASK (1 << 21)#define CLEARMASK (~(SETMASK))#define MAIN_QSORT_STACK_SIZE 100#define mpush(lz,hz,dz) { stackLo[sp] = lz; stackHi[sp] = hz; stackD [sp] = dz; sp++; }#define mpop(lz,hz,dz) { sp--; lz = stackLo[sp]; hz = stackHi[sp]; dz = stackD [sp]; }#define MAIN_QSORT_SMALL_THRESH 20#define MAIN_QSORT_DEPTH_THRESH (BZ_N_RADIX + BZ_N_QSORT)#define mswap(zz1,zz2) { Int32 zztmp = zz1; zz1 = zz2; zz2 = zztmp; }#define mmin(a,b) ((a) < (b)) ? (a) : (b)#define mvswap(zzp1,zzp2,zzn) { Int32 yyp1 = (zzp1); Int32 yyp2 = (zzp2); Int32 yyn = (zzn); while (yyn > 0) { mswap(ptr[yyp1], ptr[yyp2]); yyp1++; yyp2++; yyn--; } }#define mnextsize(az) (nextHi[az]-nextLo[az])#define mnextswap(az,bz) { Int32 tz; tz = nextLo[az]; nextLo[az] = nextLo[bz]; nextLo[bz] = tz; tz = nextHi[az]; nextHi[az] = nextHi[bz]; nextHi[bz] = tz; tz = nextD [az]; nextD [az] = nextD [bz]; nextD [bz] = tz; }#define SET_BH(zz) bhtab[(zz) >> 5] |= (1 << ((zz) & 31))#define CLEAR_BH(zz) bhtab[(zz) >> 5] &= ~(1 << ((zz) & 31))#define ISSET_BH(zz) (bhtab[(zz) >> 5] & (1 << ((zz) & 31)))#define UNALIGNED_BH(zz) ((zz) & 0x01f)#define WORD_BH(zz) bhtab[(zz) >> 5]#define FALLBACK_QSORT_STACK_SIZE 100#define fpush(lz,hz) { stackLo[sp] = lz; stackHi[sp] = hz; sp++; }#define fpop(lz,hz) { sp--; lz = stackLo[sp]; hz = stackHi[sp]; }#define FALLBACK_QSORT_SMALL_THRESH 10#define fswap(zz1,zz2) { Int32 zztmp = zz1; zz1 = zz2; zz2 = zztmp; }#define fmin(a,b) ((a) < (b)) ? (a) : (b)#define fvswap(zzp1,zzp2,zzn) { Int32 yyp1 = (zzp1); Int32 yyp2 = (zzp2); Int32 yyn = (zzn); while (yyn > 0) { fswap(fmap[yyp1], fmap[yyp2]); yyp1++; yyp2++; yyn--; } }#define BZ_GREATER_ICOST 15#define BZ_LESSER_ICOST 0#define BZ_ITER(nn) icv = mtfv[gs+(nn)]; cost01 += s->len_pack[icv][0]; cost23 += s->len_pack[icv][1]; cost45 += s->len_pack[icv][2];#define BZ_ITUR(nn) s->rfreq[bt][ mtfv[gs+(nn)] ]++#define BZ_ITAH(nn) mtfv_i = mtfv[gs+(nn)]; bsW ( s, s_len_sel_selCtr[mtfv_i], s_code_sel_selCtr[mtfv_i] )#define bsNEEDW(nz) { while (s->bsLive >= 8) { s->zbits[s->numZ] = (UChar)(s->bsBuff >> 24); s->numZ++; s->bsBuff <<= 8; s->bsLive -= 8; } }#define GET_UCHAR(lll,uuu) GET_BITS(lll,uuu,8)#define GET_BITS(lll,vvv,nnn) case lll: s->state = lll; while (True) { if (s->bsLive >= nnn) { UInt32 v; v = (s->bsBuff >> (s->bsLive-nnn)) & ((1 << nnn)-1); s->bsLive -= nnn; vvv = v; break; } if (s->strm->avail_in == 0) RETURN(BZ_OK); s->bsBuff = (s->bsBuff << 8) | ((UInt32) (*((UChar*)(s->strm->next_in)))); s->bsLive += 8; s->strm->next_in++; s->strm->avail_in--; s->strm->total_in_lo32++; if (s->strm->total_in_lo32 == 0) s->strm->total_in_hi32++; }#define RETURN(rrr) { retVal = rrr; goto save_state_and_return; };#define GET_BIT(lll,uuu) GET_BITS(lll,uuu,1)#define GET_MTF_VAL(label1,label2,lval) { if (groupPos == 0) { groupNo++; if (groupNo >= nSelectors) RETURN(BZ_DATA_ERROR); groupPos = BZ_G_SIZE; gSel = s->selector[groupNo]; gMinlen = s->minLens[gSel]; gLimit = &(s->limit[gSel][0]); gPerm = &(s->perm[gSel][0]); gBase = &(s->base[gSel][0]); } groupPos--; zn = gMinlen; GET_BITS(label1, zvec, zn); while (1) { if (zn > 20 ) RETURN(BZ_DATA_ERROR); if (zvec <= gLimit[zn]) break; zn++; GET_BIT(label2, zj); zvec = (zvec << 1) | zj; }; if (zvec - gBase[zn] < 0 || zvec - gBase[zn] >= BZ_MAX_ALPHA_SIZE) RETURN(BZ_DATA_ERROR); lval = gPerm[zvec - gBase[zn]]; }#define UPHEAP(z) { Int32 zz, tmp; zz = z; tmp = heap[zz]; while (weight[tmp] < weight[heap[zz >> 1]]) { heap[zz] = heap[zz >> 1]; zz >>= 1; } heap[zz] = tmp; }#define DOWNHEAP(z) { Int32 zz, yy, tmp; zz = z; tmp = heap[zz]; while (True) { yy = zz << 1; if (yy > nHeap) break; if (yy < nHeap && weight[heap[yy+1]] < weight[heap[yy]]) yy++; if (weight[tmp] < weight[heap[yy]]) break; heap[zz] = heap[yy]; zz = yy; } heap[zz] = tmp; }#define ADDWEIGHTS(zw1,zw2) (WEIGHTOF(zw1)+WEIGHTOF(zw2)) | (1 + MYMAX(DEPTHOF(zw1),DEPTHOF(zw2)))#define WEIGHTOF(zz0) ((zz0) & 0xffffff00)#define DEPTHOF(zz1) ((zz1) & 0x000000ff)#define MYMAX(zz2,zz3) ((zz2) > (zz3) ? (zz2) : (zz3))#define CP1250_CAPITALIZATION_TABLE { { 0x00C1, 0x00E1, }, { 0x00C2, 0x00E2, }, { 0x00C4, 0x00E4, }, { 0x00C7, 0x00E7, }, { 0x00C9, 0x00E9, }, { 0x00CB, 0x00EB, }, { 0x00CD, 0x00ED, }, { 0x00CE, 0x00EE, }, { 0x00D3, 0x00F3, }, { 0x00D4, 0x00F4, }, { 0x00D6, 0x00F6, }, { 0x00DA, 0x00FA, }, { 0x00DC, 0x00FC, }, { 0x00DD, 0x00FD, }, { 0x0102, 0x0103, }, { 0x0104, 0x0105, }, { 0x0106, 0x0107, }, { 0x010C, 0x010D, }, { 0x010E, 0x010F, }, { 0x0110, 0x0111, }, { 0x0118, 0x0119, }, { 0x011A, 0x011B, }, { 0x0139, 0x013A, }, { 0x013D, 0x013E, }, { 0x0141, 0x0142, }, { 0x0143, 0x0144, }, { 0x0147, 0x0148, }, { 0x0150, 0x0151, }, { 0x0154, 0x0155, }, { 0x0158, 0x0159, }, { 0x015A, 0x015B, }, { 0x015E, 0x015F, }, { 0x0160, 0x0161, }, { 0x0162, 0x0163, }, { 0x0164, 0x0165, }, { 0x016E, 0x016F, }, { 0x0170, 0x0171, }, { 0x0179, 0x017A, }, { 0x017B, 0x017C, }, { 0x017D, 0x017E, }, { 0x0000, 0x0000, }, }#define CP437_CAPITALIZATION_TABLE { { 0x00C4, 0x00E4, }, { 0x00C5, 0x00E5, }, { 0x00C6, 0x00E6, }, { 0x00C7, 0x00E7, }, { 0x00C9, 0x00E9, }, { 0x00D1, 0x00F1, }, { 0x00D6, 0x00F6, }, { 0x00DC, 0x00FC, }, { 0x03A3, 0x03C3, }, { 0x03A6, 0x03C6, }, { 0x0000, 0x0000, }, }#define UNICODE_CAPITALIZATION_TABLE { { 0x0531, 0x0561, }, { 0x0532, 0x0562, }, { 0x053E, 0x056E, }, { 0x0549, 0x0579, }, { 0x0543, 0x0573, }, { 0x0551, 0x0581, }, { 0x0534, 0x0564, }, { 0x0535, 0x0565, }, { 0x0537, 0x0567, }, { 0x0538, 0x0568, }, { 0x0556, 0x0586, }, { 0x0542, 0x0572, }, { 0x0533, 0x0563, }, { 0x0540, 0x0570, }, { 0x053B, 0x056B, }, { 0x0541, 0x0571, }, { 0x054B, 0x057B, }, { 0x0554, 0x0584, }, { 0x053F, 0x056F, }, { 0x053C, 0x056C, }, { 0x0544, 0x0574, }, { 0x0546, 0x0576, }, { 0x0555, 0x0585, }, { 0x054A, 0x057A, }, { 0x0553, 0x0583, }, { 0x054C, 0x057C, }, { 0x0550, 0x0580, }, { 0x054D, 0x057D, }, { 0x0547, 0x0577, }, { 0x054F, 0x057F, }, { 0x0539, 0x0569, }, { 0x054E, 0x057E, }, { 0x0548, 0x0578, }, { 0x053D, 0x056D, }, { 0x0545, 0x0575, }, { 0x0552, 0x0582, }, { 0x0536, 0x0566, }, { 0x053A, 0x056A, }, { 0x24B6, 0x24D0, }, { 0x24B7, 0x24D1, }, { 0x24B8, 0x24D2, }, { 0x24B9, 0x24D3, }, { 0x24BA, 0x24D4, }, { 0x24BB, 0x24D5, }, { 0x24BC, 0x24D6, }, { 0x24BD, 0x24D7, }, { 0x24BE, 0x24D8, }, { 0x24BF, 0x24D9, }, { 0x24C0, 0x24DA, }, { 0x24C1, 0x24DB, }, { 0x24C2, 0x24DC, }, { 0x24C3, 0x24DD, }, { 0x24C4, 0x24DE, }, { 0x24C5, 0x24DF, }, { 0x24C6, 0x24E0, }, { 0x24C7, 0x24E1, }, { 0x24C8, 0x24E2, }, { 0x24C9, 0x24E3, }, { 0x24CA, 0x24E4, }, { 0x24CB, 0x24E5, }, { 0x24CC, 0x24E6, }, { 0x24CD, 0x24E7, }, { 0x24CE, 0x24E8, }, { 0x24CF, 0x24E9, }, { 0x2CC8, 0x2CC9, }, { 0x2C80, 0x2C81, }, { 0x2CF2, 0x2CF3, }, { 0x2CC2, 0x2CC3, }, { 0x2CB6, 0x2CB7, }, { 0x2CED, 0x2CEE, }, { 0x2CBC, 0x2CBD, }, { 0x2CEB, 0x2CEC, }, { 0x2C86, 0x2C87, }, { 0x03EE, 0x03EF, }, { 0x2CB2, 0x2CB3, }, { 0x2CCA, 0x2CCB, }, { 0x2CB8, 0x2CB9, }, { 0x2CBA, 0x2CBB, }, { 0x2C88, 0x2C89, }, { 0x03E4, 0x03E5, }, { 0x2CAA, 0x2CAB, }, { 0x2C84, 0x2C85, }, { 0x03EA, 0x03EB, }, { 0x2C8E, 0x2C8F, }, { 0x03E8, 0x03E9, }, { 0x2C92, 0x2C93, }, { 0x2C94, 0x2C95, }, { 0x03E6, 0x03E7, }, { 0x2CAC, 0x2CAD, }, { 0x2C9C, 0x2C9D, }, { 0x2C96, 0x2C97, }, { 0x2CD0, 0x2CD1, }, { 0x2C98, 0x2C99, }, { 0x2C9A, 0x2C9B, }, { 0x2C9E, 0x2C9F, }, { 0x2CB4, 0x2CB5, }, { 0x2CD8, 0x2CD9, }, { 0x2CC6, 0x2CC7, }, { 0x2CD6, 0x2CD7, }, { 0x2CCE, 0x2CCF, }, { 0x2CD4, 0x2CD5, }, { 0x2CD2, 0x2CD3, }, { 0x2CCC, 0x2CCD, }, { 0x2CBE, 0x2CBF, }, { 0x2CC4, 0x2CC5, }, { 0x2CDA, 0x2CDB, }, { 0x2CDE, 0x2CDF, }, { 0x2CE0, 0x2CE1, }, { 0x2CDC, 0x2CDD, }, { 0x2CE2, 0x2CE3, }, { 0x2CB0, 0x2CB1, }, { 0x2CA0, 0x2CA1, }, { 0x2CAE, 0x2CAF, }, { 0x2CA2, 0x2CA3, }, { 0x2CC0, 0x2CC1, }, { 0x03E2, 0x03E3, }, { 0x03EC, 0x03ED, }, { 0x2CA4, 0x2CA5, }, { 0x2C8A, 0x2C8B, }, { 0x2CA6, 0x2CA7, }, { 0x2C90, 0x2C91, }, { 0x2CA8, 0x2CA9, }, { 0x2C82, 0x2C83, }, { 0x2C8C, 0x2C8D, }, { 0x0410, 0x0430, }, { 0x04D0, 0x04D1, }, { 0x04D2, 0x04D3, }, { 0x04BC, 0x04BD, }, { 0x04BE, 0x04BF, }, { 0x04E0, 0x04E1, }, { 0x04A8, 0x04A9, }, { 0x051E, 0x051F, }, { 0x04E8, 0x04E9, }, { 0x04EA, 0x04EB, }, { 0x04A0, 0x04A1, }, { 0x0411, 0x0431, }, { 0x046A, 0x046B, }, { 0xA66A, 0xA66B, }, { 0xA65A, 0xA65B, }, { 0xA64C, 0xA64D, }, { 0x0406, 0x0456, }, { 0xA686, 0xA687, }, { 0x0427, 0x0447, }, { 0x04B6, 0x04B7, }, { 0x04F4, 0x04F5, }, { 0x04B8, 0x04B9, }, { 0xA658, 0xA659, }, { 0xA69A, 0xA69B, }, { 0x052C, 0x052D, }, { 0x0414, 0x0434, }, { 0x0402, 0x0452, }, { 0xA648, 0xA649, }, { 0xA66C, 0xA66D, }, { 0xA698, 0xA699, }, { 0xA680, 0xA681, }, { 0x0405, 0x0455, }, { 0xA642, 0xA643, }, { 0x040F, 0x045F, }, { 0xA682, 0xA683, }, { 0xA688, 0xA689, }, { 0x052A, 0x052B, }, { 0x042D, 0x044D, }, { 0x04EC, 0x04ED, }, { 0x0424, 0x0444, }, { 0x041B, 0x043B, }, { 0x052E, 0x052F, }, { 0x0512, 0x0513, }, { 0x0520, 0x0521, }, { 0x04C5, 0x04C6, }, { 0x041C, 0x043C, }, { 0x04CD, 0x04CE, }, { 0x041D, 0x043D, }, { 0x04A2, 0x04A3, }, { 0x04C7, 0x04C8, }, { 0x0528, 0x0529, }, { 0x0522, 0x0523, }, { 0x04C9, 0x04CA, }, { 0x0420, 0x0440, }, { 0x048E, 0x048F, }, { 0x0421, 0x0441, }, { 0x04AA, 0x04AB, }, { 0x0472, 0x0473, }, { 0x0413, 0x0433, }, { 0x04F6, 0x04F7, }, { 0x0494, 0x0495, }, { 0x0492, 0x0493, }, { 0x04FA, 0x04FB, }, { 0x0490, 0x0491, }, { 0x0403, 0x0453, }, { 0x0425, 0x0445, }, { 0x04B2, 0x04B3, }, { 0x04FC, 0x04FD, }, { 0x04FE, 0x04FF, }, { 0x042A, 0x044A, }, { 0xA694, 0xA695, }, { 0x0418, 0x0438, }, { 0x04E4, 0x04E5, }, { 0x040D, 0x045D, }, { 0x04E2, 0x04E3, }, { 0x0415, 0x0435, }, { 0x04D6, 0x04D7, }, { 0x0400, 0x0450, }, { 0x0401, 0x0451, }, { 0xA646, 0xA647, }, { 0xA656, 0xA657, }, { 0x046C, 0x046D, }, { 0xA65C, 0xA65D, }, { 0x0464, 0x0465, }, { 0x0468, 0x0469, }, { 0xA652, 0xA653, }, { 0x0474, 0x0475, }, { 0x0476, 0x0477, }, { 0x0408, 0x0458, }, { 0x041A, 0x043A, }, { 0x049A, 0x049B, }, { 0x04C3, 0x04C4, }, { 0x049E, 0x049F, }, { 0x049C, 0x049D, }, { 0x04CB, 0x04CC, }, { 0x040C, 0x045C, }, { 0x0500, 0x0501, }, { 0x0502, 0x0503, }, { 0x0506, 0x0507, }, { 0x0508, 0x0509, }, { 0x050A, 0x050B, }, { 0x050C, 0x050D, }, { 0x050E, 0x050F, }, { 0x0504, 0x0505, }, { 0x0480, 0x0481, }, { 0x046E, 0x046F, }, { 0x0514, 0x0515, }, { 0x0466, 0x0467, }, { 0x0409, 0x0459, }, { 0xA668, 0xA669, }, { 0xA64A, 0xA64B, }, { 0xA64E, 0xA64F, }, { 0x040A, 0x045A, }, { 0x041E, 0x043E, }, { 0x04E6, 0x04E7, }, { 0x0460, 0x0461, }, { 0x047C, 0x047D, }, { 0x047E, 0x047F, }, { 0x041F, 0x043F, }, { 0x0524, 0x0525, }, { 0x04A6, 0x04A7, }, { 0x0470, 0x0471, }, { 0x051A, 0x051B, }, { 0xA644, 0xA645, }, { 0xA660, 0xA661, }, { 0xA654, 0xA655, }, { 0x0510, 0x0511, }, { 0x0516, 0x0517, }, { 0x047A, 0x047B, }, { 0x04D8, 0x04D9, }, { 0x04DA, 0x04DB, }, { 0x048C, 0x048D, }, { 0x0428, 0x0448, }, { 0x0429, 0x0449, }, { 0x04BA, 0x04BB, }, { 0x0526, 0x0527, }, { 0x048A, 0x048B, }, { 0x040E, 0x045E, }, { 0xA696, 0xA697, }, { 0xA662, 0xA663, }, { 0xA664, 0xA665, }, { 0xA666, 0xA667, }, { 0x042C, 0x044C, }, { 0x04AE, 0x04AF, }, { 0x04B0, 0x04B1, }, { 0xA692, 0xA693, }, { 0x0422, 0x0442, }, { 0x04AC, 0x04AD, }, { 0xA68A, 0xA68B, }, { 0x0426, 0x0446, }, { 0x040B, 0x045B, }, { 0xA690, 0xA691, }, { 0xA68E, 0xA68F, }, { 0xA68C, 0xA68D, }, { 0x0423, 0x0443, }, { 0x04F0, 0x04F1, }, { 0x04F2, 0x04F3, }, { 0x04EE, 0x04EF, }, { 0x0478, 0x0479, }, { 0x0404, 0x0454, }, { 0x0412, 0x0432, }, { 0x051C, 0x051D, }, { 0x042F, 0x044F, }, { 0x0518, 0x0519, }, { 0x0462, 0x0463, }, { 0x042B, 0x044B, }, { 0xA650, 0xA651, }, { 0x04F8, 0x04F9, }, { 0x0407, 0x0457, }, { 0xA65E, 0xA65F, }, { 0x042E, 0x044E, }, { 0x0417, 0x0437, }, { 0x0498, 0x0499, }, { 0x04DE, 0x04DF, }, { 0xA640, 0xA641, }, { 0x0416, 0x0436, }, { 0x04C1, 0x04C2, }, { 0x0496, 0x0497, }, { 0x04DC, 0x04DD, }, { 0xA684, 0xA685, }, { 0xFF21, 0xFF41, }, { 0xFF22, 0xFF42, }, { 0xFF23, 0xFF43, }, { 0xFF24, 0xFF44, }, { 0xFF25, 0xFF45, }, { 0xFF26, 0xFF46, }, { 0xFF27, 0xFF47, }, { 0xFF28, 0xFF48, }, { 0xFF29, 0xFF49, }, { 0xFF2A, 0xFF4A, }, { 0xFF2B, 0xFF4B, }, { 0xFF2C, 0xFF4C, }, { 0xFF2D, 0xFF4D, }, { 0xFF2E, 0xFF4E, }, { 0xFF2F, 0xFF4F, }, { 0xFF30, 0xFF50, }, { 0xFF31, 0xFF51, }, { 0xFF32, 0xFF52, }, { 0xFF33, 0xFF53, }, { 0xFF34, 0xFF54, }, { 0xFF35, 0xFF55, }, { 0xFF36, 0xFF56, }, { 0xFF37, 0xFF57, }, { 0xFF38, 0xFF58, }, { 0xFF39, 0xFF59, }, { 0xFF3A, 0xFF5A, }, { 0x10CD, 0x2D2D, }, { 0x10A0, 0x2D00, }, { 0x10A1, 0x2D01, }, { 0x10BA, 0x2D1A, }, { 0x10BD, 0x2D1D, }, { 0x10B9, 0x2D19, }, { 0x10BC, 0x2D1C, }, { 0x10A3, 0x2D03, }, { 0x10A4, 0x2D04, }, { 0x10A2, 0x2D02, }, { 0x10B6, 0x2D16, }, { 0x10C0, 0x2D20, }, { 0x10C4, 0x2D24, }, { 0x10C1, 0x2D21, }, { 0x10C2, 0x2D22, }, { 0x10C5, 0x2D25, }, { 0x10A8, 0x2D08, }, { 0x10BF, 0x2D1F, }, { 0x10BB, 0x2D1B, }, { 0x10A9, 0x2D09, }, { 0x10B5, 0x2D15, }, { 0x10AA, 0x2D0A, }, { 0x10AB, 0x2D0B, }, { 0x10AC, 0x2D0C, }, { 0x10AD, 0x2D0D, }, { 0x10AE, 0x2D0E, }, { 0x10B4, 0x2D14, }, { 0x10B7, 0x2D17, }, { 0x10B0, 0x2D10, }, { 0x10B1, 0x2D11, }, { 0x10B8, 0x2D18, }, { 0x10A7, 0x2D07, }, { 0x10B2, 0x2D12, }, { 0x10B3, 0x2D13, }, { 0x10A5, 0x2D05, }, { 0x10C3, 0x2D23, }, { 0x10BE, 0x2D1E, }, { 0x10C7, 0x2D27, }, { 0x10A6, 0x2D06, }, { 0x10AF, 0x2D0F, }, { 0x2C00, 0x2C30, }, { 0x2C28, 0x2C58, }, { 0x2C01, 0x2C31, }, { 0x2C1D, 0x2C4D, }, { 0x2C0C, 0x2C3C, }, { 0x2C04, 0x2C34, }, { 0x2C07, 0x2C37, }, { 0x2C2A, 0x2C5A, }, { 0x2C17, 0x2C47, }, { 0x2C03, 0x2C33, }, { 0x2C18, 0x2C48, }, { 0x2C0B, 0x2C3B, }, { 0x2C0A, 0x2C3A, }, { 0x2C29, 0x2C59, }, { 0x2C27, 0x2C57, }, { 0x2C09, 0x2C39, }, { 0x2C2B, 0x2C5B, }, { 0x2C0D, 0x2C3D, }, { 0x2C2E, 0x2C5E, }, { 0x2C0E, 0x2C3E, }, { 0x2C0F, 0x2C3F, }, { 0x2C10, 0x2C40, }, { 0x2C11, 0x2C41, }, { 0x2C19, 0x2C49, }, { 0x2C1A, 0x2C4A, }, { 0x2C12, 0x2C42, }, { 0x2C13, 0x2C43, }, { 0x2C1E, 0x2C4E, }, { 0x2C1B, 0x2C4B, }, { 0x2C2C, 0x2C5C, }, { 0x2C14, 0x2C44, }, { 0x2C24, 0x2C54, }, { 0x2C25, 0x2C55, }, { 0x2C22, 0x2C52, }, { 0x2C2D, 0x2C5D, }, { 0x2C1C, 0x2C4C, }, { 0x2C15, 0x2C45, }, { 0x2C16, 0x2C46, }, { 0x2C02, 0x2C32, }, { 0x2C21, 0x2C51, }, { 0x2C20, 0x2C50, }, { 0x2C1F, 0x2C4F, }, { 0x2C05, 0x2C35, }, { 0x2C26, 0x2C56, }, { 0x2C23, 0x2C53, }, { 0x2C08, 0x2C38, }, { 0x2C06, 0x2C36, }, { 0x0391, 0x03B1, }, { 0x1F09, 0x1F01, }, { 0x1F0D, 0x1F05, }, { 0x1F0F, 0x1F07, }, { 0x1F0B, 0x1F03, }, { 0x1FB9, 0x1FB1, }, { 0x1FBB, 0x1F71, }, { 0x1F08, 0x1F00, }, { 0x1F0C, 0x1F04, }, { 0x1F0E, 0x1F06, }, { 0x1F0A, 0x1F02, }, { 0x0386, 0x03AC, }, { 0x1FBA, 0x1F70, }, { 0x1FB8, 0x1FB0, }, { 0x0372, 0x0373, }, { 0x0392, 0x03B2, }, { 0x03A7, 0x03C7, }, { 0x0394, 0x03B4, }, { 0x0395, 0x03B5, }, { 0x1F19, 0x1F11, }, { 0x1F1D, 0x1F15, }, { 0x1F1B, 0x1F13, }, { 0x1FC9, 0x1F73, }, { 0x1F18, 0x1F10, }, { 0x1F1C, 0x1F14, }, { 0x1F1A, 0x1F12, }, { 0x0388, 0x03AD, }, { 0x1FC8, 0x1F72, }, { 0x0397, 0x03B7, }, { 0x1F29, 0x1F21, }, { 0x1F2D, 0x1F25, }, { 0x1F2F, 0x1F27, }, { 0x1F2B, 0x1F23, }, { 0x1FCB, 0x1F75, }, { 0x1F28, 0x1F20, }, { 0x1F2C, 0x1F24, }, { 0x1F2E, 0x1F26, }, { 0x1F2A, 0x1F22, }, { 0x0389, 0x03AE, }, { 0x1FCA, 0x1F74, }, { 0x0393, 0x03B3, }, { 0x0370, 0x0371, }, { 0x0399, 0x03B9, }, { 0x1F39, 0x1F31, }, { 0x1F3D, 0x1F35, }, { 0x1F3F, 0x1F37, }, { 0x1F3B, 0x1F33, }, { 0x03AA, 0x03CA, }, { 0x1FD9, 0x1FD1, }, { 0x1FDB, 0x1F77, }, { 0x1F38, 0x1F30, }, { 0x1F3C, 0x1F34, }, { 0x1F3E, 0x1F36, }, { 0x1F3A, 0x1F32, }, { 0x038A, 0x03AF, }, { 0x1FDA, 0x1F76, }, { 0x1FD8, 0x1FD0, }, { 0x039A, 0x03BA, }, { 0x039B, 0x03BB, }, { 0x039C, 0x03BC, }, { 0x039D, 0x03BD, }, { 0x03A9, 0x03C9, }, { 0x1F69, 0x1F61, }, { 0x1F6D, 0x1F65, }, { 0x1F6F, 0x1F67, }, { 0x1F6B, 0x1F63, }, { 0x1FFB, 0x1F7D, }, { 0x1F68, 0x1F60, }, { 0x1F6C, 0x1F64, }, { 0x1F6E, 0x1F66, }, { 0x1F6A, 0x1F62, }, { 0x038F, 0x03CE, }, { 0x1FFA, 0x1F7C, }, { 0x039F, 0x03BF, }, { 0x1F49, 0x1F41, }, { 0x1F4D, 0x1F45, }, { 0x1F4B, 0x1F43, }, { 0x1FF9, 0x1F79, }, { 0x1F48, 0x1F40, }, { 0x1F4C, 0x1F44, }, { 0x1F4A, 0x1F42, }, { 0x038C, 0x03CC, }, { 0x1FF8, 0x1F78, }, { 0x0376, 0x0377, }, { 0x03A6, 0x03C6, }, { 0x03A0, 0x03C0, }, { 0x03A8, 0x03C8, }, { 0x03A1, 0x03C1, }, { 0x1FEC, 0x1FE5, }, { 0x03FA, 0x03FB, }, { 0x03F7, 0x03F8, }, { 0x03A3, 0x03C3, }, { 0x03A4, 0x03C4, }, { 0x0398, 0x03B8, }, { 0x03A5, 0x03C5, }, { 0x1F59, 0x1F51, }, { 0x1F5D, 0x1F55, }, { 0x1F5F, 0x1F57, }, { 0x1F5B, 0x1F53, }, { 0x03AB, 0x03CB, }, { 0x1FE9, 0x1FE1, }, { 0x1FEB, 0x1F7B, }, { 0x038E, 0x03CD, }, { 0x1FEA, 0x1F7A, }, { 0x1FE8, 0x1FE0, }, { 0x039E, 0x03BE, }, { 0x0396, 0x03B6, }, { 0x0041, 0x0061, }, { 0x00C1, 0x00E1, }, { 0x0102, 0x0103, }, { 0x1EAE, 0x1EAF, }, { 0x1EB6, 0x1EB7, }, { 0x1EB0, 0x1EB1, }, { 0x1EB2, 0x1EB3, }, { 0x1EB4, 0x1EB5, }, { 0x01CD, 0x01CE, }, { 0x00C2, 0x00E2, }, { 0x1EA4, 0x1EA5, }, { 0x1EAC, 0x1EAD, }, { 0x1EA6, 0x1EA7, }, { 0x1EA8, 0x1EA9, }, { 0x1EAA, 0x1EAB, }, { 0x00C4, 0x00E4, }, { 0x01DE, 0x01DF, }, { 0x0226, 0x0227, }, { 0x01E0, 0x01E1, }, { 0x1EA0, 0x1EA1, }, { 0x0200, 0x0201, }, { 0x00C0, 0x00E0, }, { 0x1EA2, 0x1EA3, }, { 0x0202, 0x0203, }, { 0x0100, 0x0101, }, { 0x0104, 0x0105, }, { 0x00C5, 0x00E5, }, { 0x01FA, 0x01FB, }, { 0x1E00, 0x1E01, }, { 0x023A, 0x2C65, }, { 0x00C3, 0x00E3, }, { 0xA732, 0xA733, }, { 0x00C6, 0x00E6, }, { 0x01FC, 0x01FD, }, { 0x01E2, 0x01E3, }, { 0x2C6D, 0x0251, }, { 0xA734, 0xA735, }, { 0xA736, 0xA737, }, { 0xA738, 0xA739, }, { 0xA73A, 0xA73B, }, { 0xA73C, 0xA73D, }, { 0x0042, 0x0062, }, { 0x1E02, 0x1E03, }, { 0x1E04, 0x1E05, }, { 0xA796, 0xA797, }, { 0x0181, 0x0253, }, { 0x1E06, 0x1E07, }, { 0x0243, 0x0180, }, { 0x0182, 0x0183, }, { 0xA7B4, 0xA7B5, }, { 0xA746, 0xA747, }, { 0x0043, 0x0063, }, { 0x0106, 0x0107, }, { 0xA792, 0xA793, }, { 0x010C, 0x010D, }, { 0x00C7, 0x00E7, }, { 0x1E08, 0x1E09, }, { 0x0108, 0x0109, }, { 0x010A, 0x010B, }, { 0x0187, 0x0188, }, { 0x023B, 0x023C, }, { 0xA7B3, 0xAB53, }, { 0xA76E, 0xA76F, }, { 0xA72C, 0xA72D, }, { 0xA72E, 0xA72F, }, { 0x0044, 0x0064, }, { 0x010E, 0x010F, }, { 0x1E10, 0x1E11, }, { 0x1E12, 0x1E13, }, { 0x1E0A, 0x1E0B, }, { 0x1E0C, 0x1E0D, }, { 0x018A, 0x0257, }, { 0x1E0E, 0x1E0F, }, { 0x0110, 0x0111, }, { 0x018B, 0x018C, }, { 0x01F1, 0x01F3, }, { 0x01C4, 0x01C6, }, { 0x0045, 0x0065, }, { 0x00C9, 0x00E9, }, { 0x0114, 0x0115, }, { 0x011A, 0x011B, }, { 0x0228, 0x0229, }, { 0x1E1C, 0x1E1D, }, { 0x00CA, 0x00EA, }, { 0x1EBE, 0x1EBF, }, { 0x1EC6, 0x1EC7, }, { 0x1EC0, 0x1EC1, }, { 0x1EC2, 0x1EC3, }, { 0x1EC4, 0x1EC5, }, { 0x1E18, 0x1E19, }, { 0x00CB, 0x00EB, }, { 0x0116, 0x0117, }, { 0x1EB8, 0x1EB9, }, { 0x0204, 0x0205, }, { 0x00C8, 0x00E8, }, { 0x1EBA, 0x1EBB, }, { 0x0206, 0x0207, }, { 0x0112, 0x0113, }, { 0x1E16, 0x1E17, }, { 0x1E14, 0x1E15, }, { 0x0118, 0x0119, }, { 0x0246, 0x0247, }, { 0x1EBC, 0x1EBD, }, { 0x1E1A, 0x1E1B, }, { 0xA724, 0xA725, }, { 0xA722, 0xA723, }, { 0x014A, 0x014B, }, { 0x01A9, 0x0283, }, { 0xA76A, 0xA76B, }, { 0x00D0, 0x00F0, }, { 0x01B7, 0x0292, }, { 0x01B8, 0x01B9, }, { 0x01EE, 0x01EF, }, { 0x0046, 0x0066, }, { 0x1E1E, 0x1E1F, }, { 0x0191, 0x0192, }, { 0xA798, 0xA799, }, { 0x0047, 0x0067, }, { 0x01F4, 0x01F5, }, { 0x011E, 0x011F, }, { 0x01E6, 0x01E7, }, { 0x0122, 0x0123, }, { 0x011C, 0x011D, }, { 0x0120, 0x0121, }, { 0x0193, 0x0260, }, { 0x1E20, 0x1E21, }, { 0xA7A0, 0xA7A1, }, { 0x01E4, 0x01E5, }, { 0x0194, 0x0263, }, { 0x0241, 0x0242, }, { 0x0048, 0x0068, }, { 0x1E2A, 0x1E2B, }, { 0x021E, 0x021F, }, { 0x1E28, 0x1E29, }, { 0x0124, 0x0125, }, { 0x2C67, 0x2C68, }, { 0x1E26, 0x1E27, }, { 0x1E22, 0x1E23, }, { 0x1E24, 0x1E25, }, { 0xA7AA, 0x0266, }, { 0x0126, 0x0127, }, { 0x2C75, 0x2C76, }, { 0xA726, 0xA727, }, { 0x0049, 0x0069, }, { 0x00CD, 0x00ED, }, { 0x012C, 0x012D, }, { 0x01CF, 0x01D0, }, { 0x00CE, 0x00EE, }, { 0x00CF, 0x00EF, }, { 0x1E2E, 0x1E2F, }, { 0x1ECA, 0x1ECB, }, { 0x0208, 0x0209, }, { 0x00CC, 0x00EC, }, { 0x1EC8, 0x1EC9, }, { 0x020A, 0x020B, }, { 0x012A, 0x012B, }, { 0x012E, 0x012F, }, { 0x0197, 0x0268, }, { 0x0128, 0x0129, }, { 0x1E2C, 0x1E2D, }, { 0xA779, 0xA77A, }, { 0xA77B, 0xA77C, }, { 0xA77D, 0x1D79, }, { 0xA782, 0xA783, }, { 0xA784, 0xA785, }, { 0xA786, 0xA787, }, { 0x0196, 0x0269, }, { 0xA76C, 0xA76D, }, { 0x004A, 0x006A, }, { 0x0134, 0x0135, }, { 0xA7B2, 0x029D, }, { 0x0248, 0x0249, }, { 0x004B, 0x006B, }, { 0x1E30, 0x1E31, }, { 0x01E8, 0x01E9, }, { 0x0136, 0x0137, }, { 0x2C69, 0x2C6A, }, { 0xA742, 0xA743, }, { 0x1E32, 0x1E33, }, { 0x0198, 0x0199, }, { 0x1E34, 0x1E35, }, { 0xA7A2, 0xA7A3, }, { 0xA740, 0xA741, }, { 0xA744, 0xA745, }, { 0x004C, 0x006C, }, { 0x0139, 0x013A, }, { 0x023D, 0x019A, }, { 0xA7AD, 0x026C, }, { 0x013D, 0x013E, }, { 0x013B, 0x013C, }, { 0x1E3C, 0x1E3D, }, { 0x1E36, 0x1E37, }, { 0x1E38, 0x1E39, }, { 0x2C60, 0x2C61, }, { 0xA748, 0xA749, }, { 0x1E3A, 0x1E3B, }, { 0x013F, 0x0140, }, { 0x2C62, 0x026B, }, { 0x0141, 0x0142, }, { 0x01C7, 0x01C9, }, { 0x004D, 0x006D, }, { 0x1E3E, 0x1E3F, }, { 0x1E40, 0x1E41, }, { 0x1E42, 0x1E43, }, { 0x2C6E, 0x0271, }, { 0x1EFA, 0x1EFB, }, { 0x1EFC, 0x1EFD, }, { 0x004E, 0x006E, }, { 0x0143, 0x0144, }, { 0x0147, 0x0148, }, { 0x0145, 0x0146, }, { 0x1E4A, 0x1E4B, }, { 0xA790, 0xA791, }, { 0x1E44, 0x1E45, }, { 0x1E46, 0x1E47, }, { 0x01F8, 0x01F9, }, { 0x019D, 0x0272, }, { 0x1E48, 0x1E49, }, { 0x0220, 0x019E, }, { 0xA7A4, 0xA7A5, }, { 0x00D1, 0x00F1, }, { 0x01CA, 0x01CC, }, { 0x004F, 0x006F, }, { 0x00D3, 0x00F3, }, { 0x014E, 0x014F, }, { 0x01D1, 0x01D2, }, { 0x00D4, 0x00F4, }, { 0x1ED0, 0x1ED1, }, { 0x1ED8, 0x1ED9, }, { 0x1ED2, 0x1ED3, }, { 0x1ED4, 0x1ED5, }, { 0x1ED6, 0x1ED7, }, { 0x00D6, 0x00F6, }, { 0x022A, 0x022B, }, { 0x022E, 0x022F, }, { 0x0230, 0x0231, }, { 0x1ECC, 0x1ECD, }, { 0x0150, 0x0151, }, { 0x020C, 0x020D, }, { 0x00D2, 0x00F2, }, { 0x1ECE, 0x1ECF, }, { 0x01A0, 0x01A1, }, { 0x1EDA, 0x1EDB, }, { 0x1EE2, 0x1EE3, }, { 0x1EDC, 0x1EDD, }, { 0x1EDE, 0x1EDF, }, { 0x1EE0, 0x1EE1, }, { 0x020E, 0x020F, }, { 0xA74A, 0xA74B, }, { 0xA74C, 0xA74D, }, { 0x014C, 0x014D, }, { 0x1E52, 0x1E53, }, { 0x1E50, 0x1E51, }, { 0x01EA, 0x01EB, }, { 0x01EC, 0x01ED, }, { 0x00D8, 0x00F8, }, { 0x01FE, 0x01FF, }, { 0x00D5, 0x00F5, }, { 0x1E4C, 0x1E4D, }, { 0x1E4E, 0x1E4F, }, { 0x022C, 0x022D, }, { 0x01A2, 0x01A3, }, { 0xA7B6, 0xA7B7, }, { 0xA74E, 0xA74F, }, { 0x0190, 0x025B, }, { 0x0186, 0x0254, }, { 0x0222, 0x0223, }, { 0x0050, 0x0070, }, { 0x1E54, 0x1E55, }, { 0x1E56, 0x1E57, }, { 0xA752, 0xA753, }, { 0x01A4, 0x01A5, }, { 0xA754, 0xA755, }, { 0x2C63, 0x1D7D, }, { 0xA750, 0xA751, }, { 0x0051, 0x0071, }, { 0xA758, 0xA759, }, { 0xA756, 0xA757, }, { 0x0052, 0x0072, }, { 0xA75A, 0xA75B, }, { 0x0154, 0x0155, }, { 0x0158, 0x0159, }, { 0x0156, 0x0157, }, { 0x1E58, 0x1E59, }, { 0x1E5A, 0x1E5B, }, { 0x1E5C, 0x1E5D, }, { 0x0210, 0x0211, }, { 0x0212, 0x0213, }, { 0x1E5E, 0x1E5F, }, { 0xA7A6, 0xA7A7, }, { 0x024C, 0x024D, }, { 0x2C64, 0x027D, }, { 0xA73E, 0xA73F, }, { 0x018E, 0x0258, }, { 0xA7AB, 0x025C, }, { 0xA75C, 0xA75D, }, { 0x0053, 0x0073, }, { 0x015A, 0x015B, }, { 0x1E64, 0x1E65, }, { 0x0160, 0x0161, }, { 0x1E66, 0x1E67, }, { 0x015E, 0x015F, }, { 0x015C, 0x015D, }, { 0x0218, 0x0219, }, { 0x1E60, 0x1E61, }, { 0x1E62, 0x1E63, }, { 0x1E68, 0x1E69, }, { 0xA7A8, 0xA7A9, }, { 0x2C7E, 0x023F, }, { 0xA78B, 0xA78C, }, { 0x018F, 0x0259, }, { 0xA7AC, 0x0261, }, { 0x1E9E, 0x00DF, }, { 0x0054, 0x0074, }, { 0x0164, 0x0165, }, { 0x0162, 0x0163, }, { 0x1E70, 0x1E71, }, { 0x021A, 0x021B, }, { 0x023E, 0x2C66, }, { 0x1E6A, 0x1E6B, }, { 0x1E6C, 0x1E6D, }, { 0x01AC, 0x01AD, }, { 0x1E6E, 0x1E6F, }, { 0x01AE, 0x0288, }, { 0x0166, 0x0167, }, { 0x00DE, 0x00FE, }, { 0xA764, 0xA765, }, { 0xA766, 0xA767, }, { 0x01BC, 0x01BD, }, { 0x0184, 0x0185, }, { 0x01A7, 0x01A8, }, { 0xA72A, 0xA72B, }, { 0x2C6F, 0x0250, }, { 0x2C70, 0x0252, }, { 0xA78D, 0x0265, }, { 0xA77E, 0xA77F, }, { 0xA7B0, 0x029E, }, { 0xA780, 0xA781, }, { 0x019C, 0x026F, }, { 0xA7B1, 0x0287, }, { 0x0245, 0x028C, }, { 0xA728, 0xA729, }, { 0x0055, 0x0075, }, { 0x0244, 0x0289, }, { 0x00DA, 0x00FA, }, { 0x016C, 0x016D, }, { 0x01D3, 0x01D4, }, { 0x00DB, 0x00FB, }, { 0x1E76, 0x1E77, }, { 0x00DC, 0x00FC, }, { 0x01D7, 0x01D8, }, { 0x01D9, 0x01DA, }, { 0x01DB, 0x01DC, }, { 0x01D5, 0x01D6, }, { 0x1E72, 0x1E73, }, { 0x1EE4, 0x1EE5, }, { 0x0170, 0x0171, }, { 0x0214, 0x0215, }, { 0x00D9, 0x00F9, }, { 0x1EE6, 0x1EE7, }, { 0x01AF, 0x01B0, }, { 0x1EE8, 0x1EE9, }, { 0x1EF0, 0x1EF1, }, { 0x1EEA, 0x1EEB, }, { 0x1EEC, 0x1EED, }, { 0x1EEE, 0x1EEF, }, { 0x0216, 0x0217, }, { 0x016A, 0x016B, }, { 0x1E7A, 0x1E7B, }, { 0x0172, 0x0173, }, { 0x016E, 0x016F, }, { 0xA7B8, 0xA7B9, }, { 0x0168, 0x0169, }, { 0x1E78, 0x1E79, }, { 0x1E74, 0x1E75, }, { 0x01B1, 0x028A, }, { 0x0056, 0x0076, }, { 0xA75E, 0xA75F, }, { 0x1E7E, 0x1E7F, }, { 0x01B2, 0x028B, }, { 0x1E7C, 0x1E7D, }, { 0xA768, 0xA769, }, { 0xA762, 0xA763, }, { 0xA79A, 0xA79B, }, { 0xA79C, 0xA79D, }, { 0xA79E, 0xA79F, }, { 0xA760, 0xA761, }, { 0x0057, 0x0077, }, { 0x1E82, 0x1E83, }, { 0x0174, 0x0175, }, { 0x1E84, 0x1E85, }, { 0x1E86, 0x1E87, }, { 0x1E88, 0x1E89, }, { 0x1E80, 0x1E81, }, { 0x2C72, 0x2C73, }, { 0x0058, 0x0078, }, { 0x1E8C, 0x1E8D, }, { 0x1E8A, 0x1E8B, }, { 0x0059, 0x0079, }, { 0x00DD, 0x00FD, }, { 0x0176, 0x0177, }, { 0x0178, 0x00FF, }, { 0x1E8E, 0x1E8F, }, { 0x1EF4, 0x1EF5, }, { 0x1EF2, 0x1EF3, }, { 0x01B3, 0x01B4, }, { 0x1EF6, 0x1EF7, }, { 0x1EFE, 0x1EFF, }, { 0x0232, 0x0233, }, { 0x024E, 0x024F, }, { 0x1EF8, 0x1EF9, }, { 0x021C, 0x021D, }, { 0x005A, 0x007A, }, { 0x0179, 0x017A, }, { 0x017D, 0x017E, }, { 0x1E90, 0x1E91, }, { 0x2C6B, 0x2C6C, }, { 0x017B, 0x017C, }, { 0x1E92, 0x1E93, }, { 0x0224, 0x0225, }, { 0x1E94, 0x1E95, }, { 0x01B5, 0x01B6, }, { 0x2C7F, 0x0240, }, { 0x0000, 0x0000, }, }#define DO_CRC(x) crc = tab[(crc ^ (x)) & 255] ^ (crc >> 8)#define tole(x) cpu_to_le32(x)#define _LINUX_CRC7_H#define POLY (0x1070U << 3)#define Null 0#define structassign(d,s) d = s#define Mic_secs_Per_Second 1000000.0#define TIMES#define REG#define Too_Small_Time 120#define MAX_LINE_LENGTH_BYTES (64)#define DEFAULT_LINE_LENGTH_BYTES (16)#define BUILD_TAG NULL#define _EFI_DRIVER_H 1#define IMAGE_SUBSYSTEM_EFI_ROM 13#define IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER 12#define IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER 11#define IMAGE_SUBSYSTEM_EFI_APPLICATION 10#define IMAGE_NT_SIGNATURE 0x00004550#define IMAGE_DOS_SIGNATURE 0x5a4d#define IMAGE_NT_OPTIONAL_HDR64_MAGIC 0x020b#define IMAGE_NT_OPTIONAL_HDR32_MAGIC 0x010b#define IMAGE_FILE_MACHINE_RISCV64 0x5064#define IMAGE_FILE_MACHINE_RISCV32 0x5032#define IMAGE_FILE_MACHINE_ARM64 0xaa64#define IMAGE_FILE_MACHINE_AMD64 0x8664#define IMAGE_FILE_MACHINE_ARMNT 0x01c4#define IMAGE_FILE_MACHINE_THUMB 0x01c2#define IMAGE_FILE_MACHINE_ARM 0x01c0#define IMAGE_FILE_MACHINE_I386 0x014c#define IMAGE_FILE_BYTES_REVERSED_HI 0x8000#define IMAGE_FILE_UP_SYSTEM_ONLY 0x4000#define IMAGE_FILE_DLL 0x2000#define IMAGE_FILE_SYSTEM 0x1000#define IMAGE_FILE_NET_RUN_FROM_SWAP 0x0800#define IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP 0x0400#define IMAGE_FILE_DEBUG_STRIPPED 0x0200#define IMAGE_FILE_32BIT_MACHINE 0x0100#define IMAGE_FILE_BYTES_REVERSED_LO 0x0080#define IMAGE_FILE_LARGE_ADDRESS_AWARE 0x0020#define IMAGE_FILE_AGGRESSIVE_WS_TRIM 0x0010#define IMAGE_FILE_LOCAL_SYMS_STRIPPED 0x0008#define IMAGE_FILE_LINE_NUMS_STRIPPED 0x0004#define IMAGE_FILE_EXECUTABLE_IMAGE 0x0002#define IMAGE_FILE_RELOCS_STRIPPED 0x0001#define _ASM_PE_H#define IMAGE_SIZEOF_SHORT_NAME 8#define IMAGE_NUMBEROF_DIRECTORY_ENTRIES 16#define IMAGE_REL_AMD64_SSPAN32 0x0010#define IMAGE_REL_AMD64_PAIR 0x000F#define IMAGE_REL_AMD64_SREL32 0x000E#define IMAGE_REL_AMD64_TOKEN 0x000D#define IMAGE_REL_AMD64_SECREL7 0x000C#define IMAGE_REL_AMD64_SECREL 0x000B#define IMAGE_REL_AMD64_SECTION 0x000A#define IMAGE_REL_AMD64_REL32_5 0x0009#define IMAGE_REL_AMD64_REL32_4 0x0008#define IMAGE_REL_AMD64_REL32_3 0x0007#define IMAGE_REL_AMD64_REL32_2 0x0006#define IMAGE_REL_AMD64_REL32_1 0x0005#define IMAGE_REL_AMD64_REL32 0x0004#define IMAGE_REL_AMD64_ADDR32NB 0x0003#define IMAGE_REL_AMD64_ADDR32 0x0002#define IMAGE_REL_AMD64_ADDR64 0x0001#define IMAGE_REL_AMD64_ABSOLUTE 0x0000#define IMAGE_REL_ARM64_ADDR64 0x000E#define IMAGE_REL_ARM64_SECTION 0x000D#define IMAGE_REL_ARM64_TOKEN 0x000C#define IMAGE_REL_ARM64_SECREL_LOW12L 0x000B#define IMAGE_REL_ARM64_SECREL_HIGH12A 0x000A#define IMAGE_REL_ARM64_SECREL_LOW12A 0x0009#define IMAGE_REL_ARM64_SECREL 0x0008#define IMAGE_REL_ARM64_PAGEOFFSET_12L 0x0007#define IMAGE_REL_ARM64_PAGEOFFSET_12A 0x0006#define IMAGE_REL_ARM64_REL21 0x0005#define IMAGE_REL_ARM64_PAGEBASE_REL21 0x0004#define IMAGE_REL_ARM64_BRANCH26 0x0003#define IMAGE_REL_ARM64_ADDR32NB 0x0002#define IMAGE_REL_ARM64_ADDR32 0x0001#define IMAGE_REL_ARM64_ABSOLUTE 0x0000#define IMAGE_REL_ARM_BLX23T 0x0015#define IMAGE_REL_ARM_BRANCH24T 0x0014#define IMAGE_REL_ARM_BRANCH20T 0x0012#define IMAGE_REL_ARM_MOV32T 0x0011#define IMAGE_REL_ARM_MOV32A 0x0010#define IMAGE_REL_ARM_SECREL 0x000F#define IMAGE_REL_ARM_SECTION 0x000E#define IMAGE_REL_ARM_BLX11 0x0009#define IMAGE_REL_ARM_BLX24 0x0008#define IMAGE_REL_ARM_GPREL7 0x0007#define IMAGE_REL_ARM_GPREL12 0x0006#define IMAGE_REL_ARM_TOKEN 0x0005#define IMAGE_REL_ARM_BRANCH11 0x0004#define IMAGE_REL_ARM_BRANCH24 0x0003#define IMAGE_REL_ARM_ADDR32NB 0x0002#define IMAGE_REL_ARM_ADDR 0x0001#define IMAGE_REL_ARM_ABSOLUTE 0x0000#define IMAGE_REL_BASED_HIGH3ADJ 11#define IMAGE_REL_BASED_DIR64 10#define IMAGE_REL_BASED_IA64_IMM64 9#define IMAGE_REL_BASED_MIPS_JMPADDR16 9#define IMAGE_REL_BASED_RISCV_LOW12S 8#define IMAGE_REL_BASED_RISCV_LOW12I 7#define IMAGE_REL_BASED_THUMB_MOV32 7#define IMAGE_REL_BASED_ARM_MOV32T 7#define IMAGE_REL_BASED_REL 7#define IMAGE_REL_BASED_SECTION 6#define IMAGE_REL_BASED_RISCV_HI20 5#define IMAGE_REL_BASED_ARM_MOV32 5#define IMAGE_REL_BASED_ARM_MOV32A 5#define IMAGE_REL_BASED_MIPS_JMPADDR 5#define IMAGE_REL_BASED_HIGHADJ 4#define IMAGE_REL_BASED_HIGHLOW 3#define IMAGE_REL_BASED_LOW 2#define IMAGE_REL_BASED_HIGH 1#define IMAGE_REL_BASED_ABSOLUTE 0#define IMAGE_SIZEOF_RELOCATION 10#define IMAGE_DIRECTORY_ENTRY_BASERELOC 5#define _PE_H#define FW_PATCHLEVEL 0x10#define FW_VERSION 0x2019#define cESC '\x1b'#define ESC "\x1b"#define EFI_COUT_MODE_2 2#define EFI_MAX_COUT_MODE 3#define MAX_PATH_LEN 1024#define MAX_NODE_LEN 512#define UNKNOWN_OUTPUT_LEN 23#define MAC_OUTPUT_LEN 22#define to_fs(x) container_of(x, struct file_system, base)#define to_fh(x) container_of(x, struct file_handle, base)#define _LINUX_LIST_SORT_H#define EFI_CARVE_OVERLAPS_NONRAM -3#define EFI_CARVE_NO_OVERLAP -1#define EFI_CARVE_LOOP_AGAIN -2#define EFI_ALLOC_POOL_MAGIC 0x1fe67ddf6491caa2#define R_MASK 0xffffffffULL#define R_RELATIVE R_X86_64_RELATIVE#define IS_RELA 1#define OBJ_LIST_NOT_INITIALIZED 1#define SMBIOS_STRUCT_EOS_BYTES 2#define SMBIOS_PROCESSOR_FAMILY_UNKNOWN 2#define SMBIOS_PROCESSOR_FAMILY_OTHER 1#define SMBIOS_PROCESSOR_UPGRADE_NONE 6#define SMBIOS_PROCESSOR_STATUS_ENABLED 1#define SMBIOS_PROCESSOR_TYPE_CENTRAL 3#define SMBIOS_SECURITY_NONE 3#define SMBIOS_STATE_SAFE 3#define SMBIOS_ENCLOSURE_DESKTOP 3#define SMBIOS_BOARD_MOTHERBOARD 10#define SMBIOS_BOARD_FEATURE_HOSTING (1 << 0)#define BIOS_CHARACTERISTICS_EXT2_TARGET (1 << 2)#define BIOS_CHARACTERISTICS_EXT1_UEFI (1 << 3)#define BIOS_CHARACTERISTICS_EXT1_ACPI (1 << 0)#define BIOS_CHARACTERISTICS_SELECTABLE_BOOT (1 << 16)#define BIOS_CHARACTERISTICS_UPGRADEABLE (1 << 11)#define BIOS_CHARACTERISTICS_PCI_SUPPORTED (1 << 7)#define SMBIOS_INTERMEDIATE_OFFSET 16#define SMBIOS_MINOR_VER 0#define SMBIOS_MAJOR_VER 3#define _SMBIOS_H_#define CP1250 { 0x20ac, 0x0000, 0x201a, 0x0000, 0x201e, 0x2026, 0x2020, 0x2021, 0x0000, 0x2030, 0x0160, 0x2039, 0x015a, 0x0164, 0x017d, 0x0179, 0x0000, 0x2018, 0x2019, 0x201c, 0x201d, 0x2022, 0x2013, 0x2014, 0x0000, 0x2122, 0x0161, 0x203a, 0x015b, 0x0165, 0x017e, 0x017a, 0x00a0, 0x02c7, 0x02d8, 0x0141, 0x00a4, 0x0104, 0x00a6, 0x00a7, 0x00a8, 0x00a9, 0x015e, 0x00ab, 0x00ac, 0x00ad, 0x00ae, 0x017b, 0x00b0, 0x00b1, 0x02db, 0x0142, 0x00b4, 0x00b5, 0x00b6, 0x00b7, 0x00b8, 0x0105, 0x015f, 0x00bb, 0x013d, 0x02dd, 0x013e, 0x017c, 0x0154, 0x00c1, 0x00c2, 0x0102, 0x00c4, 0x0139, 0x0106, 0x00c7, 0x010c, 0x00c9, 0x0118, 0x00cb, 0x011a, 0x00cd, 0x00ce, 0x010e, 0x0110, 0x0143, 0x0147, 0x00d3, 0x00d4, 0x0150, 0x00d6, 0x00d7, 0x0158, 0x016e, 0x00da, 0x0170, 0x00dc, 0x00dd, 0x0162, 0x00df, 0x0155, 0x00e1, 0x00e2, 0x0103, 0x00e4, 0x013a, 0x0107, 0x00e7, 0x010d, 0x00e9, 0x0119, 0x00eb, 0x011b, 0x00ed, 0x00ee, 0x010f, 0x0111, 0x0144, 0x0148, 0x00f3, 0x00f4, 0x0151, 0x00f6, 0x00f7, 0x0159, 0x016f, 0x00fa, 0x0171, 0x00fc, 0x00fd, 0x0163, 0x02d9, }#define CP437 { 0x00c7, 0x00fc, 0x00e9, 0x00e2, 0x00e4, 0x00e0, 0x00e5, 0x00e7, 0x00ea, 0x00eb, 0x00e8, 0x00ef, 0x00ee, 0x00ec, 0x00c4, 0x00c5, 0x00c9, 0x00e6, 0x00c6, 0x00f4, 0x00f6, 0x00f2, 0x00fb, 0x00f9, 0x00ff, 0x00d6, 0x00dc, 0x00a2, 0x00a3, 0x00a5, 0x20a7, 0x0192, 0x00e1, 0x00ed, 0x00f3, 0x00fa, 0x00f1, 0x00d1, 0x00aa, 0x00ba, 0x00bf, 0x2310, 0x00ac, 0x00bd, 0x00bc, 0x00a1, 0x00ab, 0x00bb, 0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255d, 0x255c, 0x255b, 0x2510, 0x2514, 0x2534, 0x252c, 0x251c, 0x2500, 0x253c, 0x255e, 0x255f, 0x255a, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256c, 0x2567, 0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256b, 0x256a, 0x2518, 0x250c, 0x2588, 0x2584, 0x258c, 0x2590, 0x2580, 0x03b1, 0x00df, 0x0393, 0x03c0, 0x03a3, 0x03c3, 0x00b5, 0x03c4, 0x03a6, 0x0398, 0x03a9, 0x03b4, 0x221e, 0x03c6, 0x03b5, 0x2229, 0x2261, 0x00b1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00f7, 0x2248, 0x00b0, 0x2219, 0x00b7, 0x221a, 0x207f, 0x00b2, 0x25a0, 0x00a0, }#define ACCESS_ATTR (EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_BOOTSERVICE_ACCESS)#define READ_ONLY BIT(31)#define PREFIX_LEN (strlen("efi_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx_"))#define EFI_SECONDS_TO_100NS 10000000ULL#define ERRNO_MSG(errno,msg) msg#define SAME_AS(x) (const char *)&errno_message[x]#define MAX_STR_LEN 20#define COMPAT(id,name) name#define CHECKVAL(op,expected) ({ int err = op; if (err != expected) { printf("%s: %s: expected %d, but returned %d\n", __func__, #op, expected, err); return err; } err; })#define CHECKOK(op) CHECKVAL(op, 0)#define FDT_SIZE (16 * 1024)#define CHECK(op) ({ int err = op; if (err < 0) { printf("%s: %s: %s\n", __func__, #op, fdt_strerror(err)); return err; } err; })#define MAX_NODES 20#define DEFLATED 8#define RESERVED 0xe0#define EXTRA_FIELD 4#define ORIG_NAME 8#define COMMENT 0x10#define HEAD_CRC 2#define ZALLOC_ALIGNMENT 16#define HEADER1 '\x8b'#define HEADER0 '\x1f'#define DEF_MEM_LEVEL 8#define CONFIG_GZIP_COMPRESS_DEF_SZ 0x200#define CONFIG_ENV_MIN_ENTRIES 64#define CONFIG_ENV_MAX_ENTRIES 512#define USED_DELETED -1#define USED_FREE 0#define AVB_COMPILATION 1#define AVB_MAX_NUM_CMDLINE_SUBST 10#define AVB_PART_NAME_MAX_SIZE 32#define AVB_CMDLINE_H_#define AVB_SHA512_BLOCK_SIZE 128#define AVB_SHA256_BLOCK_SIZE 64#define AVB_SHA_H_#define AVB_MAX_DIGITS_UINT64 32#define NUM_GUIDS 3#define AVB_RSA_H_#define UNPACK32(x,str) { *((str) + 3) = (uint8_t)((x)); *((str) + 2) = (uint8_t)((x) >> 8); *((str) + 1) = (uint8_t)((x) >> 16); *((str) + 0) = (uint8_t)((x) >> 24); }#define PACK32(str,x) { *(x) = ((uint32_t) * ((str) + 3)) | ((uint32_t) * ((str) + 2) << 8) | ((uint32_t) * ((str) + 1) << 16) | ((uint32_t) * ((str) + 0) << 24); }#define SHA256_SCR(i) { w[i] = SHA256_F4(w[i - 2]) + w[i - 7] + SHA256_F3(w[i - 15]) + w[i - 16]; }#define SHA256_F4(x) (ROTR(x, 17) ^ ROTR(x, 19) ^ SHFR(x, 10))#define ROTR(x,n) ((x >> n) | (x << ((sizeof(x) << 3) - n)))#define SHFR(x,n) (x >> n)#define SHA256_F3(x) (ROTR(x, 7) ^ ROTR(x, 18) ^ SHFR(x, 3))#define SHA256_F2(x) (ROTR(x, 6) ^ ROTR(x, 11) ^ ROTR(x, 25))#define CH(x,y,z) ((x & y) ^ (~x & z))#define SHA256_F1(x) (ROTR(x, 2) ^ ROTR(x, 13) ^ ROTR(x, 22))#define MAJ(x,y,z) ((x & y) ^ (x & z) ^ (y & z))#define SHA256_EXP(a,b,c,d,e,f,g,h,j) { t1 = wv[h] + SHA256_F2(wv[e]) + CH(wv[e], wv[f], wv[g]) + sha256_k[j] + w[j]; t2 = SHA256_F1(wv[a]) + MAJ(wv[a], wv[b], wv[c]); wv[d] += t1; wv[h] = t1 + t2; }#define ROTL(x,n) ((x << n) | (x >> ((sizeof(x) << 3) - n)))#define UNPACK64(x,str) { *((str) + 7) = (uint8_t)x; *((str) + 6) = (uint8_t)((uint64_t)x >> 8); *((str) + 5) = (uint8_t)((uint64_t)x >> 16); *((str) + 4) = (uint8_t)((uint64_t)x >> 24); *((str) + 3) = (uint8_t)((uint64_t)x >> 32); *((str) + 2) = (uint8_t)((uint64_t)x >> 40); *((str) + 1) = (uint8_t)((uint64_t)x >> 48); *((str) + 0) = (uint8_t)((uint64_t)x >> 56); }#define PACK64(str,x) { *(x) = ((uint64_t) * ((str) + 7)) | ((uint64_t) * ((str) + 6) << 8) | ((uint64_t) * ((str) + 5) << 16) | ((uint64_t) * ((str) + 4) << 24) | ((uint64_t) * ((str) + 3) << 32) | ((uint64_t) * ((str) + 2) << 40) | ((uint64_t) * ((str) + 1) << 48) | ((uint64_t) * ((str) + 0) << 56); }#define SHA512_SCR(i) { w[i] = SHA512_F4(w[i - 2]) + w[i - 7] + SHA512_F3(w[i - 15]) + w[i - 16]; }#define SHA512_F4(x) (ROTR(x, 19) ^ ROTR(x, 61) ^ SHFR(x, 6))#define SHA512_F3(x) (ROTR(x, 1) ^ ROTR(x, 8) ^ SHFR(x, 7))#define SHA512_F2(x) (ROTR(x, 14) ^ ROTR(x, 18) ^ ROTR(x, 41))#define SHA512_F1(x) (ROTR(x, 28) ^ ROTR(x, 34) ^ ROTR(x, 39))#define SHA512_EXP(a,b,c,d,e,f,g,h,j) { t1 = wv[h] + SHA512_F2(wv[e]) + CH(wv[e], wv[f], wv[g]) + sha512_k[j] + w[j]; t2 = SHA512_F1(wv[a]) + MAJ(wv[a], wv[b], wv[c]); wv[d] += t1; wv[h] = t1 + t2; }#define MAX_NUMBER_OF_VBMETA_IMAGES 32#define MAX_NUMBER_OF_LOADED_PARTITIONS 32#define VBMETA_MAX_SIZE (64 * 1024)#define AVB_STRDUPV_MAX_NUM_STRINGS 32#define AVB_EXPAND_AND_QUOTE(str) AVB_QUOTE(str)#define AVB_QUOTE(str) #str#define FDT_SW_MAGIC (~FDT_MAGIC)#define FDT_CHECK_HEADER(fdt) { int err_; if ((err_ = fdt_check_header(fdt)) != 0) return err_; }#define FDT_TAGALIGN(x) (FDT_ALIGN((x), FDT_TAGSIZE))#define FDT_ALIGN(x,a) (((x) + (a) - 1) & ~((a) - 1))#define LIBFDT_INTERNAL_H#define FDT_RW_CHECK_HEADER(fdt) { int err_; if ((err_ = fdt_rw_check_header_(fdt)) != 0) return err_; }#define FDT_ERRTABSIZE (sizeof(fdt_errtable) / sizeof(fdt_errtable[0]))#define FDT_ERRTABENT(val) [(val)] = { .str = #val, }#define FDT_SW_CHECK_HEADER(fdt) { int err; if ((err = fdt_sw_check_header_(fdt)) != 0) return err; }#define MAX_LIST_LENGTH_BITS 20#define LMB_ALLOC_ANYWHERE 0#define KB *(1 <<10)#define COPYLENGTH 8#define MFLIMIT (COPYLENGTH+MINMATCH)#define MINMATCH 4#define ML_BITS 4#define RUN_MASK ((1U<<RUN_BITS)-1)#define RUN_BITS (8-ML_BITS)#define LASTLITERALS 5#define ML_MASK ((1U<<ML_BITS)-1)#define MAX_DISTANCE ((1 << MAXD_LOG) - 1)#define MAXD_LOG 16#define GB *(1U<<30)#define MB *(1 <<20)#define FORCE_INLINE static inline __attribute__((always_inline))#define CLzmaProb UInt32#define _LZMA_PROB32 1#define RC_INIT_SIZE 5#define LzmaProps_GetNumProbs(p) ((UInt32)LZMA_BASE_SIZE + (LZMA_LIT_SIZE << ((p)->lc + (p)->lp)))#define LZMA_BASE_SIZE 1846#define LZMA_LIT_SIZE 768#define LZMA_DIC_MIN (1 << 12)#define kMatchMinLen 2#define kMatchSpecLenStart (kMatchMinLen + kLenNumLowSymbols + kLenNumMidSymbols + kLenNumHighSymbols)#define kLenNumLowSymbols (1 << kLenNumLowBits)#define kLenNumLowBits 3#define kLenNumMidSymbols (1 << kLenNumMidBits)#define kLenNumMidBits 3#define kLenNumHighSymbols (1 << kLenNumHighBits)#define kLenNumHighBits 8#define Literal (RepLenCoder + kNumLenProbs)#define RepLenCoder (LenCoder + kNumLenProbs)#define LenCoder (Align + kAlignTableSize)#define Align (SpecPos + kNumFullDistances - kEndPosModelIndex)#define SpecPos (PosSlot + (kNumLenToPosStates << kNumPosSlotBits))#define PosSlot (IsRep0Long + (kNumStates << kNumPosBitsMax))#define IsRep0Long (IsRepG2 + kNumStates)#define IsRepG2 (IsRepG1 + kNumStates)#define IsRepG1 (IsRepG0 + kNumStates)#define IsRepG0 (IsRep + kNumStates)#define IsRep (IsMatch + (kNumStates << kNumPosBitsMax))#define IsMatch 0#define kNumStates 12#define kNumPosBitsMax 4#define kNumLenToPosStates 4#define kNumPosSlotBits 6#define kNumFullDistances (1 << (kEndPosModelIndex >> 1))#define kEndPosModelIndex 14#define kAlignTableSize (1 << kNumAlignBits)#define kNumAlignBits 4#define kNumLenProbs (LenHigh + kLenNumHighSymbols)#define LenHigh (LenMid + (kNumPosStatesMax << kLenNumMidBits))#define LenMid (LenLow + (kNumPosStatesMax << kLenNumLowBits))#define LenLow (LenChoice2 + 1)#define LenChoice2 (LenChoice + 1)#define LenChoice 0#define kNumPosStatesMax (1 << kNumPosBitsMax)#define kBitModelTotal (1 << kNumBitModelTotalBits)#define kNumBitModelTotalBits 11#define IF_BIT_0_CHECK(p) ttt = *(p); NORMALIZE_CHECK; bound = (range >> kNumBitModelTotalBits) * ttt; if (code < bound)#define NORMALIZE_CHECK if (range < kTopValue) { if (buf >= bufLimit) return DUMMY_ERROR; range <<= 8; code = (code << 8) | (*buf++); }#define kTopValue ((UInt32)1 << kNumTopBits)#define kNumTopBits 24#define UPDATE_0_CHECK range = bound;#define kNumLitStates 7#define GET_BIT2_CHECK(p,i,A0,A1) IF_BIT_0_CHECK(p) { UPDATE_0_CHECK; i = (i + i); A0; } else { UPDATE_1_CHECK; i = (i + i) + 1; A1; }#define GET_BIT_CHECK(p,i) GET_BIT2_CHECK(p, i, ; , ;)#define UPDATE_1_CHECK range -= bound; code -= bound;#define TREE_DECODE_CHECK(probs,limit,i) { i = 1; do { GET_BIT_CHECK(probs + i, i) } while (i < limit); i -= limit; }#define kStartPosModelIndex 4#define IF_BIT_0(p) ttt = *(p); NORMALIZE; bound = (range >> kNumBitModelTotalBits) * ttt; if (code < bound)#define NORMALIZE if (range < kTopValue) { range <<= 8; code = (code << 8) | (*buf++); }#define UPDATE_0(p) range = bound; *(p) = (CLzmaProb)(ttt + ((kBitModelTotal - ttt) >> kNumMoveBits));#define kNumMoveBits 5#define GET_BIT2(p,i,A0,A1) IF_BIT_0(p) { UPDATE_0(p); i = (i + i); A0; } else { UPDATE_1(p); i = (i + i) + 1; A1; }#define GET_BIT(p,i) GET_BIT2(p, i, ; , ;)#define UPDATE_1(p) range -= bound; code -= bound; *(p) = (CLzmaProb)(ttt - (ttt >> kNumMoveBits));#define TREE_DECODE(probs,limit,i) { i = 1; do { TREE_GET_BIT(probs, i); } while (i < limit); i -= limit; }#define TREE_GET_BIT(probs,i) { GET_BIT((probs + i), i); }#define TREE_6_DECODE(probs,i) { i = 1; TREE_GET_BIT(probs, i); TREE_GET_BIT(probs, i); TREE_GET_BIT(probs, i); TREE_GET_BIT(probs, i); TREE_GET_BIT(probs, i); TREE_GET_BIT(probs, i); i -= 0x40; }#define LZMA_PROPERTIES_OFFSET 0#define LZMA_SIZE_OFFSET LZMA_PROPS_SIZE#define LZMA_DATA_OFFSET LZMA_SIZE_OFFSET+sizeof(uint64_t)#define DX3(p,s1,s2,s3) ((DX2((p)+1, s2, s3) << (s1)) ^ (p)[0])#define DX2(p,s1,s2) (((((size_t)((p)[2]) << (s2)) ^ (p)[1]) << (s1)) ^ (p)[0])#define D_HIGH ((D_MASK >> 1) + 1)#define D_MASK ((1u << D_BITS) - 1)#define D_BITS 14#define M4_MARKER 16#define M3_MARKER 32#define M2_MARKER 64#define M1_MARKER 0#define M4_MAX_LEN 9#define M4_MIN_LEN 3#define M3_MAX_LEN 33#define M3_MIN_LEN 3#define M2_MAX_LEN 8#define M2_MIN_LEN 3#define M1_MAX_LEN 2#define M1_MIN_LEN 2#define M4_MAX_OFFSET 0xbfff#define M3_MAX_OFFSET 0x4000#define M2_MAX_OFFSET 0x0800#define M1_MAX_OFFSET 0x0400#define LZO_VERSION_DATE "Oct 17 2005"#define LZO_VERSION_STRING "2.02"#define LZO_VERSION 0x2020#define HAVE_OP(x,op_end,op) ((size_t)(op_end - op) < (x))#define HAVE_IP(x,ip_end,ip) ((size_t)(ip_end - ip) < (x))#define COPY4(dst,src) put_unaligned(get_unaligned((const u32 *)(src)), (u32 *)(dst))#define HAVE_LB(m_pos,out,op) (m_pos < out || m_pos >= op)#define HEADER_HAS_FILTER 0x00000800L#define _PTRDIFF_T_DECLARED#define _GCC_PTRDIFF_T#define ___int_ptrdiff_t_h#define _BSD_PTRDIFF_T_#define __PTRDIFF_T#define _T_PTRDIFF#define _T_PTRDIFF_#define __PTRDIFF_TYPE__ long int#define MD5STEP(f,w,x,y,z,data,s) ( w += f(x, y, z) + data, w = w<<s | w>>(32-s), w += x )#define F1(x,y,z) (z ^ (x & (y ^ z)))#define F2(x,y,z) F1(z, x, y)#define F3(x,y,z) (x ^ y ^ z)#define F4(x,y,z) (y ^ (x | ~z))#define __rb_parent(pc) ((struct rb_node *)(pc & ~3))#define __rb_is_black(pc) __rb_color(pc)#define __rb_color(pc) ((pc) & 1)#define RB_BLACK 1#define rb_color(rb) __rb_color((rb)->__rb_parent_color)#define rb_is_black(rb) __rb_is_black((rb)->__rb_parent_color)#define rb_is_red(rb) __rb_is_red((rb)->__rb_parent_color)#define __rb_is_red(pc) (!__rb_color(pc))#define RB_RED 0#define RB_DECLARE_CALLBACKS(rbstatic,rbname,rbstruct,rbfield,rbtype,rbaugmented,rbcompute) static inline void rbname ## _propagate(struct rb_node *rb, struct rb_node *stop) { while (rb != stop) { rbstruct *node = rb_entry(rb, rbstruct, rbfield); rbtype augmented = rbcompute(node); if (node->rbaugmented == augmented) break; node->rbaugmented = augmented; rb = rb_parent(&node->rbfield); } } static inline void rbname ## _copy(struct rb_node *rb_old, struct rb_node *rb_new) { rbstruct *old = rb_entry(rb_old, rbstruct, rbfield); rbstruct *new = rb_entry(rb_new, rbstruct, rbfield); new->rbaugmented = old->rbaugmented; } static void rbname ## _rotate(struct rb_node *rb_old, struct rb_node *rb_new) { rbstruct *old = rb_entry(rb_old, rbstruct, rbfield); rbstruct *new = rb_entry(rb_new, rbstruct, rbfield); new->rbaugmented = old->rbaugmented; old->rbaugmented = rbcompute(old); } rbstatic const struct rb_augment_callbacks rbname = { rbname ## _propagate, rbname ## _copy, rbname ## _rotate };#define _LINUX_RBTREE_AUGMENTED_H#define __RC4_H#define RSA_DEFAULT_PUBEXP 65537#define get_unaligned_be32(a) fdt32_to_cpu(*(uint32_t *)a)#define put_unaligned_be32(a,b) (*(uint32_t *)(b) = cpu_to_fdt32(a))#define UINT64_MULT32(v,multby) (((uint64_t)(v)) * ((uint32_t)(multby)))#define PUT_UINT32_BE(n,b,i) { (b)[(i) ] = (unsigned char) ( (n) >> 24 ); (b)[(i) + 1] = (unsigned char) ( (n) >> 16 ); (b)[(i) + 2] = (unsigned char) ( (n) >> 8 ); (b)[(i) + 3] = (unsigned char) ( (n) ); }#define GET_UINT32_BE(n,b,i) { (n) = ( (unsigned long) (b)[(i) ] << 24 ) | ( (unsigned long) (b)[(i) + 1] << 16 ) | ( (unsigned long) (b)[(i) + 2] << 8 ) | ( (unsigned long) (b)[(i) + 3] ); }#define P(a,b,c,d,e,x) { e += S(a,5) + F(b,c,d) + K + x; b = S(b,30); }#define S(x,n) ((x << n) | ((x & 0xFFFFFFFF) >> (32 - n)))#define F(x,y,z) (z ^ (x & (y ^ z)))#define K 0x5A827999#define R(t) ( temp = W[(t - 3) & 0x0F] ^ W[(t - 8) & 0x0F] ^ W[(t - 14) & 0x0F] ^ W[ t & 0x0F], ( W[t & 0x0F] = S(temp,1) ) )#define F(x,y,z) (x ^ y ^ z)#define K 0x6ED9EBA1#define F(x,y,z) ((x & y) | (z & (x | y)))#define K 0x8F1BBCDC#define K 0xCA62C1D6#define _CRT_SECURE_NO_DEPRECATE 1#define P(a,b,c,d,e,f,g,h,x,K) { temp1 = h + S3(e) + F1(e,f,g) + K + x; temp2 = S2(a) + F0(a,b,c); d += temp1; h = temp1 + temp2; }#define SHR(x,n) ((x & 0xFFFFFFFF) >> n)#define ROTR(x,n) (SHR(x,n) | (x << (32 - n)))#define S3(x) (ROTR(x, 6) ^ ROTR(x,11) ^ ROTR(x,25))#define S2(x) (ROTR(x, 2) ^ ROTR(x,13) ^ ROTR(x,22))#define F0(x,y,z) ((x & y) | (z & (x | y)))#define R(t) ( W[t] = S1(W[t - 2]) + W[t - 7] + S0(W[t - 15]) + W[t - 16] )#define S1(x) (ROTR(x,17) ^ ROTR(x,19) ^ SHR(x,10))#define S0(x) (ROTR(x, 7) ^ ROTR(x,18) ^ SHR(x, 3))#define _TABLES_CSUM_H_#define CONFIG_WD_PERIOD (10 * 1000 * 1000)#define LOG_CATEGORY UCLASS_TPM#define tpm_u32(x) tpm_u16((x) >> 16), tpm_u16((x) & 0xFFFF)#define tpm_u16(x) __MSB(x), __LSB(x)#define __LSB(x) ((x) & 0xFF)#define __MSB(x) ((x) >> 8)#define TPM_LIB_ERROR ((u32)~0u)#define COMMAND_BUFFER_SIZE 256#define __TPM_UTILS_H#define ADDCH(str,ch) do { if ((str) < end) *(str) = (ch); ++str; } while (0)#define LEFT 16#define PLUS 4#define SPACE 8#define SPECIAL 64#define ZEROPAD 1#define is_digit(c) ((c) >= '0' && (c) <= '9')#define SMALL 32#define SIGN 2#define xxh_rotl64(x,r) ((x << r) | (x >> (64 - r)))#define xxh_rotl32(x,r) ((x << r) | (x >> (32 - r)))#define XXH_CPU_LITTLE_ENDIAN 1#define NO_DUMMY_DECL#define ZUTIL_H#define GUNZIP#define __GLUE_ZLIB_H__#define TRY_FREE(s,p) {if (p) ZFREE(s, p);}#define ZFREE(strm,addr) (*((strm)->zfree))((strm)->opaque, (voidpf)(addr), 0)#define ZALLOC(strm,items,size) (*((strm)->zalloc))((strm)->opaque, (items), (size))#define Tracecv(c,x)#define Tracec(c,x)#define Tracevv(x)#define Tracev(x)#define Trace(x)#define Assert(cond,msg)#define zmemzero(dest,len) memset(dest, 0, len)#define zmemcmp memcmp#define zmemcpy memcpy#define OS_CODE 0x03#define MAX_MATCH 258#define MIN_MATCH 3#define DYN_TREES 2#define STATIC_TREES 1#define STORED_BLOCK 0#define DEF_WBITS MAX_WBITS#define ERR_RETURN(strm,err) return (strm->msg = (char*)ERR_MSG(err), (err))#define ERR_MSG(err) z_errmsg[Z_NEED_DICT-(err)]#define local static#define ZLIB_INTERNAL#define LITERALS 256#define L_CODES (LITERALS+1+LENGTH_CODES)#define LENGTH_CODES 29#define MAX_BITS 15#define BL_CODES 19#define D_CODES 30#define HEAP_SIZE (2*L_CODES+1)#define _tr_tally_dist(s,distance,length,flush) { uch len = (length); ush dist = (distance); s->d_buf[s->last_lit] = dist; s->l_buf[s->last_lit++] = len; dist--; s->dyn_ltree[_length_code[len]+LITERALS+1].Freq++; s->dyn_dtree[d_code(dist)].Freq++; flush = (s->last_lit == s->lit_bufsize-1); }#define _tr_tally_lit(s,c,flush) { uch cc = (c); s->d_buf[s->last_lit] = 0; s->l_buf[s->last_lit++] = cc; s->dyn_ltree[cc].Freq++; flush = (s->last_lit == s->lit_bufsize-1); }#define d_code(dist) ((dist) < 256 ? _dist_code[dist] : _dist_code[256+((dist)>>7)])#define WIN_INIT MAX_MATCH#define MAX_DIST(s) ((s)->w_size-MIN_LOOKAHEAD)#define MIN_LOOKAHEAD (MAX_MATCH+MIN_MATCH+1)#define put_byte(s,c) {s->pending_buf[s->pending++] = (c);}#define max_insert_length max_lazy_match#define Len dl.len#define Dad dl.dad#define Code fc.code#define Freq fc.freq#define FINISH_STATE 666#define BUSY_STATE 113#define HCRC_STATE 103#define COMMENT_STATE 91#define NAME_STATE 73#define EXTRA_STATE 69#define INIT_STATE 42#define GZIP#define DEFLATE_H#define FLUSH_BLOCK_ONLY(s,last) { _tr_flush_block(s, (s->block_start >= 0L ? (charf *)&s->window[(unsigned)s->block_start] : (charf *)Z_NULL), (ulg)((long)s->strstart - s->block_start), (last)); s->block_start = s->strstart; flush_pending(s->strm); Tracev((stderr,"[FLUSH]")); }#define FLUSH_BLOCK(s,last) { FLUSH_BLOCK_ONLY(s, last); if (s->strm->avail_out == 0) return (last) ? finish_started : need_more; }#define check_match(s,start,match,length)#define NIL 0#define INSERT_STRING(s,str,match_head) (UPDATE_HASH(s, s->ins_h, s->window[(str) + (MIN_MATCH-1)]), match_head = s->prev[(str) & s->w_mask] = s->head[s->ins_h], s->head[s->ins_h] = (Pos)(str))#define UPDATE_HASH(s,h,c) (h = (((h)<<s->hash_shift) ^ (c)) & s->hash_mask)#define TOO_FAR 4096#define CLEAR_HASH(s) s->head[s->hash_size-1] = NIL; zmemzero((Bytef *)s->head, (unsigned)(s->hash_size-1)*sizeof(*s->head));#define EQUAL 0#define put_short(s,w) { put_byte(s, (uch)((w) & 0xff)); put_byte(s, (uch)((ush)(w) >> 8)); }#define send_bits(s,value,length) { int len = length; if (s->bi_valid > (int)Buf_size - len) { int val = value; s->bi_buf |= (ush)val << s->bi_valid; put_short(s, s->bi_buf); s->bi_buf = (ush)val >> (Buf_size - s->bi_valid); s->bi_valid += len - Buf_size; } else { s->bi_buf |= (ush)(value) << s->bi_valid; s->bi_valid += len; }}#define send_code(s,c,tree) send_bits(s, tree[c].Code, tree[c].Len)#define Buf_size (8 * 2*sizeof(char))#define DIST_CODE_LEN 512#define END_BLOCK 256#define REP_3_6 16#define REPZ_3_10 17#define REPZ_11_138 18#define pqremove(s,tree,top) { top = s->heap[SMALLEST]; s->heap[SMALLEST] = s->heap[s->heap_len--]; pqdownheap(s, tree, SMALLEST); }#define SMALLEST 1#define smaller(tree,n,m,depth) (tree[n].Freq < tree[m].Freq || (tree[n].Freq == tree[m].Freq && depth[n] <= depth[m]))#define MAX_BL_BITS 7#define MAXD 592#define ENOUGH 2048#define OFF 1#define PUP(a) *++(a)#define MAXBITS 15#define LOAD() do { put = strm->next_out; left = strm->avail_out; next = strm->next_in; have = strm->avail_in; hold = state->hold; bits = state->bits; } while (0)#define NEEDBITS(n) do { while (bits < (unsigned)(n)) PULLBYTE(); } while (0)#define PULLBYTE() do { if (have == 0) goto inf_leave; have--; hold += (unsigned long)(*next++) << bits; bits += 8; } while (0)#define CRC2(check,word) do { hbuf[0] = (unsigned char)(word); hbuf[1] = (unsigned char)((word) >> 8); check = crc32(check, hbuf, 2); } while (0)#define INITBITS() do { hold = 0; bits = 0; } while (0)#define BITS(n) ((unsigned)hold & ((1U << (n)) - 1))#define DROPBITS(n) do { hold >>= (n); bits -= (unsigned)(n); } while (0)#define CRC4(check,word) do { hbuf[0] = (unsigned char)(word); hbuf[1] = (unsigned char)((word) >> 8); hbuf[2] = (unsigned char)((word) >> 16); hbuf[3] = (unsigned char)((word) >> 24); check = crc32(check, hbuf, 4); } while (0)#define REVERSE(q) ((((q) >> 24) & 0xff) + (((q) >> 8) & 0xff00) + (((q) & 0xff00) << 8) + (((q) & 0xff) << 24))#define RESTORE() do { strm->next_out = put; strm->avail_out = left; strm->next_in = next; strm->avail_in = have; state->hold = hold; state->bits = bits; } while (0)#define BYTEBITS() do { hold >>= bits & 7; bits -= bits & 7; } while (0)#define UPDATE(check,buf,len) (state->flags ? crc32(check, buf, len) : adler32(check, buf, len))#define BASE 65521UL#define MOD4(a) a %= BASE#define NMAX 5552#define DO1(buf,i) {adler += (buf)[i]; sum2 += adler;}#define DO2(buf,i) DO1(buf,i); DO1(buf,i+1);#define DO4(buf,i) DO2(buf,i); DO2(buf,i+2);#define DO8(buf,i) DO4(buf,i); DO4(buf,i+4);#define DO16(buf) DO8(buf,0); DO8(buf,8);#define MOD(a) a %= BASE#define XXHASH_H#define ZSTD_REP_NUM 3#define OF_DEFAULTNORMLOG 5#define MaxOff 28#define ML_DEFAULTNORMLOG 6#define MaxML 52#define LL_DEFAULTNORMLOG 6#define MaxLL 35#define ZSTD_BLOCKHEADERSIZE 3#define ZSTD_PTR_ALIGN(p) PTR_ALIGN(p, sizeof(size_t))#define ZSTD_ALIGN(x) ALIGN(x, sizeof(size_t))#define WILDCOPY_OVERLENGTH 8#define OffFSELog 8#define LLFSELog 9#define MLFSELog 9#define MaxSeq MAX(MaxLL, MaxML)#define MaxLit ((1 << Litbits) - 1)#define Litbits 8#define EQUAL_READ32 4#define MINMATCH 3#define LONGNBSEQ 0x7F00#define HufLog 12#define MIN_CBLOCK_SIZE (1 + 1 + MIN_SEQUENCES_SIZE )#define MIN_SEQUENCES_SIZE 1#define ZSTD_WINDOWLOG_ABSOLUTEMIN 10#define BIT0 1#define BIT1 2#define BIT4 16#define BIT5 32#define BIT6 64#define BIT7 128#define GB *(1U << 30)#define MB *(1 << 20)#define KB *(1 << 10)#define ZSTD_REP_MOVE_OPT (ZSTD_REP_NUM)#define ZSTD_REP_MOVE (ZSTD_REP_NUM - 1)#define ZSTD_REP_CHECK (ZSTD_REP_NUM)#define ZSTD_DICT_MAGIC 0xEC30A437#define ZSTD_OPT_NUM (1 << 12)#define ZSTD_STATIC_ASSERT(c) { enum { ZSTD_static_assert = 1 / (int)(!!(c)) }; }#define CHECK_E(f,e) { size_t const errcod = f; if (ERR_isError(errcod)) return ERROR(e); }#define CHECK_F(f) { size_t const errcod = f; if (ERR_isError(errcod)) return errcod; }#define MAX(a,b) ((a) > (b) ? (a) : (b))#define MIN(a,b) ((a) < (b) ? (a) : (b))#define FORCE_NOINLINE static noinline#define FORCE_INLINE static __always_inline#define ZSTD_CCOMMON_H_MODULE#define ZSTD_STATIC static __inline __attribute__((unused))#define ZSTD_isError ERR_isError#define PREFIX(name) ZSTD_error_ ## name#define ERROR(name) ((size_t)-PREFIX(name))#define ZSTD_MAXWINDOWSIZE_DEFAULT ((1 << ZSTD_WINDOWLOG_MAX) + 1)#define HUF_DTABLE_SIZE(maxTableLog) (1 + (1 << (maxTableLog)))#define FSE_DTABLE_SIZE_U32(maxTableLog) (1 + (1 << maxTableLog))#define HUF_DECOMPRESS_WORKSPACE_SIZE (3 << 10)#define HUF_DECOMPRESS_WORKSPACE_SIZE_U32 (HUF_DECOMPRESS_WORKSPACE_SIZE / sizeof(U32))#define HUF_isError ERR_isError#define FSE_isError ERR_isError#define ADVANCED_SEQS 4#define STORED_SEQS 4#define STOSEQ_MASK (STORED_SEQS - 1)#define ZSTD_PREFETCH(ptr) __builtin_prefetch(ptr, 0, 0)#define STREAM_ACCUMULATOR_MIN ((U32)(ZSTD_32bits() ? STREAM_ACCUMULATOR_MIN_32 : STREAM_ACCUMULATOR_MIN_64))#define STREAM_ACCUMULATOR_MIN_32 25#define STREAM_ACCUMULATOR_MIN_64 57#define HUF_TABLELOG_MAX 12#define FSE_MIN_TABLELOG 5#define FSE_TABLELOG_ABSOLUTE_MAX 15#define FSE_VERSION_MAJOR 0#define FSE_VERSION_NUMBER (FSE_VERSION_MAJOR * 100 * 100 + FSE_VERSION_MINOR * 100 + FSE_VERSION_RELEASE)#define FSE_VERSION_MINOR 9#define FSE_VERSION_RELEASE 0#define FSE_MAX_SYMBOL_VALUE 255#define FSE_STATIC_ASSERT(c) { enum { FSE_static_assert = 1 / (int)(!!(c)) }; }#define CHECK_F(f) { size_t const e = f; if (FSE_isError(e)) return e; }#define FSE_GETSYMBOL(statePtr) fast ? FSE_decodeSymbolFast(statePtr, &bitD) : FSE_decodeSymbol(statePtr, &bitD)#define FSE_MAX_MEMORY_USAGE 14#define FSE_MAX_TABLELOG (FSE_MAX_MEMORY_USAGE - 2)#define FSE_DECODE_TYPE FSE_decode_t#define FSE_FUNCTION_TYPE BYTE#define FSE_TABLESTEP(tableSize) ((tableSize >> 1) + (tableSize >> 3) + 3)#define FSE_TYPE_NAME(X,Y) FSE_CAT(X, Y)#define FSE_FUNCTION_NAME(X,Y) FSE_CAT(X, Y)#define FSE_CAT(X,Y) X ## Y#define FSE_FUNCTION_EXTENSION#define ERR_STATIC static __attribute__((unused))#define ERROR_H_MODULE#define ZSTD_LITTLE_ENDIAN 1#define MEM_H_MODULE#define BITSTREAM_H_MODULE#define FSE_DEFAULT_TABLELOG (FSE_DEFAULT_MEMORY_USAGE - 2)#define FSE_MAXTABLESIZE_MASK (FSE_MAX_TABLESIZE - 1)#define FSE_MAX_TABLESIZE (1U << FSE_MAX_TABLELOG)#define FSE_DEFAULT_MEMORY_USAGE 13#define FSE_CTABLE_SIZE_U32(maxTableLog,maxSymbolValue) (1 + (1 << (maxTableLog - 1)) + ((maxSymbolValue + 1) * 2))#define FSE_COMPRESSBOUND(size) (FSE_NCOUNTBOUND + FSE_BLOCKBOUND(size))#define FSE_BLOCKBOUND(size) (size + (size >> 7))#define FSE_NCOUNTBOUND 512#define FSE_VERSION_STRING FSE_EXPAND_AND_QUOTE(FSE_LIB_VERSION)#define FSE_EXPAND_AND_QUOTE(str) FSE_QUOTE(str)#define FSE_QUOTE(str) #str#define FSE_LIB_VERSION FSE_VERSION_MAJOR.FSE_VERSION_MINOR.FSE_VERSION_RELEASE#define FSE_PUBLIC_API#define FSE_H#define HUF_COMPRESS_WORKSPACE_SIZE_U32 (HUF_COMPRESS_WORKSPACE_SIZE / sizeof(U32))#define HUF_COMPRESS_WORKSPACE_SIZE (6 << 10)#define HUF_CREATE_STATIC_DTABLEX4(DTable,maxTableLog) HUF_DTable DTable[HUF_DTABLE_SIZE(maxTableLog)] = {((U32)(maxTableLog)*0x01000001)}#define HUF_CREATE_STATIC_DTABLEX2(DTable,maxTableLog) HUF_DTable DTable[HUF_DTABLE_SIZE((maxTableLog)-1)] = {((U32)((maxTableLog)-1) * 0x01000001)}#define HUF_CREATE_STATIC_CTABLE(name,maxSymbolValue) U32 name ## hb[maxSymbolValue + 1]; void *name ## hv = &(name ## hb); HUF_CElt *name = (HUF_CElt *)(name ## hv)#define HUF_COMPRESSBOUND(size) (HUF_CTABLEBOUND + HUF_BLOCKBOUND(size))#define HUF_BLOCKBOUND(size) (size + (size >> 8) + 8)#define HUF_CTABLEBOUND 129#define HUF_TABLELOG_ABSOLUTEMAX 15#define HUF_SYMBOLVALUE_MAX 255#define HUF_TABLELOG_DEFAULT 11#define HUF_BLOCKSIZE_MAX (128 * 1024)#define HUF_H_298734234#define HUF_DECODE_SYMBOLX4_2(ptr,DStreamPtr) if (ZSTD_64bits()) ptr += HUF_decodeSymbolX4(ptr, DStreamPtr, dt, dtLog)#define HUF_DECODE_SYMBOLX4_1(ptr,DStreamPtr) if (ZSTD_64bits() || (HUF_TABLELOG_MAX <= 12)) ptr += HUF_decodeSymbolX4(ptr, DStreamPtr, dt, dtLog)#define HUF_DECODE_SYMBOLX4_0(ptr,DStreamPtr) ptr += HUF_decodeSymbolX4(ptr, DStreamPtr, dt, dtLog)#define HUF_STATIC_ASSERT(c) { enum { HUF_static_assert = 1 / (int)(!!(c)) }; }#define HUF_DECODE_SYMBOLX2_2(ptr,DStreamPtr) if (ZSTD_64bits()) HUF_DECODE_SYMBOLX2_0(ptr, DStreamPtr)#define HUF_DECODE_SYMBOLX2_0(ptr,DStreamPtr) *ptr++ = HUF_decodeSymbolX2(DStreamPtr, dt, dtLog)#define HUF_DECODE_SYMBOLX2_1(ptr,DStreamPtr) if (ZSTD_64bits() || (HUF_TABLELOG_MAX <= 12)) HUF_DECODE_SYMBOLX2_0(ptr, DStreamPtr)#define stack_push(stack,size) ({ void *const ptr = ZSTD_PTR_ALIGN((stack)->ptr); (stack)->ptr = (char *)ptr + (size); (stack)->ptr <= (stack)->end ? ptr : NULL; })#define __ARP_H__#define ARP_TIMEOUT 5000UL#define ARP_TIMEOUT_COUNT 5#define __TFTP_H__#define OPT_FIELD_SIZE 312#define DHCP_RELEASE 7#define DHCP_NAK 6#define DHCP_ACK 5#define DHCP_DECLINE 4#define DHCP_REQUEST 3#define DHCP_OFFER 2#define DHCP_DISCOVER 1#define BOOTP_HDR_SIZE sizeof(struct bootp_hdr)#define HWL_ETHER 6#define HWT_ETHER 1#define OP_BOOTREPLY 2#define OP_BOOTREQUEST 1#define __BOOTP_H__#define PORT_BOOTPS 67#define PORT_BOOTPC 68#define BOOTP_VENDOR_MAGIC 0x63825363#define OVERLOAD_FILE 1#define OVERLOAD_SNAME 2#define TIMEOUT_MS ((3 + (TIMEOUT_COUNT * 5)) * 1000)#define TIMEOUT_COUNT 5#define CONFIG_DHCP_MIN_EXT_LEN 64#define put_vci(e,str) do { size_t vci_strlen = strlen(str); *e++ = 60; *e++ = vci_strlen; memcpy(e, str, vci_strlen); e += vci_strlen; } while (0)#define CONFIG_BOOTP_ID_CACHE_SIZE 4#define __CDP_H__#define CDP_TIMEOUT 250UL#define CDP_DEVICE_ID_TLV 0x0001#define CDP_ADDRESS_TLV 0x0002#define CDP_PORT_ID_TLV 0x0003#define CDP_CAPABILITIES_TLV 0x0004#define CDP_VERSION_TLV 0x0005#define CDP_PLATFORM_TLV 0x0006#define CDP_NATIVE_VLAN_TLV 0x000a#define CDP_APPLIANCE_VLAN_TLV 0x000e#define CDP_TRIGGER_TLV 0x000f#define CDP_POWER_CONSUMPTION_TLV 0x0010#define CDP_SYSNAME_TLV 0x0014#define CDP_SYSOBJECT_TLV 0x0015#define CDP_MANAGEMENT_ADDRESS_TLV 0x0016#define DNS_TIMEOUT 10000UL#define DNS_SERVICE_PORT 53#define __DNS_H__#define __ETH_INTERNAL_H#define WELL_KNOWN_PORT 5554#define DATA_SIZE (PACKET_SIZE - sizeof(struct fastboot_header))#define PACKET_SIZE 1024#define __NET_RAND_H__#define MONOTONIC_MS() ((unsigned)get_timer(0) * (1000 / CONFIG_SYS_HZ))#define MDIO_MUX_CHILD_DRV_NAME "mdio-mux-bus-drv"#define __LINK_LOCAL_H__#define NFS_READ_SIZE 1024#define NFS_MAX_ATTRS 26#define NFSERR_INVAL 22#define NFSERR_ISDIR 21#define NFSERR_ACCES 13#define NFSERR_NOENT 2#define NFSERR_PERM 1#define NFS3_FHSIZE 64#define NFS_FHSIZE 32#define NFS3PROC_LOOKUP 3#define NFS_READ 6#define NFS_READLINK 5#define NFS_LOOKUP 4#define MOUNT_UMOUNTALL 4#define MOUNT_ADDENTRY 1#define PORTMAP_GETPORT 3#define MSG_REPLY 1#define MSG_CALL 0#define PROG_MOUNT 100005#define PROG_NFS 100003#define PROG_PORTMAP 100000#define SUNRPC_PORT 111#define __NFS_H__#define __PING_H__#define __RARP_H__#define NTP_MODE_PRIVATE 7#define NTP_MODE_NTPCTRL 6#define NTP_MODE_BROADCAST 5#define NTP_MODE_SERVER 4#define NTP_MODE_CLIENT 3#define NTP_MODE_SYMPASSIVE 2#define NTP_MODE_SYMACTIVE 1#define NTP_MODE_RESERVED 0#define NTP_VERSION 4#define NTP_LI_ALARM 0x3#define NTP_LI_59SECS 0x2#define NTP_LI_61SECS 0x1#define NTP_LI_NOLEAP 0x0#define SNTP_PACKET_LEN 48#define NTP_SERVICE_PORT 123#define __SNTP_H__#define IP_PKTSIZE (CONFIG_NET_MAXDEFRAG)#define CONFIG_NET_MAXDEFRAG 16384#define IP_MAXUDP (IP_PKTSIZE - IP_HDR_SIZE)#define STATE_PRCLOOKUP_PROG_MOUNT_REQ 1#define NFS_RPC_DROP 124#define STATE_PRCLOOKUP_PROG_NFS_REQ 2#define STATE_MOUNT_REQ 3#define NFS_RPC_ERR 1#define STATE_UMOUNT_REQ 4#define STATE_LOOKUP_REQ 5#define STATE_READ_REQ 6#define STATE_READLINK_REQ 7#define NFS_RETRY_COUNT 30#define NFS_TIMEOUT 2000UL#define HASHES_PER_LINE 65#define NFSV2_FLAG 1#define NFSV3_FLAG 1 << 1#define TIMEOUT 5000UL#define SNTP_TIMEOUT 10000UL#define MAX_LEN 128#define TFTP_BLOCK_SIZE 512#define WELL_KNOWN_PORT 69#define STATE_RECV_WRQ 6#define DEFAULT_NAME_LEN (8 + 4 + 1)#define STATE_SEND_WRQ 7#define STATE_SEND_RRQ 1#define TFTP_RRQ 1#define TFTP_ACK 4#define TFTP_WRQ 2#define TFTP_OACK 6#define STATE_OACK 5#define STATE_DATA 2#define TFTP_DATA 3#define TFTP_ERROR 5#define STATE_TOO_LARGE 3#define STATE_BAD_MAGIC 4#define TFTP_SEQUENCE_SIZE ((ulong)(1<<16))#define TFTP_MTU_BLOCKSIZE CONFIG_TFTP_BLOCKSIZE#define TIMEOUT_COUNT 10#define streq(a,b) (strcmp((a), (b)) == 0)#define FAIL_PROP(c,dti,node,prop,__VA_ARGS__...) do { TRACE((c), "\t\tFAILED at %s:%d", __FILE__, __LINE__); (c)->status = FAILED; check_msg((c), dti, node, prop, __VA_ARGS__); } while (0)#define TRACE(c,fmt,__VA_ARGS__...) do { } while (0)#define DTSF_PLUGIN 0x0002#define FAIL(c,dti,node,__VA_ARGS__...) do { TRACE((c), "\t\tFAILED at %s:%d", __FILE__, __LINE__); (c)->status = FAILED; check_msg((c), dti, node, NULL, __VA_ARGS__); } while (0)#define for_each_property(n,p) for_each_property_withdel(n, p) if (!(p)->deleted)#define for_each_property_withdel(n,p) for ((p) = (n)->proplist; (p); (p) = (p)->next)#define for_each_marker_of_type(m,t) for_each_marker(m) if ((m)->type == (t))#define for_each_marker(m) for (; (m); (m) = (m)->next)#define for_each_child(n,c) for_each_child_withdel(n, c) if (!(c)->deleted)#define for_each_child_withdel(n,c) for ((c) = (n)->children; (c); (c) = (c)->next_sibling)#define __isctype(c,type) ((*__ctype_b_loc ())[(int) (c)] & (unsigned short int) type)#define isxdigit(c) __isctype((c), _ISxdigit)#define node_addr_cells(n) (((n)->addr_cells == -1) ? 2 : (n)->addr_cells)#define strprefixeq(a,n,b) (strlen(b) == (n) && (memcmp(a, b, n) == 0))#define node_size_cells(n) (((n)->size_cells == -1) ? 1 : (n)->size_cells)#define DIGITS "0123456789"#define LOWERCASE "abcdefghijklmnopqrstuvwxyz"#define assert(expr) ((void) sizeof ((expr) ? 1 : 0), __extension__ ({ if (expr) ; else __assert_fail (#expr, __FILE__, __LINE__, __ASSERT_FUNCTION); }))#define __ASSERT_FUNCTION __extension__ __PRETTY_FUNCTION__#define for_each_label(l0,l) for_each_label_withdel(l0, l) if (!(l)->deleted)#define for_each_label_withdel(l0,l) for ((l) = (l0); (l); (l) = (l)->next)#define DESCLABEL_FMT "%s%s%s%s%s"#define DESCLABEL_ARGS(node,prop,mark) ((mark) ? "value of " : ""), ((prop) ? "'" : ""), ((prop) ? (prop)->name : ""), ((prop) ? "' in " : ""), (node)->fullpath#define PRINTF(i,j) __attribute__((format (printf, i, j)))#define CHECK_ENTRY(nm_,fn_,d_,w_,e_,__VA_ARGS__...) static struct check *nm_ ## _prereqs[] = { __VA_ARGS__ }; static struct check nm_ = { .name = #nm_, .fn = (fn_), .data = (d_), .warn = (w_), .error = (e_), .status = UNCHECKED, .num_prereqs = ARRAY_SIZE(nm_ ## _prereqs), .prereq = nm_ ## _prereqs, };#define WARNING(nm_,fn_,d_,__VA_ARGS__...) CHECK_ENTRY(nm_, fn_, d_, true, false, __VA_ARGS__)#define CHECK(nm_,fn_,d_,__VA_ARGS__...) CHECK_ENTRY(nm_, fn_, d_, false, false, __VA_ARGS__)#define WARNING_PROPERTY_PHANDLE_CELLS(nm,propname,cells_name,__VA_ARGS__...) static struct provider nm ## _provider = { (propname), (cells_name), __VA_ARGS__ }; WARNING(nm ## _property, check_provider_cells_property, &nm ## _provider, &phandle_references);#define WARNING_IF_NOT_STRING_LIST(nm,propname) WARNING(nm, check_is_string_list, (propname))#define WARNING_IF_NOT_STRING(nm,propname) WARNING(nm, check_is_string, (propname))#define WARNING_IF_NOT_CELL(nm,propname) WARNING(nm, check_is_cell, (propname))#define ERROR(nm_,fn_,d_,__VA_ARGS__...) CHECK_ENTRY(nm_, fn_, d_, false, true, __VA_ARGS__)#define ERROR_IF_NOT_STRING(nm,propname) ERROR(nm, check_is_string, (propname))#define PROPNODECHARSSTRICT LOWERCASE UPPERCASE DIGITS ",-"#define PROPNODECHARS LOWERCASE UPPERCASE DIGITS ",._+*#?-"#define UPPERCASE "ABCDEFGHIJKLMNOPQRSTUVWXYZ"#define ERROR_IF_NOT_CELL(nm,propname) ERROR(nm, check_is_cell, (propname))#define ERROR_IF_NOT_STRING_LIST(nm,propname) ERROR(nm, check_is_string_list, (propname))#define ALIGN(x,a) (((x) + (a) - 1) & ~((a) - 1))#define empty_data ((struct data){ 0 })#define YYSTYPE_IS_DECLARED 1#define YYSTYPE_IS_TRIVIAL 1#define YYTOKENTYPE#define YYDEBUG 1#define YY_YY_SCRIPTS_DTC_DTC_PARSER_TAB_H_INCLUDED#define YYLTYPE struct srcpos#define YY_BUF_SIZE 16384#define YY_CURRENT_BUFFER ( (yy_buffer_stack) ? (yy_buffer_stack)[(yy_buffer_stack_top)] : NULL)#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]#define yynoreturn __attribute__((__noreturn__))#define YY_EXIT_FAILURE 2#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )#define YY_END_OF_BUFFER_CHAR 0#define YY_BUFFER_NEW 0#define yytext_ptr yytext#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)#define YY_SC_TO_UI(c) ((YY_CHAR) (c))#define YY_MORE_ADJ 0#define EOB_ACT_END_OF_FILE 1#define EOB_ACT_LAST_MATCH 2#define YY_BUFFER_EOF_PENDING 2#define YY_READ_BUF_SIZE 8192#define YY_INPUT(buf,result,max_size) if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) { int c = '*'; int n; for ( n = 0; n < max_size && (c = getc( yyin )) != EOF && c != '\n'; ++n ) buf[n] = (char) c; if ( c == '\n' ) buf[n++] = (char) c; if ( c == EOF && ferror( yyin ) ) YY_FATAL_ERROR( "input in flex scanner failed" ); result = n; } else { errno=0; while ( (result = (int) fread(buf, 1, (yy_size_t) max_size, yyin)) == 0 && ferror(yyin)) { if( errno != EINTR) { YY_FATAL_ERROR( "input in flex scanner failed" ); break; } errno=0; clearerr(yyin); } }#define EOB_ACT_CONTINUE_SCAN 0#define YY_DECL int yylex (void)#define YY_DO_BEFORE_ACTION (yytext_ptr) = yy_bp; yyleng = (int) (yy_cp - yy_bp); (yy_hold_char) = *yy_cp; *yy_cp = '\0'; (yy_c_buf_p) = yy_cp;#define YY_RULE_SETUP if ( yyleng > 0 ) YY_CURRENT_BUFFER_LVALUE->yy_at_bol = (yytext[yyleng - 1] == '\n'); YY_USER_ACTION#define YY_USER_ACTION { srcpos_update(&yylloc, yytext, yyleng); }#define YY_BREAK break;#define isdigit(c) __isctype((c), _ISdigit)#define YY_END_OF_BUFFER 32#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)#define INITIAL 0#define BYTESTRING 1#define PROPNODENAME 2#define V1 3#define YY_NULL 0#define yyterminate() return YY_NULL#define DPRINT(fmt,__VA_ARGS__...) do { } while (0)#define BEGIN_DEFAULT() DPRINT("<V1>\n"); BEGIN(V1);#define BEGIN (yy_start) = 1 + 2 *#define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)#define YY_BUFFER_NORMAL 1#define yywrap() ( 1)#define YY_START (((yy_start) - 1) / 2)#define YY_NEW_FILE yyrestart( yyin )#define YY_RESTORE_YY_MORE_OFFSET#define YYTABLES_NAME "yytables"#define yyless(n) do { int yyless_macro_arg = (n); YY_LESS_LINENO(yyless_macro_arg); yytext[yyleng] = (yy_hold_char); (yy_c_buf_p) = yytext + yyless_macro_arg; (yy_hold_char) = *(yy_c_buf_p); *(yy_c_buf_p) = '\0'; yyleng = yyless_macro_arg; } while ( 0 )#define YY_DECL_IS_OURS 1#define YY_START_STACK_INCR 25#define YY_EXTRA_TYPE void *#define YY_NO_INPUT 1#define yymore() yymore_used_but_not_detected#define REJECT reject_used_but_not_detected#define YY_NUM_RULES 31#define YY_SKIP_YYWRAP#define yy_set_bol(at_bol) { if ( ! YY_CURRENT_BUFFER ){ yyensure_buffer_stack (); YY_CURRENT_BUFFER_LVALUE = yy_create_buffer( yyin, YY_BUF_SIZE ); } YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; }#define yy_set_interactive(is_interactive) { if ( ! YY_CURRENT_BUFFER ){ yyensure_buffer_stack (); YY_CURRENT_BUFFER_LVALUE = yy_create_buffer( yyin, YY_BUF_SIZE ); } YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; }#define yy_new_buffer yy_create_buffer#define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER )#define YY_STRUCT_YY_BUFFER_STATE#define unput(c) yyunput( c, (yytext_ptr) )#define yyless(n) do { int yyless_macro_arg = (n); YY_LESS_LINENO(yyless_macro_arg); *yy_cp = (yy_hold_char); YY_RESTORE_YY_MORE_OFFSET (yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; YY_DO_BEFORE_ACTION; } while ( 0 )#define YY_LINENO_REWIND_TO(ptr)#define YY_LESS_LINENO(n)#define YY_TYPEDEF_YY_SIZE_T#define YY_TYPEDEF_YY_BUFFER_STATE#define YY_STATE_BUF_SIZE ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))#define YYSTATE YY_START#define yyconst const#define __STDC_LIMIT_MACROS 1#define FLEXINT_H#define FLEX_BETA#define YY_FLEX_SUBMINOR_VERSION 4#define YY_FLEX_MINOR_VERSION 6#define YY_FLEX_MAJOR_VERSION 2#define FLEX_SCANNER#define YY_INT_ALIGNED short int#define ERROR(loc,__VA_ARGS__...) do { srcpos_error((loc), "Error", __VA_ARGS__); treesource_error = true; } while (0)#define YYINITDEPTH 200#define YYSIZE_T __SIZE_TYPE__#define YYDPRINTF(Args) do { if (yydebug) YYFPRINTF Args; } while (0)#define YYFPRINTF fprintf#define YYEMPTY (-2)#define YYMAXDEPTH 10000#define YYMALLOC malloc#define YYSTACK_ALLOC YYMALLOC#define YYSTACK_BYTES(N) ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) + 2 * YYSTACK_GAP_MAXIMUM)#define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)#define YYSTACK_RELOCATE(Stack_alloc,Stack) do { YYSIZE_T yynewbytes; YYCOPY (&yyptr->Stack_alloc, Stack, yysize); Stack = &yyptr->Stack_alloc; yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; yyptr += yynewbytes / sizeof (*yyptr); } while (0)#define YYCOPY(Dst,Src,Count) __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))#define YYFREE free#define YYSTACK_FREE YYFREE#define YYABORT goto yyabortlab#define YYFINAL 6#define YYACCEPT goto yyacceptlab#define yypact_value_is_default(Yystate) (!!((Yystate) == (-81)))#define YYEOF 0#define YYTRANSLATE(YYX) ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)#define YYMAXUTOK 279#define YYUNDEFTOK 2#define YY_SYMBOL_PRINT(Title,Type,Value,Location) do { if (yydebug) { YYFPRINTF (stderr, "%s ", Title); yy_symbol_print (stderr, Type, Value, Location); YYFPRINTF (stderr, "\n"); } } while (0)#define YYLAST 140#define yytable_value_is_error(Yytable_value) 0#define YYLLOC_DEFAULT(Current,Rhs,N) do { if (N) { (Current).first_line = YYRHSLOC(Rhs, 1).first_line; (Current).first_column = YYRHSLOC(Rhs, 1).first_column; (Current).last_line = YYRHSLOC(Rhs, N).last_line; (Current).last_column = YYRHSLOC (Rhs, N).last_column; (Current).file = YYRHSLOC(Rhs, N).file; } else { (Current).first_line = (Current).last_line = YYRHSLOC(Rhs, 0).last_line; (Current).first_column = (Current).last_column = YYRHSLOC(Rhs, 0).last_column; (Current).file = YYRHSLOC (Rhs, 0).file; } } while (0)#define YYRHSLOC(Rhs,K) ((Rhs)[K])#define YY_REDUCE_PRINT(Rule) do { if (yydebug) yy_reduce_print (yyssp, yyvsp, yylsp, Rule); } while (0)#define DTSF_V1 0x0001#define YYERROR goto yyerrorlab#define YYPOPSTACK(N) (yyvsp -= (N), yyssp -= (N), yylsp -= (N))#define YY_STACK_PRINT(Bottom,Top) do { if (yydebug) yy_stack_print ((Bottom), (Top)); } while (0)#define YYNTOKENS 48#define YY_(Msgid) Msgid#define YYERROR_VERBOSE 0#define YYTERROR 1#define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN _Pragma ("GCC diagnostic push") _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"") _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")#define YY_IGNORE_MAYBE_UNINITIALIZED_END _Pragma ("GCC diagnostic pop")#define YYUSE(E) ((void) (E))#define YY_LOCATION_PRINT(File,Loc) ((void) 0)#define YY_NULLPTR 0#define YYERRCODE 256#define YYBACKUP(Token,Value) do if (yychar == YYEMPTY) { yychar = (Token); yylval = (Value); YYPOPSTACK (yylen); yystate = *yyssp; goto yybackup; } else { yyerror (YY_("syntax error: cannot back up")); YYERROR; } while (0)#define YYRECOVERING() (!!yyerrstatus)#define yyclearin (yychar = YYEMPTY)#define yyerrok (yyerrstatus = 0)#define YYTABLE_NINF -1#define YYPACT_NINF -81#define YYNSTATES 151#define YYNRULES 85#define YYNNTS 30#define YYCOPY_NEEDED 1#define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM#define YY_INITIAL_VALUE(Value)#define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))#define YY_ATTRIBUTE_PURE YY_ATTRIBUTE ((__pure__))#define YY_ATTRIBUTE(Spec) __attribute__(Spec)#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)#define YYPULL 1#define YYPUSH 0#define YYPURE 0#define YYSKELETON_NAME "yacc.c"#define YYBISON_VERSION "3.0.4"#define YYBISON 1#define __SYSCALL_WORDSIZE 64#define __WORDSIZE_TIME64_COMPAT32 1#define __wur __attribute_warn_unused_result__#define __USE_FORTIFY_LEVEL 2#define __stub_stty#define __stub_sstk#define __stub_sigreturn#define __stub_setlogin#define __stub_revoke#define __stub_putmsg#define __stub_lchmod#define __stub_gtty#define __stub_getmsg#define __stub_fdetach#define __stub_fchflags#define __stub_fattach#define __stub_chflags#define __stub___compat_bdflush#define __USE_POSIX_IMPLICITLY 1#define _FORTIFY_SOURCE 2#define __RLIM_T_MATCHES_RLIM64_T 1#define __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE#define __SSIZE_T_TYPE __SWORD_TYPE#define __FSID_T_TYPE struct { int __val[2]; }#define __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE#define __TIMER_T_TYPE void *#define __CLOCKID_T_TYPE __S32_TYPE#define __KEY_T_TYPE __S32_TYPE#define __DADDR_T_TYPE __S32_TYPE#define __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE#define __USECONDS_T_TYPE __U32_TYPE#define __TIME_T_TYPE __SYSCALL_SLONG_TYPE#define __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE#define __ID_T_TYPE __U32_TYPE#define __FSFILCNT64_T_TYPE __UQUAD_TYPE#define __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE#define __FSBLKCNT64_T_TYPE __UQUAD_TYPE#define __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE#define __BLKCNT64_T_TYPE __SQUAD_TYPE#define __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE#define __RLIM64_T_TYPE __UQUAD_TYPE#define __RLIM_T_TYPE __SYSCALL_ULONG_TYPE#define __PID_T_TYPE __S32_TYPE#define __OFF64_T_TYPE __SQUAD_TYPE#define __OFF_T_TYPE __SYSCALL_SLONG_TYPE#define __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE#define __NLINK_T_TYPE __SYSCALL_ULONG_TYPE#define __MODE_T_TYPE __U32_TYPE#define __INO64_T_TYPE __UQUAD_TYPE#define __INO_T_TYPE __SYSCALL_ULONG_TYPE#define __GID_T_TYPE __U32_TYPE#define __UID_T_TYPE __U32_TYPE#define __DEV_T_TYPE __UQUAD_TYPE#define __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE#define __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE#define _BITS_TYPESIZES_H 1#define _BITS_TYPES_H 1#define __STD_TYPE typedef#define __U64_TYPE unsigned long int#define __S64_TYPE long int#define __ULONG32_TYPE unsigned int#define __SLONG32_TYPE int#define __UWORD_TYPE unsigned long int#define __SWORD_TYPE long int#define __UQUAD_TYPE unsigned long int#define __SQUAD_TYPE long int#define __ULONGWORD_TYPE unsigned long int#define __SLONGWORD_TYPE long int#define __U32_TYPE unsigned int#define __S32_TYPE int#define __U16_TYPE unsigned short int#define __S16_TYPE short int#define _STRUCT_TIMESPEC 1#define __time_t_defined 1#define __GLIBC_USE_IEC_60559_TYPES_EXT 0#define __GLIBC_USE_IEC_60559_FUNCS_EXT 0#define __GLIBC_USE_IEC_60559_BFP_EXT 0#define __GLIBC_USE_LIB_EXT2 0#define ____mbstate_t_defined 1#define __WINT_TYPE__ unsigned int#define _____fpos_t_defined 1#define _____fpos64_t_defined 1#define ____FILE_defined 1#define __FILE_defined 1#define _IO_USER_LOCK 0x8000#define __struct_FILE_defined 1#define FOPEN_MAX 16#define L_ctermid 9#define FILENAME_MAX 4096#define TMP_MAX 238328#define L_tmpnam 20#define _BITS_STDIO_LIM_H 1#define _BITS_STDIO2_H 1#define __USER_LABEL_PREFIX__#define _BITS_TYPES___LOCALE_T_H 1#define _BITS_TYPES_LOCALE_T_H 1#define __STRINGS_FORTIFIED 1#define _BITS_STRING_FORTIFIED_H 1#define __WCHAR_TYPE__ int#define __ENUM_IDTYPE_T 1#define __WCLONE 0x80000000#define __WALL 0x40000000#define __WNOTHREAD 0x20000000#define WNOWAIT 0x01000000#define WCONTINUED 8#define WEXITED 4#define WSTOPPED 2#define WUNTRACED 2#define WNOHANG 1#define __WCOREFLAG 0x80#define __W_CONTINUED 0xffff#define __W_STOPCODE(sig) ((sig) << 8 | 0x7f)#define __W_EXITCODE(ret,sig) ((ret) << 8 | (sig))#define __WCOREDUMP(status) ((status) & __WCOREFLAG)#define __WIFSTOPPED(status) (((status) & 0xff) == 0x7f)#define __WIFSIGNALED(status) (((signed char) (((status) & 0x7f) + 1) >> 1) > 0)#define __WIFEXITED(status) (__WTERMSIG(status) == 0)#define __WSTOPSIG(status) __WEXITSTATUS(status)#define __WTERMSIG(status) ((status) & 0x7f)#define __WEXITSTATUS(status) (((status) & 0xff00) >> 8)#define __CFLOAT64X _Complex _Float64x#define __CFLOAT32X _Complex _Float32x#define __CFLOAT64 _Complex _Float64#define __CFLOAT32 _Complex _Float32#define __f64x(x) x ## f64x#define __f32x(x) x ## f32x#define __f64(x) x ## f64#define __f32(x) x ## f32#define __HAVE_FLOATN_NOT_TYPEDEF 1#define __HAVE_FLOAT128_UNLIKE_LDBL (__HAVE_DISTINCT_FLOAT128 && __LDBL_MANT_DIG__ != 113)#define __HAVE_DISTINCT_FLOAT128X __HAVE_FLOAT128X#define __HAVE_DISTINCT_FLOAT64X 0#define __HAVE_DISTINCT_FLOAT32X 0#define __HAVE_DISTINCT_FLOAT64 0#define __HAVE_DISTINCT_FLOAT32 0#define __HAVE_DISTINCT_FLOAT16 __HAVE_FLOAT16#define _BITS_FLOATN_COMMON_H#define __HAVE_FLOAT64X_LONG_DOUBLE 1#define __CFLOAT128 _Complex _Float128#define __f128(x) x ## f128#define __HAVE_DISTINCT_FLOAT128 1#define _BITS_FLOATN_H#define __clock_t_defined 1#define __clockid_t_defined 1#define __timer_t_defined 1#define _BITS_STDINT_INTN_H 1#define __bswap_constant_64(x) ((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56))#define __bswap_constant_32(x) ((((x) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) | (((x) & 0x0000ff00u) << 8) | (((x) & 0x000000ffu) << 24))#define __bswap_constant_16(x) ((__uint16_t) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)))#define le64toh(x) __uint64_identity (x)#define be64toh(x) __bswap_64 (x)#define htole64(x) __uint64_identity (x)#define htobe64(x) __bswap_64 (x)#define le32toh(x) __uint32_identity (x)#define be32toh(x) __bswap_32 (x)#define htole32(x) __uint32_identity (x)#define htobe32(x) __bswap_32 (x)#define le16toh(x) __uint16_identity (x)#define be16toh(x) __bswap_16 (x)#define htole16(x) __uint16_identity (x)#define htobe16(x) __bswap_16 (x)#define __LONG_LONG_PAIR(HI,LO) LO, HI#define BYTE_ORDER __BYTE_ORDER#define PDP_ENDIAN __PDP_ENDIAN#define BIG_ENDIAN __BIG_ENDIAN#define LITTLE_ENDIAN __LITTLE_ENDIAN#define __FLOAT_WORD_ORDER __BYTE_ORDER#define __PDP_ENDIAN 3412#define __FD_ISSET(d,set) ((__FDS_BITS (set)[__FD_ELT (d)] & __FD_MASK (d)) != 0)#define __FD_CLR(d,set) ((void) (__FDS_BITS (set)[__FD_ELT (d)] &= ~__FD_MASK (d)))#define __FD_SET(d,set) ((void) (__FDS_BITS (set)[__FD_ELT (d)] |= __FD_MASK (d)))#define __FD_ZERO(fdsp) do { int __d0, __d1; __asm__ __volatile__ ("cld; rep; " __FD_ZERO_STOS : "=c" (__d0), "=D" (__d1) : "a" (0), "0" (sizeof (fd_set) / sizeof (__fd_mask)), "1" (&__FDS_BITS (fdsp)[0]) : "memory"); } while (0)#define __FD_ZERO_STOS "stosq"#define _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))#define ____sigset_t_defined#define __sigset_t_defined 1#define __timeval_defined 1#define __FD_ELT(d) __extension__ ({ long int __d = (d); (__builtin_constant_p (__d) ? (0 <= __d && __d < __FD_SETSIZE ? (__d / __NFDBITS) : __fdelt_warn (__d)) : __fdelt_chk (__d)); })#define __FDS_BITS(set) ((set)->__fds_bits)#define __PTHREAD_RWLOCK_INT_FLAGS_SHARED 1#define __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0, 0, 0, 0, 0 }#define __ONCE_ALIGNMENT#define __LOCK_ALIGNMENT#define __PTHREAD_MUTEX_USE_UNION 0#define __PTHREAD_MUTEX_NUSERS_AFTER_KIND 0#define __PTHREAD_MUTEX_LOCK_ELISION 1#define __PTHREAD_COMPAT_PADDING_END#define __PTHREAD_COMPAT_PADDING_MID#define __SIZEOF_PTHREAD_BARRIERATTR_T 4#define __SIZEOF_PTHREAD_RWLOCKATTR_T 8#define __SIZEOF_PTHREAD_CONDATTR_T 4#define __SIZEOF_PTHREAD_COND_T 48#define __SIZEOF_PTHREAD_MUTEXATTR_T 4#define __SIZEOF_PTHREAD_BARRIER_T 32#define __SIZEOF_PTHREAD_RWLOCK_T 56#define __SIZEOF_PTHREAD_MUTEX_T 40#define __SIZEOF_PTHREAD_ATTR_T 56#define _BITS_PTHREADTYPES_ARCH_H 1#define __PTHREAD_SPINS_DATA short __spins; short __elision#define __PTHREAD_MUTEX_HAVE_PREV 1#define __PTHREAD_SPINS 0, 0#define _THREAD_SHARED_TYPES_H 1#define __have_pthread_attr_t 1#define _BITS_PTHREADTYPES_COMMON_H 1#define _ALLOCA_H 1#define __STDLIB_MB_LEN_MAX 16#define __WCHAR_MIN __WCHAR_MIN__#define __WCHAR_MAX __WCHAR_MAX__#define _BITS_WCHAR_H 1#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)#define __WCHAR_MAX__ 0x7fffffff#define _BITS_STDINT_UINTN_H 1#define _GCC_WRAP_STDINT_H#define __STDC_HOSTED__ 1#define static_assert _Static_assert#define _ASSERT_H_DECLS#define __ASSERT_VOID_CAST (void)#define _ASSERT_H 1#define _ISbit(bit) ((bit) < 8 ? ((1 << (bit)) << 8) : ((1 << (bit)) >> 8))#define toascii_l(c,l) __toascii_l ((c), (l))#define isascii_l(c,l) __isascii_l ((c), (l))#define isblank_l(c,l) __isblank_l ((c), (l))#define isxdigit_l(c,l) __isxdigit_l ((c), (l))#define isupper_l(c,l) __isupper_l ((c), (l))#define isspace_l(c,l) __isspace_l ((c), (l))#define ispunct_l(c,l) __ispunct_l ((c), (l))#define isprint_l(c,l) __isprint_l ((c), (l))#define isgraph_l(c,l) __isgraph_l ((c), (l))#define islower_l(c,l) __islower_l ((c), (l))#define isdigit_l(c,l) __isdigit_l ((c), (l))#define iscntrl_l(c,l) __iscntrl_l ((c), (l))#define isalpha_l(c,l) __isalpha_l ((c), (l))#define isalnum_l(c,l) __isalnum_l ((c), (l))#define __toascii_l(c,l) ((l), __toascii (c))#define __isascii_l(c,l) ((l), __isascii (c))#define __isblank_l(c,l) __isctype_l((c), _ISblank, (l))#define __isxdigit_l(c,l) __isctype_l((c), _ISxdigit, (l))#define __isupper_l(c,l) __isctype_l((c), _ISupper, (l))#define __isspace_l(c,l) __isctype_l((c), _ISspace, (l))#define __ispunct_l(c,l) __isctype_l((c), _ISpunct, (l))#define __isprint_l(c,l) __isctype_l((c), _ISprint, (l))#define __isgraph_l(c,l) __isctype_l((c), _ISgraph, (l))#define __islower_l(c,l) __isctype_l((c), _ISlower, (l))#define __isdigit_l(c,l) __isctype_l((c), _ISdigit, (l))#define __iscntrl_l(c,l) __isctype_l((c), _IScntrl, (l))#define __isalpha_l(c,l) __isctype_l((c), _ISalpha, (l))#define __isalnum_l(c,l) __isctype_l((c), _ISalnum, (l))#define toupper_l(c,locale) __toupper_l ((c), (locale))#define tolower_l(c,locale) __tolower_l ((c), (locale))#define __toupper_l(c,locale) __tobody (c, __toupper_l, (locale)->__ctype_toupper, (c, locale))#define __tolower_l(c,locale) __tobody (c, __tolower_l, (locale)->__ctype_tolower, (c, locale))#define __exctype_l(name) extern int name (int, locale_t) __THROW#define __isctype_l(c,type,locale) ((locale)->__ctype_b[(int) (c)] & (unsigned short int) type)#define _toupper(c) ((int) (*__ctype_toupper_loc ())[(int) (c)])#define _tolower(c) ((int) (*__ctype_tolower_loc ())[(int) (c)])#define toascii(c) __toascii (c)#define isascii(c) __isascii (c)#define toupper(c) __tobody (c, toupper, *__ctype_toupper_loc (), (c))#define tolower(c) __tobody (c, tolower, *__ctype_tolower_loc (), (c))#define isblank(c) __isctype((c), _ISblank)#define isupper(c) __isctype((c), _ISupper)#define isspace(c) __isctype((c), _ISspace)#define ispunct(c) __isctype((c), _ISpunct)#define isprint(c) __isctype((c), _ISprint)#define isgraph(c) __isctype((c), _ISgraph)#define islower(c) __isctype((c), _ISlower)#define iscntrl(c) __isctype((c), _IScntrl)#define isalpha(c) __isctype((c), _ISalpha)#define isalnum(c) __isctype((c), _ISalnum)#define __tobody(c,f,a,args) (__extension__ ({ int __res; if (sizeof (c) > 1) { if (__builtin_constant_p (c)) { int __c = (c); __res = __c < -128 || __c > 255 ? __c : (a)[__c]; } else __res = f args; } else __res = (a)[(int) (c)]; __res; }))#define __exctype(name) extern int name (int) __THROW#define __toascii(c) ((c) & 0x7f)#define __isascii(c) (((c) & ~0x7f) == 0)#define _CTYPE_H 1#define _ASM_GENERIC_ERRNO_BASE_H#define _ASM_GENERIC_ERRNO_H#define ENOTSUP EOPNOTSUPP#define _BITS_ERRNO_H 1#define _ERRNO_H 1#define _POSIX_TYPED_MEMORY_OBJECTS -1#define _POSIX_TRACE_LOG -1#define _POSIX_TRACE_INHERIT -1#define _POSIX_TRACE_EVENT_FILTER -1#define _POSIX_TRACE -1#define _POSIX_THREAD_SPORADIC_SERVER -1#define _POSIX_SPORADIC_SERVER -1#define _POSIX2_CHAR_TERM 200809L#define _POSIX_RAW_SOCKETS 200809L#define _POSIX_IPV6 200809L#define _POSIX_ADVISORY_INFO 200809L#define _POSIX_CLOCK_SELECTION 200809L#define _POSIX_THREAD_PROCESS_SHARED 200809L#define _POSIX_MESSAGE_PASSING 200809L#define _POSIX_BARRIERS 200809L#define _POSIX_TIMERS 200809L#define _POSIX_SPAWN 200809L#define _POSIX_SPIN_LOCKS 200809L#define _POSIX_TIMEOUTS 200809L#define _POSIX_SHELL 1#define _POSIX_READER_WRITER_LOCKS 200809L#define _POSIX_REGEXP 1#define _POSIX_THREAD_CPUTIME 0#define _POSIX_CPUTIME 0#define _POSIX_SHARED_MEMORY_OBJECTS 200809L#define _LFS64_STDIO 1#define _LFS64_LARGEFILE 1#define _LFS_LARGEFILE 1#define _LFS64_ASYNCHRONOUS_IO 1#define _POSIX_PRIORITIZED_IO 200809L#define _LFS_ASYNCHRONOUS_IO 1#define _POSIX_ASYNC_IO 1#define _POSIX_ASYNCHRONOUS_IO 200809L#define _POSIX_REALTIME_SIGNALS 200809L#define _POSIX_SEMAPHORES 200809L#define _POSIX_THREAD_ROBUST_PRIO_PROTECT -1#define _POSIX_THREAD_ROBUST_PRIO_INHERIT 200809L#define _POSIX_THREAD_PRIO_PROTECT 200809L#define _POSIX_THREAD_PRIO_INHERIT 200809L#define _POSIX_THREAD_ATTR_STACKADDR 200809L#define _POSIX_THREAD_ATTR_STACKSIZE 200809L#define _POSIX_THREAD_PRIORITY_SCHEDULING 200809L#define _POSIX_THREAD_SAFE_FUNCTIONS 200809L#define _POSIX_REENTRANT_FUNCTIONS 1#define _POSIX_THREADS 200809L#define _XOPEN_SHM 1#define _XOPEN_REALTIME_THREADS 1#define _XOPEN_REALTIME 1#define _POSIX_NO_TRUNC 1#define _POSIX_CHOWN_RESTRICTED 0#define _POSIX_MEMORY_PROTECTION 200809L#define _POSIX_MEMLOCK_RANGE 200809L#define _POSIX_MEMLOCK 200809L#define _POSIX_MAPPED_FILES 200809L#define _POSIX_FSYNC 200809L#define _POSIX_SYNCHRONIZED_IO 200809L#define _POSIX_PRIORITY_SCHEDULING 200809L#define _POSIX_SAVED_IDS 1#define _POSIX_JOB_CONTROL 1#define _BITS_POSIX_OPT_H 1#define __LP64_OFF64_LDFLAGS "-m64"#define __LP64_OFF64_CFLAGS "-m64"#define __ILP32_OFFBIG_LDFLAGS "-m32"#define __ILP32_OFFBIG_CFLAGS "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"#define __ILP32_OFF32_LDFLAGS "-m32"#define __ILP32_OFF32_CFLAGS "-m32"#define _XBS5_LP64_OFF64 1#define _POSIX_V6_LP64_OFF64 1#define _POSIX_V7_LP64_OFF64 1#define _XBS5_LPBIG_OFFBIG -1#define _POSIX_V6_LPBIG_OFFBIG -1#define _POSIX_V7_LPBIG_OFFBIG -1#define _SC_UIO_MAXIOV _SC_UIO_MAXIOV#define _SC_LEVEL1_ICACHE_SIZE _SC_LEVEL1_ICACHE_SIZE#define _CS_V7_ENV _CS_V7_ENV#define _CS_V6_ENV _CS_V6_ENV#define _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS#define _CS_POSIX_V7_LPBIG_OFFBIG_LIBS _CS_POSIX_V7_LPBIG_OFFBIG_LIBS#define _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS#define _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS#define _CS_POSIX_V7_LP64_OFF64_LINTFLAGS _CS_POSIX_V7_LP64_OFF64_LINTFLAGS#define _CS_POSIX_V7_LP64_OFF64_LIBS _CS_POSIX_V7_LP64_OFF64_LIBS#define _CS_POSIX_V7_LP64_OFF64_LDFLAGS _CS_POSIX_V7_LP64_OFF64_LDFLAGS#define _CS_POSIX_V7_LP64_OFF64_CFLAGS _CS_POSIX_V7_LP64_OFF64_CFLAGS#define _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS#define _CS_POSIX_V7_ILP32_OFFBIG_LIBS _CS_POSIX_V7_ILP32_OFFBIG_LIBS#define _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS#define _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS#define _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS#define _CS_POSIX_V7_ILP32_OFF32_LIBS _CS_POSIX_V7_ILP32_OFF32_LIBS#define _CS_POSIX_V7_ILP32_OFF32_LDFLAGS _CS_POSIX_V7_ILP32_OFF32_LDFLAGS#define _CS_POSIX_V7_ILP32_OFF32_CFLAGS _CS_POSIX_V7_ILP32_OFF32_CFLAGS#define _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS#define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS _CS_POSIX_V6_LPBIG_OFFBIG_LIBS#define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS#define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS#define _CS_POSIX_V6_LP64_OFF64_LINTFLAGS _CS_POSIX_V6_LP64_OFF64_LINTFLAGS#define _CS_POSIX_V6_LP64_OFF64_LIBS _CS_POSIX_V6_LP64_OFF64_LIBS#define _CS_POSIX_V6_LP64_OFF64_LDFLAGS _CS_POSIX_V6_LP64_OFF64_LDFLAGS#define _CS_POSIX_V6_LP64_OFF64_CFLAGS _CS_POSIX_V6_LP64_OFF64_CFLAGS#define _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS#define _CS_POSIX_V6_ILP32_OFFBIG_LIBS _CS_POSIX_V6_ILP32_OFFBIG_LIBS#define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS#define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS#define _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS#define _CS_POSIX_V6_ILP32_OFF32_LIBS _CS_POSIX_V6_ILP32_OFF32_LIBS#define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS _CS_POSIX_V6_ILP32_OFF32_LDFLAGS#define _CS_POSIX_V6_ILP32_OFF32_CFLAGS _CS_POSIX_V6_ILP32_OFF32_CFLAGS#define _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS#define _CS_XBS5_LPBIG_OFFBIG_LIBS _CS_XBS5_LPBIG_OFFBIG_LIBS#define _CS_XBS5_LPBIG_OFFBIG_LDFLAGS _CS_XBS5_LPBIG_OFFBIG_LDFLAGS#define _CS_XBS5_LPBIG_OFFBIG_CFLAGS _CS_XBS5_LPBIG_OFFBIG_CFLAGS#define _CS_XBS5_LP64_OFF64_LINTFLAGS _CS_XBS5_LP64_OFF64_LINTFLAGS#define _CS_XBS5_LP64_OFF64_LIBS _CS_XBS5_LP64_OFF64_LIBS#define _CS_XBS5_LP64_OFF64_LDFLAGS _CS_XBS5_LP64_OFF64_LDFLAGS#define _CS_XBS5_LP64_OFF64_CFLAGS _CS_XBS5_LP64_OFF64_CFLAGS#define _CS_XBS5_ILP32_OFFBIG_LINTFLAGS _CS_XBS5_ILP32_OFFBIG_LINTFLAGS#define _CS_XBS5_ILP32_OFFBIG_LIBS _CS_XBS5_ILP32_OFFBIG_LIBS#define _CS_XBS5_ILP32_OFFBIG_LDFLAGS _CS_XBS5_ILP32_OFFBIG_LDFLAGS#define _CS_XBS5_ILP32_OFFBIG_CFLAGS _CS_XBS5_ILP32_OFFBIG_CFLAGS#define _CS_XBS5_ILP32_OFF32_LINTFLAGS _CS_XBS5_ILP32_OFF32_LINTFLAGS#define _CS_XBS5_ILP32_OFF32_LIBS _CS_XBS5_ILP32_OFF32_LIBS#define _CS_XBS5_ILP32_OFF32_LDFLAGS _CS_XBS5_ILP32_OFF32_LDFLAGS#define _CS_XBS5_ILP32_OFF32_CFLAGS _CS_XBS5_ILP32_OFF32_CFLAGS#define _CS_LFS64_LINTFLAGS _CS_LFS64_LINTFLAGS#define _CS_LFS64_LIBS _CS_LFS64_LIBS#define _CS_LFS64_LDFLAGS _CS_LFS64_LDFLAGS#define _CS_LFS64_CFLAGS _CS_LFS64_CFLAGS#define _CS_LFS_LINTFLAGS _CS_LFS_LINTFLAGS#define _CS_LFS_LIBS _CS_LFS_LIBS#define _CS_LFS_LDFLAGS _CS_LFS_LDFLAGS#define _CS_LFS_CFLAGS _CS_LFS_CFLAGS#define _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS#define _CS_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS#define _CS_POSIX_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS#define _CS_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS#define _CS_GNU_LIBPTHREAD_VERSION _CS_GNU_LIBPTHREAD_VERSION#define _CS_GNU_LIBC_VERSION _CS_GNU_LIBC_VERSION#define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS#define _CS_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS#define _CS_PATH _CS_PATH#define _SC_THREAD_ROBUST_PRIO_PROTECT _SC_THREAD_ROBUST_PRIO_PROTECT#define _SC_THREAD_ROBUST_PRIO_INHERIT _SC_THREAD_ROBUST_PRIO_INHERIT#define _SC_XOPEN_STREAMS _SC_XOPEN_STREAMS#define _SC_TRACE_USER_EVENT_MAX _SC_TRACE_USER_EVENT_MAX#define _SC_TRACE_SYS_MAX _SC_TRACE_SYS_MAX#define _SC_TRACE_NAME_MAX _SC_TRACE_NAME_MAX#define _SC_TRACE_EVENT_NAME_MAX _SC_TRACE_EVENT_NAME_MAX#define _SC_SS_REPL_MAX _SC_SS_REPL_MAX#define _SC_V7_LPBIG_OFFBIG _SC_V7_LPBIG_OFFBIG#define _SC_V7_LP64_OFF64 _SC_V7_LP64_OFF64#define _SC_V7_ILP32_OFFBIG _SC_V7_ILP32_OFFBIG#define _SC_V7_ILP32_OFF32 _SC_V7_ILP32_OFF32#define _SC_RAW_SOCKETS _SC_RAW_SOCKETS#define _SC_IPV6 _SC_IPV6#define _SC_LEVEL4_CACHE_LINESIZE _SC_LEVEL4_CACHE_LINESIZE#define _SC_LEVEL4_CACHE_ASSOC _SC_LEVEL4_CACHE_ASSOC#define _SC_LEVEL4_CACHE_SIZE _SC_LEVEL4_CACHE_SIZE#define _SC_LEVEL3_CACHE_LINESIZE _SC_LEVEL3_CACHE_LINESIZE#define _SC_LEVEL3_CACHE_ASSOC _SC_LEVEL3_CACHE_ASSOC#define _SC_LEVEL3_CACHE_SIZE _SC_LEVEL3_CACHE_SIZE#define _SC_LEVEL2_CACHE_LINESIZE _SC_LEVEL2_CACHE_LINESIZE#define _SC_LEVEL2_CACHE_ASSOC _SC_LEVEL2_CACHE_ASSOC#define _SC_LEVEL2_CACHE_SIZE _SC_LEVEL2_CACHE_SIZE#define _SC_LEVEL1_DCACHE_LINESIZE _SC_LEVEL1_DCACHE_LINESIZE#define _SC_LEVEL1_DCACHE_ASSOC _SC_LEVEL1_DCACHE_ASSOC#define _SC_LEVEL1_DCACHE_SIZE _SC_LEVEL1_DCACHE_SIZE#define _SC_LEVEL1_ICACHE_LINESIZE _SC_LEVEL1_ICACHE_LINESIZE#define _SC_LEVEL1_ICACHE_ASSOC _SC_LEVEL1_ICACHE_ASSOC#define _SC_TRACE_LOG _SC_TRACE_LOG#define _SC_TRACE_INHERIT _SC_TRACE_INHERIT#define _SC_TRACE_EVENT_FILTER _SC_TRACE_EVENT_FILTER#define _SC_TRACE _SC_TRACE#define _SC_HOST_NAME_MAX _SC_HOST_NAME_MAX#define _SC_V6_LPBIG_OFFBIG _SC_V6_LPBIG_OFFBIG#define _SC_V6_LP64_OFF64 _SC_V6_LP64_OFF64#define _SC_V6_ILP32_OFFBIG _SC_V6_ILP32_OFFBIG#define _SC_V6_ILP32_OFF32 _SC_V6_ILP32_OFF32#define _SC_2_PBS_CHECKPOINT _SC_2_PBS_CHECKPOINT#define _SC_STREAMS _SC_STREAMS#define _SC_SYMLOOP_MAX _SC_SYMLOOP_MAX#define _SC_2_PBS_TRACK _SC_2_PBS_TRACK#define _SC_2_PBS_MESSAGE _SC_2_PBS_MESSAGE#define _SC_2_PBS_LOCATE _SC_2_PBS_LOCATE#define _SC_2_PBS_ACCOUNTING _SC_2_PBS_ACCOUNTING#define _SC_2_PBS _SC_2_PBS#define _SC_USER_GROUPS_R _SC_USER_GROUPS_R#define _SC_USER_GROUPS _SC_USER_GROUPS#define _SC_TYPED_MEMORY_OBJECTS _SC_TYPED_MEMORY_OBJECTS#define _SC_TIMEOUTS _SC_TIMEOUTS#define _SC_SYSTEM_DATABASE_R _SC_SYSTEM_DATABASE_R#define _SC_SYSTEM_DATABASE _SC_SYSTEM_DATABASE#define _SC_THREAD_SPORADIC_SERVER _SC_THREAD_SPORADIC_SERVER#define _SC_SPORADIC_SERVER _SC_SPORADIC_SERVER#define _SC_SPAWN _SC_SPAWN#define _SC_SIGNALS _SC_SIGNALS#define _SC_SHELL _SC_SHELL#define _SC_REGEX_VERSION _SC_REGEX_VERSION#define _SC_REGEXP _SC_REGEXP#define _SC_SPIN_LOCKS _SC_SPIN_LOCKS#define _SC_READER_WRITER_LOCKS _SC_READER_WRITER_LOCKS#define _SC_NETWORKING _SC_NETWORKING#define _SC_SINGLE_PROCESS _SC_SINGLE_PROCESS#define _SC_MULTI_PROCESS _SC_MULTI_PROCESS#define _SC_MONOTONIC_CLOCK _SC_MONOTONIC_CLOCK#define _SC_FILE_SYSTEM _SC_FILE_SYSTEM#define _SC_FILE_LOCKING _SC_FILE_LOCKING#define _SC_FILE_ATTRIBUTES _SC_FILE_ATTRIBUTES#define _SC_PIPE _SC_PIPE#define _SC_FIFO _SC_FIFO#define _SC_FD_MGMT _SC_FD_MGMT#define _SC_DEVICE_SPECIFIC_R _SC_DEVICE_SPECIFIC_R#define _SC_DEVICE_SPECIFIC _SC_DEVICE_SPECIFIC#define _SC_DEVICE_IO _SC_DEVICE_IO#define _SC_THREAD_CPUTIME _SC_THREAD_CPUTIME#define _SC_CPUTIME _SC_CPUTIME#define _SC_CLOCK_SELECTION _SC_CLOCK_SELECTION#define _SC_C_LANG_SUPPORT_R _SC_C_LANG_SUPPORT_R#define _SC_C_LANG_SUPPORT _SC_C_LANG_SUPPORT#define _SC_BASE _SC_BASE#define _SC_BARRIERS _SC_BARRIERS#define _SC_ADVISORY_INFO _SC_ADVISORY_INFO#define _SC_XOPEN_REALTIME_THREADS _SC_XOPEN_REALTIME_THREADS#define _SC_XOPEN_REALTIME _SC_XOPEN_REALTIME#define _SC_XOPEN_LEGACY _SC_XOPEN_LEGACY#define _SC_XBS5_LPBIG_OFFBIG _SC_XBS5_LPBIG_OFFBIG#define _SC_XBS5_LP64_OFF64 _SC_XBS5_LP64_OFF64#define _SC_XBS5_ILP32_OFFBIG _SC_XBS5_ILP32_OFFBIG#define _SC_XBS5_ILP32_OFF32 _SC_XBS5_ILP32_OFF32#define _SC_NL_TEXTMAX _SC_NL_TEXTMAX#define _SC_NL_SETMAX _SC_NL_SETMAX#define _SC_NL_NMAX _SC_NL_NMAX#define _SC_NL_MSGMAX _SC_NL_MSGMAX#define _SC_NL_LANGMAX _SC_NL_LANGMAX#define _SC_NL_ARGMAX _SC_NL_ARGMAX#define _SC_USHRT_MAX _SC_USHRT_MAX#define _SC_ULONG_MAX _SC_ULONG_MAX#define _SC_UINT_MAX _SC_UINT_MAX#define _SC_UCHAR_MAX _SC_UCHAR_MAX#define _SC_SHRT_MIN _SC_SHRT_MIN#define _SC_SHRT_MAX _SC_SHRT_MAX#define _SC_SCHAR_MIN _SC_SCHAR_MIN#define _SC_SCHAR_MAX _SC_SCHAR_MAX#define _SC_SSIZE_MAX _SC_SSIZE_MAX#define _SC_NZERO _SC_NZERO#define _SC_MB_LEN_MAX _SC_MB_LEN_MAX#define _SC_WORD_BIT _SC_WORD_BIT#define _SC_LONG_BIT _SC_LONG_BIT#define _SC_INT_MIN _SC_INT_MIN#define _SC_INT_MAX _SC_INT_MAX#define _SC_CHAR_MIN _SC_CHAR_MIN#define _SC_CHAR_MAX _SC_CHAR_MAX#define _SC_CHAR_BIT _SC_CHAR_BIT#define _SC_XOPEN_XPG4 _SC_XOPEN_XPG4#define _SC_XOPEN_XPG3 _SC_XOPEN_XPG3#define _SC_XOPEN_XPG2 _SC_XOPEN_XPG2#define _SC_2_UPE _SC_2_UPE#define _SC_2_C_VERSION _SC_2_C_VERSION#define _SC_2_CHAR_TERM _SC_2_CHAR_TERM#define _SC_XOPEN_SHM _SC_XOPEN_SHM#define _SC_XOPEN_ENH_I18N _SC_XOPEN_ENH_I18N#define _SC_XOPEN_CRYPT _SC_XOPEN_CRYPT#define _SC_XOPEN_UNIX _SC_XOPEN_UNIX#define _SC_XOPEN_XCU_VERSION _SC_XOPEN_XCU_VERSION#define _SC_XOPEN_VERSION _SC_XOPEN_VERSION#define _SC_PASS_MAX _SC_PASS_MAX#define _SC_ATEXIT_MAX _SC_ATEXIT_MAX#define _SC_AVPHYS_PAGES _SC_AVPHYS_PAGES#define _SC_PHYS_PAGES _SC_PHYS_PAGES#define _SC_NPROCESSORS_ONLN _SC_NPROCESSORS_ONLN#define _SC_NPROCESSORS_CONF _SC_NPROCESSORS_CONF#define _SC_THREAD_PROCESS_SHARED _SC_THREAD_PROCESS_SHARED#define _SC_THREAD_PRIO_PROTECT _SC_THREAD_PRIO_PROTECT#define _SC_THREAD_PRIO_INHERIT _SC_THREAD_PRIO_INHERIT#define _SC_THREAD_PRIORITY_SCHEDULING _SC_THREAD_PRIORITY_SCHEDULING#define _SC_THREAD_ATTR_STACKSIZE _SC_THREAD_ATTR_STACKSIZE#define _SC_THREAD_ATTR_STACKADDR _SC_THREAD_ATTR_STACKADDR#define _SC_THREAD_THREADS_MAX _SC_THREAD_THREADS_MAX#define _SC_THREAD_STACK_MIN _SC_THREAD_STACK_MIN#define _SC_THREAD_KEYS_MAX _SC_THREAD_KEYS_MAX#define _SC_THREAD_DESTRUCTOR_ITERATIONS _SC_THREAD_DESTRUCTOR_ITERATIONS#define _SC_TTY_NAME_MAX _SC_TTY_NAME_MAX#define _SC_LOGIN_NAME_MAX _SC_LOGIN_NAME_MAX#define _SC_GETPW_R_SIZE_MAX _SC_GETPW_R_SIZE_MAX#define _SC_GETGR_R_SIZE_MAX _SC_GETGR_R_SIZE_MAX#define _SC_THREAD_SAFE_FUNCTIONS _SC_THREAD_SAFE_FUNCTIONS#define _SC_THREADS _SC_THREADS#define _SC_T_IOV_MAX _SC_T_IOV_MAX#define _SC_PII_OSI_M _SC_PII_OSI_M#define _SC_PII_OSI_CLTS _SC_PII_OSI_CLTS#define _SC_PII_OSI_COTS _SC_PII_OSI_COTS#define _SC_PII_INTERNET_DGRAM _SC_PII_INTERNET_DGRAM#define _SC_PII_INTERNET_STREAM _SC_PII_INTERNET_STREAM#define _SC_IOV_MAX _SC_IOV_MAX#define _SC_SELECT _SC_SELECT#define _SC_POLL _SC_POLL#define _SC_PII_OSI _SC_PII_OSI#define _SC_PII_INTERNET _SC_PII_INTERNET#define _SC_PII_SOCKET _SC_PII_SOCKET#define _SC_PII_XTI _SC_PII_XTI#define _SC_PII _SC_PII#define _SC_2_LOCALEDEF _SC_2_LOCALEDEF#define _SC_2_SW_DEV _SC_2_SW_DEV#define _SC_2_FORT_RUN _SC_2_FORT_RUN#define _SC_2_FORT_DEV _SC_2_FORT_DEV#define _SC_2_C_DEV _SC_2_C_DEV#define _SC_2_C_BIND _SC_2_C_BIND#define _SC_2_VERSION _SC_2_VERSION#define _SC_CHARCLASS_NAME_MAX _SC_CHARCLASS_NAME_MAX#define _SC_RE_DUP_MAX _SC_RE_DUP_MAX#define _SC_LINE_MAX _SC_LINE_MAX#define _SC_EXPR_NEST_MAX _SC_EXPR_NEST_MAX#define _SC_EQUIV_CLASS_MAX _SC_EQUIV_CLASS_MAX#define _SC_COLL_WEIGHTS_MAX _SC_COLL_WEIGHTS_MAX#define _SC_BC_STRING_MAX _SC_BC_STRING_MAX#define _SC_BC_SCALE_MAX _SC_BC_SCALE_MAX#define _SC_BC_DIM_MAX _SC_BC_DIM_MAX#define _SC_BC_BASE_MAX _SC_BC_BASE_MAX#define _SC_TIMER_MAX _SC_TIMER_MAX#define _SC_SIGQUEUE_MAX _SC_SIGQUEUE_MAX#define _SC_SEM_VALUE_MAX _SC_SEM_VALUE_MAX#define _SC_SEM_NSEMS_MAX _SC_SEM_NSEMS_MAX#define _SC_RTSIG_MAX _SC_RTSIG_MAX#define _SC_PAGE_SIZE _SC_PAGESIZE#define _SC_PAGESIZE _SC_PAGESIZE#define _SC_VERSION _SC_VERSION#define _SC_MQ_PRIO_MAX _SC_MQ_PRIO_MAX#define _SC_MQ_OPEN_MAX _SC_MQ_OPEN_MAX#define _SC_DELAYTIMER_MAX _SC_DELAYTIMER_MAX#define _SC_AIO_PRIO_DELTA_MAX _SC_AIO_PRIO_DELTA_MAX#define _SC_AIO_MAX _SC_AIO_MAX#define _SC_AIO_LISTIO_MAX _SC_AIO_LISTIO_MAX#define _SC_SHARED_MEMORY_OBJECTS _SC_SHARED_MEMORY_OBJECTS#define _SC_SEMAPHORES _SC_SEMAPHORES#define _SC_MESSAGE_PASSING _SC_MESSAGE_PASSING#define _SC_MEMORY_PROTECTION _SC_MEMORY_PROTECTION#define _SC_MEMLOCK_RANGE _SC_MEMLOCK_RANGE#define _SC_MEMLOCK _SC_MEMLOCK#define _SC_MAPPED_FILES _SC_MAPPED_FILES#define _SC_FSYNC _SC_FSYNC#define _SC_SYNCHRONIZED_IO _SC_SYNCHRONIZED_IO#define _SC_PRIORITIZED_IO _SC_PRIORITIZED_IO#define _SC_ASYNCHRONOUS_IO _SC_ASYNCHRONOUS_IO#define _SC_TIMERS _SC_TIMERS#define _SC_PRIORITY_SCHEDULING _SC_PRIORITY_SCHEDULING#define _SC_REALTIME_SIGNALS _SC_REALTIME_SIGNALS#define _SC_SAVED_IDS _SC_SAVED_IDS#define _SC_JOB_CONTROL _SC_JOB_CONTROL#define _SC_TZNAME_MAX _SC_TZNAME_MAX#define _SC_STREAM_MAX _SC_STREAM_MAX#define _SC_OPEN_MAX _SC_OPEN_MAX#define _SC_NGROUPS_MAX _SC_NGROUPS_MAX#define _SC_CLK_TCK _SC_CLK_TCK#define _SC_CHILD_MAX _SC_CHILD_MAX#define _SC_ARG_MAX _SC_ARG_MAX#define _PC_2_SYMLINKS _PC_2_SYMLINKS#define _PC_SYMLINK_MAX _PC_SYMLINK_MAX#define _PC_ALLOC_SIZE_MIN _PC_ALLOC_SIZE_MIN#define _PC_REC_XFER_ALIGN _PC_REC_XFER_ALIGN#define _PC_REC_MIN_XFER_SIZE _PC_REC_MIN_XFER_SIZE#define _PC_REC_MAX_XFER_SIZE _PC_REC_MAX_XFER_SIZE#define _PC_REC_INCR_XFER_SIZE _PC_REC_INCR_XFER_SIZE#define _PC_FILESIZEBITS _PC_FILESIZEBITS#define _PC_SOCK_MAXBUF _PC_SOCK_MAXBUF#define _PC_PRIO_IO _PC_PRIO_IO#define _PC_ASYNC_IO _PC_ASYNC_IO#define _PC_SYNC_IO _PC_SYNC_IO#define _PC_VDISABLE _PC_VDISABLE#define _PC_NO_TRUNC _PC_NO_TRUNC#define _PC_CHOWN_RESTRICTED _PC_CHOWN_RESTRICTED#define _PC_PIPE_BUF _PC_PIPE_BUF#define _PC_PATH_MAX _PC_PATH_MAX#define _PC_NAME_MAX _PC_NAME_MAX#define _PC_MAX_INPUT _PC_MAX_INPUT#define _PC_MAX_CANON _PC_MAX_CANON#define _PC_LINK_MAX _PC_LINK_MAX#define _GETOPT_CORE_H 1#define CPU_TO_FDT64(x) ((EXTRACT_BYTE(x, 0) << 56) | (EXTRACT_BYTE(x, 1) << 48) | (EXTRACT_BYTE(x, 2) << 40) | (EXTRACT_BYTE(x, 3) << 32) | (EXTRACT_BYTE(x, 4) << 24) | (EXTRACT_BYTE(x, 5) << 16) | (EXTRACT_BYTE(x, 6) << 8) | EXTRACT_BYTE(x, 7))#define EXTRACT_BYTE(x,n) ((unsigned long long)((uint8_t *)&x)[n])#define FDT_FORCE#define CPU_TO_FDT32(x) ((EXTRACT_BYTE(x, 0) << 24) | (EXTRACT_BYTE(x, 1) << 16) | (EXTRACT_BYTE(x, 2) << 8) | EXTRACT_BYTE(x, 3))#define CPU_TO_FDT16(x) ((EXTRACT_BYTE(x, 0) << 8) | EXTRACT_BYTE(x, 1))#define FDT_BITWISE#define optional_argument 2#define _GETOPT_EXT_H 1#define __getopt_argv_const const#define case_USAGE_COMMON_FLAGS case 'h': usage(NULL); case 'V': util_version(); case '?': usage("unknown option");#define USAGE_COMMON_OPTS_HELP "Print this help and exit", "Print version and exit", NULL#define USAGE_COMMON_LONG_OPTS {"help", no_argument, NULL, 'h'}, {"version", no_argument, NULL, 'V'}, {NULL, no_argument, NULL, 0x0}#define USAGE_COMMON_SHORT_OPTS "hV"#define a_argument required_argument#define util_getopt_long() getopt_long(argc, argv, usage_short_opts, usage_long_opts, NULL)#define usage(errmsg) util_usage(errmsg, usage_synopsis, usage_short_opts, usage_long_opts, usage_opts_help)#define USAGE_TYPE_MSG "<type>\ts=string, i=int, u=unsigned, x=hex\n" "\tOptional modifier prefix:\n" "\t\thh or b=byte, h=2 byte, l=4 byte (default)";#define stringify_(s) #s#define stringify(s) stringify_(s)#define NORETURN __attribute__((noreturn))#define UTIL_H#define MAX_NODENAME_LEN 31#define MAX_PROPNAME_LEN 31#define strstarts(s,prefix) (strncmp((s), (prefix), strlen(prefix)) == 0)#define PHANDLE_BOTH 0x3#define PHANDLE_EPAPR 0x2#define PHANDLE_LEGACY 0x1#define DEFAULT_FDT_VERSION 17#define debug(__VA_ARGS__...)#define DTC_H#define SRCPOS_H#define FTF_FULLPATH 0x1#define FTF_NAMEPROPS 0x4#define FTF_VARALIGN 0x2#define FTF_NOPS 0x40#define ASM_EMIT_BELONG(f,fmt,__VA_ARGS__...) { fprintf((f), "\t.byte\t((" fmt ") >> 24) & 0xff\n", __VA_ARGS__); fprintf((f), "\t.byte\t((" fmt ") >> 16) & 0xff\n", __VA_ARGS__); fprintf((f), "\t.byte\t((" fmt ") >> 8) & 0xff\n", __VA_ARGS__); fprintf((f), "\t.byte\t(" fmt ") & 0xff\n", __VA_ARGS__); }#define FTF_BOOTCPUID 0x8#define FTF_STRTABSIZE 0x10#define FTF_STRUCTSIZE 0x20#define RTSIG_MAX 32#define XATTR_SIZE_MAX 65536#define XATTR_NAME_MAX 255#define PIPE_BUF 4096#define PATH_MAX 4096#define MAX_INPUT 255#define MAX_CANON 255#define LINK_MAX 127#define ARG_MAX 131072#define NR_OPEN 1024#define _LINUX_LIMITS_H#define SEM_VALUE_MAX (2147483647)#define MQ_PRIO_MAX 32768#define HOST_NAME_MAX 64#define LOGIN_NAME_MAX 256#define TTY_NAME_MAX 32#define DELAYTIMER_MAX 2147483647#define PTHREAD_STACK_MIN 16384#define AIO_PRIO_DELTA_MAX 20#define _POSIX_THREAD_THREADS_MAX 64#define PTHREAD_DESTRUCTOR_ITERATIONS _POSIX_THREAD_DESTRUCTOR_ITERATIONS#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS 4#define PTHREAD_KEYS_MAX 1024#define _POSIX_THREAD_KEYS_MAX 128#define __undef_ARG_MAX#define __undef_OPEN_MAX#define __undef_LINK_MAX#define __undef_NR_OPEN#define _GNU_SOURCE#define __GLIBC_USE_IEC_60559_FUNCS_EXT 1#define __cookie_io_functions_t_defined 1#define L_cuserid 9#define assert_perror(errnum) (!(errnum) ? __ASSERT_VOID_CAST (0) : __assert_perror_fail ((errnum), __FILE__, __LINE__, __ASSERT_FUNCTION))#define __error_t_defined 1#define MAX_SRCFILE_DEPTH (100)#define DTC_VERSION "DTC 1.4.6-gaadd0b65"#define ut_asserteq(expr1,expr2) { unsigned int val1 = (expr1), val2 = (expr2); if (val1 != val2) { ut_failf(uts, __FILE__, __LINE__, __func__, #expr1 " == " #expr2, "Expected %d, got %d", val1, val2); return CMD_RET_FAILURE; } }#define ut_assertok(cond) ut_asserteq(0, cond)#define ut_asserteq_ptr(expr1,expr2) { const void *val1 = (expr1), *val2 = (expr2); if (val1 != val2) { ut_failf(uts, __FILE__, __LINE__, __func__, #expr1 " = " #expr2, "Expected %p, got %p", val1, val2); return CMD_RET_FAILURE; } }#define ut_assertnull(expr) { const void *val = (expr); if (val != NULL) { ut_failf(uts, __FILE__, __LINE__, __func__, #expr " != NULL", "Expected NULL, got %p", val); return CMD_RET_FAILURE; } }#define BLOBLIST_TEST(_name,_flags) UNIT_TEST(_name, _flags, bloblist_test)#define pr_debug(fmt,__VA_ARGS__...) __printk(7, pr_fmt(fmt), ## __VA_ARGS__)#define pr_devel(fmt,__VA_ARGS__...) __printk(7, pr_fmt(fmt), ## __VA_ARGS__)#define debug_cond(cond,fmt,args...) do { if (cond) printf(pr_fmt(fmt), ## args); } while (0)#define _DEBUG 1#define COMPRESSION_TEST(_name,_flags) UNIT_TEST(_name, _flags, compression_test)#define __TEST_COMPRESSION_H__#define ut_assert(cond) if (!(cond)) { ut_fail(uts, __FILE__, __LINE__, __func__, #cond); return CMD_RET_FAILURE; }#define errcheck(statement) if (!(statement)) { fprintf(stderr, "\tFailed: %s\n", #statement); ret = 1; goto out; }#define TEST_BUFFER_SIZE 512#define ut_asserteq_str(expr1,expr2) { const char *val1 = (expr1), *val2 = (expr2); if (strcmp(val1, val2)) { ut_failf(uts, __FILE__, __LINE__, __func__, #expr1 " = " #expr2, "Expected \"%s\", got \"%s\"", val1, val2); return CMD_RET_FAILURE; } }#define ut_assertnonnull(expr) { const void *val = (expr); if (val == NULL) { ut_failf(uts, __FILE__, __LINE__, __func__, #expr " = NULL", "Expected non-null, got NULL"); return CMD_RET_FAILURE; } }#define NODE_COUNT 10#define ut_assertf(cond,fmt,args...) if (!(cond)) { ut_failf(uts, __FILE__, __LINE__, __func__, #cond, fmt, ## args); return CMD_RET_FAILURE; }#define DM_TEST_ETH_NUM 4#define SANDBOX_PHY_REG 0#define TEST_REG_VALUE 0xabcd#define ut_asserteq_mem(expr1,expr2,len) { const u8 *val1 = (u8 *)(expr1), *val2 = (u8 *)(expr2); const uint __len = len; if (memcmp(val1, val2, __len)) { char __buf1[64 + 1] = "\0"; char __buf2[64 + 1] = "\0"; bin2hex(__buf1, val1, min(__len, (uint)32)); bin2hex(__buf2, val2, min(__len, (uint)32)); ut_failf(uts, __FILE__, __LINE__, __func__, #expr1 " = " #expr2, "Expected \"%s\", got \"%s\"", __buf1, __buf2); return CMD_RET_FAILURE; } }#define MC34708_PMIC_TEST_VAL 0x125534#define MC34708_PMIC_REG_COUNT 64#define TEST_POWER_DOMAIN 2#define ut_assertok_ptr(expr) { const void *val = (expr); if (IS_ERR(val)) { ut_failf(uts, __FILE__, __LINE__, __func__, #expr " = NULL", "Expected pointer, got error %ld", PTR_ERR(val)); return CMD_RET_FAILURE; } }#define DEVICE_TO_PHYSICAL_OFFSET 0x1000#define TEST_RESET_ID 2#define OTHER_RESET_ID 2#define SCROLL_LINES 100#define ANSI_ESC "\x1b"#define WHITE 0xffff#define ENV_TEST(_name,_flags) UNIT_TEST(_name, _flags, env_test)#define __TEST_ENV_H__#define SIZE 32#define ITERATIONS 10000#define LIB_TEST(_name,_flags) UNIT_TEST(_name, _flags, lib_test)#define __TEST_LIB_H__#define __TEST_SUITES_H__#define __TEST_UT_H#define ASSERT_LMB(lmb,ram_base,ram_size,num_reserved,base1,size1,base2,size2,base3,size3) ut_assert(!check_lmb(uts, lmb, ram_base, ram_size, num_reserved, base1, size1, base2, size2, base3, size3))#define BUFLEN (SWEEP + 33)#define SWEEP 16#define MASK 0xA5#define OVERLAY_TEST(_name,_flags) UNIT_TEST(_name, _flags, overlay_test)#define __TEST_OVERLAY_H__#define FDT_COPY_SIZE (4 * SZ_1K)#define FAKE_BUILD_TAG "jenkins-u-boot-denx_uboot_dm-master-build-aarch64" "and a lot more text to come"#define UNICODE_TEST(_name) UNIT_TEST(_name, 0, unicode_test)#define be64_to_cpu(x) uswap_64(x)#define be32_to_cpu(x) uswap_32(x)#define be16_to_cpu(x) uswap_16(x)#define cpu_to_be64(x) uswap_64(x)#define cpu_to_be32(x) uswap_32(x)#define cpu_to_be16(x) uswap_16(x)#define le64_to_cpu(x) (x)#define le32_to_cpu(x) (x)#define le16_to_cpu(x) (x)#define cpu_to_le64(x) (x)#define cpu_to_le32(x) (x)#define cpu_to_le16(x) (x)#define uswap_64(x) _uswap_64(x, ull)#define _uswap_64(x,sfx) ((((x) & 0xff00000000000000 ## sfx) >> 56) | (((x) & 0x00ff000000000000 ## sfx) >> 40) | (((x) & 0x0000ff0000000000 ## sfx) >> 24) | (((x) & 0x000000ff00000000 ## sfx) >> 8) | (((x) & 0x00000000ff000000 ## sfx) << 8) | (((x) & 0x0000000000ff0000 ## sfx) << 24) | (((x) & 0x000000000000ff00 ## sfx) << 40) | (((x) & 0x00000000000000ff ## sfx) << 56))#define uswap_32(x) ((((x) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | (((x) & 0x0000ff00) << 8) | (((x) & 0x000000ff) << 24))#define uswap_16(x) ((((x) & 0xff00) >> 8) | (((x) & 0x00ff) << 8))#define O_BINARY 0#define USE_HOSTCC 1#define __FDT_HOST_H__#define U_BOOT_IMAGE_TYPE(_id,_name,_header_size,_header,_check_params,_verify_header,_print_header,_set_header,_extract_subimage,_check_image_type,_fflag_handle,_vrec_header) static struct image_type_params __cat(image_type_, _id) = { .name = _name, .header_size = _header_size, .hdr = _header, .check_params = _check_params, .verify_header = _verify_header, .print_header = _print_header, .set_header = _set_header, .extract_subimage = _extract_subimage, .check_image_type = _check_image_type, .fflag_handle = _fflag_handle, .vrec_header = _vrec_header }; static struct image_type_params *SECTION(image_type) __used __cat(image_type_ptr_, _id) = &__cat(image_type_, _id)#define SECTION(name) __attribute__((section(#name)))#define INIT_SECTION(name)#define __cat(a,b) ___cat(a, b)#define ___cat(a,b) a ## b#define IH_ARCH_DEFAULT IH_ARCH_INVALID#define _IMAGETOOL_H_#define AIS_FCN_MAX 8#define CMD_DATA_STR "DATA"#define AIS_MAGIC_WORD 0x41504954#define _AISIMAGE_H_#define __arch_swab64 __arch_swab64#define __arch_swab32 __arch_swab32#define _ASM_X86_SWAB_H#define __swahb32(x) (__builtin_constant_p((__u32)(x)) ? ___constant_swahb32(x) : __fswahb32(x))#define ___constant_swahb32(x) ((__u32)( (((__u32)(x) & (__u32)0x00ff00ffUL) << 8) | (((__u32)(x) & (__u32)0xff00ff00UL) >> 8)))#define __swahw32(x) (__builtin_constant_p((__u32)(x)) ? ___constant_swahw32(x) : __fswahw32(x))#define ___constant_swahw32(x) ((__u32)( (((__u32)(x) & (__u32)0x0000ffffUL) << 16) | (((__u32)(x) & (__u32)0xffff0000UL) >> 16)))#define __swab64(x) (__builtin_constant_p((__u64)(x)) ? ___constant_swab64(x) : __fswab64(x))#define ___constant_swab64(x) ((__u64)( (((__u64)(x) & (__u64)0x00000000000000ffULL) << 56) | (((__u64)(x) & (__u64)0x000000000000ff00ULL) << 40) | (((__u64)(x) & (__u64)0x0000000000ff0000ULL) << 24) | (((__u64)(x) & (__u64)0x00000000ff000000ULL) << 8) | (((__u64)(x) & (__u64)0x000000ff00000000ULL) >> 8) | (((__u64)(x) & (__u64)0x0000ff0000000000ULL) >> 24) | (((__u64)(x) & (__u64)0x00ff000000000000ULL) >> 40) | (((__u64)(x) & (__u64)0xff00000000000000ULL) >> 56)))#define __swab32(x) (__builtin_constant_p((__u32)(x)) ? ___constant_swab32(x) : __fswab32(x))#define ___constant_swab32(x) ((__u32)( (((__u32)(x) & (__u32)0x000000ffUL) << 24) | (((__u32)(x) & (__u32)0x0000ff00UL) << 8) | (((__u32)(x) & (__u32)0x00ff0000UL) >> 8) | (((__u32)(x) & (__u32)0xff000000UL) >> 24)))#define __swab16(x) (__builtin_constant_p((__u16)(x)) ? ___constant_swab16(x) : __fswab16(x))#define ___constant_swab16(x) ((__u16)( (((__u16)(x) & (__u16)0x00ffU) << 8) | (((__u16)(x) & (__u16)0xff00U) >> 8)))#define _LINUX_SWAB_H#define __be16_to_cpu(x) __swab16((__u16)(__be16)(x))#define __cpu_to_be16(x) ((__be16)__swab16((x)))#define __be32_to_cpu(x) __swab32((__u32)(__be32)(x))#define __cpu_to_be32(x) ((__be32)__swab32((x)))#define __be64_to_cpu(x) __swab64((__u64)(__be64)(x))#define __cpu_to_be64(x) ((__be64)__swab64((x)))#define __le16_to_cpu(x) ((__u16)(__le16)(x))#define __cpu_to_le16(x) ((__le16)(__u16)(x))#define __le32_to_cpu(x) ((__u32)(__le32)(x))#define __cpu_to_le32(x) ((__le32)(__u32)(x))#define __le64_to_cpu(x) ((__u64)(__le64)(x))#define __cpu_to_le64(x) ((__le64)(__u64)(x))#define __constant_be16_to_cpu(x) ___constant_swab16((__u16)(__be16)(x))#define __constant_cpu_to_be16(x) ((__be16)___constant_swab16((x)))#define __constant_be32_to_cpu(x) ___constant_swab32((__u32)(__be32)(x))#define __constant_cpu_to_be32(x) ((__be32)___constant_swab32((x)))#define __constant_be64_to_cpu(x) ___constant_swab64((__u64)(__be64)(x))#define __constant_cpu_to_be64(x) ((__be64)___constant_swab64((x)))#define __constant_le16_to_cpu(x) ((__u16)(__le16)(x))#define __constant_cpu_to_le16(x) ((__le16)(__u16)(x))#define __constant_le32_to_cpu(x) ((__u32)(__le32)(x))#define __constant_cpu_to_le32(x) ((__le32)(__u32)(x))#define __constant_le64_to_cpu(x) ((__u64)(__le64)(x))#define __constant_cpu_to_le64(x) ((__le64)(__u64)(x))#define __constant_ntohs(x) ___constant_swab16((__be16)(x))#define __constant_htons(x) ((__be16)___constant_swab16((x)))#define __constant_ntohl(x) ___constant_swab32((__be32)(x))#define __constant_htonl(x) ((__be32)___constant_swab32((x)))#define _ASM_X86_BYTEORDER_H#define SHLIB_VERSION_NUMBER "1.1"#define SHLIB_VERSION_HISTORY ""#define OPENSSL_VERSION_TEXT "OpenSSL 1.1.1  11 Sep 2018"#define OPENSSL_VERSION_NUMBER 0x1010100fL#define HEADER_OPENSSLV_H#define RC4_INT unsigned int#define SIXTY_FOUR_BIT_LONG#define OPENSSL_UNISTD <unistd.h>#define DEPRECATEDIN_0_9_8(f) DECLARE_DEPRECATED(f)#define DEPRECATEDIN_1_0_0(f) DECLARE_DEPRECATED(f)#define DEPRECATEDIN_1_1_0(f) DECLARE_DEPRECATED(f)#define DEPRECATEDIN_1_2_0(f) f;#define OPENSSL_API_COMPAT OPENSSL_MIN_API#define OPENSSL_MIN_API 0#define OPENSSL_LINE __LINE__#define OPENSSL_FILE __FILE__#define DECLARE_DEPRECATED(f) f __attribute__ ((deprecated));#define DECLARE_DEPRECATED(f) f;#define NON_EMPTY_TRANSLATION_UNIT static void *dummy = &dummy;#define OPENSSL_NO_STATIC_ENGINE#define OPENSSL_NO_WEAK_SSL_CIPHERS#define OPENSSL_NO_UBSAN#define OPENSSL_NO_SSL3_METHOD#define OPENSSL_NO_SSL3#define OPENSSL_NO_SSL_TRACE#define OPENSSL_NO_SCTP#define OPENSSL_NO_MSAN#define OPENSSL_NO_HEARTBEATS#define OPENSSL_NO_FUZZ_LIBFUZZER#define OPENSSL_NO_FUZZ_AFL#define OPENSSL_NO_EXTERNAL_TESTS#define OPENSSL_NO_EGD#define OPENSSL_NO_DEVCRYPTOENG#define OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE#define OPENSSL_NO_CRYPTO_MDEBUG#define OPENSSL_NO_ASAN#define OPENSSL_RAND_SEED_OS#define OPENSSL_THREADS#define OPENSSL_NO_RC5#define OPENSSL_NO_MDC2#define OPENSSL_NO_MD2#define OPENSSL_NO_IDEA#define RE_DUP_MAX (0x7fff)#define CHARCLASS_NAME_MAX 2048#define LINE_MAX _POSIX2_LINE_MAX#define EXPR_NEST_MAX _POSIX2_EXPR_NEST_MAX#define COLL_WEIGHTS_MAX 255#define BC_STRING_MAX _POSIX2_BC_STRING_MAX#define BC_SCALE_MAX _POSIX2_BC_SCALE_MAX#define BC_DIM_MAX _POSIX2_BC_DIM_MAX#define BC_BASE_MAX _POSIX2_BC_BASE_MAX#define _POSIX2_CHARCLASS_NAME_MAX 14#define _POSIX2_RE_DUP_MAX 255#define _POSIX2_LINE_MAX 2048#define _POSIX2_EXPR_NEST_MAX 32#define _POSIX2_COLL_WEIGHTS_MAX 2#define _POSIX2_BC_STRING_MAX 1000#define _POSIX2_BC_SCALE_MAX 99#define _POSIX2_BC_DIM_MAX 2048#define _POSIX2_BC_BASE_MAX 99#define _BITS_POSIX2_LIM_H 1#define __IOV_MAX 1024#define _BITS_UIO_LIM_H 1#define LONG_BIT 64#define WORD_BIT 32#define NZERO 20#define NL_TEXTMAX INT_MAX#define NL_SETMAX INT_MAX#define NL_NMAX INT_MAX#define NL_MSGMAX INT_MAX#define NL_LANGMAX _POSIX2_LINE_MAX#define NL_ARGMAX _POSIX_ARG_MAX#define IOV_MAX __IOV_MAX#define _XOPEN_IOV_MAX _POSIX_UIO_MAXIOV#define _XOPEN_LIM_H 1#define __LONG_MAX__ 0x7fffffffffffffffL#define __INT_MAX__ 0x7fffffff#define ULLONG_WIDTH 64#define LLONG_WIDTH 64#define ULONG_WIDTH __WORDSIZE#define LONG_WIDTH __WORDSIZE#define UINT_WIDTH 32#define INT_WIDTH 32#define USHRT_WIDTH 16#define SHRT_WIDTH 16#define UCHAR_WIDTH 8#define SCHAR_WIDTH 8#define CHAR_WIDTH 8#define ULLONG_MAX (LLONG_MAX * 2ULL + 1)#define LLONG_MAX __LONG_LONG_MAX__#define LLONG_MIN (-LLONG_MAX-1)#define MB_LEN_MAX 16#define _LIBC_LIMITS_H_ 1#define _GCC_LIMITS_H_#define _GCC_NEXT_LIMITS_H#define ULONG_LONG_MAX (LONG_LONG_MAX * 2ULL + 1ULL)#define LONG_LONG_MAX __LONG_LONG_MAX__#define LONG_LONG_MIN (-LONG_LONG_MAX - 1LL)#define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)#define LLONG_MIN (-LLONG_MAX - 1LL)#define ULONG_MAX (LONG_MAX * 2UL + 1UL)#define LONG_MAX __LONG_MAX__#define LONG_MIN (-LONG_MAX - 1L)#define UINT_MAX (INT_MAX * 2U + 1U)#define INT_MAX __INT_MAX__#define USHRT_MAX (SHRT_MAX * 2 + 1)#define SHRT_MAX __SHRT_MAX__#define SHRT_MIN (-SHRT_MAX - 1)#define CHAR_MAX SCHAR_MAX#define CHAR_MIN SCHAR_MIN#define UCHAR_MAX (SCHAR_MAX * 2 + 1)#define SCHAR_MAX __SCHAR_MAX__#define SCHAR_MIN (-SCHAR_MAX - 1)#define CHAR_BIT __CHAR_BIT__#define _LIMITS_H___#define __STDC_VERSION__ 199901L#define __SHRT_MAX__ 0x7fff#define __SCHAR_MAX__ 0x7f#define ossl_noreturn __attribute__((noreturn))#define ossl_inline inline#define __owur#define OSSL_SSIZE_MAX SSIZE_MAX#define ossl_ssize_t ssize_t#define OPENSSL_GLOBAL_REF(name) _shadow_ ## name#define OPENSSL_DECLARE_GLOBAL(type,name) OPENSSL_EXPORT type _shadow_ ## name#define OPENSSL_IMPLEMENT_GLOBAL(type,name,value) type _shadow_ ## name=value;#define OPENSSL_EXTERN extern#define OPENSSL_EXPORT extern#define OPENSSL_DECLARE_EXIT#define OPENSSL_UNISTD_IO OPENSSL_UNISTD#define OPENSSL_SYS_LINUX#define OPENSSL_SYS_UNIX#define HEADER_E_OS2_H#define HEADER_OPENSSL_TYPES_H#define HEADER_SYMHACKS_H#define sk_is_sorted OPENSSL_sk_is_sorted#define sk_sort OPENSSL_sk_sort#define sk_dup OPENSSL_sk_dup#define sk_set_cmp_func OPENSSL_sk_set_cmp_func#define sk_zero OPENSSL_sk_zero#define sk_pop OPENSSL_sk_pop#define sk_shift OPENSSL_sk_shift#define sk_unshift OPENSSL_sk_unshift#define sk_push OPENSSL_sk_push#define sk_find_ex OPENSSL_sk_find_ex#define sk_find OPENSSL_sk_find#define sk_delete_ptr OPENSSL_sk_delete_ptr#define sk_delete OPENSSL_sk_delete#define sk_insert OPENSSL_sk_insert#define sk_deep_copy OPENSSL_sk_deep_copy#define sk_pop_free OPENSSL_sk_pop_free#define sk_free OPENSSL_sk_free#define sk_new_null OPENSSL_sk_new_null#define sk_new OPENSSL_sk_new#define sk_set OPENSSL_sk_set#define sk_value OPENSSL_sk_value#define sk_num OPENSSL_sk_num#define _STACK OPENSSL_STACK#define HEADER_STACK_H#define SKM_DEFINE_STACK_OF(t1,t2,t3) STACK_OF(t1); typedef int (*sk_ ## t1 ## _compfunc)(const t3 * const *a, const t3 *const *b); typedef void (*sk_ ## t1 ## _freefunc)(t3 *a); typedef t3 * (*sk_ ## t1 ## _copyfunc)(const t3 *a); static ossl_inline int sk_ ## t1 ## _num(const STACK_OF(t1) *sk) { return OPENSSL_sk_num((const OPENSSL_STACK *)sk); } static ossl_inline t2 *sk_ ## t1 ## _value(const STACK_OF(t1) *sk, int idx) { return (t2 *)OPENSSL_sk_value((const OPENSSL_STACK *)sk, idx); } static ossl_inline STACK_OF(t1) *sk_ ## t1 ## _new(sk_ ## t1 ## _compfunc compare) { return (STACK_OF(t1) *)OPENSSL_sk_new((OPENSSL_sk_compfunc)compare); } static ossl_inline STACK_OF(t1) *sk_ ## t1 ## _new_null(void) { return (STACK_OF(t1) *)OPENSSL_sk_new_null(); } static ossl_inline STACK_OF(t1) *sk_ ## t1 ## _new_reserve(sk_ ## t1 ## _compfunc compare, int n) { return (STACK_OF(t1) *)OPENSSL_sk_new_reserve((OPENSSL_sk_compfunc)compare, n); } static ossl_inline int sk_ ## t1 ## _reserve(STACK_OF(t1) *sk, int n) { return OPENSSL_sk_reserve((OPENSSL_STACK *)sk, n); } static ossl_inline void sk_ ## t1 ## _free(STACK_OF(t1) *sk) { OPENSSL_sk_free((OPENSSL_STACK *)sk); } static ossl_inline void sk_ ## t1 ## _zero(STACK_OF(t1) *sk) { OPENSSL_sk_zero((OPENSSL_STACK *)sk); } static ossl_inline t2 *sk_ ## t1 ## _delete(STACK_OF(t1) *sk, int i) { return (t2 *)OPENSSL_sk_delete((OPENSSL_STACK *)sk, i); } static ossl_inline t2 *sk_ ## t1 ## _delete_ptr(STACK_OF(t1) *sk, t2 *ptr) { return (t2 *)OPENSSL_sk_delete_ptr((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_inline int sk_ ## t1 ## _push(STACK_OF(t1) *sk, t2 *ptr) { return OPENSSL_sk_push((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_inline int sk_ ## t1 ## _unshift(STACK_OF(t1) *sk, t2 *ptr) { return OPENSSL_sk_unshift((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_inline t2 *sk_ ## t1 ## _pop(STACK_OF(t1) *sk) { return (t2 *)OPENSSL_sk_pop((OPENSSL_STACK *)sk); } static ossl_inline t2 *sk_ ## t1 ## _shift(STACK_OF(t1) *sk) { return (t2 *)OPENSSL_sk_shift((OPENSSL_STACK *)sk); } static ossl_inline void sk_ ## t1 ## _pop_free(STACK_OF(t1) *sk, sk_ ## t1 ## _freefunc freefunc) { OPENSSL_sk_pop_free((OPENSSL_STACK *)sk, (OPENSSL_sk_freefunc)freefunc); } static ossl_inline int sk_ ## t1 ## _insert(STACK_OF(t1) *sk, t2 *ptr, int idx) { return OPENSSL_sk_insert((OPENSSL_STACK *)sk, (const void *)ptr, idx); } static ossl_inline t2 *sk_ ## t1 ## _set(STACK_OF(t1) *sk, int idx, t2 *ptr) { return (t2 *)OPENSSL_sk_set((OPENSSL_STACK *)sk, idx, (const void *)ptr); } static ossl_inline int sk_ ## t1 ## _find(STACK_OF(t1) *sk, t2 *ptr) { return OPENSSL_sk_find((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_inline int sk_ ## t1 ## _find_ex(STACK_OF(t1) *sk, t2 *ptr) { return OPENSSL_sk_find_ex((OPENSSL_STACK *)sk, (const void *)ptr); } static ossl_inline void sk_ ## t1 ## _sort(STACK_OF(t1) *sk) { OPENSSL_sk_sort((OPENSSL_STACK *)sk); } static ossl_inline int sk_ ## t1 ## _is_sorted(const STACK_OF(t1) *sk) { return OPENSSL_sk_is_sorted((const OPENSSL_STACK *)sk); } static ossl_inline STACK_OF(t1) * sk_ ## t1 ## _dup(const STACK_OF(t1) *sk) { return (STACK_OF(t1) *)OPENSSL_sk_dup((const OPENSSL_STACK *)sk); } static ossl_inline STACK_OF(t1) *sk_ ## t1 ## _deep_copy(const STACK_OF(t1) *sk, sk_ ## t1 ## _copyfunc copyfunc, sk_ ## t1 ## _freefunc freefunc) { return (STACK_OF(t1) *)OPENSSL_sk_deep_copy((const OPENSSL_STACK *)sk, (OPENSSL_sk_copyfunc)copyfunc, (OPENSSL_sk_freefunc)freefunc); } static ossl_inline sk_ ## t1 ## _compfunc sk_ ## t1 ## _set_cmp_func(STACK_OF(t1) *sk, sk_ ## t1 ## _compfunc compare) { return (sk_ ## t1 ## _compfunc)OPENSSL_sk_set_cmp_func((OPENSSL_STACK *)sk, (OPENSSL_sk_compfunc)compare); }#define DEFINE_SPECIAL_STACK_OF(t1,t2) SKM_DEFINE_STACK_OF(t1, t2, t2)#define STACK_OF(type) struct stack_st_ ## type#define DEFINE_SPECIAL_STACK_OF_CONST(t1,t2) SKM_DEFINE_STACK_OF(t1, const t2, t2)#define DEFINE_STACK_OF_CONST(t) SKM_DEFINE_STACK_OF(t, const t, t)#define DEFINE_STACK_OF(t) SKM_DEFINE_STACK_OF(t, t, t)#define HEADER_SAFESTACK_H#define CRYPTO_R_ODD_NUMBER_OF_DIGITS 103#define CRYPTO_R_ILLEGAL_HEX_DIGIT 102#define CRYPTO_R_FIPS_MODE_NOT_SUPPORTED 101#define CRYPTO_F_SK_RESERVE 129#define CRYPTO_F_PKEY_SIPHASH_INIT 125#define CRYPTO_F_PKEY_POLY1305_INIT 124#define CRYPTO_F_PKEY_HMAC_INIT 123#define CRYPTO_F_OPENSSL_SK_DUP 128#define CRYPTO_F_OPENSSL_SK_DEEP_COPY 127#define CRYPTO_F_OPENSSL_LH_NEW 126#define CRYPTO_F_OPENSSL_INIT_CRYPTO 116#define CRYPTO_F_OPENSSL_HEXSTR2BUF 118#define CRYPTO_F_OPENSSL_FOPEN 119#define CRYPTO_F_OPENSSL_BUF2HEXSTR 117#define CRYPTO_F_OPENSSL_ATEXIT 114#define CRYPTO_F_GET_AND_LOCK 113#define CRYPTO_F_FIPS_MODE_SET 109#define CRYPTO_F_CRYPTO_SET_EX_DATA 102#define CRYPTO_F_CRYPTO_OCB128_INIT 122#define CRYPTO_F_CRYPTO_OCB128_COPY_CTX 121#define CRYPTO_F_CRYPTO_NEW_EX_DATA 112#define CRYPTO_F_CRYPTO_MEMDUP 115#define CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX 100#define CRYPTO_F_CRYPTO_FREE_EX_DATA 111#define CRYPTO_F_CRYPTO_DUP_EX_DATA 110#define CRYPTO_F_CMAC_CTX_NEW 120#define HEADER_CRYPTOERR_H#define _BITS_TYPES_STRUCT_SCHED_PARAM 1#define CLONE_IO 0x80000000#define CLONE_NEWNET 0x40000000#define CLONE_NEWPID 0x20000000#define CLONE_NEWUSER 0x10000000#define CLONE_NEWIPC 0x08000000#define CLONE_NEWUTS 0x04000000#define CLONE_NEWCGROUP 0x02000000#define CLONE_CHILD_SETTID 0x01000000#define CLONE_UNTRACED 0x00800000#define CLONE_DETACHED 0x00400000#define CLONE_CHILD_CLEARTID 0x00200000#define CLONE_PARENT_SETTID 0x00100000#define CLONE_SETTLS 0x00080000#define CLONE_SYSVSEM 0x00040000#define CLONE_NEWNS 0x00020000#define CLONE_THREAD 0x00010000#define CLONE_PARENT 0x00008000#define CLONE_VFORK 0x00004000#define CLONE_PTRACE 0x00002000#define CLONE_SIGHAND 0x00000800#define CLONE_FILES 0x00000400#define CLONE_FS 0x00000200#define CLONE_VM 0x00000100#define CSIGNAL 0x000000ff#define SCHED_RESET_ON_FORK 0x40000000#define SCHED_DEADLINE 6#define SCHED_IDLE 5#define SCHED_ISO 4#define SCHED_BATCH 3#define SCHED_RR 2#define SCHED_FIFO 1#define SCHED_OTHER 0#define _BITS_SCHED_H 1#define _SCHED_H 1#define __CPU_SETSIZE 1024#define __NCPUBITS (8 * sizeof (__cpu_mask))#define __CPU_FREE(cpuset) __sched_cpufree (cpuset)#define __CPU_ALLOC(count) __sched_cpualloc (count)#define __CPU_ALLOC_SIZE(count) ((((count) + __NCPUBITS - 1) / __NCPUBITS) * sizeof (__cpu_mask))#define __CPU_OP_S(setsize,destset,srcset1,srcset2,op) (__extension__ ({ cpu_set_t *__dest = (destset); const __cpu_mask *__arr1 = (srcset1)->__bits; const __cpu_mask *__arr2 = (srcset2)->__bits; size_t __imax = (setsize) / sizeof (__cpu_mask); size_t __i; for (__i = 0; __i < __imax; ++__i) ((__cpu_mask *) __dest->__bits)[__i] = __arr1[__i] op __arr2[__i]; __dest; }))#define __CPU_EQUAL_S(setsize,cpusetp1,cpusetp2) (__builtin_memcmp (cpusetp1, cpusetp2, setsize) == 0)#define __CPU_COUNT_S(setsize,cpusetp) __sched_cpucount (setsize, cpusetp)#define __CPU_ISSET_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? ((((const __cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] & __CPUMASK (__cpu))) != 0 : 0; }))#define __CPU_CLR_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] &= ~__CPUMASK (__cpu)) : 0; }))#define __CPU_SET_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] |= __CPUMASK (__cpu)) : 0; }))#define __CPU_ZERO_S(setsize,cpusetp) do __builtin_memset (cpusetp, '\0', setsize); while (0)#define __CPUMASK(cpu) ((__cpu_mask) 1 << ((cpu) % __NCPUBITS))#define __CPUELT(cpu) ((cpu) / __NCPUBITS)#define _BITS_CPU_SET_H 1#define CPU_FREE(cpuset) __CPU_FREE (cpuset)#define CPU_ALLOC(count) __CPU_ALLOC (count)#define CPU_ALLOC_SIZE(count) __CPU_ALLOC_SIZE (count)#define CPU_XOR_S(setsize,destset,srcset1,srcset2) __CPU_OP_S (setsize, destset, srcset1, srcset2, ^)#define CPU_OR_S(setsize,destset,srcset1,srcset2) __CPU_OP_S (setsize, destset, srcset1, srcset2, |)#define CPU_AND_S(setsize,destset,srcset1,srcset2) __CPU_OP_S (setsize, destset, srcset1, srcset2, &)#define CPU_XOR(destset,srcset1,srcset2) __CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, ^)#define CPU_OR(destset,srcset1,srcset2) __CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, |)#define CPU_AND(destset,srcset1,srcset2) __CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, &)#define CPU_EQUAL_S(setsize,cpusetp1,cpusetp2) __CPU_EQUAL_S (setsize, cpusetp1, cpusetp2)#define CPU_EQUAL(cpusetp1,cpusetp2) __CPU_EQUAL_S (sizeof (cpu_set_t), cpusetp1, cpusetp2)#define CPU_COUNT_S(setsize,cpusetp) __CPU_COUNT_S (setsize, cpusetp)#define CPU_ZERO_S(setsize,cpusetp) __CPU_ZERO_S (setsize, cpusetp)#define CPU_ISSET_S(cpu,setsize,cpusetp) __CPU_ISSET_S (cpu, setsize, cpusetp)#define CPU_CLR_S(cpu,setsize,cpusetp) __CPU_CLR_S (cpu, setsize, cpusetp)#define CPU_SET_S(cpu,setsize,cpusetp) __CPU_SET_S (cpu, setsize, cpusetp)#define CPU_COUNT(cpusetp) __CPU_COUNT_S (sizeof (cpu_set_t), cpusetp)#define CPU_ZERO(cpusetp) __CPU_ZERO_S (sizeof (cpu_set_t), cpusetp)#define CPU_ISSET(cpu,cpusetp) __CPU_ISSET_S (cpu, sizeof (cpu_set_t), cpusetp)#define CPU_CLR(cpu,cpusetp) __CPU_CLR_S (cpu, sizeof (cpu_set_t), cpusetp)#define CPU_SET(cpu,cpusetp) __CPU_SET_S (cpu, sizeof (cpu_set_t), cpusetp)#define CPU_SETSIZE __CPU_SETSIZE#define __sched_priority sched_priority#define sched_priority sched_priority#define _PTHREAD_H 1#define pthread_cleanup_pop_restore_np(execute) do { } while (0); } while (0); __pthread_unregister_cancel_restore (&__cancel_buf); if (execute) __cancel_routine (__cancel_arg); } while (0)#define pthread_cleanup_push_defer_np(routine,arg) do { __pthread_unwind_buf_t __cancel_buf; void (*__cancel_routine) (void *) = (routine); void *__cancel_arg = (arg); int __not_first_call = __sigsetjmp ((struct __jmp_buf_tag *) (void *) __cancel_buf.__cancel_jmp_buf, 0); if (__glibc_unlikely (__not_first_call)) { __cancel_routine (__cancel_arg); __pthread_unwind_next (&__cancel_buf); } __pthread_register_cancel_defer (&__cancel_buf); do {#define pthread_cleanup_pop(execute) do { } while (0); } while (0); __pthread_unregister_cancel (&__cancel_buf); if (execute) __cancel_routine (__cancel_arg); } while (0)#define pthread_cleanup_push(routine,arg) do { __pthread_unwind_buf_t __cancel_buf; void (*__cancel_routine) (void *) = (routine); void *__cancel_arg = (arg); int __not_first_call = __sigsetjmp ((struct __jmp_buf_tag *) (void *) __cancel_buf.__cancel_jmp_buf, 0); if (__glibc_unlikely (__not_first_call)) { __cancel_routine (__cancel_arg); __pthread_unwind_next (&__cancel_buf); } __pthread_register_cancel (&__cancel_buf); do {#define __cleanup_fct_attribute#define PTHREAD_BARRIER_SERIAL_THREAD -1#define PTHREAD_ONCE_INIT 0#define PTHREAD_CANCELED ((void *) -1)#define PTHREAD_CANCEL_ASYNCHRONOUS PTHREAD_CANCEL_ASYNCHRONOUS#define PTHREAD_CANCEL_DEFERRED PTHREAD_CANCEL_DEFERRED#define PTHREAD_CANCEL_DISABLE PTHREAD_CANCEL_DISABLE#define PTHREAD_CANCEL_ENABLE PTHREAD_CANCEL_ENABLE#define PTHREAD_COND_INITIALIZER { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }#define PTHREAD_PROCESS_SHARED PTHREAD_PROCESS_SHARED#define PTHREAD_PROCESS_PRIVATE PTHREAD_PROCESS_PRIVATE#define PTHREAD_SCOPE_PROCESS PTHREAD_SCOPE_PROCESS#define PTHREAD_SCOPE_SYSTEM PTHREAD_SCOPE_SYSTEM#define PTHREAD_EXPLICIT_SCHED PTHREAD_EXPLICIT_SCHED#define PTHREAD_INHERIT_SCHED PTHREAD_INHERIT_SCHED#define PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP { { 0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP } }#define PTHREAD_RWLOCK_INITIALIZER { { 0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, 0 } }#define PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP { { 0, 0, 0, 0, PTHREAD_MUTEX_ADAPTIVE_NP, __PTHREAD_SPINS, { 0, 0 } } }#define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP { { 0, 0, 0, 0, PTHREAD_MUTEX_ERRORCHECK_NP, __PTHREAD_SPINS, { 0, 0 } } }#define PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP { { 0, 0, 0, 0, PTHREAD_MUTEX_RECURSIVE_NP, __PTHREAD_SPINS, { 0, 0 } } }#define PTHREAD_MUTEX_INITIALIZER { { 0, 0, 0, 0, 0, __PTHREAD_SPINS, { 0, 0 } } }#define PTHREAD_CREATE_DETACHED PTHREAD_CREATE_DETACHED#define PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_JOINABLE#define CRYPTO_ONCE_STATIC_INIT PTHREAD_ONCE_INIT#define OPENSSL_INIT_ENGINE_ALL_BUILTIN (OPENSSL_INIT_ENGINE_RDRAND | OPENSSL_INIT_ENGINE_DYNAMIC | OPENSSL_INIT_ENGINE_CRYPTODEV | OPENSSL_INIT_ENGINE_CAPI | OPENSSL_INIT_ENGINE_PADLOCK)#define OPENSSL_INIT_ATFORK 0x00020000L#define OPENSSL_INIT_ENGINE_AFALG 0x00008000L#define OPENSSL_INIT_ENGINE_PADLOCK 0x00004000L#define OPENSSL_INIT_ENGINE_CAPI 0x00002000L#define OPENSSL_INIT_ENGINE_CRYPTODEV 0x00001000L#define OPENSSL_INIT_ENGINE_OPENSSL 0x00000800L#define OPENSSL_INIT_ENGINE_DYNAMIC 0x00000400L#define OPENSSL_INIT_ENGINE_RDRAND 0x00000200L#define OPENSSL_INIT_ASYNC 0x00000100L#define OPENSSL_INIT_NO_LOAD_CONFIG 0x00000080L#define OPENSSL_INIT_LOAD_CONFIG 0x00000040L#define OPENSSL_INIT_NO_ADD_ALL_DIGESTS 0x00000020L#define OPENSSL_INIT_NO_ADD_ALL_CIPHERS 0x00000010L#define OPENSSL_INIT_ADD_ALL_DIGESTS 0x00000008L#define OPENSSL_INIT_ADD_ALL_CIPHERS 0x00000004L#define OPENSSL_INIT_LOAD_CRYPTO_STRINGS 0x00000002L#define OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS 0x00000001L#define OPENSSL_assert(e) (void)((e) ? 0 : (OPENSSL_die("assertion failed: " #e, OPENSSL_FILE, OPENSSL_LINE), 1))#define OpenSSLDie(f,l,a) OPENSSL_die((a),(f),(l))#define CRYPTO_get_dynlock_destroy_callback() (NULL)#define CRYPTO_get_dynlock_lock_callback() (NULL)#define CRYPTO_get_dynlock_create_callback() (NULL)#define CRYPTO_set_dynlock_destroy_callback(dyn_destroy_function)#define CRYPTO_set_dynlock_lock_callback(dyn_lock_function)#define CRYPTO_set_dynlock_create_callback(dyn_create_function)#define CRYPTO_thread_id() (0UL)#define CRYPTO_get_id_callback() (NULL)#define CRYPTO_set_id_callback(func)#define CRYPTO_THREADID_hash(id) (0UL)#define CRYPTO_THREADID_cpy(dest,src)#define CRYPTO_THREADID_cmp(a,b) (-1)#define CRYPTO_THREADID_current(id)#define CRYPTO_THREADID_get_callback() (NULL)#define CRYPTO_THREADID_set_callback(threadid_func) (0)#define CRYPTO_THREADID_set_pointer(id,ptr)#define CRYPTO_THREADID_set_numeric(id,val)#define CRYPTO_WRITE 8#define CRYPTO_READ 4#define CRYPTO_UNLOCK 2#define CRYPTO_LOCK 1#define CRYPTO_get_add_lock_callback() (NULL)#define CRYPTO_set_add_lock_callback(func)#define CRYPTO_get_locking_callback() (NULL)#define CRYPTO_set_locking_callback(func)#define CRYPTO_num_locks() (1)#define CRYPTO_cleanup_all_ex_data() while(0) continue#define OPENSSL_ENGINES_DIR 5#define OPENSSL_DIR 4#define OPENSSL_PLATFORM 3#define OPENSSL_BUILT_ON 2#define OPENSSL_CFLAGS 1#define OPENSSL_VERSION 0#define OPENSSL_MALLOC_MAX_NELEMS(type) (((1U<<(sizeof(int)*8-1))-1)/sizeof(type))#define OPENSSL_secure_actual_size(ptr) CRYPTO_secure_actual_size(ptr)#define OPENSSL_secure_clear_free(addr,num) CRYPTO_secure_clear_free(addr, num, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_secure_free(addr) CRYPTO_secure_free(addr, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_secure_zalloc(num) CRYPTO_secure_zalloc(num, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_secure_malloc(num) CRYPTO_secure_malloc(num, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_strndup(str,n) CRYPTO_strndup(str, n, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_strdup(str) CRYPTO_strdup(str, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_memdup(str,s) CRYPTO_memdup((str), s, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_free(addr) CRYPTO_free(addr, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_clear_free(addr,num) CRYPTO_clear_free(addr, num, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_clear_realloc(addr,old_num,num) CRYPTO_clear_realloc(addr, old_num, num, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_realloc(addr,num) CRYPTO_realloc(addr, num, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_zalloc(num) CRYPTO_zalloc(num, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_malloc(num) CRYPTO_malloc(num, OPENSSL_FILE, OPENSSL_LINE)#define OPENSSL_malloc_init() CRYPTO_set_mem_functions(CRYPTO_malloc, CRYPTO_realloc, CRYPTO_free)#define CRYPTO_EX_INDEX__COUNT 16#define CRYPTO_EX_INDEX_DRBG 15#define CRYPTO_EX_INDEX_UI_METHOD 14#define CRYPTO_EX_INDEX_APP 13#define CRYPTO_EX_INDEX_BIO 12#define CRYPTO_EX_INDEX_UI 11#define CRYPTO_EX_INDEX_ENGINE 10#define CRYPTO_EX_INDEX_RSA 9#define CRYPTO_EX_INDEX_EC_KEY 8#define CRYPTO_EX_INDEX_DSA 7#define CRYPTO_EX_INDEX_DH 6#define CRYPTO_EX_INDEX_X509_STORE_CTX 5#define CRYPTO_EX_INDEX_X509_STORE 4#define CRYPTO_EX_INDEX_X509 3#define CRYPTO_EX_INDEX_SSL_SESSION 2#define CRYPTO_EX_INDEX_SSL_CTX 1#define CRYPTO_EX_INDEX_SSL 0#define CRYPTO_MEM_CHECK_DISABLE 0x3#define CRYPTO_MEM_CHECK_ENABLE 0x2#define CRYPTO_MEM_CHECK_ON 0x1#define CRYPTO_MEM_CHECK_OFF 0x0#define SSLEAY_DIR OPENSSL_DIR#define SSLEAY_PLATFORM OPENSSL_PLATFORM#define SSLEAY_BUILT_ON OPENSSL_BUILT_ON#define SSLEAY_CFLAGS OPENSSL_CFLAGS#define SSLEAY_VERSION OPENSSL_VERSION#define SSLEAY_VERSION_NUMBER OPENSSL_VERSION_NUMBER#define SSLeay_version OpenSSL_version#define SSLeay OpenSSL_version_num#define HEADER_CRYPTO_H#define BIO_R_WSASTARTUP 122#define BIO_R_WRITE_TO_READ_ONLY_BIO 126#define BIO_R_UNSUPPORTED_PROTOCOL_FAMILY 131#define BIO_R_UNSUPPORTED_METHOD 121#define BIO_R_UNSUPPORTED_IP_FAMILY 146#define BIO_R_UNKNOWN_INFO_TYPE 140#define BIO_R_UNINITIALIZED 120#define BIO_R_UNAVAILABLE_IP_FAMILY 145#define BIO_R_UNABLE_TO_REUSEADDR 139#define BIO_R_UNABLE_TO_NODELAY 138#define BIO_R_UNABLE_TO_LISTEN_SOCKET 119#define BIO_R_UNABLE_TO_KEEPALIVE 137#define BIO_R_UNABLE_TO_CREATE_SOCKET 118#define BIO_R_UNABLE_TO_BIND_SOCKET 117#define BIO_R_NULL_PARAMETER 115#define BIO_R_NO_SUCH_FILE 128#define BIO_R_NO_PORT_DEFINED 113#define BIO_R_NO_HOSTNAME_OR_SERVICE_SPECIFIED 144#define BIO_R_NO_ACCEPT_ADDR_OR_SERVICE_SPECIFIED 143#define BIO_R_NBIO_CONNECT_ERROR 110#define BIO_R_MALFORMED_HOST_OR_SERVICE 130#define BIO_R_LOOKUP_RETURNED_NOTHING 142#define BIO_R_LISTEN_V6_ONLY 136#define BIO_R_LENGTH_TOO_LONG 102#define BIO_R_IN_USE 123#define BIO_R_INVALID_SOCKET 135#define BIO_R_INVALID_ARGUMENT 125#define BIO_R_GETTING_SOCKTYPE 134#define BIO_R_GETSOCKNAME_TRUNCATED_ADDRESS 133#define BIO_R_GETSOCKNAME_ERROR 132#define BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET 107#define BIO_R_CONNECT_ERROR 103#define BIO_R_BROKEN_PIPE 124#define BIO_R_BAD_FOPEN_MODE 101#define BIO_R_AMBIGUOUS_HOST_OR_SERVICE 129#define BIO_R_ADDRINFO_ADDR_IS_NOT_AF_INET 141#define BIO_R_ACCEPT_ERROR 100#define BIO_F_SSL_NEW 118#define BIO_F_SLG_WRITE 155#define BIO_F_NBIOF_NEW 154#define BIO_F_MEM_WRITE 117#define BIO_F_LINEBUFFER_NEW 151#define BIO_F_LINEBUFFER_CTRL 129#define BIO_F_FILE_READ 130#define BIO_F_FILE_CTRL 116#define BIO_F_DOAPR_OUTCH 150#define BIO_F_DGRAM_SCTP_WRITE 133#define BIO_F_DGRAM_SCTP_READ 132#define BIO_F_DGRAM_SCTP_NEW 149#define BIO_F_CONN_STATE 115#define BIO_F_CONN_CTRL 127#define BIO_F_BUFFER_CTRL 114#define BIO_F_BIO_WRITE_INTERN 128#define BIO_F_BIO_WRITE_EX 119#define BIO_F_BIO_WRITE 113#define BIO_F_BIO_SOCK_INIT 112#define BIO_F_BIO_SOCK_INFO 141#define BIO_F_BIO_SOCKET_NBIO 142#define BIO_F_BIO_SOCKET 140#define BIO_F_BIO_READ_INTERN 120#define BIO_F_BIO_READ_EX 105#define BIO_F_BIO_READ 111#define BIO_F_BIO_PUTS 110#define BIO_F_BIO_PARSE_HOSTSERV 136#define BIO_F_BIO_NWRITE0 122#define BIO_F_BIO_NWRITE 125#define BIO_F_BIO_NREAD0 124#define BIO_F_BIO_NREAD 123#define BIO_F_BIO_NEW_MEM_BUF 126#define BIO_F_BIO_NEW_FILE 109#define BIO_F_BIO_NEW_DGRAM_SCTP 145#define BIO_F_BIO_NEW 108#define BIO_F_BIO_METH_NEW 146#define BIO_F_BIO_MAKE_PAIR 121#define BIO_F_BIO_LOOKUP_EX 143#define BIO_F_BIO_LOOKUP 135#define BIO_F_BIO_LISTEN 139#define BIO_F_BIO_GET_PORT 107#define BIO_F_BIO_GET_NEW_INDEX 102#define BIO_F_BIO_GET_HOST_IP 106#define BIO_F_BIO_GETS 104#define BIO_F_BIO_CTRL 103#define BIO_F_BIO_CONNECT_NEW 153#define BIO_F_BIO_CONNECT 138#define BIO_F_BIO_CALLBACK_CTRL 131#define BIO_F_BIO_BIND 147#define BIO_F_BIO_ADDR_NEW 144#define BIO_F_BIO_ACCEPT_NEW 152#define BIO_F_BIO_ACCEPT_EX 137#define BIO_F_BIO_ACCEPT 101#define BIO_F_ADDR_STRINGS 134#define BIO_F_ADDRINFO_WRAP 148#define BIO_F_ACPT_STATE 100#define HEADER_BIOERR_H#define ossl_bio__printf__ __gnu_printf__#define ossl_bio__attr__ __attribute__#define ossl_bio__attr__(x)#define BIO_SOCK_NODELAY 0x10#define BIO_SOCK_NONBLOCK 0x08#define BIO_SOCK_KEEPALIVE 0x04#define BIO_SOCK_V6_ONLY 0x02#define BIO_SOCK_REUSEADDR 0x01#define BIO_sock_cleanup() while(0) continue#define BIO_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_BIO, l, p, newf, dupf, freef)#define BIO_dgram_get_mtu_overhead(b) (unsigned int)BIO_ctrl((b), BIO_CTRL_DGRAM_GET_MTU_OVERHEAD, 0, NULL)#define BIO_dgram_set_peer(b,peer) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_SET_PEER, 0, (char *)(peer))#define BIO_dgram_get_peer(b,peer) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_PEER, 0, (char *)(peer))#define BIO_dgram_send_timedout(b) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP, 0, NULL)#define BIO_dgram_recv_timedout(b) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP, 0, NULL)#define BIO_ctrl_set_connected(b,peer) (int)BIO_ctrl(b, BIO_CTRL_DGRAM_SET_CONNECTED, 0, (char *)(peer))#define BIO_ctrl_dgram_connect(b,peer) (int)BIO_ctrl(b,BIO_CTRL_DGRAM_CONNECT,0, (char *)(peer))#define BIO_get_read_request(b) (int)BIO_ctrl(b,BIO_C_GET_READ_REQUEST,0,NULL)#define BIO_get_write_guarantee(b) (int)BIO_ctrl(b,BIO_C_GET_WRITE_GUARANTEE,0,NULL)#define BIO_shutdown_wr(b) (int)BIO_ctrl(b, BIO_C_SHUTDOWN_WR, 0, NULL)#define BIO_destroy_bio_pair(b) (int)BIO_ctrl(b,BIO_C_DESTROY_BIO_PAIR,0,NULL)#define BIO_make_bio_pair(b1,b2) (int)BIO_ctrl(b1,BIO_C_MAKE_BIO_PAIR,0,b2)#define BIO_get_write_buf_size(b,size) (size_t)BIO_ctrl(b,BIO_C_GET_WRITE_BUF_SIZE,size,NULL)#define BIO_set_write_buf_size(b,size) (int)BIO_ctrl(b,BIO_C_SET_WRITE_BUF_SIZE,size,NULL)#define BIO_buffer_peek(b,s,l) BIO_ctrl(b,BIO_CTRL_PEEK,(l),(s))#define BIO_buffer_get_num_lines(b) BIO_ctrl(b,BIO_CTRL_GET,0,NULL)#define BIO_set_info_callback(b,cb) (int)BIO_callback_ctrl(b,BIO_CTRL_SET_CALLBACK,cb)#define BIO_get_info_callback(b,cbp) (int)BIO_ctrl(b,BIO_CTRL_GET_CALLBACK,0, cbp)#define BIO_flush(b) (int)BIO_ctrl(b,BIO_CTRL_FLUSH,0,NULL)#define BIO_wpending(b) (int)BIO_ctrl(b,BIO_CTRL_WPENDING,0,NULL)#define BIO_pending(b) (int)BIO_ctrl(b,BIO_CTRL_PENDING,0,NULL)#define BIO_get_close(b) (int)BIO_ctrl(b,BIO_CTRL_GET_CLOSE,0,NULL)#define BIO_set_close(b,c) (int)BIO_ctrl(b,BIO_CTRL_SET_CLOSE,(c),NULL)#define BIO_eof(b) (int)BIO_ctrl(b,BIO_CTRL_EOF,0,NULL)#define BIO_reset(b) (int)BIO_ctrl(b,BIO_CTRL_RESET,0,NULL)#define BIO_dup_state(b,ret) BIO_ctrl(b,BIO_CTRL_DUP,0,(char *)(ret))#define BIO_set_buffer_read_data(b,buf,num) BIO_ctrl(b,BIO_C_SET_BUFF_READ_DATA,num,buf)#define BIO_set_write_buffer_size(b,size) BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,1)#define BIO_set_read_buffer_size(b,size) BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,0)#define BIO_set_buffer_size(b,size) BIO_ctrl(b,BIO_C_SET_BUFF_SIZE,size,NULL)#define BIO_get_buffer_num_lines(b) BIO_ctrl(b,BIO_C_GET_BUFF_NUM_LINES,0,NULL)#define BIO_set_mem_eof_return(b,v) BIO_ctrl(b,BIO_C_SET_BUF_MEM_EOF_RETURN,v,NULL)#define BIO_get_mem_ptr(b,pp) BIO_ctrl(b,BIO_C_GET_BUF_MEM_PTR,0, (char *)(pp))#define BIO_set_mem_buf(b,bm,c) BIO_ctrl(b,BIO_C_SET_BUF_MEM,c,(char *)(bm))#define BIO_get_mem_data(b,pp) BIO_ctrl(b,BIO_CTRL_INFO,0,(char *)(pp))#define BIO_set_ssl_renegotiate_timeout(b,seconds) BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT,seconds,NULL)#define BIO_get_num_renegotiates(b) BIO_ctrl(b,BIO_C_GET_SSL_NUM_RENEGOTIATES,0,NULL)#define BIO_set_ssl_renegotiate_bytes(b,num) BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_BYTES,num,NULL)#define BIO_set_ssl_mode(b,client) BIO_ctrl(b,BIO_C_SSL_MODE,client,NULL)#define BIO_get_ssl(b,sslp) BIO_ctrl(b,BIO_C_GET_SSL,0,(char *)(sslp))#define BIO_set_ssl(b,ssl,c) BIO_ctrl(b,BIO_C_SET_SSL,c,(char *)(ssl))#define BIO_rw_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, BIO_CLOSE|BIO_FP_READ|BIO_FP_WRITE,name)#define BIO_append_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, BIO_CLOSE|BIO_FP_APPEND,name)#define BIO_write_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, BIO_CLOSE|BIO_FP_WRITE,name)#define BIO_read_filename(b,name) (int)BIO_ctrl(b,BIO_C_SET_FILENAME, BIO_CLOSE|BIO_FP_READ,(char *)(name))#define BIO_tell(b) (int)BIO_ctrl(b,BIO_C_FILE_TELL,0,NULL)#define BIO_seek(b,ofs) (int)BIO_ctrl(b,BIO_C_FILE_SEEK,ofs,NULL)#define BIO_get_fp(b,fpp) BIO_ctrl(b,BIO_C_GET_FILE_PTR,0,(char *)(fpp))#define BIO_set_fp(b,fp,c) BIO_ctrl(b,BIO_C_SET_FILE_PTR,c,(char *)(fp))#define BIO_get_fd(b,c) BIO_ctrl(b,BIO_C_GET_FD,0,(char *)(c))#define BIO_set_fd(b,fd,c) BIO_int_ctrl(b,BIO_C_SET_FD,c,fd)#define BIO_do_handshake(b) BIO_ctrl(b,BIO_C_DO_STATE_MACHINE,0,NULL)#define BIO_do_accept(b) BIO_do_handshake(b)#define BIO_do_connect(b) BIO_do_handshake(b)#define BIO_get_bind_mode(b) BIO_ctrl(b,BIO_C_GET_BIND_MODE,0,NULL)#define BIO_set_bind_mode(b,mode) BIO_ctrl(b,BIO_C_SET_BIND_MODE,mode,NULL)#define BIO_BIND_REUSEADDR_IF_UNUSED BIO_SOCK_REUSEADDR#define BIO_BIND_REUSEADDR BIO_SOCK_REUSEADDR#define BIO_BIND_NORMAL 0#define BIO_get_accept_ip_family(b) BIO_ctrl(b,BIO_C_GET_ACCEPT,4,NULL)#define BIO_set_accept_ip_family(b,f) BIO_int_ctrl(b,BIO_C_SET_ACCEPT,4,f)#define BIO_set_accept_bios(b,bio) BIO_ctrl(b,BIO_C_SET_ACCEPT,3, (char *)(bio))#define BIO_set_nbio_accept(b,n) BIO_ctrl(b,BIO_C_SET_ACCEPT,2,(n)?(void *)"a":NULL)#define BIO_get_peer_port(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,3))#define BIO_get_peer_name(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,2))#define BIO_get_accept_port(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,1))#define BIO_get_accept_name(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,0))#define BIO_set_accept_port(b,port) BIO_ctrl(b,BIO_C_SET_ACCEPT,1, (char *)(port))#define BIO_set_accept_name(b,name) BIO_ctrl(b,BIO_C_SET_ACCEPT,0, (char *)(name))#define BIO_set_conn_mode(b,n) BIO_ctrl(b,BIO_C_SET_CONNECT_MODE,(n),NULL)#define BIO_get_conn_ip_family(b) BIO_ctrl(b,BIO_C_GET_CONNECT,3,NULL)#define BIO_get_conn_address(b) ((const BIO_ADDR *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,2))#define BIO_get_conn_port(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,1))#define BIO_get_conn_hostname(b) ((const char *)BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,0))#define BIO_set_conn_ip_family(b,f) BIO_int_ctrl(b,BIO_C_SET_CONNECT,3,f)#define BIO_set_conn_address(b,addr) BIO_ctrl(b,BIO_C_SET_CONNECT,2, (char *)(addr))#define BIO_set_conn_port(b,port) BIO_ctrl(b,BIO_C_SET_CONNECT,1, (char *)(port))#define BIO_set_conn_hostname(b,name) BIO_ctrl(b,BIO_C_SET_CONNECT,0, (char *)(name))#define BIO_FAMILY_IPANY 256#define BIO_FAMILY_IPV6 6#define BIO_FAMILY_IPV4 4#define BIO_set_nbio(b,n) BIO_ctrl(b,BIO_C_SET_NBIO,(n),NULL)#define BIO_get_app_data(s) BIO_get_ex_data(s,0)#define BIO_set_app_data(s,arg) BIO_set_ex_data(s,0,arg)#define BIO_C_SET_CONNECT_MODE 155#define BIO_C_GET_EX_ARG 154#define BIO_C_SET_EX_ARG 153#define BIO_C_GET_SUFFIX 152#define BIO_C_SET_SUFFIX 151#define BIO_C_GET_PREFIX 150#define BIO_C_SET_PREFIX 149#define BIO_C_SET_MD_CTX 148#define BIO_C_RESET_READ_REQUEST 147#define BIO_C_NWRITE 146#define BIO_C_NWRITE0 145#define BIO_C_NREAD 144#define BIO_C_NREAD0 143#define BIO_C_SHUTDOWN_WR 142#define BIO_C_GET_READ_REQUEST 141#define BIO_C_GET_WRITE_GUARANTEE 140#define BIO_C_DESTROY_BIO_PAIR 139#define BIO_C_MAKE_BIO_PAIR 138#define BIO_C_GET_WRITE_BUF_SIZE 137#define BIO_C_SET_WRITE_BUF_SIZE 136#define BIO_C_SET_SOCKS 135#define BIO_C_GET_SOCKS 134#define BIO_C_FILE_TELL 133#define BIO_C_GET_BIND_MODE 132#define BIO_C_SET_BIND_MODE 131#define BIO_C_SET_BUF_MEM_EOF_RETURN 130#define BIO_C_GET_CIPHER_CTX 129#define BIO_C_FILE_SEEK 128#define BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT 127#define BIO_C_GET_SSL_NUM_RENEGOTIATES 126#define BIO_C_SET_SSL_RENEGOTIATE_BYTES 125#define BIO_C_GET_ACCEPT 124#define BIO_C_GET_CONNECT 123#define BIO_C_SET_BUFF_READ_DATA 122#define BIO_C_GET_MD_CTX 120#define BIO_C_SSL_MODE 119#define BIO_C_SET_ACCEPT 118#define BIO_C_SET_BUFF_SIZE 117#define BIO_C_GET_BUFF_NUM_LINES 116#define BIO_C_GET_BUF_MEM_PTR 115#define BIO_C_SET_BUF_MEM 114#define BIO_C_GET_CIPHER_STATUS 113#define BIO_C_GET_MD 112#define BIO_C_SET_MD 111#define BIO_C_GET_SSL 110#define BIO_C_SET_SSL 109#define BIO_C_SET_FILENAME 108#define BIO_C_GET_FILE_PTR 107#define BIO_C_SET_FILE_PTR 106#define BIO_C_GET_FD 105#define BIO_C_SET_FD 104#define BIO_C_SET_NBIO 102#define BIO_C_DO_STATE_MACHINE 101#define BIO_C_SET_CONNECT 100#define BIO_cb_post(a) ((a)&BIO_CB_RETURN)#define BIO_cb_pre(a) (!((a)&BIO_CB_RETURN))#define BIO_CB_return(a) ((a)|BIO_CB_RETURN)#define BIO_CB_RETURN 0x80#define BIO_CB_CTRL 0x06#define BIO_CB_GETS 0x05#define BIO_CB_PUTS 0x04#define BIO_CB_WRITE 0x03#define BIO_CB_READ 0x02#define BIO_CB_FREE 0x01#define BIO_RR_ACCEPT 0x03#define BIO_RR_CONNECT 0x02#define BIO_RR_SSL_X509_LOOKUP 0x01#define BIO_should_retry(a) BIO_test_flags(a, BIO_FLAGS_SHOULD_RETRY)#define BIO_retry_type(a) BIO_test_flags(a, BIO_FLAGS_RWS)#define BIO_should_io_special(a) BIO_test_flags(a, BIO_FLAGS_IO_SPECIAL)#define BIO_should_write(a) BIO_test_flags(a, BIO_FLAGS_WRITE)#define BIO_should_read(a) BIO_test_flags(a, BIO_FLAGS_READ)#define BIO_get_retry_flags(b) BIO_test_flags(b, (BIO_FLAGS_RWS|BIO_FLAGS_SHOULD_RETRY))#define BIO_clear_retry_flags(b) BIO_clear_flags(b, (BIO_FLAGS_RWS|BIO_FLAGS_SHOULD_RETRY))#define BIO_set_retry_write(b) BIO_set_flags(b, (BIO_FLAGS_WRITE|BIO_FLAGS_SHOULD_RETRY))#define BIO_set_retry_read(b) BIO_set_flags(b, (BIO_FLAGS_READ|BIO_FLAGS_SHOULD_RETRY))#define BIO_set_retry_special(b) BIO_set_flags(b, (BIO_FLAGS_IO_SPECIAL|BIO_FLAGS_SHOULD_RETRY))#define BIO_get_flags(b) BIO_test_flags(b, ~(0x0))#define BIO_FLAGS_NONCLEAR_RST 0x400#define BIO_FLAGS_MEM_RDONLY 0x200#define BIO_FLAGS_BASE64_NO_NL 0x100#define BIO_FLAGS_UPLINK 0#define BIO_FLAGS_SHOULD_RETRY 0x08#define BIO_FLAGS_RWS (BIO_FLAGS_READ|BIO_FLAGS_WRITE|BIO_FLAGS_IO_SPECIAL)#define BIO_FLAGS_IO_SPECIAL 0x04#define BIO_FLAGS_WRITE 0x02#define BIO_FLAGS_READ 0x01#define BIO_FP_TEXT 0x10#define BIO_FP_APPEND 0x08#define BIO_FP_WRITE 0x04#define BIO_FP_READ 0x02#define BIO_CTRL_DGRAM_SET_PEEK_MODE 71#define BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE 50#define BIO_CTRL_DGRAM_GET_MTU_OVERHEAD 49#define BIO_CTRL_DGRAM_SET_DONT_FRAG 48#define BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT 45#define BIO_CTRL_DGRAM_SET_PEER 44#define BIO_CTRL_DGRAM_GET_PEER 46#define BIO_CTRL_DGRAM_MTU_EXCEEDED 43#define BIO_CTRL_DGRAM_SET_MTU 42#define BIO_CTRL_DGRAM_GET_MTU 41#define BIO_CTRL_DGRAM_GET_FALLBACK_MTU 47#define BIO_CTRL_DGRAM_QUERY_MTU 40#define BIO_CTRL_DGRAM_MTU_DISCOVER 39#define BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP 38#define BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP 37#define BIO_CTRL_DGRAM_GET_SEND_TIMEOUT 36#define BIO_CTRL_DGRAM_SET_SEND_TIMEOUT 35#define BIO_CTRL_DGRAM_GET_RECV_TIMEOUT 34#define BIO_CTRL_DGRAM_SET_RECV_TIMEOUT 33#define BIO_CTRL_DGRAM_SET_CONNECTED 32#define BIO_CTRL_DGRAM_CONNECT 31#define BIO_CTRL_SET_FILENAME 30#define BIO_CTRL_PEEK 29#define BIO_CTRL_GET_CALLBACK 15#define BIO_CTRL_SET_CALLBACK 14#define BIO_CTRL_WPENDING 13#define BIO_CTRL_DUP 12#define BIO_CTRL_FLUSH 11#define BIO_CTRL_PENDING 10#define BIO_CTRL_SET_CLOSE 9#define BIO_CTRL_GET_CLOSE 8#define BIO_CTRL_POP 7#define BIO_CTRL_PUSH 6#define BIO_CTRL_GET 5#define BIO_CTRL_SET 4#define BIO_CTRL_INFO 3#define BIO_CTRL_EOF 2#define BIO_CTRL_RESET 1#define BIO_CLOSE 0x01#define BIO_NOCLOSE 0x00#define BIO_TYPE_START 128#define BIO_TYPE_COMP (23|BIO_TYPE_FILTER)#define BIO_TYPE_ASN1 (22|BIO_TYPE_FILTER)#define BIO_TYPE_DGRAM (21|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)#define BIO_TYPE_LINEBUFFER (20|BIO_TYPE_FILTER)#define BIO_TYPE_BIO (19|BIO_TYPE_SOURCE_SINK)#define BIO_TYPE_NULL_FILTER (17|BIO_TYPE_FILTER)#define BIO_TYPE_NBIO_TEST (16|BIO_TYPE_FILTER)#define BIO_TYPE_ACCEPT (13|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)#define BIO_TYPE_CONNECT (12|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)#define BIO_TYPE_BASE64 (11|BIO_TYPE_FILTER)#define BIO_TYPE_CIPHER (10|BIO_TYPE_FILTER)#define BIO_TYPE_BUFFER ( 9|BIO_TYPE_FILTER)#define BIO_TYPE_MD ( 8|BIO_TYPE_FILTER)#define BIO_TYPE_SSL ( 7|BIO_TYPE_FILTER)#define BIO_TYPE_NULL ( 6|BIO_TYPE_SOURCE_SINK)#define BIO_TYPE_SOCKET ( 5|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)#define BIO_TYPE_FD ( 4|BIO_TYPE_SOURCE_SINK|BIO_TYPE_DESCRIPTOR)#define BIO_TYPE_FILE ( 2|BIO_TYPE_SOURCE_SINK)#define BIO_TYPE_MEM ( 1|BIO_TYPE_SOURCE_SINK)#define BIO_TYPE_NONE 0#define BIO_TYPE_SOURCE_SINK 0x0400#define BIO_TYPE_FILTER 0x0200#define BIO_TYPE_DESCRIPTOR 0x0100#define HEADER_BIO_H#define EVP_R_WRONG_FINAL_BLOCK_LENGTH 109#define EVP_R_WRAP_MODE_NOT_ALLOWED 170#define EVP_R_UNSUPPORTED_SALT_TYPE 126#define EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM 118#define EVP_R_UNSUPPORTED_PRF 125#define EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS 135#define EVP_R_UNSUPPORTED_KEY_SIZE 108#define EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION 124#define EVP_R_UNSUPPORTED_KEYLENGTH 123#define EVP_R_UNSUPPORTED_CIPHER 107#define EVP_R_UNSUPPORTED_ALGORITHM 156#define EVP_R_UNKNOWN_PBE_ALGORITHM 121#define EVP_R_UNKNOWN_OPTION 169#define EVP_R_UNKNOWN_DIGEST 161#define EVP_R_UNKNOWN_CIPHER 160#define EVP_R_PUBLIC_KEY_NOT_RSA 106#define EVP_R_PRIVATE_KEY_ENCODE_ERROR 146#define EVP_R_PRIVATE_KEY_DECODE_ERROR 145#define EVP_R_PKEY_APPLICATION_ASN1_METHOD_ALREADY_REGISTERED 179#define EVP_R_PBKDF2_ERROR 181#define EVP_R_PARTIALLY_OVERLAPPING 162#define EVP_R_OPERATON_NOT_INITIALIZED 151#define EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE 150#define EVP_R_ONLY_ONESHOT_SUPPORTED 177#define EVP_R_NO_OPERATION_SET 149#define EVP_R_NO_KEY_SET 154#define EVP_R_NO_DIGEST_SET 139#define EVP_R_NO_DEFAULT_DIGEST 158#define EVP_R_NO_CIPHER_SET 131#define EVP_R_NOT_XOF_OR_INVALID_LENGTH 178#define EVP_R_MISSING_PARAMETERS 103#define EVP_R_METHOD_NOT_SUPPORTED 144#define EVP_R_MESSAGE_DIGEST_IS_NULL 159#define EVP_R_MEMORY_LIMIT_EXCEEDED 172#define EVP_R_KEY_SETUP_FAILED 180#define EVP_R_KEYGEN_FAILURE 120#define EVP_R_INVALID_OPERATION 148#define EVP_R_INVALID_KEY_LENGTH 130#define EVP_R_INVALID_KEY 163#define EVP_R_INVALID_FIPS_MODE 168#define EVP_R_INVALID_DIGEST 152#define EVP_R_INPUT_NOT_INITIALIZED 111#define EVP_R_INITIALIZATION_ERROR 134#define EVP_R_ILLEGAL_SCRYPT_PARAMETERS 171#define EVP_R_GET_RAW_KEY_FAILED 182#define EVP_R_FIPS_MODE_NOT_SUPPORTED 167#define EVP_R_EXPECTING_A_SIPHASH_KEY 175#define EVP_R_EXPECTING_A_POLY1305_KEY 164#define EVP_R_EXPECTING_A_EC_KEY 142#define EVP_R_EXPECTING_A_DSA_KEY 129#define EVP_R_EXPECTING_A_DH_KEY 128#define EVP_R_EXPECTING_AN_RSA_KEY 127#define EVP_R_EXPECTING_AN_HMAC_KEY 174#define EVP_R_ERROR_SETTING_FIPS_MODE 166#define EVP_R_ERROR_LOADING_SECTION 165#define EVP_R_DIFFERENT_PARAMETERS 153#define EVP_R_DIFFERENT_KEY_TYPES 101#define EVP_R_DECODE_ERROR 114#define EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH 138#define EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED 133#define EVP_R_CTRL_NOT_IMPLEMENTED 132#define EVP_R_COPY_ERROR 173#define EVP_R_COMMAND_NOT_SUPPORTED 147#define EVP_R_CIPHER_PARAMETER_ERROR 122#define EVP_R_CAMELLIA_KEY_SETUP_FAILED 157#define EVP_R_BUFFER_TOO_SMALL 155#define EVP_R_BAD_DECRYPT 100#define EVP_R_ARIA_KEY_SETUP_FAILED 176#define EVP_R_AES_KEY_SETUP_FAILED 143#define EVP_F_UPDATE 173#define EVP_F_S390X_AES_GCM_CTRL 201#define EVP_F_RC5_CTRL 125#define EVP_F_RC2_MAGIC_TO_METH 109#define EVP_F_PKEY_SET_TYPE 158#define EVP_F_PKCS5_V2_SCRYPT_KEYIVGEN 180#define EVP_F_PKCS5_V2_PBKDF2_KEYIVGEN 164#define EVP_F_PKCS5_V2_PBE_KEYIVGEN 118#define EVP_F_PKCS5_PBE_KEYIVGEN 117#define EVP_F_OK_NEW 200#define EVP_F_INT_CTX_NEW 157#define EVP_F_EVP_VERIFYFINAL 108#define EVP_F_EVP_SIGNFINAL 107#define EVP_F_EVP_PKEY_VERIFY_RECOVER_INIT 145#define EVP_F_EVP_PKEY_VERIFY_RECOVER 144#define EVP_F_EVP_PKEY_VERIFY_INIT 143#define EVP_F_EVP_PKEY_VERIFY 142#define EVP_F_EVP_PKEY_SIGN_INIT 141#define EVP_F_EVP_PKEY_SIGN 140#define EVP_F_EVP_PKEY_SET_ALIAS_TYPE 206#define EVP_F_EVP_PKEY_SET1_ENGINE 187#define EVP_F_EVP_PKEY_PUBLIC_CHECK 190#define EVP_F_EVP_PKEY_PARAM_CHECK 189#define EVP_F_EVP_PKEY_PARAMGEN_INIT 149#define EVP_F_EVP_PKEY_PARAMGEN 148#define EVP_F_EVP_PKEY_NEW_RAW_PUBLIC_KEY 192#define EVP_F_EVP_PKEY_NEW_RAW_PRIVATE_KEY 191#define EVP_F_EVP_PKEY_NEW_CMAC_KEY 193#define EVP_F_EVP_PKEY_NEW 106#define EVP_F_EVP_PKEY_METH_NEW 195#define EVP_F_EVP_PKEY_METH_ADD0 194#define EVP_F_EVP_PKEY_KEYGEN_INIT 147#define EVP_F_EVP_PKEY_KEYGEN 146#define EVP_F_EVP_PKEY_GET_RAW_PUBLIC_KEY 203#define EVP_F_EVP_PKEY_GET_RAW_PRIVATE_KEY 202#define EVP_F_EVP_PKEY_GET0_SIPHASH 172#define EVP_F_EVP_PKEY_GET0_RSA 121#define EVP_F_EVP_PKEY_GET0_POLY1305 184#define EVP_F_EVP_PKEY_GET0_HMAC 183#define EVP_F_EVP_PKEY_GET0_EC_KEY 131#define EVP_F_EVP_PKEY_GET0_DSA 120#define EVP_F_EVP_PKEY_GET0_DH 119#define EVP_F_EVP_PKEY_ENCRYPT_OLD 152#define EVP_F_EVP_PKEY_ENCRYPT_INIT 139#define EVP_F_EVP_PKEY_ENCRYPT 105#define EVP_F_EVP_PKEY_DERIVE_SET_PEER 155#define EVP_F_EVP_PKEY_DERIVE_INIT 154#define EVP_F_EVP_PKEY_DERIVE 153#define EVP_F_EVP_PKEY_DECRYPT_OLD 151#define EVP_F_EVP_PKEY_DECRYPT_INIT 138#define EVP_F_EVP_PKEY_DECRYPT 104#define EVP_F_EVP_PKEY_CTX_MD 168#define EVP_F_EVP_PKEY_CTX_DUP 156#define EVP_F_EVP_PKEY_CTX_CTRL_STR 150#define EVP_F_EVP_PKEY_CTX_CTRL 137#define EVP_F_EVP_PKEY_COPY_PARAMETERS 103#define EVP_F_EVP_PKEY_CHECK 186#define EVP_F_EVP_PKEY_ASN1_ADD0 188#define EVP_F_EVP_PKEY2PKCS8 113#define EVP_F_EVP_PKCS82PKEY 111#define EVP_F_EVP_PBE_SCRYPT 181#define EVP_F_EVP_PBE_CIPHERINIT 116#define EVP_F_EVP_PBE_ALG_ADD_TYPE 160#define EVP_F_EVP_PBE_ALG_ADD 115#define EVP_F_EVP_OPENINIT 102#define EVP_F_EVP_MD_SIZE 162#define EVP_F_EVP_MD_CTX_COPY_EX 110#define EVP_F_EVP_ENCRYPTUPDATE 167#define EVP_F_EVP_ENCRYPTFINAL_EX 127#define EVP_F_EVP_DIGESTINIT_EX 128#define EVP_F_EVP_DIGESTFINALXOF 174#define EVP_F_EVP_DECRYPTUPDATE 166#define EVP_F_EVP_DECRYPTFINAL_EX 101#define EVP_F_EVP_CIPHER_PARAM_TO_ASN1 205#define EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH 122#define EVP_F_EVP_CIPHER_CTX_CTRL 124#define EVP_F_EVP_CIPHER_CTX_COPY 163#define EVP_F_EVP_CIPHER_ASN1_TO_PARAM 204#define EVP_F_EVP_CIPHERINIT_EX 123#define EVP_F_ENC_NEW 199#define EVP_F_DO_SIGVER_INIT 161#define EVP_F_DES_EDE3_WRAP_CIPHER 171#define EVP_F_CMLL_T4_INIT_KEY 179#define EVP_F_CHACHA20_POLY1305_CTRL 182#define EVP_F_CAMELLIA_INIT_KEY 159#define EVP_F_B64_NEW 198#define EVP_F_ARIA_INIT_KEY 185#define EVP_F_ARIA_GCM_INIT_KEY 176#define EVP_F_ARIA_GCM_CTRL 197#define EVP_F_ARIA_CCM_INIT_KEY 175#define EVP_F_ALG_MODULE_INIT 177#define EVP_F_AES_WRAP_CIPHER 170#define EVP_F_AES_T4_INIT_KEY 178#define EVP_F_AES_OCB_CIPHER 169#define EVP_F_AES_INIT_KEY 133#define EVP_F_AES_GCM_CTRL 196#define EVP_F_AESNI_INIT_KEY 165#define HEADER_EVPERR_H#define OBJ_uacurve9 OBJ_dstu4145le,2L,9L#define NID_uacurve9 1169#define LN_uacurve9 "DSTU curve 9"#define SN_uacurve9 "uacurve9"#define OBJ_uacurve8 OBJ_dstu4145le,2L,8L#define NID_uacurve8 1168#define LN_uacurve8 "DSTU curve 8"#define SN_uacurve8 "uacurve8"#define OBJ_uacurve7 OBJ_dstu4145le,2L,7L#define NID_uacurve7 1167#define LN_uacurve7 "DSTU curve 7"#define SN_uacurve7 "uacurve7"#define OBJ_uacurve6 OBJ_dstu4145le,2L,6L#define NID_uacurve6 1166#define LN_uacurve6 "DSTU curve 6"#define SN_uacurve6 "uacurve6"#define OBJ_uacurve5 OBJ_dstu4145le,2L,5L#define NID_uacurve5 1165#define LN_uacurve5 "DSTU curve 5"#define SN_uacurve5 "uacurve5"#define OBJ_uacurve4 OBJ_dstu4145le,2L,4L#define NID_uacurve4 1164#define LN_uacurve4 "DSTU curve 4"#define SN_uacurve4 "uacurve4"#define OBJ_uacurve3 OBJ_dstu4145le,2L,3L#define NID_uacurve3 1163#define LN_uacurve3 "DSTU curve 3"#define SN_uacurve3 "uacurve3"#define OBJ_uacurve2 OBJ_dstu4145le,2L,2L#define NID_uacurve2 1162#define LN_uacurve2 "DSTU curve 2"#define SN_uacurve2 "uacurve2"#define OBJ_uacurve1 OBJ_dstu4145le,2L,1L#define NID_uacurve1 1161#define LN_uacurve1 "DSTU curve 1"#define SN_uacurve1 "uacurve1"#define OBJ_uacurve0 OBJ_dstu4145le,2L,0L#define NID_uacurve0 1160#define LN_uacurve0 "DSTU curve 0"#define SN_uacurve0 "uacurve0"#define OBJ_dstu4145be OBJ_dstu4145le,1L,1L#define NID_dstu4145be 1159#define LN_dstu4145be "DSTU 4145-2002 big endian"#define SN_dstu4145be "dstu4145be"#define OBJ_dstu4145le OBJ_ua_pki,1L,3L,1L,1L#define NID_dstu4145le 1158#define LN_dstu4145le "DSTU 4145-2002 little endian"#define SN_dstu4145le "dstu4145le"#define OBJ_dstu34311 OBJ_ua_pki,1L,2L,1L#define NID_dstu34311 1157#define LN_dstu34311 "DSTU Gost 34311-95"#define SN_dstu34311 "dstu34311"#define OBJ_hmacWithDstu34311 OBJ_ua_pki,1L,1L,2L#define NID_hmacWithDstu34311 1156#define LN_hmacWithDstu34311 "HMAC DSTU Gost 34311-95"#define SN_hmacWithDstu34311 "hmacWithDstu34311"#define OBJ_dstu28147_wrap OBJ_dstu28147,5L#define NID_dstu28147_wrap 1155#define LN_dstu28147_wrap "DSTU Gost 28147-2009 key wrap"#define SN_dstu28147_wrap "dstu28147-wrap"#define OBJ_dstu28147_cfb OBJ_dstu28147,3L#define NID_dstu28147_cfb 1154#define LN_dstu28147_cfb "DSTU Gost 28147-2009 CFB mode"#define SN_dstu28147_cfb "dstu28147-cfb"#define OBJ_dstu28147_ofb OBJ_dstu28147,2L#define NID_dstu28147_ofb 1153#define LN_dstu28147_ofb "DSTU Gost 28147-2009 OFB mode"#define SN_dstu28147_ofb "dstu28147-ofb"#define OBJ_dstu28147 OBJ_ua_pki,1L,1L,1L#define NID_dstu28147 1152#define LN_dstu28147 "DSTU Gost 28147-2009"#define SN_dstu28147 "dstu28147"#define OBJ_ua_pki OBJ_ISO_UA,2L,1L,1L,1L#define NID_ua_pki 1151#define SN_ua_pki "ua-pki"#define OBJ_ISO_UA OBJ_member_body,804L#define NID_ISO_UA 1150#define SN_ISO_UA "ISO-UA"#define NID_ffdhe8192 1130#define SN_ffdhe8192 "ffdhe8192"#define NID_ffdhe6144 1129#define SN_ffdhe6144 "ffdhe6144"#define NID_ffdhe4096 1128#define SN_ffdhe4096 "ffdhe4096"#define NID_ffdhe3072 1127#define SN_ffdhe3072 "ffdhe3072"#define NID_ffdhe2048 1126#define SN_ffdhe2048 "ffdhe2048"#define NID_siphash 1062#define LN_siphash "siphash"#define SN_siphash "SipHash"#define NID_poly1305 1061#define LN_poly1305 "poly1305"#define SN_poly1305 "Poly1305"#define NID_auth_any 1064#define LN_auth_any "auth-any"#define SN_auth_any "AuthANY"#define NID_auth_null 1053#define LN_auth_null "auth-null"#define SN_auth_null "AuthNULL"#define NID_auth_srp 1052#define LN_auth_srp "auth-srp"#define SN_auth_srp "AuthSRP"#define NID_auth_gost12 1051#define LN_auth_gost12 "auth-gost12"#define SN_auth_gost12 "AuthGOST12"#define NID_auth_gost01 1050#define LN_auth_gost01 "auth-gost01"#define SN_auth_gost01 "AuthGOST01"#define NID_auth_dss 1049#define LN_auth_dss "auth-dss"#define SN_auth_dss "AuthDSS"#define NID_auth_psk 1048#define LN_auth_psk "auth-psk"#define SN_auth_psk "AuthPSK"#define NID_auth_ecdsa 1047#define LN_auth_ecdsa "auth-ecdsa"#define SN_auth_ecdsa "AuthECDSA"#define NID_auth_rsa 1046#define LN_auth_rsa "auth-rsa"#define SN_auth_rsa "AuthRSA"#define NID_kx_any 1063#define LN_kx_any "kx-any"#define SN_kx_any "KxANY"#define NID_kx_gost 1045#define LN_kx_gost "kx-gost"#define SN_kx_gost "KxGOST"#define NID_kx_srp 1044#define LN_kx_srp "kx-srp"#define SN_kx_srp "KxSRP"#define NID_kx_psk 1043#define LN_kx_psk "kx-psk"#define SN_kx_psk "KxPSK"#define NID_kx_rsa_psk 1042#define LN_kx_rsa_psk "kx-rsa-psk"#define SN_kx_rsa_psk "KxRSA_PSK"#define NID_kx_dhe_psk 1041#define LN_kx_dhe_psk "kx-dhe-psk"#define SN_kx_dhe_psk "KxDHE-PSK"#define NID_kx_ecdhe_psk 1040#define LN_kx_ecdhe_psk "kx-ecdhe-psk"#define SN_kx_ecdhe_psk "KxECDHE-PSK"#define NID_kx_dhe 1039#define LN_kx_dhe "kx-dhe"#define SN_kx_dhe "KxDHE"#define NID_kx_ecdhe 1038#define LN_kx_ecdhe "kx-ecdhe"#define SN_kx_ecdhe "KxECDHE"#define NID_kx_rsa 1037#define LN_kx_rsa "kx-rsa"#define SN_kx_rsa "KxRSA"#define OBJ_ED448 1L,3L,101L,113L#define NID_ED448 1088#define SN_ED448 "ED448"#define OBJ_ED25519 1L,3L,101L,112L#define NID_ED25519 1087#define SN_ED25519 "ED25519"#define OBJ_X448 1L,3L,101L,111L#define NID_X448 1035#define SN_X448 "X448"#define OBJ_X25519 1L,3L,101L,110L#define NID_X25519 1034#define SN_X25519 "X25519"#define OBJ_pkInitKDC OBJ_id_pkinit,5L#define NID_pkInitKDC 1033#define LN_pkInitKDC "Signing KDC Response"#define SN_pkInitKDC "pkInitKDC"#define OBJ_pkInitClientAuth OBJ_id_pkinit,4L#define NID_pkInitClientAuth 1032#define LN_pkInitClientAuth "PKINIT Client Auth"#define SN_pkInitClientAuth "pkInitClientAuth"#define OBJ_id_pkinit 1L,3L,6L,1L,5L,2L,3L#define NID_id_pkinit 1031#define SN_id_pkinit "id-pkinit"#define NID_hkdf 1036#define LN_hkdf "hkdf"#define SN_hkdf "HKDF"#define NID_tls1_prf 1021#define LN_tls1_prf "tls1-prf"#define SN_tls1_prf "TLS1-PRF"#define OBJ_id_scrypt 1L,3L,6L,1L,4L,1L,11591L,4L,11L#define NID_id_scrypt 973#define LN_id_scrypt "scrypt"#define SN_id_scrypt "id-scrypt"#define OBJ_jurisdictionCountryName 1L,3L,6L,1L,4L,1L,311L,60L,2L,1L,3L#define NID_jurisdictionCountryName 957#define LN_jurisdictionCountryName "jurisdictionCountryName"#define SN_jurisdictionCountryName "jurisdictionC"#define OBJ_jurisdictionStateOrProvinceName 1L,3L,6L,1L,4L,1L,311L,60L,2L,1L,2L#define NID_jurisdictionStateOrProvinceName 956#define LN_jurisdictionStateOrProvinceName "jurisdictionStateOrProvinceName"#define SN_jurisdictionStateOrProvinceName "jurisdictionST"#define OBJ_jurisdictionLocalityName 1L,3L,6L,1L,4L,1L,311L,60L,2L,1L,1L#define NID_jurisdictionLocalityName 955#define LN_jurisdictionLocalityName "jurisdictionLocalityName"#define SN_jurisdictionLocalityName "jurisdictionL"#define OBJ_ct_cert_scts 1L,3L,6L,1L,4L,1L,11129L,2L,4L,5L#define NID_ct_cert_scts 954#define LN_ct_cert_scts "CT Certificate SCTs"#define SN_ct_cert_scts "ct_cert_scts"#define OBJ_ct_precert_signer 1L,3L,6L,1L,4L,1L,11129L,2L,4L,4L#define NID_ct_precert_signer 953#define LN_ct_precert_signer "CT Precertificate Signer"#define SN_ct_precert_signer "ct_precert_signer"#define OBJ_ct_precert_poison 1L,3L,6L,1L,4L,1L,11129L,2L,4L,3L#define NID_ct_precert_poison 952#define LN_ct_precert_poison "CT Precertificate Poison"#define SN_ct_precert_poison "ct_precert_poison"#define OBJ_ct_precert_scts 1L,3L,6L,1L,4L,1L,11129L,2L,4L,2L#define NID_ct_precert_scts 951#define LN_ct_precert_scts "CT Precertificate SCTs"#define SN_ct_precert_scts "ct_precert_scts"#define NID_dh_cofactor_kdf 947#define SN_dh_cofactor_kdf "dh-cofactor-kdf"#define NID_dh_std_kdf 946#define SN_dh_std_kdf "dh-std-kdf"#define OBJ_dhSinglePass_cofactorDH_sha512kdf_scheme OBJ_secg_scheme,14L,3L#define NID_dhSinglePass_cofactorDH_sha512kdf_scheme 945#define SN_dhSinglePass_cofactorDH_sha512kdf_scheme "dhSinglePass-cofactorDH-sha512kdf-scheme"#define OBJ_dhSinglePass_cofactorDH_sha384kdf_scheme OBJ_secg_scheme,14L,2L#define NID_dhSinglePass_cofactorDH_sha384kdf_scheme 944#define SN_dhSinglePass_cofactorDH_sha384kdf_scheme "dhSinglePass-cofactorDH-sha384kdf-scheme"#define OBJ_dhSinglePass_cofactorDH_sha256kdf_scheme OBJ_secg_scheme,14L,1L#define NID_dhSinglePass_cofactorDH_sha256kdf_scheme 943#define SN_dhSinglePass_cofactorDH_sha256kdf_scheme "dhSinglePass-cofactorDH-sha256kdf-scheme"#define OBJ_dhSinglePass_cofactorDH_sha224kdf_scheme OBJ_secg_scheme,14L,0L#define NID_dhSinglePass_cofactorDH_sha224kdf_scheme 942#define SN_dhSinglePass_cofactorDH_sha224kdf_scheme "dhSinglePass-cofactorDH-sha224kdf-scheme"#define OBJ_dhSinglePass_cofactorDH_sha1kdf_scheme OBJ_x9_63_scheme,3L#define NID_dhSinglePass_cofactorDH_sha1kdf_scheme 941#define SN_dhSinglePass_cofactorDH_sha1kdf_scheme "dhSinglePass-cofactorDH-sha1kdf-scheme"#define OBJ_dhSinglePass_stdDH_sha512kdf_scheme OBJ_secg_scheme,11L,3L#define NID_dhSinglePass_stdDH_sha512kdf_scheme 940#define SN_dhSinglePass_stdDH_sha512kdf_scheme "dhSinglePass-stdDH-sha512kdf-scheme"#define OBJ_dhSinglePass_stdDH_sha384kdf_scheme OBJ_secg_scheme,11L,2L#define NID_dhSinglePass_stdDH_sha384kdf_scheme 939#define SN_dhSinglePass_stdDH_sha384kdf_scheme "dhSinglePass-stdDH-sha384kdf-scheme"#define OBJ_dhSinglePass_stdDH_sha256kdf_scheme OBJ_secg_scheme,11L,1L#define NID_dhSinglePass_stdDH_sha256kdf_scheme 938#define SN_dhSinglePass_stdDH_sha256kdf_scheme "dhSinglePass-stdDH-sha256kdf-scheme"#define OBJ_dhSinglePass_stdDH_sha224kdf_scheme OBJ_secg_scheme,11L,0L#define NID_dhSinglePass_stdDH_sha224kdf_scheme 937#define SN_dhSinglePass_stdDH_sha224kdf_scheme "dhSinglePass-stdDH-sha224kdf-scheme"#define OBJ_dhSinglePass_stdDH_sha1kdf_scheme OBJ_x9_63_scheme,2L#define NID_dhSinglePass_stdDH_sha1kdf_scheme 936#define SN_dhSinglePass_stdDH_sha1kdf_scheme "dhSinglePass-stdDH-sha1kdf-scheme"#define OBJ_secg_scheme OBJ_certicom_arc,1L#define OBJ_x9_63_scheme 1L,3L,133L,16L,840L,63L,0L#define OBJ_brainpoolP512t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,14L#define NID_brainpoolP512t1 934#define SN_brainpoolP512t1 "brainpoolP512t1"#define OBJ_brainpoolP512r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,13L#define NID_brainpoolP512r1 933#define SN_brainpoolP512r1 "brainpoolP512r1"#define OBJ_brainpoolP384t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,12L#define NID_brainpoolP384t1 932#define SN_brainpoolP384t1 "brainpoolP384t1"#define OBJ_brainpoolP384r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,11L#define NID_brainpoolP384r1 931#define SN_brainpoolP384r1 "brainpoolP384r1"#define OBJ_brainpoolP320t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,10L#define NID_brainpoolP320t1 930#define SN_brainpoolP320t1 "brainpoolP320t1"#define OBJ_brainpoolP320r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,9L#define NID_brainpoolP320r1 929#define SN_brainpoolP320r1 "brainpoolP320r1"#define OBJ_brainpoolP256t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,8L#define NID_brainpoolP256t1 928#define SN_brainpoolP256t1 "brainpoolP256t1"#define OBJ_brainpoolP256r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,7L#define NID_brainpoolP256r1 927#define SN_brainpoolP256r1 "brainpoolP256r1"#define OBJ_brainpoolP224t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,6L#define NID_brainpoolP224t1 926#define SN_brainpoolP224t1 "brainpoolP224t1"#define OBJ_brainpoolP224r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,5L#define NID_brainpoolP224r1 925#define SN_brainpoolP224r1 "brainpoolP224r1"#define OBJ_brainpoolP192t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,4L#define NID_brainpoolP192t1 924#define SN_brainpoolP192t1 "brainpoolP192t1"#define OBJ_brainpoolP192r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,3L#define NID_brainpoolP192r1 923#define SN_brainpoolP192r1 "brainpoolP192r1"#define OBJ_brainpoolP160t1 1L,3L,36L,3L,3L,2L,8L,1L,1L,2L#define NID_brainpoolP160t1 922#define SN_brainpoolP160t1 "brainpoolP160t1"#define OBJ_brainpoolP160r1 1L,3L,36L,3L,3L,2L,8L,1L,1L,1L#define NID_brainpoolP160r1 921#define SN_brainpoolP160r1 "brainpoolP160r1"#define OBJ_dhpublicnumber OBJ_ISO_US,10046L,2L,1L#define NID_dhpublicnumber 920#define LN_dhpublicnumber "X9.42 DH"#define SN_dhpublicnumber "dhpublicnumber"#define NID_chacha20 1019#define LN_chacha20 "chacha20"#define SN_chacha20 "ChaCha20"#define NID_chacha20_poly1305 1018#define LN_chacha20_poly1305 "chacha20-poly1305"#define SN_chacha20_poly1305 "ChaCha20-Poly1305"#define NID_aes_256_cbc_hmac_sha256 950#define LN_aes_256_cbc_hmac_sha256 "aes-256-cbc-hmac-sha256"#define SN_aes_256_cbc_hmac_sha256 "AES-256-CBC-HMAC-SHA256"#define NID_aes_192_cbc_hmac_sha256 949#define LN_aes_192_cbc_hmac_sha256 "aes-192-cbc-hmac-sha256"#define SN_aes_192_cbc_hmac_sha256 "AES-192-CBC-HMAC-SHA256"#define NID_aes_128_cbc_hmac_sha256 948#define LN_aes_128_cbc_hmac_sha256 "aes-128-cbc-hmac-sha256"#define SN_aes_128_cbc_hmac_sha256 "AES-128-CBC-HMAC-SHA256"#define NID_aes_256_cbc_hmac_sha1 918#define LN_aes_256_cbc_hmac_sha1 "aes-256-cbc-hmac-sha1"#define SN_aes_256_cbc_hmac_sha1 "AES-256-CBC-HMAC-SHA1"#define NID_aes_192_cbc_hmac_sha1 917#define LN_aes_192_cbc_hmac_sha1 "aes-192-cbc-hmac-sha1"#define SN_aes_192_cbc_hmac_sha1 "AES-192-CBC-HMAC-SHA1"#define NID_aes_128_cbc_hmac_sha1 916#define LN_aes_128_cbc_hmac_sha1 "aes-128-cbc-hmac-sha1"#define SN_aes_128_cbc_hmac_sha1 "AES-128-CBC-HMAC-SHA1"#define NID_rc4_hmac_md5 915#define LN_rc4_hmac_md5 "rc4-hmac-md5"#define SN_rc4_hmac_md5 "RC4-HMAC-MD5"#define NID_cmac 894#define LN_cmac "cmac"#define SN_cmac "CMAC"#define NID_hmac 855#define LN_hmac "hmac"#define SN_hmac "HMAC"#define OBJ_sm4_ctr OBJ_sm_scheme,104L,7L#define NID_sm4_ctr 1139#define LN_sm4_ctr "sm4-ctr"#define SN_sm4_ctr "SM4-CTR"#define OBJ_sm4_cfb8 OBJ_sm_scheme,104L,6L#define NID_sm4_cfb8 1138#define LN_sm4_cfb8 "sm4-cfb8"#define SN_sm4_cfb8 "SM4-CFB8"#define OBJ_sm4_cfb1 OBJ_sm_scheme,104L,5L#define NID_sm4_cfb1 1136#define LN_sm4_cfb1 "sm4-cfb1"#define SN_sm4_cfb1 "SM4-CFB1"#define OBJ_sm4_cfb128 OBJ_sm_scheme,104L,4L#define NID_sm4_cfb128 1137#define LN_sm4_cfb128 "sm4-cfb"#define SN_sm4_cfb128 "SM4-CFB"#define OBJ_sm4_ofb128 OBJ_sm_scheme,104L,3L#define NID_sm4_ofb128 1135#define LN_sm4_ofb128 "sm4-ofb"#define SN_sm4_ofb128 "SM4-OFB"#define OBJ_sm4_cbc OBJ_sm_scheme,104L,2L#define NID_sm4_cbc 1134#define LN_sm4_cbc "sm4-cbc"#define SN_sm4_cbc "SM4-CBC"#define OBJ_sm4_ecb OBJ_sm_scheme,104L,1L#define NID_sm4_ecb 1133#define LN_sm4_ecb "sm4-ecb"#define SN_sm4_ecb "SM4-ECB"#define OBJ_seed_ofb128 OBJ_kisa,1L,6L#define NID_seed_ofb128 778#define LN_seed_ofb128 "seed-ofb"#define SN_seed_ofb128 "SEED-OFB"#define OBJ_seed_cfb128 OBJ_kisa,1L,5L#define NID_seed_cfb128 779#define LN_seed_cfb128 "seed-cfb"#define SN_seed_cfb128 "SEED-CFB"#define OBJ_seed_cbc OBJ_kisa,1L,4L#define NID_seed_cbc 777#define LN_seed_cbc "seed-cbc"#define SN_seed_cbc "SEED-CBC"#define OBJ_seed_ecb OBJ_kisa,1L,3L#define NID_seed_ecb 776#define LN_seed_ecb "seed-ecb"#define SN_seed_ecb "SEED-ECB"#define OBJ_kisa OBJ_member_body,410L,200004L#define NID_kisa 773#define LN_kisa "kisa"#define SN_kisa "KISA"#define OBJ_aria_256_gcm OBJ_aria,36L#define NID_aria_256_gcm 1125#define LN_aria_256_gcm "aria-256-gcm"#define SN_aria_256_gcm "ARIA-256-GCM"#define OBJ_aria_192_gcm OBJ_aria,35L#define NID_aria_192_gcm 1124#define LN_aria_192_gcm "aria-192-gcm"#define SN_aria_192_gcm "ARIA-192-GCM"#define OBJ_aria_128_gcm OBJ_aria,34L#define NID_aria_128_gcm 1123#define LN_aria_128_gcm "aria-128-gcm"#define SN_aria_128_gcm "ARIA-128-GCM"#define OBJ_aria_256_ccm OBJ_aria,39L#define NID_aria_256_ccm 1122#define LN_aria_256_ccm "aria-256-ccm"#define SN_aria_256_ccm "ARIA-256-CCM"#define OBJ_aria_192_ccm OBJ_aria,38L#define NID_aria_192_ccm 1121#define LN_aria_192_ccm "aria-192-ccm"#define SN_aria_192_ccm "ARIA-192-CCM"#define OBJ_aria_128_ccm OBJ_aria,37L#define NID_aria_128_ccm 1120#define LN_aria_128_ccm "aria-128-ccm"#define SN_aria_128_ccm "ARIA-128-CCM"#define NID_aria_256_cfb8 1085#define LN_aria_256_cfb8 "aria-256-cfb8"#define SN_aria_256_cfb8 "ARIA-256-CFB8"#define NID_aria_192_cfb8 1084#define LN_aria_192_cfb8 "aria-192-cfb8"#define SN_aria_192_cfb8 "ARIA-192-CFB8"#define NID_aria_128_cfb8 1083#define LN_aria_128_cfb8 "aria-128-cfb8"#define SN_aria_128_cfb8 "ARIA-128-CFB8"#define NID_aria_256_cfb1 1082#define LN_aria_256_cfb1 "aria-256-cfb1"#define SN_aria_256_cfb1 "ARIA-256-CFB1"#define NID_aria_192_cfb1 1081#define LN_aria_192_cfb1 "aria-192-cfb1"#define SN_aria_192_cfb1 "ARIA-192-CFB1"#define NID_aria_128_cfb1 1080#define LN_aria_128_cfb1 "aria-128-cfb1"#define SN_aria_128_cfb1 "ARIA-128-CFB1"#define OBJ_aria_256_ctr OBJ_aria,15L#define NID_aria_256_ctr 1079#define LN_aria_256_ctr "aria-256-ctr"#define SN_aria_256_ctr "ARIA-256-CTR"#define OBJ_aria_256_ofb128 OBJ_aria,14L#define NID_aria_256_ofb128 1078#define LN_aria_256_ofb128 "aria-256-ofb"#define SN_aria_256_ofb128 "ARIA-256-OFB"#define OBJ_aria_256_cfb128 OBJ_aria,13L#define NID_aria_256_cfb128 1077#define LN_aria_256_cfb128 "aria-256-cfb"#define SN_aria_256_cfb128 "ARIA-256-CFB"#define OBJ_aria_256_cbc OBJ_aria,12L#define NID_aria_256_cbc 1076#define LN_aria_256_cbc "aria-256-cbc"#define SN_aria_256_cbc "ARIA-256-CBC"#define OBJ_aria_256_ecb OBJ_aria,11L#define NID_aria_256_ecb 1075#define LN_aria_256_ecb "aria-256-ecb"#define SN_aria_256_ecb "ARIA-256-ECB"#define OBJ_aria_192_ctr OBJ_aria,10L#define NID_aria_192_ctr 1074#define LN_aria_192_ctr "aria-192-ctr"#define SN_aria_192_ctr "ARIA-192-CTR"#define OBJ_aria_192_ofb128 OBJ_aria,9L#define NID_aria_192_ofb128 1073#define LN_aria_192_ofb128 "aria-192-ofb"#define SN_aria_192_ofb128 "ARIA-192-OFB"#define OBJ_aria_192_cfb128 OBJ_aria,8L#define NID_aria_192_cfb128 1072#define LN_aria_192_cfb128 "aria-192-cfb"#define SN_aria_192_cfb128 "ARIA-192-CFB"#define OBJ_aria_192_cbc OBJ_aria,7L#define NID_aria_192_cbc 1071#define LN_aria_192_cbc "aria-192-cbc"#define SN_aria_192_cbc "ARIA-192-CBC"#define OBJ_aria_192_ecb OBJ_aria,6L#define NID_aria_192_ecb 1070#define LN_aria_192_ecb "aria-192-ecb"#define SN_aria_192_ecb "ARIA-192-ECB"#define OBJ_aria_128_ctr OBJ_aria,5L#define NID_aria_128_ctr 1069#define LN_aria_128_ctr "aria-128-ctr"#define SN_aria_128_ctr "ARIA-128-CTR"#define OBJ_aria_128_ofb128 OBJ_aria,4L#define NID_aria_128_ofb128 1068#define LN_aria_128_ofb128 "aria-128-ofb"#define SN_aria_128_ofb128 "ARIA-128-OFB"#define OBJ_aria_128_cfb128 OBJ_aria,3L#define NID_aria_128_cfb128 1067#define LN_aria_128_cfb128 "aria-128-cfb"#define SN_aria_128_cfb128 "ARIA-128-CFB"#define OBJ_aria_128_cbc OBJ_aria,2L#define NID_aria_128_cbc 1066#define LN_aria_128_cbc "aria-128-cbc"#define SN_aria_128_cbc "ARIA-128-CBC"#define OBJ_aria_128_ecb OBJ_aria,1L#define NID_aria_128_ecb 1065#define LN_aria_128_ecb "aria-128-ecb"#define SN_aria_128_ecb "ARIA-128-ECB"#define OBJ_aria 1L,2L,410L,200046L,1L,1L#define NID_camellia_256_cfb8 765#define LN_camellia_256_cfb8 "camellia-256-cfb8"#define SN_camellia_256_cfb8 "CAMELLIA-256-CFB8"#define NID_camellia_192_cfb8 764#define LN_camellia_192_cfb8 "camellia-192-cfb8"#define SN_camellia_192_cfb8 "CAMELLIA-192-CFB8"#define NID_camellia_128_cfb8 763#define LN_camellia_128_cfb8 "camellia-128-cfb8"#define SN_camellia_128_cfb8 "CAMELLIA-128-CFB8"#define NID_camellia_256_cfb1 762#define LN_camellia_256_cfb1 "camellia-256-cfb1"#define SN_camellia_256_cfb1 "CAMELLIA-256-CFB1"#define NID_camellia_192_cfb1 761#define LN_camellia_192_cfb1 "camellia-192-cfb1"#define SN_camellia_192_cfb1 "CAMELLIA-192-CFB1"#define NID_camellia_128_cfb1 760#define LN_camellia_128_cfb1 "camellia-128-cfb1"#define SN_camellia_128_cfb1 "CAMELLIA-128-CFB1"#define OBJ_camellia_256_cmac OBJ_camellia,50L#define NID_camellia_256_cmac 972#define LN_camellia_256_cmac "camellia-256-cmac"#define SN_camellia_256_cmac "CAMELLIA-256-CMAC"#define OBJ_camellia_256_ctr OBJ_camellia,49L#define NID_camellia_256_ctr 971#define LN_camellia_256_ctr "camellia-256-ctr"#define SN_camellia_256_ctr "CAMELLIA-256-CTR"#define OBJ_camellia_256_ccm OBJ_camellia,47L#define NID_camellia_256_ccm 970#define LN_camellia_256_ccm "camellia-256-ccm"#define SN_camellia_256_ccm "CAMELLIA-256-CCM"#define OBJ_camellia_256_gcm OBJ_camellia,46L#define NID_camellia_256_gcm 969#define LN_camellia_256_gcm "camellia-256-gcm"#define SN_camellia_256_gcm "CAMELLIA-256-GCM"#define OBJ_camellia_256_cfb128 OBJ_camellia,44L#define NID_camellia_256_cfb128 759#define LN_camellia_256_cfb128 "camellia-256-cfb"#define SN_camellia_256_cfb128 "CAMELLIA-256-CFB"#define OBJ_camellia_256_ofb128 OBJ_camellia,43L#define NID_camellia_256_ofb128 768#define LN_camellia_256_ofb128 "camellia-256-ofb"#define SN_camellia_256_ofb128 "CAMELLIA-256-OFB"#define OBJ_camellia_256_ecb OBJ_camellia,41L#define NID_camellia_256_ecb 756#define LN_camellia_256_ecb "camellia-256-ecb"#define SN_camellia_256_ecb "CAMELLIA-256-ECB"#define OBJ_camellia_192_cmac OBJ_camellia,30L#define NID_camellia_192_cmac 968#define LN_camellia_192_cmac "camellia-192-cmac"#define SN_camellia_192_cmac "CAMELLIA-192-CMAC"#define OBJ_camellia_192_ctr OBJ_camellia,29L#define NID_camellia_192_ctr 967#define LN_camellia_192_ctr "camellia-192-ctr"#define SN_camellia_192_ctr "CAMELLIA-192-CTR"#define OBJ_camellia_192_ccm OBJ_camellia,27L#define NID_camellia_192_ccm 966#define LN_camellia_192_ccm "camellia-192-ccm"#define SN_camellia_192_ccm "CAMELLIA-192-CCM"#define OBJ_camellia_192_gcm OBJ_camellia,26L#define NID_camellia_192_gcm 965#define LN_camellia_192_gcm "camellia-192-gcm"#define SN_camellia_192_gcm "CAMELLIA-192-GCM"#define OBJ_camellia_192_cfb128 OBJ_camellia,24L#define NID_camellia_192_cfb128 758#define LN_camellia_192_cfb128 "camellia-192-cfb"#define SN_camellia_192_cfb128 "CAMELLIA-192-CFB"#define OBJ_camellia_192_ofb128 OBJ_camellia,23L#define NID_camellia_192_ofb128 767#define LN_camellia_192_ofb128 "camellia-192-ofb"#define SN_camellia_192_ofb128 "CAMELLIA-192-OFB"#define OBJ_camellia_192_ecb OBJ_camellia,21L#define NID_camellia_192_ecb 755#define LN_camellia_192_ecb "camellia-192-ecb"#define SN_camellia_192_ecb "CAMELLIA-192-ECB"#define OBJ_camellia_128_cmac OBJ_camellia,10L#define NID_camellia_128_cmac 964#define LN_camellia_128_cmac "camellia-128-cmac"#define SN_camellia_128_cmac "CAMELLIA-128-CMAC"#define OBJ_camellia_128_ctr OBJ_camellia,9L#define NID_camellia_128_ctr 963#define LN_camellia_128_ctr "camellia-128-ctr"#define SN_camellia_128_ctr "CAMELLIA-128-CTR"#define OBJ_camellia_128_ccm OBJ_camellia,7L#define NID_camellia_128_ccm 962#define LN_camellia_128_ccm "camellia-128-ccm"#define SN_camellia_128_ccm "CAMELLIA-128-CCM"#define OBJ_camellia_128_gcm OBJ_camellia,6L#define NID_camellia_128_gcm 961#define LN_camellia_128_gcm "camellia-128-gcm"#define SN_camellia_128_gcm "CAMELLIA-128-GCM"#define OBJ_camellia_128_cfb128 OBJ_camellia,4L#define NID_camellia_128_cfb128 757#define LN_camellia_128_cfb128 "camellia-128-cfb"#define SN_camellia_128_cfb128 "CAMELLIA-128-CFB"#define OBJ_camellia_128_ofb128 OBJ_camellia,3L#define NID_camellia_128_ofb128 766#define LN_camellia_128_ofb128 "camellia-128-ofb"#define SN_camellia_128_ofb128 "CAMELLIA-128-OFB"#define OBJ_camellia_128_ecb OBJ_camellia,1L#define NID_camellia_128_ecb 754#define LN_camellia_128_ecb "camellia-128-ecb"#define SN_camellia_128_ecb "CAMELLIA-128-ECB"#define OBJ_camellia OBJ_ntt_ds,3L,1L,9L#define OBJ_ntt_ds 0L,3L,4401L,5L#define OBJ_id_camellia256_wrap 1L,2L,392L,200011L,61L,1L,1L,3L,4L#define NID_id_camellia256_wrap 909#define SN_id_camellia256_wrap "id-camellia256-wrap"#define OBJ_id_camellia192_wrap 1L,2L,392L,200011L,61L,1L,1L,3L,3L#define NID_id_camellia192_wrap 908#define SN_id_camellia192_wrap "id-camellia192-wrap"#define OBJ_id_camellia128_wrap 1L,2L,392L,200011L,61L,1L,1L,3L,2L#define NID_id_camellia128_wrap 907#define SN_id_camellia128_wrap "id-camellia128-wrap"#define OBJ_camellia_256_cbc 1L,2L,392L,200011L,61L,1L,1L,1L,4L#define NID_camellia_256_cbc 753#define LN_camellia_256_cbc "camellia-256-cbc"#define SN_camellia_256_cbc "CAMELLIA-256-CBC"#define OBJ_camellia_192_cbc 1L,2L,392L,200011L,61L,1L,1L,1L,3L#define NID_camellia_192_cbc 752#define LN_camellia_192_cbc "camellia-192-cbc"#define SN_camellia_192_cbc "CAMELLIA-192-CBC"#define OBJ_camellia_128_cbc 1L,2L,392L,200011L,61L,1L,1L,1L,2L#define NID_camellia_128_cbc 751#define LN_camellia_128_cbc "camellia-128-cbc"#define SN_camellia_128_cbc "CAMELLIA-128-CBC"#define NID_magma_mac 1192#define SN_magma_mac "magma-mac"#define NID_magma_cfb 1191#define SN_magma_cfb "magma-cfb"#define NID_magma_cbc 1190#define SN_magma_cbc "magma-cbc"#define NID_magma_ofb 1189#define SN_magma_ofb "magma-ofb"#define NID_magma_ctr 1188#define SN_magma_ctr "magma-ctr"#define NID_magma_ecb 1187#define SN_magma_ecb "magma-ecb"#define NID_grasshopper_mac 1017#define SN_grasshopper_mac "grasshopper-mac"#define NID_grasshopper_cfb 1016#define SN_grasshopper_cfb "grasshopper-cfb"#define NID_grasshopper_cbc 1015#define SN_grasshopper_cbc "grasshopper-cbc"#define NID_grasshopper_ofb 1014#define SN_grasshopper_ofb "grasshopper-ofb"#define NID_grasshopper_ctr 1013#define SN_grasshopper_ctr "grasshopper-ctr"#define NID_grasshopper_ecb 1012#define SN_grasshopper_ecb "grasshopper-ecb"#define OBJ_issuerSignTool OBJ_member_body,643L,100L,112L#define NID_issuerSignTool 1008#define LN_issuerSignTool "Signing Tool of Issuer"#define SN_issuerSignTool "issuerSignTool"#define OBJ_subjectSignTool OBJ_member_body,643L,100L,111L#define NID_subjectSignTool 1007#define LN_subjectSignTool "Signing Tool of Subject"#define SN_subjectSignTool "subjectSignTool"#define OBJ_SNILS OBJ_member_body,643L,100L,3L#define NID_SNILS 1006#define LN_SNILS "SNILS"#define SN_SNILS "SNILS"#define OBJ_OGRN OBJ_member_body,643L,100L,1L#define NID_OGRN 1005#define LN_OGRN "OGRN"#define SN_OGRN "OGRN"#define OBJ_INN OBJ_member_body,643L,3L,131L,1L,1L#define NID_INN 1004#define LN_INN "INN"#define SN_INN "INN"#define OBJ_id_tc26_gost_28147_param_Z OBJ_id_tc26_gost_28147_constants,1L#define NID_id_tc26_gost_28147_param_Z 1003#define LN_id_tc26_gost_28147_param_Z "GOST 28147-89 TC26 parameter set"#define SN_id_tc26_gost_28147_param_Z "id-tc26-gost-28147-param-Z"#define OBJ_id_tc26_gost_28147_constants OBJ_id_tc26_cipher_constants,1L#define NID_id_tc26_gost_28147_constants 1002#define SN_id_tc26_gost_28147_constants "id-tc26-gost-28147-constants"#define OBJ_id_tc26_cipher_constants OBJ_id_tc26_constants,5L#define NID_id_tc26_cipher_constants 1001#define SN_id_tc26_cipher_constants "id-tc26-cipher-constants"#define OBJ_id_tc26_digest_constants OBJ_id_tc26_constants,2L#define NID_id_tc26_digest_constants 1000#define SN_id_tc26_digest_constants "id-tc26-digest-constants"#define OBJ_id_tc26_gost_3410_2012_512_paramSetC OBJ_id_tc26_gost_3410_2012_512_constants,3L#define NID_id_tc26_gost_3410_2012_512_paramSetC 1149#define LN_id_tc26_gost_3410_2012_512_paramSetC "GOST R 34.10-2012 (512 bit) ParamSet C"#define SN_id_tc26_gost_3410_2012_512_paramSetC "id-tc26-gost-3410-2012-512-paramSetC"#define OBJ_id_tc26_gost_3410_2012_512_paramSetB OBJ_id_tc26_gost_3410_2012_512_constants,2L#define NID_id_tc26_gost_3410_2012_512_paramSetB 999#define LN_id_tc26_gost_3410_2012_512_paramSetB "GOST R 34.10-2012 (512 bit) ParamSet B"#define SN_id_tc26_gost_3410_2012_512_paramSetB "id-tc26-gost-3410-2012-512-paramSetB"#define OBJ_id_tc26_gost_3410_2012_512_paramSetA OBJ_id_tc26_gost_3410_2012_512_constants,1L#define NID_id_tc26_gost_3410_2012_512_paramSetA 998#define LN_id_tc26_gost_3410_2012_512_paramSetA "GOST R 34.10-2012 (512 bit) ParamSet A"#define SN_id_tc26_gost_3410_2012_512_paramSetA "id-tc26-gost-3410-2012-512-paramSetA"#define OBJ_id_tc26_gost_3410_2012_512_paramSetTest OBJ_id_tc26_gost_3410_2012_512_constants,0L#define NID_id_tc26_gost_3410_2012_512_paramSetTest 997#define LN_id_tc26_gost_3410_2012_512_paramSetTest "GOST R 34.10-2012 (512 bit) testing parameter set"#define SN_id_tc26_gost_3410_2012_512_paramSetTest "id-tc26-gost-3410-2012-512-paramSetTest"#define OBJ_id_tc26_gost_3410_2012_512_constants OBJ_id_tc26_sign_constants,2L#define NID_id_tc26_gost_3410_2012_512_constants 996#define SN_id_tc26_gost_3410_2012_512_constants "id-tc26-gost-3410-2012-512-constants"#define OBJ_id_tc26_gost_3410_2012_256_paramSetD OBJ_id_tc26_gost_3410_2012_256_constants,4L#define NID_id_tc26_gost_3410_2012_256_paramSetD 1186#define LN_id_tc26_gost_3410_2012_256_paramSetD "GOST R 34.10-2012 (256 bit) ParamSet D"#define SN_id_tc26_gost_3410_2012_256_paramSetD "id-tc26-gost-3410-2012-256-paramSetD"#define OBJ_id_tc26_gost_3410_2012_256_paramSetC OBJ_id_tc26_gost_3410_2012_256_constants,3L#define NID_id_tc26_gost_3410_2012_256_paramSetC 1185#define LN_id_tc26_gost_3410_2012_256_paramSetC "GOST R 34.10-2012 (256 bit) ParamSet C"#define SN_id_tc26_gost_3410_2012_256_paramSetC "id-tc26-gost-3410-2012-256-paramSetC"#define OBJ_id_tc26_gost_3410_2012_256_paramSetB OBJ_id_tc26_gost_3410_2012_256_constants,2L#define NID_id_tc26_gost_3410_2012_256_paramSetB 1184#define LN_id_tc26_gost_3410_2012_256_paramSetB "GOST R 34.10-2012 (256 bit) ParamSet B"#define SN_id_tc26_gost_3410_2012_256_paramSetB "id-tc26-gost-3410-2012-256-paramSetB"#define OBJ_id_tc26_gost_3410_2012_256_paramSetA OBJ_id_tc26_gost_3410_2012_256_constants,1L#define NID_id_tc26_gost_3410_2012_256_paramSetA 1148#define LN_id_tc26_gost_3410_2012_256_paramSetA "GOST R 34.10-2012 (256 bit) ParamSet A"#define SN_id_tc26_gost_3410_2012_256_paramSetA "id-tc26-gost-3410-2012-256-paramSetA"#define OBJ_id_tc26_gost_3410_2012_256_constants OBJ_id_tc26_sign_constants,1L#define NID_id_tc26_gost_3410_2012_256_constants 1147#define SN_id_tc26_gost_3410_2012_256_constants "id-tc26-gost-3410-2012-256-constants"#define OBJ_id_tc26_sign_constants OBJ_id_tc26_constants,1L#define NID_id_tc26_sign_constants 995#define SN_id_tc26_sign_constants "id-tc26-sign-constants"#define OBJ_id_tc26_constants OBJ_id_tc26,2L#define NID_id_tc26_constants 994#define SN_id_tc26_constants "id-tc26-constants"#define OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 OBJ_id_tc26_wrap_gostr3412_2015_magma,1L#define NID_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 1183#define SN_id_tc26_wrap_gostr3412_2015_kuznyechik_kexp15 "id-tc26-wrap-gostr3412-2015-kuznyechik-kexp15"#define OBJ_id_tc26_wrap_gostr3412_2015_kuznyechik OBJ_id_tc26_wrap,2L#define NID_id_tc26_wrap_gostr3412_2015_kuznyechik 1182#define SN_id_tc26_wrap_gostr3412_2015_kuznyechik "id-tc26-wrap-gostr3412-2015-kuznyechik"#define OBJ_id_tc26_wrap_gostr3412_2015_magma_kexp15 OBJ_id_tc26_wrap_gostr3412_2015_magma,1L#define NID_id_tc26_wrap_gostr3412_2015_magma_kexp15 1181#define SN_id_tc26_wrap_gostr3412_2015_magma_kexp15 "id-tc26-wrap-gostr3412-2015-magma-kexp15"#define OBJ_id_tc26_wrap_gostr3412_2015_magma OBJ_id_tc26_wrap,1L#define NID_id_tc26_wrap_gostr3412_2015_magma 1180#define SN_id_tc26_wrap_gostr3412_2015_magma "id-tc26-wrap-gostr3412-2015-magma"#define OBJ_id_tc26_wrap OBJ_id_tc26_algorithms,7L#define NID_id_tc26_wrap 1179#define SN_id_tc26_wrap "id-tc26-wrap"#define OBJ_id_tc26_agreement_gost_3410_2012_512 OBJ_id_tc26_agreement,2L#define NID_id_tc26_agreement_gost_3410_2012_512 993#define SN_id_tc26_agreement_gost_3410_2012_512 "id-tc26-agreement-gost-3410-2012-512"#define OBJ_id_tc26_agreement_gost_3410_2012_256 OBJ_id_tc26_agreement,1L#define NID_id_tc26_agreement_gost_3410_2012_256 992#define SN_id_tc26_agreement_gost_3410_2012_256 "id-tc26-agreement-gost-3410-2012-256"#define OBJ_id_tc26_agreement OBJ_id_tc26_algorithms,6L#define NID_id_tc26_agreement 991#define SN_id_tc26_agreement "id-tc26-agreement"#define OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik,2L#define NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac 1178#define SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm_omac "id-tc26-cipher-gostr3412-2015-kuznyechik-ctracpkm-omac"#define OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik,1L#define NID_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm 1177#define SN_id_tc26_cipher_gostr3412_2015_kuznyechik_ctracpkm "id-tc26-cipher-gostr3412-2015-kuznyechik-ctracpkm"#define OBJ_id_tc26_cipher_gostr3412_2015_kuznyechik OBJ_id_tc26_cipher,2L#define NID_id_tc26_cipher_gostr3412_2015_kuznyechik 1176#define SN_id_tc26_cipher_gostr3412_2015_kuznyechik "id-tc26-cipher-gostr3412-2015-kuznyechik"#define OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac OBJ_id_tc26_cipher_gostr3412_2015_magma,2L#define NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac 1175#define SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm_omac "id-tc26-cipher-gostr3412-2015-magma-ctracpkm-omac"#define OBJ_id_tc26_cipher_gostr3412_2015_magma_ctracpkm OBJ_id_tc26_cipher_gostr3412_2015_magma,1L#define NID_id_tc26_cipher_gostr3412_2015_magma_ctracpkm 1174#define SN_id_tc26_cipher_gostr3412_2015_magma_ctracpkm "id-tc26-cipher-gostr3412-2015-magma-ctracpkm"#define OBJ_id_tc26_cipher_gostr3412_2015_magma OBJ_id_tc26_cipher,1L#define NID_id_tc26_cipher_gostr3412_2015_magma 1173#define SN_id_tc26_cipher_gostr3412_2015_magma "id-tc26-cipher-gostr3412-2015-magma"#define OBJ_id_tc26_cipher OBJ_id_tc26_algorithms,5L#define NID_id_tc26_cipher 990#define SN_id_tc26_cipher "id-tc26-cipher"#define OBJ_id_tc26_hmac_gost_3411_2012_512 OBJ_id_tc26_mac,2L#define NID_id_tc26_hmac_gost_3411_2012_512 989#define LN_id_tc26_hmac_gost_3411_2012_512 "HMAC GOST 34.11-2012 512 bit"#define SN_id_tc26_hmac_gost_3411_2012_512 "id-tc26-hmac-gost-3411-2012-512"#define OBJ_id_tc26_hmac_gost_3411_2012_256 OBJ_id_tc26_mac,1L#define NID_id_tc26_hmac_gost_3411_2012_256 988#define LN_id_tc26_hmac_gost_3411_2012_256 "HMAC GOST 34.11-2012 256 bit"#define SN_id_tc26_hmac_gost_3411_2012_256 "id-tc26-hmac-gost-3411-2012-256"#define OBJ_id_tc26_mac OBJ_id_tc26_algorithms,4L#define NID_id_tc26_mac 987#define SN_id_tc26_mac "id-tc26-mac"#define OBJ_id_tc26_signwithdigest_gost3410_2012_512 OBJ_id_tc26_signwithdigest,3L#define NID_id_tc26_signwithdigest_gost3410_2012_512 986#define LN_id_tc26_signwithdigest_gost3410_2012_512 "GOST R 34.10-2012 with GOST R 34.11-2012 (512 bit)"#define SN_id_tc26_signwithdigest_gost3410_2012_512 "id-tc26-signwithdigest-gost3410-2012-512"#define OBJ_id_tc26_signwithdigest_gost3410_2012_256 OBJ_id_tc26_signwithdigest,2L#define NID_id_tc26_signwithdigest_gost3410_2012_256 985#define LN_id_tc26_signwithdigest_gost3410_2012_256 "GOST R 34.10-2012 with GOST R 34.11-2012 (256 bit)"#define SN_id_tc26_signwithdigest_gost3410_2012_256 "id-tc26-signwithdigest-gost3410-2012-256"#define OBJ_id_tc26_signwithdigest OBJ_id_tc26_algorithms,3L#define NID_id_tc26_signwithdigest 984#define SN_id_tc26_signwithdigest "id-tc26-signwithdigest"#define OBJ_id_GostR3411_2012_512 OBJ_id_tc26_digest,3L#define NID_id_GostR3411_2012_512 983#define LN_id_GostR3411_2012_512 "GOST R 34.11-2012 with 512 bit hash"#define SN_id_GostR3411_2012_512 "md_gost12_512"#define OBJ_id_GostR3411_2012_256 OBJ_id_tc26_digest,2L#define NID_id_GostR3411_2012_256 982#define LN_id_GostR3411_2012_256 "GOST R 34.11-2012 with 256 bit hash"#define SN_id_GostR3411_2012_256 "md_gost12_256"#define OBJ_id_tc26_digest OBJ_id_tc26_algorithms,2L#define NID_id_tc26_digest 981#define SN_id_tc26_digest "id-tc26-digest"#define OBJ_id_GostR3410_2012_512 OBJ_id_tc26_sign,2L#define NID_id_GostR3410_2012_512 980#define LN_id_GostR3410_2012_512 "GOST R 34.10-2012 with 512 bit modulus"#define SN_id_GostR3410_2012_512 "gost2012_512"#define OBJ_id_GostR3410_2012_256 OBJ_id_tc26_sign,1L#define NID_id_GostR3410_2012_256 979#define LN_id_GostR3410_2012_256 "GOST R 34.10-2012 with 256 bit modulus"#define SN_id_GostR3410_2012_256 "gost2012_256"#define OBJ_id_tc26_sign OBJ_id_tc26_algorithms,1L#define NID_id_tc26_sign 978#define SN_id_tc26_sign "id-tc26-sign"#define OBJ_id_tc26_algorithms OBJ_id_tc26,1L#define NID_id_tc26_algorithms 977#define SN_id_tc26_algorithms "id-tc26-algorithms"#define OBJ_id_GostR3410_2001_ParamSet_cc OBJ_cryptocom,1L,8L,1L#define NID_id_GostR3410_2001_ParamSet_cc 854#define LN_id_GostR3410_2001_ParamSet_cc "GOST R 3410-2001 Parameter Set Cryptocom"#define SN_id_GostR3410_2001_ParamSet_cc "id-GostR3410-2001-ParamSet-cc"#define OBJ_id_GostR3411_94_with_GostR3410_2001_cc OBJ_cryptocom,1L,3L,4L#define NID_id_GostR3411_94_with_GostR3410_2001_cc 853#define LN_id_GostR3411_94_with_GostR3410_2001_cc "GOST R 34.11-94 with GOST R 34.10-2001 Cryptocom"#define SN_id_GostR3411_94_with_GostR3410_2001_cc "id-GostR3411-94-with-GostR3410-2001-cc"#define OBJ_id_GostR3411_94_with_GostR3410_94_cc OBJ_cryptocom,1L,3L,3L#define NID_id_GostR3411_94_with_GostR3410_94_cc 852#define LN_id_GostR3411_94_with_GostR3410_94_cc "GOST R 34.11-94 with GOST R 34.10-94 Cryptocom"#define SN_id_GostR3411_94_with_GostR3410_94_cc "id-GostR3411-94-with-GostR3410-94-cc"#define OBJ_id_GostR3410_2001_cc OBJ_cryptocom,1L,5L,4L#define NID_id_GostR3410_2001_cc 851#define LN_id_GostR3410_2001_cc "GOST 34.10-2001 Cryptocom"#define SN_id_GostR3410_2001_cc "gost2001cc"#define OBJ_id_GostR3410_94_cc OBJ_cryptocom,1L,5L,3L#define NID_id_GostR3410_94_cc 850#define LN_id_GostR3410_94_cc "GOST 34.10-94 Cryptocom"#define SN_id_GostR3410_94_cc "gost94cc"#define OBJ_id_Gost28147_89_cc OBJ_cryptocom,1L,6L,1L#define NID_id_Gost28147_89_cc 849#define LN_id_Gost28147_89_cc "GOST 28147-89 Cryptocom ParamSet"#define SN_id_Gost28147_89_cc "id-Gost28147-89-cc"#define OBJ_id_GostR3410_94_bBis OBJ_id_GostR3410_94,4L#define NID_id_GostR3410_94_bBis 848#define SN_id_GostR3410_94_bBis "id-GostR3410-94-bBis"#define OBJ_id_GostR3410_94_b OBJ_id_GostR3410_94,3L#define NID_id_GostR3410_94_b 847#define SN_id_GostR3410_94_b "id-GostR3410-94-b"#define OBJ_id_GostR3410_94_aBis OBJ_id_GostR3410_94,2L#define NID_id_GostR3410_94_aBis 846#define SN_id_GostR3410_94_aBis "id-GostR3410-94-aBis"#define OBJ_id_GostR3410_94_a OBJ_id_GostR3410_94,1L#define NID_id_GostR3410_94_a 845#define SN_id_GostR3410_94_a "id-GostR3410-94-a"#define OBJ_id_GostR3410_2001_CryptoPro_XchB_ParamSet OBJ_cryptopro,36L,1L#define NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet 844#define SN_id_GostR3410_2001_CryptoPro_XchB_ParamSet "id-GostR3410-2001-CryptoPro-XchB-ParamSet"#define OBJ_id_GostR3410_2001_CryptoPro_XchA_ParamSet OBJ_cryptopro,36L,0L#define NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet 843#define SN_id_GostR3410_2001_CryptoPro_XchA_ParamSet "id-GostR3410-2001-CryptoPro-XchA-ParamSet"#define OBJ_id_GostR3410_2001_CryptoPro_C_ParamSet OBJ_cryptopro,35L,3L#define NID_id_GostR3410_2001_CryptoPro_C_ParamSet 842#define SN_id_GostR3410_2001_CryptoPro_C_ParamSet "id-GostR3410-2001-CryptoPro-C-ParamSet"#define OBJ_id_GostR3410_2001_CryptoPro_B_ParamSet OBJ_cryptopro,35L,2L#define NID_id_GostR3410_2001_CryptoPro_B_ParamSet 841#define SN_id_GostR3410_2001_CryptoPro_B_ParamSet "id-GostR3410-2001-CryptoPro-B-ParamSet"#define OBJ_id_GostR3410_2001_CryptoPro_A_ParamSet OBJ_cryptopro,35L,1L#define NID_id_GostR3410_2001_CryptoPro_A_ParamSet 840#define SN_id_GostR3410_2001_CryptoPro_A_ParamSet "id-GostR3410-2001-CryptoPro-A-ParamSet"#define OBJ_id_GostR3410_2001_TestParamSet OBJ_cryptopro,35L,0L#define NID_id_GostR3410_2001_TestParamSet 839#define SN_id_GostR3410_2001_TestParamSet "id-GostR3410-2001-TestParamSet"#define OBJ_id_GostR3410_94_CryptoPro_XchC_ParamSet OBJ_cryptopro,33L,3L#define NID_id_GostR3410_94_CryptoPro_XchC_ParamSet 838#define SN_id_GostR3410_94_CryptoPro_XchC_ParamSet "id-GostR3410-94-CryptoPro-XchC-ParamSet"#define OBJ_id_GostR3410_94_CryptoPro_XchB_ParamSet OBJ_cryptopro,33L,2L#define NID_id_GostR3410_94_CryptoPro_XchB_ParamSet 837#define SN_id_GostR3410_94_CryptoPro_XchB_ParamSet "id-GostR3410-94-CryptoPro-XchB-ParamSet"#define OBJ_id_GostR3410_94_CryptoPro_XchA_ParamSet OBJ_cryptopro,33L,1L#define NID_id_GostR3410_94_CryptoPro_XchA_ParamSet 836#define SN_id_GostR3410_94_CryptoPro_XchA_ParamSet "id-GostR3410-94-CryptoPro-XchA-ParamSet"#define OBJ_id_GostR3410_94_CryptoPro_D_ParamSet OBJ_cryptopro,32L,5L#define NID_id_GostR3410_94_CryptoPro_D_ParamSet 835#define SN_id_GostR3410_94_CryptoPro_D_ParamSet "id-GostR3410-94-CryptoPro-D-ParamSet"#define OBJ_id_GostR3410_94_CryptoPro_C_ParamSet OBJ_cryptopro,32L,4L#define NID_id_GostR3410_94_CryptoPro_C_ParamSet 834#define SN_id_GostR3410_94_CryptoPro_C_ParamSet "id-GostR3410-94-CryptoPro-C-ParamSet"#define OBJ_id_GostR3410_94_CryptoPro_B_ParamSet OBJ_cryptopro,32L,3L#define NID_id_GostR3410_94_CryptoPro_B_ParamSet 833#define SN_id_GostR3410_94_CryptoPro_B_ParamSet "id-GostR3410-94-CryptoPro-B-ParamSet"#define OBJ_id_GostR3410_94_CryptoPro_A_ParamSet OBJ_cryptopro,32L,2L#define NID_id_GostR3410_94_CryptoPro_A_ParamSet 832#define SN_id_GostR3410_94_CryptoPro_A_ParamSet "id-GostR3410-94-CryptoPro-A-ParamSet"#define OBJ_id_GostR3410_94_TestParamSet OBJ_cryptopro,32L,0L#define NID_id_GostR3410_94_TestParamSet 831#define SN_id_GostR3410_94_TestParamSet "id-GostR3410-94-TestParamSet"#define OBJ_id_Gost28147_89_CryptoPro_RIC_1_ParamSet OBJ_cryptopro,31L,7L#define NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet 830#define SN_id_Gost28147_89_CryptoPro_RIC_1_ParamSet "id-Gost28147-89-CryptoPro-RIC-1-ParamSet"#define OBJ_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet OBJ_cryptopro,31L,6L#define NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet 829#define SN_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet "id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet"#define OBJ_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet OBJ_cryptopro,31L,5L#define NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet 828#define SN_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet "id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet"#define OBJ_id_Gost28147_89_CryptoPro_D_ParamSet OBJ_cryptopro,31L,4L#define NID_id_Gost28147_89_CryptoPro_D_ParamSet 827#define SN_id_Gost28147_89_CryptoPro_D_ParamSet "id-Gost28147-89-CryptoPro-D-ParamSet"#define OBJ_id_Gost28147_89_CryptoPro_C_ParamSet OBJ_cryptopro,31L,3L#define NID_id_Gost28147_89_CryptoPro_C_ParamSet 826#define SN_id_Gost28147_89_CryptoPro_C_ParamSet "id-Gost28147-89-CryptoPro-C-ParamSet"#define OBJ_id_Gost28147_89_CryptoPro_B_ParamSet OBJ_cryptopro,31L,2L#define NID_id_Gost28147_89_CryptoPro_B_ParamSet 825#define SN_id_Gost28147_89_CryptoPro_B_ParamSet "id-Gost28147-89-CryptoPro-B-ParamSet"#define OBJ_id_Gost28147_89_CryptoPro_A_ParamSet OBJ_cryptopro,31L,1L#define NID_id_Gost28147_89_CryptoPro_A_ParamSet 824#define SN_id_Gost28147_89_CryptoPro_A_ParamSet "id-Gost28147-89-CryptoPro-A-ParamSet"#define OBJ_id_Gost28147_89_TestParamSet OBJ_cryptopro,31L,0L#define NID_id_Gost28147_89_TestParamSet 823#define SN_id_Gost28147_89_TestParamSet "id-Gost28147-89-TestParamSet"#define OBJ_id_GostR3411_94_CryptoProParamSet OBJ_cryptopro,30L,1L#define NID_id_GostR3411_94_CryptoProParamSet 822#define SN_id_GostR3411_94_CryptoProParamSet "id-GostR3411-94-CryptoProParamSet"#define OBJ_id_GostR3411_94_TestParamSet OBJ_cryptopro,30L,0L#define NID_id_GostR3411_94_TestParamSet 821#define SN_id_GostR3411_94_TestParamSet "id-GostR3411-94-TestParamSet"#define OBJ_id_Gost28147_89_None_KeyMeshing OBJ_cryptopro,14L,0L#define NID_id_Gost28147_89_None_KeyMeshing 820#define SN_id_Gost28147_89_None_KeyMeshing "id-Gost28147-89-None-KeyMeshing"#define OBJ_id_Gost28147_89_CryptoPro_KeyMeshing OBJ_cryptopro,14L,1L#define NID_id_Gost28147_89_CryptoPro_KeyMeshing 819#define SN_id_Gost28147_89_CryptoPro_KeyMeshing "id-Gost28147-89-CryptoPro-KeyMeshing"#define OBJ_id_GostR3410_94DH OBJ_cryptopro,99L#define NID_id_GostR3410_94DH 818#define LN_id_GostR3410_94DH "GOST R 34.10-94 DH"#define SN_id_GostR3410_94DH "id-GostR3410-94DH"#define OBJ_id_GostR3410_2001DH OBJ_cryptopro,98L#define NID_id_GostR3410_2001DH 817#define LN_id_GostR3410_2001DH "GOST R 34.10-2001 DH"#define SN_id_GostR3410_2001DH "id-GostR3410-2001DH"#define OBJ_id_GostR3411_94_prf OBJ_cryptopro,23L#define NID_id_GostR3411_94_prf 816#define LN_id_GostR3411_94_prf "GOST R 34.11-94 PRF"#define SN_id_GostR3411_94_prf "prf-gostr3411-94"#define NID_gost_mac_12 976#define SN_gost_mac_12 "gost-mac-12"#define OBJ_id_Gost28147_89_MAC OBJ_cryptopro,22L#define NID_id_Gost28147_89_MAC 815#define LN_id_Gost28147_89_MAC "GOST 28147-89 MAC"#define SN_id_Gost28147_89_MAC "gost-mac"#define NID_gost89_ctr 1011#define SN_gost89_ctr "gost89-ctr"#define NID_gost89_ecb 1010#define SN_gost89_ecb "gost89-ecb"#define NID_gost89_cbc 1009#define SN_gost89_cbc "gost89-cbc"#define NID_gost89_cnt_12 975#define SN_gost89_cnt_12 "gost89-cnt-12"#define NID_gost89_cnt 814#define SN_gost89_cnt "gost89-cnt"#define OBJ_id_Gost28147_89 OBJ_cryptopro,21L#define NID_id_Gost28147_89 813#define LN_id_Gost28147_89 "GOST 28147-89"#define SN_id_Gost28147_89 "gost89"#define OBJ_id_GostR3410_94 OBJ_cryptopro,20L#define NID_id_GostR3410_94 812#define LN_id_GostR3410_94 "GOST R 34.10-94"#define SN_id_GostR3410_94 "gost94"#define OBJ_id_GostR3410_2001 OBJ_cryptopro,19L#define NID_id_GostR3410_2001 811#define LN_id_GostR3410_2001 "GOST R 34.10-2001"#define SN_id_GostR3410_2001 "gost2001"#define OBJ_id_HMACGostR3411_94 OBJ_cryptopro,10L#define NID_id_HMACGostR3411_94 810#define LN_id_HMACGostR3411_94 "HMAC GOST 34.11-94"#define SN_id_HMACGostR3411_94 "id-HMACGostR3411-94"#define OBJ_id_GostR3411_94 OBJ_cryptopro,9L#define NID_id_GostR3411_94 809#define LN_id_GostR3411_94 "GOST R 34.11-94"#define SN_id_GostR3411_94 "md_gost94"#define OBJ_id_GostR3411_94_with_GostR3410_94 OBJ_cryptopro,4L#define NID_id_GostR3411_94_with_GostR3410_94 808#define LN_id_GostR3411_94_with_GostR3410_94 "GOST R 34.11-94 with GOST R 34.10-94"#define SN_id_GostR3411_94_with_GostR3410_94 "id-GostR3411-94-with-GostR3410-94"#define OBJ_id_GostR3411_94_with_GostR3410_2001 OBJ_cryptopro,3L#define NID_id_GostR3411_94_with_GostR3410_2001 807#define LN_id_GostR3411_94_with_GostR3410_2001 "GOST R 34.11-94 with GOST R 34.10-2001"#define SN_id_GostR3411_94_with_GostR3410_2001 "id-GostR3411-94-with-GostR3410-2001"#define OBJ_id_tc26 OBJ_member_body,643L,7L,1L#define NID_id_tc26 974#define SN_id_tc26 "id-tc26"#define OBJ_cryptocom OBJ_member_body,643L,2L,9L#define NID_cryptocom 806#define SN_cryptocom "cryptocom"#define OBJ_cryptopro OBJ_member_body,643L,2L,2L#define NID_cryptopro 805#define SN_cryptopro "cryptopro"#define OBJ_whirlpool OBJ_iso,0L,10118L,3L,0L,55L#define NID_whirlpool 804#define SN_whirlpool "whirlpool"#define NID_ipsec4 750#define LN_ipsec4 "ipsec4"#define SN_ipsec4 "Oakley-EC2N-4"#define NID_ipsec3 749#define LN_ipsec3 "ipsec3"#define SN_ipsec3 "Oakley-EC2N-3"#define OBJ_rsaOAEPEncryptionSET OBJ_rsadsi,1L,1L,6L#define NID_rsaOAEPEncryptionSET 644#define SN_rsaOAEPEncryptionSET "rsaOAEPEncryptionSET"#define OBJ_des_cdmf OBJ_rsadsi,3L,10L#define NID_des_cdmf 643#define LN_des_cdmf "des-cdmf"#define SN_des_cdmf "DES-CDMF"#define OBJ_set_brand_Novus OBJ_set_brand,6011L#define NID_set_brand_Novus 642#define SN_set_brand_Novus "set-brand-Novus"#define OBJ_set_brand_MasterCard OBJ_set_brand,5L#define NID_set_brand_MasterCard 641#define SN_set_brand_MasterCard "set-brand-MasterCard"#define OBJ_set_brand_Visa OBJ_set_brand,4L#define NID_set_brand_Visa 640#define SN_set_brand_Visa "set-brand-Visa"#define OBJ_set_brand_JCB OBJ_set_brand,35L#define NID_set_brand_JCB 639#define SN_set_brand_JCB "set-brand-JCB"#define OBJ_set_brand_AmericanExpress OBJ_set_brand,34L#define NID_set_brand_AmericanExpress 638#define SN_set_brand_AmericanExpress "set-brand-AmericanExpress"#define OBJ_set_brand_Diners OBJ_set_brand,30L#define NID_set_brand_Diners 637#define SN_set_brand_Diners "set-brand-Diners"#define OBJ_set_brand_IATA_ATA OBJ_set_brand,1L#define NID_set_brand_IATA_ATA 636#define SN_set_brand_IATA_ATA "set-brand-IATA-ATA"#define OBJ_setAttr_SecDevSig OBJ_setAttr_IssCap_Sig,2L#define NID_setAttr_SecDevSig 635#define LN_setAttr_SecDevSig "secure device signature"#define SN_setAttr_SecDevSig "setAttr-SecDevSig"#define OBJ_setAttr_TokICCsig OBJ_setAttr_IssCap_Sig,1L#define NID_setAttr_TokICCsig 634#define LN_setAttr_TokICCsig "ICC or token signature"#define SN_setAttr_TokICCsig "setAttr-TokICCsig"#define OBJ_setAttr_T2cleartxt OBJ_setAttr_IssCap_T2,2L#define NID_setAttr_T2cleartxt 633#define LN_setAttr_T2cleartxt "cleartext track 2"#define SN_setAttr_T2cleartxt "setAttr-T2cleartxt"#define OBJ_setAttr_T2Enc OBJ_setAttr_IssCap_T2,1L#define NID_setAttr_T2Enc 632#define LN_setAttr_T2Enc "encrypted track 2"#define SN_setAttr_T2Enc "setAttr-T2Enc"#define OBJ_setAttr_GenCryptgrm OBJ_setAttr_IssCap_CVM,1L#define NID_setAttr_GenCryptgrm 631#define LN_setAttr_GenCryptgrm "generate cryptogram"#define SN_setAttr_GenCryptgrm "setAttr-GenCryptgrm"#define OBJ_setAttr_IssCap_Sig OBJ_setAttr_IssCap,5L#define NID_setAttr_IssCap_Sig 630#define SN_setAttr_IssCap_Sig "setAttr-IssCap-Sig"#define OBJ_setAttr_IssCap_T2 OBJ_setAttr_IssCap,4L#define NID_setAttr_IssCap_T2 629#define SN_setAttr_IssCap_T2 "setAttr-IssCap-T2"#define OBJ_setAttr_IssCap_CVM OBJ_setAttr_IssCap,3L#define NID_setAttr_IssCap_CVM 628#define SN_setAttr_IssCap_CVM "setAttr-IssCap-CVM"#define OBJ_setAttr_Token_B0Prime OBJ_setAttr_TokenType,2L#define NID_setAttr_Token_B0Prime 627#define SN_setAttr_Token_B0Prime "setAttr-Token-B0Prime"#define OBJ_setAttr_Token_EMV OBJ_setAttr_TokenType,1L#define NID_setAttr_Token_EMV 626#define SN_setAttr_Token_EMV "setAttr-Token-EMV"#define OBJ_set_addPolicy OBJ_setAttr_Cert,1L#define NID_set_addPolicy 625#define SN_set_addPolicy "set-addPolicy"#define OBJ_set_rootKeyThumb OBJ_setAttr_Cert,0L#define NID_set_rootKeyThumb 624#define SN_set_rootKeyThumb "set-rootKeyThumb"#define OBJ_setAttr_IssCap OBJ_set_attr,3L#define NID_setAttr_IssCap 623#define LN_setAttr_IssCap "issuer capabilities"#define SN_setAttr_IssCap "setAttr-IssCap"#define OBJ_setAttr_TokenType OBJ_set_attr,2L#define NID_setAttr_TokenType 622#define SN_setAttr_TokenType "setAttr-TokenType"#define OBJ_setAttr_PGWYcap OBJ_set_attr,1L#define NID_setAttr_PGWYcap 621#define LN_setAttr_PGWYcap "payment gateway capabilities"#define SN_setAttr_PGWYcap "setAttr-PGWYcap"#define OBJ_setAttr_Cert OBJ_set_attr,0L#define NID_setAttr_Cert 620#define SN_setAttr_Cert "setAttr-Cert"#define OBJ_setCext_IssuerCapabilities OBJ_set_certExt,11L#define NID_setCext_IssuerCapabilities 619#define SN_setCext_IssuerCapabilities "setCext-IssuerCapabilities"#define OBJ_setCext_TokenType OBJ_set_certExt,10L#define NID_setCext_TokenType 618#define SN_setCext_TokenType "setCext-TokenType"#define OBJ_setCext_Track2Data OBJ_set_certExt,9L#define NID_setCext_Track2Data 617#define SN_setCext_Track2Data "setCext-Track2Data"#define OBJ_setCext_TokenIdentifier OBJ_set_certExt,8L#define NID_setCext_TokenIdentifier 616#define SN_setCext_TokenIdentifier "setCext-TokenIdentifier"#define OBJ_setCext_PGWYcapabilities OBJ_set_certExt,7L#define NID_setCext_PGWYcapabilities 615#define SN_setCext_PGWYcapabilities "setCext-PGWYcapabilities"#define OBJ_setCext_setQualf OBJ_set_certExt,6L#define NID_setCext_setQualf 614#define SN_setCext_setQualf "setCext-setQualf"#define OBJ_setCext_setExt OBJ_set_certExt,5L#define NID_setCext_setExt 613#define SN_setCext_setExt "setCext-setExt"#define OBJ_setCext_tunneling OBJ_set_certExt,4L#define NID_setCext_tunneling 612#define SN_setCext_tunneling "setCext-tunneling"#define OBJ_setCext_cCertRequired OBJ_set_certExt,3L#define NID_setCext_cCertRequired 611#define SN_setCext_cCertRequired "setCext-cCertRequired"#define OBJ_setCext_merchData OBJ_set_certExt,2L#define NID_setCext_merchData 610#define SN_setCext_merchData "setCext-merchData"#define OBJ_setCext_certType OBJ_set_certExt,1L#define NID_setCext_certType 609#define SN_setCext_certType "setCext-certType"#define OBJ_setCext_hashedRoot OBJ_set_certExt,0L#define NID_setCext_hashedRoot 608#define SN_setCext_hashedRoot "setCext-hashedRoot"#define OBJ_set_policy_root OBJ_set_policy,0L#define NID_set_policy_root 607#define SN_set_policy_root "set-policy-root"#define OBJ_setext_cv OBJ_set_msgExt,8L#define NID_setext_cv 606#define LN_setext_cv "additional verification"#define SN_setext_cv "setext-cv"#define OBJ_setext_track2 OBJ_set_msgExt,7L#define NID_setext_track2 605#define SN_setext_track2 "setext-track2"#define OBJ_setext_pinAny OBJ_set_msgExt,5L#define NID_setext_pinAny 604#define SN_setext_pinAny "setext-pinAny"#define OBJ_setext_pinSecure OBJ_set_msgExt,4L#define NID_setext_pinSecure 603#define SN_setext_pinSecure "setext-pinSecure"#define OBJ_setext_miAuth OBJ_set_msgExt,3L#define NID_setext_miAuth 602#define LN_setext_miAuth "merchant initiated auth"#define SN_setext_miAuth "setext-miAuth"#define OBJ_setext_genCrypt OBJ_set_msgExt,1L#define NID_setext_genCrypt 601#define LN_setext_genCrypt "generic cryptogram"#define SN_setext_genCrypt "setext-genCrypt"#define OBJ_setct_BCIDistributionTBS OBJ_set_ctype,82L#define NID_setct_BCIDistributionTBS 600#define SN_setct_BCIDistributionTBS "setct-BCIDistributionTBS"#define OBJ_setct_CRLNotificationResTBS OBJ_set_ctype,81L#define NID_setct_CRLNotificationResTBS 599#define SN_setct_CRLNotificationResTBS "setct-CRLNotificationResTBS"#define OBJ_setct_CRLNotificationTBS OBJ_set_ctype,80L#define NID_setct_CRLNotificationTBS 598#define SN_setct_CRLNotificationTBS "setct-CRLNotificationTBS"#define OBJ_setct_CertResTBE OBJ_set_ctype,79L#define NID_setct_CertResTBE 597#define SN_setct_CertResTBE "setct-CertResTBE"#define OBJ_setct_CertReqTBEX OBJ_set_ctype,78L#define NID_setct_CertReqTBEX 596#define SN_setct_CertReqTBEX "setct-CertReqTBEX"#define OBJ_setct_CertReqTBE OBJ_set_ctype,77L#define NID_setct_CertReqTBE 595#define SN_setct_CertReqTBE "setct-CertReqTBE"#define OBJ_setct_RegFormReqTBE OBJ_set_ctype,76L#define NID_setct_RegFormReqTBE 594#define SN_setct_RegFormReqTBE "setct-RegFormReqTBE"#define OBJ_setct_BatchAdminResTBE OBJ_set_ctype,75L#define NID_setct_BatchAdminResTBE 593#define SN_setct_BatchAdminResTBE "setct-BatchAdminResTBE"#define OBJ_setct_BatchAdminReqTBE OBJ_set_ctype,74L#define NID_setct_BatchAdminReqTBE 592#define SN_setct_BatchAdminReqTBE "setct-BatchAdminReqTBE"#define OBJ_setct_CredRevResTBE OBJ_set_ctype,73L#define NID_setct_CredRevResTBE 591#define SN_setct_CredRevResTBE "setct-CredRevResTBE"#define OBJ_setct_CredRevReqTBEX OBJ_set_ctype,72L#define NID_setct_CredRevReqTBEX 590#define SN_setct_CredRevReqTBEX "setct-CredRevReqTBEX"#define OBJ_setct_CredRevReqTBE OBJ_set_ctype,71L#define NID_setct_CredRevReqTBE 589#define SN_setct_CredRevReqTBE "setct-CredRevReqTBE"#define OBJ_setct_CredResTBE OBJ_set_ctype,70L#define NID_setct_CredResTBE 588#define SN_setct_CredResTBE "setct-CredResTBE"#define OBJ_setct_CredReqTBEX OBJ_set_ctype,69L#define NID_setct_CredReqTBEX 587#define SN_setct_CredReqTBEX "setct-CredReqTBEX"#define OBJ_setct_CredReqTBE OBJ_set_ctype,68L#define NID_setct_CredReqTBE 586#define SN_setct_CredReqTBE "setct-CredReqTBE"#define OBJ_setct_CapRevResTBE OBJ_set_ctype,67L#define NID_setct_CapRevResTBE 585#define SN_setct_CapRevResTBE "setct-CapRevResTBE"#define OBJ_setct_CapRevReqTBEX OBJ_set_ctype,66L#define NID_setct_CapRevReqTBEX 584#define SN_setct_CapRevReqTBEX "setct-CapRevReqTBEX"#define OBJ_setct_CapRevReqTBE OBJ_set_ctype,65L#define NID_setct_CapRevReqTBE 583#define SN_setct_CapRevReqTBE "setct-CapRevReqTBE"#define OBJ_setct_CapResTBE OBJ_set_ctype,64L#define NID_setct_CapResTBE 582#define SN_setct_CapResTBE "setct-CapResTBE"#define OBJ_setct_CapReqTBEX OBJ_set_ctype,63L#define NID_setct_CapReqTBEX 581#define SN_setct_CapReqTBEX "setct-CapReqTBEX"#define OBJ_setct_CapReqTBE OBJ_set_ctype,62L#define NID_setct_CapReqTBE 580#define SN_setct_CapReqTBE "setct-CapReqTBE"#define OBJ_setct_AuthRevResTBEB OBJ_set_ctype,61L#define NID_setct_AuthRevResTBEB 579#define SN_setct_AuthRevResTBEB "setct-AuthRevResTBEB"#define OBJ_setct_AuthRevResTBE OBJ_set_ctype,60L#define NID_setct_AuthRevResTBE 578#define SN_setct_AuthRevResTBE "setct-AuthRevResTBE"#define OBJ_setct_AuthRevReqTBE OBJ_set_ctype,59L#define NID_setct_AuthRevReqTBE 577#define SN_setct_AuthRevReqTBE "setct-AuthRevReqTBE"#define OBJ_setct_AcqCardCodeMsgTBE OBJ_set_ctype,58L#define NID_setct_AcqCardCodeMsgTBE 576#define SN_setct_AcqCardCodeMsgTBE "setct-AcqCardCodeMsgTBE"#define OBJ_setct_CapTokenTBEX OBJ_set_ctype,57L#define NID_setct_CapTokenTBEX 575#define SN_setct_CapTokenTBEX "setct-CapTokenTBEX"#define OBJ_setct_CapTokenTBE OBJ_set_ctype,56L#define NID_setct_CapTokenTBE 574#define SN_setct_CapTokenTBE "setct-CapTokenTBE"#define OBJ_setct_AuthTokenTBE OBJ_set_ctype,55L#define NID_setct_AuthTokenTBE 573#define SN_setct_AuthTokenTBE "setct-AuthTokenTBE"#define OBJ_setct_AuthResTBEX OBJ_set_ctype,54L#define NID_setct_AuthResTBEX 572#define SN_setct_AuthResTBEX "setct-AuthResTBEX"#define OBJ_setct_AuthResTBE OBJ_set_ctype,53L#define NID_setct_AuthResTBE 571#define SN_setct_AuthResTBE "setct-AuthResTBE"#define OBJ_setct_AuthReqTBE OBJ_set_ctype,52L#define NID_setct_AuthReqTBE 570#define SN_setct_AuthReqTBE "setct-AuthReqTBE"#define OBJ_setct_PIUnsignedTBE OBJ_set_ctype,51L#define NID_setct_PIUnsignedTBE 569#define SN_setct_PIUnsignedTBE "setct-PIUnsignedTBE"#define OBJ_setct_PIDualSignedTBE OBJ_set_ctype,50L#define NID_setct_PIDualSignedTBE 568#define SN_setct_PIDualSignedTBE "setct-PIDualSignedTBE"#define OBJ_setct_ErrorTBS OBJ_set_ctype,49L#define NID_setct_ErrorTBS 567#define SN_setct_ErrorTBS "setct-ErrorTBS"#define OBJ_setct_CertInqReqTBS OBJ_set_ctype,48L#define NID_setct_CertInqReqTBS 566#define SN_setct_CertInqReqTBS "setct-CertInqReqTBS"#define OBJ_setct_CertResData OBJ_set_ctype,47L#define NID_setct_CertResData 565#define SN_setct_CertResData "setct-CertResData"#define OBJ_setct_CertReqTBS OBJ_set_ctype,46L#define NID_setct_CertReqTBS 564#define SN_setct_CertReqTBS "setct-CertReqTBS"#define OBJ_setct_CertReqData OBJ_set_ctype,45L#define NID_setct_CertReqData 563#define SN_setct_CertReqData "setct-CertReqData"#define OBJ_setct_RegFormResTBS OBJ_set_ctype,44L#define NID_setct_RegFormResTBS 562#define SN_setct_RegFormResTBS "setct-RegFormResTBS"#define OBJ_setct_MeAqCInitResTBS OBJ_set_ctype,43L#define NID_setct_MeAqCInitResTBS 561#define SN_setct_MeAqCInitResTBS "setct-MeAqCInitResTBS"#define OBJ_setct_CardCInitResTBS OBJ_set_ctype,42L#define NID_setct_CardCInitResTBS 560#define SN_setct_CardCInitResTBS "setct-CardCInitResTBS"#define OBJ_setct_BatchAdminResData OBJ_set_ctype,41L#define NID_setct_BatchAdminResData 559#define SN_setct_BatchAdminResData "setct-BatchAdminResData"#define OBJ_setct_BatchAdminReqData OBJ_set_ctype,40L#define NID_setct_BatchAdminReqData 558#define SN_setct_BatchAdminReqData "setct-BatchAdminReqData"#define OBJ_setct_PCertResTBS OBJ_set_ctype,39L#define NID_setct_PCertResTBS 557#define SN_setct_PCertResTBS "setct-PCertResTBS"#define OBJ_setct_PCertReqData OBJ_set_ctype,38L#define NID_setct_PCertReqData 556#define SN_setct_PCertReqData "setct-PCertReqData"#define OBJ_setct_CredRevResData OBJ_set_ctype,37L#define NID_setct_CredRevResData 555#define SN_setct_CredRevResData "setct-CredRevResData"#define OBJ_setct_CredRevReqTBSX OBJ_set_ctype,36L#define NID_setct_CredRevReqTBSX 554#define SN_setct_CredRevReqTBSX "setct-CredRevReqTBSX"#define OBJ_setct_CredRevReqTBS OBJ_set_ctype,35L#define NID_setct_CredRevReqTBS 553#define SN_setct_CredRevReqTBS "setct-CredRevReqTBS"#define OBJ_setct_CredResData OBJ_set_ctype,34L#define NID_setct_CredResData 552#define SN_setct_CredResData "setct-CredResData"#define OBJ_setct_CredReqTBSX OBJ_set_ctype,33L#define NID_setct_CredReqTBSX 551#define SN_setct_CredReqTBSX "setct-CredReqTBSX"#define OBJ_setct_CredReqTBS OBJ_set_ctype,32L#define NID_setct_CredReqTBS 550#define SN_setct_CredReqTBS "setct-CredReqTBS"#define OBJ_setct_CapRevResData OBJ_set_ctype,31L#define NID_setct_CapRevResData 549#define SN_setct_CapRevResData "setct-CapRevResData"#define OBJ_setct_CapRevReqTBSX OBJ_set_ctype,30L#define NID_setct_CapRevReqTBSX 548#define SN_setct_CapRevReqTBSX "setct-CapRevReqTBSX"#define OBJ_setct_CapRevReqTBS OBJ_set_ctype,29L#define NID_setct_CapRevReqTBS 547#define SN_setct_CapRevReqTBS "setct-CapRevReqTBS"#define OBJ_setct_CapResData OBJ_set_ctype,28L#define NID_setct_CapResData 546#define SN_setct_CapResData "setct-CapResData"#define OBJ_setct_CapReqTBSX OBJ_set_ctype,27L#define NID_setct_CapReqTBSX 545#define SN_setct_CapReqTBSX "setct-CapReqTBSX"#define OBJ_setct_CapReqTBS OBJ_set_ctype,26L#define NID_setct_CapReqTBS 544#define SN_setct_CapReqTBS "setct-CapReqTBS"#define OBJ_setct_AuthRevResTBS OBJ_set_ctype,25L#define NID_setct_AuthRevResTBS 543#define SN_setct_AuthRevResTBS "setct-AuthRevResTBS"#define OBJ_setct_AuthRevResData OBJ_set_ctype,24L#define NID_setct_AuthRevResData 542#define SN_setct_AuthRevResData "setct-AuthRevResData"#define OBJ_setct_AuthRevReqTBS OBJ_set_ctype,23L#define NID_setct_AuthRevReqTBS 541#define SN_setct_AuthRevReqTBS "setct-AuthRevReqTBS"#define OBJ_setct_AcqCardCodeMsg OBJ_set_ctype,22L#define NID_setct_AcqCardCodeMsg 540#define SN_setct_AcqCardCodeMsg "setct-AcqCardCodeMsg"#define OBJ_setct_CapTokenTBS OBJ_set_ctype,21L#define NID_setct_CapTokenTBS 539#define SN_setct_CapTokenTBS "setct-CapTokenTBS"#define OBJ_setct_CapTokenData OBJ_set_ctype,20L#define NID_setct_CapTokenData 538#define SN_setct_CapTokenData "setct-CapTokenData"#define OBJ_setct_AuthTokenTBS OBJ_set_ctype,19L#define NID_setct_AuthTokenTBS 537#define SN_setct_AuthTokenTBS "setct-AuthTokenTBS"#define OBJ_setct_AuthResTBSX OBJ_set_ctype,18L#define NID_setct_AuthResTBSX 536#define SN_setct_AuthResTBSX "setct-AuthResTBSX"#define OBJ_setct_AuthResTBS OBJ_set_ctype,17L#define NID_setct_AuthResTBS 535#define SN_setct_AuthResTBS "setct-AuthResTBS"#define OBJ_setct_AuthReqTBS OBJ_set_ctype,16L#define NID_setct_AuthReqTBS 534#define SN_setct_AuthReqTBS "setct-AuthReqTBS"#define OBJ_setct_PResData OBJ_set_ctype,14L#define NID_setct_PResData 533#define SN_setct_PResData "setct-PResData"#define OBJ_setct_PI_TBS OBJ_set_ctype,13L#define NID_setct_PI_TBS 532#define SN_setct_PI_TBS "setct-PI-TBS"#define OBJ_setct_PInitResData OBJ_set_ctype,12L#define NID_setct_PInitResData 531#define SN_setct_PInitResData "setct-PInitResData"#define OBJ_setct_CapTokenSeq OBJ_set_ctype,11L#define NID_setct_CapTokenSeq 530#define SN_setct_CapTokenSeq "setct-CapTokenSeq"#define OBJ_setct_AuthRevResBaggage OBJ_set_ctype,10L#define NID_setct_AuthRevResBaggage 529#define SN_setct_AuthRevResBaggage "setct-AuthRevResBaggage"#define OBJ_setct_AuthRevReqBaggage OBJ_set_ctype,9L#define NID_setct_AuthRevReqBaggage 528#define SN_setct_AuthRevReqBaggage "setct-AuthRevReqBaggage"#define OBJ_setct_AuthResBaggage OBJ_set_ctype,8L#define NID_setct_AuthResBaggage 527#define SN_setct_AuthResBaggage "setct-AuthResBaggage"#define OBJ_setct_HODInput OBJ_set_ctype,7L#define NID_setct_HODInput 526#define SN_setct_HODInput "setct-HODInput"#define OBJ_setct_PIDataUnsigned OBJ_set_ctype,6L#define NID_setct_PIDataUnsigned 525#define SN_setct_PIDataUnsigned "setct-PIDataUnsigned"#define OBJ_setct_PIData OBJ_set_ctype,5L#define NID_setct_PIData 524#define SN_setct_PIData "setct-PIData"#define OBJ_setct_PI OBJ_set_ctype,4L#define NID_setct_PI 523#define SN_setct_PI "setct-PI"#define OBJ_setct_OIData OBJ_set_ctype,3L#define NID_setct_OIData 522#define SN_setct_OIData "setct-OIData"#define OBJ_setct_PANOnly OBJ_set_ctype,2L#define NID_setct_PANOnly 521#define SN_setct_PANOnly "setct-PANOnly"#define OBJ_setct_PANToken OBJ_set_ctype,1L#define NID_setct_PANToken 520#define SN_setct_PANToken "setct-PANToken"#define OBJ_setct_PANData OBJ_set_ctype,0L#define NID_setct_PANData 519#define SN_setct_PANData "setct-PANData"#define OBJ_set_brand OBJ_id_set,8L#define NID_set_brand 518#define SN_set_brand "set-brand"#define OBJ_set_certExt OBJ_id_set,7L#define NID_set_certExt 517#define LN_set_certExt "certificate extensions"#define SN_set_certExt "set-certExt"#define OBJ_set_policy OBJ_id_set,5L#define NID_set_policy 516#define SN_set_policy "set-policy"#define OBJ_set_attr OBJ_id_set,3L#define NID_set_attr 515#define SN_set_attr "set-attr"#define OBJ_set_msgExt OBJ_id_set,1L#define NID_set_msgExt 514#define LN_set_msgExt "message extensions"#define SN_set_msgExt "set-msgExt"#define OBJ_set_ctype OBJ_id_set,0L#define NID_set_ctype 513#define LN_set_ctype "content types"#define SN_set_ctype "set-ctype"#define OBJ_id_set OBJ_international_organizations,42L#define NID_id_set 512#define LN_id_set "Secure Electronic Transactions"#define SN_id_set "id-set"#define OBJ_documentPublisher OBJ_pilotAttributeType,56L#define NID_documentPublisher 502#define LN_documentPublisher "documentPublisher"#define OBJ_audio OBJ_pilotAttributeType,55L#define NID_audio 501#define SN_audio "audio"#define OBJ_dITRedirect OBJ_pilotAttributeType,54L#define NID_dITRedirect 500#define LN_dITRedirect "dITRedirect"#define OBJ_personalSignature OBJ_pilotAttributeType,53L#define NID_personalSignature 499#define LN_personalSignature "personalSignature"#define OBJ_subtreeMaximumQuality OBJ_pilotAttributeType,52L#define NID_subtreeMaximumQuality 498#define LN_subtreeMaximumQuality "subtreeMaximumQuality"#define OBJ_subtreeMinimumQuality OBJ_pilotAttributeType,51L#define NID_subtreeMinimumQuality 497#define LN_subtreeMinimumQuality "subtreeMinimumQuality"#define OBJ_singleLevelQuality OBJ_pilotAttributeType,50L#define NID_singleLevelQuality 496#define LN_singleLevelQuality "singleLevelQuality"#define OBJ_dSAQuality OBJ_pilotAttributeType,49L#define NID_dSAQuality 495#define LN_dSAQuality "dSAQuality"#define OBJ_buildingName OBJ_pilotAttributeType,48L#define NID_buildingName 494#define LN_buildingName "buildingName"#define OBJ_mailPreferenceOption OBJ_pilotAttributeType,47L#define NID_mailPreferenceOption 493#define LN_mailPreferenceOption "mailPreferenceOption"#define OBJ_janetMailbox OBJ_pilotAttributeType,46L#define NID_janetMailbox 492#define LN_janetMailbox "janetMailbox"#define OBJ_organizationalStatus OBJ_pilotAttributeType,45L#define NID_organizationalStatus 491#define LN_organizationalStatus "organizationalStatus"#define OBJ_uniqueIdentifier OBJ_pilotAttributeType,44L#define NID_uniqueIdentifier 102#define LN_uniqueIdentifier "uniqueIdentifier"#define SN_uniqueIdentifier "uid"#define OBJ_friendlyCountryName OBJ_pilotAttributeType,43L#define NID_friendlyCountryName 490#define LN_friendlyCountryName "friendlyCountryName"#define OBJ_pagerTelephoneNumber OBJ_pilotAttributeType,42L#define NID_pagerTelephoneNumber 489#define LN_pagerTelephoneNumber "pagerTelephoneNumber"#define OBJ_mobileTelephoneNumber OBJ_pilotAttributeType,41L#define NID_mobileTelephoneNumber 488#define LN_mobileTelephoneNumber "mobileTelephoneNumber"#define OBJ_personalTitle OBJ_pilotAttributeType,40L#define NID_personalTitle 487#define LN_personalTitle "personalTitle"#define OBJ_homePostalAddress OBJ_pilotAttributeType,39L#define NID_homePostalAddress 486#define LN_homePostalAddress "homePostalAddress"#define OBJ_associatedName OBJ_pilotAttributeType,38L#define NID_associatedName 485#define LN_associatedName "associatedName"#define OBJ_associatedDomain OBJ_pilotAttributeType,37L#define NID_associatedDomain 484#define LN_associatedDomain "associatedDomain"#define OBJ_cNAMERecord OBJ_pilotAttributeType,31L#define NID_cNAMERecord 483#define LN_cNAMERecord "cNAMERecord"#define OBJ_sOARecord OBJ_pilotAttributeType,30L#define NID_sOARecord 482#define LN_sOARecord "sOARecord"#define OBJ_nSRecord OBJ_pilotAttributeType,29L#define NID_nSRecord 481#define LN_nSRecord "nSRecord"#define OBJ_mXRecord OBJ_pilotAttributeType,28L#define NID_mXRecord 480#define LN_mXRecord "mXRecord"#define OBJ_pilotAttributeType27 OBJ_pilotAttributeType,27L#define NID_pilotAttributeType27 479#define LN_pilotAttributeType27 "pilotAttributeType27"#define OBJ_aRecord OBJ_pilotAttributeType,26L#define NID_aRecord 478#define LN_aRecord "aRecord"#define OBJ_domainComponent OBJ_pilotAttributeType,25L#define NID_domainComponent 391#define LN_domainComponent "domainComponent"#define SN_domainComponent "DC"#define OBJ_lastModifiedBy OBJ_pilotAttributeType,24L#define NID_lastModifiedBy 477#define LN_lastModifiedBy "lastModifiedBy"#define OBJ_lastModifiedTime OBJ_pilotAttributeType,23L#define NID_lastModifiedTime 476#define LN_lastModifiedTime "lastModifiedTime"#define OBJ_otherMailbox OBJ_pilotAttributeType,22L#define NID_otherMailbox 475#define LN_otherMailbox "otherMailbox"#define OBJ_secretary OBJ_pilotAttributeType,21L#define NID_secretary 474#define SN_secretary "secretary"#define OBJ_homeTelephoneNumber OBJ_pilotAttributeType,20L#define NID_homeTelephoneNumber 473#define LN_homeTelephoneNumber "homeTelephoneNumber"#define OBJ_documentLocation OBJ_pilotAttributeType,15L#define NID_documentLocation 472#define LN_documentLocation "documentLocation"#define OBJ_documentAuthor OBJ_pilotAttributeType,14L#define NID_documentAuthor 471#define LN_documentAuthor "documentAuthor"#define OBJ_documentVersion OBJ_pilotAttributeType,13L#define NID_documentVersion 470#define LN_documentVersion "documentVersion"#define OBJ_documentTitle OBJ_pilotAttributeType,12L#define NID_documentTitle 469#define LN_documentTitle "documentTitle"#define OBJ_documentIdentifier OBJ_pilotAttributeType,11L#define NID_documentIdentifier 468#define LN_documentIdentifier "documentIdentifier"#define OBJ_manager OBJ_pilotAttributeType,10L#define NID_manager 467#define SN_manager "manager"#define OBJ_host OBJ_pilotAttributeType,9L#define NID_host 466#define SN_host "host"#define OBJ_userClass OBJ_pilotAttributeType,8L#define NID_userClass 465#define LN_userClass "userClass"#define OBJ_photo OBJ_pilotAttributeType,7L#define NID_photo 464#define SN_photo "photo"#define OBJ_roomNumber OBJ_pilotAttributeType,6L#define NID_roomNumber 463#define LN_roomNumber "roomNumber"#define OBJ_favouriteDrink OBJ_pilotAttributeType,5L#define NID_favouriteDrink 462#define LN_favouriteDrink "favouriteDrink"#define OBJ_info OBJ_pilotAttributeType,4L#define NID_info 461#define SN_info "info"#define OBJ_rfc822Mailbox OBJ_pilotAttributeType,3L#define NID_rfc822Mailbox 460#define LN_rfc822Mailbox "rfc822Mailbox"#define SN_rfc822Mailbox "mail"#define OBJ_textEncodedORAddress OBJ_pilotAttributeType,2L#define NID_textEncodedORAddress 459#define LN_textEncodedORAddress "textEncodedORAddress"#define OBJ_userId OBJ_pilotAttributeType,1L#define NID_userId 458#define LN_userId "userId"#define SN_userId "UID"#define OBJ_qualityLabelledData OBJ_pilotObjectClass,22L#define NID_qualityLabelledData 457#define LN_qualityLabelledData "qualityLabelledData"#define OBJ_pilotDSA OBJ_pilotObjectClass,21L#define NID_pilotDSA 456#define LN_pilotDSA "pilotDSA"#define OBJ_pilotOrganization OBJ_pilotObjectClass,20L#define NID_pilotOrganization 455#define LN_pilotOrganization "pilotOrganization"#define OBJ_simpleSecurityObject OBJ_pilotObjectClass,19L#define NID_simpleSecurityObject 454#define LN_simpleSecurityObject "simpleSecurityObject"#define OBJ_friendlyCountry OBJ_pilotObjectClass,18L#define NID_friendlyCountry 453#define LN_friendlyCountry "friendlyCountry"#define OBJ_domainRelatedObject OBJ_pilotObjectClass,17L#define NID_domainRelatedObject 452#define LN_domainRelatedObject "domainRelatedObject"#define OBJ_dNSDomain OBJ_pilotObjectClass,15L#define NID_dNSDomain 451#define LN_dNSDomain "dNSDomain"#define OBJ_rFC822localPart OBJ_pilotObjectClass,14L#define NID_rFC822localPart 450#define LN_rFC822localPart "rFC822localPart"#define OBJ_Domain OBJ_pilotObjectClass,13L#define NID_Domain 392#define LN_Domain "Domain"#define SN_Domain "domain"#define OBJ_documentSeries OBJ_pilotObjectClass,9L#define NID_documentSeries 449#define LN_documentSeries "documentSeries"#define OBJ_room OBJ_pilotObjectClass,7L#define NID_room 448#define SN_room "room"#define OBJ_document OBJ_pilotObjectClass,6L#define NID_document 447#define SN_document "document"#define OBJ_account OBJ_pilotObjectClass,5L#define NID_account 446#define SN_account "account"#define OBJ_pilotPerson OBJ_pilotObjectClass,4L#define NID_pilotPerson 445#define LN_pilotPerson "pilotPerson"#define OBJ_pilotObject OBJ_pilotObjectClass,3L#define NID_pilotObject 444#define LN_pilotObject "pilotObject"#define OBJ_caseIgnoreIA5StringSyntax OBJ_pilotAttributeSyntax,5L#define NID_caseIgnoreIA5StringSyntax 443#define LN_caseIgnoreIA5StringSyntax "caseIgnoreIA5StringSyntax"#define OBJ_iA5StringSyntax OBJ_pilotAttributeSyntax,4L#define NID_iA5StringSyntax 442#define LN_iA5StringSyntax "iA5StringSyntax"#define OBJ_pilotGroups OBJ_pilot,10L#define NID_pilotGroups 441#define LN_pilotGroups "pilotGroups"#define OBJ_pilotObjectClass OBJ_pilot,4L#define NID_pilotObjectClass 440#define LN_pilotObjectClass "pilotObjectClass"#define OBJ_pilotAttributeSyntax OBJ_pilot,3L#define NID_pilotAttributeSyntax 439#define LN_pilotAttributeSyntax "pilotAttributeSyntax"#define OBJ_pilotAttributeType OBJ_pilot,1L#define NID_pilotAttributeType 438#define LN_pilotAttributeType "pilotAttributeType"#define OBJ_pilot OBJ_ucl,100L#define NID_pilot 437#define SN_pilot "pilot"#define OBJ_ucl OBJ_pss,19200300L#define NID_ucl 436#define SN_ucl "ucl"#define OBJ_pss OBJ_data,2342L#define NID_pss 435#define SN_pss "pss"#define OBJ_data OBJ_itu_t,9L#define NID_data 434#define SN_data "data"#define OBJ_hold_instruction_reject OBJ_holdInstruction,3L#define NID_hold_instruction_reject 433#define LN_hold_instruction_reject "Hold Instruction Reject"#define SN_hold_instruction_reject "holdInstructionReject"#define OBJ_hold_instruction_call_issuer OBJ_holdInstruction,2L#define NID_hold_instruction_call_issuer 432#define LN_hold_instruction_call_issuer "Hold Instruction Call Issuer"#define SN_hold_instruction_call_issuer "holdInstructionCallIssuer"#define OBJ_hold_instruction_none OBJ_holdInstruction,1L#define NID_hold_instruction_none 431#define LN_hold_instruction_none "Hold Instruction None"#define SN_hold_instruction_none "holdInstructionNone"#define OBJ_holdInstruction OBJ_X9_57,2L#define OBJ_hold_instruction_code OBJ_id_ce,23L#define NID_hold_instruction_code 430#define LN_hold_instruction_code "Hold Instruction Code"#define SN_hold_instruction_code "holdInstructionCode"#define OBJ_RSA_SHA3_512 OBJ_sigAlgs,16L#define NID_RSA_SHA3_512 1119#define LN_RSA_SHA3_512 "RSA-SHA3-512"#define SN_RSA_SHA3_512 "id-rsassa-pkcs1-v1_5-with-sha3-512"#define OBJ_RSA_SHA3_384 OBJ_sigAlgs,15L#define NID_RSA_SHA3_384 1118#define LN_RSA_SHA3_384 "RSA-SHA3-384"#define SN_RSA_SHA3_384 "id-rsassa-pkcs1-v1_5-with-sha3-384"#define OBJ_RSA_SHA3_256 OBJ_sigAlgs,14L#define NID_RSA_SHA3_256 1117#define LN_RSA_SHA3_256 "RSA-SHA3-256"#define SN_RSA_SHA3_256 "id-rsassa-pkcs1-v1_5-with-sha3-256"#define OBJ_RSA_SHA3_224 OBJ_sigAlgs,13L#define NID_RSA_SHA3_224 1116#define LN_RSA_SHA3_224 "RSA-SHA3-224"#define SN_RSA_SHA3_224 "id-rsassa-pkcs1-v1_5-with-sha3-224"#define OBJ_ecdsa_with_SHA3_512 OBJ_sigAlgs,12L#define NID_ecdsa_with_SHA3_512 1115#define LN_ecdsa_with_SHA3_512 "ecdsa_with_SHA3-512"#define SN_ecdsa_with_SHA3_512 "id-ecdsa-with-sha3-512"#define OBJ_ecdsa_with_SHA3_384 OBJ_sigAlgs,11L#define NID_ecdsa_with_SHA3_384 1114#define LN_ecdsa_with_SHA3_384 "ecdsa_with_SHA3-384"#define SN_ecdsa_with_SHA3_384 "id-ecdsa-with-sha3-384"#define OBJ_ecdsa_with_SHA3_256 OBJ_sigAlgs,10L#define NID_ecdsa_with_SHA3_256 1113#define LN_ecdsa_with_SHA3_256 "ecdsa_with_SHA3-256"#define SN_ecdsa_with_SHA3_256 "id-ecdsa-with-sha3-256"#define OBJ_ecdsa_with_SHA3_224 OBJ_sigAlgs,9L#define NID_ecdsa_with_SHA3_224 1112#define LN_ecdsa_with_SHA3_224 "ecdsa_with_SHA3-224"#define SN_ecdsa_with_SHA3_224 "id-ecdsa-with-sha3-224"#define OBJ_dsa_with_SHA3_512 OBJ_sigAlgs,8L#define NID_dsa_with_SHA3_512 1111#define LN_dsa_with_SHA3_512 "dsa_with_SHA3-512"#define SN_dsa_with_SHA3_512 "id-dsa-with-sha3-512"#define OBJ_dsa_with_SHA3_384 OBJ_sigAlgs,7L#define NID_dsa_with_SHA3_384 1110#define LN_dsa_with_SHA3_384 "dsa_with_SHA3-384"#define SN_dsa_with_SHA3_384 "id-dsa-with-sha3-384"#define OBJ_dsa_with_SHA3_256 OBJ_sigAlgs,6L#define NID_dsa_with_SHA3_256 1109#define LN_dsa_with_SHA3_256 "dsa_with_SHA3-256"#define SN_dsa_with_SHA3_256 "id-dsa-with-sha3-256"#define OBJ_dsa_with_SHA3_224 OBJ_sigAlgs,5L#define NID_dsa_with_SHA3_224 1108#define LN_dsa_with_SHA3_224 "dsa_with_SHA3-224"#define SN_dsa_with_SHA3_224 "id-dsa-with-sha3-224"#define OBJ_dsa_with_SHA512 OBJ_sigAlgs,4L#define NID_dsa_with_SHA512 1107#define LN_dsa_with_SHA512 "dsa_with_SHA512"#define SN_dsa_with_SHA512 "id-dsa-with-sha512"#define OBJ_dsa_with_SHA384 OBJ_sigAlgs,3L#define NID_dsa_with_SHA384 1106#define LN_dsa_with_SHA384 "dsa_with_SHA384"#define SN_dsa_with_SHA384 "id-dsa-with-sha384"#define OBJ_sigAlgs OBJ_nistAlgorithms,3L#define OBJ_dsa_with_SHA256 OBJ_dsa_with_sha2,2L#define NID_dsa_with_SHA256 803#define SN_dsa_with_SHA256 "dsa_with_SHA256"#define OBJ_dsa_with_SHA224 OBJ_dsa_with_sha2,1L#define NID_dsa_with_SHA224 802#define SN_dsa_with_SHA224 "dsa_with_SHA224"#define OBJ_dsa_with_sha2 OBJ_nistAlgorithms,3L#define OBJ_hmac_sha3_512 OBJ_nist_hashalgs,16L#define NID_hmac_sha3_512 1105#define LN_hmac_sha3_512 "hmac-sha3-512"#define SN_hmac_sha3_512 "id-hmacWithSHA3-512"#define OBJ_hmac_sha3_384 OBJ_nist_hashalgs,15L#define NID_hmac_sha3_384 1104#define LN_hmac_sha3_384 "hmac-sha3-384"#define SN_hmac_sha3_384 "id-hmacWithSHA3-384"#define OBJ_hmac_sha3_256 OBJ_nist_hashalgs,14L#define NID_hmac_sha3_256 1103#define LN_hmac_sha3_256 "hmac-sha3-256"#define SN_hmac_sha3_256 "id-hmacWithSHA3-256"#define OBJ_hmac_sha3_224 OBJ_nist_hashalgs,13L#define NID_hmac_sha3_224 1102#define LN_hmac_sha3_224 "hmac-sha3-224"#define SN_hmac_sha3_224 "id-hmacWithSHA3-224"#define OBJ_shake256 OBJ_nist_hashalgs,12L#define NID_shake256 1101#define LN_shake256 "shake256"#define SN_shake256 "SHAKE256"#define OBJ_shake128 OBJ_nist_hashalgs,11L#define NID_shake128 1100#define LN_shake128 "shake128"#define SN_shake128 "SHAKE128"#define OBJ_sha3_512 OBJ_nist_hashalgs,10L#define NID_sha3_512 1099#define LN_sha3_512 "sha3-512"#define SN_sha3_512 "SHA3-512"#define OBJ_sha3_384 OBJ_nist_hashalgs,9L#define NID_sha3_384 1098#define LN_sha3_384 "sha3-384"#define SN_sha3_384 "SHA3-384"#define OBJ_sha3_256 OBJ_nist_hashalgs,8L#define NID_sha3_256 1097#define LN_sha3_256 "sha3-256"#define SN_sha3_256 "SHA3-256"#define OBJ_sha3_224 OBJ_nist_hashalgs,7L#define NID_sha3_224 1096#define LN_sha3_224 "sha3-224"#define SN_sha3_224 "SHA3-224"#define OBJ_sha512_256 OBJ_nist_hashalgs,6L#define NID_sha512_256 1095#define LN_sha512_256 "sha512-256"#define SN_sha512_256 "SHA512-256"#define OBJ_sha512_224 OBJ_nist_hashalgs,5L#define NID_sha512_224 1094#define LN_sha512_224 "sha512-224"#define SN_sha512_224 "SHA512-224"#define OBJ_sha224 OBJ_nist_hashalgs,4L#define NID_sha224 675#define LN_sha224 "sha224"#define SN_sha224 "SHA224"#define OBJ_sha512 OBJ_nist_hashalgs,3L#define NID_sha512 674#define LN_sha512 "sha512"#define SN_sha512 "SHA512"#define OBJ_sha384 OBJ_nist_hashalgs,2L#define NID_sha384 673#define LN_sha384 "sha384"#define SN_sha384 "SHA384"#define OBJ_sha256 OBJ_nist_hashalgs,1L#define NID_sha256 672#define LN_sha256 "sha256"#define SN_sha256 "SHA256"#define OBJ_nist_hashalgs OBJ_nistAlgorithms,2L#define NID_des_ede3_cfb8 659#define LN_des_ede3_cfb8 "des-ede3-cfb8"#define SN_des_ede3_cfb8 "DES-EDE3-CFB8"#define NID_des_ede3_cfb1 658#define LN_des_ede3_cfb1 "des-ede3-cfb1"#define SN_des_ede3_cfb1 "DES-EDE3-CFB1"#define NID_des_cfb8 657#define LN_des_cfb8 "des-cfb8"#define SN_des_cfb8 "DES-CFB8"#define NID_des_cfb1 656#define LN_des_cfb1 "des-cfb1"#define SN_des_cfb1 "DES-CFB1"#define NID_aes_256_ocb 960#define LN_aes_256_ocb "aes-256-ocb"#define SN_aes_256_ocb "AES-256-OCB"#define NID_aes_192_ocb 959#define LN_aes_192_ocb "aes-192-ocb"#define SN_aes_192_ocb "AES-192-OCB"#define NID_aes_128_ocb 958#define LN_aes_128_ocb "aes-128-ocb"#define SN_aes_128_ocb "AES-128-OCB"#define NID_aes_256_ctr 906#define LN_aes_256_ctr "aes-256-ctr"#define SN_aes_256_ctr "AES-256-CTR"#define NID_aes_192_ctr 905#define LN_aes_192_ctr "aes-192-ctr"#define SN_aes_192_ctr "AES-192-CTR"#define NID_aes_128_ctr 904#define LN_aes_128_ctr "aes-128-ctr"#define SN_aes_128_ctr "AES-128-CTR"#define NID_aes_256_cfb8 655#define LN_aes_256_cfb8 "aes-256-cfb8"#define SN_aes_256_cfb8 "AES-256-CFB8"#define NID_aes_192_cfb8 654#define LN_aes_192_cfb8 "aes-192-cfb8"#define SN_aes_192_cfb8 "AES-192-CFB8"#define NID_aes_128_cfb8 653#define LN_aes_128_cfb8 "aes-128-cfb8"#define SN_aes_128_cfb8 "AES-128-CFB8"#define NID_aes_256_cfb1 652#define LN_aes_256_cfb1 "aes-256-cfb1"#define SN_aes_256_cfb1 "AES-256-CFB1"#define NID_aes_192_cfb1 651#define LN_aes_192_cfb1 "aes-192-cfb1"#define SN_aes_192_cfb1 "AES-192-CFB1"#define NID_aes_128_cfb1 650#define LN_aes_128_cfb1 "aes-128-cfb1"#define SN_aes_128_cfb1 "AES-128-CFB1"#define OBJ_aes_256_xts OBJ_ieee_siswg,0L,1L,2L#define NID_aes_256_xts 914#define LN_aes_256_xts "aes-256-xts"#define SN_aes_256_xts "AES-256-XTS"#define OBJ_aes_128_xts OBJ_ieee_siswg,0L,1L,1L#define NID_aes_128_xts 913#define LN_aes_128_xts "aes-128-xts"#define SN_aes_128_xts "AES-128-XTS"#define OBJ_id_aes256_wrap_pad OBJ_aes,48L#define NID_id_aes256_wrap_pad 903#define SN_id_aes256_wrap_pad "id-aes256-wrap-pad"#define OBJ_aes_256_ccm OBJ_aes,47L#define NID_aes_256_ccm 902#define LN_aes_256_ccm "aes-256-ccm"#define SN_aes_256_ccm "id-aes256-CCM"#define OBJ_aes_256_gcm OBJ_aes,46L#define NID_aes_256_gcm 901#define LN_aes_256_gcm "aes-256-gcm"#define SN_aes_256_gcm "id-aes256-GCM"#define OBJ_id_aes256_wrap OBJ_aes,45L#define NID_id_aes256_wrap 790#define SN_id_aes256_wrap "id-aes256-wrap"#define OBJ_aes_256_cfb128 OBJ_aes,44L#define NID_aes_256_cfb128 429#define LN_aes_256_cfb128 "aes-256-cfb"#define SN_aes_256_cfb128 "AES-256-CFB"#define OBJ_aes_256_ofb128 OBJ_aes,43L#define NID_aes_256_ofb128 428#define LN_aes_256_ofb128 "aes-256-ofb"#define SN_aes_256_ofb128 "AES-256-OFB"#define OBJ_aes_256_cbc OBJ_aes,42L#define NID_aes_256_cbc 427#define LN_aes_256_cbc "aes-256-cbc"#define SN_aes_256_cbc "AES-256-CBC"#define OBJ_aes_256_ecb OBJ_aes,41L#define NID_aes_256_ecb 426#define LN_aes_256_ecb "aes-256-ecb"#define SN_aes_256_ecb "AES-256-ECB"#define OBJ_id_aes192_wrap_pad OBJ_aes,28L#define NID_id_aes192_wrap_pad 900#define SN_id_aes192_wrap_pad "id-aes192-wrap-pad"#define OBJ_aes_192_ccm OBJ_aes,27L#define NID_aes_192_ccm 899#define LN_aes_192_ccm "aes-192-ccm"#define SN_aes_192_ccm "id-aes192-CCM"#define OBJ_aes_192_gcm OBJ_aes,26L#define NID_aes_192_gcm 898#define LN_aes_192_gcm "aes-192-gcm"#define SN_aes_192_gcm "id-aes192-GCM"#define OBJ_id_aes192_wrap OBJ_aes,25L#define NID_id_aes192_wrap 789#define SN_id_aes192_wrap "id-aes192-wrap"#define OBJ_aes_192_cfb128 OBJ_aes,24L#define NID_aes_192_cfb128 425#define LN_aes_192_cfb128 "aes-192-cfb"#define SN_aes_192_cfb128 "AES-192-CFB"#define OBJ_aes_192_ofb128 OBJ_aes,23L#define NID_aes_192_ofb128 424#define LN_aes_192_ofb128 "aes-192-ofb"#define SN_aes_192_ofb128 "AES-192-OFB"#define OBJ_aes_192_cbc OBJ_aes,22L#define NID_aes_192_cbc 423#define LN_aes_192_cbc "aes-192-cbc"#define SN_aes_192_cbc "AES-192-CBC"#define OBJ_aes_192_ecb OBJ_aes,21L#define NID_aes_192_ecb 422#define LN_aes_192_ecb "aes-192-ecb"#define SN_aes_192_ecb "AES-192-ECB"#define OBJ_id_aes128_wrap_pad OBJ_aes,8L#define NID_id_aes128_wrap_pad 897#define SN_id_aes128_wrap_pad "id-aes128-wrap-pad"#define OBJ_aes_128_ccm OBJ_aes,7L#define NID_aes_128_ccm 896#define LN_aes_128_ccm "aes-128-ccm"#define SN_aes_128_ccm "id-aes128-CCM"#define OBJ_aes_128_gcm OBJ_aes,6L#define NID_aes_128_gcm 895#define LN_aes_128_gcm "aes-128-gcm"#define SN_aes_128_gcm "id-aes128-GCM"#define OBJ_id_aes128_wrap OBJ_aes,5L#define NID_id_aes128_wrap 788#define SN_id_aes128_wrap "id-aes128-wrap"#define OBJ_aes_128_cfb128 OBJ_aes,4L#define NID_aes_128_cfb128 421#define LN_aes_128_cfb128 "aes-128-cfb"#define SN_aes_128_cfb128 "AES-128-CFB"#define OBJ_aes_128_ofb128 OBJ_aes,3L#define NID_aes_128_ofb128 420#define LN_aes_128_ofb128 "aes-128-ofb"#define SN_aes_128_ofb128 "AES-128-OFB"#define OBJ_aes_128_cbc OBJ_aes,2L#define NID_aes_128_cbc 419#define LN_aes_128_cbc "aes-128-cbc"#define SN_aes_128_cbc "AES-128-CBC"#define OBJ_aes_128_ecb OBJ_aes,1L#define NID_aes_128_ecb 418#define LN_aes_128_ecb "aes-128-ecb"#define SN_aes_128_ecb "AES-128-ECB"#define OBJ_aes OBJ_nistAlgorithms,1L#define OBJ_nistAlgorithms OBJ_csor,4L#define OBJ_csor 2L,16L,840L,1L,101L,3L#define OBJ_zlib_compression OBJ_id_smime_alg,8L#define NID_zlib_compression 125#define LN_zlib_compression "zlib compression"#define SN_zlib_compression "ZLIB"#define OBJ_id_hex_multipart_message OBJ_mime_mhs_headings,2L#define NID_id_hex_multipart_message 508#define LN_id_hex_multipart_message "id-hex-multipart-message"#define SN_id_hex_multipart_message "id-hex-multipart-message"#define OBJ_id_hex_partial_message OBJ_mime_mhs_headings,1L#define NID_id_hex_partial_message 507#define LN_id_hex_partial_message "id-hex-partial-message"#define SN_id_hex_partial_message "id-hex-partial-message"#define OBJ_mime_mhs_bodies OBJ_mime_mhs,2L#define NID_mime_mhs_bodies 506#define LN_mime_mhs_bodies "mime-mhs-bodies"#define SN_mime_mhs_bodies "mime-mhs-bodies"#define OBJ_mime_mhs_headings OBJ_mime_mhs,1L#define NID_mime_mhs_headings 505#define LN_mime_mhs_headings "mime-mhs-headings"#define SN_mime_mhs_headings "mime-mhs-headings"#define OBJ_mime_mhs OBJ_Mail,1L#define NID_mime_mhs 504#define LN_mime_mhs "MIME MHS"#define SN_mime_mhs "mime-mhs"#define OBJ_dcObject OBJ_Enterprises,1466L,344L#define NID_dcObject 390#define LN_dcObject "dcObject"#define SN_dcObject "dcobject"#define OBJ_Enterprises OBJ_Private,1L#define NID_Enterprises 389#define LN_Enterprises "Enterprises"#define SN_Enterprises "enterprises"#define OBJ_Mail OBJ_internet,7L#define NID_Mail 388#define LN_Mail "Mail"#define OBJ_SNMPv2 OBJ_internet,6L#define NID_SNMPv2 387#define LN_SNMPv2 "SNMPv2"#define SN_SNMPv2 "snmpv2"#define OBJ_Security OBJ_internet,5L#define NID_Security 386#define LN_Security "Security"#define SN_Security "security"#define OBJ_Private OBJ_internet,4L#define NID_Private 385#define LN_Private "Private"#define SN_Private "private"#define OBJ_Experimental OBJ_internet,3L#define NID_Experimental 384#define LN_Experimental "Experimental"#define SN_Experimental "experimental"#define OBJ_Management OBJ_internet,2L#define NID_Management 383#define LN_Management "Management"#define SN_Management "mgmt"#define OBJ_Directory OBJ_internet,1L#define NID_Directory 382#define LN_Directory "Directory"#define SN_Directory "directory"#define OBJ_internet OBJ_iana#define OBJ_iana OBJ_dod,1L#define NID_iana 381#define LN_iana "iana"#define SN_iana "IANA"#define OBJ_dod OBJ_org,6L#define NID_dod 380#define LN_dod "dod"#define SN_dod "DOD"#define OBJ_org OBJ_iso,3L#define NID_org 379#define LN_org "org"#define SN_org "ORG"#define OBJ_ns_sgc OBJ_netscape,4L,1L#define NID_ns_sgc 139#define LN_ns_sgc "Netscape Server Gated Crypto"#define SN_ns_sgc "nsSGC"#define OBJ_netscape_cert_sequence OBJ_netscape_data_type,5L#define NID_netscape_cert_sequence 79#define LN_netscape_cert_sequence "Netscape Certificate Sequence"#define SN_netscape_cert_sequence "nsCertSequence"#define OBJ_netscape_comment OBJ_netscape_cert_extension,13L#define NID_netscape_comment 78#define LN_netscape_comment "Netscape Comment"#define SN_netscape_comment "nsComment"#define OBJ_netscape_ssl_server_name OBJ_netscape_cert_extension,12L#define NID_netscape_ssl_server_name 77#define LN_netscape_ssl_server_name "Netscape SSL Server Name"#define SN_netscape_ssl_server_name "nsSslServerName"#define OBJ_netscape_ca_policy_url OBJ_netscape_cert_extension,8L#define NID_netscape_ca_policy_url 76#define LN_netscape_ca_policy_url "Netscape CA Policy Url"#define SN_netscape_ca_policy_url "nsCaPolicyUrl"#define OBJ_netscape_renewal_url OBJ_netscape_cert_extension,7L#define NID_netscape_renewal_url 75#define LN_netscape_renewal_url "Netscape Renewal Url"#define SN_netscape_renewal_url "nsRenewalUrl"#define OBJ_netscape_ca_revocation_url OBJ_netscape_cert_extension,4L#define NID_netscape_ca_revocation_url 74#define LN_netscape_ca_revocation_url "Netscape CA Revocation Url"#define SN_netscape_ca_revocation_url "nsCaRevocationUrl"#define OBJ_netscape_revocation_url OBJ_netscape_cert_extension,3L#define NID_netscape_revocation_url 73#define LN_netscape_revocation_url "Netscape Revocation Url"#define SN_netscape_revocation_url "nsRevocationUrl"#define OBJ_netscape_base_url OBJ_netscape_cert_extension,2L#define NID_netscape_base_url 72#define LN_netscape_base_url "Netscape Base Url"#define SN_netscape_base_url "nsBaseUrl"#define OBJ_netscape_cert_type OBJ_netscape_cert_extension,1L#define NID_netscape_cert_type 71#define LN_netscape_cert_type "Netscape Cert Type"#define SN_netscape_cert_type "nsCertType"#define OBJ_netscape_data_type OBJ_netscape,2L#define NID_netscape_data_type 59#define LN_netscape_data_type "Netscape Data Type"#define SN_netscape_data_type "nsDataType"#define OBJ_netscape_cert_extension OBJ_netscape,1L#define NID_netscape_cert_extension 58#define LN_netscape_cert_extension "Netscape Certificate Extension"#define SN_netscape_cert_extension "nsCertExt"#define OBJ_netscape 2L,16L,840L,1L,113730L#define NID_netscape 57#define LN_netscape "Netscape Communications Corp."#define SN_netscape "Netscape"#define OBJ_anyExtendedKeyUsage OBJ_ext_key_usage,0L#define NID_anyExtendedKeyUsage 910#define LN_anyExtendedKeyUsage "Any Extended Key Usage"#define SN_anyExtendedKeyUsage "anyExtendedKeyUsage"#define OBJ_no_rev_avail OBJ_id_ce,56L#define NID_no_rev_avail 403#define LN_no_rev_avail "X509v3 No Revocation Available"#define SN_no_rev_avail "noRevAvail"#define OBJ_target_information OBJ_id_ce,55L#define NID_target_information 402#define LN_target_information "X509v3 AC Targeting"#define SN_target_information "targetInformation"#define OBJ_inhibit_any_policy OBJ_id_ce,54L#define NID_inhibit_any_policy 748#define LN_inhibit_any_policy "X509v3 Inhibit Any Policy"#define SN_inhibit_any_policy "inhibitAnyPolicy"#define OBJ_freshest_crl OBJ_id_ce,46L#define NID_freshest_crl 857#define LN_freshest_crl "X509v3 Freshest CRL"#define SN_freshest_crl "freshestCRL"#define OBJ_ext_key_usage OBJ_id_ce,37L#define NID_ext_key_usage 126#define LN_ext_key_usage "X509v3 Extended Key Usage"#define SN_ext_key_usage "extendedKeyUsage"#define OBJ_policy_constraints OBJ_id_ce,36L#define NID_policy_constraints 401#define LN_policy_constraints "X509v3 Policy Constraints"#define SN_policy_constraints "policyConstraints"#define OBJ_authority_key_identifier OBJ_id_ce,35L#define NID_authority_key_identifier 90#define LN_authority_key_identifier "X509v3 Authority Key Identifier"#define SN_authority_key_identifier "authorityKeyIdentifier"#define OBJ_policy_mappings OBJ_id_ce,33L#define NID_policy_mappings 747#define LN_policy_mappings "X509v3 Policy Mappings"#define SN_policy_mappings "policyMappings"#define OBJ_any_policy OBJ_certificate_policies,0L#define NID_any_policy 746#define LN_any_policy "X509v3 Any Policy"#define SN_any_policy "anyPolicy"#define OBJ_certificate_policies OBJ_id_ce,32L#define NID_certificate_policies 89#define LN_certificate_policies "X509v3 Certificate Policies"#define SN_certificate_policies "certificatePolicies"#define OBJ_crl_distribution_points OBJ_id_ce,31L#define NID_crl_distribution_points 103#define LN_crl_distribution_points "X509v3 CRL Distribution Points"#define SN_crl_distribution_points "crlDistributionPoints"#define OBJ_name_constraints OBJ_id_ce,30L#define NID_name_constraints 666#define LN_name_constraints "X509v3 Name Constraints"#define SN_name_constraints "nameConstraints"#define OBJ_certificate_issuer OBJ_id_ce,29L#define NID_certificate_issuer 771#define LN_certificate_issuer "X509v3 Certificate Issuer"#define SN_certificate_issuer "certificateIssuer"#define OBJ_issuing_distribution_point OBJ_id_ce,28L#define NID_issuing_distribution_point 770#define LN_issuing_distribution_point "X509v3 Issuing Distribution Point"#define SN_issuing_distribution_point "issuingDistributionPoint"#define OBJ_delta_crl OBJ_id_ce,27L#define NID_delta_crl 140#define LN_delta_crl "X509v3 Delta CRL Indicator"#define SN_delta_crl "deltaCRL"#define OBJ_invalidity_date OBJ_id_ce,24L#define NID_invalidity_date 142#define LN_invalidity_date "Invalidity Date"#define SN_invalidity_date "invalidityDate"#define OBJ_crl_reason OBJ_id_ce,21L#define NID_crl_reason 141#define LN_crl_reason "X509v3 CRL Reason Code"#define SN_crl_reason "CRLReason"#define OBJ_crl_number OBJ_id_ce,20L#define NID_crl_number 88#define LN_crl_number "X509v3 CRL Number"#define SN_crl_number "crlNumber"#define OBJ_basic_constraints OBJ_id_ce,19L#define NID_basic_constraints 87#define LN_basic_constraints "X509v3 Basic Constraints"#define SN_basic_constraints "basicConstraints"#define OBJ_issuer_alt_name OBJ_id_ce,18L#define NID_issuer_alt_name 86#define LN_issuer_alt_name "X509v3 Issuer Alternative Name"#define SN_issuer_alt_name "issuerAltName"#define OBJ_subject_alt_name OBJ_id_ce,17L#define NID_subject_alt_name 85#define LN_subject_alt_name "X509v3 Subject Alternative Name"#define SN_subject_alt_name "subjectAltName"#define OBJ_private_key_usage_period OBJ_id_ce,16L#define NID_private_key_usage_period 84#define LN_private_key_usage_period "X509v3 Private Key Usage Period"#define SN_private_key_usage_period "privateKeyUsagePeriod"#define OBJ_key_usage OBJ_id_ce,15L#define NID_key_usage 83#define LN_key_usage "X509v3 Key Usage"#define SN_key_usage "keyUsage"#define OBJ_subject_key_identifier OBJ_id_ce,14L#define NID_subject_key_identifier 82#define LN_subject_key_identifier "X509v3 Subject Key Identifier"#define SN_subject_key_identifier "subjectKeyIdentifier"#define OBJ_subject_directory_attributes OBJ_id_ce,9L#define NID_subject_directory_attributes 769#define LN_subject_directory_attributes "X509v3 Subject Directory Attributes"#define SN_subject_directory_attributes "subjectDirectoryAttributes"#define OBJ_id_ce OBJ_X500,29L#define NID_id_ce 81#define SN_id_ce "id-ce"#define OBJ_mdc2 OBJ_X500algorithms,3L,101L#define NID_mdc2 95#define LN_mdc2 "mdc2"#define SN_mdc2 "MDC2"#define OBJ_mdc2WithRSA OBJ_X500algorithms,3L,100L#define NID_mdc2WithRSA 96#define LN_mdc2WithRSA "mdc2WithRSA"#define SN_mdc2WithRSA "RSA-MDC2"#define OBJ_rsa OBJ_X500algorithms,1L,1L#define NID_rsa 19#define LN_rsa "rsa"#define SN_rsa "RSA"#define OBJ_X500algorithms OBJ_X500,8L#define NID_X500algorithms 378#define LN_X500algorithms "directory services - algorithms"#define SN_X500algorithms "X500algorithms"#define OBJ_dnsName OBJ_X509,100L#define NID_dnsName 1092#define LN_dnsName "dnsName"#define OBJ_countryCode3n OBJ_X509,99L#define NID_countryCode3n 1091#define LN_countryCode3n "countryCode3n"#define SN_countryCode3n "n3"#define OBJ_countryCode3c OBJ_X509,98L#define NID_countryCode3c 1090#define LN_countryCode3c "countryCode3c"#define SN_countryCode3c "c3"#define OBJ_organizationIdentifier OBJ_X509,97L#define NID_organizationIdentifier 1089#define LN_organizationIdentifier "organizationIdentifier"#define OBJ_role OBJ_X509,72L#define NID_role 400#define LN_role "role"#define SN_role "role"#define OBJ_pseudonym OBJ_X509,65L#define NID_pseudonym 510#define LN_pseudonym "pseudonym"#define OBJ_dmdName OBJ_X509,54L#define NID_dmdName 892#define SN_dmdName "dmdName"#define OBJ_deltaRevocationList OBJ_X509,53L#define NID_deltaRevocationList 891#define LN_deltaRevocationList "deltaRevocationList"#define OBJ_supportedAlgorithms OBJ_X509,52L#define NID_supportedAlgorithms 890#define LN_supportedAlgorithms "supportedAlgorithms"#define OBJ_houseIdentifier OBJ_X509,51L#define NID_houseIdentifier 889#define LN_houseIdentifier "houseIdentifier"#define OBJ_uniqueMember OBJ_X509,50L#define NID_uniqueMember 888#define LN_uniqueMember "uniqueMember"#define OBJ_distinguishedName OBJ_X509,49L#define NID_distinguishedName 887#define LN_distinguishedName "distinguishedName"#define OBJ_protocolInformation OBJ_X509,48L#define NID_protocolInformation 886#define LN_protocolInformation "protocolInformation"#define OBJ_enhancedSearchGuide OBJ_X509,47L#define NID_enhancedSearchGuide 885#define LN_enhancedSearchGuide "enhancedSearchGuide"#define OBJ_dnQualifier OBJ_X509,46L#define NID_dnQualifier 174#define LN_dnQualifier "dnQualifier"#define SN_dnQualifier "dnQualifier"#define OBJ_x500UniqueIdentifier OBJ_X509,45L#define NID_x500UniqueIdentifier 503#define LN_x500UniqueIdentifier "x500UniqueIdentifier"#define OBJ_generationQualifier OBJ_X509,44L#define NID_generationQualifier 509#define LN_generationQualifier "generationQualifier"#define OBJ_initials OBJ_X509,43L#define NID_initials 101#define LN_initials "initials"#define SN_initials "initials"#define OBJ_givenName OBJ_X509,42L#define NID_givenName 99#define LN_givenName "givenName"#define SN_givenName "GN"#define OBJ_name OBJ_X509,41L#define NID_name 173#define LN_name "name"#define SN_name "name"#define OBJ_crossCertificatePair OBJ_X509,40L#define NID_crossCertificatePair 884#define LN_crossCertificatePair "crossCertificatePair"#define OBJ_certificateRevocationList OBJ_X509,39L#define NID_certificateRevocationList 883#define LN_certificateRevocationList "certificateRevocationList"#define OBJ_authorityRevocationList OBJ_X509,38L#define NID_authorityRevocationList 882#define LN_authorityRevocationList "authorityRevocationList"#define OBJ_cACertificate OBJ_X509,37L#define NID_cACertificate 881#define LN_cACertificate "cACertificate"#define OBJ_userCertificate OBJ_X509,36L#define NID_userCertificate 880#define LN_userCertificate "userCertificate"#define OBJ_userPassword OBJ_X509,35L#define NID_userPassword 879#define LN_userPassword "userPassword"#define OBJ_seeAlso OBJ_X509,34L#define NID_seeAlso 878#define SN_seeAlso "seeAlso"#define OBJ_roleOccupant OBJ_X509,33L#define NID_roleOccupant 877#define LN_roleOccupant "roleOccupant"#define OBJ_owner OBJ_X509,32L#define NID_owner 876#define SN_owner "owner"#define OBJ_member OBJ_X509,31L#define NID_member 875#define SN_member "member"#define OBJ_supportedApplicationContext OBJ_X509,30L#define NID_supportedApplicationContext 874#define LN_supportedApplicationContext "supportedApplicationContext"#define OBJ_presentationAddress OBJ_X509,29L#define NID_presentationAddress 873#define LN_presentationAddress "presentationAddress"#define OBJ_preferredDeliveryMethod OBJ_X509,28L#define NID_preferredDeliveryMethod 872#define LN_preferredDeliveryMethod "preferredDeliveryMethod"#define OBJ_destinationIndicator OBJ_X509,27L#define NID_destinationIndicator 871#define LN_destinationIndicator "destinationIndicator"#define OBJ_registeredAddress OBJ_X509,26L#define NID_registeredAddress 870#define LN_registeredAddress "registeredAddress"#define OBJ_internationaliSDNNumber OBJ_X509,25L#define NID_internationaliSDNNumber 869#define LN_internationaliSDNNumber "internationaliSDNNumber"#define OBJ_x121Address OBJ_X509,24L#define NID_x121Address 868#define LN_x121Address "x121Address"#define OBJ_facsimileTelephoneNumber OBJ_X509,23L#define NID_facsimileTelephoneNumber 867#define LN_facsimileTelephoneNumber "facsimileTelephoneNumber"#define OBJ_teletexTerminalIdentifier OBJ_X509,22L#define NID_teletexTerminalIdentifier 866#define LN_teletexTerminalIdentifier "teletexTerminalIdentifier"#define OBJ_telexNumber OBJ_X509,21L#define NID_telexNumber 865#define LN_telexNumber "telexNumber"#define OBJ_telephoneNumber OBJ_X509,20L#define NID_telephoneNumber 864#define LN_telephoneNumber "telephoneNumber"#define OBJ_physicalDeliveryOfficeName OBJ_X509,19L#define NID_physicalDeliveryOfficeName 863#define LN_physicalDeliveryOfficeName "physicalDeliveryOfficeName"#define OBJ_postOfficeBox OBJ_X509,18L#define NID_postOfficeBox 862#define LN_postOfficeBox "postOfficeBox"#define OBJ_postalCode OBJ_X509,17L#define NID_postalCode 661#define LN_postalCode "postalCode"#define OBJ_postalAddress OBJ_X509,16L#define NID_postalAddress 861#define LN_postalAddress "postalAddress"#define OBJ_businessCategory OBJ_X509,15L#define NID_businessCategory 860#define LN_businessCategory "businessCategory"#define OBJ_searchGuide OBJ_X509,14L#define NID_searchGuide 859#define LN_searchGuide "searchGuide"#define OBJ_description OBJ_X509,13L#define NID_description 107#define LN_description "description"#define OBJ_title OBJ_X509,12L#define NID_title 106#define LN_title "title"#define SN_title "title"#define OBJ_organizationalUnitName OBJ_X509,11L#define NID_organizationalUnitName 18#define LN_organizationalUnitName "organizationalUnitName"#define SN_organizationalUnitName "OU"#define OBJ_organizationName OBJ_X509,10L#define NID_organizationName 17#define LN_organizationName "organizationName"#define SN_organizationName "O"#define OBJ_streetAddress OBJ_X509,9L#define NID_streetAddress 660#define LN_streetAddress "streetAddress"#define SN_streetAddress "street"#define OBJ_stateOrProvinceName OBJ_X509,8L#define NID_stateOrProvinceName 16#define LN_stateOrProvinceName "stateOrProvinceName"#define SN_stateOrProvinceName "ST"#define OBJ_localityName OBJ_X509,7L#define NID_localityName 15#define LN_localityName "localityName"#define SN_localityName "L"#define OBJ_countryName OBJ_X509,6L#define NID_countryName 14#define LN_countryName "countryName"#define SN_countryName "C"#define OBJ_serialNumber OBJ_X509,5L#define NID_serialNumber 105#define LN_serialNumber "serialNumber"#define OBJ_surname OBJ_X509,4L#define NID_surname 100#define LN_surname "surname"#define SN_surname "SN"#define OBJ_commonName OBJ_X509,3L#define NID_commonName 13#define LN_commonName "commonName"#define SN_commonName "CN"#define OBJ_X509 OBJ_X500,4L#define NID_X509 12#define SN_X509 "X509"#define OBJ_X500 2L,5L#define NID_X500 11#define LN_X500 "directory services (X.500)"#define SN_X500 "X500"#define OBJ_sxnet 1L,3L,101L,1L,4L,1L#define NID_sxnet 143#define LN_sxnet "Strong Extranet ID"#define SN_sxnet "SXNetID"#define OBJ_blake2s256 1L,3L,6L,1L,4L,1L,1722L,12L,2L,2L,8L#define NID_blake2s256 1057#define LN_blake2s256 "blake2s256"#define SN_blake2s256 "BLAKE2s256"#define OBJ_blake2b512 1L,3L,6L,1L,4L,1L,1722L,12L,2L,1L,16L#define NID_blake2b512 1056#define LN_blake2b512 "blake2b512"#define SN_blake2b512 "BLAKE2b512"#define OBJ_ripemd160WithRSA 1L,3L,36L,3L,3L,1L,2L#define NID_ripemd160WithRSA 119#define LN_ripemd160WithRSA "ripemd160WithRSA"#define SN_ripemd160WithRSA "RSA-RIPEMD160"#define OBJ_ripemd160 1L,3L,36L,3L,2L,1L#define NID_ripemd160 117#define LN_ripemd160 "ripemd160"#define SN_ripemd160 "RIPEMD160"#define OBJ_sha1WithRSA OBJ_algorithm,29L#define NID_sha1WithRSA 115#define LN_sha1WithRSA "sha1WithRSA"#define SN_sha1WithRSA "RSA-SHA1-2"#define OBJ_dsaWithSHA1_2 OBJ_algorithm,27L#define NID_dsaWithSHA1_2 70#define LN_dsaWithSHA1_2 "dsaWithSHA1-old"#define SN_dsaWithSHA1_2 "DSA-SHA1-old"#define OBJ_sha1 OBJ_algorithm,26L#define NID_sha1 64#define LN_sha1 "sha1"#define SN_sha1 "SHA1"#define OBJ_sha OBJ_algorithm,18L#define NID_sha 41#define LN_sha "sha"#define SN_sha "SHA"#define NID_desx_cbc 80#define LN_desx_cbc "desx-cbc"#define SN_desx_cbc "DESX-CBC"#define NID_des_ede3_ofb64 63#define LN_des_ede3_ofb64 "des-ede3-ofb"#define SN_des_ede3_ofb64 "DES-EDE3-OFB"#define NID_des_ede_ofb64 62#define LN_des_ede_ofb64 "des-ede-ofb"#define SN_des_ede_ofb64 "DES-EDE-OFB"#define NID_des_ede3_cfb64 61#define LN_des_ede3_cfb64 "des-ede3-cfb"#define SN_des_ede3_cfb64 "DES-EDE3-CFB"#define NID_des_ede_cfb64 60#define LN_des_ede_cfb64 "des-ede-cfb"#define SN_des_ede_cfb64 "DES-EDE-CFB"#define NID_des_ede_cbc 43#define LN_des_ede_cbc "des-ede-cbc"#define SN_des_ede_cbc "DES-EDE-CBC"#define NID_des_ede3_ecb 33#define LN_des_ede3_ecb "des-ede3"#define SN_des_ede3_ecb "DES-EDE3"#define OBJ_des_ede_ecb OBJ_algorithm,17L#define NID_des_ede_ecb 32#define LN_des_ede_ecb "des-ede"#define SN_des_ede_ecb "DES-EDE"#define OBJ_shaWithRSAEncryption OBJ_algorithm,15L#define NID_shaWithRSAEncryption 42#define LN_shaWithRSAEncryption "shaWithRSAEncryption"#define SN_shaWithRSAEncryption "RSA-SHA"#define OBJ_dsaWithSHA OBJ_algorithm,13L#define NID_dsaWithSHA 66#define LN_dsaWithSHA "dsaWithSHA"#define SN_dsaWithSHA "DSA-SHA"#define OBJ_dsa_2 OBJ_algorithm,12L#define NID_dsa_2 67#define LN_dsa_2 "dsaEncryption-old"#define SN_dsa_2 "DSA-old"#define OBJ_rsaSignature OBJ_algorithm,11L#define NID_rsaSignature 377#define SN_rsaSignature "rsaSignature"#define OBJ_des_cfb64 OBJ_algorithm,9L#define NID_des_cfb64 30#define LN_des_cfb64 "des-cfb"#define SN_des_cfb64 "DES-CFB"#define OBJ_des_ofb64 OBJ_algorithm,8L#define NID_des_ofb64 45#define LN_des_ofb64 "des-ofb"#define SN_des_ofb64 "DES-OFB"#define OBJ_des_cbc OBJ_algorithm,7L#define NID_des_cbc 31#define LN_des_cbc "des-cbc"#define SN_des_cbc "DES-CBC"#define OBJ_des_ecb OBJ_algorithm,6L#define NID_des_ecb 29#define LN_des_ecb "des-ecb"#define SN_des_ecb "DES-ECB"#define OBJ_md5WithRSA OBJ_algorithm,3L#define NID_md5WithRSA 104#define LN_md5WithRSA "md5WithRSA"#define SN_md5WithRSA "RSA-NP-MD5"#define OBJ_algorithm 1L,3L,14L,3L,2L#define NID_algorithm 376#define LN_algorithm "algorithm"#define SN_algorithm "algorithm"#define OBJ_id_pkix_OCSP_trustRoot OBJ_id_pkix_OCSP,11L#define NID_id_pkix_OCSP_trustRoot 375#define LN_id_pkix_OCSP_trustRoot "Trust Root"#define SN_id_pkix_OCSP_trustRoot "trustRoot"#define OBJ_id_pkix_OCSP_path OBJ_id_pkix_OCSP,10L#define NID_id_pkix_OCSP_path 374#define SN_id_pkix_OCSP_path "path"#define OBJ_id_pkix_OCSP_valid OBJ_id_pkix_OCSP,9L#define NID_id_pkix_OCSP_valid 373#define SN_id_pkix_OCSP_valid "valid"#define OBJ_id_pkix_OCSP_extendedStatus OBJ_id_pkix_OCSP,8L#define NID_id_pkix_OCSP_extendedStatus 372#define LN_id_pkix_OCSP_extendedStatus "Extended OCSP Status"#define SN_id_pkix_OCSP_extendedStatus "extendedStatus"#define OBJ_id_pkix_OCSP_serviceLocator OBJ_id_pkix_OCSP,7L#define NID_id_pkix_OCSP_serviceLocator 371#define LN_id_pkix_OCSP_serviceLocator "OCSP Service Locator"#define SN_id_pkix_OCSP_serviceLocator "serviceLocator"#define OBJ_id_pkix_OCSP_archiveCutoff OBJ_id_pkix_OCSP,6L#define NID_id_pkix_OCSP_archiveCutoff 370#define LN_id_pkix_OCSP_archiveCutoff "OCSP Archive Cutoff"#define SN_id_pkix_OCSP_archiveCutoff "archiveCutoff"#define OBJ_id_pkix_OCSP_noCheck OBJ_id_pkix_OCSP,5L#define NID_id_pkix_OCSP_noCheck 369#define LN_id_pkix_OCSP_noCheck "OCSP No Check"#define SN_id_pkix_OCSP_noCheck "noCheck"#define OBJ_id_pkix_OCSP_acceptableResponses OBJ_id_pkix_OCSP,4L#define NID_id_pkix_OCSP_acceptableResponses 368#define LN_id_pkix_OCSP_acceptableResponses "Acceptable OCSP Responses"#define SN_id_pkix_OCSP_acceptableResponses "acceptableResponses"#define OBJ_id_pkix_OCSP_CrlID OBJ_id_pkix_OCSP,3L#define NID_id_pkix_OCSP_CrlID 367#define LN_id_pkix_OCSP_CrlID "OCSP CRL ID"#define SN_id_pkix_OCSP_CrlID "CrlID"#define OBJ_id_pkix_OCSP_Nonce OBJ_id_pkix_OCSP,2L#define NID_id_pkix_OCSP_Nonce 366#define LN_id_pkix_OCSP_Nonce "OCSP Nonce"#define SN_id_pkix_OCSP_Nonce "Nonce"#define OBJ_id_pkix_OCSP_basic OBJ_id_pkix_OCSP,1L#define NID_id_pkix_OCSP_basic 365#define LN_id_pkix_OCSP_basic "Basic OCSP Response"#define SN_id_pkix_OCSP_basic "basicOCSPResponse"#define OBJ_id_pkix_OCSP OBJ_ad_OCSP#define OBJ_caRepository OBJ_id_ad,5L#define NID_caRepository 785#define LN_caRepository "CA Repository"#define SN_caRepository "caRepository"#define OBJ_ad_dvcs OBJ_id_ad,4L#define NID_ad_dvcs 364#define LN_ad_dvcs "ad dvcs"#define SN_ad_dvcs "AD_DVCS"#define OBJ_ad_timeStamping OBJ_id_ad,3L#define NID_ad_timeStamping 363#define LN_ad_timeStamping "AD Time Stamping"#define SN_ad_timeStamping "ad_timestamping"#define OBJ_ad_ca_issuers OBJ_id_ad,2L#define NID_ad_ca_issuers 179#define LN_ad_ca_issuers "CA Issuers"#define SN_ad_ca_issuers "caIssuers"#define OBJ_ad_OCSP OBJ_id_ad,1L#define NID_ad_OCSP 178#define LN_ad_OCSP "OCSP"#define SN_ad_OCSP "OCSP"#define OBJ_Independent OBJ_id_ppl,2L#define NID_Independent 667#define LN_Independent "Independent"#define SN_Independent "id-ppl-independent"#define OBJ_id_ppl_inheritAll OBJ_id_ppl,1L#define NID_id_ppl_inheritAll 665#define LN_id_ppl_inheritAll "Inherit all"#define SN_id_ppl_inheritAll "id-ppl-inheritAll"#define OBJ_id_ppl_anyLanguage OBJ_id_ppl,0L#define NID_id_ppl_anyLanguage 664#define LN_id_ppl_anyLanguage "Any language"#define SN_id_ppl_anyLanguage "id-ppl-anyLanguage"#define OBJ_id_cct_PKIResponse OBJ_id_cct,3L#define NID_id_cct_PKIResponse 362#define SN_id_cct_PKIResponse "id-cct-PKIResponse"#define OBJ_id_cct_PKIData OBJ_id_cct,2L#define NID_id_cct_PKIData 361#define SN_id_cct_PKIData "id-cct-PKIData"#define OBJ_id_cct_crs OBJ_id_cct,1L#define NID_id_cct_crs 360#define SN_id_cct_crs "id-cct-crs"#define OBJ_id_qcs_pkixQCSyntax_v1 OBJ_id_qcs,1L#define NID_id_qcs_pkixQCSyntax_v1 359#define SN_id_qcs_pkixQCSyntax_v1 "id-qcs-pkixQCSyntax-v1"#define OBJ_id_aca_encAttrs OBJ_id_aca,6L#define NID_id_aca_encAttrs 399#define SN_id_aca_encAttrs "id-aca-encAttrs"#define OBJ_id_aca_role OBJ_id_aca,5L#define NID_id_aca_role 358#define SN_id_aca_role "id-aca-role"#define OBJ_id_aca_group OBJ_id_aca,4L#define NID_id_aca_group 357#define SN_id_aca_group "id-aca-group"#define OBJ_id_aca_chargingIdentity OBJ_id_aca,3L#define NID_id_aca_chargingIdentity 356#define SN_id_aca_chargingIdentity "id-aca-chargingIdentity"#define OBJ_id_aca_accessIdentity OBJ_id_aca,2L#define NID_id_aca_accessIdentity 355#define SN_id_aca_accessIdentity "id-aca-accessIdentity"#define OBJ_id_aca_authenticationInfo OBJ_id_aca,1L#define NID_id_aca_authenticationInfo 354#define SN_id_aca_authenticationInfo "id-aca-authenticationInfo"#define OBJ_id_pda_countryOfResidence OBJ_id_pda,5L#define NID_id_pda_countryOfResidence 353#define SN_id_pda_countryOfResidence "id-pda-countryOfResidence"#define OBJ_id_pda_countryOfCitizenship OBJ_id_pda,4L#define NID_id_pda_countryOfCitizenship 352#define SN_id_pda_countryOfCitizenship "id-pda-countryOfCitizenship"#define OBJ_id_pda_gender OBJ_id_pda,3L#define NID_id_pda_gender 351#define SN_id_pda_gender "id-pda-gender"#define OBJ_id_pda_placeOfBirth OBJ_id_pda,2L#define NID_id_pda_placeOfBirth 349#define SN_id_pda_placeOfBirth "id-pda-placeOfBirth"#define OBJ_id_pda_dateOfBirth OBJ_id_pda,1L#define NID_id_pda_dateOfBirth 348#define SN_id_pda_dateOfBirth "id-pda-dateOfBirth"#define OBJ_id_on_permanentIdentifier OBJ_id_on,3L#define NID_id_on_permanentIdentifier 858#define LN_id_on_permanentIdentifier "Permanent Identifier"#define SN_id_on_permanentIdentifier "id-on-permanentIdentifier"#define OBJ_id_on_personalData OBJ_id_on,1L#define NID_id_on_personalData 347#define SN_id_on_personalData "id-on-personalData"#define OBJ_id_cmc_confirmCertAcceptance OBJ_id_cmc,24L#define NID_id_cmc_confirmCertAcceptance 346#define SN_id_cmc_confirmCertAcceptance "id-cmc-confirmCertAcceptance"#define OBJ_id_cmc_popLinkWitness OBJ_id_cmc,23L#define NID_id_cmc_popLinkWitness 345#define SN_id_cmc_popLinkWitness "id-cmc-popLinkWitness"#define OBJ_id_cmc_popLinkRandom OBJ_id_cmc,22L#define NID_id_cmc_popLinkRandom 344#define SN_id_cmc_popLinkRandom "id-cmc-popLinkRandom"#define OBJ_id_cmc_queryPending OBJ_id_cmc,21L#define NID_id_cmc_queryPending 343#define SN_id_cmc_queryPending "id-cmc-queryPending"#define OBJ_id_cmc_responseInfo OBJ_id_cmc,19L#define NID_id_cmc_responseInfo 342#define SN_id_cmc_responseInfo "id-cmc-responseInfo"#define OBJ_id_cmc_regInfo OBJ_id_cmc,18L#define NID_id_cmc_regInfo 341#define SN_id_cmc_regInfo "id-cmc-regInfo"#define OBJ_id_cmc_revokeRequest OBJ_id_cmc,17L#define NID_id_cmc_revokeRequest 340#define SN_id_cmc_revokeRequest "id-cmc-revokeRequest"#define OBJ_id_cmc_getCRL OBJ_id_cmc,16L#define NID_id_cmc_getCRL 339#define SN_id_cmc_getCRL "id-cmc-getCRL"#define OBJ_id_cmc_getCert OBJ_id_cmc,15L#define NID_id_cmc_getCert 338#define SN_id_cmc_getCert "id-cmc-getCert"#define OBJ_id_cmc_lraPOPWitness OBJ_id_cmc,11L#define NID_id_cmc_lraPOPWitness 337#define SN_id_cmc_lraPOPWitness "id-cmc-lraPOPWitness"#define OBJ_id_cmc_decryptedPOP OBJ_id_cmc,10L#define NID_id_cmc_decryptedPOP 336#define SN_id_cmc_decryptedPOP "id-cmc-decryptedPOP"#define OBJ_id_cmc_encryptedPOP OBJ_id_cmc,9L#define NID_id_cmc_encryptedPOP 335#define SN_id_cmc_encryptedPOP "id-cmc-encryptedPOP"#define OBJ_id_cmc_addExtensions OBJ_id_cmc,8L#define NID_id_cmc_addExtensions 334#define SN_id_cmc_addExtensions "id-cmc-addExtensions"#define OBJ_id_cmc_recipientNonce OBJ_id_cmc,7L#define NID_id_cmc_recipientNonce 333#define SN_id_cmc_recipientNonce "id-cmc-recipientNonce"#define OBJ_id_cmc_senderNonce OBJ_id_cmc,6L#define NID_id_cmc_senderNonce 332#define SN_id_cmc_senderNonce "id-cmc-senderNonce"#define OBJ_id_cmc_transactionId OBJ_id_cmc,5L#define NID_id_cmc_transactionId 331#define SN_id_cmc_transactionId "id-cmc-transactionId"#define OBJ_id_cmc_dataReturn OBJ_id_cmc,4L#define NID_id_cmc_dataReturn 330#define SN_id_cmc_dataReturn "id-cmc-dataReturn"#define OBJ_id_cmc_identityProof OBJ_id_cmc,3L#define NID_id_cmc_identityProof 329#define SN_id_cmc_identityProof "id-cmc-identityProof"#define OBJ_id_cmc_identification OBJ_id_cmc,2L#define NID_id_cmc_identification 328#define SN_id_cmc_identification "id-cmc-identification"#define OBJ_id_cmc_statusInfo OBJ_id_cmc,1L#define NID_id_cmc_statusInfo 327#define SN_id_cmc_statusInfo "id-cmc-statusInfo"#define OBJ_id_alg_dh_pop OBJ_id_alg,4L#define NID_id_alg_dh_pop 326#define SN_id_alg_dh_pop "id-alg-dh-pop"#define OBJ_id_alg_dh_sig_hmac_sha1 OBJ_id_alg,3L#define NID_id_alg_dh_sig_hmac_sha1 325#define SN_id_alg_dh_sig_hmac_sha1 "id-alg-dh-sig-hmac-sha1"#define OBJ_id_alg_noSignature OBJ_id_alg,2L#define NID_id_alg_noSignature 324#define SN_id_alg_noSignature "id-alg-noSignature"#define OBJ_id_alg_des40 OBJ_id_alg,1L#define NID_id_alg_des40 323#define SN_id_alg_des40 "id-alg-des40"#define OBJ_id_regInfo_certReq OBJ_id_regInfo,2L#define NID_id_regInfo_certReq 322#define SN_id_regInfo_certReq "id-regInfo-certReq"#define OBJ_id_regInfo_utf8Pairs OBJ_id_regInfo,1L#define NID_id_regInfo_utf8Pairs 321#define SN_id_regInfo_utf8Pairs "id-regInfo-utf8Pairs"#define OBJ_id_regCtrl_protocolEncrKey OBJ_id_regCtrl,6L#define NID_id_regCtrl_protocolEncrKey 320#define SN_id_regCtrl_protocolEncrKey "id-regCtrl-protocolEncrKey"#define OBJ_id_regCtrl_oldCertID OBJ_id_regCtrl,5L#define NID_id_regCtrl_oldCertID 319#define SN_id_regCtrl_oldCertID "id-regCtrl-oldCertID"#define OBJ_id_regCtrl_pkiArchiveOptions OBJ_id_regCtrl,4L#define NID_id_regCtrl_pkiArchiveOptions 318#define SN_id_regCtrl_pkiArchiveOptions "id-regCtrl-pkiArchiveOptions"#define OBJ_id_regCtrl_pkiPublicationInfo OBJ_id_regCtrl,3L#define NID_id_regCtrl_pkiPublicationInfo 317#define SN_id_regCtrl_pkiPublicationInfo "id-regCtrl-pkiPublicationInfo"#define OBJ_id_regCtrl_authenticator OBJ_id_regCtrl,2L#define NID_id_regCtrl_authenticator 316#define SN_id_regCtrl_authenticator "id-regCtrl-authenticator"#define OBJ_id_regCtrl_regToken OBJ_id_regCtrl,1L#define NID_id_regCtrl_regToken 315#define SN_id_regCtrl_regToken "id-regCtrl-regToken"#define OBJ_id_regInfo OBJ_id_pkip,2L#define NID_id_regInfo 314#define SN_id_regInfo "id-regInfo"#define OBJ_id_regCtrl OBJ_id_pkip,1L#define NID_id_regCtrl 313#define SN_id_regCtrl "id-regCtrl"#define OBJ_id_it_suppLangTags OBJ_id_it,16L#define NID_id_it_suppLangTags 784#define SN_id_it_suppLangTags "id-it-suppLangTags"#define OBJ_id_it_origPKIMessage OBJ_id_it,15L#define NID_id_it_origPKIMessage 312#define SN_id_it_origPKIMessage "id-it-origPKIMessage"#define OBJ_id_it_confirmWaitTime OBJ_id_it,14L#define NID_id_it_confirmWaitTime 311#define SN_id_it_confirmWaitTime "id-it-confirmWaitTime"#define OBJ_id_it_implicitConfirm OBJ_id_it,13L#define NID_id_it_implicitConfirm 310#define SN_id_it_implicitConfirm "id-it-implicitConfirm"#define OBJ_id_it_revPassphrase OBJ_id_it,12L#define NID_id_it_revPassphrase 309#define SN_id_it_revPassphrase "id-it-revPassphrase"#define OBJ_id_it_keyPairParamRep OBJ_id_it,11L#define NID_id_it_keyPairParamRep 308#define SN_id_it_keyPairParamRep "id-it-keyPairParamRep"#define OBJ_id_it_keyPairParamReq OBJ_id_it,10L#define NID_id_it_keyPairParamReq 307#define SN_id_it_keyPairParamReq "id-it-keyPairParamReq"#define OBJ_id_it_subscriptionResponse OBJ_id_it,9L#define NID_id_it_subscriptionResponse 306#define SN_id_it_subscriptionResponse "id-it-subscriptionResponse"#define OBJ_id_it_subscriptionRequest OBJ_id_it,8L#define NID_id_it_subscriptionRequest 305#define SN_id_it_subscriptionRequest "id-it-subscriptionRequest"#define OBJ_id_it_unsupportedOIDs OBJ_id_it,7L#define NID_id_it_unsupportedOIDs 304#define SN_id_it_unsupportedOIDs "id-it-unsupportedOIDs"#define OBJ_id_it_currentCRL OBJ_id_it,6L#define NID_id_it_currentCRL 303#define SN_id_it_currentCRL "id-it-currentCRL"#define OBJ_id_it_caKeyUpdateInfo OBJ_id_it,5L#define NID_id_it_caKeyUpdateInfo 302#define SN_id_it_caKeyUpdateInfo "id-it-caKeyUpdateInfo"#define OBJ_id_it_preferredSymmAlg OBJ_id_it,4L#define NID_id_it_preferredSymmAlg 301#define SN_id_it_preferredSymmAlg "id-it-preferredSymmAlg"#define OBJ_id_it_encKeyPairTypes OBJ_id_it,3L#define NID_id_it_encKeyPairTypes 300#define SN_id_it_encKeyPairTypes "id-it-encKeyPairTypes"#define OBJ_id_it_signKeyPairTypes OBJ_id_it,2L#define NID_id_it_signKeyPairTypes 299#define SN_id_it_signKeyPairTypes "id-it-signKeyPairTypes"#define OBJ_id_it_caProtEncCert OBJ_id_it,1L#define NID_id_it_caProtEncCert 298#define SN_id_it_caProtEncCert "id-it-caProtEncCert"#define OBJ_cmcRA OBJ_id_kp,28L#define NID_cmcRA 1132#define LN_cmcRA "CMC Registration Authority"#define SN_cmcRA "cmcRA"#define OBJ_cmcCA OBJ_id_kp,27L#define NID_cmcCA 1131#define LN_cmcCA "CMC Certificate Authority"#define SN_cmcCA "cmcCA"#define OBJ_sendProxiedOwner OBJ_id_kp,26L#define NID_sendProxiedOwner 1030#define LN_sendProxiedOwner "Send Proxied Owner"#define SN_sendProxiedOwner "sendProxiedOwner"#define OBJ_sendOwner OBJ_id_kp,25L#define NID_sendOwner 1029#define LN_sendOwner "Send Owner"#define SN_sendOwner "sendOwner"#define OBJ_sendProxiedRouter OBJ_id_kp,24L#define NID_sendProxiedRouter 1028#define LN_sendProxiedRouter "Send Proxied Router"#define SN_sendProxiedRouter "sendProxiedRouter"#define OBJ_sendRouter OBJ_id_kp,23L#define NID_sendRouter 1027#define LN_sendRouter "Send Router"#define SN_sendRouter "sendRouter"#define OBJ_sshServer OBJ_id_kp,22L#define NID_sshServer 1026#define LN_sshServer "SSH Server"#define SN_sshServer "secureShellServer"#define OBJ_sshClient OBJ_id_kp,21L#define NID_sshClient 1025#define LN_sshClient "SSH Client"#define SN_sshClient "secureShellClient"#define OBJ_capwapWTP OBJ_id_kp,19L#define NID_capwapWTP 1024#define LN_capwapWTP "Ctrl/Provision WAP Termination"#define SN_capwapWTP "capwapWTP"#define OBJ_capwapAC OBJ_id_kp,18L#define NID_capwapAC 1023#define LN_capwapAC "Ctrl/provision WAP Access"#define SN_capwapAC "capwapAC"#define OBJ_ipsec_IKE OBJ_id_kp,17L#define NID_ipsec_IKE 1022#define LN_ipsec_IKE "ipsec Internet Key Exchange"#define SN_ipsec_IKE "ipsecIKE"#define OBJ_dvcs OBJ_id_kp,10L#define NID_dvcs 297#define LN_dvcs "dvcs"#define SN_dvcs "DVCS"#define OBJ_OCSP_sign OBJ_id_kp,9L#define NID_OCSP_sign 180#define LN_OCSP_sign "OCSP Signing"#define SN_OCSP_sign "OCSPSigning"#define OBJ_time_stamp OBJ_id_kp,8L#define NID_time_stamp 133#define LN_time_stamp "Time Stamping"#define SN_time_stamp "timeStamping"#define OBJ_ipsecUser OBJ_id_kp,7L#define NID_ipsecUser 296#define LN_ipsecUser "IPSec User"#define SN_ipsecUser "ipsecUser"#define OBJ_ipsecTunnel OBJ_id_kp,6L#define NID_ipsecTunnel 295#define LN_ipsecTunnel "IPSec Tunnel"#define SN_ipsecTunnel "ipsecTunnel"#define OBJ_ipsecEndSystem OBJ_id_kp,5L#define NID_ipsecEndSystem 294#define LN_ipsecEndSystem "IPSec End System"#define SN_ipsecEndSystem "ipsecEndSystem"#define OBJ_email_protect OBJ_id_kp,4L#define NID_email_protect 132#define LN_email_protect "E-mail Protection"#define SN_email_protect "emailProtection"#define OBJ_code_sign OBJ_id_kp,3L#define NID_code_sign 131#define LN_code_sign "Code Signing"#define SN_code_sign "codeSigning"#define OBJ_client_auth OBJ_id_kp,2L#define NID_client_auth 130#define LN_client_auth "TLS Web Client Authentication"#define SN_client_auth "clientAuth"#define OBJ_server_auth OBJ_id_kp,1L#define NID_server_auth 129#define LN_server_auth "TLS Web Server Authentication"#define SN_server_auth "serverAuth"#define OBJ_textNotice OBJ_id_qt,3L#define NID_textNotice 293#define SN_textNotice "textNotice"#define OBJ_id_qt_unotice OBJ_id_qt,2L#define NID_id_qt_unotice 165#define LN_id_qt_unotice "Policy Qualifier User Notice"#define SN_id_qt_unotice "id-qt-unotice"#define OBJ_id_qt_cps OBJ_id_qt,1L#define NID_id_qt_cps 164#define LN_id_qt_cps "Policy Qualifier CPS"#define SN_id_qt_cps "id-qt-cps"#define OBJ_tlsfeature OBJ_id_pe,24L#define NID_tlsfeature 1020#define LN_tlsfeature "TLS Feature"#define SN_tlsfeature "tlsfeature"#define OBJ_proxyCertInfo OBJ_id_pe,14L#define NID_proxyCertInfo 663#define LN_proxyCertInfo "Proxy Certificate Information"#define SN_proxyCertInfo "proxyCertInfo"#define OBJ_sinfo_access OBJ_id_pe,11L#define NID_sinfo_access 398#define LN_sinfo_access "Subject Information Access"#define SN_sinfo_access "subjectInfoAccess"#define OBJ_ac_proxying OBJ_id_pe,10L#define NID_ac_proxying 397#define SN_ac_proxying "ac-proxying"#define OBJ_sbgp_routerIdentifier OBJ_id_pe,9L#define NID_sbgp_routerIdentifier 292#define SN_sbgp_routerIdentifier "sbgp-routerIdentifier"#define OBJ_sbgp_autonomousSysNum OBJ_id_pe,8L#define NID_sbgp_autonomousSysNum 291#define SN_sbgp_autonomousSysNum "sbgp-autonomousSysNum"#define OBJ_sbgp_ipAddrBlock OBJ_id_pe,7L#define NID_sbgp_ipAddrBlock 290#define SN_sbgp_ipAddrBlock "sbgp-ipAddrBlock"#define OBJ_aaControls OBJ_id_pe,6L#define NID_aaControls 289#define SN_aaControls "aaControls"#define OBJ_ac_targeting OBJ_id_pe,5L#define NID_ac_targeting 288#define SN_ac_targeting "ac-targeting"#define OBJ_ac_auditEntity OBJ_id_pe,4L#define NID_ac_auditEntity 287#define SN_ac_auditEntity "ac-auditEntity"#define OBJ_qcStatements OBJ_id_pe,3L#define NID_qcStatements 286#define SN_qcStatements "qcStatements"#define OBJ_biometricInfo OBJ_id_pe,2L#define NID_biometricInfo 285#define LN_biometricInfo "Biometric Info"#define SN_biometricInfo "biometricInfo"#define OBJ_info_access OBJ_id_pe,1L#define NID_info_access 177#define LN_info_access "Authority Information Access"#define SN_info_access "authorityInfoAccess"#define OBJ_id_mod_cmp2000 OBJ_id_pkix_mod,16L#define NID_id_mod_cmp2000 284#define SN_id_mod_cmp2000 "id-mod-cmp2000"#define OBJ_id_mod_dvcs OBJ_id_pkix_mod,15L#define NID_id_mod_dvcs 283#define SN_id_mod_dvcs "id-mod-dvcs"#define OBJ_id_mod_ocsp OBJ_id_pkix_mod,14L#define NID_id_mod_ocsp 282#define SN_id_mod_ocsp "id-mod-ocsp"#define OBJ_id_mod_timestamp_protocol OBJ_id_pkix_mod,13L#define NID_id_mod_timestamp_protocol 281#define SN_id_mod_timestamp_protocol "id-mod-timestamp-protocol"#define OBJ_id_mod_attribute_cert OBJ_id_pkix_mod,12L#define NID_id_mod_attribute_cert 280#define SN_id_mod_attribute_cert "id-mod-attribute-cert"#define OBJ_id_mod_qualified_cert_93 OBJ_id_pkix_mod,11L#define NID_id_mod_qualified_cert_93 279#define SN_id_mod_qualified_cert_93 "id-mod-qualified-cert-93"#define OBJ_id_mod_qualified_cert_88 OBJ_id_pkix_mod,10L#define NID_id_mod_qualified_cert_88 278#define SN_id_mod_qualified_cert_88 "id-mod-qualified-cert-88"#define OBJ_id_mod_cmp OBJ_id_pkix_mod,9L#define NID_id_mod_cmp 277#define SN_id_mod_cmp "id-mod-cmp"#define OBJ_id_mod_kea_profile_93 OBJ_id_pkix_mod,8L#define NID_id_mod_kea_profile_93 276#define SN_id_mod_kea_profile_93 "id-mod-kea-profile-93"#define OBJ_id_mod_kea_profile_88 OBJ_id_pkix_mod,7L#define NID_id_mod_kea_profile_88 275#define SN_id_mod_kea_profile_88 "id-mod-kea-profile-88"#define OBJ_id_mod_cmc OBJ_id_pkix_mod,6L#define NID_id_mod_cmc 274#define SN_id_mod_cmc "id-mod-cmc"#define OBJ_id_mod_crmf OBJ_id_pkix_mod,5L#define NID_id_mod_crmf 273#define SN_id_mod_crmf "id-mod-crmf"#define OBJ_id_pkix1_implicit_93 OBJ_id_pkix_mod,4L#define NID_id_pkix1_implicit_93 272#define SN_id_pkix1_implicit_93 "id-pkix1-implicit-93"#define OBJ_id_pkix1_explicit_93 OBJ_id_pkix_mod,3L#define NID_id_pkix1_explicit_93 271#define SN_id_pkix1_explicit_93 "id-pkix1-explicit-93"#define OBJ_id_pkix1_implicit_88 OBJ_id_pkix_mod,2L#define NID_id_pkix1_implicit_88 270#define SN_id_pkix1_implicit_88 "id-pkix1-implicit-88"#define OBJ_id_pkix1_explicit_88 OBJ_id_pkix_mod,1L#define NID_id_pkix1_explicit_88 269#define SN_id_pkix1_explicit_88 "id-pkix1-explicit-88"#define OBJ_id_ad OBJ_id_pkix,48L#define NID_id_ad 176#define SN_id_ad "id-ad"#define OBJ_id_ppl OBJ_id_pkix,21L#define NID_id_ppl 662#define SN_id_ppl "id-ppl"#define OBJ_id_cct OBJ_id_pkix,12L#define NID_id_cct 268#define SN_id_cct "id-cct"#define OBJ_id_qcs OBJ_id_pkix,11L#define NID_id_qcs 267#define SN_id_qcs "id-qcs"#define OBJ_id_aca OBJ_id_pkix,10L#define NID_id_aca 266#define SN_id_aca "id-aca"#define OBJ_id_pda OBJ_id_pkix,9L#define NID_id_pda 265#define SN_id_pda "id-pda"#define OBJ_id_on OBJ_id_pkix,8L#define NID_id_on 264#define SN_id_on "id-on"#define OBJ_id_cmc OBJ_id_pkix,7L#define NID_id_cmc 263#define SN_id_cmc "id-cmc"#define OBJ_id_alg OBJ_id_pkix,6L#define NID_id_alg 262#define SN_id_alg "id-alg"#define OBJ_id_pkip OBJ_id_pkix,5L#define NID_id_pkip 261#define SN_id_pkip "id-pkip"#define OBJ_id_it OBJ_id_pkix,4L#define NID_id_it 260#define SN_id_it "id-it"#define OBJ_id_kp OBJ_id_pkix,3L#define NID_id_kp 128#define SN_id_kp "id-kp"#define OBJ_id_qt OBJ_id_pkix,2L#define NID_id_qt 259#define SN_id_qt "id-qt"#define OBJ_id_pe OBJ_id_pkix,1L#define NID_id_pe 175#define SN_id_pe "id-pe"#define OBJ_id_pkix_mod OBJ_id_pkix,0L#define NID_id_pkix_mod 258#define SN_id_pkix_mod "id-pkix-mod"#define OBJ_id_pkix 1L,3L,6L,1L,5L,5L,7L#define NID_id_pkix 127#define SN_id_pkix "PKIX"#define NID_bf_ofb64 94#define LN_bf_ofb64 "bf-ofb"#define SN_bf_ofb64 "BF-OFB"#define NID_bf_cfb64 93#define LN_bf_cfb64 "bf-cfb"#define SN_bf_cfb64 "BF-CFB"#define NID_bf_ecb 92#define LN_bf_ecb "bf-ecb"#define SN_bf_ecb "BF-ECB"#define OBJ_bf_cbc 1L,3L,6L,1L,4L,1L,3029L,1L,2L#define NID_bf_cbc 91#define LN_bf_cbc "bf-cbc"#define SN_bf_cbc "BF-CBC"#define NID_idea_ofb64 46#define LN_idea_ofb64 "idea-ofb"#define SN_idea_ofb64 "IDEA-OFB"#define NID_idea_cfb64 35#define LN_idea_cfb64 "idea-cfb"#define SN_idea_cfb64 "IDEA-CFB"#define NID_idea_ecb 36#define LN_idea_ecb "idea-ecb"#define SN_idea_ecb "IDEA-ECB"#define OBJ_idea_cbc 1L,3L,6L,1L,4L,1L,188L,7L,1L,1L,2L#define NID_idea_cbc 34#define LN_idea_cbc "idea-cbc"#define SN_idea_cbc "IDEA-CBC"#define OBJ_ms_upn 1L,3L,6L,1L,4L,1L,311L,20L,2L,3L#define NID_ms_upn 649#define LN_ms_upn "Microsoft Universal Principal Name"#define SN_ms_upn "msUPN"#define OBJ_ms_smartcard_login 1L,3L,6L,1L,4L,1L,311L,20L,2L,2L#define NID_ms_smartcard_login 648#define LN_ms_smartcard_login "Microsoft Smartcardlogin"#define SN_ms_smartcard_login "msSmartcardLogin"#define OBJ_ms_efs 1L,3L,6L,1L,4L,1L,311L,10L,3L,4L#define NID_ms_efs 138#define LN_ms_efs "Microsoft Encrypted File System"#define SN_ms_efs "msEFS"#define OBJ_ms_sgc 1L,3L,6L,1L,4L,1L,311L,10L,3L,3L#define NID_ms_sgc 137#define LN_ms_sgc "Microsoft Server Gated Crypto"#define SN_ms_sgc "msSGC"#define OBJ_ms_ctl_sign 1L,3L,6L,1L,4L,1L,311L,10L,3L,1L#define NID_ms_ctl_sign 136#define LN_ms_ctl_sign "Microsoft Trust List Signing"#define SN_ms_ctl_sign "msCTLSign"#define OBJ_ms_code_com 1L,3L,6L,1L,4L,1L,311L,2L,1L,22L#define NID_ms_code_com 135#define LN_ms_code_com "Microsoft Commercial Code Signing"#define SN_ms_code_com "msCodeCom"#define OBJ_ms_code_ind 1L,3L,6L,1L,4L,1L,311L,2L,1L,21L#define NID_ms_code_ind 134#define LN_ms_code_ind "Microsoft Individual Code Signing"#define SN_ms_code_ind "msCodeInd"#define OBJ_ms_ext_req 1L,3L,6L,1L,4L,1L,311L,2L,1L,14L#define NID_ms_ext_req 171#define LN_ms_ext_req "Microsoft Extension Request"#define SN_ms_ext_req "msExtReq"#define NID_rc5_ofb64 123#define LN_rc5_ofb64 "rc5-ofb"#define SN_rc5_ofb64 "RC5-OFB"#define NID_rc5_cfb64 122#define LN_rc5_cfb64 "rc5-cfb"#define SN_rc5_cfb64 "RC5-CFB"#define NID_rc5_ecb 121#define LN_rc5_ecb "rc5-ecb"#define SN_rc5_ecb "RC5-ECB"#define OBJ_rc5_cbc OBJ_rsadsi,3L,8L#define NID_rc5_cbc 120#define LN_rc5_cbc "rc5-cbc"#define SN_rc5_cbc "RC5-CBC"#define OBJ_des_ede3_cbc OBJ_rsadsi,3L,7L#define NID_des_ede3_cbc 44#define LN_des_ede3_cbc "des-ede3-cbc"#define SN_des_ede3_cbc "DES-EDE3-CBC"#define NID_rc4_40 97#define LN_rc4_40 "rc4-40"#define SN_rc4_40 "RC4-40"#define OBJ_rc4 OBJ_rsadsi,3L,4L#define NID_rc4 5#define LN_rc4 "rc4"#define SN_rc4 "RC4"#define NID_rc2_64_cbc 166#define LN_rc2_64_cbc "rc2-64-cbc"#define SN_rc2_64_cbc "RC2-64-CBC"#define NID_rc2_40_cbc 98#define LN_rc2_40_cbc "rc2-40-cbc"#define SN_rc2_40_cbc "RC2-40-CBC"#define NID_rc2_ofb64 40#define LN_rc2_ofb64 "rc2-ofb"#define SN_rc2_ofb64 "RC2-OFB"#define NID_rc2_cfb64 39#define LN_rc2_cfb64 "rc2-cfb"#define SN_rc2_cfb64 "RC2-CFB"#define NID_rc2_ecb 38#define LN_rc2_ecb "rc2-ecb"#define SN_rc2_ecb "RC2-ECB"#define OBJ_rc2_cbc OBJ_rsadsi,3L,2L#define NID_rc2_cbc 37#define LN_rc2_cbc "rc2-cbc"#define SN_rc2_cbc "RC2-CBC"#define OBJ_hmacWithSHA512_256 OBJ_rsadsi,2L,13L#define NID_hmacWithSHA512_256 1194#define LN_hmacWithSHA512_256 "hmacWithSHA512-256"#define OBJ_hmacWithSHA512_224 OBJ_rsadsi,2L,12L#define NID_hmacWithSHA512_224 1193#define LN_hmacWithSHA512_224 "hmacWithSHA512-224"#define OBJ_hmacWithSHA512 OBJ_rsadsi,2L,11L#define NID_hmacWithSHA512 801#define LN_hmacWithSHA512 "hmacWithSHA512"#define OBJ_hmacWithSHA384 OBJ_rsadsi,2L,10L#define NID_hmacWithSHA384 800#define LN_hmacWithSHA384 "hmacWithSHA384"#define OBJ_hmacWithSHA256 OBJ_rsadsi,2L,9L#define NID_hmacWithSHA256 799#define LN_hmacWithSHA256 "hmacWithSHA256"#define OBJ_hmacWithSHA224 OBJ_rsadsi,2L,8L#define NID_hmacWithSHA224 798#define LN_hmacWithSHA224 "hmacWithSHA224"#define OBJ_sm3WithRSAEncryption OBJ_sm_scheme,504L#define NID_sm3WithRSAEncryption 1144#define LN_sm3WithRSAEncryption "sm3WithRSAEncryption"#define SN_sm3WithRSAEncryption "RSA-SM3"#define OBJ_sm3 OBJ_sm_scheme,401L#define NID_sm3 1143#define LN_sm3 "sm3"#define SN_sm3 "SM3"#define OBJ_sm2 OBJ_sm_scheme,301L#define NID_sm2 1172#define LN_sm2 "sm2"#define SN_sm2 "SM2"#define OBJ_hmacWithSHA1 OBJ_rsadsi,2L,7L#define NID_hmacWithSHA1 163#define LN_hmacWithSHA1 "hmacWithSHA1"#define OBJ_hmacWithMD5 OBJ_rsadsi,2L,6L#define NID_hmacWithMD5 797#define LN_hmacWithMD5 "hmacWithMD5"#define NID_md5_sha1 114#define LN_md5_sha1 "md5-sha1"#define SN_md5_sha1 "MD5-SHA1"#define OBJ_md5 OBJ_rsadsi,2L,5L#define NID_md5 4#define LN_md5 "md5"#define SN_md5 "MD5"#define OBJ_md4 OBJ_rsadsi,2L,4L#define NID_md4 257#define LN_md4 "md4"#define SN_md4 "MD4"#define OBJ_md2 OBJ_rsadsi,2L,2L#define NID_md2 3#define LN_md2 "md2"#define SN_md2 "MD2"#define OBJ_safeContentsBag OBJ_pkcs12_BagIds,6L#define NID_safeContentsBag 155#define LN_safeContentsBag "safeContentsBag"#define OBJ_secretBag OBJ_pkcs12_BagIds,5L#define NID_secretBag 154#define LN_secretBag "secretBag"#define OBJ_crlBag OBJ_pkcs12_BagIds,4L#define NID_crlBag 153#define LN_crlBag "crlBag"#define OBJ_certBag OBJ_pkcs12_BagIds,3L#define NID_certBag 152#define LN_certBag "certBag"#define OBJ_pkcs8ShroudedKeyBag OBJ_pkcs12_BagIds,2L#define NID_pkcs8ShroudedKeyBag 151#define LN_pkcs8ShroudedKeyBag "pkcs8ShroudedKeyBag"#define OBJ_keyBag OBJ_pkcs12_BagIds,1L#define NID_keyBag 150#define LN_keyBag "keyBag"#define OBJ_pkcs12_BagIds OBJ_pkcs12_Version1,1L#define OBJ_pkcs12_Version1 OBJ_pkcs12,10L#define OBJ_pbe_WithSHA1And40BitRC2_CBC OBJ_pkcs12_pbeids,6L#define NID_pbe_WithSHA1And40BitRC2_CBC 149#define LN_pbe_WithSHA1And40BitRC2_CBC "pbeWithSHA1And40BitRC2-CBC"#define SN_pbe_WithSHA1And40BitRC2_CBC "PBE-SHA1-RC2-40"#define OBJ_pbe_WithSHA1And128BitRC2_CBC OBJ_pkcs12_pbeids,5L#define NID_pbe_WithSHA1And128BitRC2_CBC 148#define LN_pbe_WithSHA1And128BitRC2_CBC "pbeWithSHA1And128BitRC2-CBC"#define SN_pbe_WithSHA1And128BitRC2_CBC "PBE-SHA1-RC2-128"#define OBJ_pbe_WithSHA1And2_Key_TripleDES_CBC OBJ_pkcs12_pbeids,4L#define NID_pbe_WithSHA1And2_Key_TripleDES_CBC 147#define LN_pbe_WithSHA1And2_Key_TripleDES_CBC "pbeWithSHA1And2-KeyTripleDES-CBC"#define SN_pbe_WithSHA1And2_Key_TripleDES_CBC "PBE-SHA1-2DES"#define OBJ_pbe_WithSHA1And3_Key_TripleDES_CBC OBJ_pkcs12_pbeids,3L#define NID_pbe_WithSHA1And3_Key_TripleDES_CBC 146#define LN_pbe_WithSHA1And3_Key_TripleDES_CBC "pbeWithSHA1And3-KeyTripleDES-CBC"#define SN_pbe_WithSHA1And3_Key_TripleDES_CBC "PBE-SHA1-3DES"#define OBJ_pbe_WithSHA1And40BitRC4 OBJ_pkcs12_pbeids,2L#define NID_pbe_WithSHA1And40BitRC4 145#define LN_pbe_WithSHA1And40BitRC4 "pbeWithSHA1And40BitRC4"#define SN_pbe_WithSHA1And40BitRC4 "PBE-SHA1-RC4-40"#define OBJ_pbe_WithSHA1And128BitRC4 OBJ_pkcs12_pbeids,1L#define NID_pbe_WithSHA1And128BitRC4 144#define LN_pbe_WithSHA1And128BitRC4 "pbeWithSHA1And128BitRC4"#define SN_pbe_WithSHA1And128BitRC4 "PBE-SHA1-RC4-128"#define OBJ_pkcs12_pbeids OBJ_pkcs12,1L#define OBJ_pkcs12 OBJ_pkcs,12L#define OBJ_x509Crl OBJ_crlTypes,1L#define NID_x509Crl 160#define LN_x509Crl "x509Crl"#define OBJ_crlTypes OBJ_pkcs9,23L#define OBJ_sdsiCertificate OBJ_certTypes,2L#define NID_sdsiCertificate 159#define LN_sdsiCertificate "sdsiCertificate"#define OBJ_x509Certificate OBJ_certTypes,1L#define NID_x509Certificate 158#define LN_x509Certificate "x509Certificate"#define OBJ_certTypes OBJ_pkcs9,22L#define OBJ_LocalKeySet 1L,3L,6L,1L,4L,1L,311L,17L,2L#define NID_LocalKeySet 856#define LN_LocalKeySet "Microsoft Local Key set"#define SN_LocalKeySet "LocalKeySet"#define OBJ_ms_csp_name 1L,3L,6L,1L,4L,1L,311L,17L,1L#define NID_ms_csp_name 417#define LN_ms_csp_name "Microsoft CSP Name"#define SN_ms_csp_name "CSPName"#define OBJ_localKeyID OBJ_pkcs9,21L#define NID_localKeyID 157#define LN_localKeyID "localKeyID"#define OBJ_friendlyName OBJ_pkcs9,20L#define NID_friendlyName 156#define LN_friendlyName "friendlyName"#define OBJ_id_smime_cti_ets_proofOfCreation OBJ_id_smime_cti,6L#define NID_id_smime_cti_ets_proofOfCreation 256#define SN_id_smime_cti_ets_proofOfCreation "id-smime-cti-ets-proofOfCreation"#define OBJ_id_smime_cti_ets_proofOfApproval OBJ_id_smime_cti,5L#define NID_id_smime_cti_ets_proofOfApproval 255#define SN_id_smime_cti_ets_proofOfApproval "id-smime-cti-ets-proofOfApproval"#define OBJ_id_smime_cti_ets_proofOfSender OBJ_id_smime_cti,4L#define NID_id_smime_cti_ets_proofOfSender 254#define SN_id_smime_cti_ets_proofOfSender "id-smime-cti-ets-proofOfSender"#define OBJ_id_smime_cti_ets_proofOfDelivery OBJ_id_smime_cti,3L#define NID_id_smime_cti_ets_proofOfDelivery 253#define SN_id_smime_cti_ets_proofOfDelivery "id-smime-cti-ets-proofOfDelivery"#define OBJ_id_smime_cti_ets_proofOfReceipt OBJ_id_smime_cti,2L#define NID_id_smime_cti_ets_proofOfReceipt 252#define SN_id_smime_cti_ets_proofOfReceipt "id-smime-cti-ets-proofOfReceipt"#define OBJ_id_smime_cti_ets_proofOfOrigin OBJ_id_smime_cti,1L#define NID_id_smime_cti_ets_proofOfOrigin 251#define SN_id_smime_cti_ets_proofOfOrigin "id-smime-cti-ets-proofOfOrigin"#define OBJ_id_smime_spq_ets_sqt_unotice OBJ_id_smime_spq,2L#define NID_id_smime_spq_ets_sqt_unotice 250#define SN_id_smime_spq_ets_sqt_unotice "id-smime-spq-ets-sqt-unotice"#define OBJ_id_smime_spq_ets_sqt_uri OBJ_id_smime_spq,1L#define NID_id_smime_spq_ets_sqt_uri 249#define SN_id_smime_spq_ets_sqt_uri "id-smime-spq-ets-sqt-uri"#define OBJ_id_smime_cd_ldap OBJ_id_smime_cd,1L#define NID_id_smime_cd_ldap 248#define SN_id_smime_cd_ldap "id-smime-cd-ldap"#define OBJ_id_alg_PWRI_KEK OBJ_id_smime_alg,9L#define NID_id_alg_PWRI_KEK 893#define SN_id_alg_PWRI_KEK "id-alg-PWRI-KEK"#define OBJ_id_smime_alg_CMSRC2wrap OBJ_id_smime_alg,7L#define NID_id_smime_alg_CMSRC2wrap 247#define SN_id_smime_alg_CMSRC2wrap "id-smime-alg-CMSRC2wrap"#define OBJ_id_smime_alg_CMS3DESwrap OBJ_id_smime_alg,6L#define NID_id_smime_alg_CMS3DESwrap 246#define SN_id_smime_alg_CMS3DESwrap "id-smime-alg-CMS3DESwrap"#define OBJ_id_smime_alg_ESDH OBJ_id_smime_alg,5L#define NID_id_smime_alg_ESDH 245#define SN_id_smime_alg_ESDH "id-smime-alg-ESDH"#define OBJ_id_smime_alg_RC2wrap OBJ_id_smime_alg,4L#define NID_id_smime_alg_RC2wrap 244#define SN_id_smime_alg_RC2wrap "id-smime-alg-RC2wrap"#define OBJ_id_smime_alg_3DESwrap OBJ_id_smime_alg,3L#define NID_id_smime_alg_3DESwrap 243#define SN_id_smime_alg_3DESwrap "id-smime-alg-3DESwrap"#define OBJ_id_smime_alg_ESDHwithRC2 OBJ_id_smime_alg,2L#define NID_id_smime_alg_ESDHwithRC2 242#define SN_id_smime_alg_ESDHwithRC2 "id-smime-alg-ESDHwithRC2"#define OBJ_id_smime_alg_ESDHwith3DES OBJ_id_smime_alg,1L#define NID_id_smime_alg_ESDHwith3DES 241#define SN_id_smime_alg_ESDHwith3DES "id-smime-alg-ESDHwith3DES"#define OBJ_id_smime_aa_signingCertificateV2 OBJ_id_smime_aa,47L#define NID_id_smime_aa_signingCertificateV2 1086#define SN_id_smime_aa_signingCertificateV2 "id-smime-aa-signingCertificateV2"#define OBJ_id_smime_aa_dvcs_dvc OBJ_id_smime_aa,29L#define NID_id_smime_aa_dvcs_dvc 240#define SN_id_smime_aa_dvcs_dvc "id-smime-aa-dvcs-dvc"#define OBJ_id_smime_aa_signatureType OBJ_id_smime_aa,28L#define NID_id_smime_aa_signatureType 239#define SN_id_smime_aa_signatureType "id-smime-aa-signatureType"#define OBJ_id_smime_aa_ets_archiveTimeStamp OBJ_id_smime_aa,27L#define NID_id_smime_aa_ets_archiveTimeStamp 238#define SN_id_smime_aa_ets_archiveTimeStamp "id-smime-aa-ets-archiveTimeStamp"#define OBJ_id_smime_aa_ets_certCRLTimestamp OBJ_id_smime_aa,26L#define NID_id_smime_aa_ets_certCRLTimestamp 237#define SN_id_smime_aa_ets_certCRLTimestamp "id-smime-aa-ets-certCRLTimestamp"#define OBJ_id_smime_aa_ets_escTimeStamp OBJ_id_smime_aa,25L#define NID_id_smime_aa_ets_escTimeStamp 236#define SN_id_smime_aa_ets_escTimeStamp "id-smime-aa-ets-escTimeStamp"#define OBJ_id_smime_aa_ets_revocationValues OBJ_id_smime_aa,24L#define NID_id_smime_aa_ets_revocationValues 235#define SN_id_smime_aa_ets_revocationValues "id-smime-aa-ets-revocationValues"#define OBJ_id_smime_aa_ets_certValues OBJ_id_smime_aa,23L#define NID_id_smime_aa_ets_certValues 234#define SN_id_smime_aa_ets_certValues "id-smime-aa-ets-certValues"#define OBJ_id_smime_aa_ets_RevocationRefs OBJ_id_smime_aa,22L#define NID_id_smime_aa_ets_RevocationRefs 233#define SN_id_smime_aa_ets_RevocationRefs "id-smime-aa-ets-RevocationRefs"#define OBJ_id_smime_aa_ets_CertificateRefs OBJ_id_smime_aa,21L#define NID_id_smime_aa_ets_CertificateRefs 232#define SN_id_smime_aa_ets_CertificateRefs "id-smime-aa-ets-CertificateRefs"#define OBJ_id_smime_aa_ets_contentTimestamp OBJ_id_smime_aa,20L#define NID_id_smime_aa_ets_contentTimestamp 231#define SN_id_smime_aa_ets_contentTimestamp "id-smime-aa-ets-contentTimestamp"#define OBJ_id_smime_aa_ets_otherSigCert OBJ_id_smime_aa,19L#define NID_id_smime_aa_ets_otherSigCert 230#define SN_id_smime_aa_ets_otherSigCert "id-smime-aa-ets-otherSigCert"#define OBJ_id_smime_aa_ets_signerAttr OBJ_id_smime_aa,18L#define NID_id_smime_aa_ets_signerAttr 229#define SN_id_smime_aa_ets_signerAttr "id-smime-aa-ets-signerAttr"#define OBJ_id_smime_aa_ets_signerLocation OBJ_id_smime_aa,17L#define NID_id_smime_aa_ets_signerLocation 228#define SN_id_smime_aa_ets_signerLocation "id-smime-aa-ets-signerLocation"#define OBJ_id_smime_aa_ets_commitmentType OBJ_id_smime_aa,16L#define NID_id_smime_aa_ets_commitmentType 227#define SN_id_smime_aa_ets_commitmentType "id-smime-aa-ets-commitmentType"#define OBJ_id_smime_aa_ets_sigPolicyId OBJ_id_smime_aa,15L#define NID_id_smime_aa_ets_sigPolicyId 226#define SN_id_smime_aa_ets_sigPolicyId "id-smime-aa-ets-sigPolicyId"#define OBJ_id_smime_aa_timeStampToken OBJ_id_smime_aa,14L#define NID_id_smime_aa_timeStampToken 225#define SN_id_smime_aa_timeStampToken "id-smime-aa-timeStampToken"#define OBJ_id_smime_aa_smimeEncryptCerts OBJ_id_smime_aa,13L#define NID_id_smime_aa_smimeEncryptCerts 224#define SN_id_smime_aa_smimeEncryptCerts "id-smime-aa-smimeEncryptCerts"#define OBJ_id_smime_aa_signingCertificate OBJ_id_smime_aa,12L#define NID_id_smime_aa_signingCertificate 223#define SN_id_smime_aa_signingCertificate "id-smime-aa-signingCertificate"#define OBJ_id_smime_aa_encrypKeyPref OBJ_id_smime_aa,11L#define NID_id_smime_aa_encrypKeyPref 222#define SN_id_smime_aa_encrypKeyPref "id-smime-aa-encrypKeyPref"#define OBJ_id_smime_aa_contentReference OBJ_id_smime_aa,10L#define NID_id_smime_aa_contentReference 221#define SN_id_smime_aa_contentReference "id-smime-aa-contentReference"#define OBJ_id_smime_aa_equivalentLabels OBJ_id_smime_aa,9L#define NID_id_smime_aa_equivalentLabels 220#define SN_id_smime_aa_equivalentLabels "id-smime-aa-equivalentLabels"#define OBJ_id_smime_aa_macValue OBJ_id_smime_aa,8L#define NID_id_smime_aa_macValue 219#define SN_id_smime_aa_macValue "id-smime-aa-macValue"#define OBJ_id_smime_aa_contentIdentifier OBJ_id_smime_aa,7L#define NID_id_smime_aa_contentIdentifier 218#define SN_id_smime_aa_contentIdentifier "id-smime-aa-contentIdentifier"#define OBJ_id_smime_aa_encapContentType OBJ_id_smime_aa,6L#define NID_id_smime_aa_encapContentType 217#define SN_id_smime_aa_encapContentType "id-smime-aa-encapContentType"#define OBJ_id_smime_aa_msgSigDigest OBJ_id_smime_aa,5L#define NID_id_smime_aa_msgSigDigest 216#define SN_id_smime_aa_msgSigDigest "id-smime-aa-msgSigDigest"#define OBJ_id_smime_aa_contentHint OBJ_id_smime_aa,4L#define NID_id_smime_aa_contentHint 215#define SN_id_smime_aa_contentHint "id-smime-aa-contentHint"#define OBJ_id_smime_aa_mlExpandHistory OBJ_id_smime_aa,3L#define NID_id_smime_aa_mlExpandHistory 214#define SN_id_smime_aa_mlExpandHistory "id-smime-aa-mlExpandHistory"#define OBJ_id_smime_aa_securityLabel OBJ_id_smime_aa,2L#define NID_id_smime_aa_securityLabel 213#define SN_id_smime_aa_securityLabel "id-smime-aa-securityLabel"#define OBJ_id_smime_aa_receiptRequest OBJ_id_smime_aa,1L#define NID_id_smime_aa_receiptRequest 212#define SN_id_smime_aa_receiptRequest "id-smime-aa-receiptRequest"#define OBJ_id_ct_xml OBJ_id_smime_ct,28L#define NID_id_ct_xml 1060#define SN_id_ct_xml "id-ct-xml"#define OBJ_id_ct_asciiTextWithCRLF OBJ_id_smime_ct,27L#define NID_id_ct_asciiTextWithCRLF 787#define SN_id_ct_asciiTextWithCRLF "id-ct-asciiTextWithCRLF"#define OBJ_id_smime_ct_authEnvelopedData OBJ_id_smime_ct,23L#define NID_id_smime_ct_authEnvelopedData 1059#define SN_id_smime_ct_authEnvelopedData "id-smime-ct-authEnvelopedData"#define OBJ_id_smime_ct_contentCollection OBJ_id_smime_ct,19L#define NID_id_smime_ct_contentCollection 1058#define SN_id_smime_ct_contentCollection "id-smime-ct-contentCollection"#define OBJ_id_smime_ct_compressedData OBJ_id_smime_ct,9L#define NID_id_smime_ct_compressedData 786#define SN_id_smime_ct_compressedData "id-smime-ct-compressedData"#define OBJ_id_smime_ct_DVCSResponseData OBJ_id_smime_ct,8L#define NID_id_smime_ct_DVCSResponseData 211#define SN_id_smime_ct_DVCSResponseData "id-smime-ct-DVCSResponseData"#define OBJ_id_smime_ct_DVCSRequestData OBJ_id_smime_ct,7L#define NID_id_smime_ct_DVCSRequestData 210#define SN_id_smime_ct_DVCSRequestData "id-smime-ct-DVCSRequestData"#define OBJ_id_smime_ct_contentInfo OBJ_id_smime_ct,6L#define NID_id_smime_ct_contentInfo 209#define SN_id_smime_ct_contentInfo "id-smime-ct-contentInfo"#define OBJ_id_smime_ct_TDTInfo OBJ_id_smime_ct,5L#define NID_id_smime_ct_TDTInfo 208#define SN_id_smime_ct_TDTInfo "id-smime-ct-TDTInfo"#define OBJ_id_smime_ct_TSTInfo OBJ_id_smime_ct,4L#define NID_id_smime_ct_TSTInfo 207#define SN_id_smime_ct_TSTInfo "id-smime-ct-TSTInfo"#define OBJ_id_smime_ct_publishCert OBJ_id_smime_ct,3L#define NID_id_smime_ct_publishCert 206#define SN_id_smime_ct_publishCert "id-smime-ct-publishCert"#define OBJ_id_smime_ct_authData OBJ_id_smime_ct,2L#define NID_id_smime_ct_authData 205#define SN_id_smime_ct_authData "id-smime-ct-authData"#define OBJ_id_smime_ct_receipt OBJ_id_smime_ct,1L#define NID_id_smime_ct_receipt 204#define SN_id_smime_ct_receipt "id-smime-ct-receipt"#define OBJ_id_smime_mod_ets_eSigPolicy_97 OBJ_id_smime_mod,8L#define NID_id_smime_mod_ets_eSigPolicy_97 203#define SN_id_smime_mod_ets_eSigPolicy_97 "id-smime-mod-ets-eSigPolicy-97"#define OBJ_id_smime_mod_ets_eSigPolicy_88 OBJ_id_smime_mod,7L#define NID_id_smime_mod_ets_eSigPolicy_88 202#define SN_id_smime_mod_ets_eSigPolicy_88 "id-smime-mod-ets-eSigPolicy-88"#define OBJ_id_smime_mod_ets_eSignature_97 OBJ_id_smime_mod,6L#define NID_id_smime_mod_ets_eSignature_97 201#define SN_id_smime_mod_ets_eSignature_97 "id-smime-mod-ets-eSignature-97"#define OBJ_id_smime_mod_ets_eSignature_88 OBJ_id_smime_mod,5L#define NID_id_smime_mod_ets_eSignature_88 200#define SN_id_smime_mod_ets_eSignature_88 "id-smime-mod-ets-eSignature-88"#define OBJ_id_smime_mod_msg_v3 OBJ_id_smime_mod,4L#define NID_id_smime_mod_msg_v3 199#define SN_id_smime_mod_msg_v3 "id-smime-mod-msg-v3"#define OBJ_id_smime_mod_oid OBJ_id_smime_mod,3L#define NID_id_smime_mod_oid 198#define SN_id_smime_mod_oid "id-smime-mod-oid"#define OBJ_id_smime_mod_ess OBJ_id_smime_mod,2L#define NID_id_smime_mod_ess 197#define SN_id_smime_mod_ess "id-smime-mod-ess"#define OBJ_id_smime_mod_cms OBJ_id_smime_mod,1L#define NID_id_smime_mod_cms 196#define SN_id_smime_mod_cms "id-smime-mod-cms"#define OBJ_id_smime_cti OBJ_SMIME,6L#define NID_id_smime_cti 195#define SN_id_smime_cti "id-smime-cti"#define OBJ_id_smime_spq OBJ_SMIME,5L#define NID_id_smime_spq 194#define SN_id_smime_spq "id-smime-spq"#define OBJ_id_smime_cd OBJ_SMIME,4L#define NID_id_smime_cd 193#define SN_id_smime_cd "id-smime-cd"#define OBJ_id_smime_alg OBJ_SMIME,3L#define NID_id_smime_alg 192#define SN_id_smime_alg "id-smime-alg"#define OBJ_id_smime_aa OBJ_SMIME,2L#define NID_id_smime_aa 191#define SN_id_smime_aa "id-smime-aa"#define OBJ_id_smime_ct OBJ_SMIME,1L#define NID_id_smime_ct 190#define SN_id_smime_ct "id-smime-ct"#define OBJ_id_smime_mod OBJ_SMIME,0L#define NID_id_smime_mod 189#define SN_id_smime_mod "id-smime-mod"#define OBJ_SMIME OBJ_pkcs9,16L#define NID_SMIME 188#define LN_SMIME "S/MIME"#define SN_SMIME "SMIME"#define OBJ_SMIMECapabilities OBJ_pkcs9,15L#define NID_SMIMECapabilities 167#define LN_SMIMECapabilities "S/MIME Capabilities"#define SN_SMIMECapabilities "SMIME-CAPS"#define OBJ_ext_req OBJ_pkcs9,14L#define NID_ext_req 172#define LN_ext_req "Extension Request"#define SN_ext_req "extReq"#define OBJ_pkcs9_extCertAttributes OBJ_pkcs9,9L#define NID_pkcs9_extCertAttributes 56#define LN_pkcs9_extCertAttributes "extendedCertificateAttributes"#define OBJ_pkcs9_unstructuredAddress OBJ_pkcs9,8L#define NID_pkcs9_unstructuredAddress 55#define LN_pkcs9_unstructuredAddress "unstructuredAddress"#define OBJ_pkcs9_challengePassword OBJ_pkcs9,7L#define NID_pkcs9_challengePassword 54#define LN_pkcs9_challengePassword "challengePassword"#define OBJ_pkcs9_countersignature OBJ_pkcs9,6L#define NID_pkcs9_countersignature 53#define LN_pkcs9_countersignature "countersignature"#define OBJ_pkcs9_signingTime OBJ_pkcs9,5L#define NID_pkcs9_signingTime 52#define LN_pkcs9_signingTime "signingTime"#define OBJ_pkcs9_messageDigest OBJ_pkcs9,4L#define NID_pkcs9_messageDigest 51#define LN_pkcs9_messageDigest "messageDigest"#define OBJ_pkcs9_contentType OBJ_pkcs9,3L#define NID_pkcs9_contentType 50#define LN_pkcs9_contentType "contentType"#define OBJ_pkcs9_unstructuredName OBJ_pkcs9,2L#define NID_pkcs9_unstructuredName 49#define LN_pkcs9_unstructuredName "unstructuredName"#define OBJ_pkcs9_emailAddress OBJ_pkcs9,1L#define NID_pkcs9_emailAddress 48#define LN_pkcs9_emailAddress "emailAddress"#define OBJ_pkcs9 OBJ_pkcs,9L#define NID_pkcs9 47#define SN_pkcs9 "pkcs9"#define OBJ_pkcs7_encrypted OBJ_pkcs7,6L#define NID_pkcs7_encrypted 26#define LN_pkcs7_encrypted "pkcs7-encryptedData"#define OBJ_pkcs7_digest OBJ_pkcs7,5L#define NID_pkcs7_digest 25#define LN_pkcs7_digest "pkcs7-digestData"#define OBJ_pkcs7_signedAndEnveloped OBJ_pkcs7,4L#define NID_pkcs7_signedAndEnveloped 24#define LN_pkcs7_signedAndEnveloped "pkcs7-signedAndEnvelopedData"#define OBJ_pkcs7_enveloped OBJ_pkcs7,3L#define NID_pkcs7_enveloped 23#define LN_pkcs7_enveloped "pkcs7-envelopedData"#define OBJ_pkcs7_signed OBJ_pkcs7,2L#define NID_pkcs7_signed 22#define LN_pkcs7_signed "pkcs7-signedData"#define OBJ_pkcs7_data OBJ_pkcs7,1L#define NID_pkcs7_data 21#define LN_pkcs7_data "pkcs7-data"#define OBJ_pkcs7 OBJ_pkcs,7L#define NID_pkcs7 20#define SN_pkcs7 "pkcs7"#define OBJ_pbmac1 OBJ_pkcs5,14L#define NID_pbmac1 162#define LN_pbmac1 "PBMAC1"#define OBJ_pbes2 OBJ_pkcs5,13L#define NID_pbes2 161#define LN_pbes2 "PBES2"#define OBJ_id_pbkdf2 OBJ_pkcs5,12L#define NID_id_pbkdf2 69#define LN_id_pbkdf2 "PBKDF2"#define OBJ_pbeWithSHA1AndRC2_CBC OBJ_pkcs5,11L#define NID_pbeWithSHA1AndRC2_CBC 68#define LN_pbeWithSHA1AndRC2_CBC "pbeWithSHA1AndRC2-CBC"#define SN_pbeWithSHA1AndRC2_CBC "PBE-SHA1-RC2-64"#define OBJ_pbeWithSHA1AndDES_CBC OBJ_pkcs5,10L#define NID_pbeWithSHA1AndDES_CBC 170#define LN_pbeWithSHA1AndDES_CBC "pbeWithSHA1AndDES-CBC"#define SN_pbeWithSHA1AndDES_CBC "PBE-SHA1-DES"#define OBJ_pbeWithMD5AndRC2_CBC OBJ_pkcs5,6L#define NID_pbeWithMD5AndRC2_CBC 169#define LN_pbeWithMD5AndRC2_CBC "pbeWithMD5AndRC2-CBC"#define SN_pbeWithMD5AndRC2_CBC "PBE-MD5-RC2-64"#define OBJ_pbeWithMD2AndRC2_CBC OBJ_pkcs5,4L#define NID_pbeWithMD2AndRC2_CBC 168#define LN_pbeWithMD2AndRC2_CBC "pbeWithMD2AndRC2-CBC"#define SN_pbeWithMD2AndRC2_CBC "PBE-MD2-RC2-64"#define OBJ_pbeWithMD5AndDES_CBC OBJ_pkcs5,3L#define NID_pbeWithMD5AndDES_CBC 10#define LN_pbeWithMD5AndDES_CBC "pbeWithMD5AndDES-CBC"#define SN_pbeWithMD5AndDES_CBC "PBE-MD5-DES"#define OBJ_pbeWithMD2AndDES_CBC OBJ_pkcs5,1L#define NID_pbeWithMD2AndDES_CBC 9#define LN_pbeWithMD2AndDES_CBC "pbeWithMD2AndDES-CBC"#define SN_pbeWithMD2AndDES_CBC "PBE-MD2-DES"#define OBJ_pkcs5 OBJ_pkcs,5L#define NID_pkcs5 187#define SN_pkcs5 "pkcs5"#define OBJ_dhKeyAgreement OBJ_pkcs3,1L#define NID_dhKeyAgreement 28#define LN_dhKeyAgreement "dhKeyAgreement"#define OBJ_pkcs3 OBJ_pkcs,3L#define NID_pkcs3 27#define SN_pkcs3 "pkcs3"#define OBJ_sha512_256WithRSAEncryption OBJ_pkcs1,16L#define NID_sha512_256WithRSAEncryption 1146#define LN_sha512_256WithRSAEncryption "sha512-256WithRSAEncryption"#define SN_sha512_256WithRSAEncryption "RSA-SHA512/256"#define OBJ_sha512_224WithRSAEncryption OBJ_pkcs1,15L#define NID_sha512_224WithRSAEncryption 1145#define LN_sha512_224WithRSAEncryption "sha512-224WithRSAEncryption"#define SN_sha512_224WithRSAEncryption "RSA-SHA512/224"#define OBJ_sha224WithRSAEncryption OBJ_pkcs1,14L#define NID_sha224WithRSAEncryption 671#define LN_sha224WithRSAEncryption "sha224WithRSAEncryption"#define SN_sha224WithRSAEncryption "RSA-SHA224"#define OBJ_sha512WithRSAEncryption OBJ_pkcs1,13L#define NID_sha512WithRSAEncryption 670#define LN_sha512WithRSAEncryption "sha512WithRSAEncryption"#define SN_sha512WithRSAEncryption "RSA-SHA512"#define OBJ_sha384WithRSAEncryption OBJ_pkcs1,12L#define NID_sha384WithRSAEncryption 669#define LN_sha384WithRSAEncryption "sha384WithRSAEncryption"#define SN_sha384WithRSAEncryption "RSA-SHA384"#define OBJ_sha256WithRSAEncryption OBJ_pkcs1,11L#define NID_sha256WithRSAEncryption 668#define LN_sha256WithRSAEncryption "sha256WithRSAEncryption"#define SN_sha256WithRSAEncryption "RSA-SHA256"#define OBJ_rsassaPss OBJ_pkcs1,10L#define NID_rsassaPss 912#define LN_rsassaPss "rsassaPss"#define SN_rsassaPss "RSASSA-PSS"#define OBJ_pSpecified OBJ_pkcs1,9L#define NID_pSpecified 935#define LN_pSpecified "pSpecified"#define SN_pSpecified "PSPECIFIED"#define OBJ_mgf1 OBJ_pkcs1,8L#define NID_mgf1 911#define LN_mgf1 "mgf1"#define SN_mgf1 "MGF1"#define OBJ_rsaesOaep OBJ_pkcs1,7L#define NID_rsaesOaep 919#define LN_rsaesOaep "rsaesOaep"#define SN_rsaesOaep "RSAES-OAEP"#define OBJ_sha1WithRSAEncryption OBJ_pkcs1,5L#define NID_sha1WithRSAEncryption 65#define LN_sha1WithRSAEncryption "sha1WithRSAEncryption"#define SN_sha1WithRSAEncryption "RSA-SHA1"#define OBJ_md5WithRSAEncryption OBJ_pkcs1,4L#define NID_md5WithRSAEncryption 8#define LN_md5WithRSAEncryption "md5WithRSAEncryption"#define SN_md5WithRSAEncryption "RSA-MD5"#define OBJ_md4WithRSAEncryption OBJ_pkcs1,3L#define NID_md4WithRSAEncryption 396#define LN_md4WithRSAEncryption "md4WithRSAEncryption"#define SN_md4WithRSAEncryption "RSA-MD4"#define OBJ_md2WithRSAEncryption OBJ_pkcs1,2L#define NID_md2WithRSAEncryption 7#define LN_md2WithRSAEncryption "md2WithRSAEncryption"#define SN_md2WithRSAEncryption "RSA-MD2"#define OBJ_rsaEncryption OBJ_pkcs1,1L#define NID_rsaEncryption 6#define LN_rsaEncryption "rsaEncryption"#define OBJ_pkcs1 OBJ_pkcs,1L#define NID_pkcs1 186#define SN_pkcs1 "pkcs1"#define OBJ_pkcs OBJ_rsadsi,1L#define NID_pkcs 2#define LN_pkcs "RSA Data Security, Inc. PKCS"#define SN_pkcs "pkcs"#define OBJ_rsadsi OBJ_ISO_US,113549L#define NID_rsadsi 1#define LN_rsadsi "RSA Data Security, Inc."#define SN_rsadsi "rsadsi"#define OBJ_id_DHBasedMac OBJ_ISO_US,113533L,7L,66L,30L#define NID_id_DHBasedMac 783#define LN_id_DHBasedMac "Diffie-Hellman based MAC"#define SN_id_DHBasedMac "id-DHBasedMac"#define OBJ_id_PasswordBasedMAC OBJ_ISO_US,113533L,7L,66L,13L#define NID_id_PasswordBasedMAC 782#define LN_id_PasswordBasedMAC "password based MAC"#define SN_id_PasswordBasedMAC "id-PasswordBasedMAC"#define OBJ_pbeWithMD5AndCast5_CBC OBJ_ISO_US,113533L,7L,66L,12L#define NID_pbeWithMD5AndCast5_CBC 112#define LN_pbeWithMD5AndCast5_CBC "pbeWithMD5AndCast5CBC"#define NID_cast5_ofb64 111#define LN_cast5_ofb64 "cast5-ofb"#define SN_cast5_ofb64 "CAST5-OFB"#define NID_cast5_cfb64 110#define LN_cast5_cfb64 "cast5-cfb"#define SN_cast5_cfb64 "CAST5-CFB"#define NID_cast5_ecb 109#define LN_cast5_ecb "cast5-ecb"#define SN_cast5_ecb "CAST5-ECB"#define OBJ_cast5_cbc OBJ_ISO_US,113533L,7L,66L,10L#define NID_cast5_cbc 108#define LN_cast5_cbc "cast5-cbc"#define SN_cast5_cbc "CAST5-CBC"#define OBJ_wap_wsg_idm_ecid_wtls12 OBJ_wap_wsg_idm_ecid,12L#define NID_wap_wsg_idm_ecid_wtls12 745#define SN_wap_wsg_idm_ecid_wtls12 "wap-wsg-idm-ecid-wtls12"#define OBJ_wap_wsg_idm_ecid_wtls11 OBJ_wap_wsg_idm_ecid,11L#define NID_wap_wsg_idm_ecid_wtls11 744#define SN_wap_wsg_idm_ecid_wtls11 "wap-wsg-idm-ecid-wtls11"#define OBJ_wap_wsg_idm_ecid_wtls10 OBJ_wap_wsg_idm_ecid,10L#define NID_wap_wsg_idm_ecid_wtls10 743#define SN_wap_wsg_idm_ecid_wtls10 "wap-wsg-idm-ecid-wtls10"#define OBJ_wap_wsg_idm_ecid_wtls9 OBJ_wap_wsg_idm_ecid,9L#define NID_wap_wsg_idm_ecid_wtls9 742#define SN_wap_wsg_idm_ecid_wtls9 "wap-wsg-idm-ecid-wtls9"#define OBJ_wap_wsg_idm_ecid_wtls8 OBJ_wap_wsg_idm_ecid,8L#define NID_wap_wsg_idm_ecid_wtls8 741#define SN_wap_wsg_idm_ecid_wtls8 "wap-wsg-idm-ecid-wtls8"#define OBJ_wap_wsg_idm_ecid_wtls7 OBJ_wap_wsg_idm_ecid,7L#define NID_wap_wsg_idm_ecid_wtls7 740#define SN_wap_wsg_idm_ecid_wtls7 "wap-wsg-idm-ecid-wtls7"#define OBJ_wap_wsg_idm_ecid_wtls6 OBJ_wap_wsg_idm_ecid,6L#define NID_wap_wsg_idm_ecid_wtls6 739#define SN_wap_wsg_idm_ecid_wtls6 "wap-wsg-idm-ecid-wtls6"#define OBJ_wap_wsg_idm_ecid_wtls5 OBJ_wap_wsg_idm_ecid,5L#define NID_wap_wsg_idm_ecid_wtls5 738#define SN_wap_wsg_idm_ecid_wtls5 "wap-wsg-idm-ecid-wtls5"#define OBJ_wap_wsg_idm_ecid_wtls4 OBJ_wap_wsg_idm_ecid,4L#define NID_wap_wsg_idm_ecid_wtls4 737#define SN_wap_wsg_idm_ecid_wtls4 "wap-wsg-idm-ecid-wtls4"#define OBJ_wap_wsg_idm_ecid_wtls3 OBJ_wap_wsg_idm_ecid,3L#define NID_wap_wsg_idm_ecid_wtls3 736#define SN_wap_wsg_idm_ecid_wtls3 "wap-wsg-idm-ecid-wtls3"#define OBJ_wap_wsg_idm_ecid_wtls1 OBJ_wap_wsg_idm_ecid,1L#define NID_wap_wsg_idm_ecid_wtls1 735#define SN_wap_wsg_idm_ecid_wtls1 "wap-wsg-idm-ecid-wtls1"#define OBJ_wap_wsg_idm_ecid OBJ_wap_wsg,4L#define OBJ_sect571r1 OBJ_secg_ellipticCurve,39L#define NID_sect571r1 734#define SN_sect571r1 "sect571r1"#define OBJ_sect571k1 OBJ_secg_ellipticCurve,38L#define NID_sect571k1 733#define SN_sect571k1 "sect571k1"#define OBJ_sect409r1 OBJ_secg_ellipticCurve,37L#define NID_sect409r1 732#define SN_sect409r1 "sect409r1"#define OBJ_sect409k1 OBJ_secg_ellipticCurve,36L#define NID_sect409k1 731#define SN_sect409k1 "sect409k1"#define OBJ_sect283r1 OBJ_secg_ellipticCurve,17L#define NID_sect283r1 730#define SN_sect283r1 "sect283r1"#define OBJ_sect283k1 OBJ_secg_ellipticCurve,16L#define NID_sect283k1 729#define SN_sect283k1 "sect283k1"#define OBJ_sect239k1 OBJ_secg_ellipticCurve,3L#define NID_sect239k1 728#define SN_sect239k1 "sect239k1"#define OBJ_sect233r1 OBJ_secg_ellipticCurve,27L#define NID_sect233r1 727#define SN_sect233r1 "sect233r1"#define OBJ_sect233k1 OBJ_secg_ellipticCurve,26L#define NID_sect233k1 726#define SN_sect233k1 "sect233k1"#define OBJ_sect193r2 OBJ_secg_ellipticCurve,25L#define NID_sect193r2 725#define SN_sect193r2 "sect193r2"#define OBJ_sect193r1 OBJ_secg_ellipticCurve,24L#define NID_sect193r1 724#define SN_sect193r1 "sect193r1"#define OBJ_sect163r2 OBJ_secg_ellipticCurve,15L#define NID_sect163r2 723#define SN_sect163r2 "sect163r2"#define OBJ_sect163r1 OBJ_secg_ellipticCurve,2L#define NID_sect163r1 722#define SN_sect163r1 "sect163r1"#define OBJ_sect163k1 OBJ_secg_ellipticCurve,1L#define NID_sect163k1 721#define SN_sect163k1 "sect163k1"#define OBJ_sect131r2 OBJ_secg_ellipticCurve,23L#define NID_sect131r2 720#define SN_sect131r2 "sect131r2"#define OBJ_sect131r1 OBJ_secg_ellipticCurve,22L#define NID_sect131r1 719#define SN_sect131r1 "sect131r1"#define OBJ_sect113r2 OBJ_secg_ellipticCurve,5L#define NID_sect113r2 718#define SN_sect113r2 "sect113r2"#define OBJ_sect113r1 OBJ_secg_ellipticCurve,4L#define NID_sect113r1 717#define SN_sect113r1 "sect113r1"#define OBJ_secp521r1 OBJ_secg_ellipticCurve,35L#define NID_secp521r1 716#define SN_secp521r1 "secp521r1"#define OBJ_secp384r1 OBJ_secg_ellipticCurve,34L#define NID_secp384r1 715#define SN_secp384r1 "secp384r1"#define OBJ_secp256k1 OBJ_secg_ellipticCurve,10L#define NID_secp256k1 714#define SN_secp256k1 "secp256k1"#define OBJ_secp224r1 OBJ_secg_ellipticCurve,33L#define NID_secp224r1 713#define SN_secp224r1 "secp224r1"#define OBJ_secp224k1 OBJ_secg_ellipticCurve,32L#define NID_secp224k1 712#define SN_secp224k1 "secp224k1"#define OBJ_secp192k1 OBJ_secg_ellipticCurve,31L#define NID_secp192k1 711#define SN_secp192k1 "secp192k1"#define OBJ_secp160r2 OBJ_secg_ellipticCurve,30L#define NID_secp160r2 710#define SN_secp160r2 "secp160r2"#define OBJ_secp160r1 OBJ_secg_ellipticCurve,8L#define NID_secp160r1 709#define SN_secp160r1 "secp160r1"#define OBJ_secp160k1 OBJ_secg_ellipticCurve,9L#define NID_secp160k1 708#define SN_secp160k1 "secp160k1"#define OBJ_secp128r2 OBJ_secg_ellipticCurve,29L#define NID_secp128r2 707#define SN_secp128r2 "secp128r2"#define OBJ_secp128r1 OBJ_secg_ellipticCurve,28L#define NID_secp128r1 706#define SN_secp128r1 "secp128r1"#define OBJ_secp112r2 OBJ_secg_ellipticCurve,7L#define NID_secp112r2 705#define SN_secp112r2 "secp112r2"#define OBJ_secp112r1 OBJ_secg_ellipticCurve,6L#define NID_secp112r1 704#define SN_secp112r1 "secp112r1"#define OBJ_secg_ellipticCurve OBJ_certicom_arc,0L#define OBJ_ecdsa_with_SHA512 OBJ_ecdsa_with_Specified,4L#define NID_ecdsa_with_SHA512 796#define SN_ecdsa_with_SHA512 "ecdsa-with-SHA512"#define OBJ_ecdsa_with_SHA384 OBJ_ecdsa_with_Specified,3L#define NID_ecdsa_with_SHA384 795#define SN_ecdsa_with_SHA384 "ecdsa-with-SHA384"#define OBJ_ecdsa_with_SHA256 OBJ_ecdsa_with_Specified,2L#define NID_ecdsa_with_SHA256 794#define SN_ecdsa_with_SHA256 "ecdsa-with-SHA256"#define OBJ_ecdsa_with_SHA224 OBJ_ecdsa_with_Specified,1L#define NID_ecdsa_with_SHA224 793#define SN_ecdsa_with_SHA224 "ecdsa-with-SHA224"#define OBJ_ecdsa_with_Specified OBJ_X9_62_id_ecSigType,3L#define NID_ecdsa_with_Specified 792#define SN_ecdsa_with_Specified "ecdsa-with-Specified"#define OBJ_ecdsa_with_Recommended OBJ_X9_62_id_ecSigType,2L#define NID_ecdsa_with_Recommended 791#define SN_ecdsa_with_Recommended "ecdsa-with-Recommended"#define OBJ_ecdsa_with_SHA1 OBJ_X9_62_id_ecSigType,1L#define NID_ecdsa_with_SHA1 416#define SN_ecdsa_with_SHA1 "ecdsa-with-SHA1"#define OBJ_X9_62_id_ecSigType OBJ_ansi_X9_62,4L#define OBJ_X9_62_prime256v1 OBJ_X9_62_primeCurve,7L#define NID_X9_62_prime256v1 415#define SN_X9_62_prime256v1 "prime256v1"#define OBJ_X9_62_prime239v3 OBJ_X9_62_primeCurve,6L#define NID_X9_62_prime239v3 414#define SN_X9_62_prime239v3 "prime239v3"#define OBJ_X9_62_prime239v2 OBJ_X9_62_primeCurve,5L#define NID_X9_62_prime239v2 413#define SN_X9_62_prime239v2 "prime239v2"#define OBJ_X9_62_prime239v1 OBJ_X9_62_primeCurve,4L#define NID_X9_62_prime239v1 412#define SN_X9_62_prime239v1 "prime239v1"#define OBJ_X9_62_prime192v3 OBJ_X9_62_primeCurve,3L#define NID_X9_62_prime192v3 411#define SN_X9_62_prime192v3 "prime192v3"#define OBJ_X9_62_prime192v2 OBJ_X9_62_primeCurve,2L#define NID_X9_62_prime192v2 410#define SN_X9_62_prime192v2 "prime192v2"#define OBJ_X9_62_prime192v1 OBJ_X9_62_primeCurve,1L#define NID_X9_62_prime192v1 409#define SN_X9_62_prime192v1 "prime192v1"#define OBJ_X9_62_primeCurve OBJ_X9_62_ellipticCurve,1L#define OBJ_X9_62_c2tnb431r1 OBJ_X9_62_c_TwoCurve,20L#define NID_X9_62_c2tnb431r1 703#define SN_X9_62_c2tnb431r1 "c2tnb431r1"#define OBJ_X9_62_c2pnb368w1 OBJ_X9_62_c_TwoCurve,19L#define NID_X9_62_c2pnb368w1 702#define SN_X9_62_c2pnb368w1 "c2pnb368w1"#define OBJ_X9_62_c2tnb359v1 OBJ_X9_62_c_TwoCurve,18L#define NID_X9_62_c2tnb359v1 701#define SN_X9_62_c2tnb359v1 "c2tnb359v1"#define OBJ_X9_62_c2pnb304w1 OBJ_X9_62_c_TwoCurve,17L#define NID_X9_62_c2pnb304w1 700#define SN_X9_62_c2pnb304w1 "c2pnb304w1"#define OBJ_X9_62_c2pnb272w1 OBJ_X9_62_c_TwoCurve,16L#define NID_X9_62_c2pnb272w1 699#define SN_X9_62_c2pnb272w1 "c2pnb272w1"#define OBJ_X9_62_c2onb239v5 OBJ_X9_62_c_TwoCurve,15L#define NID_X9_62_c2onb239v5 698#define SN_X9_62_c2onb239v5 "c2onb239v5"#define OBJ_X9_62_c2onb239v4 OBJ_X9_62_c_TwoCurve,14L#define NID_X9_62_c2onb239v4 697#define SN_X9_62_c2onb239v4 "c2onb239v4"#define OBJ_X9_62_c2tnb239v3 OBJ_X9_62_c_TwoCurve,13L#define NID_X9_62_c2tnb239v3 696#define SN_X9_62_c2tnb239v3 "c2tnb239v3"#define OBJ_X9_62_c2tnb239v2 OBJ_X9_62_c_TwoCurve,12L#define NID_X9_62_c2tnb239v2 695#define SN_X9_62_c2tnb239v2 "c2tnb239v2"#define OBJ_X9_62_c2tnb239v1 OBJ_X9_62_c_TwoCurve,11L#define NID_X9_62_c2tnb239v1 694#define SN_X9_62_c2tnb239v1 "c2tnb239v1"#define OBJ_X9_62_c2pnb208w1 OBJ_X9_62_c_TwoCurve,10L#define NID_X9_62_c2pnb208w1 693#define SN_X9_62_c2pnb208w1 "c2pnb208w1"#define OBJ_X9_62_c2onb191v5 OBJ_X9_62_c_TwoCurve,9L#define NID_X9_62_c2onb191v5 692#define SN_X9_62_c2onb191v5 "c2onb191v5"#define OBJ_X9_62_c2onb191v4 OBJ_X9_62_c_TwoCurve,8L#define NID_X9_62_c2onb191v4 691#define SN_X9_62_c2onb191v4 "c2onb191v4"#define OBJ_X9_62_c2tnb191v3 OBJ_X9_62_c_TwoCurve,7L#define NID_X9_62_c2tnb191v3 690#define SN_X9_62_c2tnb191v3 "c2tnb191v3"#define OBJ_X9_62_c2tnb191v2 OBJ_X9_62_c_TwoCurve,6L#define NID_X9_62_c2tnb191v2 689#define SN_X9_62_c2tnb191v2 "c2tnb191v2"#define OBJ_X9_62_c2tnb191v1 OBJ_X9_62_c_TwoCurve,5L#define NID_X9_62_c2tnb191v1 688#define SN_X9_62_c2tnb191v1 "c2tnb191v1"#define OBJ_X9_62_c2pnb176v1 OBJ_X9_62_c_TwoCurve,4L#define NID_X9_62_c2pnb176v1 687#define SN_X9_62_c2pnb176v1 "c2pnb176v1"#define OBJ_X9_62_c2pnb163v3 OBJ_X9_62_c_TwoCurve,3L#define NID_X9_62_c2pnb163v3 686#define SN_X9_62_c2pnb163v3 "c2pnb163v3"#define OBJ_X9_62_c2pnb163v2 OBJ_X9_62_c_TwoCurve,2L#define NID_X9_62_c2pnb163v2 685#define SN_X9_62_c2pnb163v2 "c2pnb163v2"#define OBJ_X9_62_c2pnb163v1 OBJ_X9_62_c_TwoCurve,1L#define NID_X9_62_c2pnb163v1 684#define SN_X9_62_c2pnb163v1 "c2pnb163v1"#define OBJ_X9_62_c_TwoCurve OBJ_X9_62_ellipticCurve,0L#define OBJ_X9_62_ellipticCurve OBJ_ansi_X9_62,3L#define OBJ_X9_62_id_ecPublicKey OBJ_X9_62_id_publicKeyType,1L#define NID_X9_62_id_ecPublicKey 408#define SN_X9_62_id_ecPublicKey "id-ecPublicKey"#define OBJ_X9_62_id_publicKeyType OBJ_ansi_X9_62,2L#define OBJ_X9_62_ppBasis OBJ_X9_62_id_characteristic_two_basis,3L#define NID_X9_62_ppBasis 683#define SN_X9_62_ppBasis "ppBasis"#define OBJ_X9_62_tpBasis OBJ_X9_62_id_characteristic_two_basis,2L#define NID_X9_62_tpBasis 682#define SN_X9_62_tpBasis "tpBasis"#define OBJ_X9_62_onBasis OBJ_X9_62_id_characteristic_two_basis,1L#define NID_X9_62_onBasis 681#define SN_X9_62_onBasis "onBasis"#define OBJ_X9_62_id_characteristic_two_basis OBJ_X9_62_characteristic_two_field,3L#define NID_X9_62_id_characteristic_two_basis 680#define SN_X9_62_id_characteristic_two_basis "id-characteristic-two-basis"#define OBJ_X9_62_characteristic_two_field OBJ_X9_62_id_fieldType,2L#define NID_X9_62_characteristic_two_field 407#define SN_X9_62_characteristic_two_field "characteristic-two-field"#define OBJ_X9_62_prime_field OBJ_X9_62_id_fieldType,1L#define NID_X9_62_prime_field 406#define SN_X9_62_prime_field "prime-field"#define OBJ_X9_62_id_fieldType OBJ_ansi_X9_62,1L#define OBJ_ansi_X9_62 OBJ_ISO_US,10045L#define NID_ansi_X9_62 405#define LN_ansi_X9_62 "ANSI X9.62"#define SN_ansi_X9_62 "ansi-X9-62"#define OBJ_dsaWithSHA1 OBJ_X9cm,3L#define NID_dsaWithSHA1 113#define LN_dsaWithSHA1 "dsaWithSHA1"#define SN_dsaWithSHA1 "DSA-SHA1"#define OBJ_dsa OBJ_X9cm,1L#define NID_dsa 116#define LN_dsa "dsaEncryption"#define SN_dsa "DSA"#define OBJ_sm_scheme OBJ_oscca,1L#define NID_sm_scheme 1142#define SN_sm_scheme "sm-scheme"#define OBJ_oscca OBJ_ISO_CN,10197L#define NID_oscca 1141#define SN_oscca "oscca"#define OBJ_ISO_CN OBJ_member_body,156L#define NID_ISO_CN 1140#define LN_ISO_CN "ISO CN Member Body"#define SN_ISO_CN "ISO-CN"#define OBJ_X9cm OBJ_X9_57,4L#define NID_X9cm 185#define LN_X9cm "X9.57 CM ?"#define SN_X9cm "X9cm"#define OBJ_X9_57 OBJ_ISO_US,10040L#define NID_X9_57 184#define LN_X9_57 "X9.57"#define SN_X9_57 "X9-57"#define OBJ_ISO_US OBJ_member_body,840L#define NID_ISO_US 183#define LN_ISO_US "ISO US Member Body"#define SN_ISO_US "ISO-US"#define OBJ_clearance OBJ_selected_attribute_types,55L#define NID_clearance 395#define SN_clearance "clearance"#define OBJ_selected_attribute_types OBJ_joint_iso_itu_t,5L,1L,5L#define NID_selected_attribute_types 394#define LN_selected_attribute_types "Selected Attribute Types"#define SN_selected_attribute_types "selected-attribute-types"#define OBJ_wap_wsg OBJ_wap,1L#define NID_wap_wsg 679#define SN_wap_wsg "wap-wsg"#define OBJ_wap OBJ_international_organizations,43L#define NID_wap 678#define SN_wap "wap"#define OBJ_international_organizations OBJ_joint_iso_itu_t,23L#define NID_international_organizations 647#define LN_international_organizations "International Organizations"#define SN_international_organizations "international-organizations"#define OBJ_ieee_siswg OBJ_ieee,2L,1619L#define NID_ieee_siswg 1171#define LN_ieee_siswg "IEEE Security in Storage Working Group"#define SN_ieee_siswg "ieee-siswg"#define OBJ_ieee OBJ_identified_organization,111L#define NID_ieee 1170#define SN_ieee "ieee"#define OBJ_certicom_arc OBJ_identified_organization,132L#define NID_certicom_arc 677#define SN_certicom_arc "certicom-arc"#define OBJ_x509ExtAdmission OBJ_identified_organization,36L,8L,3L,3L#define NID_x509ExtAdmission 1093#define LN_x509ExtAdmission "Professional Information or basis for Admission"#define SN_x509ExtAdmission "x509ExtAdmission"#define OBJ_hmac_sha1 OBJ_identified_organization,6L,1L,5L,5L,8L,1L,2L#define NID_hmac_sha1 781#define LN_hmac_sha1 "hmac-sha1"#define SN_hmac_sha1 "HMAC-SHA1"#define OBJ_hmac_md5 OBJ_identified_organization,6L,1L,5L,5L,8L,1L,1L#define NID_hmac_md5 780#define LN_hmac_md5 "hmac-md5"#define SN_hmac_md5 "HMAC-MD5"#define OBJ_identified_organization OBJ_iso,3L#define NID_identified_organization 676#define SN_identified_organization "identified-organization"#define OBJ_member_body OBJ_iso,2L#define NID_member_body 182#define LN_member_body "ISO Member Body"#define SN_member_body "member-body"#define OBJ_joint_iso_ccitt OBJ_joint_iso_itu_t#define NID_joint_iso_ccitt 393#define OBJ_joint_iso_itu_t 2L#define NID_joint_iso_itu_t 646#define LN_joint_iso_itu_t "joint-iso-itu-t"#define SN_joint_iso_itu_t "JOINT-ISO-ITU-T"#define OBJ_iso 1L#define NID_iso 181#define LN_iso "iso"#define SN_iso "ISO"#define OBJ_ccitt OBJ_itu_t#define NID_ccitt 404#define OBJ_itu_t 0L#define NID_itu_t 645#define LN_itu_t "itu-t"#define SN_itu_t "ITU-T"#define OBJ_undef 0L#define NID_undef 0#define LN_undef "undefined"#define SN_undef "UNDEF"#define ASN1_R_WRONG_TAG 168#define ASN1_R_WRONG_PUBLIC_KEY_TYPE 200#define ASN1_R_WRONG_INTEGER_TYPE 225#define ASN1_R_UNSUPPORTED_TYPE 196#define ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE 167#define ASN1_R_UNSUPPORTED_CIPHER 228#define ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE 164#define ASN1_R_UNKNOWN_TAG 194#define ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM 199#define ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE 163#define ASN1_R_UNKNOWN_OBJECT_TYPE 162#define ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM 161#define ASN1_R_UNKNOWN_FORMAT 160#define ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH 215#define ASN1_R_UNEXPECTED_EOC 159#define ASN1_R_TYPE_NOT_PRIMITIVE 195#define ASN1_R_TYPE_NOT_CONSTRUCTED 156#define ASN1_R_TOO_SMALL 224#define ASN1_R_TOO_LONG 155#define ASN1_R_TOO_LARGE 223#define ASN1_R_TIME_NOT_ASCII_FORMAT 193#define ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD 154#define ASN1_R_STRING_TOO_SHORT 152#define ASN1_R_STRING_TOO_LONG 151#define ASN1_R_STREAMING_NOT_SUPPORTED 202#define ASN1_R_SIG_INVALID_MIME_TYPE 213#define ASN1_R_SHORT_LINE 150#define ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG 192#define ASN1_R_SEQUENCE_NOT_CONSTRUCTED 149#define ASN1_R_SEQUENCE_LENGTH_MISMATCH 148#define ASN1_R_SECOND_NUMBER_TOO_LARGE 147#define ASN1_R_ODD_NUMBER_OF_CHARS 145#define ASN1_R_OBJECT_NOT_ASCII_FORMAT 191#define ASN1_R_NULL_IS_WRONG_LENGTH 144#define ASN1_R_NO_SIG_CONTENT_TYPE 212#define ASN1_R_NO_MULTIPART_BOUNDARY 211#define ASN1_R_NO_MULTIPART_BODY_FAILURE 210#define ASN1_R_NO_MATCHING_CHOICE_TYPE 143#define ASN1_R_NO_CONTENT_TYPE 209#define ASN1_R_NOT_ENOUGH_DATA 142#define ASN1_R_NOT_ASCII_FORMAT 190#define ASN1_R_NON_HEX_CHARACTERS 141#define ASN1_R_NESTED_TOO_DEEP 201#define ASN1_R_NESTED_ASN1_STRING 197#define ASN1_R_MSTRING_WRONG_TAG 140#define ASN1_R_MSTRING_NOT_UNIVERSAL 139#define ASN1_R_MISSING_VALUE 189#define ASN1_R_MISSING_SECOND_NUMBER 138#define ASN1_R_MISSING_EOC 137#define ASN1_R_MIME_SIG_PARSE_ERROR 208#define ASN1_R_MIME_PARSE_ERROR 207#define ASN1_R_MIME_NO_CONTENT_TYPE 206#define ASN1_R_LIST_ERROR 188#define ASN1_R_INVALID_VALUE 219#define ASN1_R_INVALID_UTF8STRING 134#define ASN1_R_INVALID_UNIVERSALSTRING_LENGTH 133#define ASN1_R_INVALID_STRING_TABLE_VALUE 218#define ASN1_R_INVALID_SEPARATOR 131#define ASN1_R_INVALID_SCRYPT_PARAMETERS 227#define ASN1_R_INVALID_OBJECT_ENCODING 216#define ASN1_R_INVALID_NUMBER 187#define ASN1_R_INVALID_MODIFIER 186#define ASN1_R_INVALID_MIME_TYPE 205#define ASN1_R_INVALID_DIGIT 130#define ASN1_R_INVALID_BMPSTRING_LENGTH 129#define ASN1_R_INVALID_BIT_STRING_BITS_LEFT 220#define ASN1_R_INTEGER_TOO_LARGE_FOR_LONG 128#define ASN1_R_INTEGER_NOT_ASCII_FORMAT 185#define ASN1_R_ILLEGAL_ZERO_CONTENT 222#define ASN1_R_ILLEGAL_TIME_VALUE 184#define ASN1_R_ILLEGAL_TAGGED_ANY 127#define ASN1_R_ILLEGAL_PADDING 221#define ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE 170#define ASN1_R_ILLEGAL_OPTIONAL_ANY 126#define ASN1_R_ILLEGAL_OBJECT 183#define ASN1_R_ILLEGAL_NULL_VALUE 182#define ASN1_R_ILLEGAL_NULL 125#define ASN1_R_ILLEGAL_NESTED_TAGGING 181#define ASN1_R_ILLEGAL_NEGATIVE_VALUE 226#define ASN1_R_ILLEGAL_INTEGER 180#define ASN1_R_ILLEGAL_IMPLICIT_TAG 179#define ASN1_R_ILLEGAL_HEX 178#define ASN1_R_ILLEGAL_FORMAT 177#define ASN1_R_ILLEGAL_CHARACTERS 124#define ASN1_R_ILLEGAL_BOOLEAN 176#define ASN1_R_ILLEGAL_BITSTRING_FORMAT 175#define ASN1_R_HEADER_TOO_LONG 123#define ASN1_R_FIRST_NUM_TOO_LARGE 122#define ASN1_R_FIELD_MISSING 121#define ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED 120#define ASN1_R_EXPLICIT_LENGTH_MISMATCH 119#define ASN1_R_EXPECTING_AN_OBJECT 116#define ASN1_R_EXPECTING_AN_INTEGER 115#define ASN1_R_ERROR_SETTING_CIPHER_PARAMS 114#define ASN1_R_ERROR_LOADING_SECTION 172#define ASN1_R_ERROR_GETTING_TIME 173#define ASN1_R_ENCODE_ERROR 112#define ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED 198#define ASN1_R_DEPTH_EXCEEDED 174#define ASN1_R_DECODE_ERROR 110#define ASN1_R_DATA_IS_WRONG 109#define ASN1_R_CONTEXT_NOT_INITIALISED 217#define ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER 108#define ASN1_R_BUFFER_TOO_SMALL 107#define ASN1_R_BOOLEAN_IS_WRONG_LENGTH 106#define ASN1_R_BN_LIB 105#define ASN1_R_BMPSTRING_IS_WRONG_LENGTH 214#define ASN1_R_BAD_OBJECT_HEADER 102#define ASN1_R_AUX_ERROR 100#define ASN1_R_ASN1_SIG_PARSE_ERROR 204#define ASN1_R_ASN1_PARSE_ERROR 203#define ASN1_R_ADDING_OBJECT 171#define ASN1_F_X509_PKEY_NEW 173#define ASN1_F_X509_NAME_EX_NEW 171#define ASN1_F_X509_NAME_EX_D2I 158#define ASN1_F_X509_NAME_ENCODE 203#define ASN1_F_X509_INFO_NEW 170#define ASN1_F_X509_CRL_ADD0_REVOKED 169#define ASN1_F_UINT64_NEW 141#define ASN1_F_UINT64_C2I 112#define ASN1_F_UINT32_NEW 139#define ASN1_F_UINT32_C2I 105#define ASN1_F_STBL_MODULE_INIT 223#define ASN1_F_STABLE_GET 138#define ASN1_F_SMIME_TEXT 213#define ASN1_F_SMIME_READ_ASN1 212#define ASN1_F_PKCS5_SCRYPT_SET 232#define ASN1_F_PKCS5_PBKDF2_SET 219#define ASN1_F_PKCS5_PBE_SET0_ALGOR 215#define ASN1_F_PKCS5_PBE_SET 202#define ASN1_F_PKCS5_PBE2_SET_SCRYPT 231#define ASN1_F_PKCS5_PBE2_SET_IV 167#define ASN1_F_PARSE_TAGGING 182#define ASN1_F_OID_MODULE_INIT 174#define ASN1_F_NDEF_SUFFIX 136#define ASN1_F_NDEF_PREFIX 127#define ASN1_F_LONG_C2I 166#define ASN1_F_I2D_RSA_PUBKEY 165#define ASN1_F_I2D_PUBLICKEY 164#define ASN1_F_I2D_PRIVATEKEY 163#define ASN1_F_I2D_EC_PUBKEY 181#define ASN1_F_I2D_DSA_PUBKEY 161#define ASN1_F_I2D_ASN1_OBJECT 143#define ASN1_F_I2D_ASN1_BIO_STREAM 211#define ASN1_F_I2A_ASN1_OBJECT 126#define ASN1_F_DO_TCREATE 222#define ASN1_F_DO_DUMP 125#define ASN1_F_DO_CREATE 124#define ASN1_F_DO_BUF 142#define ASN1_F_D2I_PUBLICKEY 155#define ASN1_F_D2I_PRIVATEKEY 154#define ASN1_F_D2I_AUTOPRIVATEKEY 207#define ASN1_F_D2I_ASN1_UINTEGER 150#define ASN1_F_D2I_ASN1_OBJECT 147#define ASN1_F_COLLECT_DATA 140#define ASN1_F_C2I_UINT64_INT 101#define ASN1_F_C2I_IBUF 226#define ASN1_F_C2I_ASN1_OBJECT 196#define ASN1_F_C2I_ASN1_INTEGER 194#define ASN1_F_C2I_ASN1_BIT_STRING 189#define ASN1_F_BN_TO_ASN1_STRING 229#define ASN1_F_BITSTR_CB 180#define ASN1_F_BIO_NEW_NDEF 208#define ASN1_F_B64_WRITE_ASN1 210#define ASN1_F_B64_READ_ASN1 209#define ASN1_F_ASN1_VERIFY 137#define ASN1_F_ASN1_UTCTIME_ADJ 218#define ASN1_F_ASN1_TYPE_GET_OCTETSTRING 135#define ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING 134#define ASN1_F_ASN1_TIME_ADJ 217#define ASN1_F_ASN1_TEMPLATE_NOEXP_D2I 131#define ASN1_F_ASN1_TEMPLATE_NEW 133#define ASN1_F_ASN1_TEMPLATE_EX_D2I 132#define ASN1_F_ASN1_STRING_TYPE_NEW 130#define ASN1_F_ASN1_STRING_TO_BN 228#define ASN1_F_ASN1_STRING_TABLE_ADD 129#define ASN1_F_ASN1_STRING_SET 186#define ASN1_F_ASN1_STRING_GET_UINT64 230#define ASN1_F_ASN1_STRING_GET_INT64 227#define ASN1_F_ASN1_STR2TYPE 179#define ASN1_F_ASN1_SIGN 128#define ASN1_F_ASN1_SCTX_NEW 221#define ASN1_F_ASN1_PRIMITIVE_NEW 119#define ASN1_F_ASN1_PCTX_NEW 205#define ASN1_F_ASN1_OUTPUT_DATA 214#define ASN1_F_ASN1_OBJECT_NEW 123#define ASN1_F_ASN1_MBSTRING_NCOPY 122#define ASN1_F_ASN1_ITEM_VERIFY 197#define ASN1_F_ASN1_ITEM_UNPACK 199#define ASN1_F_ASN1_ITEM_SIGN_CTX 220#define ASN1_F_ASN1_ITEM_SIGN 195#define ASN1_F_ASN1_ITEM_PACK 198#define ASN1_F_ASN1_ITEM_I2D_FP 193#define ASN1_F_ASN1_ITEM_I2D_BIO 192#define ASN1_F_ASN1_ITEM_FLAGS_I2D 118#define ASN1_F_ASN1_ITEM_EMBED_NEW 121#define ASN1_F_ASN1_ITEM_EMBED_D2I 120#define ASN1_F_ASN1_ITEM_DUP 191#define ASN1_F_ASN1_ITEM_D2I_FP 206#define ASN1_F_ASN1_I2D_FP 117#define ASN1_F_ASN1_I2D_BIO 116#define ASN1_F_ASN1_GET_UINT64 225#define ASN1_F_ASN1_GET_OBJECT 114#define ASN1_F_ASN1_GET_INT64 224#define ASN1_F_ASN1_GENERATE_V3 178#define ASN1_F_ASN1_GENERALIZEDTIME_ADJ 216#define ASN1_F_ASN1_FIND_END 190#define ASN1_F_ASN1_EX_C2I 204#define ASN1_F_ASN1_ENC_SAVE 115#define ASN1_F_ASN1_DUP 111#define ASN1_F_ASN1_DO_LOCK 233#define ASN1_F_ASN1_DO_ADB 110#define ASN1_F_ASN1_DIGEST 184#define ASN1_F_ASN1_D2I_READ_BIO 107#define ASN1_F_ASN1_D2I_FP 109#define ASN1_F_ASN1_D2I_EX_PRIMITIVE 108#define ASN1_F_ASN1_COLLECT 106#define ASN1_F_ASN1_CHECK_TLEN 104#define ASN1_F_ASN1_CB 177#define ASN1_F_ASN1_BIT_STRING_SET_BIT 183#define ASN1_F_ASN1_BIO_INIT 113#define ASN1_F_APPEND_EXP 176#define ASN1_F_A2I_ASN1_STRING 103#define ASN1_F_A2I_ASN1_INTEGER 102#define ASN1_F_A2D_ASN1_OBJECT 100#define HEADER_ASN1ERR_H#define BN_R_TOO_MANY_TEMPORARY_VARIABLES 109#define BN_R_TOO_MANY_ITERATIONS 113#define BN_R_P_IS_NOT_PRIME 112#define BN_R_PRIVATE_KEY_TOO_LARGE 117#define BN_R_NO_SOLUTION 116#define BN_R_NO_INVERSE 108#define BN_R_NOT_INITIALIZED 107#define BN_R_NOT_A_SQUARE 111#define BN_R_INVALID_SHIFT 119#define BN_R_INVALID_RANGE 115#define BN_R_INVALID_LENGTH 106#define BN_R_INPUT_NOT_REDUCED 110#define BN_R_EXPAND_ON_STATIC_BIGNUM_DATA 105#define BN_R_ENCODING_ERROR 104#define BN_R_DIV_BY_ZERO 103#define BN_R_CALLED_WITH_EVEN_MODULUS 102#define BN_R_BITS_TOO_SMALL 118#define BN_R_BIGNUM_TOO_LONG 114#define BN_R_BAD_RECIPROCAL 101#define BN_R_ARG2_LT_ARG3 100#define BN_F_BN_USUB 115#define BN_F_BN_STACK_PUSH 148#define BN_F_BN_SET_WORDS 144#define BN_F_BN_RSHIFT 146#define BN_F_BN_RECP_CTX_NEW 150#define BN_F_BN_RAND_RANGE 122#define BN_F_BN_RAND 114#define BN_F_BN_POOL_GET 147#define BN_F_BN_NEW 113#define BN_F_BN_MPI2BN 112#define BN_F_BN_MONT_CTX_NEW 149#define BN_F_BN_MOD_SQRT 121#define BN_F_BN_MOD_LSHIFT_QUICK 119#define BN_F_BN_MOD_INVERSE_NO_BRANCH 139#define BN_F_BN_MOD_INVERSE 110#define BN_F_BN_MOD_EXP_SIMPLE 126#define BN_F_BN_MOD_EXP_RECP 125#define BN_F_BN_MOD_EXP_MONT_WORD 117#define BN_F_BN_MOD_EXP_MONT_CONSTTIME 124#define BN_F_BN_MOD_EXP_MONT 109#define BN_F_BN_MOD_EXP2_MONT 118#define BN_F_BN_LSHIFT 145#define BN_F_BN_GF2M_MOD_SQRT 137#define BN_F_BN_GF2M_MOD_SQR 136#define BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR 135#define BN_F_BN_GF2M_MOD_SOLVE_QUAD 134#define BN_F_BN_GF2M_MOD_MUL 133#define BN_F_BN_GF2M_MOD_EXP 132#define BN_F_BN_GF2M_MOD 131#define BN_F_BN_GENERATE_PRIME_EX 141#define BN_F_BN_GENERATE_DSA_NONCE 140#define BN_F_BN_GENCB_NEW 143#define BN_F_BN_EXPAND_INTERNAL 120#define BN_F_BN_EXP 123#define BN_F_BN_DIV_RECP 130#define BN_F_BN_DIV 107#define BN_F_BN_CTX_START 129#define BN_F_BN_CTX_NEW 106#define BN_F_BN_CTX_GET 116#define BN_F_BN_COMPUTE_WNAF 142#define BN_F_BN_BN2HEX 105#define BN_F_BN_BN2DEC 104#define BN_F_BN_BLINDING_UPDATE 103#define BN_F_BN_BLINDING_NEW 102#define BN_F_BN_BLINDING_INVERT_EX 101#define BN_F_BN_BLINDING_CREATE_PARAM 128#define BN_F_BN_BLINDING_CONVERT_EX 100#define BN_F_BNRAND_RANGE 138#define BN_F_BNRAND 127#define HEADER_BNERR_H#define get_rfc3526_prime_8192 BN_get_rfc3526_prime_8192#define get_rfc3526_prime_6144 BN_get_rfc3526_prime_6144#define get_rfc3526_prime_4096 BN_get_rfc3526_prime_4096#define get_rfc3526_prime_3072 BN_get_rfc3526_prime_3072#define get_rfc3526_prime_2048 BN_get_rfc3526_prime_2048#define get_rfc3526_prime_1536 BN_get_rfc3526_prime_1536#define get_rfc2409_prime_1024 BN_get_rfc2409_prime_1024#define get_rfc2409_prime_768 BN_get_rfc2409_prime_768#define BN_GF2m_cmp(a,b) BN_ucmp((a), (b))#define BN_GF2m_sub(r,a,b) BN_GF2m_add(r, a, b)#define BN_BLINDING_NO_RECREATE 0x00000002#define BN_BLINDING_NO_UPDATE 0x00000001#define BN_mod(rem,m,d,ctx) BN_div(NULL,(rem),(m),(d),(ctx))#define BN_zero(a) (BN_set_word((a),0))#define BN_one(a) (BN_set_word((a),1))#define BN_num_bytes(a) ((BN_num_bits(a)+7)/8)#define BN_prime_checks_for_size(b) ((b) >= 3747 ? 3 : (b) >= 1345 ? 4 : (b) >= 476 ? 5 : (b) >= 400 ? 6 : (b) >= 347 ? 7 : (b) >= 308 ? 8 : (b) >= 55 ? 27 : 34)#define BN_prime_checks 0#define BN_RAND_BOTTOM_ODD 1#define BN_RAND_BOTTOM_ANY 0#define BN_RAND_TOP_TWO 1#define BN_RAND_TOP_ONE 0#define BN_RAND_TOP_ANY -1#define BN_FLG_FREE 0x8000#define BN_FLG_EXP_CONSTTIME BN_FLG_CONSTTIME#define BN_FLG_SECURE 0x08#define BN_FLG_CONSTTIME 0x04#define BN_FLG_STATIC_DATA 0x02#define BN_FLG_MALLOCED 0x01#define BN_TBIT ((BN_ULONG)1 << (BN_BITS2 - 1))#define BN_BITS (BN_BITS2 * 2)#define BN_BITS2 (BN_BYTES * 8)#define BN_BYTES 8#define BN_ULONG unsigned long#define HEADER_BN_H#define TYPEDEF_I2D_OF(type) typedef int i2d_of_ ## type(type *,unsigned char **)#define TYPEDEF_D2I2D_OF(type) TYPEDEF_D2I_OF(type); TYPEDEF_I2D_OF(type)#define TYPEDEF_D2I_OF(type) typedef type *d2i_of_ ## type(type **,const unsigned char **,long)#define DECLARE_ASN1_ITEM(name) OPENSSL_EXTERN const ASN1_ITEM name ## _it;#define DECLARE_ASN1_ENCODE_FUNCTIONS(type,itname,name) type *d2i_ ## name(type **a, const unsigned char **in, long len); int i2d_ ## name(type *a, unsigned char **out); DECLARE_ASN1_ITEM(itname)#define DECLARE_ASN1_FUNCTIONS_name(type,name) DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) DECLARE_ASN1_ENCODE_FUNCTIONS(type, name, name)#define DECLARE_ASN1_FUNCTIONS(type) DECLARE_ASN1_FUNCTIONS_name(type, type)#define DECLARE_ASN1_FUNCTIONS_fname(type,itname,name) DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) DECLARE_ASN1_ENCODE_FUNCTIONS(type, itname, name)#define DECLARE_ASN1_ENCODE_FUNCTIONS_const(type,name) type *d2i_ ## name(type **a, const unsigned char **in, long len); int i2d_ ## name(const type *a, unsigned char **out); DECLARE_ASN1_ITEM(name)#define ASN1_PCTX_FLAGS_NO_STRUCT_NAME 0x100#define ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME 0x080#define ASN1_PCTX_FLAGS_NO_FIELD_NAME 0x040#define ASN1_PCTX_FLAGS_NO_MSTRING_TYPE 0x020#define ASN1_PCTX_FLAGS_NO_ANY_TYPE 0x010#define ASN1_PCTX_FLAGS_SHOW_TYPE 0x008#define ASN1_PCTX_FLAGS_SHOW_SSOF 0x004#define ASN1_PCTX_FLAGS_SHOW_SEQUENCE 0x002#define ASN1_PCTX_FLAGS_SHOW_ABSENT 0x001#define ASN1_i2d_bio_of_const(type,i2d,out,x) (ASN1_i2d_bio(CHECKED_I2D_OF(const type, i2d), out, CHECKED_PTR_OF(const type, x)))#define ASN1_i2d_bio_of(type,i2d,out,x) (ASN1_i2d_bio(CHECKED_I2D_OF(type, i2d), out, CHECKED_PTR_OF(type, x)))#define ASN1_d2i_bio_of(type,xnew,d2i,in,x) ((type*)ASN1_d2i_bio( CHECKED_NEW_OF(type, xnew), CHECKED_D2I_OF(type, d2i), in, CHECKED_PPTR_OF(type, x)))#define ASN1_i2d_fp_of_const(type,i2d,out,x) (ASN1_i2d_fp(CHECKED_I2D_OF(const type, i2d), out, CHECKED_PTR_OF(const type, x)))#define ASN1_i2d_fp_of(type,i2d,out,x) (ASN1_i2d_fp(CHECKED_I2D_OF(type, i2d), out, CHECKED_PTR_OF(type, x)))#define ASN1_d2i_fp_of(type,xnew,d2i,in,x) ((type*)ASN1_d2i_fp(CHECKED_NEW_OF(type, xnew), CHECKED_D2I_OF(type, d2i), in, CHECKED_PPTR_OF(type, x)))#define M_ASN1_free_of(x,type) ASN1_item_free(CHECKED_PTR_OF(type, x), ASN1_ITEM_rptr(type))#define M_ASN1_new_of(type) (type *)ASN1_item_new(ASN1_ITEM_rptr(type))#define ASN1_dup_of_const(type,i2d,d2i,x) ((type*)ASN1_dup(CHECKED_I2D_OF(const type, i2d), CHECKED_D2I_OF(type, d2i), CHECKED_PTR_OF(const type, x)))#define ASN1_dup_of(type,i2d,d2i,x) ((type*)ASN1_dup(CHECKED_I2D_OF(type, i2d), CHECKED_D2I_OF(type, d2i), CHECKED_PTR_OF(type, x)))#define B_ASN1_DISPLAYTEXT B_ASN1_IA5STRING| B_ASN1_VISIBLESTRING| B_ASN1_BMPSTRING| B_ASN1_UTF8STRING#define B_ASN1_DIRECTORYSTRING B_ASN1_PRINTABLESTRING| B_ASN1_TELETEXSTRING| B_ASN1_BMPSTRING| B_ASN1_UNIVERSALSTRING| B_ASN1_UTF8STRING#define B_ASN1_PRINTABLE B_ASN1_NUMERICSTRING| B_ASN1_PRINTABLESTRING| B_ASN1_T61STRING| B_ASN1_IA5STRING| B_ASN1_BIT_STRING| B_ASN1_UNIVERSALSTRING| B_ASN1_BMPSTRING| B_ASN1_UTF8STRING| B_ASN1_SEQUENCE| B_ASN1_UNKNOWN#define B_ASN1_TIME B_ASN1_UTCTIME | B_ASN1_GENERALIZEDTIME#define ASN1_STRFLGS_RFC2253 (ASN1_STRFLGS_ESC_2253 | ASN1_STRFLGS_ESC_CTRL | ASN1_STRFLGS_ESC_MSB | ASN1_STRFLGS_UTF8_CONVERT | ASN1_STRFLGS_DUMP_UNKNOWN | ASN1_STRFLGS_DUMP_DER)#define ASN1_STRFLGS_ESC_2254 0x400#define ASN1_STRFLGS_DUMP_DER 0x200#define ASN1_STRFLGS_DUMP_UNKNOWN 0x100#define ASN1_STRFLGS_DUMP_ALL 0x80#define ASN1_STRFLGS_SHOW_TYPE 0x40#define ASN1_STRFLGS_IGNORE_TYPE 0x20#define ASN1_STRFLGS_UTF8_CONVERT 0x10#define CHARTYPE_LAST_ESC_2253 0x40#define CHARTYPE_FIRST_ESC_2253 0x20#define CHARTYPE_PRINTABLESTRING 0x10#define ASN1_STRFLGS_ESC_QUOTE 8#define ASN1_STRFLGS_ESC_MSB 4#define ASN1_STRFLGS_ESC_CTRL 2#define ASN1_STRFLGS_ESC_2253 1#define ASN1_ITEM_rptr(ref) (&(ref ## _it))#define ASN1_ITEM_ref(iptr) (&(iptr ## _it))#define ASN1_ITEM_ptr(iptr) (iptr)#define CHECKED_PPTR_OF(type,p) ((void**) (1 ? p : (type**)0))#define CHECKED_PTR_OF(type,p) ((void*) (1 ? p : (type*)0))#define CHECKED_NEW_OF(type,xnew) ((void *(*)(void)) (1 ? xnew : ((type *(*)(void))0)))#define CHECKED_I2D_OF(type,i2d) ((i2d_of_void*) (1 ? i2d : ((I2D_OF(type))0)))#define CHECKED_D2I_OF(type,d2i) ((d2i_of_void*) (1 ? d2i : ((D2I_OF(type))0)))#define I2D_OF_const(type) int (*)(const type *,unsigned char **)#define I2D_OF(type) int (*)(type *,unsigned char **)#define D2I_OF(type) type *(*)(type **,const unsigned char **,long)#define DECLARE_ASN1_PRINT_FUNCTION_fname(stname,fname) int fname ## _print_ctx(BIO *out, stname *x, int indent, const ASN1_PCTX *pctx);#define DECLARE_ASN1_PRINT_FUNCTION(stname) DECLARE_ASN1_PRINT_FUNCTION_fname(stname, stname)#define DECLARE_ASN1_ALLOC_FUNCTIONS_name(type,name) type *name ## _new(void); void name ## _free(type *a);#define DECLARE_ASN1_FUNCTIONS_const(name) DECLARE_ASN1_ALLOC_FUNCTIONS(name) DECLARE_ASN1_ENCODE_FUNCTIONS_const(name, name)#define DECLARE_ASN1_NDEF_FUNCTION(name) int i2d_ ## name ## _NDEF(name *a, unsigned char **out);#define DECLARE_ASN1_ALLOC_FUNCTIONS(type) DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, type)#define ub_email_address 128#define ub_title 64#define ub_organization_unit_name 64#define ub_organization_name 64#define ub_state_name 128#define ub_locality_name 128#define ub_common_name 64#define ub_name 32768#define PKCS9STRING_TYPE (DIRSTRING_TYPE|B_ASN1_IA5STRING)#define DIRSTRING_TYPE (B_ASN1_PRINTABLESTRING|B_ASN1_T61STRING|B_ASN1_BMPSTRING|B_ASN1_UTF8STRING)#define STABLE_NO_MASK 0x02#define STABLE_FLAGS_CLEAR STABLE_FLAGS_MALLOC#define STABLE_FLAGS_MALLOC 0x01#define ASN1_LONG_UNDEF 0x7fffffffL#define ASN1_STRING_FLAG_X509_TIME 0x100#define ASN1_STRING_FLAG_EMBED 0x080#define ASN1_STRING_FLAG_MSTRING 0x040#define ASN1_STRING_FLAG_CONT 0x020#define ASN1_STRING_FLAG_NDEF 0x010#define ASN1_STRING_FLAG_BITS_LEFT 0x08#define SMIME_STREAM 0x1000#define SMIME_CRLFEOL 0x800#define SMIME_OLDMIME 0x400#define MBSTRING_UNIV (MBSTRING_FLAG|4)#define MBSTRING_BMP (MBSTRING_FLAG|2)#define MBSTRING_ASC (MBSTRING_FLAG|1)#define MBSTRING_UTF8 (MBSTRING_FLAG)#define MBSTRING_FLAG 0x1000#define B_ASN1_SEQUENCE 0x10000#define B_ASN1_GENERALIZEDTIME 0x8000#define B_ASN1_UTCTIME 0x4000#define B_ASN1_UTF8STRING 0x2000#define B_ASN1_UNKNOWN 0x1000#define B_ASN1_BMPSTRING 0x0800#define B_ASN1_BIT_STRING 0x0400#define B_ASN1_OCTET_STRING 0x0200#define B_ASN1_UNIVERSALSTRING 0x0100#define B_ASN1_GENERALSTRING 0x0080#define B_ASN1_VISIBLESTRING 0x0040#define B_ASN1_ISO64STRING 0x0040#define B_ASN1_GRAPHICSTRING 0x0020#define B_ASN1_IA5STRING 0x0010#define B_ASN1_VIDEOTEXSTRING 0x0008#define B_ASN1_TELETEXSTRING 0x0004#define B_ASN1_T61STRING 0x0004#define B_ASN1_PRINTABLESTRING 0x0002#define B_ASN1_NUMERICSTRING 0x0001#define V_ASN1_NEG_ENUMERATED (10 | V_ASN1_NEG)#define V_ASN1_NEG_INTEGER (2 | V_ASN1_NEG)#define V_ASN1_NEG 0x100#define V_ASN1_BMPSTRING 30#define V_ASN1_UNIVERSALSTRING 28#define V_ASN1_GENERALSTRING 27#define V_ASN1_VISIBLESTRING 26#define V_ASN1_ISO64STRING 26#define V_ASN1_GRAPHICSTRING 25#define V_ASN1_GENERALIZEDTIME 24#define V_ASN1_UTCTIME 23#define V_ASN1_IA5STRING 22#define V_ASN1_VIDEOTEXSTRING 21#define V_ASN1_TELETEXSTRING 20#define V_ASN1_T61STRING 20#define V_ASN1_PRINTABLESTRING 19#define V_ASN1_NUMERICSTRING 18#define V_ASN1_SET 17#define V_ASN1_SEQUENCE 16#define V_ASN1_UTF8STRING 12#define V_ASN1_ENUMERATED 10#define V_ASN1_REAL 9#define V_ASN1_EXTERNAL 8#define V_ASN1_OBJECT_DESCRIPTOR 7#define V_ASN1_OBJECT 6#define V_ASN1_NULL 5#define V_ASN1_OCTET_STRING 4#define V_ASN1_BIT_STRING 3#define V_ASN1_INTEGER 2#define V_ASN1_BOOLEAN 1#define V_ASN1_EOC 0#define V_ASN1_UNDEF -1#define V_ASN1_ANY -4#define V_ASN1_OTHER -3#define V_ASN1_APP_CHOOSE -2#define V_ASN1_PRIMATIVE_TAG V_ASN1_PRIMITIVE_TAG#define V_ASN1_PRIMITIVE_TAG 0x1f#define V_ASN1_CONSTRUCTED 0x20#define V_ASN1_PRIVATE 0xc0#define V_ASN1_CONTEXT_SPECIFIC 0x80#define V_ASN1_APPLICATION 0x40#define V_ASN1_UNIVERSAL 0x00#define HEADER_ASN1_H#define OBJ_R_UNKNOWN_NID 101#define OBJ_R_OID_EXISTS 102#define OBJ_F_OBJ_TXT2OBJ 108#define OBJ_F_OBJ_NID2SN 104#define OBJ_F_OBJ_NID2OBJ 103#define OBJ_F_OBJ_NID2LN 102#define OBJ_F_OBJ_NAME_NEW_INDEX 106#define OBJ_F_OBJ_DUP 101#define OBJ_F_OBJ_CREATE 100#define OBJ_F_OBJ_ADD_SIGID 107#define OBJ_F_OBJ_ADD_OBJECT 105#define HEADER_OBJERR_H#define OBJ_cleanup() while(0) continue#define OBJ_bsearch_ex(type1,key,type2,base,num,cmp,flags) ((type2 *)OBJ_bsearch_ex_(CHECKED_PTR_OF(type1,key),CHECKED_PTR_OF(type2,base), num,sizeof(type2), ((void)CHECKED_PTR_OF(type1,cmp ## _type_1), (void)type_2=CHECKED_PTR_OF(type2,cmp ## _type_2), cmp ## _BSEARCH_CMP_FN)),flags)#define OBJ_bsearch(type1,key,type2,base,num,cmp) ((type2 *)OBJ_bsearch_(CHECKED_PTR_OF(type1,key),CHECKED_PTR_OF(type2,base), num,sizeof(type2), ((void)CHECKED_PTR_OF(type1,cmp ## _type_1), (void)CHECKED_PTR_OF(type2,cmp ## _type_2), cmp ## _BSEARCH_CMP_FN)))#define IMPLEMENT_OBJ_BSEARCH_GLOBAL_CMP_FN(type1,type2,nm) static int nm ## _cmp_BSEARCH_CMP_FN(const void *a_, const void *b_) { type1 const *a = a_; type2 const *b = b_; return nm ## _cmp(a,b); } type2 *OBJ_bsearch_ ## nm(type1 *key, type2 const *base, int num) { return (type2 *)OBJ_bsearch_(key, base, num, sizeof(type2), nm ## _cmp_BSEARCH_CMP_FN); } extern void dummy_prototype(void)#define IMPLEMENT_OBJ_BSEARCH_CMP_FN(type1,type2,nm) static int nm ## _cmp_BSEARCH_CMP_FN(const void *a_, const void *b_) { type1 const *a = a_; type2 const *b = b_; return nm ## _cmp(a,b); } static type2 *OBJ_bsearch_ ## nm(type1 *key, type2 const *base, int num) { return (type2 *)OBJ_bsearch_(key, base, num, sizeof(type2), nm ## _cmp_BSEARCH_CMP_FN); } extern void dummy_prototype(void)#define DECLARE_OBJ_BSEARCH_GLOBAL_CMP_FN(type1,type2,nm) type2 * OBJ_bsearch_ ## nm(type1 *key, type2 const *base, int num)#define DECLARE_OBJ_BSEARCH_CMP_FN(type1,type2,cmp) _DECLARE_OBJ_BSEARCH_CMP_FN(static, type1, type2, cmp)#define _DECLARE_OBJ_BSEARCH_CMP_FN(scope,type1,type2,nm) static int nm ## _cmp_BSEARCH_CMP_FN(const void *, const void *); static int nm ## _cmp(type1 const *, type2 const *); scope type2 * OBJ_bsearch_ ## nm(type1 *key, type2 const *base, int num)#define OBJ_create_and_add_object(a,b,c) OBJ_create(a,b,c)#define OBJ_BSEARCH_FIRST_VALUE_ON_MATCH 0x02#define OBJ_BSEARCH_VALUE_ON_NOMATCH 0x01#define OBJ_NAME_ALIAS 0x8000#define OBJ_NAME_TYPE_NUM 0x05#define OBJ_NAME_TYPE_COMP_METH 0x04#define OBJ_NAME_TYPE_PKEY_METH 0x03#define OBJ_NAME_TYPE_CIPHER_METH 0x02#define OBJ_NAME_TYPE_MD_METH 0x01#define OBJ_NAME_TYPE_UNDEF 0x00#define HEADER_OBJECTS_H#define EVP_MAX_IV_LENGTH 16#define EVP_PKEY_FLAG_SIGCTX_CUSTOM 4#define EVP_PKEY_FLAG_AUTOARGLEN 2#define EVP_PKEY_ALG_CTRL 0x1000#define EVP_PKEY_CTRL_SET_DIGEST_SIZE 14#define EVP_PKEY_CTRL_GET_MD 13#define EVP_PKEY_CTRL_CIPHER 12#define EVP_PKEY_CTRL_CMS_SIGN 11#define EVP_PKEY_CTRL_CMS_DECRYPT 10#define EVP_PKEY_CTRL_CMS_ENCRYPT 9#define EVP_PKEY_CTRL_SET_IV 8#define EVP_PKEY_CTRL_DIGESTINIT 7#define EVP_PKEY_CTRL_SET_MAC_KEY 6#define EVP_PKEY_CTRL_PKCS7_SIGN 5#define EVP_PKEY_CTRL_PKCS7_DECRYPT 4#define EVP_PKEY_CTRL_PKCS7_ENCRYPT 3#define EVP_PKEY_CTRL_PEER_KEY 2#define EVP_PKEY_CTRL_MD 1#define EVP_PKEY_CTX_set_mac_key(ctx,key,len) EVP_PKEY_CTX_ctrl(ctx, -1, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_SET_MAC_KEY, len, (void *)(key))#define EVP_PKEY_CTX_get_signature_md(ctx,pmd) EVP_PKEY_CTX_ctrl(ctx, -1, EVP_PKEY_OP_TYPE_SIG, EVP_PKEY_CTRL_GET_MD, 0, (void *)(pmd))#define EVP_PKEY_CTX_set_signature_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, -1, EVP_PKEY_OP_TYPE_SIG, EVP_PKEY_CTRL_MD, 0, (void *)(md))#define EVP_PKEY_OP_TYPE_GEN (EVP_PKEY_OP_PARAMGEN | EVP_PKEY_OP_KEYGEN)#define EVP_PKEY_OP_TYPE_NOGEN (EVP_PKEY_OP_TYPE_SIG | EVP_PKEY_OP_TYPE_CRYPT | EVP_PKEY_OP_DERIVE)#define EVP_PKEY_OP_TYPE_CRYPT (EVP_PKEY_OP_ENCRYPT | EVP_PKEY_OP_DECRYPT)#define EVP_PKEY_OP_TYPE_SIG (EVP_PKEY_OP_SIGN | EVP_PKEY_OP_VERIFY | EVP_PKEY_OP_VERIFYRECOVER | EVP_PKEY_OP_SIGNCTX | EVP_PKEY_OP_VERIFYCTX)#define EVP_PKEY_OP_DERIVE (1<<10)#define EVP_PKEY_OP_DECRYPT (1<<9)#define EVP_PKEY_OP_ENCRYPT (1<<8)#define EVP_PKEY_OP_VERIFYCTX (1<<7)#define EVP_PKEY_OP_SIGNCTX (1<<6)#define EVP_PKEY_OP_VERIFYRECOVER (1<<5)#define EVP_PKEY_OP_VERIFY (1<<4)#define EVP_PKEY_OP_SIGN (1<<3)#define EVP_PKEY_OP_KEYGEN (1<<2)#define EVP_PKEY_OP_PARAMGEN (1<<1)#define EVP_PKEY_OP_UNDEFINED 0#define ASN1_PKEY_CTRL_GET1_TLS_ENCPT 0xa#define ASN1_PKEY_CTRL_SET1_TLS_ENCPT 0x9#define ASN1_PKEY_CTRL_CMS_RI_TYPE 0x8#define ASN1_PKEY_CTRL_CMS_ENVELOPE 0x7#define ASN1_PKEY_CTRL_CMS_SIGN 0x5#define ASN1_PKEY_CTRL_DEFAULT_MD_NID 0x3#define ASN1_PKEY_CTRL_PKCS7_ENCRYPT 0x2#define ASN1_PKEY_CTRL_PKCS7_SIGN 0x1#define ASN1_PKEY_SIGPARAM_NULL 0x4#define ASN1_PKEY_DYNAMIC 0x2#define ASN1_PKEY_ALIAS 0x1#define EVP_PBE_TYPE_KDF 0x2#define EVP_PBE_TYPE_PRF 0x1#define EVP_PBE_TYPE_OUTER 0x0#define EVP_cleanup() while(0) continue#define OpenSSL_add_all_digests() OPENSSL_init_crypto(OPENSSL_INIT_ADD_ALL_DIGESTS, NULL)#define OpenSSL_add_all_ciphers() OPENSSL_init_crypto(OPENSSL_INIT_ADD_ALL_CIPHERS, NULL)#define OpenSSL_add_all_algorithms() OPENSSL_init_crypto(OPENSSL_INIT_ADD_ALL_CIPHERS | OPENSSL_INIT_ADD_ALL_DIGESTS, NULL)#define OPENSSL_add_all_algorithms_noconf() OPENSSL_init_crypto(OPENSSL_INIT_ADD_ALL_CIPHERS | OPENSSL_INIT_ADD_ALL_DIGESTS, NULL)#define OPENSSL_add_all_algorithms_conf() OPENSSL_init_crypto(OPENSSL_INIT_ADD_ALL_CIPHERS | OPENSSL_INIT_ADD_ALL_DIGESTS | OPENSSL_INIT_LOAD_CONFIG, NULL)#define EVP_sm4_cfb EVP_sm4_cfb128#define EVP_seed_cfb EVP_seed_cfb128#define EVP_camellia_256_cfb EVP_camellia_256_cfb128#define EVP_camellia_192_cfb EVP_camellia_192_cfb128#define EVP_camellia_128_cfb EVP_camellia_128_cfb128#define EVP_aria_256_cfb EVP_aria_256_cfb128#define EVP_aria_192_cfb EVP_aria_192_cfb128#define EVP_aria_128_cfb EVP_aria_128_cfb128#define EVP_aes_256_cfb EVP_aes_256_cfb128#define EVP_aes_192_cfb EVP_aes_192_cfb128#define EVP_aes_128_cfb EVP_aes_128_cfb128#define EVP_cast5_cfb EVP_cast5_cfb64#define EVP_bf_cfb EVP_bf_cfb64#define EVP_rc2_cfb EVP_rc2_cfb64#define EVP_des_ede3_cfb EVP_des_ede3_cfb64#define EVP_des_ede_cfb EVP_des_ede_cfb64#define EVP_des_cfb EVP_des_cfb64#define EVP_CIPHER_CTX_cleanup(c) EVP_CIPHER_CTX_reset(c)#define EVP_CIPHER_CTX_init(c) EVP_CIPHER_CTX_reset(c)#define EVP_MD_CTX_destroy(ctx) EVP_MD_CTX_free((ctx))#define EVP_MD_CTX_init(ctx) EVP_MD_CTX_reset((ctx))#define EVP_MD_CTX_create() EVP_MD_CTX_new()#define EVP_delete_digest_alias(alias) OBJ_NAME_remove(alias,OBJ_NAME_TYPE_MD_METH|OBJ_NAME_ALIAS);#define EVP_delete_cipher_alias(alias) OBJ_NAME_remove(alias,OBJ_NAME_TYPE_CIPHER_METH|OBJ_NAME_ALIAS);#define EVP_add_digest_alias(n,alias) OBJ_NAME_add((alias),OBJ_NAME_TYPE_MD_METH|OBJ_NAME_ALIAS,(n))#define EVP_add_cipher_alias(n,alias) OBJ_NAME_add((alias),OBJ_NAME_TYPE_CIPHER_METH|OBJ_NAME_ALIAS,(n))#define BIO_get_cipher_ctx(b,c_pp) BIO_ctrl(b,BIO_C_GET_CIPHER_CTX,0, (char *)(c_pp))#define BIO_get_cipher_status(b) BIO_ctrl(b,BIO_C_GET_CIPHER_STATUS,0,NULL)#define BIO_set_md_ctx(b,mdcp) BIO_ctrl(b,BIO_C_SET_MD_CTX,0, (char *)(mdcp))#define BIO_get_md_ctx(b,mdcp) BIO_ctrl(b,BIO_C_GET_MD_CTX,0, (char *)(mdcp))#define BIO_get_md(b,mdp) BIO_ctrl(b,BIO_C_GET_MD,0,(char *)(mdp))#define BIO_set_md(b,md) BIO_ctrl(b,BIO_C_SET_MD,0,(char *)(md))#define EVP_DigestVerifyUpdate(a,b,c) EVP_DigestUpdate(a,b,c)#define EVP_DigestSignUpdate(a,b,c) EVP_DigestUpdate(a,b,c)#define EVP_SealUpdate(a,b,c,d,e) EVP_EncryptUpdate(a,b,c,d,e)#define EVP_OpenUpdate(a,b,c,d,e) EVP_DecryptUpdate(a,b,c,d,e)#define EVP_VerifyUpdate(a,b,c) EVP_DigestUpdate(a,b,c)#define EVP_VerifyInit(a,b) EVP_DigestInit(a,b)#define EVP_VerifyInit_ex(a,b,c) EVP_DigestInit_ex(a,b,c)#define EVP_SignUpdate(a,b,c) EVP_DigestUpdate(a,b,c)#define EVP_SignInit(a,b) EVP_DigestInit(a,b)#define EVP_SignInit_ex(a,b,c) EVP_DigestInit_ex(a,b,c)#define EVP_DECODE_LENGTH(l) (((l)+3)/4*3+80)#define EVP_ENCODE_LENGTH(l) ((((l)+2)/3*4)+((l)/48+1)*2+80)#define EVP_CIPHER_CTX_mode(c) EVP_CIPHER_mode(EVP_CIPHER_CTX_cipher(c))#define EVP_CIPHER_CTX_flags(c) EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(c))#define EVP_CIPHER_CTX_type(c) EVP_CIPHER_type(EVP_CIPHER_CTX_cipher(c))#define EVP_CIPHER_mode(e) (EVP_CIPHER_flags(e) & EVP_CIPH_MODE)#define EVP_CIPHER_name(e) OBJ_nid2sn(EVP_CIPHER_nid(e))#define EVP_MD_CTX_type(e) EVP_MD_type(EVP_MD_CTX_md(e))#define EVP_MD_CTX_block_size(e) EVP_MD_block_size(EVP_MD_CTX_md(e))#define EVP_MD_CTX_size(e) EVP_MD_size(EVP_MD_CTX_md(e))#define EVP_MD_name(e) OBJ_nid2sn(EVP_MD_nid(e))#define EVP_MD_nid(e) EVP_MD_type(e)#define EVP_get_cipherbyobj(a) EVP_get_cipherbynid(OBJ_obj2nid(a))#define EVP_get_cipherbynid(a) EVP_get_cipherbyname(OBJ_nid2sn(a))#define EVP_get_digestbyobj(a) EVP_get_digestbynid(OBJ_obj2nid(a))#define EVP_get_digestbynid(a) EVP_get_digestbyname(OBJ_nid2sn(a))#define EVP_PKEY_assign_POLY1305(pkey,polykey) EVP_PKEY_assign((pkey),EVP_PKEY_POLY1305, (char *)(polykey))#define EVP_PKEY_assign_SIPHASH(pkey,shkey) EVP_PKEY_assign((pkey),EVP_PKEY_SIPHASH, (char *)(shkey))#define EVP_PKEY_assign_EC_KEY(pkey,eckey) EVP_PKEY_assign((pkey),EVP_PKEY_EC, (char *)(eckey))#define EVP_PKEY_assign_DH(pkey,dh) EVP_PKEY_assign((pkey),EVP_PKEY_DH, (char *)(dh))#define EVP_PKEY_assign_DSA(pkey,dsa) EVP_PKEY_assign((pkey),EVP_PKEY_DSA, (char *)(dsa))#define EVP_PKEY_assign_RSA(pkey,rsa) EVP_PKEY_assign((pkey),EVP_PKEY_RSA, (char *)(rsa))#define EVP_CHACHAPOLY_TLS_TAG_LEN 16#define EVP_CCM8_TLS_TAG_LEN 8#define EVP_CCM_TLS_TAG_LEN 16#define EVP_CCM_TLS_IV_LEN 12#define EVP_CCM_TLS_EXPLICIT_IV_LEN 8#define EVP_CCM_TLS_FIXED_IV_LEN 4#define EVP_GCM_TLS_TAG_LEN 16#define EVP_GCM_TLS_EXPLICIT_IV_LEN 8#define EVP_GCM_TLS_FIXED_IV_LEN 4#define EVP_AEAD_TLS1_AAD_LEN 13#define EVP_PADDING_ZERO 5#define EVP_PADDING_ISO10126 4#define EVP_PADDING_ANSI923 3#define EVP_PADDING_ISO7816_4 2#define EVP_PADDING_PKCS7 1#define EVP_CTRL_SET_PIPELINE_INPUT_LENS 0x24#define EVP_CTRL_SET_PIPELINE_INPUT_BUFS 0x23#define EVP_CTRL_SET_PIPELINE_OUTPUT_BUFS 0x22#define EVP_CTRL_BLOCK_PADDING_MODE 0x21#define EVP_CTRL_KEY_MESH 0x20#define EVP_CTRL_SBOX_USED 0x1f#define EVP_CTRL_SET_SBOX 0x1e#define EVP_CTRL_SSL3_MASTER_SECRET 0x1d#define EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE 0x1c#define EVP_CTRL_TLS1_1_MULTIBLOCK_DECRYPT 0x1b#define EVP_CTRL_TLS1_1_MULTIBLOCK_ENCRYPT 0x1a#define EVP_CTRL_TLS1_1_MULTIBLOCK_AAD 0x19#define EVP_CTRL_GCM_SET_IV_INV 0x18#define EVP_CTRL_AEAD_SET_MAC_KEY 0x17#define EVP_CTRL_AEAD_TLS1_AAD 0x16#define EVP_CTRL_CCM_SET_MSGLEN 0x15#define EVP_CTRL_CCM_SET_L 0x14#define EVP_CTRL_CCM_SET_IV_FIXED EVP_CTRL_AEAD_SET_IV_FIXED#define EVP_CTRL_CCM_SET_TAG EVP_CTRL_AEAD_SET_TAG#define EVP_CTRL_CCM_GET_TAG EVP_CTRL_AEAD_GET_TAG#define EVP_CTRL_CCM_SET_IVLEN EVP_CTRL_AEAD_SET_IVLEN#define EVP_CTRL_GCM_IV_GEN 0x13#define EVP_CTRL_GCM_SET_IV_FIXED EVP_CTRL_AEAD_SET_IV_FIXED#define EVP_CTRL_GCM_SET_TAG EVP_CTRL_AEAD_SET_TAG#define EVP_CTRL_GCM_GET_TAG EVP_CTRL_AEAD_GET_TAG#define EVP_CTRL_GCM_SET_IVLEN EVP_CTRL_AEAD_SET_IVLEN#define EVP_CTRL_AEAD_SET_IV_FIXED 0x12#define EVP_CTRL_AEAD_SET_TAG 0x11#define EVP_CTRL_AEAD_GET_TAG 0x10#define EVP_CTRL_AEAD_SET_IVLEN 0x9#define EVP_CTRL_COPY 0x8#define EVP_CTRL_PBE_PRF_NID 0x7#define EVP_CTRL_RAND_KEY 0x6#define EVP_CTRL_SET_RC5_ROUNDS 0x5#define EVP_CTRL_GET_RC5_ROUNDS 0x4#define EVP_CTRL_SET_RC2_KEY_BITS 0x3#define EVP_CTRL_GET_RC2_KEY_BITS 0x2#define EVP_CTRL_SET_KEY_LENGTH 0x1#define EVP_CTRL_INIT 0x0#define EVP_CIPHER_CTX_FLAG_WRAP_ALLOW 0x1#define EVP_CIPH_FLAG_PIPELINE 0X800000#define EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK 0x400000#define EVP_CIPH_FLAG_AEAD_CIPHER 0x200000#define EVP_CIPH_FLAG_CUSTOM_CIPHER 0x100000#define EVP_CIPH_FLAG_NON_FIPS_ALLOW 0x8000#define EVP_CIPH_FLAG_FIPS 0x4000#define EVP_CIPH_FLAG_LENGTH_BITS 0x2000#define EVP_CIPH_FLAG_DEFAULT_ASN1 0x1000#define EVP_CIPH_CUSTOM_COPY 0x400#define EVP_CIPH_RAND_KEY 0x200#define EVP_CIPH_NO_PADDING 0x100#define EVP_CIPH_CUSTOM_KEY_LENGTH 0x80#define EVP_CIPH_CTRL_INIT 0x40#define EVP_CIPH_ALWAYS_CALL_INIT 0x20#define EVP_CIPH_CUSTOM_IV 0x10#define EVP_CIPH_VARIABLE_LENGTH 0x8#define EVP_CIPH_MODE 0xF0007#define EVP_CIPH_OCB_MODE 0x10003#define EVP_CIPH_WRAP_MODE 0x10002#define EVP_CIPH_XTS_MODE 0x10001#define EVP_CIPH_CCM_MODE 0x7#define EVP_CIPH_GCM_MODE 0x6#define EVP_CIPH_CTR_MODE 0x5#define EVP_CIPH_OFB_MODE 0x4#define EVP_CIPH_CFB_MODE 0x3#define EVP_CIPH_CBC_MODE 0x2#define EVP_CIPH_ECB_MODE 0x1#define EVP_CIPH_STREAM_CIPHER 0x0#define EVP_MD_CTX_FLAG_FINALISE 0x0200#define EVP_MD_CTX_FLAG_NO_INIT 0x0100#define EVP_MD_CTX_FLAG_PAD_PSS 0x20#define EVP_MD_CTX_FLAG_PAD_X931 0x10#define EVP_MD_CTX_FLAG_PAD_PKCS1 0x00#define EVP_MD_CTX_FLAG_PAD_MASK 0xF0#define EVP_MD_CTX_FLAG_NON_FIPS_ALLOW 0x0008#define EVP_MD_CTX_FLAG_REUSE 0x0004#define EVP_MD_CTX_FLAG_CLEANED 0x0002#define EVP_MD_CTX_FLAG_ONESHOT 0x0001#define EVP_MD_CTRL_ALG_CTRL 0x1000#define EVP_MD_CTRL_XOF_LEN 0x3#define EVP_MD_CTRL_MICALG 0x2#define EVP_MD_CTRL_DIGALGID 0x1#define EVP_MD_FLAG_FIPS 0x0400#define EVP_MD_FLAG_DIGALGID_CUSTOM 0x0018#define EVP_MD_FLAG_DIGALGID_ABSENT 0x0008#define EVP_MD_FLAG_DIGALGID_NULL 0x0000#define EVP_MD_FLAG_DIGALGID_MASK 0x0018#define EVP_MD_FLAG_XOF 0x0002#define EVP_MD_FLAG_ONESHOT 0x0001#define EVP_PKEY_MO_DECRYPT 0x0008#define EVP_PKEY_MO_ENCRYPT 0x0004#define EVP_PKEY_MO_VERIFY 0x0002#define EVP_PKEY_MO_SIGN 0x0001#define EVP_PKEY_ED448 NID_ED448#define EVP_PKEY_X448 NID_X448#define EVP_PKEY_ED25519 NID_ED25519#define EVP_PKEY_X25519 NID_X25519#define EVP_PKEY_SIPHASH NID_siphash#define EVP_PKEY_POLY1305 NID_poly1305#define EVP_PKEY_HKDF NID_hkdf#define EVP_PKEY_TLS1_PRF NID_tls1_prf#define EVP_PKEY_SCRYPT NID_id_scrypt#define EVP_PKEY_CMAC NID_cmac#define EVP_PKEY_HMAC NID_hmac#define EVP_PKEY_SM2 NID_sm2#define EVP_PKEY_EC NID_X9_62_id_ecPublicKey#define EVP_PKEY_DHX NID_dhpublicnumber#define EVP_PKEY_DH NID_dhKeyAgreement#define EVP_PKEY_DSA4 NID_dsaWithSHA1_2#define EVP_PKEY_DSA3 NID_dsaWithSHA1#define EVP_PKEY_DSA2 NID_dsaWithSHA#define EVP_PKEY_DSA1 NID_dsa_2#define EVP_PKEY_DSA NID_dsa#define EVP_PKEY_RSA_PSS NID_rsassaPss#define EVP_PKEY_RSA2 NID_rsa#define EVP_PKEY_RSA NID_rsaEncryption#define EVP_PKEY_NONE NID_undef#define EVP_PKS_EC 0x0400#define EVP_PKS_DSA 0x0200#define EVP_PKS_RSA 0x0100#define EVP_PKT_EXCH 0x0040#define EVP_PKT_ENC 0x0020#define EVP_PKT_SIGN 0x0010#define EVP_PK_EC 0x0008#define EVP_PK_DH 0x0004#define EVP_PK_DSA 0x0002#define EVP_PK_RSA 0x0001#define PKCS5_DEFAULT_ITER 2048#define PKCS5_SALT_LEN 8#define EVP_MAX_BLOCK_LENGTH 32#define EVP_MAX_KEY_LENGTH 64#define EVP_MAX_MD_SIZE 64#define HEADER_ENVELOPE_H#define gd_fdt_blob() image_get_host_blob()#define IMAGE_ENABLE_VERIFY 1#define IMAGE_ENABLE_SIGN 1#define IMAGE_INDENT_STRING ""#define IMAGE_ENABLE_IGNORE 0#define CONFIG_SHA256#define CONFIG_SHA1#define CONFIG_FIT_ENABLE_SHA256_SUPPORT#define IMAGE_ENABLE_OF_LIBFDT 1#define IMAGE_ENABLE_FIT 1#define WORD_ALIGN(len) (((len)+WORD_ALIGN0-1) & ~(WORD_ALIGN0-1))#define WORD_ALIGN0 4#define MAX_CMD_BUFFER 4096#define IS_FNC_EXEC(c) (cmd_table[c].AIS_cmd == AIS_CMD_FNLOAD)#define MKIMAGE_MAX_DTC_CMDLINE_LEN 512#define MKIMAGE_DEFAULT_DTC_OPTIONS "-I dts -O dtb -p 500"#define MKIMAGE_MAX_TMPFILE_LEN 256#define MKIMAGE_TMPFILE_SUFFIX ".tmp"#define _MKIIMAGE_H_#define pr_err(fmt,args...) fprintf(stderr, "atmelimage Error: " fmt, ## args)#define show_boot_progress(val) do {} while (0)#define __maybe_unused#define _DUMPIMAGE_H_#define debug(a,b...)#define _FIT_COMMON_H_#define MKIMAGE_DTC "dtc"#define _BYTESWAP_H 1#define bswap_64(x) __bswap_64 (x)#define bswap_32(x) __bswap_32 (x)#define bswap_16(x) __bswap_16 (x)#define ARP_HLEN_LAZY (ARP_HLEN * 2)#define GPIMAGE_HDR_SIZE (sizeof(struct gp_header))#define ERROR(__VA_ARGS__...) { fprintf(stderr, "E: " __VA_ARGS__); }#define INFO(__VA_ARGS__...) { if (verbose > 0) fprintf(stderr, "INFO: " __VA_ARGS__); }#define DEBUG(__VA_ARGS__...) { if (verbose > 1) fprintf(stderr, "DEBUG: " __VA_ARGS__); }#define MANIFEST_HDR_SIZE (sizeof(struct manifest_header))#define SIGNED_PKG_INFO_EXT_SIZE (sizeof(struct signed_pkg_info_ext))#define DUMMY_IBB_SIZE (4 * KiB)#define KiB 1024#define SUBPART_DIR_HEADER_SIZE (sizeof(struct subpart_dir_header))#define SUBPART_DIR_ENTRY_SIZE (sizeof(struct subpart_dir_entry))#define SIGNED_PKG_INFO_EXT_TYPE 0x15#define MODULE_SIZE (sizeof(struct module))#define DWORD_SIZE 4#define MANIFEST_ID_MAGIC (0x324e4d24)#define SUBPART_DIR_MARKER 0x44504324#define SUBPART_DIR_HEADER_VERSION_SUPPORTED 1#define SUBPART_DIR_ENTRY_VERSION_SUPPORTED 1#define ALIGN(x,a) __ALIGN_MASK((x), (typeof(x))(a) - 1)#define __ALIGN_MASK(x,mask) (((x) + (mask)) & ~(mask))#define max(x,y) ({ typeof(x) _max1 = (x); typeof(y) _max2 = (y); (void)(&_max1 == &_max2); _max1 > _max2 ? _max1 : _max2; })#define BPDT_MIN_SIZE ((size_t)512)#define BPDT_HEADER_SIZE (sizeof(struct bpdt_header))#define BPDT_ENTRY_SIZE (sizeof(struct bpdt_entry))#define BPDT_SIGNATURE (0x000055AA)#define min(x,y) ({ typeof(x) _min1 = (x); typeof(y) _min2 = (y); (void)&_min1 == &_min2); _min1 < _min2 ? _min1 : _min2; })#define __compiletime_error_fallback(condition) do { ((void)sizeof(char[1 - 2 * condition])); } while (0)#define __compiletime_error(message)#define __compiletime_warning(message)#define __assume_aligned(a,__VA_ARGS__...)#define __visible#define __cold#define U_BOOT_CMDREP_COMPLETE(_name,_maxargs,_cmd_rep,_usage,_help,_comp) _CMD_REMOVE(sub_ ## _name, _cmd_rep)#define U_BOOT_CMD_COMPLETE(_name,_maxargs,_rep,_cmd,_usage,_help,_comp) _CMD_REMOVE(sub_ ## _name, _cmd)#define U_BOOT_CMD_MKENT_COMPLETE(_name,_maxargs,_rep,_cmd,_usage,_help,_comp) { #_name, _maxargs, NULL, 0 ? _cmd : NULL, _usage, _CMD_HELP(_help) _CMD_COMPLETE(_comp) }#define U_BOOT_CMDREP_MKENT_COMPLETE(_name,_maxargs,_cmd_rep,_usage,_help,_comp) { #_name, _maxargs, 0 ? _cmd_rep : NULL, NULL, _usage, _CMD_HELP(_help) _CMD_COMPLETE(_comp) }#define _CMD_REMOVE(_name,_cmd) int __remove_ ## _name(void) { if (0) _cmd(NULL, 0, 0, NULL); return 0; }#define U_BOOT_SUBCMD_END#define U_BOOT_SUBCMD_START(name) static cmd_tbl_t name[] = {};#define U_BOOT_SUBCMDS_COMPLETE(_cmdname)#define _CMD_HELP(x)#define _CMD_COMPLETE(x)#define __OS_SUPPORT_H_#define AT_L3_CACHEGEOMETRY 47#define AT_L3_CACHESIZE 46#define AT_L2_CACHEGEOMETRY 45#define AT_L2_CACHESIZE 44#define AT_L1D_CACHEGEOMETRY 43#define AT_L1D_CACHESIZE 42#define AT_L1I_CACHEGEOMETRY 41#define AT_L1I_CACHESIZE 40#define AT_L3_CACHESHAPE 37#define AT_L2_CACHESHAPE 36#define AT_L1D_CACHESHAPE 35#define AT_L1I_CACHESHAPE 34#define AT_SYSINFO_EHDR 33#define AT_SYSINFO 32#define AT_EXECFN 31#define AT_HWCAP2 26#define AT_RANDOM 25#define AT_BASE_PLATFORM 24#define AT_SECURE 23#define AT_IGNOREPPC 22#define AT_UCACHEBSIZE 21#define AT_ICACHEBSIZE 20#define AT_DCACHEBSIZE 19#define AT_FPUCW 18#define AT_HWCAP 16#define AT_PLATFORM 15#define AT_CLKTCK 17#define AT_EGID 14#define AT_GID 13#define AT_EUID 12#define AT_UID 11#define AT_NOTELF 10#define AT_ENTRY 9#define AT_FLAGS 8#define AT_BASE 7#define AT_PAGESZ 6#define AT_PHNUM 5#define AT_PHENT 4#define AT_PHDR 3#define AT_EXECFD 2#define AT_IGNORE 1#define AT_NULL 0#define EI_NIDENT (16)#define R_NDS32_TLS_DESC 119#define R_NDS32_TLS_TPOFF 102#define R_NDS32_RELATIVE 42#define R_NDS32_JMP_SLOT 41#define R_NDS32_GLOB_DAT 40#define R_NDS32_COPY 39#define R_NDS32_32_RELA 20#define R_NDS32_NONE 0#define R_METAG_TLS_LE_LO16 61#define R_METAG_TLS_LE_HI16 60#define R_METAG_TLS_LE 59#define R_METAG_TLS_DTPOFF 58#define R_METAG_TLS_DTPMOD 57#define R_METAG_TLS_TPOFF 56#define R_METAG_TLS_IENONPIC_LO16 55#define R_METAG_TLS_IENONPIC_HI16 54#define R_METAG_TLS_IENONPIC 53#define R_METAG_TLS_IE 52#define R_METAG_TLS_LDO 51#define R_METAG_TLS_LDO_LO16 50#define R_METAG_TLS_LDO_HI16 49#define R_METAG_TLS_LDM 48#define R_METAG_TLS_GD 47#define R_METAG_GLOB_DAT 46#define R_METAG_RELATIVE 45#define R_METAG_JMP_SLOT 44#define R_METAG_COPY 43#define R_METAG_PLT 42#define R_METAG_GOTOFF 41#define R_METAG_RELBRANCH_PLT 40#define R_METAG_LO16_PLT 39#define R_METAG_HI16_PLT 38#define R_METAG_LO16_GOTPC 37#define R_METAG_HI16_GOTPC 36#define R_METAG_GETSET_GOT 35#define R_METAG_GETSET_GOTOFF 34#define R_METAG_LO16_GOTOFF 33#define R_METAG_HI16_GOTOFF 32#define R_METAG_GNU_VTENTRY 31#define R_METAG_GNU_VTINHERIT 30#define R_METAG_REL16 16#define R_METAG_REL8 15#define R_METAG_LOOG 14#define R_METAG_HIOG 13#define R_METAG_REG32OP4 12#define R_METAG_REG16OP3 11#define R_METAG_REG16OP2 10#define R_METAG_REG16OP1 9#define R_METAG_REG32OP3 8#define R_METAG_REG32OP2 7#define R_METAG_REG32OP1 6#define R_METAG_GETSETOFF 5#define R_METAG_RELBRANCH 4#define R_METAG_NONE 3#define R_METAG_ADDR32 2#define R_METAG_LOADDR16 1#define R_METAG_HIADDR16 0#define R_BPF_64_32 10#define R_BPF_64_64 1#define R_BPF_NONE 0#define R_RISCV_NUM 58#define R_RISCV_32_PCREL 57#define R_RISCV_SET32 56#define R_RISCV_SET16 55#define R_RISCV_SET8 54#define R_RISCV_SET6 53#define R_RISCV_SUB6 52#define R_RISCV_RELAX 51#define R_RISCV_TPREL_S 50#define R_RISCV_TPREL_I 49#define R_RISCV_GPREL_S 48#define R_RISCV_GPREL_I 47#define R_RISCV_RVC_LUI 46#define R_RISCV_RVC_JUMP 45#define R_RISCV_RVC_BRANCH 44#define R_RISCV_ALIGN 43#define R_RISCV_GNU_VTENTRY 42#define R_RISCV_GNU_VTINHERIT 41#define R_RISCV_SUB64 40#define R_RISCV_SUB32 39#define R_RISCV_SUB16 38#define R_RISCV_SUB8 37#define R_RISCV_ADD64 36#define R_RISCV_ADD32 35#define R_RISCV_ADD16 34#define R_RISCV_ADD8 33#define R_RISCV_TPREL_ADD 32#define R_RISCV_TPREL_LO12_S 31#define R_RISCV_TPREL_LO12_I 30#define R_RISCV_TPREL_HI20 29#define R_RISCV_LO12_S 28#define R_RISCV_LO12_I 27#define R_RISCV_HI20 26#define R_RISCV_PCREL_LO12_S 25#define R_RISCV_PCREL_LO12_I 24#define R_RISCV_PCREL_HI20 23#define R_RISCV_TLS_GD_HI20 22#define R_RISCV_TLS_GOT_HI20 21#define R_RISCV_GOT_HI20 20#define R_RISCV_CALL_PLT 19#define R_RISCV_CALL 18#define R_RISCV_JAL 17#define R_RISCV_BRANCH 16#define R_RISCV_TLS_TPREL64 11#define R_RISCV_TLS_TPREL32 10#define R_RISCV_TLS_DTPREL64 9#define R_RISCV_TLS_DTPREL32 8#define R_RISCV_TLS_DTPMOD64 7#define R_RISCV_TLS_DTPMOD32 6#define R_RISCV_JUMP_SLOT 5#define R_RISCV_COPY 4#define R_RISCV_NONE 0#define EF_RISCV_FLOAT_ABI_QUAD 0x0006#define EF_RISCV_FLOAT_ABI_DOUBLE 0x0004#define EF_RISCV_FLOAT_ABI_SINGLE 0x0002#define EF_RISCV_FLOAT_ABI_SOFT 0x0000#define EF_RISCV_FLOAT_ABI 0x0006#define EF_RISCV_RVC 0x0001#define R_TILEGX_NUM 130#define R_TILEGX_GNU_VTENTRY 129#define R_TILEGX_GNU_VTINHERIT 128#define R_TILEGX_IMM8_Y1_TLS_ADD 121#define R_TILEGX_IMM8_Y0_TLS_ADD 120#define R_TILEGX_IMM8_X1_TLS_ADD 119#define R_TILEGX_IMM8_X0_TLS_ADD 118#define R_TILEGX_TLS_IE_LOAD 117#define R_TILEGX_IMM8_Y1_TLS_GD_ADD 116#define R_TILEGX_IMM8_Y0_TLS_GD_ADD 115#define R_TILEGX_IMM8_X1_TLS_GD_ADD 114#define R_TILEGX_IMM8_X0_TLS_GD_ADD 113#define R_TILEGX_TLS_GD_CALL 112#define R_TILEGX_TLS_TPOFF32 111#define R_TILEGX_TLS_DTPOFF32 110#define R_TILEGX_TLS_DTPMOD32 109#define R_TILEGX_TLS_TPOFF64 108#define R_TILEGX_TLS_DTPOFF64 107#define R_TILEGX_TLS_DTPMOD64 106#define R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE 103#define R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE 102#define R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE 101#define R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE 100#define R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL 99#define R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL 98#define R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL 97#define R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL 96#define R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL 95#define R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL 94#define R_TILEGX_IMM16_X1_HW0_TLS_IE 93#define R_TILEGX_IMM16_X0_HW0_TLS_IE 92#define R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD 89#define R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD 88#define R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD 87#define R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD 86#define R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE 85#define R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE 84#define R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE 83#define R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE 82#define R_TILEGX_IMM16_X1_HW0_TLS_LE 81#define R_TILEGX_IMM16_X0_HW0_TLS_LE 80#define R_TILEGX_IMM16_X1_HW0_TLS_GD 79#define R_TILEGX_IMM16_X0_HW0_TLS_GD 78#define R_TILEGX_IMM16_X1_HW3_PLT_PCREL 77#define R_TILEGX_IMM16_X0_HW3_PLT_PCREL 76#define R_TILEGX_IMM16_X1_HW1_LAST_GOT 75#define R_TILEGX_IMM16_X0_HW1_LAST_GOT 74#define R_TILEGX_IMM16_X1_HW0_LAST_GOT 73#define R_TILEGX_IMM16_X0_HW0_LAST_GOT 72#define R_TILEGX_IMM16_X1_HW2_PLT_PCREL 71#define R_TILEGX_IMM16_X0_HW2_PLT_PCREL 70#define R_TILEGX_IMM16_X1_HW1_PLT_PCREL 69#define R_TILEGX_IMM16_X0_HW1_PLT_PCREL 68#define R_TILEGX_IMM16_X1_HW0_PLT_PCREL 67#define R_TILEGX_IMM16_X0_HW0_PLT_PCREL 66#define R_TILEGX_IMM16_X1_HW0_GOT 65#define R_TILEGX_IMM16_X0_HW0_GOT 64#define R_TILEGX_IMM16_X1_HW2_LAST_PCREL 63#define R_TILEGX_IMM16_X0_HW2_LAST_PCREL 62#define R_TILEGX_IMM16_X1_HW1_LAST_PCREL 61#define R_TILEGX_IMM16_X0_HW1_LAST_PCREL 60#define R_TILEGX_IMM16_X1_HW0_LAST_PCREL 59#define R_TILEGX_IMM16_X0_HW0_LAST_PCREL 58#define R_TILEGX_IMM16_X1_HW3_PCREL 57#define R_TILEGX_IMM16_X0_HW3_PCREL 56#define R_TILEGX_IMM16_X1_HW2_PCREL 55#define R_TILEGX_IMM16_X0_HW2_PCREL 54#define R_TILEGX_IMM16_X1_HW1_PCREL 53#define R_TILEGX_IMM16_X0_HW1_PCREL 52#define R_TILEGX_IMM16_X1_HW0_PCREL 51#define R_TILEGX_IMM16_X0_HW0_PCREL 50#define R_TILEGX_IMM16_X1_HW2_LAST 49#define R_TILEGX_IMM16_X0_HW2_LAST 48#define R_TILEGX_IMM16_X1_HW1_LAST 47#define R_TILEGX_IMM16_X0_HW1_LAST 46#define R_TILEGX_IMM16_X1_HW0_LAST 45#define R_TILEGX_IMM16_X0_HW0_LAST 44#define R_TILEGX_IMM16_X1_HW3 43#define R_TILEGX_IMM16_X0_HW3 42#define R_TILEGX_IMM16_X1_HW2 41#define R_TILEGX_IMM16_X0_HW2 40#define R_TILEGX_IMM16_X1_HW1 39#define R_TILEGX_IMM16_X0_HW1 38#define R_TILEGX_IMM16_X1_HW0 37#define R_TILEGX_IMM16_X0_HW0 36#define R_TILEGX_SHAMT_Y1 35#define R_TILEGX_SHAMT_Y0 34#define R_TILEGX_SHAMT_X1 33#define R_TILEGX_SHAMT_X0 32#define R_TILEGX_MMEND_X0 31#define R_TILEGX_MMSTART_X0 30#define R_TILEGX_MF_IMM14_X1 29#define R_TILEGX_MT_IMM14_X1 28#define R_TILEGX_DEST_IMM8_X1 27#define R_TILEGX_IMM8_Y1 26#define R_TILEGX_IMM8_X1 25#define R_TILEGX_IMM8_Y0 24#define R_TILEGX_IMM8_X0 23#define R_TILEGX_JUMPOFF_X1_PLT 22#define R_TILEGX_JUMPOFF_X1 21#define R_TILEGX_BROFF_X1 20#define R_TILEGX_RELATIVE 19#define R_TILEGX_JMP_SLOT 18#define R_TILEGX_GLOB_DAT 17#define R_TILEGX_COPY 16#define R_TILEGX_HW2_LAST 15#define R_TILEGX_HW1_LAST 14#define R_TILEGX_HW0_LAST 13#define R_TILEGX_HW3 12#define R_TILEGX_HW2 11#define R_TILEGX_HW1 10#define R_TILEGX_HW0 9#define R_TILEGX_8_PCREL 8#define R_TILEGX_16_PCREL 7#define R_TILEGX_32_PCREL 6#define R_TILEGX_64_PCREL 5#define R_TILEGX_8 4#define R_TILEGX_16 3#define R_TILEGX_32 2#define R_TILEGX_64 1#define R_TILEGX_NONE 0#define R_TILEPRO_NUM 130#define R_TILEPRO_GNU_VTENTRY 129#define R_TILEPRO_GNU_VTINHERIT 128#define R_TILEPRO_IMM16_X1_TLS_LE_HA 92#define R_TILEPRO_IMM16_X0_TLS_LE_HA 91#define R_TILEPRO_IMM16_X1_TLS_LE_HI 90#define R_TILEPRO_IMM16_X0_TLS_LE_HI 89#define R_TILEPRO_IMM16_X1_TLS_LE_LO 88#define R_TILEPRO_IMM16_X0_TLS_LE_LO 87#define R_TILEPRO_IMM16_X1_TLS_LE 86#define R_TILEPRO_IMM16_X0_TLS_LE 85#define R_TILEPRO_TLS_TPOFF32 84#define R_TILEPRO_TLS_DTPOFF32 83#define R_TILEPRO_TLS_DTPMOD32 82#define R_TILEPRO_IMM16_X1_TLS_IE_HA 81#define R_TILEPRO_IMM16_X0_TLS_IE_HA 80#define R_TILEPRO_IMM16_X1_TLS_IE_HI 79#define R_TILEPRO_IMM16_X0_TLS_IE_HI 78#define R_TILEPRO_IMM16_X1_TLS_IE_LO 77#define R_TILEPRO_IMM16_X0_TLS_IE_LO 76#define R_TILEPRO_IMM16_X1_TLS_IE 75#define R_TILEPRO_IMM16_X0_TLS_IE 74#define R_TILEPRO_IMM16_X1_TLS_GD_HA 73#define R_TILEPRO_IMM16_X0_TLS_GD_HA 72#define R_TILEPRO_IMM16_X1_TLS_GD_HI 71#define R_TILEPRO_IMM16_X0_TLS_GD_HI 70#define R_TILEPRO_IMM16_X1_TLS_GD_LO 69#define R_TILEPRO_IMM16_X0_TLS_GD_LO 68#define R_TILEPRO_IMM16_X1_TLS_GD 67#define R_TILEPRO_IMM16_X0_TLS_GD 66#define R_TILEPRO_TLS_IE_LOAD 65#define R_TILEPRO_IMM8_Y1_TLS_GD_ADD 64#define R_TILEPRO_IMM8_Y0_TLS_GD_ADD 63#define R_TILEPRO_IMM8_X1_TLS_GD_ADD 62#define R_TILEPRO_IMM8_X0_TLS_GD_ADD 61#define R_TILEPRO_TLS_GD_CALL 60#define R_TILEPRO_DEST_IMM8_X1 55#define R_TILEPRO_SHAMT_Y1 54#define R_TILEPRO_SHAMT_Y0 53#define R_TILEPRO_SHAMT_X1 52#define R_TILEPRO_SHAMT_X0 51#define R_TILEPRO_MMEND_X1 50#define R_TILEPRO_MMSTART_X1 49#define R_TILEPRO_MMEND_X0 48#define R_TILEPRO_MMSTART_X0 47#define R_TILEPRO_IMM16_X1_GOT_HA 46#define R_TILEPRO_IMM16_X0_GOT_HA 45#define R_TILEPRO_IMM16_X1_GOT_HI 44#define R_TILEPRO_IMM16_X0_GOT_HI 43#define R_TILEPRO_IMM16_X1_GOT_LO 42#define R_TILEPRO_IMM16_X0_GOT_LO 41#define R_TILEPRO_IMM16_X1_GOT 40#define R_TILEPRO_IMM16_X0_GOT 39#define R_TILEPRO_IMM16_X1_HA_PCREL 38#define R_TILEPRO_IMM16_X0_HA_PCREL 37#define R_TILEPRO_IMM16_X1_HI_PCREL 36#define R_TILEPRO_IMM16_X0_HI_PCREL 35#define R_TILEPRO_IMM16_X1_LO_PCREL 34#define R_TILEPRO_IMM16_X0_LO_PCREL 33#define R_TILEPRO_IMM16_X1_PCREL 32#define R_TILEPRO_IMM16_X0_PCREL 31#define R_TILEPRO_IMM16_X1_HA 30#define R_TILEPRO_IMM16_X0_HA 29#define R_TILEPRO_IMM16_X1_HI 28#define R_TILEPRO_IMM16_X0_HI 27#define R_TILEPRO_IMM16_X1_LO 26#define R_TILEPRO_IMM16_X0_LO 25#define R_TILEPRO_IMM16_X1 24#define R_TILEPRO_IMM16_X0 23#define R_TILEPRO_MF_IMM15_X1 22#define R_TILEPRO_MT_IMM15_X1 21#define R_TILEPRO_IMM8_Y1 20#define R_TILEPRO_IMM8_X1 19#define R_TILEPRO_IMM8_Y0 18#define R_TILEPRO_IMM8_X0 17#define R_TILEPRO_JOFFLONG_X1_PLT 16#define R_TILEPRO_JOFFLONG_X1 15#define R_TILEPRO_BROFF_X1 14#define R_TILEPRO_RELATIVE 13#define R_TILEPRO_JMP_SLOT 12#define R_TILEPRO_GLOB_DAT 11#define R_TILEPRO_COPY 10#define R_TILEPRO_HA16 9#define R_TILEPRO_HI16 8#define R_TILEPRO_LO16 7#define R_TILEPRO_8_PCREL 6#define R_TILEPRO_16_PCREL 5#define R_TILEPRO_32_PCREL 4#define R_TILEPRO_8 3#define R_TILEPRO_16 2#define R_TILEPRO_32 1#define R_TILEPRO_NONE 0#define R_NIOS2_CALL_HA 45#define R_NIOS2_CALL_LO 44#define R_NIOS2_GOT_HA 43#define R_NIOS2_GOT_LO 42#define R_NIOS2_CALL26_NOAT 41#define R_NIOS2_GOTOFF 40#define R_NIOS2_RELATIVE 39#define R_NIOS2_JUMP_SLOT 38#define R_NIOS2_GLOB_DAT 37#define R_NIOS2_COPY 36#define R_NIOS2_TLS_TPREL 35#define R_NIOS2_TLS_DTPREL 34#define R_NIOS2_TLS_DTPMOD 33#define R_NIOS2_TLS_LE16 32#define R_NIOS2_TLS_IE16 31#define R_NIOS2_TLS_LDO16 30#define R_NIOS2_TLS_LDM16 29#define R_NIOS2_TLS_GD16 28#define R_NIOS2_PCREL_HA 27#define R_NIOS2_PCREL_LO 26#define R_NIOS2_GOTOFF_HA 25#define R_NIOS2_GOTOFF_LO 24#define R_NIOS2_CALL16 23#define R_NIOS2_GOT16 22#define R_NIOS2_ALIGN 21#define R_NIOS2_CALLR 20#define R_NIOS2_CJMP 19#define R_NIOS2_UJMP 18#define R_NIOS2_GNU_VTENTRY 17#define R_NIOS2_GNU_VTINHERIT 16#define R_NIOS2_GPREL 15#define R_NIOS2_BFD_RELOC_8 14#define R_NIOS2_BFD_RELOC_16 13#define R_NIOS2_BFD_RELOC_32 12#define R_NIOS2_HIADJ16 11#define R_NIOS2_LO16 10#define R_NIOS2_HI16 9#define R_NIOS2_IMM8 8#define R_NIOS2_IMM6 7#define R_NIOS2_CACHE_OPX 6#define R_NIOS2_IMM5 5#define R_NIOS2_CALL26 4#define R_NIOS2_PCREL16 3#define R_NIOS2_U16 2#define R_NIOS2_S16 1#define R_NIOS2_NONE 0#define DT_NIOS2_GP 0x70000002#define R_MICROBLAZE_TLSTPREL32 29#define R_MICROBLAZE_TLSGOTTPREL32 28#define R_MICROBLAZE_TLSDTPREL64 27#define R_MICROBLAZE_TLSDTPREL32 26#define R_MICROBLAZE_TLSDTPMOD32 25#define R_MICROBLAZE_TLSLD 24#define R_MICROBLAZE_TLSGD 23#define R_MICROBLAZE_TLS 22#define R_MICROBLAZE_COPY 21#define R_MICROBLAZE_GOTOFF_32 20#define R_MICROBLAZE_GOTOFF_64 19#define R_MICROBLAZE_GLOB_DAT 18#define R_MICROBLAZE_JUMP_SLOT 17#define R_MICROBLAZE_REL 16#define R_MICROBLAZE_PLT_64 15#define R_MICROBLAZE_GOT_64 14#define R_MICROBLAZE_GOTPC_64 13#define R_MICROBLAZE_GNU_VTENTRY 12#define R_MICROBLAZE_GNU_VTINHERIT 11#define R_MICROBLAZE_32_SYM_OP_SYM 10#define R_MICROBLAZE_64_NONE 9#define R_MICROBLAZE_SRW32 8#define R_MICROBLAZE_SRO32 7#define R_MICROBLAZE_32_LO 6#define R_MICROBLAZE_64 5#define R_MICROBLAZE_32_PCREL_LO 4#define R_MICROBLAZE_64_PCREL 3#define R_MICROBLAZE_32_PCREL 2#define R_MICROBLAZE_32 1#define R_MICROBLAZE_NONE 0#define R_M32R_NUM 256#define R_M32R_GOTOFF_LO 64#define R_M32R_GOTOFF_HI_SLO 63#define R_M32R_GOTOFF_HI_ULO 62#define R_M32R_GOTPC_LO 61#define R_M32R_GOTPC_HI_SLO 60#define R_M32R_GOTPC_HI_ULO 59#define R_M32R_GOT16_LO 58#define R_M32R_GOT16_HI_SLO 57#define R_M32R_GOT16_HI_ULO 56#define R_M32R_GOTPC24 55#define R_M32R_GOTOFF 54#define R_M32R_RELATIVE 53#define R_M32R_JMP_SLOT 52#define R_M32R_GLOB_DAT 51#define R_M32R_COPY 50#define R_M32R_26_PLTREL 49#define R_M32R_GOT24 48#define R_M32R_REL32 45#define R_M32R_RELA_GNU_VTENTRY 44#define R_M32R_RELA_GNU_VTINHERIT 43#define R_M32R_SDA16_RELA 42#define R_M32R_LO16_RELA 41#define R_M32R_HI16_SLO_RELA 40#define R_M32R_HI16_ULO_RELA 39#define R_M32R_26_PCREL_RELA 38#define R_M32R_18_PCREL_RELA 37#define R_M32R_10_PCREL_RELA 36#define R_M32R_24_RELA 35#define R_M32R_32_RELA 34#define R_M32R_16_RELA 33#define R_M32R_GNU_VTENTRY 12#define R_M32R_GNU_VTINHERIT 11#define R_M32R_SDA16 10#define R_M32R_LO16 9#define R_M32R_HI16_SLO 8#define R_M32R_HI16_ULO 7#define R_M32R_26_PCREL 6#define R_M32R_18_PCREL 5#define R_M32R_10_PCREL 4#define R_M32R_24 3#define R_M32R_32 2#define R_M32R_16 1#define R_M32R_NONE 0#define R_MN10300_NUM 35#define R_MN10300_ALIGN 34#define R_MN10300_SYM_DIFF 33#define R_MN10300_TLS_TPOFF 32#define R_MN10300_TLS_DTPOFF 31#define R_MN10300_TLS_DTPMOD 30#define R_MN10300_TLS_LE 29#define R_MN10300_TLS_IE 28#define R_MN10300_TLS_GOTIE 27#define R_MN10300_TLS_LDO 26#define R_MN10300_TLS_LD 25#define R_MN10300_TLS_GD 24#define R_MN10300_RELATIVE 23#define R_MN10300_JMP_SLOT 22#define R_MN10300_GLOB_DAT 21#define R_MN10300_COPY 20#define R_MN10300_GOT16 19#define R_MN10300_GOT24 18#define R_MN10300_GOT32 17#define R_MN10300_PLT16 16#define R_MN10300_PLT32 15#define R_MN10300_GOTOFF16 14#define R_MN10300_GOTOFF24 13#define R_MN10300_GOTOFF32 12#define R_MN10300_GOTPC16 11#define R_MN10300_GOTPC32 10#define R_MN10300_24 9#define R_MN10300_GNU_VTENTRY 8#define R_MN10300_GNU_VTINHERIT 7#define R_MN10300_PCREL8 6#define R_MN10300_PCREL16 5#define R_MN10300_PCREL32 4#define R_MN10300_8 3#define R_MN10300_16 2#define R_MN10300_32 1#define R_MN10300_NONE 0#define SHT_X86_64_UNWIND 0x70000001#define R_X86_64_NUM 43#define R_X86_64_REX_GOTPCRELX 42#define R_X86_64_GOTPCRELX 41#define R_X86_64_RELATIVE64 38#define R_X86_64_IRELATIVE 37#define R_X86_64_TLSDESC 36#define R_X86_64_TLSDESC_CALL 35#define R_X86_64_GOTPC32_TLSDESC 34#define R_X86_64_SIZE64 33#define R_X86_64_SIZE32 32#define R_X86_64_PLTOFF64 31#define R_X86_64_GOTPLT64 30#define R_X86_64_GOTPC64 29#define R_X86_64_GOTPCREL64 28#define R_X86_64_GOT64 27#define R_X86_64_GOTPC32 26#define R_X86_64_GOTOFF64 25#define R_X86_64_PC64 24#define R_X86_64_TPOFF32 23#define R_X86_64_GOTTPOFF 22#define R_X86_64_DTPOFF32 21#define R_X86_64_TLSLD 20#define R_X86_64_TLSGD 19#define R_X86_64_TPOFF64 18#define R_X86_64_DTPOFF64 17#define R_X86_64_DTPMOD64 16#define R_CRIS_NUM 20#define R_CRIS_32_PLT_PCREL 19#define R_CRIS_32_PLT_GOTREL 18#define R_CRIS_32_GOTREL 17#define R_CRIS_32_GOTPLT 16#define R_CRIS_16_GOTPLT 15#define R_CRIS_32_GOT 14#define R_CRIS_16_GOT 13#define R_CRIS_RELATIVE 12#define R_CRIS_JUMP_SLOT 11#define R_CRIS_GLOB_DAT 10#define R_CRIS_COPY 9#define R_CRIS_GNU_VTENTRY 8#define R_CRIS_GNU_VTINHERIT 7#define R_CRIS_32_PCREL 6#define R_CRIS_16_PCREL 5#define R_CRIS_8_PCREL 4#define R_CRIS_32 3#define R_CRIS_16 2#define R_CRIS_8 1#define R_CRIS_NONE 0#define R_390_NUM 62#define R_390_IRELATIVE 61#define R_390_TLS_GOTIE20 60#define R_390_GOTPLT20 59#define R_390_GOT20 58#define R_390_20 57#define R_390_TLS_TPOFF 56#define R_390_TLS_DTPOFF 55#define R_390_TLS_DTPMOD 54#define R_390_TLS_LDO64 53#define R_390_TLS_LDO32 52#define R_390_TLS_LE64 51#define R_390_TLS_LE32 50#define R_390_TLS_IEENT 49#define R_390_TLS_IE64 48#define R_390_TLS_IE32 47#define R_390_TLS_LDM64 46#define R_390_TLS_LDM32 45#define R_390_TLS_GOTIE64 44#define R_390_TLS_GOTIE32 43#define R_390_TLS_GOTIE12 42#define R_390_TLS_GD64 41#define R_390_TLS_GD32 40#define R_390_TLS_LDCALL 39#define R_390_TLS_GDCALL 38#define R_390_TLS_LOAD 37#define R_390_PLTOFF64 36#define R_390_PLTOFF32 35#define R_390_PLTOFF16 34#define R_390_GOTPLTENT 33#define R_390_GOTPLT64 32#define R_390_GOTPLT32 31#define R_390_GOTPLT16 30#define R_390_GOTPLT12 29#define R_390_GOTOFF64 28#define R_390_GOTOFF16 27#define R_390_GOTENT 26#define R_390_PLT64 25#define R_390_GOT64 24#define R_390_PC64 23#define R_390_64 22#define R_390_GOTPCDBL 21#define R_390_PLT32DBL 20#define R_390_PC32DBL 19#define R_390_PLT16DBL 18#define R_390_PC16DBL 17#define R_390_PC16 16#define R_390_GOT16 15#define R_390_GOTPC 14#define R_390_GOTOFF32 13#define R_390_RELATIVE 12#define R_390_JMP_SLOT 11#define R_390_GLOB_DAT 10#define R_390_COPY 9#define R_390_PLT32 8#define R_390_GOT32 7#define R_390_GOT12 6#define R_390_PC32 5#define R_390_32 4#define R_390_16 3#define R_390_12 2#define R_390_8 1#define R_390_NONE 0#define EF_S390_HIGH_GPRS 0x00000001#define R_SH_NUM 256#define R_SH_GOTPC 167#define R_SH_GOTOFF 166#define R_SH_RELATIVE 165#define R_SH_JMP_SLOT 164#define R_SH_GLOB_DAT 163#define R_SH_COPY 162#define R_SH_PLT32 161#define R_SH_GOT32 160#define R_SH_TLS_TPOFF32 151#define R_SH_TLS_DTPOFF32 150#define R_SH_TLS_DTPMOD32 149#define R_SH_TLS_LE_32 148#define R_SH_TLS_IE_32 147#define R_SH_TLS_LDO_32 146#define R_SH_TLS_LD_32 145#define R_SH_TLS_GD_32 144#define R_SH_GNU_VTENTRY 35#define R_SH_GNU_VTINHERIT 34#define R_SH_SWITCH8 33#define R_SH_LABEL 32#define R_SH_DATA 31#define R_SH_CODE 30#define R_SH_ALIGN 29#define R_SH_COUNT 28#define R_SH_USES 27#define R_SH_SWITCH32 26#define R_SH_SWITCH16 25#define R_SH_DIR8L 9#define R_SH_DIR8W 8#define R_SH_DIR8BP 7#define R_SH_DIR8WPZ 6#define R_SH_DIR8WPL 5#define R_SH_IND12W 4#define R_SH_DIR8WPN 3#define R_SH_REL32 2#define R_SH_DIR32 1#define R_SH_NONE 0#define EF_SH2A_SH3E 0x18#define EF_SH2A_SH4 0x17#define EF_SH2A_SH3_NOFPU 0x16#define EF_SH2A_SH4_NOFPU 0x15#define EF_SH3_NOMMU 0x14#define EF_SH2A_NOFPU 0x13#define EF_SH4_NOMMU_NOFPU 0x12#define EF_SH4A_NOFPU 0x11#define EF_SH4_NOFPU 0x10#define EF_SH2A 0xd#define EF_SH4A 0xc#define EF_SH2E 0xb#define EF_SH4 0x9#define EF_SH3E 0x8#define EF_SH4AL_DSP 0x6#define EF_SH3_DSP 0x5#define EF_SH_DSP 0x4#define EF_SH3 0x3#define EF_SH2 0x2#define EF_SH1 0x1#define EF_SH_UNKNOWN 0x0#define EF_SH_MACH_MASK 0x1f#define R_IA64_LTOFF_DTPREL22 0xba#define R_IA64_DTPREL64LSB 0xb7#define R_IA64_DTPREL64MSB 0xb6#define R_IA64_DTPREL32LSB 0xb5#define R_IA64_DTPREL32MSB 0xb4#define R_IA64_DTPREL64I 0xb3#define R_IA64_DTPREL22 0xb2#define R_IA64_DTPREL14 0xb1#define R_IA64_LTOFF_DTPMOD22 0xaa#define R_IA64_DTPMOD64LSB 0xa7#define R_IA64_DTPMOD64MSB 0xa6#define R_IA64_LTOFF_TPREL22 0x9a#define R_IA64_TPREL64LSB 0x97#define R_IA64_TPREL64MSB 0x96#define R_IA64_TPREL64I 0x93#define R_IA64_TPREL22 0x92#define R_IA64_TPREL14 0x91#define R_IA64_LDXMOV 0x87#define R_IA64_LTOFF22X 0x86#define R_IA64_SUB 0x85#define R_IA64_COPY 0x84#define R_IA64_IPLTLSB 0x81#define R_IA64_IPLTMSB 0x80#define R_IA64_PCREL64I 0x7b#define R_IA64_PCREL22 0x7a#define R_IA64_PCREL21BI 0x79#define R_IA64_LTV64LSB 0x77#define R_IA64_LTV64MSB 0x76#define R_IA64_LTV32LSB 0x75#define R_IA64_LTV32MSB 0x74#define R_IA64_REL64LSB 0x6f#define R_IA64_REL64MSB 0x6e#define R_IA64_REL32LSB 0x6d#define R_IA64_REL32MSB 0x6c#define R_IA64_SECREL64LSB 0x67#define R_IA64_SECREL64MSB 0x66#define R_IA64_SECREL32LSB 0x65#define R_IA64_SECREL32MSB 0x64#define R_IA64_SEGREL64LSB 0x5f#define R_IA64_SEGREL64MSB 0x5e#define R_IA64_SEGREL32LSB 0x5d#define R_IA64_SEGREL32MSB 0x5c#define R_IA64_LTOFF_FPTR64LSB 0x57#define R_IA64_LTOFF_FPTR64MSB 0x56#define R_IA64_LTOFF_FPTR32LSB 0x55#define R_IA64_LTOFF_FPTR32MSB 0x54#define R_IA64_LTOFF_FPTR64I 0x53#define R_IA64_LTOFF_FPTR22 0x52#define R_IA64_PCREL64LSB 0x4f#define R_IA64_PCREL64MSB 0x4e#define R_IA64_PCREL32LSB 0x4d#define R_IA64_PCREL32MSB 0x4c#define R_IA64_PCREL21F 0x4b#define R_IA64_PCREL21M 0x4a#define R_IA64_PCREL21B 0x49#define R_IA64_PCREL60B 0x48#define R_IA64_FPTR64LSB 0x47#define R_IA64_FPTR64MSB 0x46#define R_IA64_FPTR32LSB 0x45#define R_IA64_FPTR32MSB 0x44#define R_IA64_FPTR64I 0x43#define R_IA64_PLTOFF64LSB 0x3f#define R_IA64_PLTOFF64MSB 0x3e#define R_IA64_PLTOFF64I 0x3b#define R_IA64_PLTOFF22 0x3a#define R_IA64_LTOFF64I 0x33#define R_IA64_LTOFF22 0x32#define R_IA64_GPREL64LSB 0x2f#define R_IA64_GPREL64MSB 0x2e#define R_IA64_GPREL32LSB 0x2d#define R_IA64_GPREL32MSB 0x2c#define R_IA64_GPREL64I 0x2b#define R_IA64_GPREL22 0x2a#define R_IA64_DIR64LSB 0x27#define R_IA64_DIR64MSB 0x26#define R_IA64_DIR32LSB 0x25#define R_IA64_DIR32MSB 0x24#define R_IA64_IMM64 0x23#define R_IA64_IMM22 0x22#define R_IA64_IMM14 0x21#define R_IA64_NONE 0x00#define DT_IA_64_NUM 1#define DT_IA_64_PLT_RESERVE (DT_LOPROC + 0)#define SHF_IA_64_NORECOV 0x20000000#define SHF_IA_64_SHORT 0x10000000#define SHT_IA_64_UNWIND (SHT_LOPROC + 1)#define SHT_IA_64_EXT (SHT_LOPROC + 0)#define PF_IA_64_NORECOV 0x80000000#define PT_IA_64_HP_STACK (PT_LOOS + 0x14)#define PT_IA_64_HP_HSL_ANOT (PT_LOOS + 0x13)#define PT_IA_64_HP_OPT_ANOT (PT_LOOS + 0x12)#define PT_IA_64_UNWIND (PT_LOPROC + 1)#define PT_IA_64_ARCHEXT (PT_LOPROC + 0)#define EF_IA_64_ARCH 0xff000000#define EF_IA_64_ABI64 0x00000010#define EF_IA_64_MASKOS 0x0000000f#define R_ARM_NUM 256#define R_ARM_RBASE 255#define R_ARM_RPC24 254#define R_ARM_RABS22 253#define R_ARM_RREL32 252#define R_ARM_THM_RPC22 251#define R_ARM_RSBREL32 250#define R_ARM_RXPC25 249#define R_ARM_IRELATIVE 160#define R_ARM_THM_GOT_BREL12 131#define R_ARM_THM_TLS_DESCSEQ32 130#define R_ARM_THM_TLS_DESCSEQ16 129#define R_ARM_THM_TLS_DESCSEQ 129#define R_ARM_ME_TOO 128#define R_ARM_TLS_IE12GP 111#define R_ARM_TLS_LE12 110#define R_ARM_TLS_LDO12 109#define R_ARM_TLS_LE32 108#define R_ARM_TLS_IE32 107#define R_ARM_TLS_LDO32 106#define R_ARM_TLS_LDM32 105#define R_ARM_TLS_GD32 104#define R_ARM_THM_PC9 103#define R_ARM_THM_PC11 102#define R_ARM_GNU_VTINHERIT 101#define R_ARM_GNU_VTENTRY 100#define R_ARM_GOTRELAX 99#define R_ARM_GOTOFF12 98#define R_ARM_GOT_BREL12 97#define R_ARM_GOT_PREL 96#define R_ARM_GOT_ABS 95#define R_ARM_PLT32_ABS 94#define R_ARM_THM_TLS_CALL 93#define R_ARM_TLS_DESCSEQ 92#define R_ARM_TLS_CALL 91#define R_ARM_TLS_GOTDESC 90#define R_ARM_THM_MOVW_BREL 89#define R_ARM_THM_MOVT_BREL 88#define R_ARM_THM_MOVW_BREL_NC 87#define R_ARM_MOVW_BREL 86#define R_ARM_MOVT_BREL 85#define R_ARM_MOVW_BREL_NC 84#define R_ARM_LDC_SB_G2 83#define R_ARM_LDC_SB_G1 82#define R_ARM_LDC_SB_G0 81#define R_ARM_LDRS_SB_G2 80#define R_ARM_LDRS_SB_G1 79#define R_ARM_LDRS_SB_G0 78#define R_ARM_LDR_SB_G2 77#define R_ARM_LDR_SB_G1 76#define R_ARM_LDR_SB_G0 75#define R_ARM_ALU_SB_G2 74#define R_ARM_ALU_SB_G1 73#define R_ARM_ALU_SB_G1_NC 72#define R_ARM_ALU_SB_G0 71#define R_ARM_ALU_SB_G0_NC 70#define R_ARM_LDC_PC_G2 69#define R_ARM_LDC_PC_G1 68#define R_ARM_LDC_PC_G0 67#define R_ARM_LDRS_PC_G2 66#define R_ARM_LDRS_PC_G1 65#define R_ARM_LDRS_PC_G0 64#define R_ARM_LDR_PC_G2 63#define R_ARM_LDR_PC_G1 62#define R_ARM_ALU_PC_G2 61#define R_ARM_ALU_PC_G1 60#define R_ARM_ALU_PC_G1_NC 59#define R_ARM_ALU_PC_G0 58#define R_ARM_ALU_PC_G0_NC 57#define R_ARM_REL32_NOI 56#define R_ARM_ABS32_NOI 55#define R_ARM_THM_PC12 54#define R_ARM_THM_ALU_PREL_11_0 53#define R_ARM_THM_JUMP6 52#define R_ARM_THM_JUMP19 51#define R_ARM_THM_MOVT_PREL 50#define R_ARM_THM_MOVW_PREL_NC 49#define R_ARM_THM_MOVT_ABS 48#define R_ARM_THM_MOVW_ABS_NC 47#define R_ARM_MOVT_PREL 46#define R_ARM_MOVW_PREL_NC 45#define R_ARM_MOVT_ABS 44#define R_ARM_MOVW_ABS_NC 43#define R_ARM_PREL31 42#define R_ARM_TARGET2 41#define R_ARM_V4BX 40#define R_ARM_SBREL31 39#define R_ARM_TARGET1 38#define R_ARM_ALU_SBREL_27_20 37#define R_ARM_ALU_SBREL_19_12 36#define R_ARM_LDR_SBREL_11_0 35#define R_ARM_ALU_PCREL_23_15 34#define R_ARM_ALU_PCREL_15_8 33#define R_ARM_ALU_PCREL_7_0 32#define R_ARM_BASE_ABS 31#define R_ARM_THM_JUMP24 30#define R_ARM_JUMP24 29#define R_ARM_CALL 28#define R_ARM_PLT32 27#define R_ARM_GOT32 26#define R_ARM_GOTPC 25#define R_ARM_GOTOFF 24#define R_ARM_JUMP_SLOT 22#define R_ARM_GLOB_DAT 21#define R_ARM_COPY 20#define R_ARM_TLS_TPOFF32 19#define R_ARM_TLS_DTPOFF32 18#define R_ARM_TLS_DTPMOD32 17#define R_ARM_THM_XPC22 16#define R_ARM_XPC25 15#define R_ARM_THM_SWI8 14#define R_ARM_TLS_DESC 13#define R_ARM_SWI24 13#define R_ARM_AMP_VCALL9 12#define R_ARM_THM_PC8 11#define R_ARM_THM_PC22 10#define R_ARM_SBREL32 9#define R_ARM_ABS8 8#define R_ARM_THM_ABS5 7#define R_ARM_ABS12 6#define R_ARM_ABS16 5#define R_ARM_PC13 4#define R_ARM_REL32 3#define R_ARM_ABS32 2#define R_ARM_PC24 1#define R_AARCH64_IRELATIVE 1032#define R_AARCH64_TLSDESC 1031#define R_AARCH64_TLS_TPREL 1030#define R_AARCH64_TLS_DTPREL 1029#define R_AARCH64_TLS_DTPMOD 1028#define R_AARCH64_JUMP_SLOT 1026#define R_AARCH64_GLOB_DAT 1025#define R_AARCH64_COPY 1024#define R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC 573#define R_AARCH64_TLSLD_LDST128_DTPREL_LO12 572#define R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC 571#define R_AARCH64_TLSLE_LDST128_TPREL_LO12 570#define R_AARCH64_TLSDESC_CALL 569#define R_AARCH64_TLSDESC_ADD 568#define R_AARCH64_TLSDESC_LDR 567#define R_AARCH64_TLSDESC_OFF_G0_NC 566#define R_AARCH64_TLSDESC_OFF_G1 565#define R_AARCH64_TLSDESC_ADD_LO12 564#define R_AARCH64_TLSDESC_LD64_LO12 563#define R_AARCH64_TLSDESC_ADR_PAGE21 562#define R_AARCH64_TLSDESC_ADR_PREL21 561#define R_AARCH64_TLSDESC_LD_PREL19 560#define R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC 559#define R_AARCH64_TLSLE_LDST64_TPREL_LO12 558#define R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC 557#define R_AARCH64_TLSLE_LDST32_TPREL_LO12 556#define R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC 555#define R_AARCH64_TLSLE_LDST16_TPREL_LO12 554#define R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC 553#define R_AARCH64_TLSLE_LDST8_TPREL_LO12 552#define R_AARCH64_TLSLE_ADD_TPREL_LO12_NC 551#define R_AARCH64_TLSLE_ADD_TPREL_LO12 550#define R_AARCH64_TLSLE_ADD_TPREL_HI12 549#define R_AARCH64_TLSLE_MOVW_TPREL_G0_NC 548#define R_AARCH64_TLSLE_MOVW_TPREL_G0 547#define R_AARCH64_TLSLE_MOVW_TPREL_G1_NC 546#define R_AARCH64_TLSLE_MOVW_TPREL_G1 545#define R_AARCH64_TLSLE_MOVW_TPREL_G2 544#define R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 543#define R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC 542#define R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 541#define R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC 540#define R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 539#define R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC 538#define R_AARCH64_TLSLD_LDST64_DTPREL_LO12 537#define R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC 536#define R_AARCH64_TLSLD_LDST32_DTPREL_LO12 535#define R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC 534#define R_AARCH64_TLSLD_LDST16_DTPREL_LO12 533#define R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC 532#define R_AARCH64_TLSLD_LDST8_DTPREL_LO12 531#define R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC 530#define R_AARCH64_TLSLD_ADD_DTPREL_LO12 529#define R_AARCH64_TLSLD_ADD_DTPREL_HI12 528#define R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC 527#define R_AARCH64_TLSLD_MOVW_DTPREL_G0 526#define R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC 525#define R_AARCH64_TLSLD_MOVW_DTPREL_G1 524#define R_AARCH64_TLSLD_MOVW_DTPREL_G2 523#define R_AARCH64_TLSLD_LD_PREL19 522#define R_AARCH64_TLSLD_MOVW_G0_NC 521#define R_AARCH64_TLSLD_MOVW_G1 520#define R_AARCH64_TLSLD_ADD_LO12_NC 519#define R_AARCH64_TLSLD_ADR_PAGE21 518#define R_AARCH64_TLSLD_ADR_PREL21 517#define R_AARCH64_TLSGD_MOVW_G0_NC 516#define R_AARCH64_TLSGD_MOVW_G1 515#define R_AARCH64_TLSGD_ADD_LO12_NC 514#define R_AARCH64_TLSGD_ADR_PAGE21 513#define R_AARCH64_TLSGD_ADR_PREL21 512#define R_AARCH64_LD64_GOTPAGE_LO15 313#define R_AARCH64_LD64_GOT_LO12_NC 312#define R_AARCH64_ADR_GOT_PAGE 311#define R_AARCH64_LD64_GOTOFF_LO15 310#define R_AARCH64_GOT_LD_PREL19 309#define R_AARCH64_GOTREL32 308#define R_AARCH64_GOTREL64 307#define R_AARCH64_MOVW_GOTOFF_G3 306#define R_AARCH64_MOVW_GOTOFF_G2_NC 305#define R_AARCH64_MOVW_GOTOFF_G2 304#define R_AARCH64_MOVW_GOTOFF_G1_NC 303#define R_AARCH64_MOVW_GOTOFF_G1 302#define R_AARCH64_MOVW_GOTOFF_G0_NC 301#define R_AARCH64_MOVW_GOTOFF_G0 300#define R_AARCH64_LDST128_ABS_LO12_NC 299#define R_AARCH64_MOVW_PREL_G3 293#define R_AARCH64_MOVW_PREL_G2_NC 292#define R_AARCH64_MOVW_PREL_G2 291#define R_AARCH64_MOVW_PREL_G1_NC 290#define R_AARCH64_MOVW_PREL_G1 289#define R_AARCH64_MOVW_PREL_G0_NC 288#define R_AARCH64_MOVW_PREL_G0 287#define R_AARCH64_LDST64_ABS_LO12_NC 286#define R_AARCH64_LDST32_ABS_LO12_NC 285#define R_AARCH64_LDST16_ABS_LO12_NC 284#define R_AARCH64_CALL26 283#define R_AARCH64_JUMP26 282#define R_AARCH64_CONDBR19 280#define R_AARCH64_TSTBR14 279#define R_AARCH64_LDST8_ABS_LO12_NC 278#define R_AARCH64_ADD_ABS_LO12_NC 277#define R_AARCH64_ADR_PREL_PG_HI21_NC 276#define R_AARCH64_ADR_PREL_PG_HI21 275#define R_AARCH64_ADR_PREL_LO21 274#define R_AARCH64_LD_PREL_LO19 273#define R_AARCH64_MOVW_SABS_G2 272#define R_AARCH64_MOVW_SABS_G1 271#define R_AARCH64_MOVW_SABS_G0 270#define R_AARCH64_MOVW_UABS_G3 269#define R_AARCH64_MOVW_UABS_G2_NC 268#define R_AARCH64_MOVW_UABS_G2 267#define R_AARCH64_MOVW_UABS_G1_NC 266#define R_AARCH64_MOVW_UABS_G1 265#define R_AARCH64_MOVW_UABS_G0_NC 264#define R_AARCH64_MOVW_UABS_G0 263#define R_AARCH64_PREL16 262#define R_AARCH64_PREL32 261#define R_AARCH64_PREL64 260#define R_AARCH64_ABS16 259#define R_AARCH64_ABS32 258#define R_AARCH64_ABS64 257#define R_AARCH64_P32_IRELATIVE 188#define R_AARCH64_P32_TLSDESC 187#define R_AARCH64_P32_TLS_TPREL 186#define R_AARCH64_P32_TLS_DTPREL 185#define R_AARCH64_P32_TLS_DTPMOD 184#define R_AARCH64_P32_RELATIVE 183#define R_AARCH64_P32_JUMP_SLOT 182#define R_AARCH64_P32_GLOB_DAT 181#define R_AARCH64_P32_COPY 180#define R_AARCH64_P32_ABS32 1#define SHT_ARM_ATTRIBUTES (SHT_LOPROC + 3)#define SHT_ARM_PREEMPTMAP (SHT_LOPROC + 2)#define SHT_ARM_EXIDX (SHT_LOPROC + 1)#define PT_ARM_EXIDX (PT_LOPROC + 1)#define PF_ARM_ABS 0x40000000#define PF_ARM_PI 0x20000000#define PF_ARM_SB 0x10000000#define SHF_ARM_COMDEF 0x80000000#define SHF_ARM_ENTRYSECT 0x10000000#define STT_ARM_16BIT STT_HIPROC#define STT_ARM_TFUNC STT_LOPROC#define EF_ARM_EABI_VER5 0x05000000#define EF_ARM_EABI_VER4 0x04000000#define EF_ARM_EABI_VER3 0x03000000#define EF_ARM_EABI_VER2 0x02000000#define EF_ARM_EABI_VER1 0x01000000#define EF_ARM_EABI_UNKNOWN 0x00000000#define EF_ARM_EABI_VERSION(flags) ((flags) & EF_ARM_EABIMASK)#define EF_ARM_LE8 0x00400000#define EF_ARM_BE8 0x00800000#define EF_ARM_EABIMASK 0XFF000000#define EF_ARM_MAPSYMSFIRST 0x10#define EF_ARM_DYNSYMSUSESEGIDX 0x08#define EF_ARM_SYMSARESORTED 0x04#define EF_ARM_ABI_FLOAT_HARD 0x400#define EF_ARM_ABI_FLOAT_SOFT 0x200#define EF_ARM_MAVERICK_FLOAT 0x800#define EF_ARM_VFP_FLOAT 0x400#define EF_ARM_SOFT_FLOAT 0x200#define EF_ARM_OLD_ABI 0x100#define EF_ARM_NEW_ABI 0x80#define EF_ARM_ALIGN8 0x40#define EF_ARM_PIC 0x20#define EF_ARM_APCS_FLOAT 0x10#define EF_ARM_APCS_26 0x08#define EF_ARM_INTERWORK 0x04#define EF_ARM_HASENTRY 0x02#define EF_ARM_RELEXEC 0x01#define PPC64_LOCAL_ENTRY_OFFSET(other) (((1 << (((other) & STO_PPC64_LOCAL_MASK) >> STO_PPC64_LOCAL_BIT)) >> 2) << 2)#define STO_PPC64_LOCAL_MASK (7 << STO_PPC64_LOCAL_BIT)#define STO_PPC64_LOCAL_BIT 5#define PPC64_OPT_LOCALENTRY 4#define PPC64_OPT_MULTI_TOC 2#define PPC64_OPT_TLS 1#define DT_PPC64_NUM 4#define DT_PPC64_OPT (DT_LOPROC + 3)#define DT_PPC64_OPDSZ (DT_LOPROC + 2)#define DT_PPC64_OPD (DT_LOPROC + 1)#define DT_PPC64_GLINK (DT_LOPROC + 0)#define EF_PPC64_ABI 3#define R_PPC64_REL16_HA 252#define R_PPC64_REL16_HI 251#define R_PPC64_REL16_LO 250#define R_PPC64_REL16 249#define R_PPC64_IRELATIVE 248#define R_PPC64_JMP_IREL 247#define R_PPC64_DTPREL16_HIGHA 115#define R_PPC64_DTPREL16_HIGH 114#define R_PPC64_TPREL16_HIGHA 113#define R_PPC64_TPREL16_HIGH 112#define R_PPC64_ADDR16_HIGHA 111#define R_PPC64_ADDR16_HIGH 110#define R_PPC64_TOCSAVE 109#define R_PPC64_TLSLD 108#define R_PPC64_TLSGD 107#define R_PPC64_DTPREL16_HIGHESTA 106#define R_PPC64_DTPREL16_HIGHEST 105#define R_PPC64_DTPREL16_HIGHERA 104#define R_PPC64_DTPREL16_HIGHER 103#define R_PPC64_DTPREL16_LO_DS 102#define R_PPC64_DTPREL16_DS 101#define R_PPC64_TPREL16_HIGHESTA 100#define R_PPC64_TPREL16_HIGHEST 99#define R_PPC64_TPREL16_HIGHERA 98#define R_PPC64_TPREL16_HIGHER 97#define R_PPC64_TPREL16_LO_DS 96#define R_PPC64_TPREL16_DS 95#define R_PPC64_GOT_DTPREL16_HA 94#define R_PPC64_GOT_DTPREL16_HI 93#define R_PPC64_GOT_DTPREL16_LO_DS 92#define R_PPC64_GOT_DTPREL16_DS 91#define R_PPC64_GOT_TPREL16_HA 90#define R_PPC64_GOT_TPREL16_HI 89#define R_PPC64_GOT_TPREL16_LO_DS 88#define R_PPC64_GOT_TPREL16_DS 87#define R_PPC64_GOT_TLSLD16_HA 86#define R_PPC64_GOT_TLSLD16_HI 85#define R_PPC64_GOT_TLSLD16_LO 84#define R_PPC64_GOT_TLSLD16 83#define R_PPC64_GOT_TLSGD16_HA 82#define R_PPC64_GOT_TLSGD16_HI 81#define R_PPC64_GOT_TLSGD16_LO 80#define R_PPC64_GOT_TLSGD16 79#define R_PPC64_DTPREL64 78#define R_PPC64_DTPREL16_HA 77#define R_PPC64_DTPREL16_HI 76#define R_PPC64_DTPREL16_LO 75#define R_PPC64_DTPREL16 74#define R_PPC64_TPREL64 73#define R_PPC64_TPREL16_HA 72#define R_PPC64_TPREL16_HI 71#define R_PPC64_TPREL16_LO 70#define R_PPC64_TPREL16 69#define R_PPC64_DTPMOD64 68#define R_PPC64_TLS 67#define R_PPC64_PLTGOT16_LO_DS 66#define R_PPC64_PLTGOT16_DS 65#define R_PPC64_TOC16_LO_DS 64#define R_PPC64_TOC16_DS 63#define R_PPC64_SECTOFF_LO_DS 62#define R_PPC64_SECTOFF_DS 61#define R_PPC64_PLT16_LO_DS 60#define R_PPC64_GOT16_LO_DS 59#define R_PPC64_GOT16_DS 58#define R_PPC64_ADDR16_LO_DS 57#define R_PPC64_ADDR16_DS 56#define R_PPC64_PLTGOT16_HA 55#define R_PPC64_PLTGOT16_HI 54#define R_PPC64_PLTGOT16_LO 53#define R_PPC64_PLTGOT16 52#define R_PPC64_TOC 51#define R_PPC64_TOC16_HA 50#define R_PPC64_TOC16_HI 49#define R_PPC64_TOC16_LO 48#define R_PPC64_TOC16 47#define R_PPC64_PLTREL64 46#define R_PPC64_PLT64 45#define R_PPC64_REL64 44#define R_PPC64_UADDR64 43#define R_PPC64_ADDR16_HIGHESTA 42#define R_PPC64_ADDR16_HIGHEST 41#define R_PPC64_ADDR16_HIGHERA 40#define R_PPC64_ADDR16_HIGHER 39#define R_PPC64_ADDR64 38#define R_PPC64_ADDR30 37#define R_PPC64_SECTOFF_HA R_PPC_SECTOFF_HA#define R_PPC64_SECTOFF_HI R_PPC_SECTOFF_HI#define R_PPC64_SECTOFF_LO R_PPC_SECTOFF_LO#define R_PPC64_SECTOFF R_PPC_SECTOFF#define R_PPC64_PLT16_HA R_PPC_PLT16_HA#define R_PPC64_PLT16_HI R_PPC_PLT16_HI#define R_PPC64_PLT16_LO R_PPC_PLT16_LO#define R_PPC64_PLTREL32 R_PPC_PLTREL32#define R_PPC64_PLT32 R_PPC_PLT32#define R_PPC64_REL32 R_PPC_REL32#define R_PPC64_UADDR16 R_PPC_UADDR16#define R_PPC64_UADDR32 R_PPC_UADDR32#define R_PPC64_RELATIVE R_PPC_RELATIVE#define R_PPC64_JMP_SLOT R_PPC_JMP_SLOT#define R_PPC64_GLOB_DAT R_PPC_GLOB_DAT#define R_PPC64_COPY R_PPC_COPY#define R_PPC64_GOT16_HA R_PPC_GOT16_HA#define R_PPC64_GOT16_HI R_PPC_GOT16_HI#define R_PPC64_GOT16_LO R_PPC_GOT16_LO#define R_PPC64_GOT16 R_PPC_GOT16#define R_PPC64_REL14_BRNTAKEN R_PPC_REL14_BRNTAKEN#define R_PPC64_REL14_BRTAKEN R_PPC_REL14_BRTAKEN#define R_PPC64_REL14 R_PPC_REL14#define R_PPC64_REL24 R_PPC_REL24#define R_PPC64_ADDR14_BRNTAKEN R_PPC_ADDR14_BRNTAKEN#define R_PPC64_ADDR14_BRTAKEN R_PPC_ADDR14_BRTAKEN#define R_PPC64_ADDR14 R_PPC_ADDR14#define R_PPC64_ADDR16_HA R_PPC_ADDR16_HA#define R_PPC64_ADDR16_HI R_PPC_ADDR16_HI#define R_PPC64_ADDR16_LO R_PPC_ADDR16_LO#define R_PPC64_ADDR16 R_PPC_ADDR16#define R_PPC64_ADDR24 R_PPC_ADDR24#define R_PPC64_ADDR32 R_PPC_ADDR32#define R_PPC64_NONE R_PPC_NONE#define PPC_OPT_TLS 1#define DT_PPC_NUM 2#define DT_PPC_OPT (DT_LOPROC + 1)#define DT_PPC_GOT (DT_LOPROC + 0)#define R_PPC_REL16_HA 252#define R_PPC_REL16_HI 251#define R_PPC_REL16_LO 250#define R_PPC_REL16 249#define R_PPC_IRELATIVE 248#define R_PPC_TLSLD 96#define R_PPC_TLSGD 95#define R_PPC_GOT_DTPREL16_HA 94#define R_PPC_GOT_DTPREL16_HI 93#define R_PPC_GOT_DTPREL16_LO 92#define R_PPC_GOT_DTPREL16 91#define R_PPC_GOT_TPREL16_HA 90#define R_PPC_GOT_TPREL16_HI 89#define R_PPC_GOT_TPREL16_LO 88#define R_PPC_GOT_TPREL16 87#define R_PPC_GOT_TLSLD16_HA 86#define R_PPC_GOT_TLSLD16_HI 85#define R_PPC_GOT_TLSLD16_LO 84#define R_PPC_GOT_TLSLD16 83#define R_PPC_GOT_TLSGD16_HA 82#define R_PPC_GOT_TLSGD16_HI 81#define R_PPC_GOT_TLSGD16_LO 80#define R_PPC_GOT_TLSGD16 79#define R_PPC_DTPREL32 78#define R_PPC_DTPREL16_HA 77#define R_PPC_DTPREL16_HI 76#define R_PPC_DTPREL16_LO 75#define R_PPC_DTPREL16 74#define R_PPC_TPREL32 73#define R_PPC_TPREL16_HA 72#define R_PPC_TPREL16_HI 71#define R_PPC_TPREL16_LO 70#define R_PPC_TPREL16 69#define R_PPC_DTPMOD32 68#define R_PPC_TLS 67#define DT_ALPHA_NUM 1#define DT_ALPHA_PLTRO (DT_LOPROC + 0)#define LITUSE_ALPHA_TLS_LDM 5#define LITUSE_ALPHA_TLS_GD 4#define LITUSE_ALPHA_JSR 3#define LITUSE_ALPHA_BYTOFF 2#define LITUSE_ALPHA_BASE 1#define LITUSE_ALPHA_ADDR 0#define R_ALPHA_NUM 46#define R_ALPHA_TPREL16 41#define R_ALPHA_TPRELLO 40#define R_ALPHA_TPRELHI 39#define R_ALPHA_TPREL64 38#define R_ALPHA_GOTTPREL 37#define R_ALPHA_DTPREL16 36#define R_ALPHA_DTPRELLO 35#define R_ALPHA_DTPRELHI 34#define R_ALPHA_DTPREL64 33#define R_ALPHA_GOTDTPREL 32#define R_ALPHA_DTPMOD64 31#define R_ALPHA_TLS_LDM 30#define R_ALPHA_TLSGD 29#define R_ALPHA_TLS_GD_HI 28#define R_ALPHA_RELATIVE 27#define R_ALPHA_JMP_SLOT 26#define R_ALPHA_GLOB_DAT 25#define R_ALPHA_COPY 24#define R_ALPHA_GPREL16 19#define R_ALPHA_GPRELLOW 18#define R_ALPHA_GPRELHIGH 17#define R_ALPHA_SREL64 11#define R_ALPHA_SREL32 10#define R_ALPHA_SREL16 9#define R_ALPHA_HINT 8#define R_ALPHA_BRADDR 7#define R_ALPHA_GPDISP 6#define R_ALPHA_LITUSE 5#define R_ALPHA_LITERAL 4#define R_ALPHA_GPREL32 3#define R_ALPHA_REFQUAD 2#define R_ALPHA_REFLONG 1#define R_ALPHA_NONE 0#define STO_ALPHA_STD_GPLOAD 0x88#define STO_ALPHA_NOPV 0x80#define SHF_ALPHA_GPREL 0x10000000#define SHT_ALPHA_REGINFO 0x70000002#define SHT_ALPHA_DEBUG 0x70000001#define EF_ALPHA_CANRELAX 2#define EF_ALPHA_32BIT 1#define PF_HP_SBP 0x08000000#define PF_HP_LAZYSWAP 0x04000000#define PF_HP_MODIFY 0x02000000#define PF_HP_CODE 0x01000000#define PF_HP_NEAR_SHARED 0x00400000#define PF_HP_FAR_SHARED 0x00200000#define PF_HP_PAGE_SIZE 0x00100000#define PF_PARISC_SBP 0x08000000#define PT_PARISC_UNWIND 0x70000001#define PT_PARISC_ARCHEXT 0x70000000#define PT_HP_STACK (PT_LOOS + 0x14)#define PT_HP_HSL_ANNOT (PT_LOOS + 0x13)#define PT_HP_OPT_ANNOT (PT_LOOS + 0x12)#define PT_HP_FASTBIND (PT_LOOS + 0x11)#define PT_HP_PARALLEL (PT_LOOS + 0x10)#define PT_HP_CORE_MMF (PT_LOOS + 0x9)#define PT_HP_CORE_SHM (PT_LOOS + 0x8)#define PT_HP_CORE_STACK (PT_LOOS + 0x7)#define PT_HP_CORE_LOADABLE (PT_LOOS + 0x6)#define PT_HP_CORE_PROC (PT_LOOS + 0x5)#define PT_HP_CORE_COMM (PT_LOOS + 0x4)#define PT_HP_CORE_KERNEL (PT_LOOS + 0x3)#define PT_HP_CORE_VERSION (PT_LOOS + 0x2)#define PT_HP_CORE_NONE (PT_LOOS + 0x1)#define PT_HP_TLS (PT_LOOS + 0x0)#define R_PARISC_HIRESERVE 255#define R_PARISC_TLS_TPREL64 R_PARISC_TPREL64#define R_PARISC_TLS_TPREL32 R_PARISC_TPREL32#define R_PARISC_TLS_IE14R R_PARISC_LTOFF_TP14R#define R_PARISC_TLS_IE21L R_PARISC_LTOFF_TP21L#define R_PARISC_TLS_LE14R R_PARISC_TPREL14R#define R_PARISC_TLS_LE21L R_PARISC_TPREL21L#define R_PARISC_TLS_DTPOFF64 245#define R_PARISC_TLS_DTPOFF32 244#define R_PARISC_TLS_DTPMOD64 243#define R_PARISC_TLS_DTPMOD32 242#define R_PARISC_TLS_LDO14R 241#define R_PARISC_TLS_LDO21L 240#define R_PARISC_TLS_LDMCALL 239#define R_PARISC_TLS_LDM14R 238#define R_PARISC_TLS_LDM21L 237#define R_PARISC_TLS_GDCALL 236#define R_PARISC_TLS_GD14R 235#define R_PARISC_TLS_GD21L 234#define R_PARISC_GNU_VTINHERIT 233#define R_PARISC_GNU_VTENTRY 232#define R_PARISC_LTOFF_TP16DF 231#define R_PARISC_LTOFF_TP16WF 230#define R_PARISC_LTOFF_TP16F 229#define R_PARISC_LTOFF_TP14DR 228#define R_PARISC_LTOFF_TP14WR 227#define R_PARISC_LTOFF_TP64 224#define R_PARISC_TPREL16DF 223#define R_PARISC_TPREL16WF 222#define R_PARISC_TPREL16F 221#define R_PARISC_TPREL14DR 220#define R_PARISC_TPREL14WR 219#define R_PARISC_TPREL64 216#define R_PARISC_LTOFF_TP14F 167#define R_PARISC_LTOFF_TP14R 166#define R_PARISC_LTOFF_TP21L 162#define R_PARISC_TPREL14R 158#define R_PARISC_TPREL21L 154#define R_PARISC_TPREL32 153#define R_PARISC_EPLT 130#define R_PARISC_IPLT 129#define R_PARISC_COPY 128#define R_PARISC_LORESERVE 128#define R_PARISC_LTOFF_FPTR16DF 127#define R_PARISC_LTOFF_FPTR16WF 126#define R_PARISC_LTOFF_FPTR16F 125#define R_PARISC_LTOFF_FPTR14DR 124#define R_PARISC_LTOFF_FPTR14WR 123#define R_PARISC_LTOFF_FPTR64 120#define R_PARISC_PLTOFF16DF 119#define R_PARISC_PLTOFF16WF 118#define R_PARISC_PLTOFF16F 117#define R_PARISC_PLTOFF14DR 116#define R_PARISC_PLTOFF14WR 115#define R_PARISC_SEGREL64 112#define R_PARISC_SECREL64 104#define R_PARISC_LTOFF16DF 103#define R_PARISC_LTOFF16WF 102#define R_PARISC_LTOFF16F 101#define R_PARISC_LTOFF14DR 100#define R_PARISC_LTOFF14WR 99#define R_PARISC_LTOFF64 96#define R_PARISC_GPREL16DF 95#define R_PARISC_GPREL16WF 94#define R_PARISC_GPREL16F 93#define R_PARISC_GPREL14DR 92#define R_PARISC_GPREL14WR 91#define R_PARISC_GPREL64 88#define R_PARISC_DIR16DF 87#define R_PARISC_DIR16WF 86#define R_PARISC_DIR16F 85#define R_PARISC_DIR14DR 84#define R_PARISC_DIR14WR 83#define R_PARISC_DIR64 80#define R_PARISC_PCREL16DF 79#define R_PARISC_PCREL16WF 78#define R_PARISC_PCREL16F 77#define R_PARISC_PCREL14DR 76#define R_PARISC_PCREL14WR 75#define R_PARISC_PCREL22F 74#define R_PARISC_PCREL64 72#define R_PARISC_PLABEL14R 70#define R_PARISC_PLABEL21L 66#define R_PARISC_PLABEL32 65#define R_PARISC_FPTR64 64#define R_PARISC_LTOFF_FPTR14R 62#define R_PARISC_LTOFF_FPTR21L 58#define R_PARISC_LTOFF_FPTR32 57#define R_PARISC_PLTOFF14R 54#define R_PARISC_PLTOFF21L 50#define R_PARISC_SEGREL32 49#define R_PARISC_SEGBASE 48#define R_PARISC_SECREL32 41#define R_PARISC_LTOFF14R 38#define R_PARISC_LTOFF21L 34#define R_PARISC_GPREL14R 30#define R_PARISC_GPREL21L 26#define R_PARISC_DPREL14R 22#define R_PARISC_DPREL21L 18#define R_PARISC_PCREL14R 14#define R_PARISC_PCREL17F 12#define R_PARISC_PCREL17R 11#define R_PARISC_PCREL21L 10#define R_PARISC_PCREL32 9#define R_PARISC_DIR14R 6#define R_PARISC_DIR17F 4#define R_PARISC_DIR17R 3#define R_PARISC_DIR21L 2#define R_PARISC_DIR32 1#define R_PARISC_NONE 0#define STT_HP_STUB (STT_LOOS + 0x2)#define STT_HP_OPAQUE (STT_LOOS + 0x1)#define STT_PARISC_MILLICODE 13#define SHF_PARISC_SBP 0x80000000#define SHF_PARISC_HUGE 0x40000000#define SHF_PARISC_SHORT 0x20000000#define SHT_PARISC_DOC 0x70000002#define SHT_PARISC_UNWIND 0x70000001#define SHT_PARISC_EXT 0x70000000#define SHN_PARISC_HUGE_COMMON 0xff01#define SHN_PARISC_ANSI_COMMON 0xff00#define EFA_PARISC_2_0 0x0214#define EFA_PARISC_1_1 0x0210#define EFA_PARISC_1_0 0x020b#define EF_PARISC_ARCH 0x0000ffff#define EF_PARISC_LAZYSWAP 0x00400000#define EF_PARISC_NO_KABP 0x00100000#define EF_PARISC_WIDE 0x00080000#define EF_PARISC_LSB 0x00040000#define EF_PARISC_EXT 0x00020000#define EF_PARISC_TRAPNIL 0x00010000#define MIPS_AFL_FLAGS1_ODDSPREG 1#define MIPS_AFL_EXT_LOONGSON_2F 18#define MIPS_AFL_EXT_LOONGSON_2E 17#define MIPS_AFL_EXT_5500 16#define MIPS_AFL_EXT_5400 15#define MIPS_AFL_EXT_4120 14#define MIPS_AFL_EXT_4111 13#define MIPS_AFL_EXT_SB1 12#define MIPS_AFL_EXT_10000 11#define MIPS_AFL_EXT_3900 10#define MIPS_AFL_EXT_4100 9#define MIPS_AFL_EXT_4010 8#define MIPS_AFL_EXT_4650 7#define MIPS_AFL_EXT_5900 6#define MIPS_AFL_EXT_OCTEON 5#define MIPS_AFL_EXT_LOONGSON_3A 4#define MIPS_AFL_EXT_OCTEONP 3#define MIPS_AFL_EXT_OCTEON2 2#define MIPS_AFL_EXT_XLR 1#define MIPS_AFL_ASE_MASK 0x00001fff#define MIPS_AFL_ASE_XPA 0x00001000#define MIPS_AFL_ASE_MICROMIPS 0x00000800#define MIPS_AFL_ASE_MIPS16 0x00000400#define MIPS_AFL_ASE_MSA 0x00000200#define MIPS_AFL_ASE_VIRT 0x00000100#define MIPS_AFL_ASE_SMARTMIPS 0x00000080#define MIPS_AFL_ASE_MT 0x00000040#define MIPS_AFL_ASE_MIPS3D 0x00000020#define MIPS_AFL_ASE_MDMX 0x00000010#define MIPS_AFL_ASE_MCU 0x00000008#define MIPS_AFL_ASE_EVA 0x00000004#define MIPS_AFL_ASE_DSPR2 0x00000002#define MIPS_AFL_ASE_DSP 0x00000001#define MIPS_AFL_REG_128 0x03#define MIPS_AFL_REG_64 0x02#define MIPS_AFL_REG_32 0x01#define MIPS_AFL_REG_NONE 0x00#define LL_DELTA (1 << 5)#define LL_DELAY_LOAD (1 << 4)#define LL_EXPORTS (1 << 3)#define LL_REQUIRE_MINOR (1 << 2)#define LL_IGNORE_INT_VER (1 << 1)#define LL_EXACT_MATCH (1 << 0)#define LL_NONE 0#define RHF_RLD_ORDER_SAFE (1 << 14)#define RHF_NO_UNRES_UNDEF (1 << 13)#define RHF_CORD (1 << 12)#define RHF_REQUICKSTARTED (1 << 11)#define RHF_REQUICKSTART (1 << 10)#define RHF_DEFAULT_DELAY_LOAD (1 << 9)#define RHF_PIXIE (1 << 8)#define RHF_GUARANTEE_START_INIT (1 << 7)#define RHF_DELTA_C_PLUS_PLUS (1 << 6)#define RHF_GUARANTEE_INIT (1 << 5)#define RHF_SGI_ONLY (1 << 4)#define RHF_NO_MOVE (1 << 3)#define RHF_NO_LIBRARY_REPLACEMENT (1 << 2)#define RHF_NOTPOT (1 << 1)#define RHF_QUICKSTART (1 << 0)#define RHF_NONE 0#define DT_MIPS_NUM 0x36#define DT_MIPS_RLD_MAP_REL 0x70000035#define DT_MIPS_RWPLT 0x70000034#define DT_MIPS_PLTGOT 0x70000032#define DT_MIPS_AUX_DYNAMIC 0x70000031#define DT_MIPS_GP_VALUE 0x70000030#define DT_MIPS_COMPACT_SIZE 0x7000002f#define DT_MIPS_PERF_SUFFIX 0x7000002e#define DT_MIPS_RLD_TEXT_RESOLVE_ADDR 0x7000002d#define DT_MIPS_INTERFACE_SIZE 0x7000002c#define DT_MIPS_DYNSTR_ALIGN 0x7000002b#define DT_MIPS_INTERFACE 0x7000002a#define DT_MIPS_OPTIONS 0x70000029#define DT_MIPS_PROTECTED_GOTIDX 0x70000028#define DT_MIPS_HIDDEN_GOTIDX 0x70000027#define DT_MIPS_LOCAL_GOTIDX 0x70000026#define DT_MIPS_LOCALPAGE_GOTIDX 0x70000025#define DT_MIPS_SYMBOL_LIB 0x70000024#define DT_MIPS_PIXIE_INIT 0x70000023#define DT_MIPS_CXX_FLAGS 0x70000022#define DT_MIPS_DELTA_CLASSSYM_NO 0x70000021#define DT_MIPS_DELTA_CLASSSYM 0x70000020#define DT_MIPS_DELTA_SYM_NO 0x7000001e#define DT_MIPS_DELTA_SYM 0x7000001d#define DT_MIPS_DELTA_RELOC_NO 0x7000001c#define DT_MIPS_DELTA_RELOC 0x7000001b#define DT_MIPS_DELTA_INSTANCE_NO 0x7000001a#define DT_MIPS_DELTA_INSTANCE 0x70000019#define DT_MIPS_DELTA_CLASS_NO 0x70000018#define DT_MIPS_DELTA_CLASS 0x70000017#define DT_MIPS_RLD_MAP 0x70000016#define DT_MIPS_HIPAGENO 0x70000014#define DT_MIPS_GOTSYM 0x70000013#define DT_MIPS_UNREFEXTNO 0x70000012#define DT_MIPS_SYMTABNO 0x70000011#define DT_MIPS_LIBLISTNO 0x70000010#define DT_MIPS_CONFLICTNO 0x7000000b#define DT_MIPS_LOCAL_GOTNO 0x7000000a#define DT_MIPS_LIBLIST 0x70000009#define DT_MIPS_CONFLICT 0x70000008#define DT_MIPS_MSYM 0x70000007#define DT_MIPS_BASE_ADDRESS 0x70000006#define DT_MIPS_FLAGS 0x70000005#define DT_MIPS_IVERSION 0x70000004#define DT_MIPS_ICHECKSUM 0x70000003#define DT_MIPS_TIME_STAMP 0x70000002#define DT_MIPS_RLD_VERSION 0x70000001#define PF_MIPS_LOCAL 0x10000000#define PT_MIPS_ABIFLAGS 0x70000003#define PT_MIPS_OPTIONS 0x70000002#define PT_MIPS_RTPROC 0x70000001#define PT_MIPS_REGINFO 0x70000000#define R_MIPS_NUM 128#define R_MIPS_JUMP_SLOT 127#define R_MIPS_COPY 126#define R_MIPS_GLOB_DAT 51#define R_MIPS_TLS_TPREL_LO16 50#define R_MIPS_TLS_TPREL_HI16 49#define R_MIPS_TLS_TPREL64 48#define R_MIPS_TLS_TPREL32 47#define R_MIPS_TLS_GOTTPREL 46#define R_MIPS_TLS_DTPREL_LO16 45#define R_MIPS_TLS_DTPREL_HI16 44#define R_MIPS_TLS_LDM 43#define R_MIPS_TLS_GD 42#define R_MIPS_TLS_DTPREL64 41#define R_MIPS_TLS_DTPMOD64 40#define R_MIPS_TLS_DTPREL32 39#define R_MIPS_TLS_DTPMOD32 38#define R_MIPS_JALR 37#define R_MIPS_RELGOT 36#define R_MIPS_PJUMP 35#define R_MIPS_ADD_IMMEDIATE 34#define R_MIPS_REL16 33#define R_MIPS_SCN_DISP 32#define R_MIPS_CALL_LO16 31#define R_MIPS_CALL_HI16 30#define R_MIPS_HIGHEST 29#define R_MIPS_HIGHER 28#define R_MIPS_DELETE 27#define R_MIPS_INSERT_B 26#define R_MIPS_INSERT_A 25#define R_MIPS_SUB 24#define R_MIPS_GOT_LO16 23#define R_MIPS_GOT_HI16 22#define R_MIPS_GOT_OFST 21#define R_MIPS_GOT_PAGE 20#define R_MIPS_GOT_DISP 19#define R_MIPS_64 18#define R_MIPS_SHIFT6 17#define R_MIPS_SHIFT5 16#define R_MIPS_GPREL32 12#define R_MIPS_CALL16 11#define R_MIPS_PC16 10#define R_MIPS_GOT16 9#define R_MIPS_LITERAL 8#define R_MIPS_GPREL16 7#define R_MIPS_LO16 6#define R_MIPS_HI16 5#define R_MIPS_26 4#define R_MIPS_REL32 3#define R_MIPS_32 2#define R_MIPS_16 1#define R_MIPS_NONE 0#define OHWA1_R4KEOP_CLEAN 0x00000002#define OHWA0_R4KEOP_CHECKED 0x00000001#define OPAD_SYMBOL 0x4#define OPAD_POSTFIX 0x2#define OPAD_PREFIX 0x1#define OHW_R5KCVTL 0x8#define OHW_R5KEOP 0x4#define OHW_R8KPFETCH 0x2#define OHW_R4KEOP 0x1#define OEX_FPU_INEX 0x01#define OEX_FPU_UFLO 0x02#define OEX_FPU_OFLO 0x04#define OEX_FPU_DIV0 0x08#define OEX_FPU_INVAL 0x10#define OEX_DISMISS 0x80000#define OEX_PRECISEFP OEX_FPDBUG#define OEX_FPDBUG 0x40000#define OEX_SMM 0x20000#define OEX_PAGE0 0x10000#define OEX_FPU_MAX 0x1f00#define OEX_FPU_MIN 0x1f#define ODK_HWOR 8#define ODK_HWAND 7#define ODK_TAGS 6#define ODK_FILL 5#define ODK_HWPATCH 4#define ODK_PAD 3#define ODK_EXCEPTIONS 2#define ODK_REGINFO 1#define ODK_NULL 0#define STB_MIPS_SPLIT_COMMON 13#define STO_MIPS_SC_ALIGN_UNUSED 0xff#define STO_MIPS_PLT 0x8#define STO_MIPS_PROTECTED 0x3#define STO_MIPS_HIDDEN 0x2#define STO_MIPS_INTERNAL 0x1#define STO_MIPS_DEFAULT 0x0#define SHF_MIPS_NODUPE 0x01000000#define SHF_MIPS_NAMES 0x02000000#define SHF_MIPS_LOCAL 0x04000000#define SHF_MIPS_NOSTRIP 0x08000000#define SHF_MIPS_STRINGS 0x80000000#define SHF_MIPS_ADDR 0x40000000#define SHF_MIPS_MERGE 0x20000000#define SHF_MIPS_GPREL 0x10000000#define SHT_MIPS_PDR_EXCEPTION 0x70000029#define SHT_MIPS_XLATE_OLD 0x70000028#define SHT_MIPS_EH_REGION 0x70000027#define SHT_MIPS_WHIRL 0x70000026#define SHT_MIPS_XLATE_DEBUG 0x70000025#define SHT_MIPS_XLATE 0x70000024#define SHT_MIPS_PIXIE 0x70000023#define SHT_MIPS_TRANSLATE 0x70000022#define SHT_MIPS_EVENTS 0x70000021#define SHT_MIPS_SYMBOL_LIB 0x70000020#define SHT_MIPS_DELTADECL 0x7000001f#define SHT_MIPS_DWARF 0x7000001e#define SHT_MIPS_DELTACLASS 0x7000001d#define SHT_MIPS_DELTAINST 0x7000001c#define SHT_MIPS_DELTASYM 0x7000001b#define SHT_MIPS_RFDESC 0x7000001a#define SHT_MIPS_LINE 0x70000019#define SHT_MIPS_LOCSTR 0x70000018#define SHT_MIPS_OPTSYM 0x70000017#define SHT_MIPS_AUXSYM 0x70000016#define SHT_MIPS_LOCSYM 0x70000015#define SHT_MIPS_PDESC 0x70000014#define SHT_MIPS_DENSE 0x70000013#define SHT_MIPS_EXTSYM 0x70000012#define SHT_MIPS_FDESC 0x70000011#define SHT_MIPS_SHDR 0x70000010#define SHT_MIPS_OPTIONS 0x7000000d#define SHT_MIPS_CONTENT 0x7000000c#define SHT_MIPS_IFACE 0x7000000b#define SHT_MIPS_RELD 0x70000009#define SHT_MIPS_PACKSYM 0x70000008#define SHT_MIPS_PACKAGE 0x70000007#define SHT_MIPS_REGINFO 0x70000006#define SHT_MIPS_DEBUG 0x70000005#define SHT_MIPS_UCODE 0x70000004#define SHT_MIPS_GPTAB 0x70000003#define SHT_MIPS_CONFLICT 0x70000002#define SHT_MIPS_MSYM 0x70000001#define SHT_MIPS_LIBLIST 0x70000000#define SHN_MIPS_SUNDEFINED 0xff04#define SHN_MIPS_SCOMMON 0xff03#define SHN_MIPS_DATA 0xff02#define SHN_MIPS_TEXT 0xff01#define SHN_MIPS_ACOMMON 0xff00#define E_MIPS_ARCH_64 EF_MIPS_ARCH_64#define E_MIPS_ARCH_32 EF_MIPS_ARCH_32#define E_MIPS_ARCH_5 EF_MIPS_ARCH_5#define E_MIPS_ARCH_4 EF_MIPS_ARCH_4#define E_MIPS_ARCH_3 EF_MIPS_ARCH_3#define E_MIPS_ARCH_2 EF_MIPS_ARCH_2#define E_MIPS_ARCH_1 EF_MIPS_ARCH_1#define EF_MIPS_ARCH_64R2 0x80000000#define EF_MIPS_ARCH_32R2 0x70000000#define EF_MIPS_ARCH_64 0x60000000#define EF_MIPS_ARCH_32 0x50000000#define EF_MIPS_ARCH_5 0x40000000#define EF_MIPS_ARCH_4 0x30000000#define EF_MIPS_ARCH_3 0x20000000#define EF_MIPS_ARCH_2 0x10000000#define EF_MIPS_ARCH_1 0x00000000#define EF_MIPS_ARCH 0xf0000000#define EF_MIPS_NAN2008 1024#define EF_MIPS_FP64 512#define EF_MIPS_ABI_ON32 64#define EF_MIPS_ABI2 32#define EF_MIPS_64BIT_WHIRL 16#define EF_MIPS_XGOT 8#define EF_MIPS_CPIC 4#define EF_MIPS_PIC 2#define EF_MIPS_NOREORDER 1#define DT_SPARC_NUM 2#define DT_SPARC_REGISTER 0x70000001#define R_SPARC_NUM 253#define R_SPARC_REV32 252#define R_SPARC_GNU_VTENTRY 251#define R_SPARC_GNU_VTINHERIT 250#define R_SPARC_IRELATIVE 249#define R_SPARC_JMP_IREL 248#define R_SPARC_WDISP10 88#define R_SPARC_SIZE64 87#define R_SPARC_SIZE32 86#define R_SPARC_H34 85#define R_SPARC_GOTDATA_OP 84#define R_SPARC_GOTDATA_OP_LOX10 83#define R_SPARC_GOTDATA_OP_HIX22 82#define R_SPARC_GOTDATA_LOX10 81#define R_SPARC_GOTDATA_HIX22 80#define R_SPARC_TLS_TPOFF64 79#define R_SPARC_TLS_TPOFF32 78#define R_SPARC_TLS_DTPOFF64 77#define R_SPARC_TLS_DTPOFF32 76#define R_SPARC_TLS_DTPMOD64 75#define R_SPARC_TLS_DTPMOD32 74#define R_SPARC_TLS_LE_LOX10 73#define R_SPARC_TLS_LE_HIX22 72#define R_SPARC_TLS_IE_ADD 71#define R_SPARC_TLS_IE_LDX 70#define R_SPARC_TLS_IE_LD 69#define R_SPARC_TLS_IE_LO10 68#define R_SPARC_TLS_IE_HI22 67#define R_SPARC_TLS_LDO_ADD 66#define R_SPARC_TLS_LDO_LOX10 65#define R_SPARC_TLS_LDO_HIX22 64#define R_SPARC_TLS_LDM_CALL 63#define R_SPARC_TLS_LDM_ADD 62#define R_SPARC_TLS_LDM_LO10 61#define R_SPARC_TLS_LDM_HI22 60#define R_SPARC_TLS_GD_CALL 59#define R_SPARC_TLS_GD_ADD 58#define R_SPARC_TLS_GD_LO10 57#define R_SPARC_TLS_GD_HI22 56#define R_SPARC_UA16 55#define R_SPARC_UA64 54#define R_SPARC_REGISTER 53#define R_SPARC_L44 52#define R_SPARC_M44 51#define R_SPARC_H44 50#define R_SPARC_LOX10 49#define R_SPARC_HIX22 48#define R_SPARC_PLT64 47#define R_SPARC_DISP64 46#define R_SPARC_6 45#define R_SPARC_5 44#define R_SPARC_7 43#define R_SPARC_GLOB_JMP 42#define R_SPARC_WDISP19 41#define R_SPARC_WDISP16 40#define R_SPARC_PC_LM22 39#define R_SPARC_PC_HM10 38#define R_SPARC_PC_HH22 37#define R_SPARC_LM22 36#define R_SPARC_HM10 35#define R_SPARC_HH22 34#define R_SPARC_OLO10 33#define R_SPARC_64 32#define R_SPARC_11 31#define R_SPARC_10 30#define R_SPARC_PCPLT10 29#define R_SPARC_PCPLT22 28#define R_SPARC_PCPLT32 27#define R_SPARC_LOPLT10 26#define R_SPARC_HIPLT22 25#define R_SPARC_PLT32 24#define R_SPARC_UA32 23#define R_SPARC_RELATIVE 22#define R_SPARC_JMP_SLOT 21#define R_SPARC_GLOB_DAT 20#define R_SPARC_COPY 19#define R_SPARC_WPLT30 18#define R_SPARC_PC22 17#define R_SPARC_PC10 16#define R_SPARC_GOT22 15#define R_SPARC_GOT13 14#define R_SPARC_GOT10 13#define R_SPARC_LO10 12#define R_SPARC_13 11#define R_SPARC_22 10#define R_SPARC_HI22 9#define R_SPARC_WDISP22 8#define R_SPARC_WDISP30 7#define R_SPARC_DISP32 6#define R_SPARC_DISP16 5#define R_SPARC_DISP8 4#define R_SPARC_32 3#define R_SPARC_16 2#define R_SPARC_8 1#define R_SPARC_NONE 0#define EF_SPARC_SUN_US3 0x000800#define EF_SPARC_HAL_R1 0x000400#define EF_SPARC_SUN_US1 0x000200#define EF_SPARC_32PLUS 0x000100#define EF_SPARC_EXT_MASK 0xFFFF00#define EF_SPARC_LEDATA 0x800000#define EF_SPARCV9_RMO 2#define EF_SPARCV9_PSO 1#define EF_SPARCV9_TSO 0#define EF_SPARCV9_MM 3#define STT_SPARC_REGISTER 13#define R_386_NUM 44#define R_386_GOT32X 43#define R_386_IRELATIVE 42#define R_386_TLS_DESC 41#define R_386_TLS_DESC_CALL 40#define R_386_TLS_GOTDESC 39#define R_386_SIZE32 38#define R_386_TLS_TPOFF32 37#define R_386_TLS_DTPOFF32 36#define R_386_TLS_DTPMOD32 35#define R_386_TLS_LE_32 34#define R_386_TLS_IE_32 33#define R_386_TLS_LDO_32 32#define R_386_TLS_LDM_POP 31#define R_386_TLS_LDM_CALL 30#define R_386_TLS_LDM_PUSH 29#define R_386_TLS_LDM_32 28#define R_386_TLS_GD_POP 27#define R_386_TLS_GD_CALL 26#define R_386_TLS_GD_PUSH 25#define R_386_TLS_GD_32 24#define R_386_PC8 23#define R_386_8 22#define R_386_PC16 21#define R_386_16 20#define R_386_TLS_LDM 19#define R_386_TLS_GD 18#define R_386_TLS_LE 17#define R_386_TLS_GOTIE 16#define R_386_TLS_IE 15#define R_386_TLS_TPOFF 14#define R_386_32PLT 11#define R_68K_NUM 43#define R_68K_TLS_TPREL32 42#define R_68K_TLS_DTPREL32 41#define R_68K_TLS_DTPMOD32 40#define R_68K_TLS_LE8 39#define R_68K_TLS_LE16 38#define R_68K_TLS_LE32 37#define R_68K_TLS_IE8 36#define R_68K_TLS_IE16 35#define R_68K_TLS_IE32 34#define R_68K_TLS_LDO8 33#define R_68K_TLS_LDO16 32#define R_68K_TLS_LDO32 31#define R_68K_TLS_LDM8 30#define R_68K_TLS_LDM16 29#define R_68K_TLS_LDM32 28#define R_68K_TLS_GD8 27#define R_68K_TLS_GD16 26#define R_68K_TLS_GD32 25#define R_68K_RELATIVE 22#define R_68K_JMP_SLOT 21#define R_68K_GLOB_DAT 20#define R_68K_COPY 19#define R_68K_PLT8O 18#define R_68K_PLT16O 17#define R_68K_PLT32O 16#define R_68K_PLT8 15#define R_68K_PLT16 14#define R_68K_PLT32 13#define R_68K_GOT8O 12#define R_68K_GOT16O 11#define R_68K_GOT32O 10#define R_68K_GOT8 9#define R_68K_GOT16 8#define R_68K_GOT32 7#define R_68K_PC8 6#define R_68K_PC16 5#define R_68K_PC32 4#define R_68K_8 3#define R_68K_16 2#define R_68K_32 1#define R_68K_NONE 0#define EF_CPU32 0x00810000#define ELF64_M_INFO(sym,size) ELF32_M_INFO (sym, size)#define ELF64_M_SIZE(info) ELF32_M_SIZE (info)#define ELF64_M_SYM(info) ELF32_M_SYM (info)#define ELF32_M_INFO(sym,size) (((sym) << 8) + (unsigned char) (size))#define ELF32_M_SIZE(info) ((unsigned char) (info))#define ELF32_M_SYM(info) ((info) >> 8)#define GNU_PROPERTY_X86_FEATURE_1_SHSTK (1U << 1)#define GNU_PROPERTY_X86_FEATURE_1_IBT (1U << 0)#define GNU_PROPERTY_X86_ISA_1_AVX512BW (1U << 17)#define GNU_PROPERTY_X86_ISA_1_AVX512DQ (1U << 16)#define GNU_PROPERTY_X86_ISA_1_AVX512VL (1U << 15)#define GNU_PROPERTY_X86_ISA_1_AVX512PF (1U << 14)#define GNU_PROPERTY_X86_ISA_1_AVX512ER (1U << 13)#define GNU_PROPERTY_X86_ISA_1_AVX512CD (1U << 12)#define GNU_PROPERTY_X86_ISA_1_AVX512F (1U << 11)#define GNU_PROPERTY_X86_ISA_1_AVX2 (1U << 10)#define GNU_PROPERTY_X86_ISA_1_AVX (1U << 9)#define GNU_PROPERTY_X86_ISA_1_SSE4_2 (1U << 8)#define GNU_PROPERTY_X86_ISA_1_SSE4_1 (1U << 7)#define GNU_PROPERTY_X86_ISA_1_SSSE3 (1U << 6)#define GNU_PROPERTY_X86_ISA_1_SSE3 (1U << 5)#define GNU_PROPERTY_X86_ISA_1_SSE2 (1U << 4)#define GNU_PROPERTY_X86_ISA_1_SSE (1U << 3)#define GNU_PROPERTY_X86_ISA_1_686 (1U << 2)#define GNU_PROPERTY_X86_ISA_1_586 (1U << 1)#define GNU_PROPERTY_X86_ISA_1_486 (1U << 0)#define GNU_PROPERTY_X86_FEATURE_1_AND 0xc0000002#define GNU_PROPERTY_X86_ISA_1_NEEDED 0xc0000001#define GNU_PROPERTY_X86_ISA_1_USED 0xc0000000#define GNU_PROPERTY_HIUSER 0xffffffff#define GNU_PROPERTY_LOUSER 0xe0000000#define GNU_PROPERTY_HIPROC 0xdfffffff#define GNU_PROPERTY_LOPROC 0xc0000000#define GNU_PROPERTY_NO_COPY_ON_PROTECTED 2#define GNU_PROPERTY_STACK_SIZE 1#define NOTE_GNU_PROPERTY_SECTION_NAME ".note.gnu.property"#define NT_GNU_PROPERTY_TYPE_0 5#define NT_GNU_GOLD_VERSION 4#define NT_GNU_BUILD_ID 3#define NT_GNU_HWCAP 2#define ELF_NOTE_OS_FREEBSD 3#define ELF_NOTE_OS_SOLARIS2 2#define ELF_NOTE_OS_GNU 1#define ELF_NOTE_OS_LINUX 0#define ELF_NOTE_ABI NT_GNU_ABI_TAG#define NT_GNU_ABI_TAG 1#define ELF_NOTE_PAGESIZE_HINT 1#define ELF_NOTE_GNU "GNU"#define ELF_NOTE_SOLARIS "SUNW Solaris"#define VER_FLG_WEAK 0x2#define VER_NEED_NUM 2#define VER_NEED_CURRENT 1#define VER_NEED_NONE 0#define VER_NDX_ELIMINATE 0xff01#define VER_NDX_LORESERVE 0xff00#define VER_NDX_GLOBAL 1#define VER_NDX_LOCAL 0#define VER_FLG_BASE 0x1#define VER_DEF_NUM 2#define VER_DEF_CURRENT 1#define VER_DEF_NONE 0#define DF_P1_GROUPPERM 0x00000002#define DF_P1_LAZYLOAD 0x00000001#define DTF_1_CONFEXP 0x00000002#define DTF_1_PARINIT 0x00000001#define DF_1_PIE 0x08000000#define DF_1_STUB 0x04000000#define DF_1_SINGLETON 0x02000000#define DF_1_GLOBAUDIT 0x01000000#define DF_1_SYMINTPOSE 0x00800000#define DF_1_NORELOC 0x00400000#define DF_1_EDITED 0x00200000#define DF_1_NOHDR 0x00100000#define DF_1_NOKSYMS 0x00080000#define DF_1_IGNMULDEF 0x00040000#define DF_1_NODIRECT 0x00020000#define DF_1_DISPRELPND 0x00010000#define DF_1_DISPRELDNE 0x00008000#define DF_1_ENDFILTEE 0x00004000#define DF_1_CONFALT 0x00002000#define DF_1_NODUMP 0x00001000#define DF_1_NODEFLIB 0x00000800#define DF_1_INTERPOSE 0x00000400#define DF_1_TRANS 0x00000200#define DF_1_DIRECT 0x00000100#define DF_1_ORIGIN 0x00000080#define DF_1_NOOPEN 0x00000040#define DF_1_INITFIRST 0x00000020#define DF_1_LOADFLTR 0x00000010#define DF_1_NODELETE 0x00000008#define DF_1_GROUP 0x00000004#define DF_1_GLOBAL 0x00000002#define DF_1_NOW 0x00000001#define DF_STATIC_TLS 0x00000010#define DF_BIND_NOW 0x00000008#define DF_TEXTREL 0x00000004#define DF_SYMBOLIC 0x00000002#define DF_ORIGIN 0x00000001#define DT_EXTRANUM 3#define DT_EXTRATAGIDX(tag) ((Elf32_Word)-((Elf32_Sword) (tag) <<1>>1)-1)#define DT_FILTER 0x7fffffff#define DT_AUXILIARY 0x7ffffffd#define DT_VERSIONTAGNUM 16#define DT_VERSIONTAGIDX(tag) (DT_VERNEEDNUM - (tag))#define DT_VERNEEDNUM 0x6fffffff#define DT_VERNEED 0x6ffffffe#define DT_VERDEFNUM 0x6ffffffd#define DT_VERDEF 0x6ffffffc#define DT_FLAGS_1 0x6ffffffb#define DT_RELCOUNT 0x6ffffffa#define DT_RELACOUNT 0x6ffffff9#define DT_VERSYM 0x6ffffff0#define DT_ADDRNUM 11#define DT_ADDRTAGIDX(tag) (DT_ADDRRNGHI - (tag))#define DT_ADDRRNGHI 0x6ffffeff#define DT_SYMINFO 0x6ffffeff#define DT_MOVETAB 0x6ffffefe#define DT_PLTPAD 0x6ffffefd#define DT_AUDIT 0x6ffffefc#define DT_DEPAUDIT 0x6ffffefb#define DT_CONFIG 0x6ffffefa#define DT_GNU_LIBLIST 0x6ffffef9#define DT_GNU_CONFLICT 0x6ffffef8#define DT_TLSDESC_GOT 0x6ffffef7#define DT_TLSDESC_PLT 0x6ffffef6#define DT_GNU_HASH 0x6ffffef5#define DT_ADDRRNGLO 0x6ffffe00#define DT_VALNUM 12#define DT_VALTAGIDX(tag) (DT_VALRNGHI - (tag))#define DT_VALRNGHI 0x6ffffdff#define DT_SYMINENT 0x6ffffdff#define DT_SYMINSZ 0x6ffffdfe#define DT_POSFLAG_1 0x6ffffdfd#define DT_FEATURE_1 0x6ffffdfc#define DT_MOVESZ 0x6ffffdfb#define DT_MOVEENT 0x6ffffdfa#define DT_PLTPADSZ 0x6ffffdf9#define DT_CHECKSUM 0x6ffffdf8#define DT_GNU_LIBLISTSZ 0x6ffffdf7#define DT_GNU_CONFLICTSZ 0x6ffffdf6#define DT_GNU_PRELINKED 0x6ffffdf5#define DT_VALRNGLO 0x6ffffd00#define DT_PROCNUM DT_MIPS_NUM#define DT_HIOS 0x6ffff000#define DT_LOOS 0x6000000d#define DT_NUM 35#define DT_SYMTAB_SHNDX 34#define NT_VERSION 1#define NT_ARM_SVE 0x405#define NT_ARM_SYSTEM_CALL 0x404#define NT_ARM_HW_WATCH 0x403#define NT_ARM_HW_BREAK 0x402#define NT_ARM_TLS 0x401#define NT_ARM_VFP 0x400#define NT_S390_RI_CB 0x30d#define NT_S390_GS_BC 0x30c#define NT_S390_GS_CB 0x30b#define NT_S390_VXRS_HIGH 0x30a#define NT_S390_VXRS_LOW 0x309#define NT_S390_TDB 0x308#define NT_S390_SYSTEM_CALL 0x307#define NT_S390_LAST_BREAK 0x306#define NT_S390_PREFIX 0x305#define NT_S390_CTRS 0x304#define NT_S390_TODPREG 0x303#define NT_S390_TODCMP 0x302#define NT_S390_TIMER 0x301#define NT_S390_HIGH_GPRS 0x300#define NT_X86_XSTATE 0x202#define NT_386_IOPERM 0x201#define NT_386_TLS 0x200#define NT_PPC_PKEY 0x110#define NT_PPC_TM_CDSCR 0x10f#define NT_PPC_TM_CPPR 0x10e#define NT_PPC_TM_CTAR 0x10d#define NT_PPC_TM_SPR 0x10c#define NT_PPC_TM_CVSX 0x10b#define NT_PPC_TM_CVMX 0x10a#define NT_PPC_TM_CFPR 0x109#define NT_PPC_TM_CGPR 0x108#define NT_PPC_PMU 0x107#define NT_PPC_EBB 0x106#define NT_PPC_DSCR 0x105#define NT_PPC_PPR 0x104#define NT_PPC_TAR 0x103#define NT_PPC_VSX 0x102#define NT_PPC_SPE 0x101#define NT_PPC_VMX 0x100#define NT_PRXFPREG 0x46e62b7f#define NT_FILE 0x46494c45#define NT_SIGINFO 0x53494749#define NT_PRFPXREG 20#define NT_LWPSINFO 17#define NT_LWPSTATUS 16#define NT_UTSNAME 15#define NT_PRCRED 14#define NT_PSINFO 13#define NT_PSTATUS 10#define NT_ASRS 8#define NT_GWINDOWS 7#define NT_AUXV 6#define NT_PLATFORM 5#define NT_TASKSTRUCT 4#define NT_PRXREG 4#define NT_PRPSINFO 3#define NT_FPREGSET 2#define NT_PRFPREG 2#define NT_PRSTATUS 1#define PF_R (1 << 2)#define PF_W (1 << 1)#define PF_X (1 << 0)#define PT_HISUNW 0x6fffffff#define PT_SUNWSTACK 0x6ffffffb#define PT_SUNWBSS 0x6ffffffa#define PT_LOSUNW 0x6ffffffa#define PT_GNU_RELRO 0x6474e552#define PT_GNU_STACK 0x6474e551#define PT_GNU_EH_FRAME 0x6474e550#define PN_XNUM 0xffff#define ELF64_R_INFO(sym,type) ((((Elf64_Xword) (sym)) << 32) + (type))#define ELF32_R_INFO(sym,type) (((sym) << 8) + ((type) & 0xff))#define ELF32_R_TYPE(val) ((val) & 0xff)#define ELF32_R_SYM(val) ((val) >> 8)#define ELF64_ST_VISIBILITY(o) ELF32_ST_VISIBILITY (o)#define ELF32_ST_VISIBILITY(o) ((o) & 0x03)#define STT_GNU_IFUNC 10#define STT_NUM 7#define STT_COMMON 5#define STB_GNU_UNIQUE 10#define ELF64_ST_INFO(bind,type) ELF32_ST_INFO ((bind), (type))#define ELF64_ST_TYPE(val) ELF32_ST_TYPE (val)#define ELF64_ST_BIND(val) ELF32_ST_BIND (val)#define ELF32_ST_INFO(bind,type) (((bind) << 4) + ((type) & 0xf))#define ELF32_ST_TYPE(val) ((val) & 0xf)#define ELF32_ST_BIND(val) (((unsigned char) (val)) >> 4)#define SYMINFO_NUM 2#define SYMINFO_CURRENT 1#define SYMINFO_NONE 0#define SYMINFO_FLG_LAZYLOAD 0x0008#define SYMINFO_FLG_COPY 0x0004#define SYMINFO_FLG_PASSTHRU 0x0002#define SYMINFO_FLG_DIRECT 0x0001#define SYMINFO_BT_LOWRESERVE 0xff00#define SYMINFO_BT_PARENT 0xfffe#define SYMINFO_BT_SELF 0xffff#define ELFCOMPRESS_HIPROC 0x7fffffff#define ELFCOMPRESS_LOPROC 0x70000000#define ELFCOMPRESS_HIOS 0x6fffffff#define ELFCOMPRESS_LOOS 0x60000000#define ELFCOMPRESS_ZLIB 1#define SHF_EXCLUDE (1U << 31)#define SHF_ORDERED (1 << 30)#define SHF_COMPRESSED (1 << 11)#define SHF_TLS (1 << 10)#define SHF_GROUP (1 << 9)#define SHF_OS_NONCONFORMING (1 << 8)#define SHF_LINK_ORDER (1 << 7)#define SHF_INFO_LINK (1 << 6)#define SHF_STRINGS (1 << 5)#define SHF_MERGE (1 << 4)#define SHF_EXECINSTR (1 << 2)#define SHF_ALLOC (1 << 1)#define SHF_WRITE (1 << 0)#define SHT_HIUSER 0x8fffffff#define SHT_HISUNW 0x6fffffff#define SHT_GNU_versym 0x6fffffff#define SHT_GNU_verneed 0x6ffffffe#define SHT_GNU_verdef 0x6ffffffd#define SHT_SUNW_syminfo 0x6ffffffc#define SHT_SUNW_COMDAT 0x6ffffffb#define SHT_SUNW_move 0x6ffffffa#define SHT_LOSUNW 0x6ffffffa#define SHT_CHECKSUM 0x6ffffff8#define SHT_GNU_LIBLIST 0x6ffffff7#define SHT_GNU_HASH 0x6ffffff6#define SHT_GNU_ATTRIBUTES 0x6ffffff5#define SHN_AFTER 0xff01#define SHN_BEFORE 0xff00#define EM_ALPHA 0x9026#define EM_ARC_A5 EM_ARC_COMPACT#define EM_NUM 248#define EM_BPF 247#define EM_RISCV 243#define EM_AMDGPU 224#define EM_MOXIE 223#define EM_FT32 222#define EM_VISIUM 221#define EM_Z80 220#define EM_CSR_KALIMBA 219#define EM_NORC 218#define EM_COOL 217#define EM_COGE 216#define EM_CDP 215#define EM_KVARC 214#define EM_EMX8 213#define EM_EMX16 212#define EM_KMX32 211#define EM_KM32 210#define EM_MCHP_PIC 204#define EM_XCORE 203#define EM_BA2 202#define EM_BA1 201#define EM_56800EX 200#define EM_78KOR 199#define EM_VIDEOCORE5 198#define EM_RL78 197#define EM_OPEN8 196#define EM_ARC_COMPACT2 195#define EM_COREA_2ND 194#define EM_COREA_1ST 193#define EM_CLOUDSHIELD 192#define EM_TILEGX 191#define EM_CUDA 190#define EM_MICROBLAZE 189#define EM_TILEPRO 188#define EM_TILE64 187#define EM_STM8 186#define EM_AVR32 185#define EM_AARCH64 183#define EM_K10M 181#define EM_L10M 180#define EM_SLE9X 179#define EM_ETPU 178#define EM_CR16 177#define EM_ECOG16 176#define EM_MCST_ELBRUS 175#define EM_METAG 174#define EM_RX 173#define EM_CRAYNV2 172#define EM_MANIK 171#define EM_XIMO16 170#define EM_MAXQ30 169#define EM_ECOG1X 168#define EM_NDS32 167#define EM_STXP7X 166#define EM_8051 165#define EM_QDSP6 164#define EM_TRIMEDIA 163#define EM_R32C 162#define EM_CYPRESS_M8C 161#define EM_MMDSP_PLUS 160#define EM_TI_PRU 144#define EM_TI_ARP32 143#define EM_TI_C5500 142#define EM_TI_C2000 141#define EM_TI_C6000 140#define EM_SE_C17 139#define EM_LATTICEMICO32 138#define EM_VIDEOCORE3 137#define EM_DSP24 136#define EM_SCORE7 135#define EM_ECOG2 134#define EM_SHARC 133#define EM_RS08 132#define EM_TSK3000 131#define EM_M32C 120#define EM_CE 119#define EM_DSPIC30F 118#define EM_M16C 117#define EM_C166 116#define EM_XGATE 115#define EM_CRX 114#define EM_ALTERA_NIOS2 113#define EM_DXP 112#define EM_EXCESS 111#define EM_UNICORE 110#define EM_ARCA 109#define EM_SEP 108#define EM_SE_C33 107#define EM_BLACKFIN 106#define EM_MSP430 105#define EM_F2MC16 104#define EM_CR 103#define EM_MAX 102#define EM_IP2K 101#define EM_ST200 100#define EM_SNP1K 99#define EM_TPC 98#define EM_NS32K 97#define EM_TMM_GPP 96#define EM_VIDEOCORE 95#define EM_XTENSA 94#define EM_ARC_COMPACT 93#define EM_OPENRISC 92#define EM_CRIS 76#define EM_PDP11 65#define EM_PDP10 64#define EM_FAKE_ALPHA 41#define EM_SPU 23#define EM_MIPS_RS3_LE 10#define EM_IAMCU 6#define ELFOSABI_STANDALONE 255#define ELFOSABI_ARM 97#define ELFOSABI_ARM_AEABI 64#define ELFOSABI_LINUX ELFOSABI_GNU#define ELFOSABI_GNU 3#define ELFOSABI_SYSV 0#define _ELF_H 1#define DIV_ROUND_UP_SECTOR_T(ll,d) DIV_ROUND_UP(ll,d)#define MAX_NUM_OF_CONTAINER 2#define MAX_NUM_IMGS 6#define IV_MAX_LEN 32#define HASH_MAX_LEN 64#define append(p,s,l) do { memcpy((p), (uint8_t *)(s), (l)); (p) += (l); } while (0)#define IMG_STACK_SIZE 32#define PARTITION_ID_AP 1#define PARTITION_ID_M4 0#define SC_R_M4_1_MU_1A 317#define SC_R_M4_1_PID0 298#define SC_R_M4_0_MU_1A 297#define SC_R_M4_0_PID0 278#define SC_R_MU_0A 213#define SC_R_A72_0 6#define SC_R_A53_0 1#define SC_R_A35_0 508#define BOOT_IMG_FLAGS_PARTITION_ID_SHIFT 24#define BOOT_IMG_FLAGS_PARTITION_ID_MASK 0x1F000000#define BOOT_IMG_FLAGS_MU_RID_SHIFT 14#define BOOT_IMG_FLAGS_MU_RID_MASK 0xFFC000#define BOOT_IMG_FLAGS_CPU_RID_SHIFT 4#define BOOT_IMG_FLAGS_CPU_RID_MASK 0x3FF0#define BOOT_IMG_FLAGS_CORE_SHIFT 0x04#define BOOT_IMG_FLAGS_CORE_MASK 0xF#define IMG_TYPE(x) (((x) & IMG_TYPE_MASK) >> IMG_TYPE_SHIFT)#define IMG_TYPE_MASK 0x1f#define IMG_TYPE_SHIFT 0#define IMG_TYPE_DEK 0x08#define IMG_TYPE_PROV 0x07#define IMG_TYPE_SECO 0x06#define IMG_TYPE_DCD_DDR 0x05#define IMG_TYPE_DATA 0x04#define IMG_TYPE_EXEC 0x03#define IMG_TYPE_SCD 0x02#define IMG_TYPE_CSF 0x01#define MSG_FIELD SC_R_ROM_0#define MSG_FUSE SC_R_OTP#define MSG_DEBUG_EN SC_R_DEBUG#define SC_R_ROM_0 236U#define SC_R_DEBUG 354U#define SC_R_OTP 357U#define CORE_SECO 6#define CORE_CA72 5#define CORE_CA35 4#define CORE_CA53 4#define CORE_CM4_1 3#define CORE_CM4_0 2#define CORE_SC 1#define CONTAINER_IMAGE_ARRAY_START_OFFSET 0x2000#define IMAGE_M4_1_DEFAULT_META(PART) (((PART == 0) ? PARTITION_ID_M4 : PART) << BOOT_IMG_META_PART_ID_SHIFT | SC_R_M4_1_MU_1A << BOOT_IMG_META_MU_RID_SHIFT | SC_R_M4_1_PID0)#define IMAGE_M4_0_DEFAULT_META(PART) (((PART == 0) ? PARTITION_ID_M4 : PART) << BOOT_IMG_META_PART_ID_SHIFT | SC_R_M4_0_MU_1A << BOOT_IMG_META_MU_RID_SHIFT | SC_R_M4_0_PID0)#define IMAGE_A72_DEFAULT_META(PART) (((PART == 0) ? PARTITION_ID_AP : PART) << BOOT_IMG_META_PART_ID_SHIFT | SC_R_MU_0A << BOOT_IMG_META_MU_RID_SHIFT | SC_R_A72_0)#define IMAGE_A53_DEFAULT_META(PART) (((PART == 0) ? PARTITION_ID_AP : PART) << BOOT_IMG_META_PART_ID_SHIFT | SC_R_MU_0A << BOOT_IMG_META_MU_RID_SHIFT | SC_R_A53_0)#define IMAGE_A35_DEFAULT_META(PART) (((PART == 0) ? PARTITION_ID_AP : PART) << BOOT_IMG_META_PART_ID_SHIFT | SC_R_MU_0A << BOOT_IMG_META_MU_RID_SHIFT | SC_R_A35_0)#define BOOT_IMG_META_PART_ID_SHIFT 20#define BOOT_IMG_META_MU_RID_SHIFT 10#define FIRST_CONTAINER_HEADER_LENGTH 0x400#define SIGNATURE_BLOCK_HEADER_LENGTH 0x10#define CONTAINER_FUSE_DEFAULT 0x0#define CONTAINER_FLAGS_DEFAULT 0x10#define CONTAINER_ALIGNMENT 0x400#define DCD_ENTRY_ADDR_IN_SCFW 0x240#define IMAGE_PADDING_DEFAULT 0x1000#define IMAGE_HASH_ALGO_DEFAULT 384#define HASH_TYPE_SHA_512 512#define HASH_TYPE_SHA_384 384#define HASH_TYPE_SHA_256 256#define HEADER_IMG_ARRAY_OFFSET 0x10#define IMG_ARRAY_ENTRY_SIZE 128#define IMG_FLAG_BOOTFLAGS_SHIFT 0x10#define IMG_FLAG_BOOTFLAGS_MASK 0xFFFF0000#define IMG_FLAG_ENCRYPTED_SHIFT 0x0A#define IMG_FLAG_ENCRYPTED_MASK 0x400#define IMG_FLAG_HASH_SHA512 0x200#define IMG_FLAG_HASH_SHA384 0x100#define IMG_FLAG_HASH_SHA256 0x000#define IVT_VERSION_B0 0x00#define IVT_HEADER_TAG_B0 0x87#define MAX_NUM_SRK_RECORDS 4#define _IMX8IMAGE_H_#define ALIGN(x,a) __ALIGN_MASK((x), (__typeof__(x))(a) - 1, a)#define __ALIGN_MASK(x,mask,mask2) (((x) + (mask)) / (mask2) * (mask2))#define HDMI_FW_SIZE 0x17000#define IMAGE_IVT_ID 1#define IVT_HEADER_TAG 0xD1#define IVT_VERSION_V3 0x41#define CSF_SIZE 0x2000#define ALIGN_SIZE 0x1000#define HDMI_IVT_ID 0#define MAX_PLUGIN_CODE_SIZE (64 * 1024)#define MAX_HW_CFG_SIZE_V2 220#define MAX_HW_CFG_SIZE_V1 60#define DCD_CHECK_BITS_CLR_PARAM 0x04#define DCD_CHECK_BITS_SET_PARAM 0x14#define DCD_CHECK_DATA_COMMAND_TAG 0xCF#define DCD_WRITE_SET_BIT_PARAM 0x1C#define DCD_WRITE_CLR_BIT_PARAM 0xC#define DCD_WRITE_DATA_PARAM 0x4#define DCD_WRITE_DATA_COMMAND_TAG 0xCC#define DCD_VERSION 0x40#define DCD_HEADER_TAG 0xD2#define IVT_VERSION 0x40#define FLASH_LOADSIZE_QSPI 0x0#define FLASH_LOADSIZE_SATA FLASH_LOADSIZE_STANDARD#define FLASH_LOADSIZE_NOR 0x0#define FLASH_LOADSIZE_ONENAND 0x400#define FLASH_LOADSIZE_SPI FLASH_LOADSIZE_STANDARD#define FLASH_LOADSIZE_SD FLASH_LOADSIZE_STANDARD#define FLASH_LOADSIZE_NAND FLASH_LOADSIZE_STANDARD#define FLASH_LOADSIZE_STANDARD 0x1000#define FLASH_LOADSIZE_UNDEFINED 0xFFFFFFFF#define FLASH_OFFSET_FLEXSPI 0x1000#define FLASH_OFFSET_QSPI 0x1000#define FLASH_OFFSET_SATA FLASH_OFFSET_STANDARD#define FLASH_OFFSET_NOR 0x1000#define FLASH_OFFSET_ONENAND 0x100#define FLASH_OFFSET_SPI FLASH_OFFSET_STANDARD#define FLASH_OFFSET_SD FLASH_OFFSET_STANDARD#define FLASH_OFFSET_NAND FLASH_OFFSET_STANDARD#define FLASH_OFFSET_STANDARD 0x400#define FLASH_OFFSET_UNDEFINED 0xFFFFFFFF#define BOOTROM_IVT_HDR_OFFSET 0xC00#define DCD_BARKER 0xB17219E9#define APP_CODE_BARKER 0xB1#define _IMXIMAGE_H_#define UNDEFINED 0xFFFFFFFF#define EXT_HDR_V0_REG_COUNT ((0x1dc - 0x20) / sizeof(struct ext_hdr_v0_reg))#define KWBHEADER_V1_SIZE(hdr) (((hdr)->headersz_msb << 16) | le16_to_cpu((hdr)->headersz_lsb))#define OPT_HDR_V1_REGISTER_TYPE 0x3#define OPT_HDR_V1_BINARY_TYPE 0x2#define OPT_HDR_V1_SECURE_TYPE 0x1#define MAIN_HDR_V1_OPT_BAUD_115200 0x7#define MAIN_HDR_V1_OPT_BAUD_57600 0x6#define MAIN_HDR_V1_OPT_BAUD_38400 0x5#define MAIN_HDR_V1_OPT_BAUD_19200 0x4#define MAIN_HDR_V1_OPT_BAUD_9600 0x3#define MAIN_HDR_V1_OPT_BAUD_4800 0x2#define MAIN_HDR_V1_OPT_BAUD_2400 0x1#define MAIN_HDR_V1_OPT_BAUD_DEFAULT 0#define ALIGN_SUP(x,a) (((x) + (a - 1)) & ~(a - 1))#define IBR_DEF_ATTRIB 0x00#define IBR_HDR_UART_ID 0x69#define IBR_HDR_PEX_ID 0x9C#define IBR_HDR_SATA_ID 0x78#define IBR_HDR_NAND_ID 0x8B#define IBR_HDR_SPI_ID 0x5A#define IBR_HDR_I2C_ID 0x4D#define IBR_HDR_ECC_DISABLED 0x03#define IBR_HDR_ECC_FORCED_RS 0x02#define IBR_HDR_ECC_FORCED_HAMMING 0x01#define IBR_HDR_ECC_DEFAULT 0x00#define MAX_TEMPBUF_LEN 32#define KWBIMAGE_MAX_CONFIG ((0x1dc - 0x20)/sizeof(struct reg_config))#define _KWBIMAGE_H_#define IMAGE_CFG_ELEMENT_MAX 256#define BINARY_MAX_ARGS 8#define ADDR_INVALID ((uint32_t)-1)#define __efi_runtime_data#define __efi_runtime#define RSA_R_WRONG_SIGNATURE_LENGTH 119#define RSA_R_VALUE_MISSING 147#define RSA_R_UNSUPPORTED_SIGNATURE_TYPE 155#define RSA_R_UNSUPPORTED_MASK_PARAMETER 154#define RSA_R_UNSUPPORTED_MASK_ALGORITHM 153#define RSA_R_UNSUPPORTED_LABEL_SOURCE 163#define RSA_R_UNSUPPORTED_ENCRYPTION_TYPE 162#define RSA_R_UNKNOWN_PADDING_TYPE 118#define RSA_R_UNKNOWN_MASK_DIGEST 151#define RSA_R_UNKNOWN_DIGEST 166#define RSA_R_UNKNOWN_ALGORITHM_TYPE 117#define RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD 116#define RSA_R_SSLV3_ROLLBACK_ATTACK 115#define RSA_R_SLEN_RECOVERY_FAILED 135#define RSA_R_SLEN_CHECK_FAILED 136#define RSA_R_RSA_OPERATIONS_NOT_SUPPORTED 130#define RSA_R_Q_NOT_PRIME 129#define RSA_R_P_NOT_PRIME 128#define RSA_R_PSS_SALTLEN_TOO_SMALL 164#define RSA_R_PKCS_DECODING_ERROR 159#define RSA_R_PADDING_CHECK_FAILED 114#define RSA_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE 148#define RSA_R_OAEP_DECODING_ERROR 121#define RSA_R_N_DOES_NOT_EQUAL_P_Q 127#define RSA_R_N_DOES_NOT_EQUAL_PRODUCT_OF_PRIMES 172#define RSA_R_NULL_BEFORE_BLOCK_MISSING 113#define RSA_R_NO_PUBLIC_EXPONENT 140#define RSA_R_MP_R_NOT_PRIME 170#define RSA_R_MP_EXPONENT_NOT_CONGRUENT_TO_D 169#define RSA_R_MP_COEFFICIENT_NOT_INVERSE_OF_R 168#define RSA_R_MODULUS_TOO_LARGE 105#define RSA_R_MGF1_DIGEST_NOT_ALLOWED 152#define RSA_R_LAST_OCTET_INVALID 134#define RSA_R_KEY_SIZE_TOO_SMALL 120#define RSA_R_KEY_PRIME_NUM_INVALID 165#define RSA_R_IQMP_NOT_INVERSE_OF_Q 126#define RSA_R_INVALID_X931_DIGEST 142#define RSA_R_INVALID_TRAILER 139#define RSA_R_INVALID_SALT_LENGTH 150#define RSA_R_INVALID_PSS_SALTLEN 146#define RSA_R_INVALID_PSS_PARAMETERS 149#define RSA_R_INVALID_PADDING_MODE 141#define RSA_R_INVALID_PADDING 138#define RSA_R_INVALID_OAEP_PARAMETERS 161#define RSA_R_INVALID_MULTI_PRIME_KEY 167#define RSA_R_INVALID_MGF1_MD 156#define RSA_R_INVALID_MESSAGE_LENGTH 131#define RSA_R_INVALID_LABEL 160#define RSA_R_INVALID_HEADER 137#define RSA_R_INVALID_DIGEST_LENGTH 143#define RSA_R_INVALID_DIGEST 157#define RSA_R_ILLEGAL_OR_UNSUPPORTED_PADDING_MODE 144#define RSA_R_FIRST_OCTET_INVALID 133#define RSA_R_D_E_NOT_CONGRUENT_TO_1 123#define RSA_R_DMQ1_NOT_CONGRUENT_TO_D 125#define RSA_R_DMP1_NOT_CONGRUENT_TO_D 124#define RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY 112#define RSA_R_DIGEST_NOT_ALLOWED 145#define RSA_R_DIGEST_DOES_NOT_MATCH 158#define RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE 122#define RSA_R_DATA_TOO_SMALL 111#define RSA_R_DATA_TOO_LARGE_FOR_MODULUS 132#define RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE 110#define RSA_R_DATA_TOO_LARGE 109#define RSA_R_DATA_GREATER_THAN_MOD_LEN 108#define RSA_R_BLOCK_TYPE_IS_NOT_02 107#define RSA_R_BLOCK_TYPE_IS_NOT_01 106#define RSA_R_BAD_SIGNATURE 104#define RSA_R_BAD_PAD_BYTE_COUNT 103#define RSA_R_BAD_FIXED_HEADER_DECRYPT 102#define RSA_R_BAD_E_VALUE 101#define RSA_R_ALGORITHM_MISMATCH 100#define RSA_F_SETUP_TBUF 167#define RSA_F_RSA_VERIFY_PKCS1_PSS_MGF1 126#define RSA_F_RSA_VERIFY_ASN1_OCTET_STRING 120#define RSA_F_RSA_VERIFY 119#define RSA_F_RSA_SIGN_ASN1_OCTET_STRING 118#define RSA_F_RSA_SIGN 117#define RSA_F_RSA_SETUP_BLINDING 136#define RSA_F_RSA_PUB_DECODE 139#define RSA_F_RSA_PSS_TO_CTX 155#define RSA_F_RSA_PSS_GET_PARAM 151#define RSA_F_RSA_PRIV_ENCODE 138#define RSA_F_RSA_PRIV_DECODE 150#define RSA_F_RSA_PRINT_FP 116#define RSA_F_RSA_PRINT 115#define RSA_F_RSA_PARAM_DECODE 164#define RSA_F_RSA_PADDING_CHECK_X931 128#define RSA_F_RSA_PADDING_CHECK_SSLV23 114#define RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2 113#define RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1 112#define RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP_MGF1 153#define RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP 122#define RSA_F_RSA_PADDING_CHECK_NONE 111#define RSA_F_RSA_PADDING_ADD_X931 127#define RSA_F_RSA_PADDING_ADD_SSLV23 110#define RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2 109#define RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1 108#define RSA_F_RSA_PADDING_ADD_PKCS1_PSS_MGF1 152#define RSA_F_RSA_PADDING_ADD_PKCS1_PSS 125#define RSA_F_RSA_PADDING_ADD_PKCS1_OAEP_MGF1 154#define RSA_F_RSA_PADDING_ADD_PKCS1_OAEP 121#define RSA_F_RSA_PADDING_ADD_NONE 107#define RSA_F_RSA_OSSL_PUBLIC_ENCRYPT 104#define RSA_F_RSA_OSSL_PUBLIC_DECRYPT 103#define RSA_F_RSA_OSSL_PRIVATE_ENCRYPT 102#define RSA_F_RSA_OSSL_PRIVATE_DECRYPT 101#define RSA_F_RSA_NULL_PUBLIC_ENCRYPT 135#define RSA_F_RSA_NULL_PUBLIC_DECRYPT 134#define RSA_F_RSA_NULL_PRIVATE_ENCRYPT 133#define RSA_F_RSA_NULL_PRIVATE_DECRYPT 132#define RSA_F_RSA_NULL 124#define RSA_F_RSA_NEW_METHOD 106#define RSA_F_RSA_MULTIP_INFO_NEW 166#define RSA_F_RSA_MGF1_TO_MD 157#define RSA_F_RSA_METH_SET1_NAME 163#define RSA_F_RSA_METH_NEW 162#define RSA_F_RSA_METH_DUP 161#define RSA_F_RSA_ITEM_VERIFY 148#define RSA_F_RSA_CMS_VERIFY 158#define RSA_F_RSA_CMS_DECRYPT 159#define RSA_F_RSA_CHECK_KEY_EX 160#define RSA_F_RSA_CHECK_KEY 123#define RSA_F_RSA_BUILTIN_KEYGEN 129#define RSA_F_RSA_ALGOR_TO_MD 156#define RSA_F_PKEY_RSA_VERIFYRECOVER 141#define RSA_F_PKEY_RSA_VERIFY 149#define RSA_F_PKEY_RSA_SIGN 142#define RSA_F_PKEY_RSA_CTRL_STR 144#define RSA_F_PKEY_RSA_CTRL 143#define RSA_F_PKEY_PSS_INIT 165#define RSA_F_OLD_RSA_PRIV_DECODE 147#define RSA_F_INT_RSA_VERIFY 145#define RSA_F_ENCODE_PKCS1 146#define RSA_F_CHECK_PADDING_MD 140#define HEADER_RSAERR_H#define RSA_FLAG_CHECKED 0x0800#define RSA_FLAG_NON_FIPS_ALLOW 0x0400#define RSA_FLAG_FIPS_METHOD 0x0400#define RSA_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_RSA, l, p, newf, dupf, freef)#define RSA_get_app_data(s) RSA_get_ex_data(s,0)#define RSA_set_app_data(s,arg) RSA_set_ex_data(s,0,arg)#define RSA_PKCS1_PADDING_SIZE 11#define RSA_PKCS1_PSS_PADDING 6#define RSA_X931_PADDING 5#define RSA_PKCS1_OAEP_PADDING 4#define RSA_NO_PADDING 3#define RSA_SSLV23_PADDING 2#define RSA_PKCS1_PADDING 1#define EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES (EVP_PKEY_ALG_CTRL + 13)#define EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL (EVP_PKEY_ALG_CTRL + 12)#define EVP_PKEY_CTRL_GET_RSA_OAEP_MD (EVP_PKEY_ALG_CTRL + 11)#define EVP_PKEY_CTRL_RSA_OAEP_LABEL (EVP_PKEY_ALG_CTRL + 10)#define EVP_PKEY_CTRL_RSA_OAEP_MD (EVP_PKEY_ALG_CTRL + 9)#define EVP_PKEY_CTRL_GET_RSA_MGF1_MD (EVP_PKEY_ALG_CTRL + 8)#define EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN (EVP_PKEY_ALG_CTRL + 7)#define EVP_PKEY_CTRL_GET_RSA_PADDING (EVP_PKEY_ALG_CTRL + 6)#define EVP_PKEY_CTRL_RSA_MGF1_MD (EVP_PKEY_ALG_CTRL + 5)#define EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP (EVP_PKEY_ALG_CTRL + 4)#define EVP_PKEY_CTRL_RSA_KEYGEN_BITS (EVP_PKEY_ALG_CTRL + 3)#define EVP_PKEY_CTRL_RSA_PSS_SALTLEN (EVP_PKEY_ALG_CTRL + 2)#define EVP_PKEY_CTRL_RSA_PADDING (EVP_PKEY_ALG_CTRL + 1)#define EVP_PKEY_CTX_set_rsa_pss_keygen_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA_PSS, EVP_PKEY_OP_TYPE_KEYGEN, EVP_PKEY_CTRL_MD, 0, (void *)(md))#define EVP_PKEY_CTX_get0_rsa_oaep_label(ctx,l) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA, EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_GET_RSA_OAEP_LABEL, 0, (void *)(l))#define EVP_PKEY_CTX_set0_rsa_oaep_label(ctx,l,llen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA, EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_RSA_OAEP_LABEL, llen, (void *)(l))#define EVP_PKEY_CTX_get_rsa_oaep_md(ctx,pmd) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA, EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_GET_RSA_OAEP_MD, 0, (void *)(pmd))#define EVP_PKEY_CTX_get_rsa_mgf1_md(ctx,pmd) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_TYPE_SIG | EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_GET_RSA_MGF1_MD, 0, (void *)(pmd))#define EVP_PKEY_CTX_set_rsa_oaep_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA, EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_RSA_OAEP_MD, 0, (void *)(md))#define EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA_PSS, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_MGF1_MD, 0, (void *)(md))#define EVP_PKEY_CTX_set_rsa_mgf1_md(ctx,md) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_TYPE_SIG | EVP_PKEY_OP_TYPE_CRYPT, EVP_PKEY_CTRL_RSA_MGF1_MD, 0, (void *)(md))#define EVP_PKEY_CTX_set_rsa_keygen_primes(ctx,primes) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_KEYGEN_PRIMES, primes, NULL)#define EVP_PKEY_CTX_set_rsa_keygen_pubexp(ctx,pubexp) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP, 0, pubexp)#define EVP_PKEY_CTX_set_rsa_keygen_bits(ctx,bits) RSA_pkey_ctx_ctrl(ctx, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_KEYGEN_BITS, bits, NULL)#define EVP_PKEY_CTX_get_rsa_pss_saltlen(ctx,plen) RSA_pkey_ctx_ctrl(ctx, (EVP_PKEY_OP_SIGN|EVP_PKEY_OP_VERIFY), EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN, 0, plen)#define EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_RSA_PSS, EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_RSA_PSS_SALTLEN, len, NULL)#define RSA_PSS_SALTLEN_MAX_SIGN -2#define RSA_PSS_SALTLEN_MAX -3#define RSA_PSS_SALTLEN_AUTO -2#define RSA_PSS_SALTLEN_DIGEST -1#define EVP_PKEY_CTX_set_rsa_pss_saltlen(ctx,len) RSA_pkey_ctx_ctrl(ctx, (EVP_PKEY_OP_SIGN|EVP_PKEY_OP_VERIFY), EVP_PKEY_CTRL_RSA_PSS_SALTLEN, len, NULL)#define EVP_PKEY_CTX_get_rsa_padding(ctx,ppad) RSA_pkey_ctx_ctrl(ctx, -1, EVP_PKEY_CTRL_GET_RSA_PADDING, 0, ppad)#define EVP_PKEY_CTX_set_rsa_padding(ctx,pad) RSA_pkey_ctx_ctrl(ctx, -1, EVP_PKEY_CTRL_RSA_PADDING, pad, NULL)#define RSA_FLAG_NO_EXP_CONSTTIME RSA_FLAG_NO_CONSTTIME#define RSA_FLAG_NO_CONSTTIME 0x0000#define RSA_FLAG_NO_BLINDING 0x0080#define RSA_FLAG_EXT_PKEY 0x0020#define RSA_FLAG_THREAD_SAFE 0x0010#define RSA_FLAG_BLINDING 0x0008#define RSA_FLAG_CACHE_PRIVATE 0x0004#define RSA_FLAG_CACHE_PUBLIC 0x0002#define RSA_METHOD_FLAG_NO_CHECK 0x0001#define RSA_DEFAULT_PRIME_NUM 2#define RSA_ASN1_VERSION_MULTI 1#define RSA_ASN1_VERSION_DEFAULT 0#define RSA_F4 0x10001L#define RSA_3 0x3L#define OPENSSL_RSA_MAX_PUBEXP_BITS 64#define OPENSSL_RSA_SMALL_MODULUS_BITS 3072#define OPENSSL_RSA_FIPS_MIN_MODULUS_BITS 1024#define OPENSSL_RSA_MAX_MODULUS_BITS 16384#define HEADER_RSA_H#define BUF_F_BUF_MEM_NEW 101#define BUF_F_BUF_MEM_GROW_CLEAN 105#define BUF_F_BUF_MEM_GROW 100#define HEADER_BUFERR_H#define BUF_MEM_FLAG_SECURE 0x01#define BUF_strnlen(str,maxlen) OPENSSL_strnlen(str, maxlen)#define BUF_strlcat(dst,src,size) OPENSSL_strlcat(dst, src, size)#define BUF_strlcpy(dst,src,size) OPENSSL_strlcpy(dst, src, size)#define BUF_memdup(data,size) OPENSSL_memdup(data, size)#define BUF_strndup(s,size) OPENSSL_strndup(s, size)#define BUF_strdup(s) OPENSSL_strdup(s)#define HEADER_BUFFER_H#define EC_R_WRONG_ORDER 130#define EC_R_WRONG_CURVE_PARAMETERS 145#define EC_R_UNSUPPORTED_FIELD 131#define EC_R_UNKNOWN_ORDER 114#define EC_R_UNKNOWN_GROUP 129#define EC_R_UNKNOWN_COFACTOR 164#define EC_R_UNDEFINED_ORDER 128#define EC_R_UNDEFINED_GENERATOR 113#define EC_R_SLOT_FULL 108#define EC_R_SHARED_INFO_ERROR 150#define EC_R_RANDOM_NUMBER_GENERATION_FAILED 158#define EC_R_POINT_IS_NOT_ON_CURVE 107#define EC_R_POINT_COORDINATES_BLIND_FAILURE 163#define EC_R_POINT_AT_INFINITY 106#define EC_R_POINT_ARITHMETIC_FAILURE 155#define EC_R_PKPARAMETERS2GROUP_FAILURE 127#define EC_R_PEER_KEY_ERROR 149#define EC_R_PASSED_NULL_PARAMETER 134#define EC_R_OPERATION_NOT_SUPPORTED 152#define EC_R_NO_PRIVATE_VALUE 154#define EC_R_NO_PARAMETERS_SET 139#define EC_R_NOT_INITIALIZED 111#define EC_R_NOT_IMPLEMENTED 126#define EC_R_NOT_A_NIST_PRIME 135#define EC_R_NEED_NEW_SETUP_VALUES 157#define EC_R_MISSING_PRIVATE_KEY 125#define EC_R_MISSING_PARAMETERS 124#define EC_R_LADDER_STEP_FAILURE 162#define EC_R_LADDER_PRE_FAILURE 153#define EC_R_LADDER_POST_FAILURE 136#define EC_R_KEYS_NOT_SET 140#define EC_R_KDF_PARAMETER_ERROR 148#define EC_R_INVALID_TRINOMIAL_BASIS 137#define EC_R_INVALID_PRIVATE_KEY 123#define EC_R_INVALID_PENTANOMIAL_BASIS 132#define EC_R_INVALID_PEER_KEY 133#define EC_R_INVALID_OUTPUT_LENGTH 161#define EC_R_INVALID_KEY 116#define EC_R_INVALID_GROUP_ORDER 122#define EC_R_INVALID_FORM 104#define EC_R_INVALID_FIELD 103#define EC_R_INVALID_ENCODING 102#define EC_R_INVALID_DIGEST_TYPE 138#define EC_R_INVALID_DIGEST 151#define EC_R_INVALID_CURVE 141#define EC_R_INVALID_COMPRESSION_BIT 109#define EC_R_INVALID_COMPRESSED_POINT 110#define EC_R_INVALID_ARGUMENT 112#define EC_R_INCOMPATIBLE_OBJECTS 101#define EC_R_I2D_ECPKPARAMETERS_FAILURE 121#define EC_R_GROUP2PKPARAMETERS_FAILURE 120#define EC_R_GF2M_NOT_SUPPORTED 147#define EC_R_FIELD_TOO_LARGE 143#define EC_R_EC_GROUP_NEW_BY_NAME_FAILURE 119#define EC_R_DISCRIMINANT_IS_ZERO 118#define EC_R_DECODE_ERROR 142#define EC_R_D2I_ECPKPARAMETERS_FAILURE 117#define EC_R_CURVE_DOES_NOT_SUPPORT_SIGNING 159#define EC_R_CURVE_DOES_NOT_SUPPORT_ECDH 160#define EC_R_COORDINATES_OUT_OF_RANGE 146#define EC_R_BUFFER_TOO_SMALL 100#define EC_R_BIGNUM_OUT_OF_RANGE 144#define EC_R_BAD_SIGNATURE 156#define EC_R_ASN1_ERROR 115#define EC_F_VALIDATE_ECX_DERIVE 278#define EC_F_PKEY_EC_SIGN 218#define EC_F_PKEY_EC_PARAMGEN 219#define EC_F_PKEY_EC_KEYGEN 199#define EC_F_PKEY_EC_KDF_DERIVE 283#define EC_F_PKEY_EC_INIT 282#define EC_F_PKEY_EC_DERIVE 217#define EC_F_PKEY_EC_CTRL_STR 198#define EC_F_PKEY_EC_CTRL 197#define EC_F_PKEY_ECX_DERIVE 269#define EC_F_PKEY_ECD_DIGESTSIGN448 277#define EC_F_PKEY_ECD_DIGESTSIGN25519 276#define EC_F_PKEY_ECD_DIGESTSIGN 272#define EC_F_PKEY_ECD_CTRL 271#define EC_F_OSSL_ECDSA_VERIFY_SIG 250#define EC_F_OSSL_ECDSA_SIGN_SIG 249#define EC_F_OSSL_ECDH_COMPUTE_KEY 247#define EC_F_OLD_EC_PRIV_DECODE 222#define EC_F_O2I_ECPUBLICKEY 152#define EC_F_NISTP521_PRE_COMP_NEW 237#define EC_F_NISTP256_PRE_COMP_NEW 236#define EC_F_NISTP224_PRE_COMP_NEW 227#define EC_F_I2O_ECPUBLICKEY 151#define EC_F_I2D_ECPRIVATEKEY 192#define EC_F_I2D_ECPKPARAMETERS 191#define EC_F_I2D_ECPARAMETERS 190#define EC_F_EC_WNAF_PRECOMPUTE_MULT 188#define EC_F_EC_WNAF_MUL 187#define EC_F_EC_SCALAR_MUL_LADDER 284#define EC_F_EC_PRE_COMP_NEW 196#define EC_F_EC_POINT_SET_TO_INFINITY 127#define EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP 126#define EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP 125#define EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M 186#define EC_F_EC_POINT_SET_COMPRESSED_COORDINATES 295#define EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP 124#define EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M 185#define EC_F_EC_POINT_SET_AFFINE_COORDINATES 294#define EC_F_EC_POINT_POINT2OCT 123#define EC_F_EC_POINT_POINT2BUF 281#define EC_F_EC_POINT_OCT2POINT 122#define EC_F_EC_POINT_NEW 121#define EC_F_EC_POINT_MAKE_AFFINE 120#define EC_F_EC_POINT_IS_ON_CURVE 119#define EC_F_EC_POINT_IS_AT_INFINITY 118#define EC_F_EC_POINT_INVERT 210#define EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP 117#define EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP 116#define EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M 183#define EC_F_EC_POINT_GET_AFFINE_COORDINATES 293#define EC_F_EC_POINT_DBL 115#define EC_F_EC_POINT_COPY 114#define EC_F_EC_POINT_CMP 113#define EC_F_EC_POINT_BN2POINT 280#define EC_F_EC_POINT_ADD 112#define EC_F_EC_POINTS_MUL 290#define EC_F_EC_POINTS_MAKE_AFFINE 136#define EC_F_EC_PKEY_PARAM_CHECK 274#define EC_F_EC_PKEY_CHECK 273#define EC_F_EC_KEY_SIMPLE_PRIV2OCT 260#define EC_F_EC_KEY_SIMPLE_OCT2PRIV 259#define EC_F_EC_KEY_SIMPLE_CHECK_KEY 258#define EC_F_EC_KEY_SET_PUBLIC_KEY_AFFINE_COORDINATES 229#define EC_F_EC_KEY_PRIV2OCT 256#define EC_F_EC_KEY_PRIV2BUF 279#define EC_F_EC_KEY_PRINT_FP 181#define EC_F_EC_KEY_PRINT 180#define EC_F_EC_KEY_OCT2PRIV 255#define EC_F_EC_KEY_NEW_METHOD 245#define EC_F_EC_KEY_NEW 182#define EC_F_EC_KEY_GENERATE_KEY 179#define EC_F_EC_KEY_COPY 178#define EC_F_EC_KEY_CHECK_KEY 177#define EC_F_EC_GROUP_SET_SEED 286#define EC_F_EC_GROUP_SET_GENERATOR 111#define EC_F_EC_GROUP_SET_CURVE_GFP 109#define EC_F_EC_GROUP_SET_CURVE_GF2M 176#define EC_F_EC_GROUP_SET_CURVE 292#define EC_F_EC_GROUP_NEW_FROM_ECPKPARAMETERS 264#define EC_F_EC_GROUP_NEW_FROM_ECPARAMETERS 263#define EC_F_EC_GROUP_NEW_FROM_DATA 175#define EC_F_EC_GROUP_NEW_BY_CURVE_NAME 174#define EC_F_EC_GROUP_NEW 108#define EC_F_EC_GROUP_GET_TRINOMIAL_BASIS 194#define EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS 193#define EC_F_EC_GROUP_GET_ECPKPARAMETERS 262#define EC_F_EC_GROUP_GET_ECPARAMETERS 261#define EC_F_EC_GROUP_GET_DEGREE 173#define EC_F_EC_GROUP_GET_CURVE_GFP 130#define EC_F_EC_GROUP_GET_CURVE_GF2M 172#define EC_F_EC_GROUP_GET_CURVE 291#define EC_F_EC_GROUP_COPY 106#define EC_F_EC_GROUP_CHECK_DISCRIMINANT 171#define EC_F_EC_GROUP_CHECK 170#define EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES 169#define EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES 168#define EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES 167#define EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE 137#define EC_F_EC_GFP_SIMPLE_POINT2OCT 104#define EC_F_EC_GFP_SIMPLE_OCT2POINT 103#define EC_F_EC_GFP_SIMPLE_MAKE_AFFINE 102#define EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE 166#define EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT 165#define EC_F_EC_GFP_SIMPLE_BLIND_COORDINATES 287#define EC_F_EC_GFP_NIST_GROUP_SET_CURVE 202#define EC_F_EC_GFP_NIST_FIELD_SQR 201#define EC_F_EC_GFP_NIST_FIELD_MUL 200#define EC_F_EC_GFP_NISTP521_POINT_GET_AFFINE_COORDINATES 235#define EC_F_EC_GFP_NISTP521_POINTS_MUL 234#define EC_F_EC_GFP_NISTP521_GROUP_SET_CURVE 233#define EC_F_EC_GFP_NISTP256_POINT_GET_AFFINE_COORDINATES 232#define EC_F_EC_GFP_NISTP256_POINTS_MUL 231#define EC_F_EC_GFP_NISTP256_GROUP_SET_CURVE 230#define EC_F_EC_GFP_NISTP224_POINT_GET_AFFINE_COORDINATES 226#define EC_F_EC_GFP_NISTP224_POINTS_MUL 228#define EC_F_EC_GFP_NISTP224_GROUP_SET_CURVE 225#define EC_F_EC_GFP_MONT_GROUP_SET_CURVE 189#define EC_F_EC_GFP_MONT_FIELD_SQR 132#define EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE 209#define EC_F_EC_GFP_MONT_FIELD_MUL 131#define EC_F_EC_GFP_MONT_FIELD_ENCODE 134#define EC_F_EC_GFP_MONT_FIELD_DECODE 133#define EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES 164#define EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES 163#define EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES 162#define EC_F_EC_GF2M_SIMPLE_POINTS_MUL 289#define EC_F_EC_GF2M_SIMPLE_POINT2OCT 161#define EC_F_EC_GF2M_SIMPLE_OCT2POINT 160#define EC_F_EC_GF2M_SIMPLE_LADDER_PRE 288#define EC_F_EC_GF2M_SIMPLE_LADDER_POST 285#define EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE 195#define EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT 159#define EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY 208#define EC_F_EC_ASN1_GROUP2FIELDID 154#define EC_F_EC_ASN1_GROUP2CURVE 153#define EC_F_ECX_PUB_ENCODE 268#define EC_F_ECX_PRIV_ENCODE 267#define EC_F_ECX_KEY_OP 266#define EC_F_ECP_NISTZ256_WINDOWED_MUL 242#define EC_F_ECP_NISTZ256_PRE_COMP_NEW 244#define EC_F_ECP_NISTZ256_POINTS_MUL 241#define EC_F_ECP_NISTZ256_MULT_PRECOMPUTE 243#define EC_F_ECP_NISTZ256_INV_MOD_ORD 275#define EC_F_ECP_NISTZ256_GET_AFFINE 240#define EC_F_ECPKPARAMETERS_PRINT_FP 150#define EC_F_ECPKPARAMETERS_PRINT 149#define EC_F_ECPARAMETERS_PRINT_FP 148#define EC_F_ECPARAMETERS_PRINT 147#define EC_F_ECKEY_TYPE2PARAM 220#define EC_F_ECKEY_PUB_ENCODE 216#define EC_F_ECKEY_PUB_DECODE 215#define EC_F_ECKEY_PRIV_ENCODE 214#define EC_F_ECKEY_PRIV_DECODE 213#define EC_F_ECKEY_PARAM_DECODE 212#define EC_F_ECKEY_PARAM2TYPE 223#define EC_F_ECD_ITEM_VERIFY 270#define EC_F_ECDSA_VERIFY 253#define EC_F_ECDSA_SIG_NEW 265#define EC_F_ECDSA_SIGN_SETUP 248#define EC_F_ECDSA_SIGN_EX 254#define EC_F_ECDSA_DO_VERIFY 252#define EC_F_ECDSA_DO_SIGN_EX 251#define EC_F_ECDH_SIMPLE_COMPUTE_KEY 257#define EC_F_ECDH_COMPUTE_KEY 246#define EC_F_ECDH_CMS_SET_SHARED_INFO 239#define EC_F_ECDH_CMS_DECRYPT 238#define EC_F_DO_EC_KEY_PRINT 221#define EC_F_D2I_ECPRIVATEKEY 146#define EC_F_D2I_ECPKPARAMETERS 145#define EC_F_D2I_ECPARAMETERS 144#define EC_F_BN_TO_FELEM 224#define HEADER_ECERR_H#define EVP_PKEY_ECDH_KDF_X9_62 2#define EVP_PKEY_ECDH_KDF_NONE 1#define EVP_PKEY_CTRL_GET1_ID_LEN (EVP_PKEY_ALG_CTRL + 13)#define EVP_PKEY_CTRL_GET1_ID (EVP_PKEY_ALG_CTRL + 12)#define EVP_PKEY_CTRL_SET1_ID (EVP_PKEY_ALG_CTRL + 11)#define EVP_PKEY_CTRL_GET_EC_KDF_UKM (EVP_PKEY_ALG_CTRL + 10)#define EVP_PKEY_CTRL_EC_KDF_UKM (EVP_PKEY_ALG_CTRL + 9)#define EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN (EVP_PKEY_ALG_CTRL + 8)#define EVP_PKEY_CTRL_EC_KDF_OUTLEN (EVP_PKEY_ALG_CTRL + 7)#define EVP_PKEY_CTRL_GET_EC_KDF_MD (EVP_PKEY_ALG_CTRL + 6)#define EVP_PKEY_CTRL_EC_KDF_MD (EVP_PKEY_ALG_CTRL + 5)#define EVP_PKEY_CTRL_EC_KDF_TYPE (EVP_PKEY_ALG_CTRL + 4)#define EVP_PKEY_CTRL_EC_ECDH_COFACTOR (EVP_PKEY_ALG_CTRL + 3)#define EVP_PKEY_CTRL_EC_PARAM_ENC (EVP_PKEY_ALG_CTRL + 2)#define EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID (EVP_PKEY_ALG_CTRL + 1)#define EVP_PKEY_CTX_get1_id_len(ctx,id_len) EVP_PKEY_CTX_ctrl(ctx, -1, -1, EVP_PKEY_CTRL_GET1_ID_LEN, 0, (void*)(id_len))#define EVP_PKEY_CTX_get1_id(ctx,id) EVP_PKEY_CTX_ctrl(ctx, -1, -1, EVP_PKEY_CTRL_GET1_ID, 0, (void*)(id))#define EVP_PKEY_CTX_set1_id(ctx,id,id_len) EVP_PKEY_CTX_ctrl(ctx, -1, -1, EVP_PKEY_CTRL_SET1_ID, (int)id_len, (void*)(id))#define EVP_PKEY_CTX_get0_ecdh_kdf_ukm(ctx,p) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_EC_KDF_UKM, 0, (void *)(p))#define EVP_PKEY_CTX_set0_ecdh_kdf_ukm(ctx,p,plen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_UKM, plen, (void *)(p))#define EVP_PKEY_CTX_get_ecdh_kdf_outlen(ctx,plen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_EC_KDF_OUTLEN, 0, (void *)(plen))#define EVP_PKEY_CTX_set_ecdh_kdf_outlen(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_OUTLEN, len, NULL)#define EVP_PKEY_CTX_get_ecdh_kdf_md(ctx,pmd) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_EC_KDF_MD, 0, (void *)(pmd))#define EVP_PKEY_CTX_set_ecdh_kdf_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_MD, 0, (void *)(md))#define EVP_PKEY_CTX_get_ecdh_kdf_type(ctx) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_TYPE, -2, NULL)#define EVP_PKEY_CTX_set_ecdh_kdf_type(ctx,kdf) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_KDF_TYPE, kdf, NULL)#define EVP_PKEY_CTX_get_ecdh_cofactor_mode(ctx) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_ECDH_COFACTOR, -2, NULL)#define EVP_PKEY_CTX_set_ecdh_cofactor_mode(ctx,flag) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_EC_ECDH_COFACTOR, flag, NULL)#define EVP_PKEY_CTX_set_ec_param_enc(ctx,flag) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_PARAMGEN|EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_EC_PARAM_ENC, flag, NULL)#define EVP_PKEY_CTX_set_ec_paramgen_curve_nid(ctx,nid) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_EC, EVP_PKEY_OP_PARAMGEN|EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID, nid, NULL)#define ECParameters_dup(x) ASN1_dup_of(EC_KEY,i2d_ECParameters,d2i_ECParameters,x)#define EC_KEY_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_EC_KEY, l, p, newf, dupf, freef)#define EC_FLAG_COFACTOR_ECDH 0x1000#define EC_FLAG_FIPS_CHECKED 0x2#define EC_FLAG_NON_FIPS_ALLOW 0x1#define EC_PKEY_NO_PUBKEY 0x002#define EC_PKEY_NO_PARAMETERS 0x001#define i2d_ECPKParameters_fp(fp,x) ASN1_i2d_fp(i2d_ECPKParameters,(fp), (unsigned char *)(x))#define d2i_ECPKParameters_fp(fp,x) (EC_GROUP *)ASN1_d2i_fp(NULL, (char *(*)())d2i_ECPKParameters,(fp),(unsigned char **)(x))#define i2d_ECPKParameters_bio(bp,x) ASN1_i2d_bio_of_const(EC_GROUP,i2d_ECPKParameters,bp,x)#define d2i_ECPKParameters_bio(bp,x) ASN1_d2i_bio_of(EC_GROUP,NULL,d2i_ECPKParameters,bp,x)#define OPENSSL_EC_NAMED_CURVE 0x001#define OPENSSL_EC_EXPLICIT_CURVE 0x000#define OPENSSL_ECC_MAX_FIELD_BITS 661#define HEADER_EC_H#define DH_R_UNABLE_TO_CHECK_GENERATOR 121#define DH_R_SHARED_INFO_ERROR 113#define DH_R_PEER_KEY_ERROR 111#define DH_R_PARAMETER_ENCODING_ERROR 105#define DH_R_NO_PRIVATE_VALUE 100#define DH_R_NO_PARAMETERS_SET 107#define DH_R_NOT_SUITABLE_GENERATOR 120#define DH_R_MODULUS_TOO_LARGE 103#define DH_R_MISSING_PUBKEY 125#define DH_R_KEYS_NOT_SET 108#define DH_R_KDF_PARAMETER_ERROR 112#define DH_R_INVALID_PUBKEY 102#define DH_R_INVALID_PARAMETER_NID 114#define DH_R_INVALID_PARAMETER_NAME 110#define DH_R_DECODE_ERROR 104#define DH_R_CHECK_Q_NOT_PRIME 119#define DH_R_CHECK_P_NOT_SAFE_PRIME 118#define DH_R_CHECK_P_NOT_PRIME 117#define DH_R_CHECK_PUBKEY_TOO_SMALL 124#define DH_R_CHECK_PUBKEY_TOO_LARGE 123#define DH_R_CHECK_PUBKEY_INVALID 122#define DH_R_CHECK_INVALID_Q_VALUE 116#define DH_R_CHECK_INVALID_J_VALUE 115#define DH_R_BN_ERROR 106#define DH_R_BN_DECODE_ERROR 109#define DH_R_BAD_GENERATOR 101#define DH_F_PKEY_DH_KEYGEN 113#define DH_F_PKEY_DH_INIT 125#define DH_F_PKEY_DH_DERIVE 112#define DH_F_PKEY_DH_CTRL_STR 120#define DH_F_GENERATE_KEY 103#define DH_F_DO_DH_PRINT 100#define DH_F_DH_PUB_ENCODE 109#define DH_F_DH_PUB_DECODE 108#define DH_F_DH_PRIV_ENCODE 111#define DH_F_DH_PRIV_DECODE 110#define DH_F_DH_PKEY_PUBLIC_CHECK 124#define DH_F_DH_PARAM_DECODE 107#define DH_F_DH_NEW_METHOD 105#define DH_F_DH_NEW_BY_NID 104#define DH_F_DH_METH_SET1_NAME 119#define DH_F_DH_METH_NEW 118#define DH_F_DH_METH_DUP 117#define DH_F_DH_CMS_SET_SHARED_INFO 116#define DH_F_DH_CMS_SET_PEERKEY 115#define DH_F_DH_CMS_DECRYPT 114#define DH_F_DH_CHECK_PUB_KEY_EX 123#define DH_F_DH_CHECK_PARAMS_EX 122#define DH_F_DH_CHECK_EX 121#define DH_F_DH_BUILTIN_GENPARAMS 106#define DH_F_DHPARAMS_PRINT_FP 101#define DH_F_COMPUTE_KEY 102#define HEADER_DHERR_H#define EVP_PKEY_DH_KDF_X9_42 2#define EVP_PKEY_DH_KDF_NONE 1#define EVP_PKEY_CTRL_DH_PAD (EVP_PKEY_ALG_CTRL + 16)#define EVP_PKEY_CTRL_DH_NID (EVP_PKEY_ALG_CTRL + 15)#define EVP_PKEY_CTRL_GET_DH_KDF_OID (EVP_PKEY_ALG_CTRL + 14)#define EVP_PKEY_CTRL_DH_KDF_OID (EVP_PKEY_ALG_CTRL + 13)#define EVP_PKEY_CTRL_GET_DH_KDF_UKM (EVP_PKEY_ALG_CTRL + 12)#define EVP_PKEY_CTRL_DH_KDF_UKM (EVP_PKEY_ALG_CTRL + 11)#define EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN (EVP_PKEY_ALG_CTRL + 10)#define EVP_PKEY_CTRL_DH_KDF_OUTLEN (EVP_PKEY_ALG_CTRL + 9)#define EVP_PKEY_CTRL_GET_DH_KDF_MD (EVP_PKEY_ALG_CTRL + 8)#define EVP_PKEY_CTRL_DH_KDF_MD (EVP_PKEY_ALG_CTRL + 7)#define EVP_PKEY_CTRL_DH_KDF_TYPE (EVP_PKEY_ALG_CTRL + 6)#define EVP_PKEY_CTRL_DH_PARAMGEN_TYPE (EVP_PKEY_ALG_CTRL + 5)#define EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN (EVP_PKEY_ALG_CTRL + 4)#define EVP_PKEY_CTRL_DH_RFC5114 (EVP_PKEY_ALG_CTRL + 3)#define EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR (EVP_PKEY_ALG_CTRL + 2)#define EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN (EVP_PKEY_ALG_CTRL + 1)#define EVP_PKEY_CTX_get0_dh_kdf_ukm(ctx,p) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_DH_KDF_UKM, 0, (void *)(p))#define EVP_PKEY_CTX_set0_dh_kdf_ukm(ctx,p,plen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_UKM, plen, (void *)(p))#define EVP_PKEY_CTX_get_dh_kdf_outlen(ctx,plen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_DH_KDF_OUTLEN, 0, (void *)(plen))#define EVP_PKEY_CTX_set_dh_kdf_outlen(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_OUTLEN, len, NULL)#define EVP_PKEY_CTX_get_dh_kdf_md(ctx,pmd) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_DH_KDF_MD, 0, (void *)(pmd))#define EVP_PKEY_CTX_set_dh_kdf_md(ctx,md) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_MD, 0, (void *)(md))#define EVP_PKEY_CTX_get0_dh_kdf_oid(ctx,poid) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_GET_DH_KDF_OID, 0, (void *)(poid))#define EVP_PKEY_CTX_set0_dh_kdf_oid(ctx,oid) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_OID, 0, (void *)(oid))#define EVP_PKEY_CTX_get_dh_kdf_type(ctx) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_TYPE, -2, NULL)#define EVP_PKEY_CTX_set_dh_kdf_type(ctx,kdf) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_KDF_TYPE, kdf, NULL)#define EVP_PKEY_CTX_set_dh_pad(ctx,pad) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_DERIVE, EVP_PKEY_CTRL_DH_PAD, pad, NULL)#define EVP_PKEY_CTX_set_dh_nid(ctx,nid) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN | EVP_PKEY_OP_KEYGEN, EVP_PKEY_CTRL_DH_NID, nid, NULL)#define EVP_PKEY_CTX_set_dhx_rfc5114(ctx,gen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_RFC5114, gen, NULL)#define EVP_PKEY_CTX_set_dh_rfc5114(ctx,gen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DHX, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_RFC5114, gen, NULL)#define EVP_PKEY_CTX_set_dh_paramgen_generator(ctx,gen) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR, gen, NULL)#define EVP_PKEY_CTX_set_dh_paramgen_type(ctx,typ) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_PARAMGEN_TYPE, typ, NULL)#define EVP_PKEY_CTX_set_dh_paramgen_subprime_len(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_PARAMGEN_SUBPRIME_LEN, len, NULL)#define EVP_PKEY_CTX_set_dh_paramgen_prime_len(ctx,len) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN, len, NULL)#define DH_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_DH, l, p, newf, dupf, freef)#define i2d_DHxparams_bio(bp,x) ASN1_i2d_bio_of_const(DH, i2d_DHxparams, bp, x)#define d2i_DHxparams_bio(bp,x) ASN1_d2i_bio_of(DH, DH_new, d2i_DHxparams, bp, x)#define i2d_DHxparams_fp(fp,x) ASN1_i2d_fp(i2d_DHxparams,(fp), (unsigned char *)(x))#define d2i_DHxparams_fp(fp,x) (DH *)ASN1_d2i_fp((char *(*)())DH_new, (char *(*)())d2i_DHxparams, (fp), (unsigned char **)(x))#define i2d_DHparams_bio(bp,x) ASN1_i2d_bio_of_const(DH,i2d_DHparams,bp,x)#define d2i_DHparams_bio(bp,x) ASN1_d2i_bio_of(DH, DH_new, d2i_DHparams, bp, x)#define i2d_DHparams_fp(fp,x) ASN1_i2d_fp(i2d_DHparams,(fp), (unsigned char *)(x))#define d2i_DHparams_fp(fp,x) (DH *)ASN1_d2i_fp((char *(*)())DH_new, (char *(*)())d2i_DHparams, (fp), (unsigned char **)(x))#define DH_CHECK_P_NOT_STRONG_PRIME DH_CHECK_P_NOT_SAFE_PRIME#define DH_CHECK_PUBKEY_INVALID 0x04#define DH_CHECK_PUBKEY_TOO_LARGE 0x02#define DH_CHECK_PUBKEY_TOO_SMALL 0x01#define DH_CHECK_INVALID_J_VALUE 0x40#define DH_CHECK_INVALID_Q_VALUE 0x20#define DH_CHECK_Q_NOT_PRIME 0x10#define DH_NOT_SUITABLE_GENERATOR 0x08#define DH_UNABLE_TO_CHECK_GENERATOR 0x04#define DH_CHECK_P_NOT_SAFE_PRIME 0x02#define DH_CHECK_P_NOT_PRIME 0x01#define DH_GENERATOR_5 5#define DH_GENERATOR_2 2#define DH_FLAG_NON_FIPS_ALLOW 0x0400#define DH_FLAG_FIPS_METHOD 0x0400#define DH_FLAG_NO_EXP_CONSTTIME 0x00#define DH_FLAG_CACHE_MONT_P 0x01#define OPENSSL_DH_FIPS_MIN_MODULUS_BITS 1024#define OPENSSL_DH_MAX_MODULUS_BITS 10000#define HEADER_DH_H#define DSA_R_SEED_LEN_SMALL 110#define DSA_R_Q_NOT_PRIME 113#define DSA_R_PARAMETER_ENCODING_ERROR 105#define DSA_R_NO_PARAMETERS_SET 107#define DSA_R_MODULUS_TOO_LARGE 103#define DSA_R_MISSING_PARAMETERS 101#define DSA_R_INVALID_PARAMETERS 112#define DSA_R_INVALID_DIGEST_TYPE 106#define DSA_R_DECODE_ERROR 104#define DSA_R_BN_ERROR 109#define DSA_R_BN_DECODE_ERROR 108#define DSA_R_BAD_Q_VALUE 102#define DSA_F_PKEY_DSA_KEYGEN 121#define DSA_F_PKEY_DSA_CTRL_STR 104#define DSA_F_PKEY_DSA_CTRL 120#define DSA_F_OLD_DSA_PRIV_DECODE 122#define DSA_F_DSA_SIG_NEW 102#define DSA_F_DSA_SIGN_SETUP 107#define DSA_F_DSA_SIGN 106#define DSA_F_DSA_PUB_ENCODE 118#define DSA_F_DSA_PUB_DECODE 117#define DSA_F_DSA_PRIV_ENCODE 116#define DSA_F_DSA_PRIV_DECODE 115#define DSA_F_DSA_PRINT_FP 105#define DSA_F_DSA_PARAM_DECODE 119#define DSA_F_DSA_NEW_METHOD 103#define DSA_F_DSA_METH_SET1_NAME 129#define DSA_F_DSA_METH_NEW 128#define DSA_F_DSA_METH_DUP 127#define DSA_F_DSA_DO_VERIFY 113#define DSA_F_DSA_DO_SIGN 112#define DSA_F_DSA_BUILTIN_PARAMGEN2 126#define DSA_F_DSA_BUILTIN_PARAMGEN 125#define DSA_F_DSAPARAMS_PRINT_FP 101#define DSA_F_DSAPARAMS_PRINT 100#define HEADER_DSAERR_H#define EVP_PKEY_CTRL_DSA_PARAMGEN_MD (EVP_PKEY_ALG_CTRL + 3)#define EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS (EVP_PKEY_ALG_CTRL + 2)#define EVP_PKEY_CTRL_DSA_PARAMGEN_BITS (EVP_PKEY_ALG_CTRL + 1)#define EVP_PKEY_CTX_set_dsa_paramgen_bits(ctx,nbits) EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DSA, EVP_PKEY_OP_PARAMGEN, EVP_PKEY_CTRL_DSA_PARAMGEN_BITS, nbits, NULL)#define DSA_is_prime(n,callback,cb_arg) BN_is_prime(n, DSS_prime_checks, callback, NULL, cb_arg)#define DSS_prime_checks 64#define DSA_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_DSA, l, p, newf, dupf, freef)#define i2d_DSAparams_bio(bp,x) ASN1_i2d_bio_of_const(DSA,i2d_DSAparams,bp,x)#define d2i_DSAparams_bio(bp,x) ASN1_d2i_bio_of(DSA,DSA_new,d2i_DSAparams,bp,x)#define i2d_DSAparams_fp(fp,x) ASN1_i2d_fp(i2d_DSAparams,(fp), (unsigned char *)(x))#define d2i_DSAparams_fp(fp,x) (DSA *)ASN1_d2i_fp((char *(*)())DSA_new, (char *(*)())d2i_DSAparams,(fp),(unsigned char **)(x))#define DSA_FLAG_FIPS_CHECKED 0x0800#define DSA_FLAG_NON_FIPS_ALLOW 0x0400#define DSA_FLAG_FIPS_METHOD 0x0400#define DSA_FLAG_NO_EXP_CONSTTIME 0x00#define DSA_FLAG_CACHE_MONT_P 0x01#define OPENSSL_DSA_FIPS_MIN_MODULUS_BITS 1024#define OPENSSL_DSA_MAX_MODULUS_BITS 10000#define HEADER_DSA_H#define SHA_LONG64 unsigned long long#define SHA_LBLOCK 16#define SHA512_CBLOCK (SHA_LBLOCK*8)#define SHA_LONG unsigned int#define U64(C) C ## ULL#define SHA512_DIGEST_LENGTH 64#define SHA384_DIGEST_LENGTH 48#define SHA256_DIGEST_LENGTH 32#define SHA224_DIGEST_LENGTH 28#define SHA256_CBLOCK (SHA_LBLOCK*4)#define SHA_DIGEST_LENGTH 20#define SHA_LAST_BLOCK (SHA_CBLOCK-8)#define SHA_CBLOCK (SHA_LBLOCK*4)#define HEADER_SHA_H#define X509_R_WRONG_TYPE 122#define X509_R_WRONG_LOOKUP_TYPE 112#define X509_R_UNSUPPORTED_ALGORITHM 111#define X509_R_UNKNOWN_TRUST_ID 120#define X509_R_UNKNOWN_PURPOSE_ID 121#define X509_R_UNKNOWN_NID 109#define X509_R_UNKNOWN_KEY_TYPE 117#define X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY 108#define X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN 107#define X509_R_SHOULD_RETRY 106#define X509_R_PUBLIC_KEY_ENCODE_ERROR 126#define X509_R_PUBLIC_KEY_DECODE_ERROR 125#define X509_R_NO_CRL_NUMBER 130#define X509_R_NO_CRL_FOUND 137#define X509_R_NO_CERT_SET_FOR_US_TO_VERIFY 105#define X509_R_NO_CERTIFICATE_OR_CRL_FOUND 136#define X509_R_NO_CERTIFICATE_FOUND 135#define X509_R_NEWER_CRL_NOT_NEWER 132#define X509_R_NAME_TOO_LONG 134#define X509_R_METHOD_NOT_SUPPORTED 124#define X509_R_LOADING_DEFAULTS 104#define X509_R_LOADING_CERT_DIR 103#define X509_R_KEY_VALUES_MISMATCH 116#define X509_R_KEY_TYPE_MISMATCH 115#define X509_R_ISSUER_MISMATCH 129#define X509_R_INVALID_TRUST 123#define X509_R_INVALID_FIELD_NAME 119#define X509_R_INVALID_DIRECTORY 113#define X509_R_IDP_MISMATCH 128#define X509_R_CRL_VERIFY_FAILURE 131#define X509_R_CRL_ALREADY_DELTA 127#define X509_R_CERT_ALREADY_IN_HASH_TABLE 101#define X509_R_CANT_CHECK_DH_KEY 114#define X509_R_BASE64_DECODE_ERROR 118#define X509_R_BAD_X509_FILETYPE 100#define X509_R_BAD_SELECTOR 133#define X509_R_AKID_MISMATCH 110#define X509_F_X509_VERIFY_PARAM_NEW 159#define X509_F_X509_VERIFY_CERT 127#define X509_F_X509_TRUST_SET 141#define X509_F_X509_TRUST_ADD 133#define X509_F_X509_TO_X509_REQ 126#define X509_F_X509_STORE_NEW 158#define X509_F_X509_STORE_CTX_PURPOSE_INHERIT 134#define X509_F_X509_STORE_CTX_NEW 142#define X509_F_X509_STORE_CTX_INIT 143#define X509_F_X509_STORE_CTX_GET1_ISSUER 146#define X509_F_X509_STORE_ADD_LOOKUP 157#define X509_F_X509_STORE_ADD_CRL 125#define X509_F_X509_STORE_ADD_CERT 124#define X509_F_X509_REQ_TO_X509 123#define X509_F_X509_REQ_PRINT_FP 122#define X509_F_X509_REQ_PRINT_EX 121#define X509_F_X509_REQ_CHECK_PRIVATE_KEY 144#define X509_F_X509_PUBKEY_SET 120#define X509_F_X509_PUBKEY_GET0 119#define X509_F_X509_PUBKEY_DECODE 148#define X509_F_X509_PRINT_EX_FP 118#define X509_F_X509_OBJECT_NEW 150#define X509_F_X509_NAME_PRINT 117#define X509_F_X509_NAME_ONELINE 116#define X509_F_X509_NAME_ENTRY_SET_OBJECT 115#define X509_F_X509_NAME_ENTRY_CREATE_BY_TXT 131#define X509_F_X509_NAME_ENTRY_CREATE_BY_NID 114#define X509_F_X509_NAME_CANON 156#define X509_F_X509_NAME_ADD_ENTRY 113#define X509_F_X509_LOOKUP_NEW 155#define X509_F_X509_LOOKUP_METH_NEW 160#define X509_F_X509_LOAD_CRL_FILE 112#define X509_F_X509_LOAD_CERT_FILE 111#define X509_F_X509_LOAD_CERT_CRL_FILE 132#define X509_F_X509_GET_PUBKEY_PARAMETERS 110#define X509_F_X509_EXTENSION_CREATE_BY_OBJ 109#define X509_F_X509_EXTENSION_CREATE_BY_NID 108#define X509_F_X509_CRL_PRINT_FP 147#define X509_F_X509_CRL_METHOD_NEW 154#define X509_F_X509_CRL_DIFF 105#define X509_F_X509_CHECK_PRIVATE_KEY 128#define X509_F_X509_ATTRIBUTE_SET1_DATA 138#define X509_F_X509_ATTRIBUTE_GET0_DATA 139#define X509_F_X509_ATTRIBUTE_CREATE_BY_TXT 140#define X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ 137#define X509_F_X509_ATTRIBUTE_CREATE_BY_NID 136#define X509_F_X509V3_ADD_EXT 104#define X509_F_X509AT_ADD1_ATTR 135#define X509_F_NEW_DIR 153#define X509_F_NETSCAPE_SPKI_B64_ENCODE 130#define X509_F_NETSCAPE_SPKI_B64_DECODE 129#define X509_F_LOOKUP_CERTS_SK 152#define X509_F_I2D_X509_AUX 151#define X509_F_GET_CERT_BY_SUBJECT 103#define X509_F_DIR_CTRL 102#define X509_F_DANE_I2D 107#define X509_F_CHECK_POLICY 145#define X509_F_CHECK_NAME_CONSTRAINTS 149#define X509_F_BY_FILE_CTRL 101#define X509_F_BUILD_CHAIN 106#define X509_F_ADD_CERT_DIR 100#define HEADER_X509ERR_H#define DEFINE_LHASH_OF(type) LHASH_OF(type) { union lh_ ## type ## _dummy { void* d1; unsigned long d2; int d3; } dummy; }; static ossl_inline LHASH_OF(type) * lh_ ## type ## _new(unsigned long (*hfn)(const type *), int (*cfn)(const type *, const type *)) { return (LHASH_OF(type) *) OPENSSL_LH_new((OPENSSL_LH_HASHFUNC)hfn, (OPENSSL_LH_COMPFUNC)cfn); } static ossl_inline void lh_ ## type ## _free(LHASH_OF(type) *lh) { OPENSSL_LH_free((OPENSSL_LHASH *)lh); } static ossl_inline type *lh_ ## type ## _insert(LHASH_OF(type) *lh, type *d) { return (type *)OPENSSL_LH_insert((OPENSSL_LHASH *)lh, d); } static ossl_inline type *lh_ ## type ## _delete(LHASH_OF(type) *lh, const type *d) { return (type *)OPENSSL_LH_delete((OPENSSL_LHASH *)lh, d); } static ossl_inline type *lh_ ## type ## _retrieve(LHASH_OF(type) *lh, const type *d) { return (type *)OPENSSL_LH_retrieve((OPENSSL_LHASH *)lh, d); } static ossl_inline int lh_ ## type ## _error(LHASH_OF(type) *lh) { return OPENSSL_LH_error((OPENSSL_LHASH *)lh); } static ossl_inline unsigned long lh_ ## type ## _num_items(LHASH_OF(type) *lh) { return OPENSSL_LH_num_items((OPENSSL_LHASH *)lh); } static ossl_inline void lh_ ## type ## _node_stats_bio(const LHASH_OF(type) *lh, BIO *out) { OPENSSL_LH_node_stats_bio((const OPENSSL_LHASH *)lh, out); } static ossl_inline void lh_ ## type ## _node_usage_stats_bio(const LHASH_OF(type) *lh, BIO *out) { OPENSSL_LH_node_usage_stats_bio((const OPENSSL_LHASH *)lh, out); } static ossl_inline void lh_ ## type ## _stats_bio(const LHASH_OF(type) *lh, BIO *out) { OPENSSL_LH_stats_bio((const OPENSSL_LHASH *)lh, out); } static ossl_inline unsigned long lh_ ## type ## _get_down_load(LHASH_OF(type) *lh) { return OPENSSL_LH_get_down_load((OPENSSL_LHASH *)lh); } static ossl_inline void lh_ ## type ## _set_down_load(LHASH_OF(type) *lh, unsigned long dl) { OPENSSL_LH_set_down_load((OPENSSL_LHASH *)lh, dl); } static ossl_inline void lh_ ## type ## _doall(LHASH_OF(type) *lh, void (*doall)(type *)) { OPENSSL_LH_doall((OPENSSL_LHASH *)lh, (OPENSSL_LH_DOALL_FUNC)doall); } LHASH_OF(type)#define LHASH_OF(type) struct lhash_st_ ## type#define int_implement_lhash_doall(type,argtype,cbargtype) static ossl_inline void lh_ ## type ## _doall_ ## argtype(LHASH_OF(type) *lh, void (*fn)(cbargtype *, argtype *), argtype *arg) { OPENSSL_LH_doall_arg((OPENSSL_LHASH *)lh, (OPENSSL_LH_DOALL_FUNCARG)fn, (void *)arg); } LHASH_OF(type)#define IMPLEMENT_LHASH_DOALL_ARG(type,argtype) int_implement_lhash_doall(type, argtype, type)#define IMPLEMENT_LHASH_DOALL_ARG_CONST(type,argtype) int_implement_lhash_doall(type, argtype, const type)#define lh_node_usage_stats_bio OPENSSL_LH_node_usage_stats_bio#define lh_node_stats_bio OPENSSL_LH_node_stats_bio#define lh_stats_bio OPENSSL_LH_stats_bio#define lh_node_usage_stats OPENSSL_LH_node_usage_stats#define lh_node_stats OPENSSL_LH_node_stats#define lh_stats OPENSSL_LH_stats#define lh_num_items OPENSSL_LH_num_items#define lh_strhash OPENSSL_LH_strhash#define lh_doall_arg OPENSSL_LH_doall_arg#define lh_doall OPENSSL_LH_doall#define lh_retrieve OPENSSL_LH_retrieve#define lh_delete OPENSSL_LH_delete#define lh_insert OPENSSL_LH_insert#define lh_free OPENSSL_LH_free#define lh_new OPENSSL_LH_new#define lh_error OPENSSL_LH_error#define LHASH_NODE OPENSSL_LH_NODE#define _LHASH OPENSSL_LHASH#define LH_LOAD_MULT 256#define LHASH_DOALL_ARG_FN(name) name ## _LHASH_DOALL_ARG#define IMPLEMENT_LHASH_DOALL_ARG_FN(name,o_type,a_type) void name ## _LHASH_DOALL_ARG(void *arg1, void *arg2) { o_type *a = arg1; a_type *b = arg2; name ## _doall_arg(a, b); }#define DECLARE_LHASH_DOALL_ARG_FN(name,o_type,a_type) void name ## _LHASH_DOALL_ARG(void *, void *);#define LHASH_COMP_FN(name) name ## _LHASH_COMP#define IMPLEMENT_LHASH_COMP_FN(name,o_type) int name ## _LHASH_COMP(const void *arg1, const void *arg2) { const o_type *a = arg1; const o_type *b = arg2; return name ## _cmp(a,b); }#define DECLARE_LHASH_COMP_FN(name,o_type) int name ## _LHASH_COMP(const void *, const void *);#define LHASH_HASH_FN(name) name ## _LHASH_HASH#define IMPLEMENT_LHASH_HASH_FN(name,o_type) unsigned long name ## _LHASH_HASH(const void *arg) { const o_type *a = arg; return name ## _hash(a); }#define DECLARE_LHASH_HASH_FN(name,o_type) unsigned long name ## _LHASH_HASH(const void *);#define HEADER_LHASH_H#define X509_PCY_TREE_EXPLICIT 4#define X509_PCY_TREE_EMPTY 2#define X509_PCY_TREE_VALID 1#define X509_PCY_TREE_INTERNAL 0#define X509_PCY_TREE_INVALID -1#define X509_PCY_TREE_FAILURE -2#define DANE_FLAG_NO_DANE_EE_NAMECHECKS (1L << 0)#define X509_STORE_CTX_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_X509_STORE_CTX, l, p, newf, dupf, freef)#define X509_STORE_get1_crl X509_STORE_CTX_get1_crls#define X509_STORE_get1_cert X509_STORE_CTX_get1_certs#define X509_STORE_get_by_subject X509_STORE_CTX_get_by_subject#define X509_STORE_CTX_trusted_stack X509_STORE_CTX_set0_trusted_stack#define X509_STORE_CTX_set_chain X509_STORE_CTX_set0_untrusted#define X509_STORE_CTX_get_chain X509_STORE_CTX_get0_chain#define X509_STORE_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_X509_STORE, l, p, newf, dupf, freef)#define X509_STORE_set_lookup_crls_cb(ctx,func) X509_STORE_set_lookup_crls((ctx), (func))#define X509_STORE_set_verify_cb_func(ctx,func) X509_STORE_set_verify_cb((ctx),(func))#define X509_STORE_set_verify_func(ctx,func) X509_STORE_set_verify((ctx),(func))#define X509_V_FLAG_POLICY_MASK (X509_V_FLAG_POLICY_CHECK | X509_V_FLAG_EXPLICIT_POLICY | X509_V_FLAG_INHIBIT_ANY | X509_V_FLAG_INHIBIT_MAP)#define X509_VP_FLAG_ONCE 0x10#define X509_VP_FLAG_LOCKED 0x8#define X509_VP_FLAG_RESET_FLAGS 0x4#define X509_VP_FLAG_OVERWRITE 0x2#define X509_VP_FLAG_DEFAULT 0x1#define X509_V_FLAG_NO_CHECK_TIME 0x200000#define X509_V_FLAG_NO_ALT_CHAINS 0x100000#define X509_V_FLAG_PARTIAL_CHAIN 0x80000#define X509_V_FLAG_SUITEB_128_LOS 0x30000#define X509_V_FLAG_SUITEB_192_LOS 0x20000#define X509_V_FLAG_SUITEB_128_LOS_ONLY 0x10000#define X509_V_FLAG_TRUSTED_FIRST 0x8000#define X509_V_FLAG_CHECK_SS_SIGNATURE 0x4000#define X509_V_FLAG_USE_DELTAS 0x2000#define X509_V_FLAG_EXTENDED_CRL_SUPPORT 0x1000#define X509_V_FLAG_NOTIFY_POLICY 0x800#define X509_V_FLAG_INHIBIT_MAP 0x400#define X509_V_FLAG_INHIBIT_ANY 0x200#define X509_V_FLAG_EXPLICIT_POLICY 0x100#define X509_V_FLAG_POLICY_CHECK 0x80#define X509_V_FLAG_ALLOW_PROXY_CERTS 0x40#define X509_V_FLAG_X509_STRICT 0x20#define X509_V_FLAG_IGNORE_CRITICAL 0x10#define X509_V_FLAG_CRL_CHECK_ALL 0x8#define X509_V_FLAG_CRL_CHECK 0x4#define X509_V_FLAG_USE_CHECK_TIME 0x2#define X509_V_FLAG_CB_ISSUER_CHECK 0x0#define X509_V_ERR_OCSP_CERT_UNKNOWN 75#define X509_V_ERR_OCSP_VERIFY_FAILED 74#define X509_V_ERR_OCSP_VERIFY_NEEDED 73#define X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION 72#define X509_V_ERR_NO_VALID_SCTS 71#define X509_V_ERR_STORE_LOOKUP 70#define X509_V_ERR_INVALID_CALL 69#define X509_V_ERR_CA_MD_TOO_WEAK 68#define X509_V_ERR_CA_KEY_TOO_SMALL 67#define X509_V_ERR_EE_KEY_TOO_SMALL 66#define X509_V_ERR_DANE_NO_MATCH 65#define X509_V_ERR_IP_ADDRESS_MISMATCH 64#define X509_V_ERR_EMAIL_MISMATCH 63#define X509_V_ERR_HOSTNAME_MISMATCH 62#define X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256 61#define X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED 60#define X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM 59#define X509_V_ERR_SUITE_B_INVALID_CURVE 58#define X509_V_ERR_SUITE_B_INVALID_ALGORITHM 57#define X509_V_ERR_SUITE_B_INVALID_VERSION 56#define X509_V_ERR_PATH_LOOP 55#define X509_V_ERR_CRL_PATH_VALIDATION_ERROR 54#define X509_V_ERR_UNSUPPORTED_NAME_SYNTAX 53#define X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX 52#define X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE 51#define X509_V_ERR_APPLICATION_VERIFICATION 50#define X509_V_ERR_SUBTREE_MINMAX 49#define X509_V_ERR_EXCLUDED_VIOLATION 48#define X509_V_ERR_PERMITTED_VIOLATION 47#define X509_V_ERR_UNNESTED_RESOURCE 46#define X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE 45#define X509_V_ERR_DIFFERENT_CRL_SCOPE 44#define X509_V_ERR_NO_EXPLICIT_POLICY 43#define X509_V_ERR_INVALID_POLICY_EXTENSION 42#define X509_V_ERR_INVALID_EXTENSION 41#define X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED 40#define X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE 39#define X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED 38#define X509_V_ERR_INVALID_NON_CA 37#define X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION 36#define X509_V_ERR_KEYUSAGE_NO_CRL_SIGN 35#define X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION 34#define X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER 33#define X509_V_ERR_KEYUSAGE_NO_CERTSIGN 32#define X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH 31#define X509_V_ERR_AKID_SKID_MISMATCH 30#define X509_V_ERR_SUBJECT_ISSUER_MISMATCH 29#define X509_V_ERR_CERT_REJECTED 28#define X509_V_ERR_CERT_UNTRUSTED 27#define X509_V_ERR_INVALID_PURPOSE 26#define X509_V_ERR_PATH_LENGTH_EXCEEDED 25#define X509_V_ERR_INVALID_CA 24#define X509_V_ERR_CERT_REVOKED 23#define X509_V_ERR_CERT_CHAIN_TOO_LONG 22#define X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE 21#define X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY 20#define X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN 19#define X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT 18#define X509_V_ERR_OUT_OF_MEM 17#define X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD 16#define X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD 15#define X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD 14#define X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD 13#define X509_V_ERR_CRL_HAS_EXPIRED 12#define X509_V_ERR_CRL_NOT_YET_VALID 11#define X509_V_ERR_CERT_HAS_EXPIRED 10#define X509_V_ERR_CERT_NOT_YET_VALID 9#define X509_V_ERR_CRL_SIGNATURE_FAILURE 8#define X509_V_ERR_CERT_SIGNATURE_FAILURE 7#define X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY 6#define X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE 5#define X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE 4#define X509_V_ERR_UNABLE_TO_GET_CRL 3#define X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT 2#define X509_V_ERR_UNSPECIFIED 1#define X509_V_OK 0#define X509_LOOKUP_add_dir(x,name,type) X509_LOOKUP_ctrl((x),X509_L_ADD_DIR,(name),(long)(type),NULL)#define X509_LOOKUP_load_file(x,name,type) X509_LOOKUP_ctrl((x),X509_L_FILE_LOAD,(name),(long)(type),NULL)#define X509_L_ADD_DIR 2#define X509_L_FILE_LOAD 1#define X509_STORE_CTX_get_app_data(ctx) X509_STORE_CTX_get_ex_data(ctx,0)#define X509_STORE_CTX_set_app_data(ctx,data) X509_STORE_CTX_set_ex_data(ctx,0,data)#define X509_LU_FAIL 0#define X509_LU_RETRY -1#define HEADER_X509_VFY_H#define HEADER_X509_H#define PKCS7_R_WRONG_PKCS7_TYPE 114#define PKCS7_R_WRONG_CONTENT_TYPE 113#define PKCS7_R_UNSUPPORTED_CONTENT_TYPE 112#define PKCS7_R_UNSUPPORTED_CIPHER_TYPE 111#define PKCS7_R_UNKNOWN_OPERATION 110#define PKCS7_R_UNKNOWN_DIGEST_TYPE 109#define PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST 108#define PKCS7_R_UNABLE_TO_FIND_MEM_BIO 107#define PKCS7_R_UNABLE_TO_FIND_CERTIFICATE 106#define PKCS7_R_SMIME_TEXT_ERROR 129#define PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE 148#define PKCS7_R_SIGNING_CTRL_FAILURE 147#define PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND 128#define PKCS7_R_SIGNATURE_FAILURE 105#define PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE 127#define PKCS7_R_PKCS7_DATASIGN 145#define PKCS7_R_PKCS7_ADD_SIGNER_ERROR 153#define PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR 124#define PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE 104#define PKCS7_R_NO_SIGNERS 142#define PKCS7_R_NO_SIGNATURES_ON_DATA 123#define PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE 115#define PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND 154#define PKCS7_R_NO_DEFAULT_DIGEST 151#define PKCS7_R_NO_CONTENT 122#define PKCS7_R_INVALID_SIGNED_DATA_TYPE 155#define PKCS7_R_INVALID_NULL_POINTER 143#define PKCS7_R_ERROR_SETTING_CIPHER 121#define PKCS7_R_ERROR_ADDING_RECIPIENT 120#define PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE 150#define PKCS7_R_ENCRYPTION_CTRL_FAILURE 149#define PKCS7_R_DIGEST_FAILURE 101#define PKCS7_R_DECRYPT_ERROR 119#define PKCS7_R_CTRL_ERROR 152#define PKCS7_R_CONTENT_AND_DATA_PRESENT 118#define PKCS7_R_CIPHER_NOT_INITIALIZED 116#define PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER 144#define PKCS7_R_CERTIFICATE_VERIFY_ERROR 117#define PKCS7_F_PKCS7_VERIFY 117#define PKCS7_F_PKCS7_SIMPLE_SMIMECAP 119#define PKCS7_F_PKCS7_SIGN_ADD_SIGNER 137#define PKCS7_F_PKCS7_SIGNER_INFO_SIGN 139#define PKCS7_F_PKCS7_SIGNER_INFO_SET 129#define PKCS7_F_PKCS7_SIGNATUREVERIFY 113#define PKCS7_F_PKCS7_SIGN 116#define PKCS7_F_PKCS7_SET_TYPE 110#define PKCS7_F_PKCS7_SET_DIGEST 126#define PKCS7_F_PKCS7_SET_CONTENT 109#define PKCS7_F_PKCS7_SET_CIPHER 108#define PKCS7_F_PKCS7_RECIP_INFO_SET 130#define PKCS7_F_PKCS7_GET0_SIGNERS 124#define PKCS7_F_PKCS7_FIND_DIGEST 127#define PKCS7_F_PKCS7_FINAL 134#define PKCS7_F_PKCS7_ENCRYPT 115#define PKCS7_F_PKCS7_ENCODE_RINFO 132#define PKCS7_F_PKCS7_DECRYPT_RINFO 133#define PKCS7_F_PKCS7_DECRYPT 114#define PKCS7_F_PKCS7_DATAVERIFY 107#define PKCS7_F_PKCS7_DATAINIT 105#define PKCS7_F_PKCS7_DATAFINAL 128#define PKCS7_F_PKCS7_DATADECODE 112#define PKCS7_F_PKCS7_CTRL 104#define PKCS7_F_PKCS7_COPY_EXISTING_DIGEST 138#define PKCS7_F_PKCS7_BIO_ADD_DIGEST 125#define PKCS7_F_PKCS7_ADD_SIGNER 103#define PKCS7_F_PKCS7_ADD_SIGNATURE 131#define PKCS7_F_PKCS7_ADD_RECIPIENT_INFO 102#define PKCS7_F_PKCS7_ADD_CRL 101#define PKCS7_F_PKCS7_ADD_CERTIFICATE 100#define PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP 118#define PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME 135#define PKCS7_F_DO_PKCS7_SIGNED_ATTRIB 136#define HEADER_PKCS7ERR_H#define SMIME_ASCIICRLF 0x80000#define SMIME_NOATTR PKCS7_NOATTR#define SMIME_BINARY PKCS7_BINARY#define SMIME_DETACHED PKCS7_DETACHED#define SMIME_NOVERIFY PKCS7_NOVERIFY#define SMIME_NOINTERN PKCS7_NOINTERN#define SMIME_NOCHAIN PKCS7_NOCHAIN#define SMIME_NOSIGS PKCS7_NOSIGS#define SMIME_NOCERTS PKCS7_NOCERTS#define SMIME_TEXT PKCS7_TEXT#define PKCS7_NO_DUAL_CONTENT 0x10000#define PKCS7_REUSE_DIGEST 0x8000#define PKCS7_PARTIAL 0x4000#define PKCS7_NOCRL 0x2000#define PKCS7_STREAM 0x1000#define PKCS7_CRLFEOL 0x800#define PKCS7_NOOLDMIMETYPE 0x400#define PKCS7_NOSMIMECAP 0x200#define PKCS7_NOATTR 0x100#define PKCS7_BINARY 0x80#define PKCS7_DETACHED 0x40#define PKCS7_NOVERIFY 0x20#define PKCS7_NOINTERN 0x10#define PKCS7_NOCHAIN 0x8#define PKCS7_NOSIGS 0x4#define PKCS7_NOCERTS 0x2#define PKCS7_TEXT 0x1#define PKCS7_is_detached(p7) (PKCS7_type_is_signed(p7) && PKCS7_get_detached(p7))#define PKCS7_get_detached(p) PKCS7_ctrl(p,PKCS7_OP_GET_DETACHED_SIGNATURE,0,NULL)#define PKCS7_set_detached(p,v) PKCS7_ctrl(p,PKCS7_OP_SET_DETACHED_SIGNATURE,v,NULL)#define PKCS7_type_is_digest(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_digest)#define PKCS7_type_is_data(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_data)#define PKCS7_type_is_signedAndEnveloped(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_signedAndEnveloped)#define PKCS7_type_is_enveloped(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_enveloped)#define PKCS7_type_is_encrypted(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_encrypted)#define PKCS7_type_is_signed(a) (OBJ_obj2nid((a)->type) == NID_pkcs7_signed)#define PKCS7_get_attributes(si) ((si)->unauth_attr)#define PKCS7_get_signed_attributes(si) ((si)->auth_attr)#define PKCS7_OP_GET_DETACHED_SIGNATURE 2#define PKCS7_OP_SET_DETACHED_SIGNATURE 1#define PKCS7_S_TAIL 2#define PKCS7_S_BODY 1#define PKCS7_S_HEADER 0#define HEADER_PKCS7_H#define X509_CRL_set_nextUpdate X509_CRL_set1_nextUpdate#define X509_CRL_set_lastUpdate X509_CRL_set1_lastUpdate#define X509_set_notAfter X509_set1_notAfter#define X509_set_notBefore X509_set1_notBefore#define X509_get_notAfter X509_getm_notAfter#define X509_get_notBefore X509_getm_notBefore#define X509_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_X509, l, p, newf, dupf, freef)#define X509_name_cmp(a,b) X509_NAME_cmp((a),(b))#define X509_REQ_extract_key(a) X509_REQ_get_pubkey(a)#define X509_extract_key(x) X509_get_pubkey(x)#define X509_EXT_PACK_STRING 2#define X509_EXT_PACK_UNKNOWN 1#define XN_FLAG_MULTILINE (ASN1_STRFLGS_ESC_CTRL | ASN1_STRFLGS_ESC_MSB | XN_FLAG_SEP_MULTILINE | XN_FLAG_SPC_EQ | XN_FLAG_FN_LN | XN_FLAG_FN_ALIGN)#define XN_FLAG_ONELINE (ASN1_STRFLGS_RFC2253 | ASN1_STRFLGS_ESC_QUOTE | XN_FLAG_SEP_CPLUS_SPC | XN_FLAG_SPC_EQ | XN_FLAG_FN_SN)#define XN_FLAG_RFC2253 (ASN1_STRFLGS_RFC2253 | XN_FLAG_SEP_COMMA_PLUS | XN_FLAG_DN_REV | XN_FLAG_FN_SN | XN_FLAG_DUMP_UNKNOWN_FIELDS)#define XN_FLAG_FN_ALIGN (1 << 25)#define XN_FLAG_DUMP_UNKNOWN_FIELDS (1 << 24)#define XN_FLAG_SPC_EQ (1 << 23)#define XN_FLAG_FN_NONE (3 << 21)#define XN_FLAG_FN_OID (2 << 21)#define XN_FLAG_FN_LN (1 << 21)#define XN_FLAG_FN_SN 0#define XN_FLAG_FN_MASK (0x3 << 21)#define XN_FLAG_DN_REV (1 << 20)#define XN_FLAG_SEP_MULTILINE (4 << 16)#define XN_FLAG_SEP_SPLUS_SPC (3 << 16)#define XN_FLAG_SEP_CPLUS_SPC (2 << 16)#define XN_FLAG_SEP_COMMA_PLUS (1 << 16)#define XN_FLAG_COMPAT 0#define XN_FLAG_SEP_MASK (0xf << 16)#define X509_FLAG_NO_IDS (1L << 12)#define X509_FLAG_NO_ATTRIBUTES (1L << 11)#define X509_FLAG_NO_AUX (1L << 10)#define X509_FLAG_NO_SIGDUMP (1L << 9)#define X509_FLAG_NO_EXTENSIONS (1L << 8)#define X509_FLAG_NO_PUBKEY (1L << 7)#define X509_FLAG_NO_SUBJECT (1L << 6)#define X509_FLAG_NO_VALIDITY (1L << 5)#define X509_FLAG_NO_ISSUER (1L << 4)#define X509_FLAG_NO_SIGNAME (1L << 3)#define X509_FLAG_NO_SERIAL (1L << 2)#define X509_FLAG_NO_VERSION (1L << 1)#define X509_FLAG_NO_HEADER 1L#define X509_FLAG_COMPAT 0#define X509_TRUST_UNTRUSTED 3#define X509_TRUST_REJECTED 2#define X509_TRUST_TRUSTED 1#define X509_TRUST_OK_ANY_EKU (1U << 4)#define X509_TRUST_DO_SS_COMPAT (1U << 3)#define X509_TRUST_NO_SS_COMPAT (1U << 2)#define X509_TRUST_DYNAMIC_NAME (1U << 1)#define X509_TRUST_DYNAMIC (1U << 0)#define X509_TRUST_MAX 8#define X509_TRUST_MIN 1#define X509_TRUST_TSA 8#define X509_TRUST_OCSP_REQUEST 7#define X509_TRUST_OCSP_SIGN 6#define X509_TRUST_OBJECT_SIGN 5#define X509_TRUST_EMAIL 4#define X509_TRUST_SSL_SERVER 3#define X509_TRUST_SSL_CLIENT 2#define X509_TRUST_COMPAT 1#define X509_TRUST_DEFAULT 0#define X509_EX_V_INIT 0x0001#define X509_EX_V_NETSCAPE_HACK 0x8000#define X509v3_KU_UNDEF 0xffff#define X509v3_KU_DECIPHER_ONLY 0x8000#define X509v3_KU_ENCIPHER_ONLY 0x0001#define X509v3_KU_CRL_SIGN 0x0002#define X509v3_KU_KEY_CERT_SIGN 0x0004#define X509v3_KU_KEY_AGREEMENT 0x0008#define X509v3_KU_DATA_ENCIPHERMENT 0x0010#define X509v3_KU_KEY_ENCIPHERMENT 0x0020#define X509v3_KU_NON_REPUDIATION 0x0040#define X509v3_KU_DIGITAL_SIGNATURE 0x0080#define X509_FILETYPE_DEFAULT 3#define X509_FILETYPE_ASN1 2#define X509_FILETYPE_PEM 1#define X509_SIG_INFO_TLS 0x2#define X509_SIG_INFO_VALID 0x1#define PEM_R_UNSUPPORTED_KEY_COMPONENTS 126#define PEM_R_UNSUPPORTED_ENCRYPTION 114#define PEM_R_UNSUPPORTED_CIPHER 113#define PEM_R_UNEXPECTED_DEK_IV 130#define PEM_R_SHORT_HEADER 112#define PEM_R_READ_KEY 111#define PEM_R_PVK_TOO_SHORT 125#define PEM_R_PVK_DATA_TOO_SHORT 124#define PEM_R_PROBLEMS_GETTING_PASSWORD 109#define PEM_R_NO_START_LINE 108#define PEM_R_NOT_PROC_TYPE 107#define PEM_R_NOT_ENCRYPTED 106#define PEM_R_NOT_DEK_INFO 105#define PEM_R_MISSING_DEK_IV 129#define PEM_R_KEYBLOB_TOO_SHORT 123#define PEM_R_KEYBLOB_HEADER_PARSE_ERROR 122#define PEM_R_INCONSISTENT_HEADER 121#define PEM_R_HEADER_TOO_LONG 128#define PEM_R_EXPECTING_PUBLIC_KEY_BLOB 120#define PEM_R_EXPECTING_PRIVATE_KEY_BLOB 119#define PEM_R_ERROR_CONVERTING_PRIVATE_KEY 115#define PEM_R_CIPHER_IS_NULL 127#define PEM_R_BIO_WRITE_FAILURE 118#define PEM_R_BAD_VERSION_NUMBER 117#define PEM_R_BAD_PASSWORD_READ 104#define PEM_R_BAD_MAGIC_NUMBER 116#define PEM_R_BAD_IV_CHARS 103#define PEM_R_BAD_END_LINE 102#define PEM_R_BAD_DECRYPT 101#define PEM_R_BAD_BASE64_DECODE 100#define PEM_F_PEM_X509_INFO_WRITE_BIO 117#define PEM_F_PEM_X509_INFO_READ_BIO 116#define PEM_F_PEM_X509_INFO_READ 115#define PEM_F_PEM_WRITE_PRIVATEKEY 139#define PEM_F_PEM_WRITE_BIO 114#define PEM_F_PEM_WRITE 113#define PEM_F_PEM_SIGNFINAL 112#define PEM_F_PEM_READ_PRIVATEKEY 124#define PEM_F_PEM_READ_DHPARAMS 142#define PEM_F_PEM_READ_BIO_PRIVATEKEY 123#define PEM_F_PEM_READ_BIO_PARAMETERS 140#define PEM_F_PEM_READ_BIO_EX 145#define PEM_F_PEM_READ_BIO_DHPARAMS 141#define PEM_F_PEM_READ_BIO 109#define PEM_F_PEM_READ 108#define PEM_F_PEM_GET_EVP_CIPHER_INFO 107#define PEM_F_PEM_DO_HEADER 106#define PEM_F_PEM_DEF_CALLBACK 100#define PEM_F_PEM_ASN1_WRITE_BIO 105#define PEM_F_PEM_ASN1_WRITE 104#define PEM_F_PEM_ASN1_READ_BIO 103#define PEM_F_PEM_ASN1_READ 102#define PEM_F_LOAD_IV 101#define PEM_F_I2B_PVK_BIO 138#define PEM_F_I2B_PVK 137#define PEM_F_GET_NAME 144#define PEM_F_GET_HEADER_AND_DATA 143#define PEM_F_DO_PVK_HEADER 136#define PEM_F_DO_PVK_BODY 135#define PEM_F_DO_PK8PKEY_FP 125#define PEM_F_DO_PK8PKEY 126#define PEM_F_DO_I2B 146#define PEM_F_DO_BLOB_HEADER 134#define PEM_F_DO_B2I_BIO 133#define PEM_F_DO_B2I 132#define PEM_F_D2I_PKCS8PRIVATEKEY_FP 121#define PEM_F_D2I_PKCS8PRIVATEKEY_BIO 120#define PEM_F_CHECK_BITLEN_RSA 131#define PEM_F_CHECK_BITLEN_DSA 130#define PEM_F_B2I_RSA 129#define PEM_F_B2I_PVK_BIO 128#define PEM_F_B2I_DSS 127#define HEADER_PEMERR_H#define PEM_FLAG_ONLY_B64 0x4#define PEM_FLAG_EAY_COMPATIBLE 0x2#define PEM_FLAG_SECURE 0x1#define DECLARE_PEM_rw_cb(name,type) DECLARE_PEM_read(name, type) DECLARE_PEM_write_cb(name, type)#define DECLARE_PEM_rw_const(name,type) DECLARE_PEM_read(name, type) DECLARE_PEM_write_const(name, type)#define DECLARE_PEM_rw(name,type) DECLARE_PEM_read(name, type) DECLARE_PEM_write(name, type)#define DECLARE_PEM_read(name,type) DECLARE_PEM_read_bio(name, type) DECLARE_PEM_read_fp(name, type)#define DECLARE_PEM_write_cb(name,type) DECLARE_PEM_write_cb_bio(name, type) DECLARE_PEM_write_cb_fp(name, type)#define DECLARE_PEM_write_const(name,type) DECLARE_PEM_write_bio_const(name, type) DECLARE_PEM_write_fp_const(name, type)#define DECLARE_PEM_write(name,type) DECLARE_PEM_write_bio(name, type) DECLARE_PEM_write_fp(name, type)#define DECLARE_PEM_write_cb_bio(name,type) int PEM_write_bio_ ## name(BIO *bp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u);#define DECLARE_PEM_write_bio_const(name,type) int PEM_write_bio_ ## name(BIO *bp, const type *x);#define DECLARE_PEM_write_bio(name,type) int PEM_write_bio_ ## name(BIO *bp, type *x);#define DECLARE_PEM_read_bio(name,type) type *PEM_read_bio_ ## name(BIO *bp, type **x, pem_password_cb *cb, void *u);#define DECLARE_PEM_write_cb_fp(name,type) int PEM_write_ ## name(FILE *fp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u);#define DECLARE_PEM_write_fp_const(name,type) int PEM_write_ ## name(FILE *fp, const type *x);#define DECLARE_PEM_write_fp(name,type) int PEM_write_ ## name(FILE *fp, type *x);#define DECLARE_PEM_read_fp(name,type) type *PEM_read_ ## name(FILE *fp, type **x, pem_password_cb *cb, void *u);#define IMPLEMENT_PEM_rw_cb(name,type,str,asn1) IMPLEMENT_PEM_read(name, type, str, asn1) IMPLEMENT_PEM_write_cb(name, type, str, asn1)#define IMPLEMENT_PEM_rw_const(name,type,str,asn1) IMPLEMENT_PEM_read(name, type, str, asn1) IMPLEMENT_PEM_write_const(name, type, str, asn1)#define IMPLEMENT_PEM_rw(name,type,str,asn1) IMPLEMENT_PEM_read(name, type, str, asn1) IMPLEMENT_PEM_write(name, type, str, asn1)#define IMPLEMENT_PEM_read(name,type,str,asn1) IMPLEMENT_PEM_read_bio(name, type, str, asn1) IMPLEMENT_PEM_read_fp(name, type, str, asn1)#define IMPLEMENT_PEM_write_cb_const(name,type,str,asn1) IMPLEMENT_PEM_write_cb_bio_const(name, type, str, asn1) IMPLEMENT_PEM_write_cb_fp_const(name, type, str, asn1)#define IMPLEMENT_PEM_write_cb(name,type,str,asn1) IMPLEMENT_PEM_write_cb_bio(name, type, str, asn1) IMPLEMENT_PEM_write_cb_fp(name, type, str, asn1)#define IMPLEMENT_PEM_write_const(name,type,str,asn1) IMPLEMENT_PEM_write_bio_const(name, type, str, asn1) IMPLEMENT_PEM_write_fp_const(name, type, str, asn1)#define IMPLEMENT_PEM_write(name,type,str,asn1) IMPLEMENT_PEM_write_bio(name, type, str, asn1) IMPLEMENT_PEM_write_fp(name, type, str, asn1)#define IMPLEMENT_PEM_write_cb_bio_const(name,type,str,asn1) int PEM_write_bio_ ## name(BIO *bp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u) { return PEM_ASN1_write_bio((i2d_of_void *)i2d_ ## asn1,str,bp,(void *)x,enc,kstr,klen,cb,u); }#define IMPLEMENT_PEM_write_cb_bio(name,type,str,asn1) int PEM_write_bio_ ## name(BIO *bp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u) { return PEM_ASN1_write_bio((i2d_of_void *)i2d_ ## asn1,str,bp,x,enc,kstr,klen,cb,u); }#define IMPLEMENT_PEM_write_bio_const(name,type,str,asn1) int PEM_write_bio_ ## name(BIO *bp, const type *x) { return PEM_ASN1_write_bio((i2d_of_void *)i2d_ ## asn1,str,bp,(void *)x,NULL,NULL,0,NULL,NULL); }#define IMPLEMENT_PEM_write_bio(name,type,str,asn1) int PEM_write_bio_ ## name(BIO *bp, type *x) { return PEM_ASN1_write_bio((i2d_of_void *)i2d_ ## asn1,str,bp,x,NULL,NULL,0,NULL,NULL); }#define IMPLEMENT_PEM_read_bio(name,type,str,asn1) type *PEM_read_bio_ ## name(BIO *bp, type **x, pem_password_cb *cb, void *u){ return PEM_ASN1_read_bio((d2i_of_void *)d2i_ ## asn1, str,bp,(void **)x,cb,u); }#define IMPLEMENT_PEM_write_cb_fp_const(name,type,str,asn1) int PEM_write_ ## name(FILE *fp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u) { return PEM_ASN1_write((i2d_of_void *)i2d_ ## asn1,str,fp,x,enc,kstr,klen,cb,u); }#define IMPLEMENT_PEM_write_cb_fp(name,type,str,asn1) int PEM_write_ ## name(FILE *fp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u) { return PEM_ASN1_write((i2d_of_void *)i2d_ ## asn1,str,fp,x,enc,kstr,klen,cb,u); }#define IMPLEMENT_PEM_write_fp_const(name,type,str,asn1) int PEM_write_ ## name(FILE *fp, const type *x) { return PEM_ASN1_write((i2d_of_void *)i2d_ ## asn1,str,fp,(void *)x,NULL,NULL,0,NULL,NULL); }#define IMPLEMENT_PEM_write_fp(name,type,str,asn1) int PEM_write_ ## name(FILE *fp, type *x) { return PEM_ASN1_write((i2d_of_void *)i2d_ ## asn1,str,fp,x,NULL,NULL,0,NULL,NULL); }#define IMPLEMENT_PEM_read_fp(name,type,str,asn1) type *PEM_read_ ## name(FILE *fp, type **x, pem_password_cb *cb, void *u){ return PEM_ASN1_read((d2i_of_void *)d2i_ ## asn1, str,fp,(void **)x,cb,u); }#define PEM_TYPE_CLEAR 40#define PEM_TYPE_MIC_CLEAR 30#define PEM_TYPE_MIC_ONLY 20#define PEM_TYPE_ENCRYPTED 10#define PEM_STRING_CMS "CMS"#define PEM_STRING_PARAMETERS "PARAMETERS"#define PEM_STRING_ECPRIVATEKEY "EC PRIVATE KEY"#define PEM_STRING_ECPARAMETERS "EC PARAMETERS"#define PEM_STRING_ECDSA_PUBLIC "ECDSA PUBLIC KEY"#define PEM_STRING_DSAPARAMS "DSA PARAMETERS"#define PEM_STRING_SSL_SESSION "SSL SESSION PARAMETERS"#define PEM_STRING_DHXPARAMS "X9.42 DH PARAMETERS"#define PEM_STRING_DHPARAMS "DH PARAMETERS"#define PEM_STRING_PKCS8INF "PRIVATE KEY"#define PEM_STRING_PKCS8 "ENCRYPTED PRIVATE KEY"#define PEM_STRING_PKCS7_SIGNED "PKCS #7 SIGNED DATA"#define PEM_STRING_PKCS7 "PKCS7"#define PEM_STRING_DSA_PUBLIC "DSA PUBLIC KEY"#define PEM_STRING_DSA "DSA PRIVATE KEY"#define PEM_STRING_RSA_PUBLIC "RSA PUBLIC KEY"#define PEM_STRING_RSA "RSA PRIVATE KEY"#define PEM_STRING_PUBLIC "PUBLIC KEY"#define PEM_STRING_EVP_PKEY "ANY PRIVATE KEY"#define PEM_STRING_X509_CRL "X509 CRL"#define PEM_STRING_X509_REQ "CERTIFICATE REQUEST"#define PEM_STRING_X509_REQ_OLD "NEW CERTIFICATE REQUEST"#define PEM_STRING_X509_TRUSTED "TRUSTED CERTIFICATE"#define PEM_STRING_X509 "CERTIFICATE"#define PEM_STRING_X509_OLD "X509 CERTIFICATE"#define PEM_BUFSIZE 1024#define HEADER_PEM_H#define ERR_NUM_ERRORS 16#define ERR_free_strings() while(0) continue#define ERR_load_crypto_strings() OPENSSL_init_crypto(OPENSSL_INIT_LOAD_CRYPTO_STRINGS, NULL)#define ERR_R_OPERATION_FAIL (8|ERR_R_FATAL)#define ERR_R_PASSED_INVALID_ARGUMENT (7)#define ERR_R_INIT_FAIL (6|ERR_R_FATAL)#define ERR_R_DISABLED (5|ERR_R_FATAL)#define ERR_R_INTERNAL_ERROR (4|ERR_R_FATAL)#define ERR_R_PASSED_NULL_PARAMETER (3|ERR_R_FATAL)#define ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED (2|ERR_R_FATAL)#define ERR_R_MALLOC_FAILURE (1|ERR_R_FATAL)#define ERR_R_FATAL 64#define ERR_R_MISSING_ASN1_EOS 63#define ERR_R_NESTED_ASN1_ERROR 58#define ERR_R_OSSL_STORE_LIB ERR_LIB_OSSL_STORE#define ERR_R_ECDSA_LIB ERR_LIB_ECDSA#define ERR_R_UI_LIB ERR_LIB_UI#define ERR_R_ENGINE_LIB ERR_LIB_ENGINE#define ERR_R_X509V3_LIB ERR_LIB_X509V3#define ERR_R_PKCS7_LIB ERR_LIB_PKCS7#define ERR_R_BIO_LIB ERR_LIB_BIO#define ERR_R_EC_LIB ERR_LIB_EC#define ERR_R_ASN1_LIB ERR_LIB_ASN1#define ERR_R_X509_LIB ERR_LIB_X509#define ERR_R_DSA_LIB ERR_LIB_DSA#define ERR_R_PEM_LIB ERR_LIB_PEM#define ERR_R_OBJ_LIB ERR_LIB_OBJ#define ERR_R_BUF_LIB ERR_LIB_BUF#define ERR_R_EVP_LIB ERR_LIB_EVP#define ERR_R_DH_LIB ERR_LIB_DH#define ERR_R_RSA_LIB ERR_LIB_RSA#define ERR_R_BN_LIB ERR_LIB_BN#define ERR_R_SYS_LIB ERR_LIB_SYS#define SYS_F_FSTAT 24#define SYS_F_FCNTL 23#define SYS_F_STAT 22#define SYS_F_IOCTL 21#define SYS_F_CLOSE 20#define SYS_F_OPEN 19#define SYS_F_FFLUSH 18#define SYS_F_GETHOSTBYNAME 17#define SYS_F_GETSOCKNAME 16#define SYS_F_GETSOCKOPT 15#define SYS_F_SETSOCKOPT 14#define SYS_F_GETNAMEINFO 13#define SYS_F_GETADDRINFO 12#define SYS_F_FREAD 11#define SYS_F_OPENDIR 10#define SYS_F_WSASTARTUP 9#define SYS_F_ACCEPT 8#define SYS_F_LISTEN 7#define SYS_F_BIND 6#define SYS_F_IOCTLSOCKET 5#define SYS_F_SOCKET 4#define SYS_F_GETSERVBYNAME 3#define SYS_F_CONNECT 2#define SYS_F_FOPEN 1#define ERR_FATAL_ERROR(l) (int)( (l) & ERR_R_FATAL)#define ERR_GET_REASON(l) (int)( (l) & 0xFFFL)#define ERR_GET_FUNC(l) (int)(((l) >> 12L) & 0xFFFL)#define ERR_GET_LIB(l) (int)(((l) >> 24L) & 0x0FFL)#define ERR_PACK(l,f,r) ( (((unsigned int)(l) & 0x0FF) << 24L) | (((unsigned int)(f) & 0xFFF) << 12L) | (((unsigned int)(r) & 0xFFF) ) )#define SM2err(f,r) ERR_PUT_error(ERR_LIB_SM2,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define KDFerr(f,r) ERR_PUT_error(ERR_LIB_KDF,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define ASYNCerr(f,r) ERR_PUT_error(ERR_LIB_ASYNC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define CTerr(f,r) ERR_PUT_error(ERR_LIB_CT,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define HMACerr(f,r) ERR_PUT_error(ERR_LIB_HMAC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define TSerr(f,r) ERR_PUT_error(ERR_LIB_TS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define CMSerr(f,r) ERR_PUT_error(ERR_LIB_CMS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define FIPSerr(f,r) ERR_PUT_error(ERR_LIB_FIPS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define OSSL_STOREerr(f,r) ERR_PUT_error(ERR_LIB_OSSL_STORE,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define ECDHerr(f,r) ERR_PUT_error(ERR_LIB_ECDH,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define ECDSAerr(f,r) ERR_PUT_error(ERR_LIB_ECDSA,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define COMPerr(f,r) ERR_PUT_error(ERR_LIB_COMP,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define UIerr(f,r) ERR_PUT_error(ERR_LIB_UI,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define OCSPerr(f,r) ERR_PUT_error(ERR_LIB_OCSP,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define ENGINEerr(f,r) ERR_PUT_error(ERR_LIB_ENGINE,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define DSOerr(f,r) ERR_PUT_error(ERR_LIB_DSO,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define RANDerr(f,r) ERR_PUT_error(ERR_LIB_RAND,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define PKCS12err(f,r) ERR_PUT_error(ERR_LIB_PKCS12,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define X509V3err(f,r) ERR_PUT_error(ERR_LIB_X509V3,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define PKCS7err(f,r) ERR_PUT_error(ERR_LIB_PKCS7,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define BIOerr(f,r) ERR_PUT_error(ERR_LIB_BIO,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define SSLerr(f,r) ERR_PUT_error(ERR_LIB_SSL,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define ECerr(f,r) ERR_PUT_error(ERR_LIB_EC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define CRYPTOerr(f,r) ERR_PUT_error(ERR_LIB_CRYPTO,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define CONFerr(f,r) ERR_PUT_error(ERR_LIB_CONF,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define ASN1err(f,r) ERR_PUT_error(ERR_LIB_ASN1,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define X509err(f,r) ERR_PUT_error(ERR_LIB_X509,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define DSAerr(f,r) ERR_PUT_error(ERR_LIB_DSA,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define PEMerr(f,r) ERR_PUT_error(ERR_LIB_PEM,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define OBJerr(f,r) ERR_PUT_error(ERR_LIB_OBJ,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define BUFerr(f,r) ERR_PUT_error(ERR_LIB_BUF,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define EVPerr(f,r) ERR_PUT_error(ERR_LIB_EVP,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define DHerr(f,r) ERR_PUT_error(ERR_LIB_DH,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define RSAerr(f,r) ERR_PUT_error(ERR_LIB_RSA,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define BNerr(f,r) ERR_PUT_error(ERR_LIB_BN,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define SYSerr(f,r) ERR_PUT_error(ERR_LIB_SYS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)#define ERR_LIB_USER 128#define ERR_LIB_SM2 53#define ERR_LIB_KDF 52#define ERR_LIB_ASYNC 51#define ERR_LIB_CT 50#define ERR_LIB_HMAC 48#define ERR_LIB_TS 47#define ERR_LIB_CMS 46#define ERR_LIB_FIPS 45#define ERR_LIB_OSSL_STORE 44#define ERR_LIB_ECDH 43#define ERR_LIB_ECDSA 42#define ERR_LIB_COMP 41#define ERR_LIB_UI 40#define ERR_LIB_OCSP 39#define ERR_LIB_ENGINE 38#define ERR_LIB_DSO 37#define ERR_LIB_RAND 36#define ERR_LIB_PKCS12 35#define ERR_LIB_X509V3 34#define ERR_LIB_PKCS7 33#define ERR_LIB_BIO 32#define ERR_LIB_SSL 20#define ERR_LIB_EC 16#define ERR_LIB_CRYPTO 15#define ERR_LIB_CONF 14#define ERR_LIB_ASN1 13#define ERR_LIB_X509 11#define ERR_LIB_DSA 10#define ERR_LIB_PEM 9#define ERR_LIB_OBJ 8#define ERR_LIB_BUF 7#define ERR_LIB_EVP 6#define ERR_LIB_DH 5#define ERR_LIB_RSA 4#define ERR_LIB_BN 3#define ERR_LIB_SYS 2#define ERR_LIB_NONE 1#define ERR_FLAG_MARK 0x01#define ERR_TXT_STRING 0x02#define ERR_TXT_MALLOCED 0x01#define ERR_PUT_error(a,b,c,d,e) ERR_put_error(a,b,c,d,e)#define HEADER_ERR_H#define COMP_R_ZLIB_NOT_SUPPORTED 101#define COMP_R_ZLIB_INFLATE_ERROR 100#define COMP_R_ZLIB_DEFLATE_ERROR 99#define COMP_F_COMP_CTX_NEW 103#define COMP_F_BIO_ZLIB_WRITE 102#define COMP_F_BIO_ZLIB_READ 101#define COMP_F_BIO_ZLIB_NEW 100#define COMP_F_BIO_ZLIB_FLUSH 99#define HEADER_COMPERR_H#define COMP_zlib_cleanup() while(0) continue#define HEADER_COMP_H#define HMAC_MAX_MD_CBLOCK 128#define HEADER_HMAC_H#define ASYNC_R_INVALID_POOL_SIZE 103#define ASYNC_R_INIT_FAILED 105#define ASYNC_R_FAILED_TO_SWAP_CONTEXT 102#define ASYNC_R_FAILED_TO_SET_POOL 101#define ASYNC_F_ASYNC_WAIT_CTX_SET_WAIT_FD 106#define ASYNC_F_ASYNC_START_JOB 105#define ASYNC_F_ASYNC_START_FUNC 104#define ASYNC_F_ASYNC_PAUSE_JOB 103#define ASYNC_F_ASYNC_JOB_NEW 102#define ASYNC_F_ASYNC_INIT_THREAD 101#define ASYNC_F_ASYNC_CTX_NEW 100#define HEADER_ASYNCERR_H#define ASYNC_FINISH 3#define ASYNC_PAUSE 2#define ASYNC_NO_JOBS 1#define ASYNC_ERR 0#define OSSL_BAD_ASYNC_FD -1#define OSSL_ASYNC_FD int#define HEADER_ASYNC_H#define CT_R_UNSUPPORTED_VERSION 103#define CT_R_UNSUPPORTED_ENTRY_TYPE 102#define CT_R_UNRECOGNIZED_SIGNATURE_NID 101#define CT_R_SCT_UNSUPPORTED_VERSION 115#define CT_R_SCT_NOT_SET 106#define CT_R_SCT_LOG_ID_MISMATCH 114#define CT_R_SCT_LIST_INVALID 105#define CT_R_SCT_INVALID_SIGNATURE 107#define CT_R_SCT_INVALID 104#define CT_R_SCT_FUTURE_TIMESTAMP 116#define CT_R_LOG_KEY_INVALID 113#define CT_R_LOG_CONF_MISSING_KEY 112#define CT_R_LOG_CONF_MISSING_DESCRIPTION 111#define CT_R_LOG_CONF_INVALID_KEY 110#define CT_R_LOG_CONF_INVALID 109#define CT_R_INVALID_LOG_ID_LENGTH 100#define CT_R_BASE64_DECODE_ERROR 108#define CT_F_SCT_SET_VERSION 104#define CT_F_SCT_SET_SIGNATURE_NID 103#define CT_F_SCT_SET_LOG_ENTRY_TYPE 102#define CT_F_SCT_SET1_SIGNATURE 116#define CT_F_SCT_SET1_LOG_ID 115#define CT_F_SCT_SET1_EXTENSIONS 114#define CT_F_SCT_SET0_LOG_ID 101#define CT_F_SCT_NEW_FROM_BASE64 127#define CT_F_SCT_NEW 100#define CT_F_SCT_CTX_VERIFY 128#define CT_F_SCT_CTX_NEW 126#define CT_F_O2I_SCT_SIGNATURE 112#define CT_F_O2I_SCT_LIST 111#define CT_F_O2I_SCT 110#define CT_F_I2O_SCT_SIGNATURE 109#define CT_F_I2O_SCT_LIST 108#define CT_F_I2O_SCT 107#define CT_F_CT_V1_LOG_ID_FROM_PKEY 125#define CT_F_CT_POLICY_EVAL_CTX_NEW 133#define CT_F_CT_BASE64_DECODE 124#define CT_F_CTLOG_STORE_NEW 131#define CT_F_CTLOG_STORE_LOAD_LOG 130#define CT_F_CTLOG_STORE_LOAD_FILE 123#define CT_F_CTLOG_STORE_LOAD_CTX_NEW 122#define CT_F_CTLOG_NEW_FROM_CONF 119#define CT_F_CTLOG_NEW_FROM_BASE64 118#define CT_F_CTLOG_NEW 117#define HEADER_CTERR_H#define CT_V1_HASHLEN SHA256_DIGEST_LENGTH#define SCT_MIN_RSA_BITS 2048#define HEADER_CT_H#define SSL_R_X509_VERIFICATION_SETUP_PROBLEMS 269#define SSL_R_X509_LIB 268#define SSL_R_WRONG_VERSION_NUMBER 267#define SSL_R_WRONG_SSL_VERSION 266#define SSL_R_WRONG_SIGNATURE_TYPE 370#define SSL_R_WRONG_SIGNATURE_SIZE 265#define SSL_R_WRONG_SIGNATURE_LENGTH 264#define SSL_R_WRONG_CURVE 378#define SSL_R_WRONG_CIPHER_RETURNED 261#define SSL_R_WRONG_CERTIFICATE_TYPE 383#define SSL_R_VERSION_TOO_LOW 396#define SSL_R_VERSION_TOO_HIGH 166#define SSL_R_USE_SRTP_NOT_NEGOTIATED 369#define SSL_R_UNSUPPORTED_STATUS_TYPE 329#define SSL_R_UNSUPPORTED_SSL_VERSION 259#define SSL_R_UNSUPPORTED_PROTOCOL 258#define SSL_R_UNSUPPORTED_ELLIPTIC_CURVE 315#define SSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM 257#define SSL_R_UNSOLICITED_EXTENSION 217#define SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED 338#define SSL_R_UNKNOWN_STATE 255#define SSL_R_UNKNOWN_SSL_VERSION 254#define SSL_R_UNKNOWN_PROTOCOL 252#define SSL_R_UNKNOWN_PKEY_TYPE 251#define SSL_R_UNKNOWN_KEY_EXCHANGE_TYPE 250#define SSL_R_UNKNOWN_DIGEST 368#define SSL_R_UNKNOWN_COMMAND 139#define SSL_R_UNKNOWN_CMD_NAME 386#define SSL_R_UNKNOWN_CIPHER_TYPE 249#define SSL_R_UNKNOWN_CIPHER_RETURNED 248#define SSL_R_UNKNOWN_CERTIFICATE_TYPE 247#define SSL_R_UNKNOWN_ALERT_TYPE 246#define SSL_R_UNINITIALIZED 276#define SSL_R_UNEXPECTED_RECORD 245#define SSL_R_UNEXPECTED_MESSAGE 244#define SSL_R_UNEXPECTED_END_OF_EARLY_DATA 178#define SSL_R_UNEXPECTED_CCS_MESSAGE 262#define SSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES 243#define SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES 242#define SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS 239#define SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS 314#define SSL_R_TOO_MUCH_EARLY_DATA 164#define SSL_R_TOO_MANY_WARN_ALERTS 409#define SSL_R_TOO_MANY_KEY_UPDATES 132#define SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST 157#define SSL_R_TLS_ILLEGAL_EXPORTER_LABEL 367#define SSL_R_TLS_HEARTBEAT_PENDING 366#define SSL_R_TLS_HEARTBEAT_PEER_DOESNT_ACCEPT 365#define SSL_R_TLSV1_UNSUPPORTED_EXTENSION 1110#define SSL_R_TLSV1_UNRECOGNIZED_NAME 1112#define SSL_R_TLSV1_CERTIFICATE_UNOBTAINABLE 1111#define SSL_R_TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE 1113#define SSL_R_TLSV1_BAD_CERTIFICATE_HASH_VALUE 1114#define SSL_R_TLSV1_ALERT_USER_CANCELLED 1090#define SSL_R_TLSV1_ALERT_UNKNOWN_CA 1048#define SSL_R_TLSV1_ALERT_RECORD_OVERFLOW 1022#define SSL_R_TLSV1_ALERT_PROTOCOL_VERSION 1070#define SSL_R_TLSV1_ALERT_NO_RENEGOTIATION 1100#define SSL_R_TLSV1_ALERT_INTERNAL_ERROR 1080#define SSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY 1071#define SSL_R_TLSV1_ALERT_INAPPROPRIATE_FALLBACK 1086#define SSL_R_TLSV1_ALERT_EXPORT_RESTRICTION 1060#define SSL_R_TLSV1_ALERT_DECRYPT_ERROR 1051#define SSL_R_TLSV1_ALERT_DECRYPTION_FAILED 1021#define SSL_R_TLSV1_ALERT_DECODE_ERROR 1050#define SSL_R_TLSV1_ALERT_ACCESS_DENIED 1049#define SSL_R_TLSV13_ALERT_MISSING_EXTENSION 1109#define SSL_R_TLSV13_ALERT_CERTIFICATE_REQUIRED 1116#define SSL_R_STILL_IN_INIT 121#define SSL_R_SSL_SESSION_VERSION_MISMATCH 210#define SSL_R_SSL_SESSION_ID_TOO_LONG 408#define SSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH 303#define SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG 273#define SSL_R_SSL_SESSION_ID_CONFLICT 302#define SSL_R_SSL_SESSION_ID_CALLBACK_FAILED 301#define SSL_R_SSL_SECTION_NOT_FOUND 136#define SSL_R_SSL_SECTION_EMPTY 126#define SSL_R_SSL_NEGATIVE_LENGTH 372#define SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS 230#define SSL_R_SSL_HANDSHAKE_FAILURE 229#define SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION 228#define SSL_R_SSL_COMMAND_SECTION_NOT_FOUND 125#define SSL_R_SSL_COMMAND_SECTION_EMPTY 117#define SSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE 1043#define SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE 1010#define SSL_R_SSLV3_ALERT_NO_CERTIFICATE 1041#define SSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER 1047#define SSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE 1040#define SSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE 1030#define SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN 1046#define SSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED 1044#define SSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED 1045#define SSL_R_SSLV3_ALERT_BAD_RECORD_MAC 1020#define SSL_R_SSLV3_ALERT_BAD_CERTIFICATE 1042#define SSL_R_SSL3_SESSION_ID_TOO_LONG 300#define SSL_R_SSL3_EXT_INVALID_SERVERNAME_TYPE 320#define SSL_R_SSL3_EXT_INVALID_SERVERNAME 319#define SSL_R_SSL3_EXT_INVALID_MAX_FRAGMENT_LENGTH 232#define SSL_R_SRTP_UNKNOWN_PROTECTION_PROFILE 364#define SSL_R_SRTP_PROTECTION_PROFILE_LIST_TOO_LONG 363#define SSL_R_SRTP_COULD_NOT_ALLOCATE_PROFILES 362#define SSL_R_SRP_A_CALC 361#define SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE 220#define SSL_R_SIGNATURE_ALGORITHMS_ERROR 360#define SSL_R_SHUTDOWN_WHILE_IN_INIT 407#define SSL_R_SESSION_ID_CONTEXT_UNINITIALIZED 277#define SSL_R_SERVERHELLO_TLSEXT 275#define SSL_R_SCT_VERIFICATION_FAILED 208#define SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING 345#define SSL_R_REQUIRED_COMPRESSION_ALGORITHM_MISSING 342#define SSL_R_REQUIRED_CIPHER_MISSING 215#define SSL_R_REQUEST_SENT 286#define SSL_R_REQUEST_PENDING 285#define SSL_R_RENEGOTIATION_MISMATCH 337#define SSL_R_RENEGOTIATION_ENCODING_ERR 336#define SSL_R_RENEGOTIATE_EXT_TOO_LONG 335#define SSL_R_RECORD_TOO_SMALL 298#define SSL_R_RECORD_LENGTH_MISMATCH 213#define SSL_R_READ_TIMEOUT_EXPIRED 312#define SSL_R_READ_BIO_NOT_SET 211#define SSL_R_PSK_NO_SERVER_CB 225#define SSL_R_PSK_NO_CLIENT_CB 224#define SSL_R_PSK_IDENTITY_NOT_FOUND 223#define SSL_R_PROTOCOL_IS_SHUTDOWN 207#define SSL_R_PRIVATE_KEY_MISMATCH 288#define SSL_R_POST_HANDSHAKE_AUTH_ENCODING_ERR 278#define SSL_R_PIPELINE_FAILURE 406#define SSL_R_PEM_NAME_TOO_SHORT 392#define SSL_R_PEM_NAME_BAD_PREFIX 391#define SSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE 199#define SSL_R_PATH_TOO_LONG 270#define SSL_R_PARSE_TLSEXT 227#define SSL_R_PACKET_LENGTH_TOO_LONG 198#define SSL_R_OVERFLOW_ERROR 237#define SSL_R_OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED 344#define SSL_R_OLD_SESSION_CIPHER_NOT_RETURNED 197#define SSL_R_NULL_SSL_METHOD_PASSED 196#define SSL_R_NULL_SSL_CTX 195#define SSL_R_NO_VERIFY_COOKIE_CALLBACK 403#define SSL_R_NO_VALID_SCTS 216#define SSL_R_NO_SUITABLE_SIGNATURE_ALGORITHM 118#define SSL_R_NO_SUITABLE_KEY_SHARE 101#define SSL_R_NO_SRTP_PROFILES 359#define SSL_R_NO_SHARED_SIGNATURE_ALGORITHMS 376#define SSL_R_NO_SHARED_GROUPS 410#define SSL_R_NO_SHARED_CIPHER 193#define SSL_R_NO_REQUIRED_DIGEST 324#define SSL_R_NO_RENEGOTIATION 339#define SSL_R_NO_PROTOCOLS_AVAILABLE 191#define SSL_R_NO_PRIVATE_KEY_ASSIGNED 190#define SSL_R_NO_PEM_EXTENSIONS 389#define SSL_R_NO_METHOD_SPECIFIED 188#define SSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER 330#define SSL_R_NO_COOKIE_CALLBACK_SET 287#define SSL_R_NO_COMPRESSION_SPECIFIED 187#define SSL_R_NO_CLIENT_CERT_METHOD 331#define SSL_R_NO_CIPHER_MATCH 185#define SSL_R_NO_CIPHERS_SPECIFIED 183#define SSL_R_NO_CIPHERS_AVAILABLE 181#define SSL_R_NO_CHANGE_FOLLOWING_HRR 214#define SSL_R_NO_CERTIFICATE_SET 179#define SSL_R_NO_CERTIFICATE_ASSIGNED 177#define SSL_R_NO_CERTIFICATES_RETURNED 176#define SSL_R_NO_APPLICATION_PROTOCOL 235#define SSL_R_NOT_SERVER 284#define SSL_R_NOT_REPLACING_CERTIFICATE 289#define SSL_R_NOT_ON_RECORD_BOUNDARY 182#define SSL_R_MISSING_TMP_ECDH_KEY 311#define SSL_R_MISSING_TMP_DH_KEY 171#define SSL_R_MISSING_SUPPORTED_GROUPS_EXTENSION 209#define SSL_R_MISSING_SRP_PARAM 358#define SSL_R_MISSING_SIGNING_CERT 221#define SSL_R_MISSING_SIGALGS_EXTENSION 112#define SSL_R_MISSING_RSA_SIGNING_CERT 170#define SSL_R_MISSING_RSA_ENCRYPTING_CERT 169#define SSL_R_MISSING_RSA_CERTIFICATE 168#define SSL_R_MISSING_PARAMETERS 290#define SSL_R_MISSING_FATAL 256#define SSL_R_MISSING_ECDSA_SIGNING_CERT 381#define SSL_R_MISSING_DSA_SIGNING_CERT 165#define SSL_R_LIBRARY_HAS_NO_CIPHERS 161#define SSL_R_LIBRARY_BUG 274#define SSL_R_LENGTH_TOO_SHORT 160#define SSL_R_LENGTH_TOO_LONG 404#define SSL_R_LENGTH_MISMATCH 159#define SSL_R_INVALID_TICKET_KEYS_LENGTH 325#define SSL_R_INVALID_STATUS_RESPONSE 328#define SSL_R_INVALID_SRP_USERNAME 357#define SSL_R_INVALID_SESSION_ID 999#define SSL_R_INVALID_SERVERINFO_DATA 388#define SSL_R_INVALID_SEQUENCE_NUMBER 402#define SSL_R_INVALID_NULL_CMD_NAME 385#define SSL_R_INVALID_MAX_EARLY_DATA 174#define SSL_R_INVALID_KEY_UPDATE_TYPE 120#define SSL_R_INVALID_CT_VALIDATION_TYPE 212#define SSL_R_INVALID_CONTEXT 282#define SSL_R_INVALID_CONFIGURATION_NAME 113#define SSL_R_INVALID_CONFIG 283#define SSL_R_INVALID_COMPRESSION_ALGORITHM 341#define SSL_R_INVALID_COMMAND 280#define SSL_R_INVALID_CERTIFICATE_OR_ALG 238#define SSL_R_INVALID_CCS_MESSAGE 260#define SSL_R_INVALID_ALERT 205#define SSL_R_INSUFFICIENT_SECURITY 241#define SSL_R_INCONSISTENT_EXTMS 104#define SSL_R_INCONSISTENT_EARLY_DATA_SNI 231#define SSL_R_INCONSISTENT_EARLY_DATA_ALPN 222#define SSL_R_INCONSISTENT_COMPRESSION 340#define SSL_R_INAPPROPRIATE_FALLBACK 373#define SSL_R_ILLEGAL_SUITEB_DIGEST 380#define SSL_R_ILLEGAL_POINT_COMPRESSION 162#define SSL_R_HTTP_REQUEST 156#define SSL_R_HTTPS_PROXY_REQUEST 155#define SSL_R_GOT_A_FIN_BEFORE_A_CCS 154#define SSL_R_FRAGMENTED_CLIENT_HELLO 401#define SSL_R_FAILED_TO_INIT_ASYNC 405#define SSL_R_EXT_LENGTH_MISMATCH 163#define SSL_R_EXTRA_DATA_IN_MESSAGE 153#define SSL_R_EXTENSION_NOT_RECEIVED 279#define SSL_R_EXCESSIVE_MESSAGE_SIZE 152#define SSL_R_EXCEEDS_MAX_FRAGMENT_SIZE 194#define SSL_R_ERROR_SETTING_TLSA_BASE_DOMAIN 204#define SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST 151#define SSL_R_ENCRYPTED_LENGTH_TOO_LONG 150#define SSL_R_EMPTY_SRTP_PROTECTION_PROFILE_LIST 354#define SSL_R_EE_KEY_TOO_SMALL 399#define SSL_R_ECDH_REQUIRED_FOR_SUITEB_MODE 374#define SSL_R_ECC_CERT_NOT_FOR_SIGNING 318#define SSL_R_DUPLICATE_COMPRESSION_ID 309#define SSL_R_DTLS_MESSAGE_TOO_BIG 334#define SSL_R_DIGEST_CHECK_FAILED 149#define SSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG 148#define SSL_R_DH_KEY_TOO_SMALL 394#define SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC 281#define SSL_R_DECRYPTION_FAILED 147#define SSL_R_DATA_LENGTH_TOO_LONG 146#define SSL_R_DATA_BETWEEN_CCS_AND_FINISHED 145#define SSL_R_DANE_TLSA_NULL_DATA 203#define SSL_R_DANE_TLSA_BAD_SELECTOR 202#define SSL_R_DANE_TLSA_BAD_PUBLIC_KEY 201#define SSL_R_DANE_TLSA_BAD_MATCHING_TYPE 200#define SSL_R_DANE_TLSA_BAD_DIGEST_LENGTH 192#define SSL_R_DANE_TLSA_BAD_DATA_LENGTH 189#define SSL_R_DANE_TLSA_BAD_CERTIFICATE_USAGE 184#define SSL_R_DANE_TLSA_BAD_CERTIFICATE 180#define SSL_R_DANE_NOT_ENABLED 175#define SSL_R_DANE_CANNOT_OVERRIDE_MTYPE_FULL 173#define SSL_R_DANE_ALREADY_ENABLED 172#define SSL_R_CUSTOM_EXT_HANDLER_ALREADY_INSTALLED 206#define SSL_R_COOKIE_MISMATCH 308#define SSL_R_COOKIE_GEN_CALLBACK_FAILURE 400#define SSL_R_CONTEXT_NOT_DANE_ENABLED 167#define SSL_R_CONNECTION_TYPE_NOT_SET 144#define SSL_R_COMPRESSION_LIBRARY_ERROR 142#define SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE 307#define SSL_R_COMPRESSION_FAILURE 141#define SSL_R_COMPRESSION_DISABLED 343#define SSL_R_COMPRESSED_LENGTH_TOO_LONG 140#define SSL_R_CLIENTHELLO_TLSEXT 226#define SSL_R_CIPHER_OR_HASH_UNAVAILABLE 138#define SSL_R_CIPHER_CODE_WRONG_LENGTH 137#define SSL_R_CIPHERSUITE_DIGEST_HAS_CHANGED 218#define SSL_R_CERT_LENGTH_MISMATCH 135#define SSL_R_CERT_CB_ERROR 377#define SSL_R_CERTIFICATE_VERIFY_FAILED 134#define SSL_R_CCS_RECEIVED_EARLY 133#define SSL_R_CA_MD_TOO_WEAK 398#define SSL_R_CA_KEY_TOO_SMALL 397#define SSL_R_CA_DN_LENGTH_MISMATCH 131#define SSL_R_CANNOT_CHANGE_CIPHER 109#define SSL_R_CALLBACK_FAILED 234#define SSL_R_BN_LIB 130#define SSL_R_BLOCK_CIPHER_PAD_IS_WRONG 129#define SSL_R_BIO_NOT_SET 128#define SSL_R_BINDER_DOES_NOT_VERIFY 253#define SSL_R_BAD_WRITE_RETRY 127#define SSL_R_BAD_VALUE 384#define SSL_R_BAD_SSL_FILETYPE 124#define SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST 353#define SSL_R_BAD_SRTP_MKI_VALUE 352#define SSL_R_BAD_SRP_PARAMETERS 371#define SSL_R_BAD_SRP_A_LENGTH 347#define SSL_R_BAD_SIGNATURE 123#define SSL_R_BAD_RSA_ENCRYPT 119#define SSL_R_BAD_RECORD_TYPE 443#define SSL_R_BAD_PSK_IDENTITY 114#define SSL_R_BAD_PSK 219#define SSL_R_BAD_PROTOCOL_VERSION_NUMBER 116#define SSL_R_BAD_PACKET_LENGTH 115#define SSL_R_BAD_PACKET 240#define SSL_R_BAD_LENGTH 271#define SSL_R_BAD_LEGACY_VERSION 292#define SSL_R_BAD_KEY_UPDATE 122#define SSL_R_BAD_KEY_SHARE 108#define SSL_R_BAD_HRR_VERSION 263#define SSL_R_BAD_HELLO_REQUEST 105#define SSL_R_BAD_HANDSHAKE_STATE 236#define SSL_R_BAD_HANDSHAKE_LENGTH 332#define SSL_R_BAD_EXTENSION 110#define SSL_R_BAD_ECPOINT 306#define SSL_R_BAD_ECC_CERT 304#define SSL_R_BAD_EARLY_DATA 233#define SSL_R_BAD_DIGEST_LENGTH 111#define SSL_R_BAD_DH_VALUE 102#define SSL_R_BAD_DECOMPRESSION 107#define SSL_R_BAD_DATA_RETURNED_BY_CALLBACK 106#define SSL_R_BAD_DATA 390#define SSL_R_BAD_CIPHER 186#define SSL_R_BAD_CHANGE_CIPHER_SPEC 103#define SSL_R_AT_LEAST_TLS_1_2_NEEDED_IN_SUITEB_MODE 158#define SSL_R_AT_LEAST_TLS_1_0_NEEDED_IN_FIPS_MODE 143#define SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT 272#define SSL_R_APP_DATA_IN_HANDSHAKE 100#define SSL_R_APPLICATION_DATA_AFTER_CLOSE_NOTIFY 291#define SSL_F_WRITE_STATE_MACHINE 586#define SSL_F_WPACKET_START_SUB_PACKET_LEN__ 634#define SSL_F_WPACKET_INTERN_INIT_LEN 633#define SSL_F_USE_CERTIFICATE_CHAIN_FILE 220#define SSL_F_TLS_SETUP_HANDSHAKE 508#define SSL_F_TLS_SCAN_CLIENTHELLO_TLSEXT 450#define SSL_F_TLS_PSK_DO_BINDER 506#define SSL_F_TLS_PROCESS_SKE_SRP 422#define SSL_F_TLS_PROCESS_SKE_PSK_PREAMBLE 421#define SSL_F_TLS_PROCESS_SKE_ECDHE 420#define SSL_F_TLS_PROCESS_SKE_DHE 419#define SSL_F_TLS_PROCESS_SERVER_HELLO 369#define SSL_F_TLS_PROCESS_SERVER_DONE 368#define SSL_F_TLS_PROCESS_SERVER_CERTIFICATE 367#define SSL_F_TLS_PROCESS_NEXT_PROTO 383#define SSL_F_TLS_PROCESS_NEW_SESSION_TICKET 366#define SSL_F_TLS_PROCESS_KEY_UPDATE 518#define SSL_F_TLS_PROCESS_KEY_EXCHANGE 365#define SSL_F_TLS_PROCESS_INITIAL_SERVER_FLIGHT 442#define SSL_F_TLS_PROCESS_HELLO_RETRY_REQUEST 511#define SSL_F_TLS_PROCESS_HELLO_REQ 507#define SSL_F_TLS_PROCESS_FINISHED 364#define SSL_F_TLS_PROCESS_END_OF_EARLY_DATA 537#define SSL_F_TLS_PROCESS_ENCRYPTED_EXTENSIONS 444#define SSL_F_TLS_PROCESS_CLIENT_KEY_EXCHANGE 382#define SSL_F_TLS_PROCESS_CLIENT_HELLO 381#define SSL_F_TLS_PROCESS_CLIENT_CERTIFICATE 380#define SSL_F_TLS_PROCESS_CKE_SRP 416#define SSL_F_TLS_PROCESS_CKE_RSA 415#define SSL_F_TLS_PROCESS_CKE_PSK_PREAMBLE 414#define SSL_F_TLS_PROCESS_CKE_GOST 413#define SSL_F_TLS_PROCESS_CKE_ECDHE 412#define SSL_F_TLS_PROCESS_CKE_DHE 411#define SSL_F_TLS_PROCESS_CHANGE_CIPHER_SPEC 363#define SSL_F_TLS_PROCESS_CERT_VERIFY 379#define SSL_F_TLS_PROCESS_CERT_STATUS_BODY 495#define SSL_F_TLS_PROCESS_CERT_STATUS 362#define SSL_F_TLS_PROCESS_CERTIFICATE_REQUEST 361#define SSL_F_TLS_PROCESS_AS_HELLO_RETRY_REQUEST 610#define SSL_F_TLS_PREPARE_CLIENT_CERTIFICATE 360#define SSL_F_TLS_POST_PROCESS_CLIENT_KEY_EXCHANGE 384#define SSL_F_TLS_POST_PROCESS_CLIENT_HELLO 378#define SSL_F_TLS_PARSE_STOC_USE_SRTP 446#define SSL_F_TLS_PARSE_STOC_SUPPORTED_VERSIONS 612#define SSL_F_TLS_PARSE_STOC_STATUS_REQUEST 585#define SSL_F_TLS_PARSE_STOC_SESSION_TICKET 584#define SSL_F_TLS_PARSE_STOC_SERVER_NAME 583#define SSL_F_TLS_PARSE_STOC_SCT 564#define SSL_F_TLS_PARSE_STOC_RENEGOTIATE 448#define SSL_F_TLS_PARSE_STOC_PSK 502#define SSL_F_TLS_PARSE_STOC_NPN 582#define SSL_F_TLS_PARSE_STOC_MAXFRAGMENTLEN 581#define SSL_F_TLS_PARSE_STOC_KEY_SHARE 445#define SSL_F_TLS_PARSE_STOC_EC_PT_FORMATS 580#define SSL_F_TLS_PARSE_STOC_EARLY_DATA_INFO 528#define SSL_F_TLS_PARSE_STOC_EARLY_DATA 538#define SSL_F_TLS_PARSE_STOC_COOKIE 534#define SSL_F_TLS_PARSE_STOC_ALPN 579#define SSL_F_TLS_PARSE_CTOS_USE_SRTP 465#define SSL_F_TLS_PARSE_CTOS_SUPPORTED_GROUPS 578#define SSL_F_TLS_PARSE_CTOS_STATUS_REQUEST 577#define SSL_F_TLS_PARSE_CTOS_SRP 576#define SSL_F_TLS_PARSE_CTOS_SIG_ALGS_CERT 615#define SSL_F_TLS_PARSE_CTOS_SIG_ALGS 575#define SSL_F_TLS_PARSE_CTOS_SESSION_TICKET 574#define SSL_F_TLS_PARSE_CTOS_SERVER_NAME 573#define SSL_F_TLS_PARSE_CTOS_RENEGOTIATE 464#define SSL_F_TLS_PARSE_CTOS_PSK_KEX_MODES 572#define SSL_F_TLS_PARSE_CTOS_PSK 505#define SSL_F_TLS_PARSE_CTOS_POST_HANDSHAKE_AUTH 620#define SSL_F_TLS_PARSE_CTOS_MAXFRAGMENTLEN 571#define SSL_F_TLS_PARSE_CTOS_KEY_SHARE 463#define SSL_F_TLS_PARSE_CTOS_EMS 570#define SSL_F_TLS_PARSE_CTOS_EC_PT_FORMATS 569#define SSL_F_TLS_PARSE_CTOS_EARLY_DATA 568#define SSL_F_TLS_PARSE_CTOS_COOKIE 614#define SSL_F_TLS_PARSE_CTOS_ALPN 567#define SSL_F_TLS_PARSE_CLIENTHELLO_TLSEXT 449#define SSL_F_TLS_PARSE_CERTIFICATE_AUTHORITIES 566#define SSL_F_TLS_HANDLE_STATUS_REQUEST 563#define SSL_F_TLS_HANDLE_ALPN 562#define SSL_F_TLS_GET_MESSAGE_HEADER 387#define SSL_F_TLS_GET_MESSAGE_BODY 351#define SSL_F_TLS_FINISH_HANDSHAKE 597#define SSL_F_TLS_EARLY_POST_PROCESS_CLIENT_HELLO 521#define SSL_F_TLS_CONSTRUCT_STOC_USE_SRTP 462#define SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_VERSIONS 611#define SSL_F_TLS_CONSTRUCT_STOC_SUPPORTED_GROUPS 544#define SSL_F_TLS_CONSTRUCT_STOC_STATUS_REQUEST 461#define SSL_F_TLS_CONSTRUCT_STOC_SESSION_TICKET 460#define SSL_F_TLS_CONSTRUCT_STOC_SERVER_NAME 459#define SSL_F_TLS_CONSTRUCT_STOC_RENEGOTIATE 458#define SSL_F_TLS_CONSTRUCT_STOC_PSK 504#define SSL_F_TLS_CONSTRUCT_STOC_NEXT_PROTO_NEG 457#define SSL_F_TLS_CONSTRUCT_STOC_MAXFRAGMENTLEN 548#define SSL_F_TLS_CONSTRUCT_STOC_KEY_SHARE 456#define SSL_F_TLS_CONSTRUCT_STOC_KEY_EXCHANGE 377#define SSL_F_TLS_CONSTRUCT_STOC_HELLO 376#define SSL_F_TLS_CONSTRUCT_STOC_ETM 455#define SSL_F_TLS_CONSTRUCT_STOC_EMS 454#define SSL_F_TLS_CONSTRUCT_STOC_EC_PT_FORMATS 453#define SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA_INFO 525#define SSL_F_TLS_CONSTRUCT_STOC_EARLY_DATA 531#define SSL_F_TLS_CONSTRUCT_STOC_DONE 375#define SSL_F_TLS_CONSTRUCT_STOC_CRYPTOPRO_BUG 452#define SSL_F_TLS_CONSTRUCT_STOC_COOKIE 613#define SSL_F_TLS_CONSTRUCT_STOC_CERTIFICATE 374#define SSL_F_TLS_CONSTRUCT_STOC_ALPN 451#define SSL_F_TLS_CONSTRUCT_SERVER_KEY_EXCHANGE 492#define SSL_F_TLS_CONSTRUCT_SERVER_HELLO 491#define SSL_F_TLS_CONSTRUCT_SERVER_CERTIFICATE 490#define SSL_F_TLS_CONSTRUCT_NEXT_PROTO 426#define SSL_F_TLS_CONSTRUCT_NEW_SESSION_TICKET 428#define SSL_F_TLS_CONSTRUCT_KEY_UPDATE 517#define SSL_F_TLS_CONSTRUCT_HELLO_RETRY_REQUEST 510#define SSL_F_TLS_CONSTRUCT_HELLO_REQUEST 373#define SSL_F_TLS_CONSTRUCT_FINISHED 359#define SSL_F_TLS_CONSTRUCT_EXTENSIONS 447#define SSL_F_TLS_CONSTRUCT_END_OF_EARLY_DATA 536#define SSL_F_TLS_CONSTRUCT_ENCRYPTED_EXTENSIONS 443#define SSL_F_TLS_CONSTRUCT_CTOS_VERIFY 358#define SSL_F_TLS_CONSTRUCT_CTOS_USE_SRTP 482#define SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_VERSIONS 481#define SSL_F_TLS_CONSTRUCT_CTOS_SUPPORTED_GROUPS 480#define SSL_F_TLS_CONSTRUCT_CTOS_STATUS_REQUEST 479#define SSL_F_TLS_CONSTRUCT_CTOS_SRP 478#define SSL_F_TLS_CONSTRUCT_CTOS_SIG_ALGS 477#define SSL_F_TLS_CONSTRUCT_CTOS_SESSION_TICKET 476#define SSL_F_TLS_CONSTRUCT_CTOS_SERVER_NAME 475#define SSL_F_TLS_CONSTRUCT_CTOS_SCT 474#define SSL_F_TLS_CONSTRUCT_CTOS_RENEGOTIATE 473#define SSL_F_TLS_CONSTRUCT_CTOS_PSK_KEX_MODES 509#define SSL_F_TLS_CONSTRUCT_CTOS_PSK 501#define SSL_F_TLS_CONSTRUCT_CTOS_POST_HANDSHAKE_AUTH 619#define SSL_F_TLS_CONSTRUCT_CTOS_PADDING 472#define SSL_F_TLS_CONSTRUCT_CTOS_NPN 471#define SSL_F_TLS_CONSTRUCT_CTOS_MAXFRAGMENTLEN 549#define SSL_F_TLS_CONSTRUCT_CTOS_KEY_SHARE 470#define SSL_F_TLS_CONSTRUCT_CTOS_KEY_EXCHANGE 357#define SSL_F_TLS_CONSTRUCT_CTOS_HELLO 356#define SSL_F_TLS_CONSTRUCT_CTOS_ETM 469#define SSL_F_TLS_CONSTRUCT_CTOS_EMS 468#define SSL_F_TLS_CONSTRUCT_CTOS_EC_PT_FORMATS 467#define SSL_F_TLS_CONSTRUCT_CTOS_EARLY_DATA 530#define SSL_F_TLS_CONSTRUCT_CTOS_COOKIE 535#define SSL_F_TLS_CONSTRUCT_CTOS_CERTIFICATE 355#define SSL_F_TLS_CONSTRUCT_CTOS_ALPN 466#define SSL_F_TLS_CONSTRUCT_CLIENT_VERIFY 489#define SSL_F_TLS_CONSTRUCT_CLIENT_KEY_EXCHANGE 488#define SSL_F_TLS_CONSTRUCT_CLIENT_HELLO 487#define SSL_F_TLS_CONSTRUCT_CLIENT_CERTIFICATE 484#define SSL_F_TLS_CONSTRUCT_CKE_SRP 410#define SSL_F_TLS_CONSTRUCT_CKE_RSA 409#define SSL_F_TLS_CONSTRUCT_CKE_PSK_PREAMBLE 407#define SSL_F_TLS_CONSTRUCT_CKE_GOST 406#define SSL_F_TLS_CONSTRUCT_CKE_ECDHE 405#define SSL_F_TLS_CONSTRUCT_CKE_DHE 404#define SSL_F_TLS_CONSTRUCT_CHANGE_CIPHER_SPEC 427#define SSL_F_TLS_CONSTRUCT_CERT_VERIFY 496#define SSL_F_TLS_CONSTRUCT_CERT_STATUS_BODY 494#define SSL_F_TLS_CONSTRUCT_CERT_STATUS 429#define SSL_F_TLS_CONSTRUCT_CERTIFICATE_REQUEST 372#define SSL_F_TLS_CONSTRUCT_CERTIFICATE_AUTHORITIES 542#define SSL_F_TLS_COLLECT_EXTENSIONS 435#define SSL_F_TLS_CLIENT_KEY_EXCHANGE_POST_WORK 354#define SSL_F_TLS_CHOOSE_SIGALG 513#define SSL_F_TLS1_SET_SIGALGS 632#define SSL_F_TLS1_SET_SHARED_SIGALGS 631#define SSL_F_TLS1_SET_SERVER_SIGALGS 335#define SSL_F_TLS1_SET_RAW_SIGALGS 630#define SSL_F_TLS1_SET_GROUPS 629#define SSL_F_TLS1_SETUP_KEY_BLOCK 211#define SSL_F_TLS1_SAVE_U16 628#define SSL_F_TLS1_PRF 284#define SSL_F_TLS1_GET_CURVELIST 338#define SSL_F_TLS1_EXPORT_KEYING_MATERIAL 314#define SSL_F_TLS1_ENC 401#define SSL_F_TLS1_CHECK_DUPLICATE_EXTENSIONS 341#define SSL_F_TLS1_CHANGE_CIPHER_STATE 209#define SSL_F_TLS13_SETUP_KEY_BLOCK 441#define SSL_F_TLS13_SAVE_HANDSHAKE_DIGEST_FOR_PHA 618#define SSL_F_TLS13_RESTORE_HANDSHAKE_DIGEST_FOR_PHA 617#define SSL_F_TLS13_HKDF_EXPAND 561#define SSL_F_TLS13_GENERATE_SECRET 591#define SSL_F_TLS13_FINAL_FINISH_MAC 605#define SSL_F_TLS13_ENC 609#define SSL_F_TLS13_CHANGE_CIPHER_STATE 440#define SSL_F_TLS12_COPY_SIGALGS 533#define SSL_F_TLS12_CHECK_PEER_SIGALG 333#define SSL_F_STATE_MACHINE 353#define SSL_F_SSL_WRITE_INTERNAL 524#define SSL_F_SSL_WRITE_EX 433#define SSL_F_SSL_WRITE_EARLY_FINISH 527#define SSL_F_SSL_WRITE_EARLY_DATA 526#define SSL_F_SSL_WRITE 208#define SSL_F_SSL_VERIFY_CLIENT_POST_HANDSHAKE 616#define SSL_F_SSL_VERIFY_CERT_CHAIN 207#define SSL_F_SSL_VALIDATE_CT 400#define SSL_F_SSL_USE_RSAPRIVATEKEY_FILE 206#define SSL_F_SSL_USE_RSAPRIVATEKEY_ASN1 205#define SSL_F_SSL_USE_RSAPRIVATEKEY 204#define SSL_F_SSL_USE_PSK_IDENTITY_HINT 273#define SSL_F_SSL_USE_PRIVATEKEY_FILE 203#define SSL_F_SSL_USE_PRIVATEKEY_ASN1 202#define SSL_F_SSL_USE_PRIVATEKEY 201#define SSL_F_SSL_USE_CERTIFICATE_FILE 200#define SSL_F_SSL_USE_CERTIFICATE_ASN1 199#define SSL_F_SSL_USE_CERTIFICATE 198#define SSL_F_SSL_UNDEFINED_VOID_FUNCTION 244#define SSL_F_SSL_UNDEFINED_FUNCTION 197#define SSL_F_SSL_START_ASYNC_JOB 389#define SSL_F_SSL_SRP_CTX_INIT 313#define SSL_F_SSL_SHUTDOWN 224#define SSL_F_SSL_SET_WFD 196#define SSL_F_SSL_SET_TLSEXT_MAX_FRAGMENT_LENGTH 550#define SSL_F_SSL_SET_SESSION_TICKET_EXT 294#define SSL_F_SSL_SET_SESSION_ID_CONTEXT 218#define SSL_F_SSL_SET_SESSION 195#define SSL_F_SSL_SET_RFD 194#define SSL_F_SSL_SET_PKEY 193#define SSL_F_SSL_SET_FD 192#define SSL_F_SSL_SET_CT_VALIDATION_CALLBACK 399#define SSL_F_SSL_SET_CIPHER_LIST 271#define SSL_F_SSL_SET_CERT_AND_KEY 621#define SSL_F_SSL_SET_CERT 191#define SSL_F_SSL_SET_ALPN_PROTOS 344#define SSL_F_SSL_SESSION_SET1_ID_CONTEXT 312#define SSL_F_SSL_SESSION_SET1_ID 423#define SSL_F_SSL_SESSION_PRINT_FP 190#define SSL_F_SSL_SESSION_NEW 189#define SSL_F_SSL_SESSION_DUP 348#define SSL_F_SSL_SCAN_SERVERHELLO_TLSEXT 321#define SSL_F_SSL_SCAN_CLIENTHELLO_TLSEXT 320#define SSL_F_SSL_RENEGOTIATE_ABBREVIATED 546#define SSL_F_SSL_RENEGOTIATE 516#define SSL_F_SSL_READ_INTERNAL 523#define SSL_F_SSL_READ_EX 434#define SSL_F_SSL_READ_EARLY_DATA 529#define SSL_F_SSL_READ 223#define SSL_F_SSL_PEEK_INTERNAL 522#define SSL_F_SSL_PEEK_EX 432#define SSL_F_SSL_PEEK 270#define SSL_F_SSL_PARSE_SERVERHELLO_USE_SRTP_EXT 311#define SSL_F_SSL_PARSE_SERVERHELLO_TLSEXT 303#define SSL_F_SSL_PARSE_SERVERHELLO_RENEGOTIATE_EXT 301#define SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT 310#define SSL_F_SSL_PARSE_CLIENTHELLO_TLSEXT 302#define SSL_F_SSL_PARSE_CLIENTHELLO_RENEGOTIATE_EXT 300#define SSL_F_SSL_NEXT_PROTO_VALIDATE 565#define SSL_F_SSL_NEW 186#define SSL_F_SSL_MODULE_INIT 392#define SSL_F_SSL_LOG_RSA_CLIENT_KEY_EXCHANGE 499#define SSL_F_SSL_LOG_MASTER_SECRET 498#define SSL_F_SSL_LOAD_CLIENT_CA_FILE 185#define SSL_F_SSL_KEY_UPDATE 515#define SSL_F_SSL_INIT_WBIO_BUFFER 184#define SSL_F_SSL_HANDSHAKE_HASH 560#define SSL_F_SSL_GET_SIGN_PKEY 183#define SSL_F_SSL_GET_SERVER_CERT_INDEX 322#define SSL_F_SSL_GET_PREV_SESSION 217#define SSL_F_SSL_GET_NEW_SESSION 181#define SSL_F_SSL_GENERATE_SESSION_ID 547#define SSL_F_SSL_GENERATE_PKEY_GROUP 559#define SSL_F_SSL_ENABLE_CT 402#define SSL_F_SSL_DUP_CA_LIST 408#define SSL_F_SSL_DO_HANDSHAKE 180#define SSL_F_SSL_DO_CONFIG 391#define SSL_F_SSL_DERIVE 590#define SSL_F_SSL_DANE_ENABLE 395#define SSL_F_SSL_DANE_DUP 403#define SSL_F_SSL_CTX_USE_SERVERINFO_FILE 337#define SSL_F_SSL_CTX_USE_SERVERINFO_EX 543#define SSL_F_SSL_CTX_USE_SERVERINFO 336#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE 179#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1 178#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY 177#define SSL_F_SSL_CTX_USE_PSK_IDENTITY_HINT 272#define SSL_F_SSL_CTX_USE_PRIVATEKEY_FILE 176#define SSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1 175#define SSL_F_SSL_CTX_USE_PRIVATEKEY 174#define SSL_F_SSL_CTX_USE_CERTIFICATE_FILE 173#define SSL_F_SSL_CTX_USE_CERTIFICATE_ASN1 172#define SSL_F_SSL_CTX_USE_CERTIFICATE 171#define SSL_F_SSL_CTX_SET_TLSEXT_MAX_FRAGMENT_LENGTH 551#define SSL_F_SSL_CTX_SET_SSL_VERSION 170#define SSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT 219#define SSL_F_SSL_CTX_SET_CT_VALIDATION_CALLBACK 396#define SSL_F_SSL_CTX_SET_CLIENT_CERT_ENGINE 290#define SSL_F_SSL_CTX_SET_CIPHER_LIST 269#define SSL_F_SSL_CTX_SET_ALPN_PROTOS 343#define SSL_F_SSL_CTX_NEW 169#define SSL_F_SSL_CTX_MAKE_PROFILES 309#define SSL_F_SSL_CTX_ENABLE_CT 398#define SSL_F_SSL_CTX_CHECK_PRIVATE_KEY 168#define SSL_F_SSL_CTRL 232#define SSL_F_SSL_CREATE_CIPHER_LIST 166#define SSL_F_SSL_CONF_CMD 334#define SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD 165#define SSL_F_SSL_CLIENT_HELLO_GET1_EXTENSIONS_PRESENT 627#define SSL_F_SSL_CLEAR 164#define SSL_F_SSL_CIPHER_STRENGTH_SORT 231#define SSL_F_SSL_CIPHER_PROCESS_RULESTR 230#define SSL_F_SSL_CIPHER_LIST_TO_BYTES 425#define SSL_F_SSL_CIPHER_DESCRIPTION 626#define SSL_F_SSL_CHOOSE_CLIENT_VERSION 607#define SSL_F_SSL_CHECK_SRVR_ECC_CERT_AND_ALG 279#define SSL_F_SSL_CHECK_SRP_EXT_CLIENTHELLO 606#define SSL_F_SSL_CHECK_SERVERHELLO_TLSEXT 280#define SSL_F_SSL_CHECK_PRIVATE_KEY 163#define SSL_F_SSL_CERT_SET0_CHAIN 340#define SSL_F_SSL_CERT_NEW 162#define SSL_F_SSL_CERT_DUP 221#define SSL_F_SSL_CERT_ADD0_CHAIN_CERT 346#define SSL_F_SSL_CACHE_CIPHERLIST 520#define SSL_F_SSL_BYTES_TO_CIPHER_LIST 161#define SSL_F_SSL_BUILD_CERT_CHAIN 332#define SSL_F_SSL_BAD_METHOD 160#define SSL_F_SSL_ADD_SERVERHELLO_USE_SRTP_EXT 308#define SSL_F_SSL_ADD_SERVERHELLO_TLSEXT 278#define SSL_F_SSL_ADD_SERVERHELLO_RENEGOTIATE_EXT 299#define SSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK 216#define SSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK 215#define SSL_F_SSL_ADD_CLIENTHELLO_USE_SRTP_EXT 307#define SSL_F_SSL_ADD_CLIENTHELLO_TLSEXT 277#define SSL_F_SSL_ADD_CLIENTHELLO_RENEGOTIATE_EXT 298#define SSL_F_SSL_ADD_CERT_TO_WPACKET 493#define SSL_F_SSL_ADD_CERT_TO_BUF 319#define SSL_F_SSL_ADD_CERT_CHAIN 316#define SSL_F_SSL3_WRITE_PENDING 159#define SSL_F_SSL3_WRITE_BYTES 158#define SSL_F_SSL3_SETUP_WRITE_BUFFER 291#define SSL_F_SSL3_SETUP_READ_BUFFER 156#define SSL_F_SSL3_SETUP_KEY_BLOCK 157#define SSL_F_SSL3_READ_N 149#define SSL_F_SSL3_READ_BYTES 148#define SSL_F_SSL3_OUTPUT_CERT_CHAIN 147#define SSL_F_SSL3_INIT_FINISHED_MAC 397#define SSL_F_SSL3_GET_RECORD 143#define SSL_F_SSL3_GENERATE_MASTER_SECRET 388#define SSL_F_SSL3_GENERATE_KEY_BLOCK 238#define SSL_F_SSL3_FINISH_MAC 587#define SSL_F_SSL3_FINAL_FINISH_MAC 285#define SSL_F_SSL3_ENC 608#define SSL_F_SSL3_DO_CHANGE_CIPHER_SPEC 292#define SSL_F_SSL3_DIGEST_CACHED_RECORDS 293#define SSL_F_SSL3_CTX_CTRL 133#define SSL_F_SSL3_CTRL 213#define SSL_F_SSL3_CHECK_CERT_AND_ALGORITHM 130#define SSL_F_SSL3_CHANGE_CIPHER_STATE 129#define SSL_F_SRP_VERIFY_SERVER_PARAM 596#define SSL_F_SRP_GENERATE_SERVER_MASTER_SECRET 589#define SSL_F_SRP_GENERATE_CLIENT_MASTER_SECRET 595#define SSL_F_SET_CLIENT_CIPHERSUITE 540#define SSL_F_READ_STATE_MACHINE 352#define SSL_F_PROCESS_KEY_SHARE_EXT 439#define SSL_F_PQUEUE_NEW 625#define SSL_F_PITEM_NEW 624#define SSL_F_PARSE_CA_NAMES 541#define SSL_F_OSSL_STATEM_SERVER_WRITE_TRANSITION 604#define SSL_F_OSSL_STATEM_SERVER_READ_TRANSITION 418#define SSL_F_OSSL_STATEM_SERVER_PROCESS_MESSAGE 603#define SSL_F_OSSL_STATEM_SERVER_POST_WORK 602#define SSL_F_OSSL_STATEM_SERVER_POST_PROCESS_MESSAGE 601#define SSL_F_OSSL_STATEM_SERVER_CONSTRUCT_MESSAGE 431#define SSL_F_OSSL_STATEM_SERVER13_WRITE_TRANSITION 600#define SSL_F_OSSL_STATEM_SERVER13_READ_TRANSITION 437#define SSL_F_OSSL_STATEM_CLIENT_WRITE_TRANSITION 599#define SSL_F_OSSL_STATEM_CLIENT_READ_TRANSITION 417#define SSL_F_OSSL_STATEM_CLIENT_PROCESS_MESSAGE 594#define SSL_F_OSSL_STATEM_CLIENT_POST_PROCESS_MESSAGE 593#define SSL_F_OSSL_STATEM_CLIENT_CONSTRUCT_MESSAGE 430#define SSL_F_OSSL_STATEM_CLIENT13_WRITE_TRANSITION 598#define SSL_F_OSSL_STATEM_CLIENT13_READ_TRANSITION 436#define SSL_F_OPENSSL_INIT_SSL 342#define SSL_F_NSS_KEYLOG_INT 500#define SSL_F_GET_CERT_VERIFY_TBS_DATA 588#define SSL_F_FINAL_SIG_ALGS 497#define SSL_F_FINAL_SERVER_NAME 558#define SSL_F_FINAL_RENEGOTIATE 483#define SSL_F_FINAL_MAXFRAGMENTLEN 557#define SSL_F_FINAL_KEY_SHARE 503#define SSL_F_FINAL_EMS 486#define SSL_F_FINAL_EC_PT_FORMATS 485#define SSL_F_FINAL_EARLY_DATA 556#define SSL_F_EARLY_DATA_COUNT_OK 532#define SSL_F_DTLS_WAIT_FOR_DRY 592#define SSL_F_DTLS_RECORD_LAYER_NEW 635#define SSL_F_DTLS_PROCESS_HELLO_VERIFY 386#define SSL_F_DTLS_GET_REASSEMBLED_MESSAGE 370#define SSL_F_DTLS_CONSTRUCT_HELLO_VERIFY_REQUEST 385#define SSL_F_DTLS_CONSTRUCT_CHANGE_CIPHER_SPEC 371#define SSL_F_DTLSV1_LISTEN 350#define SSL_F_DTLS1_WRITE_BYTES 545#define SSL_F_DTLS1_WRITE_APP_DATA_BYTES 268#define SSL_F_DTLS1_RETRANSMIT_MESSAGE 390#define SSL_F_DTLS1_READ_FAILED 339#define SSL_F_DTLS1_READ_BYTES 258#define SSL_F_DTLS1_PROCESS_RECORD 257#define SSL_F_DTLS1_PROCESS_BUFFERED_RECORDS 424#define SSL_F_DTLS1_PREPROCESS_FRAGMENT 288#define SSL_F_DTLS1_HM_FRAGMENT_NEW 623#define SSL_F_DTLS1_HEARTBEAT 305#define SSL_F_DTLS1_CHECK_TIMEOUT_NUM 318#define SSL_F_DTLS1_BUFFER_RECORD 247#define SSL_F_DO_SSL3_WRITE 104#define SSL_F_DO_DTLS1_WRITE 245#define SSL_F_DERIVE_SECRET_KEY_AND_IV 514#define SSL_F_DANE_TLSA_ADD 394#define SSL_F_DANE_MTYPE_SET 393#define SSL_F_DANE_CTX_ENABLE 347#define SSL_F_D2I_SSL_SESSION 103#define SSL_F_CUSTOM_EXT_PARSE 555#define SSL_F_CUSTOM_EXT_ADD 554#define SSL_F_CT_STRICT 349#define SSL_F_CT_MOVE_SCTS 345#define SSL_F_CREATE_TICKET_PREQUEL 638#define SSL_F_CREATE_SYNTHETIC_MESSAGE_HASH 539#define SSL_F_CONSTRUCT_STATELESS_TICKET 637#define SSL_F_CONSTRUCT_STATEFUL_TICKET 636#define SSL_F_CONSTRUCT_KEY_EXCHANGE_TBS 553#define SSL_F_CONSTRUCT_CA_NAMES 552#define SSL_F_CIPHERSUITE_CB 622#define SSL_F_CHECK_SUITEB_CIPHER_LIST 331#define SSL_F_BYTES_TO_CIPHER_LIST 519#define SSL_F_ADD_KEY_SHARE 512#define SSL_F_ADD_CLIENT_KEY_SHARE_EXT 438#define HEADER_SSLERR_H#define SSL2_MT_CLIENT_HELLO 1#define SSL2_VERSION 0x0002#define HEADER_SSL2_H#define HEADER_SSL_H#define SSL3_CHANGE_CIPHER_SERVER_WRITE (SSL3_CC_SERVER|SSL3_CC_WRITE)#define SSL3_CHANGE_CIPHER_CLIENT_READ (SSL3_CC_CLIENT|SSL3_CC_READ)#define SSL3_CHANGE_CIPHER_SERVER_READ (SSL3_CC_SERVER|SSL3_CC_READ)#define SSL3_CHANGE_CIPHER_CLIENT_WRITE (SSL3_CC_CLIENT|SSL3_CC_WRITE)#define SSL3_CC_APPLICATION 0x100#define SSL3_CC_HANDSHAKE 0x080#define SSL3_CC_EARLY 0x040#define SSL3_CC_SERVER 0x020#define SSL3_CC_CLIENT 0x010#define SSL3_CC_WRITE 0x002#define SSL3_CC_READ 0x001#define SSL3_MT_CCS 1#define SSL3_MT_CHANGE_CIPHER_SPEC 0x0101#define DTLS1_MT_HELLO_VERIFY_REQUEST 3#define SSL3_MT_MESSAGE_HASH 254#define SSL3_MT_NEXT_PROTO 67#define SSL3_MT_KEY_UPDATE 24#define SSL3_MT_SUPPLEMENTAL_DATA 23#define SSL3_MT_CERTIFICATE_STATUS 22#define SSL3_MT_CERTIFICATE_URL 21#define SSL3_MT_FINISHED 20#define SSL3_MT_CLIENT_KEY_EXCHANGE 16#define SSL3_MT_CERTIFICATE_VERIFY 15#define SSL3_MT_SERVER_DONE 14#define SSL3_MT_CERTIFICATE_REQUEST 13#define SSL3_MT_SERVER_KEY_EXCHANGE 12#define SSL3_MT_CERTIFICATE 11#define SSL3_MT_ENCRYPTED_EXTENSIONS 8#define SSL3_MT_END_OF_EARLY_DATA 5#define SSL3_MT_NEWSESSION_TICKET 4#define SSL3_MT_SERVER_HELLO 2#define SSL3_MT_CLIENT_HELLO 1#define SSL3_MT_HELLO_REQUEST 0#define TLS1_FLAGS_STATELESS 0x0800#define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE 0x0400#define TLS1_FLAGS_RECEIVED_EXTMS 0x0200#define TLS1_FLAGS_ENCRYPT_THEN_MAC TLS1_FLAGS_ENCRYPT_THEN_MAC_READ#define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ 0x0100#define TLS1_FLAGS_SKIP_CERT_VERIFY 0x0010#define TLS1_FLAGS_TLS_PADDING_BUG 0x0#define SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS 0x0001#define SSL3_CT_NUMBER 10#define SSL3_CT_FORTEZZA_DMS 20#define SSL3_CT_DSS_EPHEMERAL_DH 6#define SSL3_CT_RSA_EPHEMERAL_DH 5#define SSL3_CT_DSS_FIXED_DH 4#define SSL3_CT_RSA_FIXED_DH 3#define SSL3_CT_DSS_SIGN 2#define SSL3_CT_RSA_SIGN 1#define TLS1_HB_RESPONSE 2#define TLS1_HB_REQUEST 1#define SSL3_AD_ILLEGAL_PARAMETER 47#define SSL3_AD_CERTIFICATE_UNKNOWN 46#define SSL3_AD_CERTIFICATE_EXPIRED 45#define SSL3_AD_CERTIFICATE_REVOKED 44#define SSL3_AD_UNSUPPORTED_CERTIFICATE 43#define SSL3_AD_BAD_CERTIFICATE 42#define SSL3_AD_NO_CERTIFICATE 41#define SSL3_AD_HANDSHAKE_FAILURE 40#define SSL3_AD_DECOMPRESSION_FAILURE 30#define SSL3_AD_BAD_RECORD_MAC 20#define SSL3_AD_UNEXPECTED_MESSAGE 10#define SSL3_AD_CLOSE_NOTIFY 0#define SSL3_AL_FATAL 2#define SSL3_AL_WARNING 1#define SSL3_RT_INNER_CONTENT_TYPE 0x101#define SSL3_RT_HEADER 0x100#define TLS1_RT_CRYPTO_FIXED_IV (TLS1_RT_CRYPTO | 0x8)#define TLS1_RT_CRYPTO_IV (TLS1_RT_CRYPTO | 0x7)#define TLS1_RT_CRYPTO_KEY (TLS1_RT_CRYPTO | 0x6)#define TLS1_RT_CRYPTO_MAC (TLS1_RT_CRYPTO | 0x5)#define TLS1_RT_CRYPTO_WRITE 0x0100#define TLS1_RT_CRYPTO_READ 0x0000#define TLS1_RT_CRYPTO_MASTER (TLS1_RT_CRYPTO | 0x4)#define TLS1_RT_CRYPTO_SERVER_RANDOM (TLS1_RT_CRYPTO | 0x3)#define TLS1_RT_CRYPTO_CLIENT_RANDOM (TLS1_RT_CRYPTO | 0x2)#define TLS1_RT_CRYPTO_PREMASTER (TLS1_RT_CRYPTO | 0x1)#define TLS1_RT_CRYPTO 0x1000#define DTLS1_RT_HEARTBEAT 24#define SSL3_RT_APPLICATION_DATA 23#define SSL3_RT_HANDSHAKE 22#define SSL3_RT_ALERT 21#define SSL3_RT_CHANGE_CIPHER_SPEC 20#define SSL3_VERSION_MINOR 0x00#define SSL3_VERSION_MAJOR 0x03#define SSL3_VERSION 0x0300#define SSL3_MD_SERVER_FINISHED_CONST "\x53\x52\x56\x52"#define SSL3_MD_CLIENT_FINISHED_CONST "\x43\x4C\x4E\x54"#define SSL3_RT_MAX_PACKET_SIZE (SSL3_RT_MAX_ENCRYPTED_LENGTH+SSL3_RT_HEADER_LENGTH)#define SSL3_RT_MAX_TLS13_ENCRYPTED_LENGTH (SSL3_RT_MAX_PLAIN_LENGTH + SSL3_RT_MAX_TLS13_ENCRYPTED_OVERHEAD)#define SSL3_RT_MAX_ENCRYPTED_LENGTH (SSL3_RT_MAX_ENCRYPTED_OVERHEAD+SSL3_RT_MAX_COMPRESSED_LENGTH)#define SSL3_RT_MAX_COMPRESSED_LENGTH (SSL3_RT_MAX_PLAIN_LENGTH+SSL3_RT_MAX_COMPRESSED_OVERHEAD)#define SSL3_RT_SEND_MAX_ENCRYPTED_OVERHEAD (SSL_RT_MAX_CIPHER_BLOCK_SIZE + SSL3_RT_MAX_MD_SIZE)#define SSL3_RT_MAX_TLS13_ENCRYPTED_OVERHEAD 256#define SSL3_RT_MAX_ENCRYPTED_OVERHEAD (256 + SSL3_RT_MAX_MD_SIZE)#define SSL3_RT_MAX_COMPRESSED_OVERHEAD 1024#define SSL3_RT_MAX_PLAIN_LENGTH 16384#define SSL3_RT_MAX_EXTRA (16384)#define SSL_RT_MAX_CIPHER_BLOCK_SIZE 16#define SSL3_RT_MAX_MD_SIZE 64#define SSL3_ALIGN_PAYLOAD 8#define SSL3_HM_HEADER_LENGTH 4#define SSL3_RT_HEADER_LENGTH 5#define SSL3_SESSION_ID_SIZE 32#define SSL3_RANDOM_SIZE 32#define SSL3_MASTER_SECRET_SIZE 48#define SSL3_MAX_SSL_SESSION_ID_LENGTH 32#define SSL3_SSL_SESSION_ID_LENGTH 32#define SSL3_TXT_ADH_DES_192_CBC_SHA "ADH-DES-CBC3-SHA"#define SSL3_TXT_ADH_DES_64_CBC_SHA "ADH-DES-CBC-SHA"#define SSL3_TXT_ADH_DES_40_CBC_SHA "EXP-ADH-DES-CBC-SHA"#define SSL3_TXT_ADH_RC4_128_MD5 "ADH-RC4-MD5"#define SSL3_TXT_ADH_RC4_40_MD5 "EXP-ADH-RC4-MD5"#define SSL3_TXT_EDH_RSA_DES_192_CBC3_SHA "EDH-RSA-DES-CBC3-SHA"#define SSL3_TXT_EDH_RSA_DES_64_CBC_SHA "EDH-RSA-DES-CBC-SHA"#define SSL3_TXT_EDH_RSA_DES_40_CBC_SHA "EXP-EDH-RSA-DES-CBC-SHA"#define SSL3_TXT_EDH_DSS_DES_192_CBC3_SHA "EDH-DSS-DES-CBC3-SHA"#define SSL3_TXT_EDH_DSS_DES_64_CBC_SHA "EDH-DSS-DES-CBC-SHA"#define SSL3_TXT_EDH_DSS_DES_40_CBC_SHA "EXP-EDH-DSS-DES-CBC-SHA"#define SSL3_TXT_DHE_RSA_DES_192_CBC3_SHA "DHE-RSA-DES-CBC3-SHA"#define SSL3_TXT_DHE_RSA_DES_64_CBC_SHA "DHE-RSA-DES-CBC-SHA"#define SSL3_TXT_DHE_RSA_DES_40_CBC_SHA "EXP-DHE-RSA-DES-CBC-SHA"#define SSL3_TXT_DHE_DSS_DES_192_CBC3_SHA "DHE-DSS-DES-CBC3-SHA"#define SSL3_TXT_DHE_DSS_DES_64_CBC_SHA "DHE-DSS-DES-CBC-SHA"#define SSL3_TXT_DHE_DSS_DES_40_CBC_SHA "EXP-DHE-DSS-DES-CBC-SHA"#define SSL3_TXT_DH_RSA_DES_192_CBC3_SHA "DH-RSA-DES-CBC3-SHA"#define SSL3_TXT_DH_RSA_DES_64_CBC_SHA "DH-RSA-DES-CBC-SHA"#define SSL3_TXT_DH_RSA_DES_40_CBC_SHA "EXP-DH-RSA-DES-CBC-SHA"#define SSL3_TXT_DH_DSS_DES_192_CBC3_SHA "DH-DSS-DES-CBC3-SHA"#define SSL3_TXT_DH_DSS_DES_64_CBC_SHA "DH-DSS-DES-CBC-SHA"#define SSL3_TXT_DH_DSS_DES_40_CBC_SHA "EXP-DH-DSS-DES-CBC-SHA"#define SSL3_TXT_RSA_DES_192_CBC3_SHA "DES-CBC3-SHA"#define SSL3_TXT_RSA_DES_64_CBC_SHA "DES-CBC-SHA"#define SSL3_TXT_RSA_DES_40_CBC_SHA "EXP-DES-CBC-SHA"#define SSL3_TXT_RSA_IDEA_128_SHA "IDEA-CBC-SHA"#define SSL3_TXT_RSA_RC2_40_MD5 "EXP-RC2-CBC-MD5"#define SSL3_TXT_RSA_RC4_128_SHA "RC4-SHA"#define SSL3_TXT_RSA_RC4_128_MD5 "RC4-MD5"#define SSL3_TXT_RSA_RC4_40_MD5 "EXP-RC4-MD5"#define SSL3_TXT_RSA_NULL_SHA "NULL-SHA"#define SSL3_TXT_RSA_NULL_MD5 "NULL-MD5"#define SSL3_RFC_ADH_RC4_128_MD5 "TLS_DH_anon_WITH_RC4_128_MD5"#define SSL3_RFC_RSA_RC4_128_SHA "TLS_RSA_WITH_RC4_128_SHA"#define SSL3_RFC_RSA_RC4_128_MD5 "TLS_RSA_WITH_RC4_128_MD5"#define SSL3_RFC_RSA_IDEA_128_SHA "TLS_RSA_WITH_IDEA_CBC_SHA"#define SSL3_RFC_ADH_DES_192_CBC_SHA "TLS_DH_anon_WITH_3DES_EDE_CBC_SHA"#define SSL3_RFC_DHE_RSA_DES_192_CBC3_SHA "TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA"#define SSL3_RFC_DHE_DSS_DES_192_CBC3_SHA "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"#define SSL3_RFC_RSA_DES_192_CBC3_SHA "TLS_RSA_WITH_3DES_EDE_CBC_SHA"#define SSL3_RFC_RSA_NULL_SHA "TLS_RSA_WITH_NULL_SHA"#define SSL3_RFC_RSA_NULL_MD5 "TLS_RSA_WITH_NULL_MD5"#define SSL3_CK_ADH_DES_192_CBC_SHA 0x0300001B#define SSL3_CK_ADH_DES_64_CBC_SHA 0x0300001A#define SSL3_CK_ADH_DES_40_CBC_SHA 0x03000019#define SSL3_CK_ADH_RC4_128_MD5 0x03000018#define SSL3_CK_ADH_RC4_40_MD5 0x03000017#define SSL3_CK_EDH_RSA_DES_192_CBC3_SHA SSL3_CK_DHE_RSA_DES_192_CBC3_SHA#define SSL3_CK_DHE_RSA_DES_192_CBC3_SHA 0x03000016#define SSL3_CK_EDH_RSA_DES_64_CBC_SHA SSL3_CK_DHE_RSA_DES_64_CBC_SHA#define SSL3_CK_DHE_RSA_DES_64_CBC_SHA 0x03000015#define SSL3_CK_EDH_RSA_DES_40_CBC_SHA SSL3_CK_DHE_RSA_DES_40_CBC_SHA#define SSL3_CK_DHE_RSA_DES_40_CBC_SHA 0x03000014#define SSL3_CK_EDH_DSS_DES_192_CBC3_SHA SSL3_CK_DHE_DSS_DES_192_CBC3_SHA#define SSL3_CK_DHE_DSS_DES_192_CBC3_SHA 0x03000013#define SSL3_CK_EDH_DSS_DES_64_CBC_SHA SSL3_CK_DHE_DSS_DES_64_CBC_SHA#define SSL3_CK_DHE_DSS_DES_64_CBC_SHA 0x03000012#define SSL3_CK_EDH_DSS_DES_40_CBC_SHA SSL3_CK_DHE_DSS_DES_40_CBC_SHA#define SSL3_CK_DHE_DSS_DES_40_CBC_SHA 0x03000011#define SSL3_CK_DH_RSA_DES_192_CBC3_SHA 0x03000010#define SSL3_CK_DH_RSA_DES_64_CBC_SHA 0x0300000F#define SSL3_CK_DH_RSA_DES_40_CBC_SHA 0x0300000E#define SSL3_CK_DH_DSS_DES_192_CBC3_SHA 0x0300000D#define SSL3_CK_DH_DSS_DES_64_CBC_SHA 0x0300000C#define SSL3_CK_DH_DSS_DES_40_CBC_SHA 0x0300000B#define SSL3_CK_RSA_DES_192_CBC3_SHA 0x0300000A#define SSL3_CK_RSA_DES_64_CBC_SHA 0x03000009#define SSL3_CK_RSA_DES_40_CBC_SHA 0x03000008#define SSL3_CK_RSA_IDEA_128_SHA 0x03000007#define SSL3_CK_RSA_RC2_40_MD5 0x03000006#define SSL3_CK_RSA_RC4_128_SHA 0x03000005#define SSL3_CK_RSA_RC4_128_MD5 0x03000004#define SSL3_CK_RSA_RC4_40_MD5 0x03000003#define SSL3_CK_RSA_NULL_SHA 0x03000002#define SSL3_CK_RSA_NULL_MD5 0x03000001#define SSL3_CK_FALLBACK_SCSV 0x03005600#define SSL3_CK_SCSV 0x030000FF#define HEADER_SSL3_H#define TLS_MD_EXTENDED_MASTER_SECRET_CONST_SIZE 22#define TLS_MD_EXTENDED_MASTER_SECRET_CONST "extended master secret"#define TLS_MD_MASTER_SECRET_CONST_SIZE 13#define TLS_MD_MASTER_SECRET_CONST "master secret"#define TLS_MD_IV_BLOCK_CONST_SIZE 8#define TLS_MD_IV_BLOCK_CONST "IV block"#define TLS_MD_SERVER_WRITE_KEY_CONST_SIZE 16#define TLS_MD_SERVER_WRITE_KEY_CONST "server write key"#define TLS_MD_CLIENT_WRITE_KEY_CONST_SIZE 16#define TLS_MD_CLIENT_WRITE_KEY_CONST "client write key"#define TLS_MD_KEY_EXPANSION_CONST_SIZE 13#define TLS_MD_KEY_EXPANSION_CONST "key expansion"#define TLS_MD_SERVER_FINISH_CONST_SIZE 15#define TLS_MD_SERVER_FINISH_CONST "server finished"#define TLS_MD_CLIENT_FINISH_CONST_SIZE 15#define TLS_MD_CLIENT_FINISH_CONST "client finished"#define TLS_MD_MAX_CONST_SIZE 22#define TLS1_FINISH_MAC_LENGTH 12#define TLS_CT_NUMBER 10#define TLS_CT_GOST12_512_SIGN 239#define TLS_CT_GOST12_SIGN 238#define TLS_CT_GOST01_SIGN 22#define TLS_CT_ECDSA_FIXED_ECDH 66#define TLS_CT_RSA_FIXED_ECDH 65#define TLS_CT_ECDSA_SIGN 64#define TLS_CT_DSS_FIXED_DH 4#define TLS_CT_RSA_FIXED_DH 3#define TLS_CT_DSS_SIGN 2#define TLS_CT_RSA_SIGN 1#define TLS1_TXT_RSA_PSK_WITH_ARIA_256_GCM_SHA384 "RSA-PSK-ARIA256-GCM-SHA384"#define TLS1_TXT_RSA_PSK_WITH_ARIA_128_GCM_SHA256 "RSA-PSK-ARIA128-GCM-SHA256"#define TLS1_TXT_DHE_PSK_WITH_ARIA_256_GCM_SHA384 "DHE-PSK-ARIA256-GCM-SHA384"#define TLS1_TXT_DHE_PSK_WITH_ARIA_128_GCM_SHA256 "DHE-PSK-ARIA128-GCM-SHA256"#define TLS1_TXT_PSK_WITH_ARIA_256_GCM_SHA384 "PSK-ARIA256-GCM-SHA384"#define TLS1_TXT_PSK_WITH_ARIA_128_GCM_SHA256 "PSK-ARIA128-GCM-SHA256"#define TLS1_TXT_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 "ECDH-ARIA256-GCM-SHA384"#define TLS1_TXT_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 "ECDH-ARIA128-GCM-SHA256"#define TLS1_TXT_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 "ECDHE-ARIA256-GCM-SHA384"#define TLS1_TXT_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 "ECDHE-ARIA128-GCM-SHA256"#define TLS1_TXT_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 "ECDH-ECDSA-ARIA256-GCM-SHA384"#define TLS1_TXT_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 "ECDH-ECDSA-ARIA128-GCM-SHA256"#define TLS1_TXT_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 "ECDHE-ECDSA-ARIA256-GCM-SHA384"#define TLS1_TXT_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 "ECDHE-ECDSA-ARIA128-GCM-SHA256"#define TLS1_TXT_DH_anon_WITH_ARIA_256_GCM_SHA384 "ADH-ARIA256-GCM-SHA384"#define TLS1_TXT_DH_anon_WITH_ARIA_128_GCM_SHA256 "ADH-ARIA128-GCM-SHA256"#define TLS1_TXT_DH_DSS_WITH_ARIA_256_GCM_SHA384 "DH-DSS-ARIA256-GCM-SHA384"#define TLS1_TXT_DH_DSS_WITH_ARIA_128_GCM_SHA256 "DH-DSS-ARIA128-GCM-SHA256"#define TLS1_TXT_DHE_DSS_WITH_ARIA_256_GCM_SHA384 "DHE-DSS-ARIA256-GCM-SHA384"#define TLS1_TXT_DHE_DSS_WITH_ARIA_128_GCM_SHA256 "DHE-DSS-ARIA128-GCM-SHA256"#define TLS1_TXT_DH_RSA_WITH_ARIA_256_GCM_SHA384 "DH-RSA-ARIA256-GCM-SHA384"#define TLS1_TXT_DH_RSA_WITH_ARIA_128_GCM_SHA256 "DH-RSA-ARIA128-GCM-SHA256"#define TLS1_TXT_DHE_RSA_WITH_ARIA_256_GCM_SHA384 "DHE-RSA-ARIA256-GCM-SHA384"#define TLS1_TXT_DHE_RSA_WITH_ARIA_128_GCM_SHA256 "DHE-RSA-ARIA128-GCM-SHA256"#define TLS1_TXT_RSA_WITH_ARIA_256_GCM_SHA384 "ARIA256-GCM-SHA384"#define TLS1_TXT_RSA_WITH_ARIA_128_GCM_SHA256 "ARIA128-GCM-SHA256"#define TLS1_TXT_RSA_PSK_WITH_CHACHA20_POLY1305 "RSA-PSK-CHACHA20-POLY1305"#define TLS1_TXT_DHE_PSK_WITH_CHACHA20_POLY1305 "DHE-PSK-CHACHA20-POLY1305"#define TLS1_TXT_ECDHE_PSK_WITH_CHACHA20_POLY1305 "ECDHE-PSK-CHACHA20-POLY1305"#define TLS1_TXT_PSK_WITH_CHACHA20_POLY1305 "PSK-CHACHA20-POLY1305"#define TLS1_TXT_DHE_RSA_WITH_CHACHA20_POLY1305 "DHE-RSA-CHACHA20-POLY1305"#define TLS1_TXT_ECDHE_ECDSA_WITH_CHACHA20_POLY1305 "ECDHE-ECDSA-CHACHA20-POLY1305"#define TLS1_TXT_ECDHE_RSA_WITH_CHACHA20_POLY1305 "ECDHE-RSA-CHACHA20-POLY1305"#define TLS1_TXT_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 "ECDH-RSA-CAMELLIA256-SHA384"#define TLS1_TXT_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 "ECDH-RSA-CAMELLIA128-SHA256"#define TLS1_TXT_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 "ECDHE-RSA-CAMELLIA256-SHA384"#define TLS1_TXT_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 "ECDHE-RSA-CAMELLIA128-SHA256"#define TLS1_TXT_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 "ECDH-ECDSA-CAMELLIA256-SHA384"#define TLS1_TXT_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 "ECDH-ECDSA-CAMELLIA128-SHA256"#define TLS1_TXT_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 "ECDHE-ECDSA-CAMELLIA256-SHA384"#define TLS1_TXT_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 "ECDHE-ECDSA-CAMELLIA128-SHA256"#define TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA384 "ECDHE-PSK-NULL-SHA384"#define TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA256 "ECDHE-PSK-NULL-SHA256"#define TLS1_TXT_ECDHE_PSK_WITH_NULL_SHA "ECDHE-PSK-NULL-SHA"#define TLS1_TXT_ECDHE_PSK_WITH_AES_256_CBC_SHA384 "ECDHE-PSK-AES256-CBC-SHA384"#define TLS1_TXT_ECDHE_PSK_WITH_AES_128_CBC_SHA256 "ECDHE-PSK-AES128-CBC-SHA256"#define TLS1_TXT_ECDHE_PSK_WITH_AES_256_CBC_SHA "ECDHE-PSK-AES256-CBC-SHA"#define TLS1_TXT_ECDHE_PSK_WITH_AES_128_CBC_SHA "ECDHE-PSK-AES128-CBC-SHA"#define TLS1_TXT_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA "ECDHE-PSK-3DES-EDE-CBC-SHA"#define TLS1_TXT_ECDHE_PSK_WITH_RC4_128_SHA "ECDHE-PSK-RC4-SHA"#define TLS1_TXT_PSK_WITH_AES_256_GCM_SHA384 "PSK-AES256-GCM-SHA384"#define TLS1_TXT_PSK_WITH_AES_128_GCM_SHA256 "PSK-AES128-GCM-SHA256"#define TLS1_TXT_ECDH_RSA_WITH_AES_256_GCM_SHA384 "ECDH-RSA-AES256-GCM-SHA384"#define TLS1_TXT_ECDH_RSA_WITH_AES_128_GCM_SHA256 "ECDH-RSA-AES128-GCM-SHA256"#define TLS1_TXT_ECDHE_RSA_WITH_AES_256_GCM_SHA384 "ECDHE-RSA-AES256-GCM-SHA384"#define TLS1_TXT_ECDHE_RSA_WITH_AES_128_GCM_SHA256 "ECDHE-RSA-AES128-GCM-SHA256"#define TLS1_TXT_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 "ECDH-ECDSA-AES256-GCM-SHA384"#define TLS1_TXT_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 "ECDH-ECDSA-AES128-GCM-SHA256"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 "ECDHE-ECDSA-AES256-GCM-SHA384"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 "ECDHE-ECDSA-AES128-GCM-SHA256"#define TLS1_TXT_ECDH_RSA_WITH_AES_256_SHA384 "ECDH-RSA-AES256-SHA384"#define TLS1_TXT_ECDH_RSA_WITH_AES_128_SHA256 "ECDH-RSA-AES128-SHA256"#define TLS1_TXT_ECDHE_RSA_WITH_AES_256_SHA384 "ECDHE-RSA-AES256-SHA384"#define TLS1_TXT_ECDHE_RSA_WITH_AES_128_SHA256 "ECDHE-RSA-AES128-SHA256"#define TLS1_TXT_ECDH_ECDSA_WITH_AES_256_SHA384 "ECDH-ECDSA-AES256-SHA384"#define TLS1_TXT_ECDH_ECDSA_WITH_AES_128_SHA256 "ECDH-ECDSA-AES128-SHA256"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_SHA384 "ECDHE-ECDSA-AES256-SHA384"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_SHA256 "ECDHE-ECDSA-AES128-SHA256"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CCM_8 "ECDHE-ECDSA-AES256-CCM8"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CCM_8 "ECDHE-ECDSA-AES128-CCM8"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CCM "ECDHE-ECDSA-AES256-CCM"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CCM "ECDHE-ECDSA-AES128-CCM"#define TLS1_TXT_DHE_PSK_WITH_AES_256_CCM_8 "DHE-PSK-AES256-CCM8"#define TLS1_TXT_DHE_PSK_WITH_AES_128_CCM_8 "DHE-PSK-AES128-CCM8"#define TLS1_TXT_PSK_WITH_AES_256_CCM_8 "PSK-AES256-CCM8"#define TLS1_TXT_PSK_WITH_AES_128_CCM_8 "PSK-AES128-CCM8"#define TLS1_TXT_DHE_PSK_WITH_AES_256_CCM "DHE-PSK-AES256-CCM"#define TLS1_TXT_DHE_PSK_WITH_AES_128_CCM "DHE-PSK-AES128-CCM"#define TLS1_TXT_PSK_WITH_AES_256_CCM "PSK-AES256-CCM"#define TLS1_TXT_PSK_WITH_AES_128_CCM "PSK-AES128-CCM"#define TLS1_TXT_DHE_RSA_WITH_AES_256_CCM_8 "DHE-RSA-AES256-CCM8"#define TLS1_TXT_DHE_RSA_WITH_AES_128_CCM_8 "DHE-RSA-AES128-CCM8"#define TLS1_TXT_RSA_WITH_AES_256_CCM_8 "AES256-CCM8"#define TLS1_TXT_RSA_WITH_AES_128_CCM_8 "AES128-CCM8"#define TLS1_TXT_DHE_RSA_WITH_AES_256_CCM "DHE-RSA-AES256-CCM"#define TLS1_TXT_DHE_RSA_WITH_AES_128_CCM "DHE-RSA-AES128-CCM"#define TLS1_TXT_RSA_WITH_AES_256_CCM "AES256-CCM"#define TLS1_TXT_RSA_WITH_AES_128_CCM "AES128-CCM"#define TLS1_TXT_ADH_WITH_AES_256_GCM_SHA384 "ADH-AES256-GCM-SHA384"#define TLS1_TXT_ADH_WITH_AES_128_GCM_SHA256 "ADH-AES128-GCM-SHA256"#define TLS1_TXT_DH_DSS_WITH_AES_256_GCM_SHA384 "DH-DSS-AES256-GCM-SHA384"#define TLS1_TXT_DH_DSS_WITH_AES_128_GCM_SHA256 "DH-DSS-AES128-GCM-SHA256"#define TLS1_TXT_DHE_DSS_WITH_AES_256_GCM_SHA384 "DHE-DSS-AES256-GCM-SHA384"#define TLS1_TXT_DHE_DSS_WITH_AES_128_GCM_SHA256 "DHE-DSS-AES128-GCM-SHA256"#define TLS1_TXT_DH_RSA_WITH_AES_256_GCM_SHA384 "DH-RSA-AES256-GCM-SHA384"#define TLS1_TXT_DH_RSA_WITH_AES_128_GCM_SHA256 "DH-RSA-AES128-GCM-SHA256"#define TLS1_TXT_DHE_RSA_WITH_AES_256_GCM_SHA384 "DHE-RSA-AES256-GCM-SHA384"#define TLS1_TXT_DHE_RSA_WITH_AES_128_GCM_SHA256 "DHE-RSA-AES128-GCM-SHA256"#define TLS1_TXT_RSA_WITH_AES_256_GCM_SHA384 "AES256-GCM-SHA384"#define TLS1_TXT_RSA_WITH_AES_128_GCM_SHA256 "AES128-GCM-SHA256"#define TLS1_TXT_ADH_WITH_AES_256_SHA256 "ADH-AES256-SHA256"#define TLS1_TXT_ADH_WITH_AES_128_SHA256 "ADH-AES128-SHA256"#define TLS1_TXT_DHE_RSA_WITH_AES_256_SHA256 "DHE-RSA-AES256-SHA256"#define TLS1_TXT_DHE_DSS_WITH_AES_256_SHA256 "DHE-DSS-AES256-SHA256"#define TLS1_TXT_DH_RSA_WITH_AES_256_SHA256 "DH-RSA-AES256-SHA256"#define TLS1_TXT_DH_DSS_WITH_AES_256_SHA256 "DH-DSS-AES256-SHA256"#define TLS1_TXT_DHE_RSA_WITH_AES_128_SHA256 "DHE-RSA-AES128-SHA256"#define TLS1_TXT_DHE_DSS_WITH_AES_128_SHA256 "DHE-DSS-AES128-SHA256"#define TLS1_TXT_DH_RSA_WITH_AES_128_SHA256 "DH-RSA-AES128-SHA256"#define TLS1_TXT_DH_DSS_WITH_AES_128_SHA256 "DH-DSS-AES128-SHA256"#define TLS1_TXT_RSA_WITH_AES_256_SHA256 "AES256-SHA256"#define TLS1_TXT_RSA_WITH_AES_128_SHA256 "AES128-SHA256"#define TLS1_TXT_RSA_WITH_NULL_SHA256 "NULL-SHA256"#define TLS1_TXT_ADH_WITH_SEED_SHA "ADH-SEED-SHA"#define TLS1_TXT_DHE_RSA_WITH_SEED_SHA "DHE-RSA-SEED-SHA"#define TLS1_TXT_DHE_DSS_WITH_SEED_SHA "DHE-DSS-SEED-SHA"#define TLS1_TXT_DH_RSA_WITH_SEED_SHA "DH-RSA-SEED-SHA"#define TLS1_TXT_DH_DSS_WITH_SEED_SHA "DH-DSS-SEED-SHA"#define TLS1_TXT_RSA_WITH_SEED_SHA "SEED-SHA"#define TLS1_TXT_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 "ECDHE-PSK-CAMELLIA256-SHA384"#define TLS1_TXT_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 "ECDHE-PSK-CAMELLIA128-SHA256"#define TLS1_TXT_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 "RSA-PSK-CAMELLIA256-SHA384"#define TLS1_TXT_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 "RSA-PSK-CAMELLIA128-SHA256"#define TLS1_TXT_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 "DHE-PSK-CAMELLIA256-SHA384"#define TLS1_TXT_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 "DHE-PSK-CAMELLIA128-SHA256"#define TLS1_TXT_PSK_WITH_CAMELLIA_256_CBC_SHA384 "PSK-CAMELLIA256-SHA384"#define TLS1_TXT_PSK_WITH_CAMELLIA_128_CBC_SHA256 "PSK-CAMELLIA128-SHA256"#define TLS1_TXT_ADH_WITH_CAMELLIA_256_CBC_SHA256 "ADH-CAMELLIA256-SHA256"#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 "DHE-RSA-CAMELLIA256-SHA256"#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 "DHE-DSS-CAMELLIA256-SHA256"#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 "DH-RSA-CAMELLIA256-SHA256"#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 "DH-DSS-CAMELLIA256-SHA256"#define TLS1_TXT_RSA_WITH_CAMELLIA_256_CBC_SHA256 "CAMELLIA256-SHA256"#define TLS1_TXT_ADH_WITH_CAMELLIA_128_CBC_SHA256 "ADH-CAMELLIA128-SHA256"#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 "DHE-RSA-CAMELLIA128-SHA256"#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 "DHE-DSS-CAMELLIA128-SHA256"#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 "DH-RSA-CAMELLIA128-SHA256"#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 "DH-DSS-CAMELLIA128-SHA256"#define TLS1_TXT_RSA_WITH_CAMELLIA_128_CBC_SHA256 "CAMELLIA128-SHA256"#define TLS1_TXT_ADH_WITH_CAMELLIA_256_CBC_SHA "ADH-CAMELLIA256-SHA"#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA "DHE-RSA-CAMELLIA256-SHA"#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA "DHE-DSS-CAMELLIA256-SHA"#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_256_CBC_SHA "DH-RSA-CAMELLIA256-SHA"#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_256_CBC_SHA "DH-DSS-CAMELLIA256-SHA"#define TLS1_TXT_RSA_WITH_CAMELLIA_256_CBC_SHA "CAMELLIA256-SHA"#define TLS1_TXT_ADH_WITH_CAMELLIA_128_CBC_SHA "ADH-CAMELLIA128-SHA"#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA "DHE-RSA-CAMELLIA128-SHA"#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA "DHE-DSS-CAMELLIA128-SHA"#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_128_CBC_SHA "DH-RSA-CAMELLIA128-SHA"#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_128_CBC_SHA "DH-DSS-CAMELLIA128-SHA"#define TLS1_TXT_RSA_WITH_CAMELLIA_128_CBC_SHA "CAMELLIA128-SHA"#define TLS1_TXT_SRP_SHA_DSS_WITH_AES_256_CBC_SHA "SRP-DSS-AES-256-CBC-SHA"#define TLS1_TXT_SRP_SHA_RSA_WITH_AES_256_CBC_SHA "SRP-RSA-AES-256-CBC-SHA"#define TLS1_TXT_SRP_SHA_WITH_AES_256_CBC_SHA "SRP-AES-256-CBC-SHA"#define TLS1_TXT_SRP_SHA_DSS_WITH_AES_128_CBC_SHA "SRP-DSS-AES-128-CBC-SHA"#define TLS1_TXT_SRP_SHA_RSA_WITH_AES_128_CBC_SHA "SRP-RSA-AES-128-CBC-SHA"#define TLS1_TXT_SRP_SHA_WITH_AES_128_CBC_SHA "SRP-AES-128-CBC-SHA"#define TLS1_TXT_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA "SRP-DSS-3DES-EDE-CBC-SHA"#define TLS1_TXT_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA "SRP-RSA-3DES-EDE-CBC-SHA"#define TLS1_TXT_SRP_SHA_WITH_3DES_EDE_CBC_SHA "SRP-3DES-EDE-CBC-SHA"#define TLS1_TXT_RSA_PSK_WITH_NULL_SHA384 "RSA-PSK-NULL-SHA384"#define TLS1_TXT_RSA_PSK_WITH_NULL_SHA256 "RSA-PSK-NULL-SHA256"#define TLS1_TXT_RSA_PSK_WITH_AES_256_CBC_SHA384 "RSA-PSK-AES256-CBC-SHA384"#define TLS1_TXT_RSA_PSK_WITH_AES_128_CBC_SHA256 "RSA-PSK-AES128-CBC-SHA256"#define TLS1_TXT_DHE_PSK_WITH_NULL_SHA384 "DHE-PSK-NULL-SHA384"#define TLS1_TXT_DHE_PSK_WITH_NULL_SHA256 "DHE-PSK-NULL-SHA256"#define TLS1_TXT_DHE_PSK_WITH_AES_256_CBC_SHA384 "DHE-PSK-AES256-CBC-SHA384"#define TLS1_TXT_DHE_PSK_WITH_AES_128_CBC_SHA256 "DHE-PSK-AES128-CBC-SHA256"#define TLS1_TXT_PSK_WITH_NULL_SHA384 "PSK-NULL-SHA384"#define TLS1_TXT_PSK_WITH_NULL_SHA256 "PSK-NULL-SHA256"#define TLS1_TXT_PSK_WITH_AES_256_CBC_SHA384 "PSK-AES256-CBC-SHA384"#define TLS1_TXT_PSK_WITH_AES_128_CBC_SHA256 "PSK-AES128-CBC-SHA256"#define TLS1_TXT_RSA_PSK_WITH_AES_256_GCM_SHA384 "RSA-PSK-AES256-GCM-SHA384"#define TLS1_TXT_RSA_PSK_WITH_AES_128_GCM_SHA256 "RSA-PSK-AES128-GCM-SHA256"#define TLS1_TXT_DHE_PSK_WITH_AES_256_GCM_SHA384 "DHE-PSK-AES256-GCM-SHA384"#define TLS1_TXT_DHE_PSK_WITH_AES_128_GCM_SHA256 "DHE-PSK-AES128-GCM-SHA256"#define TLS1_TXT_RSA_PSK_WITH_AES_256_CBC_SHA "RSA-PSK-AES256-CBC-SHA"#define TLS1_TXT_RSA_PSK_WITH_AES_128_CBC_SHA "RSA-PSK-AES128-CBC-SHA"#define TLS1_TXT_RSA_PSK_WITH_3DES_EDE_CBC_SHA "RSA-PSK-3DES-EDE-CBC-SHA"#define TLS1_TXT_RSA_PSK_WITH_RC4_128_SHA "RSA-PSK-RC4-SHA"#define TLS1_TXT_DHE_PSK_WITH_AES_256_CBC_SHA "DHE-PSK-AES256-CBC-SHA"#define TLS1_TXT_DHE_PSK_WITH_AES_128_CBC_SHA "DHE-PSK-AES128-CBC-SHA"#define TLS1_TXT_DHE_PSK_WITH_3DES_EDE_CBC_SHA "DHE-PSK-3DES-EDE-CBC-SHA"#define TLS1_TXT_DHE_PSK_WITH_RC4_128_SHA "DHE-PSK-RC4-SHA"#define TLS1_TXT_PSK_WITH_AES_256_CBC_SHA "PSK-AES256-CBC-SHA"#define TLS1_TXT_PSK_WITH_AES_128_CBC_SHA "PSK-AES128-CBC-SHA"#define TLS1_TXT_PSK_WITH_3DES_EDE_CBC_SHA "PSK-3DES-EDE-CBC-SHA"#define TLS1_TXT_PSK_WITH_RC4_128_SHA "PSK-RC4-SHA"#define TLS1_TXT_ECDH_anon_WITH_AES_256_CBC_SHA "AECDH-AES256-SHA"#define TLS1_TXT_ECDH_anon_WITH_AES_128_CBC_SHA "AECDH-AES128-SHA"#define TLS1_TXT_ECDH_anon_WITH_DES_192_CBC3_SHA "AECDH-DES-CBC3-SHA"#define TLS1_TXT_ECDH_anon_WITH_RC4_128_SHA "AECDH-RC4-SHA"#define TLS1_TXT_ECDH_anon_WITH_NULL_SHA "AECDH-NULL-SHA"#define TLS1_TXT_ECDHE_RSA_WITH_AES_256_CBC_SHA "ECDHE-RSA-AES256-SHA"#define TLS1_TXT_ECDHE_RSA_WITH_AES_128_CBC_SHA "ECDHE-RSA-AES128-SHA"#define TLS1_TXT_ECDHE_RSA_WITH_DES_192_CBC3_SHA "ECDHE-RSA-DES-CBC3-SHA"#define TLS1_TXT_ECDHE_RSA_WITH_RC4_128_SHA "ECDHE-RSA-RC4-SHA"#define TLS1_TXT_ECDHE_RSA_WITH_NULL_SHA "ECDHE-RSA-NULL-SHA"#define TLS1_TXT_ECDH_RSA_WITH_AES_256_CBC_SHA "ECDH-RSA-AES256-SHA"#define TLS1_TXT_ECDH_RSA_WITH_AES_128_CBC_SHA "ECDH-RSA-AES128-SHA"#define TLS1_TXT_ECDH_RSA_WITH_DES_192_CBC3_SHA "ECDH-RSA-DES-CBC3-SHA"#define TLS1_TXT_ECDH_RSA_WITH_RC4_128_SHA "ECDH-RSA-RC4-SHA"#define TLS1_TXT_ECDH_RSA_WITH_NULL_SHA "ECDH-RSA-NULL-SHA"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CBC_SHA "ECDHE-ECDSA-AES256-SHA"#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CBC_SHA "ECDHE-ECDSA-AES128-SHA"#define TLS1_TXT_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA "ECDHE-ECDSA-DES-CBC3-SHA"#define TLS1_TXT_ECDHE_ECDSA_WITH_RC4_128_SHA "ECDHE-ECDSA-RC4-SHA"#define TLS1_TXT_ECDHE_ECDSA_WITH_NULL_SHA "ECDHE-ECDSA-NULL-SHA"#define TLS1_TXT_ECDH_ECDSA_WITH_AES_256_CBC_SHA "ECDH-ECDSA-AES256-SHA"#define TLS1_TXT_ECDH_ECDSA_WITH_AES_128_CBC_SHA "ECDH-ECDSA-AES128-SHA"#define TLS1_TXT_ECDH_ECDSA_WITH_DES_192_CBC3_SHA "ECDH-ECDSA-DES-CBC3-SHA"#define TLS1_TXT_ECDH_ECDSA_WITH_RC4_128_SHA "ECDH-ECDSA-RC4-SHA"#define TLS1_TXT_ECDH_ECDSA_WITH_NULL_SHA "ECDH-ECDSA-NULL-SHA"#define TLS1_TXT_ADH_WITH_AES_256_SHA "ADH-AES256-SHA"#define TLS1_TXT_DHE_RSA_WITH_AES_256_SHA "DHE-RSA-AES256-SHA"#define TLS1_TXT_DHE_DSS_WITH_AES_256_SHA "DHE-DSS-AES256-SHA"#define TLS1_TXT_DH_RSA_WITH_AES_256_SHA "DH-RSA-AES256-SHA"#define TLS1_TXT_DH_DSS_WITH_AES_256_SHA "DH-DSS-AES256-SHA"#define TLS1_TXT_RSA_WITH_AES_256_SHA "AES256-SHA"#define TLS1_TXT_ADH_WITH_AES_128_SHA "ADH-AES128-SHA"#define TLS1_TXT_DHE_RSA_WITH_AES_128_SHA "DHE-RSA-AES128-SHA"#define TLS1_TXT_DHE_DSS_WITH_AES_128_SHA "DHE-DSS-AES128-SHA"#define TLS1_TXT_DH_RSA_WITH_AES_128_SHA "DH-RSA-AES128-SHA"#define TLS1_TXT_DH_DSS_WITH_AES_128_SHA "DH-DSS-AES128-SHA"#define TLS1_TXT_RSA_WITH_AES_128_SHA "AES128-SHA"#define TLS1_TXT_RSA_PSK_WITH_NULL_SHA "RSA-PSK-NULL-SHA"#define TLS1_TXT_DHE_PSK_WITH_NULL_SHA "DHE-PSK-NULL-SHA"#define TLS1_TXT_PSK_WITH_NULL_SHA "PSK-NULL-SHA"#define TLS1_TXT_DHE_DSS_WITH_RC4_128_SHA "DHE-DSS-RC4-SHA"#define TLS1_RFC_RSA_PSK_WITH_ARIA_256_GCM_SHA384 "TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_RSA_PSK_WITH_ARIA_128_GCM_SHA256 "TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_DHE_PSK_WITH_ARIA_256_GCM_SHA384 "TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_DHE_PSK_WITH_ARIA_128_GCM_SHA256 "TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_PSK_WITH_ARIA_256_GCM_SHA384 "TLS_PSK_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_PSK_WITH_ARIA_128_GCM_SHA256 "TLS_PSK_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 "TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 "TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 "TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 "TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_DH_anon_WITH_ARIA_256_GCM_SHA384 "TLS_DH_anon_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_DH_anon_WITH_ARIA_128_GCM_SHA256 "TLS_DH_anon_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_DH_DSS_WITH_ARIA_256_GCM_SHA384 "TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_DH_DSS_WITH_ARIA_128_GCM_SHA256 "TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_DHE_DSS_WITH_ARIA_256_GCM_SHA384 "TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_DHE_DSS_WITH_ARIA_128_GCM_SHA256 "TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_DH_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_DH_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_DHE_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_DHE_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_RSA_WITH_ARIA_256_GCM_SHA384 "TLS_RSA_WITH_ARIA_256_GCM_SHA384"#define TLS1_RFC_RSA_WITH_ARIA_128_GCM_SHA256 "TLS_RSA_WITH_ARIA_128_GCM_SHA256"#define TLS1_RFC_DHE_PSK_WITH_RC4_128_SHA "TLS_DHE_PSK_WITH_RC4_128_SHA"#define TLS1_RFC_RSA_PSK_WITH_RC4_128_SHA "TLS_RSA_PSK_WITH_RC4_128_SHA"#define TLS1_RFC_PSK_WITH_RC4_128_SHA "TLS_PSK_WITH_RC4_128_SHA"#define TLS1_RFC_ECDHE_RSA_WITH_RC4_128_SHA "TLS_ECDHE_RSA_WITH_RC4_128_SHA"#define TLS1_RFC_ECDHE_ECDSA_WITH_RC4_128_SHA "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA"#define TLS1_RFC_ECDH_anon_WITH_RC4_128_SHA "TLS_ECDH_anon_WITH_RC4_128_SHA"#define TLS1_RFC_ECDHE_PSK_WITH_RC4_128_SHA "TLS_ECDHE_PSK_WITH_RC4_128_SHA"#define TLS1_RFC_ADH_WITH_SEED_SHA "TLS_DH_anon_WITH_SEED_CBC_SHA"#define TLS1_RFC_DHE_RSA_WITH_SEED_SHA "TLS_DHE_RSA_WITH_SEED_CBC_SHA"#define TLS1_RFC_DHE_DSS_WITH_SEED_SHA "TLS_DHE_DSS_WITH_SEED_CBC_SHA"#define TLS1_RFC_RSA_WITH_SEED_SHA "TLS_RSA_WITH_SEED_CBC_SHA"#define TLS1_RFC_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 "TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"#define TLS1_RFC_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 "TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 "TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384"#define TLS1_RFC_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 "TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 "TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"#define TLS1_RFC_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 "TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_PSK_WITH_CAMELLIA_256_CBC_SHA384 "TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384"#define TLS1_RFC_PSK_WITH_CAMELLIA_128_CBC_SHA256 "TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 "TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384"#define TLS1_RFC_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 "TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 "TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384"#define TLS1_RFC_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 "TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_ADH_WITH_CAMELLIA_128_CBC_SHA "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA"#define TLS1_RFC_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA"#define TLS1_RFC_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA"#define TLS1_RFC_RSA_WITH_CAMELLIA_128_CBC_SHA "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA"#define TLS1_RFC_ADH_WITH_CAMELLIA_256_CBC_SHA "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA"#define TLS1_RFC_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA"#define TLS1_RFC_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA"#define TLS1_RFC_RSA_WITH_CAMELLIA_256_CBC_SHA "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA"#define TLS1_RFC_ADH_WITH_CAMELLIA_256_CBC_SHA256 "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256"#define TLS1_RFC_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256"#define TLS1_RFC_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256"#define TLS1_RFC_RSA_WITH_CAMELLIA_256_CBC_SHA256 "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256"#define TLS1_RFC_ADH_WITH_CAMELLIA_128_CBC_SHA256 "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_RSA_WITH_CAMELLIA_128_CBC_SHA256 "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256"#define TLS1_RFC_RSA_PSK_WITH_CHACHA20_POLY1305 "TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256"#define TLS1_RFC_DHE_PSK_WITH_CHACHA20_POLY1305 "TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256"#define TLS1_RFC_ECDHE_PSK_WITH_CHACHA20_POLY1305 "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256"#define TLS1_RFC_PSK_WITH_CHACHA20_POLY1305 "TLS_PSK_WITH_CHACHA20_POLY1305_SHA256"#define TLS1_RFC_ECDHE_ECDSA_WITH_CHACHA20_POLY1305 "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"#define TLS1_RFC_ECDHE_RSA_WITH_CHACHA20_POLY1305 "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"#define TLS1_RFC_DHE_RSA_WITH_CHACHA20_POLY1305 "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256"#define TLS1_RFC_SRP_SHA_DSS_WITH_AES_256_CBC_SHA "TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA"#define TLS1_RFC_SRP_SHA_RSA_WITH_AES_256_CBC_SHA "TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA"#define TLS1_RFC_SRP_SHA_WITH_AES_256_CBC_SHA "TLS_SRP_SHA_WITH_AES_256_CBC_SHA"#define TLS1_RFC_SRP_SHA_DSS_WITH_AES_128_CBC_SHA "TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA"#define TLS1_RFC_SRP_SHA_RSA_WITH_AES_128_CBC_SHA "TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA"#define TLS1_RFC_SRP_SHA_WITH_AES_128_CBC_SHA "TLS_SRP_SHA_WITH_AES_128_CBC_SHA"#define TLS1_RFC_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA "TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA "TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_SRP_SHA_WITH_3DES_EDE_CBC_SHA "TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA384 "TLS_ECDHE_PSK_WITH_NULL_SHA384"#define TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA256 "TLS_ECDHE_PSK_WITH_NULL_SHA256"#define TLS1_RFC_ECDHE_PSK_WITH_NULL_SHA "TLS_ECDHE_PSK_WITH_NULL_SHA"#define TLS1_RFC_ECDHE_PSK_WITH_AES_256_CBC_SHA384 "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384"#define TLS1_RFC_ECDHE_PSK_WITH_AES_128_CBC_SHA256 "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_ECDHE_PSK_WITH_AES_256_CBC_SHA "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA"#define TLS1_RFC_ECDHE_PSK_WITH_AES_128_CBC_SHA "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA"#define TLS1_RFC_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA "TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_RSA_PSK_WITH_NULL_SHA384 "TLS_RSA_PSK_WITH_NULL_SHA384"#define TLS1_RFC_RSA_PSK_WITH_NULL_SHA256 "TLS_RSA_PSK_WITH_NULL_SHA256"#define TLS1_RFC_RSA_PSK_WITH_AES_256_CBC_SHA384 "TLS_RSA_PSK_WITH_AES_256_CBC_SHA384"#define TLS1_RFC_RSA_PSK_WITH_AES_128_CBC_SHA256 "TLS_RSA_PSK_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_DHE_PSK_WITH_NULL_SHA384 "TLS_DHE_PSK_WITH_NULL_SHA384"#define TLS1_RFC_DHE_PSK_WITH_NULL_SHA256 "TLS_DHE_PSK_WITH_NULL_SHA256"#define TLS1_RFC_DHE_PSK_WITH_AES_256_CBC_SHA384 "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384"#define TLS1_RFC_DHE_PSK_WITH_AES_128_CBC_SHA256 "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_PSK_WITH_NULL_SHA384 "TLS_PSK_WITH_NULL_SHA384"#define TLS1_RFC_PSK_WITH_NULL_SHA256 "TLS_PSK_WITH_NULL_SHA256"#define TLS1_RFC_PSK_WITH_AES_256_CBC_SHA384 "TLS_PSK_WITH_AES_256_CBC_SHA384"#define TLS1_RFC_PSK_WITH_AES_128_CBC_SHA256 "TLS_PSK_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_RSA_PSK_WITH_AES_256_GCM_SHA384 "TLS_RSA_PSK_WITH_AES_256_GCM_SHA384"#define TLS1_RFC_RSA_PSK_WITH_AES_128_GCM_SHA256 "TLS_RSA_PSK_WITH_AES_128_GCM_SHA256"#define TLS1_RFC_DHE_PSK_WITH_AES_256_GCM_SHA384 "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384"#define TLS1_RFC_DHE_PSK_WITH_AES_128_GCM_SHA256 "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256"#define TLS1_RFC_PSK_WITH_AES_256_GCM_SHA384 "TLS_PSK_WITH_AES_256_GCM_SHA384"#define TLS1_RFC_PSK_WITH_AES_128_GCM_SHA256 "TLS_PSK_WITH_AES_128_GCM_SHA256"#define TLS1_RFC_RSA_PSK_WITH_AES_256_CBC_SHA "TLS_RSA_PSK_WITH_AES_256_CBC_SHA"#define TLS1_RFC_RSA_PSK_WITH_AES_128_CBC_SHA "TLS_RSA_PSK_WITH_AES_128_CBC_SHA"#define TLS1_RFC_RSA_PSK_WITH_3DES_EDE_CBC_SHA "TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_DHE_PSK_WITH_AES_256_CBC_SHA "TLS_DHE_PSK_WITH_AES_256_CBC_SHA"#define TLS1_RFC_DHE_PSK_WITH_AES_128_CBC_SHA "TLS_DHE_PSK_WITH_AES_128_CBC_SHA"#define TLS1_RFC_DHE_PSK_WITH_3DES_EDE_CBC_SHA "TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_PSK_WITH_AES_256_CBC_SHA "TLS_PSK_WITH_AES_256_CBC_SHA"#define TLS1_RFC_PSK_WITH_AES_128_CBC_SHA "TLS_PSK_WITH_AES_128_CBC_SHA"#define TLS1_RFC_PSK_WITH_3DES_EDE_CBC_SHA "TLS_PSK_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_RSA_PSK_WITH_NULL_SHA "TLS_RSA_PSK_WITH_NULL_SHA"#define TLS1_RFC_DHE_PSK_WITH_NULL_SHA "TLS_DHE_PSK_WITH_NULL_SHA"#define TLS1_RFC_PSK_WITH_NULL_SHA "TLS_PSK_WITH_NULL_SHA"#define TLS1_RFC_ECDHE_RSA_WITH_AES_256_GCM_SHA384 "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"#define TLS1_RFC_ECDHE_RSA_WITH_AES_128_GCM_SHA256 "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"#define TLS1_RFC_ECDHE_RSA_WITH_AES_256_SHA384 "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"#define TLS1_RFC_ECDHE_RSA_WITH_AES_128_SHA256 "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_SHA384 "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_SHA256 "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_ECDH_anon_WITH_AES_256_CBC_SHA "TLS_ECDH_anon_WITH_AES_256_CBC_SHA"#define TLS1_RFC_ECDH_anon_WITH_AES_128_CBC_SHA "TLS_ECDH_anon_WITH_AES_128_CBC_SHA"#define TLS1_RFC_ECDH_anon_WITH_DES_192_CBC3_SHA "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_ECDH_anon_WITH_NULL_SHA "TLS_ECDH_anon_WITH_NULL_SHA"#define TLS1_RFC_ECDHE_RSA_WITH_AES_256_CBC_SHA "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"#define TLS1_RFC_ECDHE_RSA_WITH_AES_128_CBC_SHA "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"#define TLS1_RFC_ECDHE_RSA_WITH_DES_192_CBC3_SHA "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_ECDHE_RSA_WITH_NULL_SHA "TLS_ECDHE_RSA_WITH_NULL_SHA"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CBC_SHA "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CBC_SHA "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"#define TLS1_RFC_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA"#define TLS1_RFC_ECDHE_ECDSA_WITH_NULL_SHA "TLS_ECDHE_ECDSA_WITH_NULL_SHA"#define TLS1_3_RFC_AES_128_CCM_8_SHA256 "TLS_AES_128_CCM_8_SHA256"#define TLS1_3_RFC_AES_128_CCM_SHA256 "TLS_AES_128_CCM_SHA256"#define TLS1_3_RFC_CHACHA20_POLY1305_SHA256 "TLS_CHACHA20_POLY1305_SHA256"#define TLS1_3_RFC_AES_256_GCM_SHA384 "TLS_AES_256_GCM_SHA384"#define TLS1_3_RFC_AES_128_GCM_SHA256 "TLS_AES_128_GCM_SHA256"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CCM_8 "TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CCM_8 "TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_256_CCM "TLS_ECDHE_ECDSA_WITH_AES_256_CCM"#define TLS1_RFC_ECDHE_ECDSA_WITH_AES_128_CCM "TLS_ECDHE_ECDSA_WITH_AES_128_CCM"#define TLS1_RFC_DHE_PSK_WITH_AES_256_CCM_8 "TLS_PSK_DHE_WITH_AES_256_CCM_8"#define TLS1_RFC_DHE_PSK_WITH_AES_128_CCM_8 "TLS_PSK_DHE_WITH_AES_128_CCM_8"#define TLS1_RFC_PSK_WITH_AES_256_CCM_8 "TLS_PSK_WITH_AES_256_CCM_8"#define TLS1_RFC_PSK_WITH_AES_128_CCM_8 "TLS_PSK_WITH_AES_128_CCM_8"#define TLS1_RFC_DHE_PSK_WITH_AES_256_CCM "TLS_DHE_PSK_WITH_AES_256_CCM"#define TLS1_RFC_DHE_PSK_WITH_AES_128_CCM "TLS_DHE_PSK_WITH_AES_128_CCM"#define TLS1_RFC_PSK_WITH_AES_256_CCM "TLS_PSK_WITH_AES_256_CCM"#define TLS1_RFC_PSK_WITH_AES_128_CCM "TLS_PSK_WITH_AES_128_CCM"#define TLS1_RFC_DHE_RSA_WITH_AES_256_CCM_8 "TLS_DHE_RSA_WITH_AES_256_CCM_8"#define TLS1_RFC_DHE_RSA_WITH_AES_128_CCM_8 "TLS_DHE_RSA_WITH_AES_128_CCM_8"#define TLS1_RFC_RSA_WITH_AES_256_CCM_8 "TLS_RSA_WITH_AES_256_CCM_8"#define TLS1_RFC_RSA_WITH_AES_128_CCM_8 "TLS_RSA_WITH_AES_128_CCM_8"#define TLS1_RFC_DHE_RSA_WITH_AES_256_CCM "TLS_DHE_RSA_WITH_AES_256_CCM"#define TLS1_RFC_DHE_RSA_WITH_AES_128_CCM "TLS_DHE_RSA_WITH_AES_128_CCM"#define TLS1_RFC_RSA_WITH_AES_256_CCM "TLS_RSA_WITH_AES_256_CCM"#define TLS1_RFC_RSA_WITH_AES_128_CCM "TLS_RSA_WITH_AES_128_CCM"#define TLS1_RFC_ADH_WITH_AES_256_GCM_SHA384 "TLS_DH_anon_WITH_AES_256_GCM_SHA384"#define TLS1_RFC_ADH_WITH_AES_128_GCM_SHA256 "TLS_DH_anon_WITH_AES_128_GCM_SHA256"#define TLS1_RFC_DHE_DSS_WITH_AES_256_GCM_SHA384 "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384"#define TLS1_RFC_DHE_DSS_WITH_AES_128_GCM_SHA256 "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"#define TLS1_RFC_DHE_RSA_WITH_AES_256_GCM_SHA384 "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"#define TLS1_RFC_DHE_RSA_WITH_AES_128_GCM_SHA256 "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"#define TLS1_RFC_RSA_WITH_AES_256_GCM_SHA384 "TLS_RSA_WITH_AES_256_GCM_SHA384"#define TLS1_RFC_RSA_WITH_AES_128_GCM_SHA256 "TLS_RSA_WITH_AES_128_GCM_SHA256"#define TLS1_RFC_ADH_WITH_AES_256_SHA256 "TLS_DH_anon_WITH_AES_256_CBC_SHA256"#define TLS1_RFC_ADH_WITH_AES_128_SHA256 "TLS_DH_anon_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_DHE_RSA_WITH_AES_256_SHA256 "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256"#define TLS1_RFC_DHE_DSS_WITH_AES_256_SHA256 "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"#define TLS1_RFC_DHE_RSA_WITH_AES_128_SHA256 "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_DHE_DSS_WITH_AES_128_SHA256 "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_RSA_WITH_AES_256_SHA256 "TLS_RSA_WITH_AES_256_CBC_SHA256"#define TLS1_RFC_RSA_WITH_AES_128_SHA256 "TLS_RSA_WITH_AES_128_CBC_SHA256"#define TLS1_RFC_RSA_WITH_NULL_SHA256 "TLS_RSA_WITH_NULL_SHA256"#define TLS1_RFC_ADH_WITH_AES_256_SHA "TLS_DH_anon_WITH_AES_256_CBC_SHA"#define TLS1_RFC_DHE_RSA_WITH_AES_256_SHA "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"#define TLS1_RFC_DHE_DSS_WITH_AES_256_SHA "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"#define TLS1_RFC_RSA_WITH_AES_256_SHA "TLS_RSA_WITH_AES_256_CBC_SHA"#define TLS1_RFC_ADH_WITH_AES_128_SHA "TLS_DH_anon_WITH_AES_128_CBC_SHA"#define TLS1_RFC_DHE_RSA_WITH_AES_128_SHA "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"#define TLS1_RFC_DHE_DSS_WITH_AES_128_SHA "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"#define TLS1_RFC_RSA_WITH_AES_128_SHA "TLS_RSA_WITH_AES_128_CBC_SHA"#define TLS1_CK_RSA_PSK_WITH_ARIA_256_GCM_SHA384 0x0300C06F#define TLS1_CK_RSA_PSK_WITH_ARIA_128_GCM_SHA256 0x0300C06E#define TLS1_CK_DHE_PSK_WITH_ARIA_256_GCM_SHA384 0x0300C06D#define TLS1_CK_DHE_PSK_WITH_ARIA_128_GCM_SHA256 0x0300C06C#define TLS1_CK_PSK_WITH_ARIA_256_GCM_SHA384 0x0300C06B#define TLS1_CK_PSK_WITH_ARIA_128_GCM_SHA256 0x0300C06A#define TLS1_CK_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C063#define TLS1_CK_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C062#define TLS1_CK_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C061#define TLS1_CK_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C060#define TLS1_CK_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 0x0300C05F#define TLS1_CK_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 0x0300C05E#define TLS1_CK_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 0x0300C05D#define TLS1_CK_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 0x0300C05C#define TLS1_CK_DH_anon_WITH_ARIA_256_GCM_SHA384 0x0300C05B#define TLS1_CK_DH_anon_WITH_ARIA_128_GCM_SHA256 0x0300C05A#define TLS1_CK_DH_DSS_WITH_ARIA_256_GCM_SHA384 0x0300C059#define TLS1_CK_DH_DSS_WITH_ARIA_128_GCM_SHA256 0x0300C058#define TLS1_CK_DHE_DSS_WITH_ARIA_256_GCM_SHA384 0x0300C057#define TLS1_CK_DHE_DSS_WITH_ARIA_128_GCM_SHA256 0x0300C056#define TLS1_CK_DH_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C055#define TLS1_CK_DH_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C054#define TLS1_CK_DHE_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C053#define TLS1_CK_DHE_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C052#define TLS1_CK_RSA_WITH_ARIA_256_GCM_SHA384 0x0300C051#define TLS1_CK_RSA_WITH_ARIA_128_GCM_SHA256 0x0300C050#define TLS1_3_CK_AES_128_CCM_8_SHA256 0x03001305#define TLS1_3_CK_AES_128_CCM_SHA256 0x03001304#define TLS1_3_CK_CHACHA20_POLY1305_SHA256 0x03001303#define TLS1_3_CK_AES_256_GCM_SHA384 0x03001302#define TLS1_3_CK_AES_128_GCM_SHA256 0x03001301#define TLS1_CK_RSA_PSK_WITH_CHACHA20_POLY1305 0x0300CCAE#define TLS1_CK_DHE_PSK_WITH_CHACHA20_POLY1305 0x0300CCAD#define TLS1_CK_ECDHE_PSK_WITH_CHACHA20_POLY1305 0x0300CCAC#define TLS1_CK_PSK_WITH_CHACHA20_POLY1305 0x0300CCAB#define TLS1_CK_DHE_RSA_WITH_CHACHA20_POLY1305 0x0300CCAA#define TLS1_CK_ECDHE_ECDSA_WITH_CHACHA20_POLY1305 0x0300CCA9#define TLS1_CK_ECDHE_RSA_WITH_CHACHA20_POLY1305 0x0300CCA8#define TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 0x0300C09B#define TLS1_CK_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 0x0300C09A#define TLS1_CK_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 0x0300C099#define TLS1_CK_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 0x0300C098#define TLS1_CK_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 0x0300C097#define TLS1_CK_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 0x0300C096#define TLS1_CK_PSK_WITH_CAMELLIA_256_CBC_SHA384 0x0300C095#define TLS1_CK_PSK_WITH_CAMELLIA_128_CBC_SHA256 0x0300C094#define TLS1_CK_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 0x0300C079#define TLS1_CK_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x0300C078#define TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 0x0300C077#define TLS1_CK_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x0300C076#define TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 0x0300C075#define TLS1_CK_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 0x0300C074#define TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 0x0300C073#define TLS1_CK_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 0x0300C072#define TLS1_CK_ECDHE_PSK_WITH_NULL_SHA384 0x0300C03B#define TLS1_CK_ECDHE_PSK_WITH_NULL_SHA256 0x0300C03A#define TLS1_CK_ECDHE_PSK_WITH_NULL_SHA 0x0300C039#define TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA384 0x0300C038#define TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA256 0x0300C037#define TLS1_CK_ECDHE_PSK_WITH_AES_256_CBC_SHA 0x0300C036#define TLS1_CK_ECDHE_PSK_WITH_AES_128_CBC_SHA 0x0300C035#define TLS1_CK_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA 0x0300C034#define TLS1_CK_ECDHE_PSK_WITH_RC4_128_SHA 0x0300C033#define TLS1_CK_ECDH_RSA_WITH_AES_256_GCM_SHA384 0x0300C032#define TLS1_CK_ECDH_RSA_WITH_AES_128_GCM_SHA256 0x0300C031#define TLS1_CK_ECDHE_RSA_WITH_AES_256_GCM_SHA384 0x0300C030#define TLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256 0x0300C02F#define TLS1_CK_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 0x0300C02E#define TLS1_CK_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 0x0300C02D#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 0x0300C02C#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 0x0300C02B#define TLS1_CK_ECDH_RSA_WITH_AES_256_SHA384 0x0300C02A#define TLS1_CK_ECDH_RSA_WITH_AES_128_SHA256 0x0300C029#define TLS1_CK_ECDHE_RSA_WITH_AES_256_SHA384 0x0300C028#define TLS1_CK_ECDHE_RSA_WITH_AES_128_SHA256 0x0300C027#define TLS1_CK_ECDH_ECDSA_WITH_AES_256_SHA384 0x0300C026#define TLS1_CK_ECDH_ECDSA_WITH_AES_128_SHA256 0x0300C025#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_SHA384 0x0300C024#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_SHA256 0x0300C023#define TLS1_CK_SRP_SHA_DSS_WITH_AES_256_CBC_SHA 0x0300C022#define TLS1_CK_SRP_SHA_RSA_WITH_AES_256_CBC_SHA 0x0300C021#define TLS1_CK_SRP_SHA_WITH_AES_256_CBC_SHA 0x0300C020#define TLS1_CK_SRP_SHA_DSS_WITH_AES_128_CBC_SHA 0x0300C01F#define TLS1_CK_SRP_SHA_RSA_WITH_AES_128_CBC_SHA 0x0300C01E#define TLS1_CK_SRP_SHA_WITH_AES_128_CBC_SHA 0x0300C01D#define TLS1_CK_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA 0x0300C01C#define TLS1_CK_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA 0x0300C01B#define TLS1_CK_SRP_SHA_WITH_3DES_EDE_CBC_SHA 0x0300C01A#define TLS1_CK_ECDH_anon_WITH_AES_256_CBC_SHA 0x0300C019#define TLS1_CK_ECDH_anon_WITH_AES_128_CBC_SHA 0x0300C018#define TLS1_CK_ECDH_anon_WITH_DES_192_CBC3_SHA 0x0300C017#define TLS1_CK_ECDH_anon_WITH_RC4_128_SHA 0x0300C016#define TLS1_CK_ECDH_anon_WITH_NULL_SHA 0x0300C015#define TLS1_CK_ECDHE_RSA_WITH_AES_256_CBC_SHA 0x0300C014#define TLS1_CK_ECDHE_RSA_WITH_AES_128_CBC_SHA 0x0300C013#define TLS1_CK_ECDHE_RSA_WITH_DES_192_CBC3_SHA 0x0300C012#define TLS1_CK_ECDHE_RSA_WITH_RC4_128_SHA 0x0300C011#define TLS1_CK_ECDHE_RSA_WITH_NULL_SHA 0x0300C010#define TLS1_CK_ECDH_RSA_WITH_AES_256_CBC_SHA 0x0300C00F#define TLS1_CK_ECDH_RSA_WITH_AES_128_CBC_SHA 0x0300C00E#define TLS1_CK_ECDH_RSA_WITH_DES_192_CBC3_SHA 0x0300C00D#define TLS1_CK_ECDH_RSA_WITH_RC4_128_SHA 0x0300C00C#define TLS1_CK_ECDH_RSA_WITH_NULL_SHA 0x0300C00B#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CBC_SHA 0x0300C00A#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CBC_SHA 0x0300C009#define TLS1_CK_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA 0x0300C008#define TLS1_CK_ECDHE_ECDSA_WITH_RC4_128_SHA 0x0300C007#define TLS1_CK_ECDHE_ECDSA_WITH_NULL_SHA 0x0300C006#define TLS1_CK_ECDH_ECDSA_WITH_AES_256_CBC_SHA 0x0300C005#define TLS1_CK_ECDH_ECDSA_WITH_AES_128_CBC_SHA 0x0300C004#define TLS1_CK_ECDH_ECDSA_WITH_DES_192_CBC3_SHA 0x0300C003#define TLS1_CK_ECDH_ECDSA_WITH_RC4_128_SHA 0x0300C002#define TLS1_CK_ECDH_ECDSA_WITH_NULL_SHA 0x0300C001#define TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA256 0x030000C5#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 0x030000C4#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 0x030000C3#define TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 0x030000C2#define TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 0x030000C1#define TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA256 0x030000C0#define TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA256 0x030000BF#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x030000BE#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 0x030000BD#define TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x030000BC#define TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 0x030000BB#define TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA256 0x030000BA#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM_8 0x0300C0AF#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM_8 0x0300C0AE#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CCM 0x0300C0AD#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CCM 0x0300C0AC#define TLS1_CK_DHE_PSK_WITH_AES_256_CCM_8 0x0300C0AB#define TLS1_CK_DHE_PSK_WITH_AES_128_CCM_8 0x0300C0AA#define TLS1_CK_PSK_WITH_AES_256_CCM_8 0x0300C0A9#define TLS1_CK_PSK_WITH_AES_128_CCM_8 0x0300C0A8#define TLS1_CK_DHE_PSK_WITH_AES_256_CCM 0x0300C0A7#define TLS1_CK_DHE_PSK_WITH_AES_128_CCM 0x0300C0A6#define TLS1_CK_PSK_WITH_AES_256_CCM 0x0300C0A5#define TLS1_CK_PSK_WITH_AES_128_CCM 0x0300C0A4#define TLS1_CK_DHE_RSA_WITH_AES_256_CCM_8 0x0300C0A3#define TLS1_CK_DHE_RSA_WITH_AES_128_CCM_8 0x0300C0A2#define TLS1_CK_RSA_WITH_AES_256_CCM_8 0x0300C0A1#define TLS1_CK_RSA_WITH_AES_128_CCM_8 0x0300C0A0#define TLS1_CK_DHE_RSA_WITH_AES_256_CCM 0x0300C09F#define TLS1_CK_DHE_RSA_WITH_AES_128_CCM 0x0300C09E#define TLS1_CK_RSA_WITH_AES_256_CCM 0x0300C09D#define TLS1_CK_RSA_WITH_AES_128_CCM 0x0300C09C#define TLS1_CK_ADH_WITH_AES_256_GCM_SHA384 0x030000A7#define TLS1_CK_ADH_WITH_AES_128_GCM_SHA256 0x030000A6#define TLS1_CK_DH_DSS_WITH_AES_256_GCM_SHA384 0x030000A5#define TLS1_CK_DH_DSS_WITH_AES_128_GCM_SHA256 0x030000A4#define TLS1_CK_DHE_DSS_WITH_AES_256_GCM_SHA384 0x030000A3#define TLS1_CK_DHE_DSS_WITH_AES_128_GCM_SHA256 0x030000A2#define TLS1_CK_DH_RSA_WITH_AES_256_GCM_SHA384 0x030000A1#define TLS1_CK_DH_RSA_WITH_AES_128_GCM_SHA256 0x030000A0#define TLS1_CK_DHE_RSA_WITH_AES_256_GCM_SHA384 0x0300009F#define TLS1_CK_DHE_RSA_WITH_AES_128_GCM_SHA256 0x0300009E#define TLS1_CK_RSA_WITH_AES_256_GCM_SHA384 0x0300009D#define TLS1_CK_RSA_WITH_AES_128_GCM_SHA256 0x0300009C#define TLS1_CK_ADH_WITH_SEED_SHA 0x0300009B#define TLS1_CK_DHE_RSA_WITH_SEED_SHA 0x0300009A#define TLS1_CK_DHE_DSS_WITH_SEED_SHA 0x03000099#define TLS1_CK_DH_RSA_WITH_SEED_SHA 0x03000098#define TLS1_CK_DH_DSS_WITH_SEED_SHA 0x03000097#define TLS1_CK_RSA_WITH_SEED_SHA 0x03000096#define TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA 0x03000089#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA 0x03000088#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA 0x03000087#define TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA 0x03000086#define TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA 0x03000085#define TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA 0x03000084#define TLS1_CK_ADH_WITH_AES_256_SHA256 0x0300006D#define TLS1_CK_ADH_WITH_AES_128_SHA256 0x0300006C#define TLS1_CK_DHE_RSA_WITH_AES_256_SHA256 0x0300006B#define TLS1_CK_DHE_DSS_WITH_AES_256_SHA256 0x0300006A#define TLS1_CK_DH_RSA_WITH_AES_256_SHA256 0x03000069#define TLS1_CK_DH_DSS_WITH_AES_256_SHA256 0x03000068#define TLS1_CK_DHE_RSA_WITH_AES_128_SHA256 0x03000067#define TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA 0x03000046#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA 0x03000045#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA 0x03000044#define TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA 0x03000043#define TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA 0x03000042#define TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA 0x03000041#define TLS1_CK_DHE_DSS_WITH_AES_128_SHA256 0x03000040#define TLS1_CK_DH_RSA_WITH_AES_128_SHA256 0x0300003F#define TLS1_CK_DH_DSS_WITH_AES_128_SHA256 0x0300003E#define TLS1_CK_RSA_WITH_AES_256_SHA256 0x0300003D#define TLS1_CK_RSA_WITH_AES_128_SHA256 0x0300003C#define TLS1_CK_RSA_WITH_NULL_SHA256 0x0300003B#define TLS1_CK_ADH_WITH_AES_256_SHA 0x0300003A#define TLS1_CK_DHE_RSA_WITH_AES_256_SHA 0x03000039#define TLS1_CK_DHE_DSS_WITH_AES_256_SHA 0x03000038#define TLS1_CK_DH_RSA_WITH_AES_256_SHA 0x03000037#define TLS1_CK_DH_DSS_WITH_AES_256_SHA 0x03000036#define TLS1_CK_RSA_WITH_AES_256_SHA 0x03000035#define TLS1_CK_ADH_WITH_AES_128_SHA 0x03000034#define TLS1_CK_DHE_RSA_WITH_AES_128_SHA 0x03000033#define TLS1_CK_DHE_DSS_WITH_AES_128_SHA 0x03000032#define TLS1_CK_DH_RSA_WITH_AES_128_SHA 0x03000031#define TLS1_CK_DH_DSS_WITH_AES_128_SHA 0x03000030#define TLS1_CK_RSA_WITH_AES_128_SHA 0x0300002F#define TLS1_CK_RSA_PSK_WITH_NULL_SHA 0x0300002E#define TLS1_CK_DHE_PSK_WITH_NULL_SHA 0x0300002D#define TLS1_CK_PSK_WITH_NULL_SHA 0x0300002C#define TLS1_CK_RSA_PSK_WITH_NULL_SHA384 0x030000B9#define TLS1_CK_RSA_PSK_WITH_NULL_SHA256 0x030000B8#define TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA384 0x030000B7#define TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA256 0x030000B6#define TLS1_CK_DHE_PSK_WITH_NULL_SHA384 0x030000B5#define TLS1_CK_DHE_PSK_WITH_NULL_SHA256 0x030000B4#define TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA384 0x030000B3#define TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA256 0x030000B2#define TLS1_CK_PSK_WITH_NULL_SHA384 0x030000B1#define TLS1_CK_PSK_WITH_NULL_SHA256 0x030000B0#define TLS1_CK_PSK_WITH_AES_256_CBC_SHA384 0x030000AF#define TLS1_CK_PSK_WITH_AES_128_CBC_SHA256 0x030000AE#define TLS1_CK_RSA_PSK_WITH_AES_256_GCM_SHA384 0x030000AD#define TLS1_CK_RSA_PSK_WITH_AES_128_GCM_SHA256 0x030000AC#define TLS1_CK_DHE_PSK_WITH_AES_256_GCM_SHA384 0x030000AB#define TLS1_CK_DHE_PSK_WITH_AES_128_GCM_SHA256 0x030000AA#define TLS1_CK_PSK_WITH_AES_256_GCM_SHA384 0x030000A9#define TLS1_CK_PSK_WITH_AES_128_GCM_SHA256 0x030000A8#define TLS1_CK_RSA_PSK_WITH_AES_256_CBC_SHA 0x03000095#define TLS1_CK_RSA_PSK_WITH_AES_128_CBC_SHA 0x03000094#define TLS1_CK_RSA_PSK_WITH_3DES_EDE_CBC_SHA 0x03000093#define TLS1_CK_RSA_PSK_WITH_RC4_128_SHA 0x03000092#define TLS1_CK_DHE_PSK_WITH_AES_256_CBC_SHA 0x03000091#define TLS1_CK_DHE_PSK_WITH_AES_128_CBC_SHA 0x03000090#define TLS1_CK_DHE_PSK_WITH_3DES_EDE_CBC_SHA 0x0300008F#define TLS1_CK_DHE_PSK_WITH_RC4_128_SHA 0x0300008E#define TLS1_CK_PSK_WITH_AES_256_CBC_SHA 0x0300008D#define TLS1_CK_PSK_WITH_AES_128_CBC_SHA 0x0300008C#define TLS1_CK_PSK_WITH_3DES_EDE_CBC_SHA 0x0300008B#define TLS1_CK_PSK_WITH_RC4_128_SHA 0x0300008A#define SSL_CTX_set_tlsext_ticket_key_cb(ssl,cb) SSL_CTX_callback_ctrl(ssl,SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB, (void (*)(void))cb)#define SSL_CTX_get_tlsext_status_type(ssl) SSL_CTX_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_TYPE,0,NULL)#define SSL_CTX_set_tlsext_status_type(ssl,type) SSL_CTX_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE,type,NULL)#define SSL_CTX_set_tlsext_status_arg(ssl,arg) SSL_CTX_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG,0,arg)#define SSL_CTX_get_tlsext_status_arg(ssl,arg) SSL_CTX_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB_ARG,0,arg)#define SSL_CTX_set_tlsext_status_cb(ssl,cb) SSL_CTX_callback_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB, (void (*)(void))cb)#define SSL_CTX_get_tlsext_status_cb(ssl,cb) SSL_CTX_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB,0,(void *)cb)#define SSL_CTX_set_tlsext_ticket_keys(ctx,keys,keylen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_TLSEXT_TICKET_KEYS,keylen,keys)#define SSL_CTX_get_tlsext_ticket_keys(ctx,keys,keylen) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_TLSEXT_TICKET_KEYS,keylen,keys)#define SSL_CTX_set_tlsext_servername_arg(ctx,arg) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG,0,arg)#define SSL_TLSEXT_ERR_NOACK 3#define SSL_TLSEXT_ERR_ALERT_FATAL 2#define SSL_TLSEXT_ERR_ALERT_WARNING 1#define SSL_TLSEXT_ERR_OK 0#define SSL_CTX_set_tlsext_servername_callback(ctx,cb) SSL_CTX_callback_ctrl(ctx,SSL_CTRL_SET_TLSEXT_SERVERNAME_CB, (void (*)(void))cb)#define SSL_set_tlsext_status_ocsp_resp(ssl,arg,arglen) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP,arglen,arg)#define SSL_get_tlsext_status_ocsp_resp(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP,0,arg)#define SSL_set_tlsext_status_ids(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS,0,arg)#define SSL_get_tlsext_status_ids(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS,0,arg)#define SSL_set_tlsext_status_exts(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS,0,arg)#define SSL_get_tlsext_status_exts(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS,0,arg)#define SSL_set_tlsext_status_type(ssl,type) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE,type,NULL)#define SSL_get_tlsext_status_type(ssl) SSL_ctrl(ssl,SSL_CTRL_GET_TLSEXT_STATUS_REQ_TYPE,0,NULL)#define SSL_set_tlsext_debug_arg(ssl,arg) SSL_ctrl(ssl,SSL_CTRL_SET_TLSEXT_DEBUG_ARG,0,arg)#define SSL_set_tlsext_debug_callback(ssl,cb) SSL_callback_ctrl(ssl,SSL_CTRL_SET_TLSEXT_DEBUG_CB, (void (*)(void))cb)#define SSL_set_tlsext_host_name(s,name) SSL_ctrl(s,SSL_CTRL_SET_TLSEXT_HOSTNAME,TLSEXT_NAMETYPE_host_name, (void *)name)#define TLSEXT_MAXLEN_host_name 255#define TLSEXT_max_fragment_length_4096 4#define TLSEXT_max_fragment_length_2048 3#define TLSEXT_max_fragment_length_1024 2#define TLSEXT_max_fragment_length_512 1#define TLSEXT_max_fragment_length_DISABLED 0#define TLSEXT_curve_P_384 24#define TLSEXT_curve_P_256 23#define TLSEXT_nid_unknown 0x1000000#define TLSEXT_hash_num 10#define TLSEXT_hash_gostr34112012_512 239#define TLSEXT_hash_gostr34112012_256 238#define TLSEXT_hash_gostr3411 237#define TLSEXT_hash_sha512 6#define TLSEXT_hash_sha384 5#define TLSEXT_hash_sha256 4#define TLSEXT_hash_sha224 3#define TLSEXT_hash_sha1 2#define TLSEXT_hash_md5 1#define TLSEXT_hash_none 0#define TLSEXT_signature_num 7#define TLSEXT_signature_gostr34102012_512 239#define TLSEXT_signature_gostr34102012_256 238#define TLSEXT_signature_gostr34102001 237#define TLSEXT_signature_ecdsa 3#define TLSEXT_signature_dsa 2#define TLSEXT_signature_rsa 1#define TLSEXT_signature_anonymous 0#define TLSEXT_ECPOINTFORMAT_last 2#define TLSEXT_ECPOINTFORMAT_ansiX962_compressed_char2 2#define TLSEXT_ECPOINTFORMAT_ansiX962_compressed_prime 1#define TLSEXT_ECPOINTFORMAT_uncompressed 0#define TLSEXT_ECPOINTFORMAT_first 0#define TLSEXT_STATUSTYPE_ocsp 1#define TLSEXT_NAMETYPE_host_name 0#define TLSEXT_TYPE_next_proto_neg 13172#define TLSEXT_TYPE_renegotiate 0xff01#define TLSEXT_TYPE_key_share 51#define TLSEXT_TYPE_signature_algorithms_cert 50#define TLSEXT_TYPE_post_handshake_auth 49#define TLSEXT_TYPE_certificate_authorities 47#define TLSEXT_TYPE_psk_kex_modes 45#define TLSEXT_TYPE_cookie 44#define TLSEXT_TYPE_supported_versions 43#define TLSEXT_TYPE_early_data 42#define TLSEXT_TYPE_psk 41#define TLSEXT_TYPE_session_ticket 35#define TLSEXT_TYPE_extended_master_secret 23#define TLSEXT_TYPE_encrypt_then_mac 22#define TLSEXT_TYPE_padding 21#define TLSEXT_TYPE_signed_certificate_timestamp 18#define TLSEXT_TYPE_application_layer_protocol_negotiation 16#define TLSEXT_TYPE_heartbeat 15#define TLSEXT_TYPE_use_srtp 14#define TLSEXT_TYPE_signature_algorithms 13#define TLSEXT_TYPE_srp 12#define TLSEXT_TYPE_ec_point_formats 11#define TLSEXT_TYPE_elliptic_curves TLSEXT_TYPE_supported_groups#define TLSEXT_TYPE_supported_groups 10#define TLSEXT_TYPE_cert_type 9#define TLSEXT_TYPE_server_authz 8#define TLSEXT_TYPE_client_authz 7#define TLSEXT_TYPE_user_mapping 6#define TLSEXT_TYPE_status_request 5#define TLSEXT_TYPE_truncated_hmac 4#define TLSEXT_TYPE_trusted_ca_keys 3#define TLSEXT_TYPE_client_certificate_url 2#define TLSEXT_TYPE_max_fragment_length 1#define TLSEXT_TYPE_server_name 0#define TLS1_AD_NO_APPLICATION_PROTOCOL 120#define TLS1_AD_UNKNOWN_PSK_IDENTITY 115#define TLS1_AD_BAD_CERTIFICATE_HASH_VALUE 114#define TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE 113#define TLS1_AD_UNRECOGNIZED_NAME 112#define TLS1_AD_CERTIFICATE_UNOBTAINABLE 111#define TLS1_AD_UNSUPPORTED_EXTENSION 110#define TLS13_AD_CERTIFICATE_REQUIRED 116#define TLS13_AD_MISSING_EXTENSION 109#define TLS1_AD_NO_RENEGOTIATION 100#define TLS1_AD_USER_CANCELLED 90#define TLS1_AD_INAPPROPRIATE_FALLBACK 86#define TLS1_AD_INTERNAL_ERROR 80#define TLS1_AD_INSUFFICIENT_SECURITY 71#define TLS1_AD_PROTOCOL_VERSION 70#define TLS1_AD_EXPORT_RESTRICTION 60#define TLS1_AD_DECRYPT_ERROR 51#define TLS1_AD_DECODE_ERROR 50#define TLS1_AD_ACCESS_DENIED 49#define TLS1_AD_UNKNOWN_CA 48#define TLS1_AD_RECORD_OVERFLOW 22#define TLS1_AD_DECRYPTION_FAILED 21#define TLS1_get_client_version(s) ((SSL_client_version(s) >> 8) == TLS1_VERSION_MAJOR ? SSL_client_version(s) : 0)#define TLS1_get_version(s) ((SSL_version(s) >> 8) == TLS1_VERSION_MAJOR ? SSL_version(s) : 0)#define TLS1_2_VERSION_MINOR 0x03#define TLS1_2_VERSION_MAJOR 0x03#define TLS1_1_VERSION_MINOR 0x02#define TLS1_1_VERSION_MAJOR 0x03#define TLS1_VERSION_MINOR 0x01#define TLS1_VERSION_MAJOR 0x03#define TLS_ANY_VERSION 0x10000#define TLS_MAX_VERSION TLS1_3_VERSION#define TLS1_3_VERSION 0x0304#define TLS1_2_VERSION 0x0303#define TLS1_1_VERSION 0x0302#define TLS1_VERSION 0x0301#define OPENSSL_TLS_SECURITY_LEVEL 1#define HEADER_TLS1_H#define DTLS1_TMO_ALERT_COUNT 12#define DTLS1_TMO_WRITE_COUNT 2#define DTLS1_TMO_READ_COUNT 2#define DTLS1_AL_HEADER_LENGTH 2#define DTLS1_CCS_HEADER_LENGTH 1#define DTLS1_HM_FRAGMENT_RETRY -3#define DTLS1_HM_BAD_FRAGMENT -2#define DTLS1_HM_HEADER_LENGTH 12#define DTLS1_RT_HEADER_LENGTH 13#define DTLS1_COOKIE_LENGTH 256#define DTLS_ANY_VERSION 0x1FFFF#define DTLS1_BAD_VER 0x0100#define DTLS1_VERSION_MAJOR 0xFE#define DTLS_MAX_VERSION DTLS1_2_VERSION#define DTLS_MIN_VERSION DTLS1_VERSION#define DTLS1_2_VERSION 0xFEFD#define DTLS1_VERSION 0xFEFF#define HEADER_DTLS1_H#define SRTP_AEAD_AES_256_GCM 0x0008#define SRTP_AEAD_AES_128_GCM 0x0007#define SRTP_NULL_SHA1_32 0x0006#define SRTP_NULL_SHA1_80 0x0005#define SRTP_AES128_F8_SHA1_32 0x0004#define SRTP_AES128_F8_SHA1_80 0x0003#define SRTP_AES128_CM_SHA1_32 0x0002#define SRTP_AES128_CM_SHA1_80 0x0001#define HEADER_D1_SRTP_H#define SSL_TICKET_RETURN_USE_RENEW 4#define SSL_TICKET_RETURN_USE 3#define SSL_TICKET_RETURN_IGNORE_RENEW 2#define SSL_TICKET_RETURN_IGNORE 1#define SSL_TICKET_RETURN_ABORT 0#define SSL_TICKET_SUCCESS_RENEW 6#define SSL_TICKET_SUCCESS 5#define SSL_TICKET_NO_DECRYPT 4#define SSL_TICKET_EMPTY 3#define SSL_TICKET_NONE 2#define SSL_TICKET_FATAL_ERR_OTHER 1#define SSL_TICKET_FATAL_ERR_MALLOC 0#define OPENSSL_INIT_SSL_DEFAULT (OPENSSL_INIT_LOAD_SSL_STRINGS | OPENSSL_INIT_LOAD_CRYPTO_STRINGS)#define OPENSSL_INIT_LOAD_SSL_STRINGS 0x00200000L#define OPENSSL_INIT_NO_LOAD_SSL_STRINGS 0x00100000L#define SSL_SECOP_PEER_CA_MD (SSL_SECOP_CA_MD | SSL_SECOP_PEER)#define SSL_SECOP_PEER_CA_KEY (SSL_SECOP_CA_KEY | SSL_SECOP_PEER)#define SSL_SECOP_PEER_EE_KEY (SSL_SECOP_EE_KEY | SSL_SECOP_PEER)#define SSL_SECOP_CA_MD (18 | SSL_SECOP_OTHER_CERT)#define SSL_SECOP_CA_KEY (17 | SSL_SECOP_OTHER_CERT)#define SSL_SECOP_EE_KEY (16 | SSL_SECOP_OTHER_CERT)#define SSL_SECOP_COMPRESSION (15 | SSL_SECOP_OTHER_NONE)#define SSL_SECOP_SIGALG_MASK (14 | SSL_SECOP_OTHER_SIGALG)#define SSL_SECOP_SIGALG_CHECK (13 | SSL_SECOP_OTHER_SIGALG)#define SSL_SECOP_SIGALG_SHARED (12 | SSL_SECOP_OTHER_SIGALG)#define SSL_SECOP_SIGALG_SUPPORTED (11 | SSL_SECOP_OTHER_SIGALG)#define SSL_SECOP_TICKET (10 | SSL_SECOP_OTHER_NONE)#define SSL_SECOP_VERSION (9 | SSL_SECOP_OTHER_NONE)#define SSL_SECOP_TMP_DH (7 | SSL_SECOP_OTHER_PKEY)#define SSL_SECOP_CURVE_CHECK (6 | SSL_SECOP_OTHER_CURVE)#define SSL_SECOP_CURVE_SHARED (5 | SSL_SECOP_OTHER_CURVE)#define SSL_SECOP_CURVE_SUPPORTED (4 | SSL_SECOP_OTHER_CURVE)#define SSL_SECOP_CIPHER_CHECK (3 | SSL_SECOP_OTHER_CIPHER)#define SSL_SECOP_CIPHER_SHARED (2 | SSL_SECOP_OTHER_CIPHER)#define SSL_SECOP_CIPHER_SUPPORTED (1 | SSL_SECOP_OTHER_CIPHER)#define SSL_SECOP_PEER 0x1000#define SSL_SECOP_OTHER_CERT (6 << 16)#define SSL_SECOP_OTHER_SIGALG (5 << 16)#define SSL_SECOP_OTHER_PKEY (4 << 16)#define SSL_SECOP_OTHER_DH (3 << 16)#define SSL_SECOP_OTHER_CURVE (2 << 16)#define SSL_SECOP_OTHER_CIPHER (1 << 16)#define SSL_SECOP_OTHER_NONE 0#define SSL_SECOP_OTHER_TYPE 0xffff0000#define SSL_CTX_disable_ct(ctx) ((void) SSL_CTX_set_validation_callback((ctx), NULL, NULL))#define SSL_disable_ct(s) ((void) SSL_set_validation_callback((s), NULL, NULL))#define SSL_cache_hit(s) SSL_session_reused(s)#define SSL_COMP_free_compression_methods() while(0) continue#define SSL_set_max_pipelines(ssl,m) SSL_ctrl(ssl,SSL_CTRL_SET_MAX_PIPELINES,m,NULL)#define SSL_CTX_set_max_pipelines(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_MAX_PIPELINES,m,NULL)#define SSL_set_split_send_fragment(ssl,m) SSL_ctrl(ssl,SSL_CTRL_SET_SPLIT_SEND_FRAGMENT,m,NULL)#define SSL_CTX_set_split_send_fragment(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SPLIT_SEND_FRAGMENT,m,NULL)#define SSL_set_max_send_fragment(ssl,m) SSL_ctrl(ssl,SSL_CTRL_SET_MAX_SEND_FRAGMENT,m,NULL)#define SSL_CTX_set_max_send_fragment(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_MAX_SEND_FRAGMENT,m,NULL)#define SSL_set_max_cert_list(ssl,m) SSL_ctrl(ssl,SSL_CTRL_SET_MAX_CERT_LIST,m,NULL)#define SSL_get_max_cert_list(ssl) SSL_ctrl(ssl,SSL_CTRL_GET_MAX_CERT_LIST,0,NULL)#define SSL_CTX_set_max_cert_list(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_MAX_CERT_LIST,m,NULL)#define SSL_CTX_get_max_cert_list(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_MAX_CERT_LIST,0,NULL)#define SSL_CTX_set_read_ahead(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_READ_AHEAD,m,NULL)#define SSL_CTX_get_read_ahead(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_READ_AHEAD,0,NULL)#define SSL_CTX_set_default_read_ahead(ctx,m) SSL_CTX_set_read_ahead(ctx,m)#define SSL_CTX_get_default_read_ahead(ctx) SSL_CTX_get_read_ahead(ctx)#define SSL_CTX_get_session_cache_mode(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_SESS_CACHE_MODE,0,NULL)#define SSL_CTX_set_session_cache_mode(ctx,m) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SESS_CACHE_MODE,m,NULL)#define SSL_CTX_sess_get_cache_size(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_SESS_CACHE_SIZE,0,NULL)#define SSL_CTX_sess_set_cache_size(ctx,t) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SESS_CACHE_SIZE,t,NULL)#define SSL_CTX_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_SSL_CTX, l, p, newf, dupf, freef)#define SSL_SESSION_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_SSL_SESSION, l, p, newf, dupf, freef)#define SSL_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_SSL, l, p, newf, dupf, freef)#define SSL_get0_session SSL_get_session#define SSL_library_init() OPENSSL_init_ssl(0, NULL)#define SSLv23_client_method TLS_client_method#define SSLv23_server_method TLS_server_method#define SSLv23_method TLS_method#define SSL_EARLY_DATA_ACCEPTED 2#define SSL_EARLY_DATA_REJECTED 1#define SSL_EARLY_DATA_NOT_SENT 0#define SSL_READ_EARLY_DATA_FINISH 2#define SSL_READ_EARLY_DATA_SUCCESS 1#define SSL_READ_EARLY_DATA_ERROR 0#define SSL_CLIENT_HELLO_RETRY (-1)#define SSL_CLIENT_HELLO_ERROR 0#define SSL_CLIENT_HELLO_SUCCESS 1#define SSL_load_error_strings() OPENSSL_init_ssl(OPENSSL_INIT_LOAD_SSL_STRINGS | OPENSSL_INIT_LOAD_CRYPTO_STRINGS, NULL)#define SSL_SERVERINFOV2 2#define SSL_SERVERINFOV1 1#define SSL_set_tmp_rsa_callback(ssl,cb) while(0) (cb)(NULL, 0, 0)#define SSL_CTX_set_tmp_rsa_callback(ctx,cb) while(0) (cb)(NULL, 0, 0)#define SSL_set_ecdh_auto(dummy,onoff) ((onoff) != 0)#define SSL_CTX_set_ecdh_auto(dummy,onoff) ((onoff) != 0)#define SSL_set_tmp_rsa(ssl,rsa) 1#define SSL_need_tmp_RSA(ssl) 0#define SSL_CTX_set_tmp_rsa(ctx,rsa) 1#define SSL_CTX_need_tmp_RSA(ctx) 0#define SSL_get_shared_curve SSL_get_shared_group#define SSL_set1_curves_list SSL_set1_groups_list#define SSL_set1_curves SSL_set1_groups#define SSL_CTX_set1_curves_list SSL_CTX_set1_groups_list#define SSL_CTX_set1_curves SSL_CTX_set1_groups#define SSL_get1_curves SSL_get1_groups#define SSL_CTRL_GET_SHARED_CURVE SSL_CTRL_GET_SHARED_GROUP#define SSL_CTRL_SET_CURVES_LIST SSL_CTRL_SET_GROUPS_LIST#define SSL_CTRL_SET_CURVES SSL_CTRL_SET_GROUPS#define SSL_CTRL_GET_CURVES SSL_CTRL_GET_GROUPS#define SSL_get_max_proto_version(s) SSL_ctrl(s, SSL_CTRL_GET_MAX_PROTO_VERSION, 0, NULL)#define SSL_get_min_proto_version(s) SSL_ctrl(s, SSL_CTRL_GET_MIN_PROTO_VERSION, 0, NULL)#define SSL_set_max_proto_version(s,version) SSL_ctrl(s, SSL_CTRL_SET_MAX_PROTO_VERSION, version, NULL)#define SSL_set_min_proto_version(s,version) SSL_ctrl(s, SSL_CTRL_SET_MIN_PROTO_VERSION, version, NULL)#define SSL_CTX_get_max_proto_version(ctx) SSL_CTX_ctrl(ctx, SSL_CTRL_GET_MAX_PROTO_VERSION, 0, NULL)#define SSL_CTX_get_min_proto_version(ctx) SSL_CTX_ctrl(ctx, SSL_CTRL_GET_MIN_PROTO_VERSION, 0, NULL)#define SSL_CTX_set_max_proto_version(ctx,version) SSL_CTX_ctrl(ctx, SSL_CTRL_SET_MAX_PROTO_VERSION, version, NULL)#define SSL_CTX_set_min_proto_version(ctx,version) SSL_CTX_ctrl(ctx, SSL_CTRL_SET_MIN_PROTO_VERSION, version, NULL)#define SSL_get0_ec_point_formats(s,plst) SSL_ctrl(s,SSL_CTRL_GET_EC_POINT_FORMATS,0,plst)#define SSL_get0_raw_cipherlist(s,plst) SSL_ctrl(s,SSL_CTRL_GET_RAW_CIPHERLIST,0,plst)#define SSL_get_server_tmp_key(s,pk) SSL_ctrl(s,SSL_CTRL_GET_SERVER_TMP_KEY,0,pk)#define SSL_get_peer_signature_nid(s,pn) SSL_ctrl(s,SSL_CTRL_GET_PEER_SIGNATURE_NID,0,pn)#define SSL_set1_client_certificate_types(s,clist,clistlen) SSL_ctrl(s,SSL_CTRL_SET_CLIENT_CERT_TYPES,clistlen,(char *)(clist))#define SSL_CTX_set1_client_certificate_types(ctx,clist,clistlen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CLIENT_CERT_TYPES,clistlen, (char *)(clist))#define SSL_get0_certificate_types(s,clist) SSL_ctrl(s, SSL_CTRL_GET_CLIENT_CERT_TYPES, 0, (char *)(clist))#define SSL_set1_client_sigalgs_list(ctx,s) SSL_ctrl(ctx,SSL_CTRL_SET_CLIENT_SIGALGS_LIST,0,(char *)(s))#define SSL_set1_client_sigalgs(ctx,slist,slistlen) SSL_ctrl(ctx,SSL_CTRL_SET_CLIENT_SIGALGS,clistlen,(int *)(slist))#define SSL_CTX_set1_client_sigalgs_list(ctx,s) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CLIENT_SIGALGS_LIST,0,(char *)(s))#define SSL_CTX_set1_client_sigalgs(ctx,slist,slistlen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CLIENT_SIGALGS,slistlen,(int *)(slist))#define SSL_set1_sigalgs_list(ctx,s) SSL_ctrl(ctx,SSL_CTRL_SET_SIGALGS_LIST,0,(char *)(s))#define SSL_set1_sigalgs(ctx,slist,slistlen) SSL_ctrl(ctx,SSL_CTRL_SET_SIGALGS,slistlen,(int *)(slist))#define SSL_CTX_set1_sigalgs_list(ctx,s) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SIGALGS_LIST,0,(char *)(s))#define SSL_CTX_set1_sigalgs(ctx,slist,slistlen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_SIGALGS,slistlen,(int *)(slist))#define SSL_get_shared_group(s,n) SSL_ctrl(s,SSL_CTRL_GET_SHARED_GROUP,n,NULL)#define SSL_set1_groups_list(ctx,s) SSL_ctrl(ctx,SSL_CTRL_SET_GROUPS_LIST,0,(char *)(s))#define SSL_set1_groups(ctx,glist,glistlen) SSL_ctrl(ctx,SSL_CTRL_SET_GROUPS,glistlen,(char *)(glist))#define SSL_CTX_set1_groups_list(ctx,s) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_GROUPS_LIST,0,(char *)(s))#define SSL_CTX_set1_groups(ctx,glist,glistlen) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_GROUPS,glistlen,(char *)(glist))#define SSL_get1_groups(ctx,s) SSL_ctrl(ctx,SSL_CTRL_GET_GROUPS,0,(char *)(s))#define SSL_set1_chain_cert_store(s,st) SSL_ctrl(s,SSL_CTRL_SET_CHAIN_CERT_STORE,1,(char *)(st))#define SSL_set0_chain_cert_store(s,st) SSL_ctrl(s,SSL_CTRL_SET_CHAIN_CERT_STORE,0,(char *)(st))#define SSL_set1_verify_cert_store(s,st) SSL_ctrl(s,SSL_CTRL_SET_VERIFY_CERT_STORE,1,(char *)(st))#define SSL_set0_verify_cert_store(s,st) SSL_ctrl(s,SSL_CTRL_SET_VERIFY_CERT_STORE,0,(char *)(st))#define SSL_set_current_cert(ctx,op) SSL_ctrl(ctx,SSL_CTRL_SET_CURRENT_CERT, op, NULL)#define SSL_select_current_cert(ctx,x509) SSL_ctrl(ctx,SSL_CTRL_SELECT_CURRENT_CERT,0,(char *)(x509))#define SSL_build_cert_chain(s,flags) SSL_ctrl(s,SSL_CTRL_BUILD_CERT_CHAIN, flags, NULL)#define SSL_clear_chain_certs(ctx) SSL_set0_chain(ctx,NULL)#define SSL_get0_chain_certs(ctx,px509) SSL_ctrl(ctx,SSL_CTRL_GET_CHAIN_CERTS,0,px509)#define SSL_add1_chain_cert(ctx,x509) SSL_ctrl(ctx,SSL_CTRL_CHAIN_CERT,1,(char *)(x509))#define SSL_add0_chain_cert(ctx,x509) SSL_ctrl(ctx,SSL_CTRL_CHAIN_CERT,0,(char *)(x509))#define SSL_set1_chain(ctx,sk) SSL_ctrl(ctx,SSL_CTRL_CHAIN,1,(char *)(sk))#define SSL_set0_chain(ctx,sk) SSL_ctrl(ctx,SSL_CTRL_CHAIN,0,(char *)(sk))#define SSL_CTX_set1_chain_cert_store(ctx,st) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CHAIN_CERT_STORE,1,(char *)(st))#define SSL_CTX_set0_chain_cert_store(ctx,st) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CHAIN_CERT_STORE,0,(char *)(st))#define SSL_CTX_set1_verify_cert_store(ctx,st) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_VERIFY_CERT_STORE,1,(char *)(st))#define SSL_CTX_set0_verify_cert_store(ctx,st) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_VERIFY_CERT_STORE,0,(char *)(st))#define SSL_CTX_set_current_cert(ctx,op) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_CURRENT_CERT, op, NULL)#define SSL_CTX_select_current_cert(ctx,x509) SSL_CTX_ctrl(ctx,SSL_CTRL_SELECT_CURRENT_CERT,0,(char *)(x509))#define SSL_CTX_build_cert_chain(ctx,flags) SSL_CTX_ctrl(ctx,SSL_CTRL_BUILD_CERT_CHAIN, flags, NULL)#define SSL_CTX_clear_chain_certs(ctx) SSL_CTX_set0_chain(ctx,NULL)#define SSL_CTX_get0_chain_certs(ctx,px509) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_CHAIN_CERTS,0,px509)#define SSL_CTX_add1_chain_cert(ctx,x509) SSL_CTX_ctrl(ctx,SSL_CTRL_CHAIN_CERT,1,(char *)(x509))#define SSL_CTX_add0_chain_cert(ctx,x509) SSL_CTX_ctrl(ctx,SSL_CTRL_CHAIN_CERT,0,(char *)(x509))#define SSL_CTX_set1_chain(ctx,sk) SSL_CTX_ctrl(ctx,SSL_CTRL_CHAIN,1,(char *)(sk))#define SSL_CTX_set0_chain(ctx,sk) SSL_CTX_ctrl(ctx,SSL_CTRL_CHAIN,0,(char *)(sk))#define SSL_CTX_clear_extra_chain_certs(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS,0,NULL)#define SSL_CTX_get_extra_chain_certs_only(ctx,px509) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_EXTRA_CHAIN_CERTS,1,px509)#define SSL_CTX_get_extra_chain_certs(ctx,px509) SSL_CTX_ctrl(ctx,SSL_CTRL_GET_EXTRA_CHAIN_CERTS,0,px509)#define SSL_CTX_add_extra_chain_cert(ctx,x509) SSL_CTX_ctrl(ctx,SSL_CTRL_EXTRA_CHAIN_CERT,0,(char *)(x509))#define SSL_set_tmp_ecdh(ssl,ecdh) SSL_ctrl(ssl,SSL_CTRL_SET_TMP_ECDH,0,(char *)(ecdh))#define SSL_set_tmp_dh(ssl,dh) SSL_ctrl(ssl,SSL_CTRL_SET_TMP_DH,0,(char *)(dh))#define SSL_set_dh_auto(s,onoff) SSL_ctrl(s,SSL_CTRL_SET_DH_AUTO,onoff,NULL)#define SSL_CTX_set_dh_auto(ctx,onoff) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_DH_AUTO,onoff,NULL)#define SSL_CTX_set_tmp_ecdh(ctx,ecdh) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_TMP_ECDH,0,(char *)(ecdh))#define SSL_CTX_set_tmp_dh(ctx,dh) SSL_CTX_ctrl(ctx,SSL_CTRL_SET_TMP_DH,0,(char *)(dh))#define SSL_total_renegotiations(ssl) SSL_ctrl((ssl),SSL_CTRL_GET_TOTAL_RENEGOTIATIONS,0,NULL)#define SSL_clear_num_renegotiations(ssl) SSL_ctrl((ssl),SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS,0,NULL)#define SSL_num_renegotiations(ssl) SSL_ctrl((ssl),SSL_CTRL_GET_NUM_RENEGOTIATIONS,0,NULL)#define DTLSv1_handle_timeout(ssl) SSL_ctrl(ssl,DTLS_CTRL_HANDLE_TIMEOUT,0, NULL)#define DTLSv1_get_timeout(ssl,arg) SSL_ctrl(ssl,DTLS_CTRL_GET_TIMEOUT,0, (void *)(arg))#define SSL_CERT_SET_SERVER 3#define SSL_CERT_SET_NEXT 2#define SSL_CERT_SET_FIRST 1#define SSL_CTRL_GET_MAX_PROTO_VERSION 131#define SSL_CTRL_GET_MIN_PROTO_VERSION 130#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB_ARG 129#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_CB 128#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_TYPE 127#define SSL_CTRL_SET_MAX_PIPELINES 126#define SSL_CTRL_SET_SPLIT_SEND_FRAGMENT 125#define SSL_CTRL_SET_MAX_PROTO_VERSION 124#define SSL_CTRL_SET_MIN_PROTO_VERSION 123#define SSL_CTRL_GET_EXTMS_SUPPORT 122#define DTLS_CTRL_GET_LINK_MIN_MTU 121#define DTLS_CTRL_SET_LINK_MTU 120#define SSL_CTRL_SET_DH_AUTO 118#define SSL_CTRL_SET_CURRENT_CERT 117#define SSL_CTRL_SELECT_CURRENT_CERT 116#define SSL_CTRL_GET_CHAIN_CERTS 115#define SSL_CTRL_GET_EC_POINT_FORMATS 111#define SSL_CTRL_GET_RAW_CIPHERLIST 110#define SSL_CTRL_GET_SERVER_TMP_KEY 109#define SSL_CTRL_GET_PEER_SIGNATURE_NID 108#define SSL_CTRL_SET_CHAIN_CERT_STORE 107#define SSL_CTRL_SET_VERIFY_CERT_STORE 106#define SSL_CTRL_BUILD_CERT_CHAIN 105#define SSL_CTRL_SET_CLIENT_CERT_TYPES 104#define SSL_CTRL_GET_CLIENT_CERT_TYPES 103#define SSL_CTRL_SET_CLIENT_SIGALGS_LIST 102#define SSL_CTRL_SET_CLIENT_SIGALGS 101#define SSL_CTRL_CLEAR_CERT_FLAGS 100#define SSL_CTRL_CERT_FLAGS 99#define SSL_CTRL_SET_SIGALGS_LIST 98#define SSL_CTRL_SET_SIGALGS 97#define SSL_CTRL_GET_SHARED_GROUP 93#define SSL_CTRL_SET_GROUPS_LIST 92#define SSL_CTRL_SET_GROUPS 91#define SSL_CTRL_GET_GROUPS 90#define SSL_CTRL_CHAIN_CERT 89#define SSL_CTRL_CHAIN 88#define SSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS 83#define SSL_CTRL_GET_EXTRA_CHAIN_CERTS 82#define SSL_CTRL_SET_NOT_RESUMABLE_SESS_CB 79#define SSL_CTRL_CLEAR_MODE 78#define SSL_CTRL_GET_RI_SUPPORT 76#define DTLS_CTRL_HANDLE_TIMEOUT 74#define DTLS_CTRL_GET_TIMEOUT 73#define SSL_CTRL_SET_TLS_EXT_SRP_PASSWORD 81#define SSL_CTRL_SET_TLS_EXT_SRP_STRENGTH 80#define SSL_CTRL_SET_TLS_EXT_SRP_USERNAME 79#define SSL_CTRL_SET_SRP_ARG 78#define SSL_CTRL_SET_SRP_GIVE_CLIENT_PWD_CB 77#define SSL_CTRL_SET_SRP_VERIFY_PARAM_CB 76#define SSL_CTRL_SET_TLS_EXT_SRP_USERNAME_CB 75#define SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB 72#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP 71#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP 70#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS 69#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS 68#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS 67#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS 66#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE 65#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG 64#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB 63#define SSL_CTRL_SET_TLSEXT_TICKET_KEYS 59#define SSL_CTRL_GET_TLSEXT_TICKET_KEYS 58#define SSL_CTRL_SET_TLSEXT_DEBUG_ARG 57#define SSL_CTRL_SET_TLSEXT_DEBUG_CB 56#define SSL_CTRL_SET_TLSEXT_HOSTNAME 55#define SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG 54#define SSL_CTRL_SET_TLSEXT_SERVERNAME_CB 53#define SSL_CTRL_SET_MAX_SEND_FRAGMENT 52#define SSL_CTRL_SET_MAX_CERT_LIST 51#define SSL_CTRL_GET_MAX_CERT_LIST 50#define SSL_CTRL_GET_SESS_CACHE_MODE 45#define SSL_CTRL_SET_SESS_CACHE_MODE 44#define SSL_CTRL_GET_SESS_CACHE_SIZE 43#define SSL_CTRL_SET_SESS_CACHE_SIZE 42#define SSL_CTRL_SET_READ_AHEAD 41#define SSL_CTRL_GET_READ_AHEAD 40#define SSL_CTRL_MODE 33#define SSL_CTRL_SESS_CACHE_FULL 31#define SSL_CTRL_SESS_TIMEOUTS 30#define SSL_CTRL_SESS_MISSES 29#define SSL_CTRL_SESS_CB_HIT 28#define SSL_CTRL_SESS_HIT 27#define SSL_CTRL_SESS_ACCEPT_RENEGOTIATE 26#define SSL_CTRL_SESS_ACCEPT_GOOD 25#define SSL_CTRL_SESS_ACCEPT 24#define SSL_CTRL_SESS_CONNECT_RENEGOTIATE 23#define SSL_CTRL_SESS_CONNECT_GOOD 22#define SSL_CTRL_SESS_CONNECT 21#define SSL_CTRL_SESS_NUMBER 20#define SSL_CTRL_SET_MTU 17#define SSL_CTRL_SET_MSG_CALLBACK_ARG 16#define SSL_CTRL_SET_MSG_CALLBACK 15#define SSL_CTRL_EXTRA_CHAIN_CERT 14#define SSL_CTRL_GET_FLAGS 13#define SSL_CTRL_GET_TOTAL_RENEGOTIATIONS 12#define SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS 11#define SSL_CTRL_GET_NUM_RENEGOTIATIONS 10#define SSL_CTRL_GET_CLIENT_CERT_REQUEST 9#define SSL_CTRL_SET_TMP_DH_CB 6#define SSL_CTRL_SET_TMP_ECDH 4#define SSL_CTRL_SET_TMP_DH 3#define SSL_ERROR_WANT_CLIENT_HELLO_CB 11#define SSL_ERROR_WANT_ASYNC_JOB 10#define SSL_ERROR_WANT_ASYNC 9#define SSL_ERROR_WANT_ACCEPT 8#define SSL_ERROR_WANT_CONNECT 7#define SSL_ERROR_ZERO_RETURN 6#define SSL_ERROR_SYSCALL 5#define SSL_ERROR_WANT_X509_LOOKUP 4#define SSL_ERROR_WANT_WRITE 3#define SSL_ERROR_WANT_READ 2#define SSL_ERROR_SSL 1#define SSL_ERROR_NONE 0#define SSL_AD_NO_APPLICATION_PROTOCOL TLS1_AD_NO_APPLICATION_PROTOCOL#define SSL_AD_INAPPROPRIATE_FALLBACK TLS1_AD_INAPPROPRIATE_FALLBACK#define SSL_AD_UNKNOWN_PSK_IDENTITY TLS1_AD_UNKNOWN_PSK_IDENTITY#define SSL_AD_BAD_CERTIFICATE_HASH_VALUE TLS1_AD_BAD_CERTIFICATE_HASH_VALUE#define SSL_AD_BAD_CERTIFICATE_STATUS_RESPONSE TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE#define SSL_AD_UNRECOGNIZED_NAME TLS1_AD_UNRECOGNIZED_NAME#define SSL_AD_CERTIFICATE_UNOBTAINABLE TLS1_AD_CERTIFICATE_UNOBTAINABLE#define SSL_AD_UNSUPPORTED_EXTENSION TLS1_AD_UNSUPPORTED_EXTENSION#define SSL_AD_CERTIFICATE_REQUIRED TLS13_AD_CERTIFICATE_REQUIRED#define SSL_AD_MISSING_EXTENSION TLS13_AD_MISSING_EXTENSION#define SSL_AD_NO_RENEGOTIATION TLS1_AD_NO_RENEGOTIATION#define SSL_AD_USER_CANCELLED TLS1_AD_USER_CANCELLED#define SSL_AD_INTERNAL_ERROR TLS1_AD_INTERNAL_ERROR#define SSL_AD_INSUFFICIENT_SECURITY TLS1_AD_INSUFFICIENT_SECURITY#define SSL_AD_PROTOCOL_VERSION TLS1_AD_PROTOCOL_VERSION#define SSL_AD_EXPORT_RESTRICTION TLS1_AD_EXPORT_RESTRICTION#define SSL_AD_DECRYPT_ERROR TLS1_AD_DECRYPT_ERROR#define SSL_AD_DECODE_ERROR TLS1_AD_DECODE_ERROR#define SSL_AD_ACCESS_DENIED TLS1_AD_ACCESS_DENIED#define SSL_AD_UNKNOWN_CA TLS1_AD_UNKNOWN_CA#define SSL_AD_ILLEGAL_PARAMETER SSL3_AD_ILLEGAL_PARAMETER#define SSL_AD_CERTIFICATE_UNKNOWN SSL3_AD_CERTIFICATE_UNKNOWN#define SSL_AD_CERTIFICATE_EXPIRED SSL3_AD_CERTIFICATE_EXPIRED#define SSL_AD_CERTIFICATE_REVOKED SSL3_AD_CERTIFICATE_REVOKED#define SSL_AD_UNSUPPORTED_CERTIFICATE SSL3_AD_UNSUPPORTED_CERTIFICATE#define SSL_AD_BAD_CERTIFICATE SSL3_AD_BAD_CERTIFICATE#define SSL_AD_NO_CERTIFICATE SSL3_AD_NO_CERTIFICATE#define SSL_AD_HANDSHAKE_FAILURE SSL3_AD_HANDSHAKE_FAILURE#define SSL_AD_DECOMPRESSION_FAILURE SSL3_AD_DECOMPRESSION_FAILURE#define SSL_AD_RECORD_OVERFLOW TLS1_AD_RECORD_OVERFLOW#define SSL_AD_DECRYPTION_FAILED TLS1_AD_DECRYPTION_FAILED#define SSL_AD_BAD_RECORD_MAC SSL3_AD_BAD_RECORD_MAC#define SSL_AD_UNEXPECTED_MESSAGE SSL3_AD_UNEXPECTED_MESSAGE#define SSL_AD_CLOSE_NOTIFY SSL3_AD_CLOSE_NOTIFY#define SSL_AD_REASON_OFFSET 1000#define i2d_SSL_SESSION_bio(bp,s_id) ASN1_i2d_bio_of(SSL_SESSION,i2d_SSL_SESSION,bp,s_id)#define d2i_SSL_SESSION_bio(bp,s_id) ASN1_d2i_bio_of(SSL_SESSION,SSL_SESSION_new,d2i_SSL_SESSION,bp,s_id)#define SSL_set_timeout(a,b) SSL_SESSION_set_timeout((a),(b))#define SSL_get_timeout(a) SSL_SESSION_get_timeout(a)#define SSL_set_time(a,b) SSL_SESSION_set_time((a),(b))#define SSL_get_time(a) SSL_SESSION_get_time(a)#define SSL_get_cipher_name(s) SSL_CIPHER_get_name(SSL_get_current_cipher(s))#define SSL_get_cipher_version(s) SSL_CIPHER_get_version(SSL_get_current_cipher(s))#define SSL_get_cipher_bits(s,np) SSL_CIPHER_get_bits(SSL_get_current_cipher(s),np)#define SSL_get_cipher(s) SSL_CIPHER_get_name(SSL_get_current_cipher(s))#define SSLeay_add_ssl_algorithms() SSL_library_init()#define OpenSSL_add_ssl_algorithms() SSL_library_init()#define SSL_VERIFY_POST_HANDSHAKE 0x08#define SSL_VERIFY_CLIENT_ONCE 0x04#define SSL_VERIFY_FAIL_IF_NO_PEER_CERT 0x02#define SSL_VERIFY_PEER 0x01#define SSL_VERIFY_NONE 0x00#define SSL_ST_READ_DONE 0xF2#define SSL_ST_READ_BODY 0xF1#define SSL_ST_READ_HEADER 0xF0#define SSL_in_accept_init(a) (SSL_in_init(a) && SSL_is_server(a))#define SSL_in_connect_init(a) (SSL_in_init(a) && !SSL_is_server(a))#define SSL_CB_HANDSHAKE_DONE 0x20#define SSL_CB_HANDSHAKE_START 0x10#define SSL_CB_CONNECT_EXIT (SSL_ST_CONNECT|SSL_CB_EXIT)#define SSL_CB_CONNECT_LOOP (SSL_ST_CONNECT|SSL_CB_LOOP)#define SSL_CB_ACCEPT_EXIT (SSL_ST_ACCEPT|SSL_CB_EXIT)#define SSL_CB_ACCEPT_LOOP (SSL_ST_ACCEPT|SSL_CB_LOOP)#define SSL_CB_WRITE_ALERT (SSL_CB_ALERT|SSL_CB_WRITE)#define SSL_CB_READ_ALERT (SSL_CB_ALERT|SSL_CB_READ)#define SSL_CB_ALERT 0x4000#define SSL_CB_WRITE 0x08#define SSL_CB_READ 0x04#define SSL_CB_EXIT 0x02#define SSL_CB_LOOP 0x01#define SSL_ST_MASK 0x0FFF#define SSL_ST_ACCEPT 0x2000#define SSL_ST_CONNECT 0x1000#define SSL_KEY_UPDATE_REQUESTED 1#define SSL_KEY_UPDATE_NOT_REQUESTED 0#define SSL_KEY_UPDATE_NONE -1#define SSL_CTX_set_app_data(ctx,arg) (SSL_CTX_set_ex_data(ctx,0, (char *)(arg)))#define SSL_CTX_get_app_data(ctx) (SSL_CTX_get_ex_data(ctx,0))#define SSL_SESSION_get_app_data(s) (SSL_SESSION_get_ex_data(s,0))#define SSL_SESSION_set_app_data(s,a) (SSL_SESSION_set_ex_data(s,0, (char *)(a)))#define SSL_get_app_data(s) (SSL_get_ex_data(s,0))#define SSL_set_app_data(s,arg) (SSL_set_ex_data(s,0,(char *)(arg)))#define SSL_MAC_FLAG_WRITE_MAC_STREAM 2#define SSL_MAC_FLAG_READ_MAC_STREAM 1#define SSL_want_client_hello_cb(s) (SSL_want(s) == SSL_CLIENT_HELLO_CB)#define SSL_want_async_job(s) (SSL_want(s) == SSL_ASYNC_NO_JOBS)#define SSL_want_async(s) (SSL_want(s) == SSL_ASYNC_PAUSED)#define SSL_want_x509_lookup(s) (SSL_want(s) == SSL_X509_LOOKUP)#define SSL_want_write(s) (SSL_want(s) == SSL_WRITING)#define SSL_want_read(s) (SSL_want(s) == SSL_READING)#define SSL_want_nothing(s) (SSL_want(s) == SSL_NOTHING)#define SSL_CLIENT_HELLO_CB 7#define SSL_ASYNC_NO_JOBS 6#define SSL_ASYNC_PAUSED 5#define SSL_X509_LOOKUP 4#define SSL_READING 3#define SSL_WRITING 2#define SSL_NOTHING 1#define PSK_MAX_PSK_LEN 256#define PSK_MAX_IDENTITY_LEN 128#define OPENSSL_NPN_NO_OVERLAP 2#define OPENSSL_NPN_NEGOTIATED 1#define OPENSSL_NPN_UNSUPPORTED 0#define SSL_get0_npn_negotiated SSL_get0_next_proto_negotiated#define SSL_CTX_set_npn_select_cb SSL_CTX_set_next_proto_select_cb#define SSL_CTX_set_npn_advertised_cb SSL_CTX_set_next_protos_advertised_cb#define SSL_CTX_sess_cache_full(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CACHE_FULL,0,NULL)#define SSL_CTX_sess_timeouts(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_TIMEOUTS,0,NULL)#define SSL_CTX_sess_misses(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_MISSES,0,NULL)#define SSL_CTX_sess_cb_hits(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CB_HIT,0,NULL)#define SSL_CTX_sess_hits(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_HIT,0,NULL)#define SSL_CTX_sess_accept_good(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_ACCEPT_GOOD,0,NULL)#define SSL_CTX_sess_accept_renegotiate(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_ACCEPT_RENEGOTIATE,0,NULL)#define SSL_CTX_sess_accept(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_ACCEPT,0,NULL)#define SSL_CTX_sess_connect_renegotiate(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CONNECT_RENEGOTIATE,0,NULL)#define SSL_CTX_sess_connect_good(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CONNECT_GOOD,0,NULL)#define SSL_CTX_sess_connect(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_CONNECT,0,NULL)#define SSL_CTX_sess_number(ctx) SSL_CTX_ctrl(ctx,SSL_CTRL_SESS_NUMBER,0,NULL)#define SSL_SESS_CACHE_NO_INTERNAL (SSL_SESS_CACHE_NO_INTERNAL_LOOKUP|SSL_SESS_CACHE_NO_INTERNAL_STORE)#define SSL_SESS_CACHE_NO_INTERNAL_STORE 0x0200#define SSL_SESS_CACHE_NO_INTERNAL_LOOKUP 0x0100#define SSL_SESS_CACHE_NO_AUTO_CLEAR 0x0080#define SSL_SESS_CACHE_BOTH (SSL_SESS_CACHE_CLIENT|SSL_SESS_CACHE_SERVER)#define SSL_SESS_CACHE_SERVER 0x0002#define SSL_SESS_CACHE_CLIENT 0x0001#define SSL_SESS_CACHE_OFF 0x0000#define SSL_SESSION_CACHE_MAX_SIZE_DEFAULT (1024*20)#define SSL_MAX_CERT_LIST_DEFAULT 1024*100#define SSL_get_extms_support(s) SSL_ctrl((s),SSL_CTRL_GET_EXTMS_SUPPORT,0,NULL)#define SSL_set_msg_callback_arg(ssl,arg) SSL_ctrl((ssl), SSL_CTRL_SET_MSG_CALLBACK_ARG, 0, (arg))#define SSL_CTX_set_msg_callback_arg(ctx,arg) SSL_CTX_ctrl((ctx), SSL_CTRL_SET_MSG_CALLBACK_ARG, 0, (arg))#define SSL_clear_cert_flags(s,op) SSL_ctrl((s),SSL_CTRL_CLEAR_CERT_FLAGS,(op),NULL)#define SSL_CTX_clear_cert_flags(ctx,op) SSL_CTX_ctrl((ctx),SSL_CTRL_CLEAR_CERT_FLAGS,(op),NULL)#define SSL_set_cert_flags(s,op) SSL_ctrl((s),SSL_CTRL_CERT_FLAGS,(op),NULL)#define SSL_CTX_set_cert_flags(ctx,op) SSL_CTX_ctrl((ctx),SSL_CTRL_CERT_FLAGS,(op),NULL)#define SSL_get_secure_renegotiation_support(ssl) SSL_ctrl((ssl), SSL_CTRL_GET_RI_SUPPORT, 0, NULL)#define DTLS_get_link_min_mtu(ssl) SSL_ctrl((ssl),DTLS_CTRL_GET_LINK_MIN_MTU,0,NULL)#define DTLS_set_link_mtu(ssl,mtu) SSL_ctrl((ssl),DTLS_CTRL_SET_LINK_MTU,(mtu),NULL)#define SSL_set_mtu(ssl,mtu) SSL_ctrl((ssl),SSL_CTRL_SET_MTU,(mtu),NULL)#define SSL_get_mode(ssl) SSL_ctrl((ssl),SSL_CTRL_MODE,0,NULL)#define SSL_set_mode(ssl,op) SSL_ctrl((ssl),SSL_CTRL_MODE,(op),NULL)#define SSL_clear_mode(ssl,op) SSL_ctrl((ssl),SSL_CTRL_CLEAR_MODE,(op),NULL)#define SSL_CTX_get_mode(ctx) SSL_CTX_ctrl((ctx),SSL_CTRL_MODE,0,NULL)#define SSL_CTX_clear_mode(ctx,op) SSL_CTX_ctrl((ctx),SSL_CTRL_CLEAR_MODE,(op),NULL)#define SSL_CTX_set_mode(ctx,op) SSL_CTX_ctrl((ctx),SSL_CTRL_MODE,(op),NULL)#define SSL_COOKIE_LENGTH 4096#define SSL_CONF_TYPE_NONE 0x4#define SSL_CONF_TYPE_DIR 0x3#define SSL_CONF_TYPE_FILE 0x2#define SSL_CONF_TYPE_STRING 0x1#define SSL_CONF_TYPE_UNKNOWN 0x0#define SSL_CONF_FLAG_REQUIRE_PRIVATE 0x40#define SSL_CONF_FLAG_CERTIFICATE 0x20#define SSL_CONF_FLAG_SHOW_ERRORS 0x10#define SSL_CONF_FLAG_SERVER 0x8#define SSL_CONF_FLAG_CLIENT 0x4#define SSL_CONF_FLAG_FILE 0x2#define SSL_CONF_FLAG_CMDLINE 0x1#define CERT_PKEY_SUITEB 0x800#define CERT_PKEY_CERT_TYPE 0x400#define CERT_PKEY_ISSUER_NAME 0x200#define CERT_PKEY_EXPLICIT_SIGN 0x100#define CERT_PKEY_CA_PARAM 0x80#define CERT_PKEY_EE_PARAM 0x40#define CERT_PKEY_CA_SIGNATURE 0x20#define CERT_PKEY_EE_SIGNATURE 0x10#define CERT_PKEY_SIGN 0x2#define CERT_PKEY_VALID 0x1#define SSL_BUILD_CHAIN_FLAG_CLEAR_ERROR 0x10#define SSL_BUILD_CHAIN_FLAG_IGNORE_ERROR 0x8#define SSL_BUILD_CHAIN_FLAG_CHECK 0x4#define SSL_BUILD_CHAIN_FLAG_NO_ROOT 0x2#define SSL_BUILD_CHAIN_FLAG_UNTRUSTED 0x1#define SSL_CERT_FLAG_BROKEN_PROTOCOL 0x10000000#define SSL_CERT_FLAG_SUITEB_128_LOS 0x30000#define SSL_CERT_FLAG_SUITEB_192_LOS 0x20000#define SSL_CERT_FLAG_SUITEB_128_LOS_ONLY 0x10000#define SSL_CERT_FLAG_TLS_STRICT 0x00000001U#define SSL_MODE_ASYNC 0x00000100U#define SSL_MODE_SEND_FALLBACK_SCSV 0x00000080U#define SSL_MODE_SEND_SERVERHELLO_TIME 0x00000040U#define SSL_MODE_SEND_CLIENTHELLO_TIME 0x00000020U#define SSL_MODE_RELEASE_BUFFERS 0x00000010U#define SSL_MODE_NO_AUTO_CHAIN 0x00000008U#define SSL_MODE_AUTO_RETRY 0x00000004U#define SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER 0x00000002U#define SSL_MODE_ENABLE_PARTIAL_WRITE 0x00000001U#define SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG 0x0#define SSL_OP_NETSCAPE_CA_DN_BUG 0x0#define SSL_OP_PKCS1_CHECK_2 0x0#define SSL_OP_PKCS1_CHECK_1 0x0#define SSL_OP_NO_SSLv2 0x0#define SSL_OP_EPHEMERAL_RSA 0x0#define SSL_OP_SINGLE_DH_USE 0x0#define SSL_OP_SINGLE_ECDH_USE 0x0#define SSL_OP_TLS_BLOCK_PADDING_BUG 0x0#define SSL_OP_TLS_D5_BUG 0x0#define SSL_OP_SSLEAY_080_CLIENT_DH_BUG 0x0#define SSL_OP_MSIE_SSLV2_RSA_PADDING 0x0#define SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER 0x0#define SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG 0x0#define SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG 0x0#define SSL_OP_NETSCAPE_CHALLENGE_BUG 0x0#define SSL_OP_MICROSOFT_SESS_ID_BUG 0x0#define SSL_OP_ALL (SSL_OP_CRYPTOPRO_TLSEXT_BUG| SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS| SSL_OP_LEGACY_SERVER_CONNECT| SSL_OP_TLSEXT_PADDING| SSL_OP_SAFARI_ECDHE_ECDSA_BUG)#define SSL_OP_CRYPTOPRO_TLSEXT_BUG 0x80000000U#define SSL_OP_NO_RENEGOTIATION 0x40000000U#define SSL_OP_NO_DTLS_MASK (SSL_OP_NO_DTLSv1|SSL_OP_NO_DTLSv1_2)#define SSL_OP_NO_SSL_MASK (SSL_OP_NO_SSLv3| SSL_OP_NO_TLSv1|SSL_OP_NO_TLSv1_1|SSL_OP_NO_TLSv1_2|SSL_OP_NO_TLSv1_3)#define SSL_OP_NO_DTLSv1_2 0x08000000U#define SSL_OP_NO_DTLSv1 0x04000000U#define SSL_OP_NO_TLSv1_3 0x20000000U#define SSL_OP_NO_TLSv1_1 0x10000000U#define SSL_OP_NO_TLSv1_2 0x08000000U#define SSL_OP_NO_TLSv1 0x04000000U#define SSL_OP_NO_SSLv3 0x02000000U#define SSL_OP_NO_ANTI_REPLAY 0x01000000U#define SSL_OP_TLS_ROLLBACK_BUG 0x00800000U#define SSL_OP_CIPHER_SERVER_PREFERENCE 0x00400000U#define SSL_OP_PRIORITIZE_CHACHA 0x00200000U#define SSL_OP_ENABLE_MIDDLEBOX_COMPAT 0x00100000U#define SSL_OP_NO_ENCRYPT_THEN_MAC 0x00080000U#define SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION 0x00040000U#define SSL_OP_NO_COMPRESSION 0x00020000U#define SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION 0x00010000U#define SSL_OP_CISCO_ANYCONNECT 0x00008000U#define SSL_OP_NO_TICKET 0x00004000U#define SSL_OP_COOKIE_EXCHANGE 0x00002000U#define SSL_OP_NO_QUERY_MTU 0x00001000U#define SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS 0x00000800U#define SSL_OP_ALLOW_NO_DHE_KEX 0x00000400U#define SSL_OP_SAFARI_ECDHE_ECDSA_BUG 0x00000040U#define SSL_OP_TLSEXT_PADDING 0x00000010U#define SSL_OP_LEGACY_SERVER_CONNECT 0x00000004U#define SSL_EXT_TLS1_3_CERTIFICATE_REQUEST 0x4000#define SSL_EXT_TLS1_3_NEW_SESSION_TICKET 0x2000#define SSL_EXT_TLS1_3_CERTIFICATE 0x1000#define SSL_EXT_TLS1_3_HELLO_RETRY_REQUEST 0x0800#define SSL_EXT_TLS1_3_ENCRYPTED_EXTENSIONS 0x0400#define SSL_EXT_TLS1_3_SERVER_HELLO 0x0200#define SSL_EXT_TLS1_2_SERVER_HELLO 0x0100#define SSL_EXT_CLIENT_HELLO 0x0080#define SSL_EXT_IGNORE_ON_RESUMPTION 0x0040#define SSL_EXT_TLS1_3_ONLY 0x0020#define SSL_EXT_TLS1_2_AND_BELOW_ONLY 0x0010#define SSL_EXT_SSL3_ALLOWED 0x0008#define SSL_EXT_TLS_IMPLEMENTATION_ONLY 0x0004#define SSL_EXT_DTLS_ONLY 0x0002#define SSL_EXT_TLS_ONLY 0x0001#define SSL_FILETYPE_PEM X509_FILETYPE_PEM#define SSL_FILETYPE_ASN1 X509_FILETYPE_ASN1#define SSL_RECEIVED_SHUTDOWN 2#define SSL_SENT_SHUTDOWN 1#define TLS_DEFAULT_CIPHERSUITES "TLS_AES_256_GCM_SHA384:" "TLS_CHACHA20_POLY1305_SHA256:" "TLS_AES_128_GCM_SHA256"#define SSL_DEFAULT_CIPHER_LIST "ALL:!COMPLEMENTOFDEFAULT:!eNULL"#define SSL_TXT_CMPDEF "COMPLEMENTOFDEFAULT"#define SSL_TXT_CMPALL "COMPLEMENTOFALL"#define SSL_TXT_ALL "ALL"#define SSL_TXT_TLSV1_2 "TLSv1.2"#define SSL_TXT_TLSV1_1 "TLSv1.1"#define SSL_TXT_TLSV1 "TLSv1"#define SSL_TXT_SSLV3 "SSLv3"#define SSL_TXT_SHA384 "SHA384"#define SSL_TXT_SHA256 "SHA256"#define SSL_TXT_GOST89MAC12 "GOST89MAC12"#define SSL_TXT_GOST12 "GOST12"#define SSL_TXT_GOST89MAC "GOST89MAC"#define SSL_TXT_GOST94 "GOST94"#define SSL_TXT_SHA "SHA"#define SSL_TXT_SHA1 "SHA1"#define SSL_TXT_MD5 "MD5"#define SSL_TXT_ARIA256 "ARIA256"#define SSL_TXT_ARIA128 "ARIA128"#define SSL_TXT_ARIA_GCM "ARIAGCM"#define SSL_TXT_ARIA "ARIA"#define SSL_TXT_GOST "GOST89"#define SSL_TXT_CHACHA20 "CHACHA20"#define SSL_TXT_CAMELLIA "CAMELLIA"#define SSL_TXT_CAMELLIA256 "CAMELLIA256"#define SSL_TXT_CAMELLIA128 "CAMELLIA128"#define SSL_TXT_AES_CCM_8 "AESCCM8"#define SSL_TXT_AES_CCM "AESCCM"#define SSL_TXT_AES_GCM "AESGCM"#define SSL_TXT_AES "AES"#define SSL_TXT_AES256 "AES256"#define SSL_TXT_AES128 "AES128"#define SSL_TXT_SEED "SEED"#define SSL_TXT_IDEA "IDEA"#define SSL_TXT_RC2 "RC2"#define SSL_TXT_RC4 "RC4"#define SSL_TXT_3DES "3DES"#define SSL_TXT_DES "DES"#define SSL_TXT_SRP "SRP"#define SSL_TXT_PSK "PSK"#define SSL_TXT_ECDSA "ECDSA"#define SSL_TXT_AECDH "AECDH"#define SSL_TXT_ECDHE "ECDHE"#define SSL_TXT_EECDH "EECDH"#define SSL_TXT_ECDH "ECDH"#define SSL_TXT_RSA "RSA"#define SSL_TXT_ADH "ADH"#define SSL_TXT_EDH "EDH"#define SSL_TXT_DHE "DHE"#define SSL_TXT_DH "DH"#define SSL_TXT_DSS "DSS"#define SSL_TXT_aSRP "aSRP"#define SSL_TXT_aGOST "aGOST"#define SSL_TXT_aGOST12 "aGOST12"#define SSL_TXT_aGOST01 "aGOST01"#define SSL_TXT_aGOST94 "aGOST94"#define SSL_TXT_aPSK "aPSK"#define SSL_TXT_aECDSA "aECDSA"#define SSL_TXT_aECDH "aECDH"#define SSL_TXT_aDH "aDH"#define SSL_TXT_aDSS "aDSS"#define SSL_TXT_aRSA "aRSA"#define SSL_TXT_kSRP "kSRP"#define SSL_TXT_kGOST "kGOST"#define SSL_TXT_kDHEPSK "kDHEPSK"#define SSL_TXT_kECDHEPSK "kECDHEPSK"#define SSL_TXT_kRSAPSK "kRSAPSK"#define SSL_TXT_kPSK "kPSK"#define SSL_TXT_kECDHE "kECDHE"#define SSL_TXT_kEECDH "kEECDH"#define SSL_TXT_kECDH "kECDH"#define SSL_TXT_kECDHe "kECDHe"#define SSL_TXT_kECDHr "kECDHr"#define SSL_TXT_kDHE "kDHE"#define SSL_TXT_kEDH "kEDH"#define SSL_TXT_kDH "kDH"#define SSL_TXT_kDHd "kDHd"#define SSL_TXT_kDHr "kDHr"#define SSL_TXT_kRSA "kRSA"#define SSL_TXT_NULL "NULL"#define SSL_TXT_eNULL "eNULL"#define SSL_TXT_aNULL "aNULL"#define SSL_TXT_FIPS "FIPS"#define SSL_TXT_HIGH "HIGH"#define SSL_TXT_MEDIUM "MEDIUM"#define SSL_TXT_LOW "LOW"#define SSL_MAX_PIPELINES 32#define SSL_MAX_MASTER_KEY_LENGTH 48#define SSL_MAX_KEY_ARG_LENGTH 8#define SSL_MIN_RSA_MODULUS_LENGTH_IN_BYTES (512/8)#define SSL_MAX_SID_CTX_LENGTH 32#define SSL_MAX_SSL_SESSION_ID_LENGTH 32#define SSL_SESSION_ASN1_VERSION 0x0001#define RAND_R_UNSUPPORTED_DRBG_TYPE 120#define RAND_R_UNSUPPORTED_DRBG_FLAGS 132#define RAND_R_TOO_MUCH_NONCE_REQUESTED 136#define RAND_R_TOO_LITTLE_NONCE_REQUESTED 135#define RAND_R_SELFTEST_FAILURE 119#define RAND_R_RESEED_ERROR 118#define RAND_R_REQUEST_TOO_LARGE_FOR_DRBG 117#define RAND_R_RANDOM_POOL_UNDERFLOW 134#define RAND_R_RANDOM_POOL_OVERFLOW 125#define RAND_R_PRNG_NOT_SEEDED 100#define RAND_R_PREDICTION_RESISTANCE_NOT_SUPPORTED 133#define RAND_R_PERSONALISATION_STRING_TOO_LONG 116#define RAND_R_PARENT_STRENGTH_TOO_WEAK 131#define RAND_R_PARENT_LOCKING_NOT_ENABLED 130#define RAND_R_NO_DRBG_IMPLEMENTATION_SELECTED 128#define RAND_R_NOT_INSTANTIATED 115#define RAND_R_NOT_A_REGULAR_FILE 122#define RAND_R_IN_ERROR_STATE 114#define RAND_R_INTERNAL_ERROR 113#define RAND_R_GENERATE_ERROR 112#define RAND_R_FWRITE_ERROR 123#define RAND_R_FUNC_NOT_IMPLEMENTED 101#define RAND_R_FAILED_TO_CREATE_LOCK 126#define RAND_R_ERROR_RETRIEVING_NONCE 111#define RAND_R_ERROR_RETRIEVING_ENTROPY 110#define RAND_R_ERROR_RETRIEVING_ADDITIONAL_INPUT 109#define RAND_R_ERROR_INSTANTIATING_DRBG 108#define RAND_R_ERROR_INITIALISING_DRBG 107#define RAND_R_ERROR_ENTROPY_POOL_WAS_IGNORED 127#define RAND_R_ENTROPY_OUT_OF_RANGE 124#define RAND_R_ENTROPY_INPUT_TOO_LONG 106#define RAND_R_DRBG_NOT_INITIALISED 104#define RAND_R_DRBG_ALREADY_INITIALIZED 129#define RAND_R_CANNOT_OPEN_FILE 121#define RAND_R_ARGUMENT_OUT_OF_RANGE 105#define RAND_R_ALREADY_INSTANTIATED 103#define RAND_R_ADDITIONAL_INPUT_TOO_LONG 102#define RAND_F_RAND_WRITE_FILE 112#define RAND_F_RAND_POOL_NEW 116#define RAND_F_RAND_POOL_BYTES_NEEDED 115#define RAND_F_RAND_POOL_ADD_END 114#define RAND_F_RAND_POOL_ADD_BEGIN 113#define RAND_F_RAND_POOL_ADD 103#define RAND_F_RAND_POOL_ACQUIRE_ENTROPY 122#define RAND_F_RAND_LOAD_FILE 111#define RAND_F_RAND_DRBG_UNINSTANTIATE 118#define RAND_F_RAND_DRBG_SET_DEFAULTS 121#define RAND_F_RAND_DRBG_SET 104#define RAND_F_RAND_DRBG_RESTART 102#define RAND_F_RAND_DRBG_RESEED 110#define RAND_F_RAND_DRBG_NEW 109#define RAND_F_RAND_DRBG_INSTANTIATE 108#define RAND_F_RAND_DRBG_GET_NONCE 123#define RAND_F_RAND_DRBG_GET_ENTROPY 120#define RAND_F_RAND_DRBG_GENERATE 107#define RAND_F_RAND_DRBG_ENABLE_LOCKING 119#define RAND_F_RAND_BYTES 100#define RAND_F_GET_ENTROPY 106#define RAND_F_DRBG_SETUP 117#define RAND_F_DRBG_GET_ENTROPY 105#define RAND_F_DRBG_BYTES 101#define HEADER_RANDERR_H#define RAND_cleanup() while(0) continue#define HEADER_RAND_H#define UI_R_USER_DATA_DUPLICATION_UNSUPPORTED 112#define UI_R_UNKNOWN_TTYGET_ERRNO_VALUE 108#define UI_R_UNKNOWN_CONTROL_COMMAND 106#define UI_R_SYSQIOW_ERROR 111#define UI_R_SYSDASSGN_ERROR 110#define UI_R_SYSASSIGN_ERROR 109#define UI_R_RESULT_TOO_SMALL 101#define UI_R_RESULT_TOO_LARGE 100#define UI_R_PROCESSING_ERROR 107#define UI_R_NO_RESULT_BUFFER 105#define UI_R_INDEX_TOO_SMALL 103#define UI_R_INDEX_TOO_LARGE 102#define UI_R_COMMON_OK_AND_CANCEL_CHARACTERS 104#define UI_F_UI_SET_RESULT_EX 120#define UI_F_UI_SET_RESULT 105#define UI_F_UI_PROCESS 113#define UI_F_UI_NEW_METHOD 104#define UI_F_UI_GET_RESULT_LENGTH 119#define UI_F_UI_GET0_RESULT 107#define UI_F_UI_DUP_VERIFY_STRING 106#define UI_F_UI_DUP_USER_DATA 118#define UI_F_UI_DUP_INPUT_STRING 103#define UI_F_UI_DUP_INPUT_BOOLEAN 110#define UI_F_UI_DUP_INFO_STRING 102#define UI_F_UI_DUP_ERROR_STRING 101#define UI_F_UI_CTRL 111#define UI_F_UI_CREATE_METHOD 112#define UI_F_UI_CONSTRUCT_PROMPT 121#define UI_F_OPEN_CONSOLE 114#define UI_F_NOECHO_CONSOLE 117#define UI_F_GENERAL_ALLOCATE_PROMPT 109#define UI_F_GENERAL_ALLOCATE_BOOLEAN 108#define UI_F_ECHO_CONSOLE 116#define UI_F_CLOSE_CONSOLE 115#define HEADER_UIERR_H#define UI_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_UI, l, p, newf, dupf, freef)#define UI_get_app_data(s) UI_get_ex_data(s,0)#define UI_set_app_data(s,arg) UI_set_ex_data(s,0,arg)#define UI_CTRL_IS_REDOABLE 2#define UI_CTRL_PRINT_ERRORS 1#define UI_INPUT_FLAG_USER_BASE 16#define UI_INPUT_FLAG_DEFAULT_PWD 0x02#define UI_INPUT_FLAG_ECHO 0x01#define HEADER_UI_H#define ENGINE_R_VERSION_INCOMPATIBILITY 145#define ENGINE_R_UNIMPLEMENTED_PUBLIC_KEY_METHOD 101#define ENGINE_R_UNIMPLEMENTED_DIGEST 147#define ENGINE_R_UNIMPLEMENTED_CIPHER 146#define ENGINE_R_NO_SUCH_ENGINE 116#define ENGINE_R_NO_REFERENCE 130#define ENGINE_R_NO_LOAD_FUNCTION 125#define ENGINE_R_NO_INDEX 144#define ENGINE_R_NO_CONTROL_FUNCTION 120#define ENGINE_R_NOT_LOADED 112#define ENGINE_R_NOT_INITIALISED 117#define ENGINE_R_INVALID_STRING 150#define ENGINE_R_INVALID_INIT_VALUE 151#define ENGINE_R_INVALID_CMD_NUMBER 138#define ENGINE_R_INVALID_CMD_NAME 137#define ENGINE_R_INVALID_ARGUMENT 143#define ENGINE_R_INTERNAL_LIST_ERROR 110#define ENGINE_R_INIT_FAILED 109#define ENGINE_R_ID_OR_NAME_MISSING 108#define ENGINE_R_FINISH_FAILED 106#define ENGINE_R_FAILED_LOADING_PUBLIC_KEY 129#define ENGINE_R_FAILED_LOADING_PRIVATE_KEY 128#define ENGINE_R_ENGINE_SECTION_ERROR 149#define ENGINE_R_ENGINE_IS_NOT_IN_LIST 105#define ENGINE_R_ENGINE_CONFIGURATION_ERROR 102#define ENGINE_R_ENGINES_SECTION_ERROR 148#define ENGINE_R_DSO_NOT_FOUND 132#define ENGINE_R_DSO_FAILURE 104#define ENGINE_R_CTRL_COMMAND_NOT_IMPLEMENTED 119#define ENGINE_R_CONFLICTING_ENGINE_ID 103#define ENGINE_R_COMMAND_TAKES_NO_INPUT 136#define ENGINE_R_COMMAND_TAKES_INPUT 135#define ENGINE_R_CMD_NOT_EXECUTABLE 134#define ENGINE_R_ARGUMENT_IS_NOT_A_NUMBER 133#define ENGINE_R_ALREADY_LOADED 100#define ENGINE_F_OSSL_HMAC_INIT 200#define ENGINE_F_INT_ENGINE_MODULE_INIT 187#define ENGINE_F_INT_ENGINE_CONFIGURE 188#define ENGINE_F_INT_CTRL_HELPER 172#define ENGINE_F_INT_CLEANUP_ITEM 199#define ENGINE_F_ENGINE_UP_REF 190#define ENGINE_F_ENGINE_UNLOCKED_FINISH 191#define ENGINE_F_ENGINE_TABLE_REGISTER 184#define ENGINE_F_ENGINE_SET_NAME 130#define ENGINE_F_ENGINE_SET_ID 129#define ENGINE_F_ENGINE_SET_DEFAULT_STRING 189#define ENGINE_F_ENGINE_REMOVE 123#define ENGINE_F_ENGINE_PKEY_ASN1_FIND_STR 197#define ENGINE_F_ENGINE_NEW 122#define ENGINE_F_ENGINE_LOAD_SSL_CLIENT_CERT 194#define ENGINE_F_ENGINE_LOAD_PUBLIC_KEY 151#define ENGINE_F_ENGINE_LOAD_PRIVATE_KEY 150#define ENGINE_F_ENGINE_LIST_REMOVE 121#define ENGINE_F_ENGINE_LIST_ADD 120#define ENGINE_F_ENGINE_INIT 119#define ENGINE_F_ENGINE_GET_PREV 116#define ENGINE_F_ENGINE_GET_PKEY_METH 192#define ENGINE_F_ENGINE_GET_PKEY_ASN1_METH 193#define ENGINE_F_ENGINE_GET_NEXT 115#define ENGINE_F_ENGINE_GET_LAST 196#define ENGINE_F_ENGINE_GET_FIRST 195#define ENGINE_F_ENGINE_GET_DIGEST 186#define ENGINE_F_ENGINE_GET_CIPHER 185#define ENGINE_F_ENGINE_FINISH 107#define ENGINE_F_ENGINE_CTRL_CMD_STRING 171#define ENGINE_F_ENGINE_CTRL_CMD 178#define ENGINE_F_ENGINE_CTRL 142#define ENGINE_F_ENGINE_CMD_IS_EXECUTABLE 170#define ENGINE_F_ENGINE_BY_ID 106#define ENGINE_F_ENGINE_ADD 105#define ENGINE_F_DYNAMIC_SET_DATA_CTX 183#define ENGINE_F_DYNAMIC_LOAD 182#define ENGINE_F_DYNAMIC_GET_DATA_CTX 181#define ENGINE_F_DYNAMIC_CTRL 180#define ENGINE_F_DIGEST_UPDATE 198#define HEADER_ENGINEERR_H#define IMPLEMENT_DYNAMIC_BIND_FN(fn) OPENSSL_EXPORT int bind_engine(ENGINE *e, const char *id, const dynamic_fns *fns); OPENSSL_EXPORT int bind_engine(ENGINE *e, const char *id, const dynamic_fns *fns) { if (ENGINE_get_static_state() == fns->static_state) goto skip_cbs; CRYPTO_set_mem_functions(fns->mem_fns.malloc_fn, fns->mem_fns.realloc_fn, fns->mem_fns.free_fn); skip_cbs: if (!fn(e, id)) return 0; return 1; }#define IMPLEMENT_DYNAMIC_CHECK_FN() OPENSSL_EXPORT unsigned long v_check(unsigned long v); OPENSSL_EXPORT unsigned long v_check(unsigned long v) { if (v >= OSSL_DYNAMIC_OLDEST) return OSSL_DYNAMIC_VERSION; return 0; }#define OSSL_DYNAMIC_OLDEST (unsigned long)0x00030000#define OSSL_DYNAMIC_VERSION (unsigned long)0x00030000#define ENGINE_cleanup() while(0) continue#define ENGINE_get_ex_new_index(l,p,newf,dupf,freef) CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_ENGINE, l, p, newf, dupf, freef)#define ENGINE_load_rdrand() OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_RDRAND, NULL)#define ENGINE_load_cryptodev() OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_CRYPTODEV, NULL)#define ENGINE_load_dynamic() OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_DYNAMIC, NULL)#define ENGINE_load_openssl() OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_OPENSSL, NULL)#define ENGINE_CTRL_CHIL_NO_LOCKING 101#define ENGINE_CTRL_CHIL_SET_FORKCHECK 100#define ENGINE_CMD_BASE 200#define ENGINE_CTRL_GET_CMD_FLAGS 18#define ENGINE_CTRL_GET_DESC_FROM_CMD 17#define ENGINE_CTRL_GET_DESC_LEN_FROM_CMD 16#define ENGINE_CTRL_GET_NAME_FROM_CMD 15#define ENGINE_CTRL_GET_NAME_LEN_FROM_CMD 14#define ENGINE_CTRL_GET_CMD_FROM_NAME 13#define ENGINE_CTRL_GET_NEXT_CMD_TYPE 12#define ENGINE_CTRL_GET_FIRST_CMD_TYPE 11#define ENGINE_CTRL_HAS_CTRL_FUNCTION 10#define ENGINE_CTRL_LOAD_SECTION 7#define ENGINE_CTRL_LOAD_CONFIGURATION 6#define ENGINE_CTRL_SET_CALLBACK_DATA 5#define ENGINE_CTRL_SET_USER_INTERFACE 4#define ENGINE_CTRL_HUP 3#define ENGINE_CTRL_SET_PASSWORD_CALLBACK 2#define ENGINE_CTRL_SET_LOGSTREAM 1#define ENGINE_CMD_FLAG_INTERNAL (unsigned int)0x0008#define ENGINE_CMD_FLAG_NO_INPUT (unsigned int)0x0004#define ENGINE_CMD_FLAG_STRING (unsigned int)0x0002#define ENGINE_CMD_FLAG_NUMERIC (unsigned int)0x0001#define ENGINE_FLAGS_NO_REGISTER_ALL (int)0x0008#define ENGINE_FLAGS_BY_ID_COPY (int)0x0004#define ENGINE_FLAGS_MANUAL_CMD_CTRL (int)0x0002#define ENGINE_TABLE_FLAG_NOINIT (unsigned int)0x0001#define ENGINE_METHOD_NONE (unsigned int)0x0000#define ENGINE_METHOD_ALL (unsigned int)0xFFFF#define ENGINE_METHOD_EC (unsigned int)0x0800#define ENGINE_METHOD_PKEY_ASN1_METHS (unsigned int)0x0400#define ENGINE_METHOD_PKEY_METHS (unsigned int)0x0200#define ENGINE_METHOD_DIGESTS (unsigned int)0x0080#define ENGINE_METHOD_CIPHERS (unsigned int)0x0040#define ENGINE_METHOD_RAND (unsigned int)0x0008#define ENGINE_METHOD_DH (unsigned int)0x0004#define ENGINE_METHOD_DSA (unsigned int)0x0002#define ENGINE_METHOD_RSA (unsigned int)0x0001#define HEADER_ENGINE_H#define HAVE_ERR_REMOVE_THREAD_STATE#define WATCHDOG_RESET() {}#define INIT_FUNC_WATCHDOG_RESET#define INIT_FUNC_WATCHDOG_INIT#define LPC32XX_BOOT_NAND_PAGESIZE 2048#define LPC32XX_BOOT_ICR 0x00000096#define LPC32XX_BOOT_BLOCK_OK 0xaa#define LPC32XX_BOOT_CODESIZE (56*1024)#define LPC32XX_BOOT_NAND_PAGES_PER_SECTOR 64#define basename __xpg_basename#define _LIBGEN_H 1#define CRC_SIZE sizeof(uint32_t)#define CHUNK_SIZE 4096#define LK_PART_MAGIC 0x58881688#define BROM_SEC_CFG_UART_EN 2#define BROM_SEC_CFG_JTAG_EN 1#define GFH_BROM_CFG_USBDL_BY_FLAG_TIMEOUT_EN 0x100#define GFH_BROM_CFG_USBDL_BY_KCOL0_TIMEOUT_EN 0x80#define GFH_BROM_CFG_USBDL_AUTO_DETECT_DIS 0x10#define GFH_BROM_CFG_USBDL_BY_AUTO_DETECT_TIMEOUT_EN 0x02#define GFH_SIG_TYPE_SHA256 1#define GFH_SIG_TYPE_NONE 0#define GFH_FLASH_TYPE_NAND 2#define GFH_FLASH_TYPE_GEN 5#define GFH_FILE_INFO_NAME "FILE_INFO"#define GFH_TYPE_BROM_SEC_CFG 8#define GFH_TYPE_ANTI_CLONE 2#define GFH_TYPE_BL_SEC_KEY 3#define GFH_TYPE_BROM_CFG 7#define GFH_TYPE_BL_INFO 1#define GFH_TYPE_FILE_INFO 0#define GFH_HEADER_MAGIC "MMM"#define BRLYT_MAGIC 0x42424242#define BRLYT_NAME "BRLYT"#define NAND_BOOT_ID "NFIINFO"#define NAND_BOOT_VERSION "V006"#define NAND_BOOT_NAME "BOOTLOADER!"#define SDMMC_BOOT_NAME "SDMMC_BOOT"#define SF_BOOT_NAME "SF_BOOT"#define EMMC_BOOT_NAME "EMMC_BOOT"#define _MTK_IMAGE_H#define is_blank_char(c) ((c) == '\t' || (c) == '\n' || (c) == '\r' || (c) == ' ')#define SB_HAB_IVT_TAG 0xd1UL#define SB_HAB_VERSION 0x40UL#define SB_BLOCK_SIZE 16#define ROM_CALL_CMD_FLAG_HAB 0x1#define ROM_JUMP_CMD_FLAG_HAB 0x1#define ROM_LOAD_CMD_FLAG_DCD_LOAD 0x1#define ROM_TAG_CMD_FLAG_ROM_LAST_TAG 0x1#define SB_SECTION_FLAG_BOOTABLE (1 << 0)#define SB_HAB_DCD_TAG 0xd2UL#define SB_IMAGE_FLAGS_MASK SB_IMAGE_FLAG_DISPLAY_PROGRESS#define SB_IMAGE_FLAG_DISPLAY_PROGRESS (1 << 0)#define SB_VERSION_MINOR 1#define SB_VERSION_MAJOR 1#define roundup(x,y) ((((x) + ((y) - 1)) / (y)) * (y))#define __MXSSB_H__#define PBLCRC32_H#define SB_HAB_DCD_WRITE 0xccUL#define SB_DCD_WRITE (SB_HAB_DCD_WRITE << 24)#define SB_DCD_ANDC ((SB_HAB_DCD_WRITE << 24) | SB_HAB_DCD_SET_BIT)#define SB_HAB_DCD_SET_BIT (1 << 4)#define SB_DCD_ORR ((SB_HAB_DCD_WRITE << 24) | SB_HAB_DCD_SET_BIT | SB_HAB_DCD_MASK_BIT)#define SB_HAB_DCD_MASK_BIT (1 << 3)#define SB_HAB_DCD_CHECK 0xcfUL#define SB_DCD_CHK_EQZ (SB_HAB_DCD_CHECK << 24)#define SB_DCD_CHK_EQ ((SB_HAB_DCD_CHECK << 24) | SB_HAB_DCD_SET_BIT)#define SB_DCD_CHK_NEQ ((SB_HAB_DCD_CHECK << 24) | SB_HAB_DCD_MASK_BIT)#define SB_DCD_CHK_NEZ ((SB_HAB_DCD_CHECK << 24) | SB_HAB_DCD_SET_BIT | SB_HAB_DCD_MASK_BIT)#define SB_HAB_DCD_NOOP 0xc0UL#define SB_DCD_NOOP (SB_HAB_DCD_NOOP << 24)#define CONFIG_MXS 1#define _GPIMAGE_H_#define KEY_CHSETTINGS 0xC0C0C0C1#define _OMAPIMAGE_H_#define OMAP_CH_HDR_SIZE 512#define OMAP_FILE_HDR_SIZE (OMAP_CH_HDR_SIZE + GPIMAGE_HDR_SIZE)#define RCW_BYTES 64#define RCW_HEADER 0x010e0100#define RCW_PREAMBLE 0xaa55aa55#define PBLIMAGE_H#define PBL_ADDR_24BIT_MASK 0x00ffffff#define PBL_ACS_CONT_CMD 0x81000000#define ENDIANNESS ((char)endian_test.l)#define __REPB_PREFIX(name) name#define __RE_TRANSLATE_TYPE unsigned char *#define _Restrict_arr_ __restrict_arr#define _Restrict_ __restrict#define RE_NREGS 30#define REGS_FIXED 2#define REGS_REALLOCATE 1#define REGS_UNALLOCATED 0#define RE_TRANSLATE_TYPE __RE_TRANSLATE_TYPE#define REG_ERPAREN _REG_ERPAREN#define REG_ESIZE _REG_ESIZE#define REG_EEND _REG_EEND#define REG_BADRPT _REG_BADRPT#define REG_ESPACE _REG_ESPACE#define REG_ERANGE _REG_ERANGE#define REG_BADBR _REG_BADBR#define REG_EBRACE _REG_EBRACE#define REG_EPAREN _REG_EPAREN#define REG_EBRACK _REG_EBRACK#define REG_ESUBREG _REG_ESUBREG#define REG_EESCAPE _REG_EESCAPE#define REG_ECTYPE _REG_ECTYPE#define REG_ECOLLATE _REG_ECOLLATE#define REG_BADPAT _REG_BADPAT#define REG_NOMATCH _REG_NOMATCH#define REG_NOERROR _REG_NOERROR#define REG_ENOSYS _REG_ENOSYS#define REG_STARTEND (1 << 2)#define REG_NOTEOL (1 << 1)#define REG_NOTBOL 1#define REG_NOSUB (1 << 3)#define REG_NEWLINE (1 << 2)#define REG_ICASE (1 << 1)#define REG_EXTENDED 1#define RE_SYNTAX_POSIX_MINIMAL_EXTENDED (_RE_SYNTAX_POSIX_COMMON | RE_CONTEXT_INDEP_ANCHORS | RE_CONTEXT_INVALID_OPS | RE_NO_BK_BRACES | RE_NO_BK_PARENS | RE_NO_BK_REFS | RE_NO_BK_VBAR | RE_UNMATCHED_RIGHT_PAREN_ORD)#define RE_SYNTAX_POSIX_EXTENDED (_RE_SYNTAX_POSIX_COMMON | RE_CONTEXT_INDEP_ANCHORS | RE_CONTEXT_INDEP_OPS | RE_NO_BK_BRACES | RE_NO_BK_PARENS | RE_NO_BK_VBAR | RE_CONTEXT_INVALID_OPS | RE_UNMATCHED_RIGHT_PAREN_ORD)#define RE_SYNTAX_POSIX_MINIMAL_BASIC (_RE_SYNTAX_POSIX_COMMON | RE_LIMITED_OPS)#define RE_SYNTAX_POSIX_BASIC (_RE_SYNTAX_POSIX_COMMON | RE_BK_PLUS_QM | RE_CONTEXT_INVALID_DUP)#define _RE_SYNTAX_POSIX_COMMON (RE_CHAR_CLASSES | RE_DOT_NEWLINE | RE_DOT_NOT_NULL | RE_INTERVALS | RE_NO_EMPTY_RANGES)#define RE_SYNTAX_SED RE_SYNTAX_POSIX_BASIC#define RE_SYNTAX_ED RE_SYNTAX_POSIX_BASIC#define RE_SYNTAX_POSIX_EGREP RE_SYNTAX_EGREP#define RE_SYNTAX_EGREP ((RE_SYNTAX_POSIX_EXTENDED | RE_INVALID_INTERVAL_ORD | RE_NEWLINE_ALT) & ~(RE_CONTEXT_INVALID_OPS | RE_DOT_NOT_NULL))#define RE_SYNTAX_GREP ((RE_SYNTAX_POSIX_BASIC | RE_NEWLINE_ALT) & ~(RE_CONTEXT_INVALID_DUP | RE_DOT_NOT_NULL))#define RE_SYNTAX_POSIX_AWK (RE_SYNTAX_POSIX_EXTENDED | RE_BACKSLASH_ESCAPE_IN_LISTS | RE_INTERVALS | RE_NO_GNU_OPS | RE_INVALID_INTERVAL_ORD)#define RE_SYNTAX_GNU_AWK ((RE_SYNTAX_POSIX_EXTENDED | RE_BACKSLASH_ESCAPE_IN_LISTS | RE_INVALID_INTERVAL_ORD) & ~(RE_DOT_NOT_NULL | RE_CONTEXT_INDEP_OPS | RE_CONTEXT_INVALID_OPS ))#define RE_SYNTAX_AWK (RE_BACKSLASH_ESCAPE_IN_LISTS | RE_DOT_NOT_NULL | RE_NO_BK_PARENS | RE_NO_BK_REFS | RE_NO_BK_VBAR | RE_NO_EMPTY_RANGES | RE_DOT_NEWLINE | RE_CONTEXT_INDEP_ANCHORS | RE_CHAR_CLASSES | RE_UNMATCHED_RIGHT_PAREN_ORD | RE_NO_GNU_OPS)#define RE_SYNTAX_EMACS 0#define RE_NO_SUB (RE_CONTEXT_INVALID_DUP << 1)#define RE_CONTEXT_INVALID_DUP (RE_CARET_ANCHORS_HERE << 1)#define RE_CARET_ANCHORS_HERE (RE_ICASE << 1)#define RE_ICASE (RE_INVALID_INTERVAL_ORD << 1)#define RE_INVALID_INTERVAL_ORD (RE_DEBUG << 1)#define RE_DEBUG (RE_NO_GNU_OPS << 1)#define RE_NO_GNU_OPS (RE_NO_POSIX_BACKTRACKING << 1)#define RE_NO_POSIX_BACKTRACKING (RE_UNMATCHED_RIGHT_PAREN_ORD << 1)#define RE_UNMATCHED_RIGHT_PAREN_ORD (RE_NO_EMPTY_RANGES << 1)#define RE_NO_EMPTY_RANGES (RE_NO_BK_VBAR << 1)#define RE_NO_BK_VBAR (RE_NO_BK_REFS << 1)#define RE_NO_BK_REFS (RE_NO_BK_PARENS << 1)#define RE_NO_BK_PARENS (RE_NO_BK_BRACES << 1)#define RE_NO_BK_BRACES (RE_NEWLINE_ALT << 1)#define RE_NEWLINE_ALT (RE_LIMITED_OPS << 1)#define RE_LIMITED_OPS (RE_INTERVALS << 1)#define RE_INTERVALS (RE_HAT_LISTS_NOT_NEWLINE << 1)#define RE_HAT_LISTS_NOT_NEWLINE (RE_DOT_NOT_NULL << 1)#define RE_DOT_NOT_NULL (RE_DOT_NEWLINE << 1)#define RE_DOT_NEWLINE (RE_CONTEXT_INVALID_OPS << 1)#define RE_CONTEXT_INVALID_OPS (RE_CONTEXT_INDEP_OPS << 1)#define RE_CONTEXT_INDEP_OPS (RE_CONTEXT_INDEP_ANCHORS << 1)#define RE_CONTEXT_INDEP_ANCHORS (RE_CHAR_CLASSES << 1)#define RE_CHAR_CLASSES (RE_BK_PLUS_QM << 1)#define RE_BK_PLUS_QM (RE_BACKSLASH_ESCAPE_IN_LISTS << 1)#define RE_BACKSLASH_ESCAPE_IN_LISTS ((unsigned long int) 1)#define _REGEX_H 1#define _NSIG (__SIGRTMAX + 1)#define __SIGRTMAX __SIGRTMIN#define __SIGRTMIN 32#define SIGCLD SIGCHLD#define SIGIOT SIGABRT#define SIGIO SIGPOLL#define SIGWINCH 28#define SIGUSR2 31#define SIGUSR1 30#define SIGPROF 27#define SIGVTALRM 26#define SIGXFSZ 25#define SIGXCPU 24#define SIGPOLL 23#define SIGTTOU 22#define SIGTTIN 21#define SIGCHLD 20#define SIGCONT 19#define SIGTSTP 18#define SIGSTOP 17#define SIGURG 16#define SIGALRM 14#define SIGPIPE 13#define SIGSYS 12#define SIGBUS 10#define SIGKILL 9#define SIGTRAP 5#define SIGQUIT 3#define SIGHUP 1#define SIGTERM 15#define SIGSEGV 11#define SIGFPE 8#define SIGABRT 6#define SIGILL 4#define SIGINT 2#define SIG_HOLD ((__sighandler_t) 2)#define SIG_IGN ((__sighandler_t) 1)#define SIG_DFL ((__sighandler_t) 0)#define SIG_ERR ((__sighandler_t) -1)#define _BITS_SIGNUM_GENERIC_H 1#define _SIGNAL_H#define __SIGRTMAX 64#define SIGSYS 31#define SIGPOLL 29#define SIGURG 23#define SIGTSTP 20#define SIGSTOP 19#define SIGCONT 18#define SIGCHLD 17#define SIGUSR2 12#define SIGUSR1 10#define SIGBUS 7#define SIGPWR 30#define SIGSTKFLT 16#define _BITS_SIGNUM_H 1#define __sig_atomic_t_defined 1#define ____sigval_t_defined#define _BITS_SIGINFO_ARCH_H 1#define __SI_MAX_SIZE 128#define __SI_PAD_SIZE ((__SI_MAX_SIZE / sizeof (int)) - 4)#define __SI_CLOCK_T __clock_t#define si_arch _sifields._sigsys._arch#define si_syscall _sifields._sigsys._syscall#define si_call_addr _sifields._sigsys._call_addr#define si_fd _sifields._sigpoll.si_fd#define si_band _sifields._sigpoll.si_band#define si_pkey _sifields._sigfault._bounds._pkey#define si_upper _sifields._sigfault._bounds._addr_bnd._upper#define si_lower _sifields._sigfault._bounds._addr_bnd._lower#define si_addr_lsb _sifields._sigfault.si_addr_lsb#define si_addr _sifields._sigfault.si_addr#define si_ptr _sifields._rt.si_sigval.sival_ptr#define si_int _sifields._rt.si_sigval.sival_int#define si_value _sifields._rt.si_sigval#define si_stime _sifields._sigchld.si_stime#define si_utime _sifields._sigchld.si_utime#define si_status _sifields._sigchld.si_status#define si_overrun _sifields._timer.si_overrun#define si_timerid _sifields._timer.si_tid#define si_uid _sifields._kill.si_uid#define si_pid _sifields._kill.si_pid#define __SI_SIGFAULT_ADDL#define __SI_HAVE_SIGSYS 1#define __SI_ERRNO_THEN_CODE 1#define __SI_BAND_TYPE long int#define __SI_ALIGNMENT#define __siginfo_t_defined 1#define _BITS_SIGINFO_CONSTS_ARCH_H 1#define POLL_HUP POLL_HUP#define POLL_PRI POLL_PRI#define POLL_ERR POLL_ERR#define POLL_MSG POLL_MSG#define POLL_OUT POLL_OUT#define POLL_IN POLL_IN#define CLD_CONTINUED CLD_CONTINUED#define CLD_STOPPED CLD_STOPPED#define CLD_TRAPPED CLD_TRAPPED#define CLD_DUMPED CLD_DUMPED#define CLD_KILLED CLD_KILLED#define CLD_EXITED CLD_EXITED#define TRAP_TRACE TRAP_TRACE#define TRAP_BRKPT TRAP_BRKPT#define BUS_MCEERR_AO BUS_MCEERR_AO#define BUS_MCEERR_AR BUS_MCEERR_AR#define BUS_OBJERR BUS_OBJERR#define BUS_ADRERR BUS_ADRERR#define BUS_ADRALN BUS_ADRALN#define SEGV_PKUERR SEGV_PKUERR#define SEGV_BNDERR SEGV_BNDERR#define SEGV_ACCERR SEGV_ACCERR#define SEGV_MAPERR SEGV_MAPERR#define FPE_FLTSUB FPE_FLTSUB#define FPE_FLTINV FPE_FLTINV#define FPE_FLTRES FPE_FLTRES#define FPE_FLTUND FPE_FLTUND#define FPE_FLTOVF FPE_FLTOVF#define FPE_FLTDIV FPE_FLTDIV#define FPE_INTOVF FPE_INTOVF#define FPE_INTDIV FPE_INTDIV#define ILL_BADSTK ILL_BADSTK#define ILL_COPROC ILL_COPROC#define ILL_PRVREG ILL_PRVREG#define ILL_PRVOPC ILL_PRVOPC#define ILL_ILLTRP ILL_ILLTRP#define ILL_ILLADR ILL_ILLADR#define ILL_ILLOPN ILL_ILLOPN#define ILL_ILLOPC ILL_ILLOPC#define SI_KERNEL SI_KERNEL#define SI_USER SI_USER#define SI_QUEUE SI_QUEUE#define SI_ASYNCIO SI_ASYNCIO#define SI_TIMER SI_TIMER#define SI_MESGQ SI_MESGQ#define SI_SIGIO SI_SIGIO#define SI_TKILL SI_TKILL#define SI_ASYNCNL SI_ASYNCNL#define __SI_ASYNCIO_AFTER_SIGIO 1#define _BITS_SIGINFO_CONSTS_H 1#define __sigval_t_defined#define __SIGEV_MAX_SIZE 64#define __SIGEV_PAD_SIZE ((__SIGEV_MAX_SIZE / sizeof (int)) - 4)#define sigev_notify_attributes _sigev_un._sigev_thread._attribute#define sigev_notify_function _sigev_un._sigev_thread._function#define __sigevent_t_defined 1#define SIGEV_THREAD_ID SIGEV_THREAD_ID#define SIGEV_THREAD SIGEV_THREAD#define SIGEV_NONE SIGEV_NONE#define SIGEV_SIGNAL SIGEV_SIGNAL#define _BITS_SIGEVENT_CONSTS_H 1#define SIG_SETMASK 2#define SIG_UNBLOCK 1#define SIG_BLOCK 0#define SA_STACK SA_ONSTACK#define SA_ONESHOT SA_RESETHAND#define SA_NOMASK SA_NODEFER#define SA_INTERRUPT 0x20000000#define SA_RESETHAND 0x80000000#define SA_NODEFER 0x40000000#define SA_RESTART 0x10000000#define SA_ONSTACK 0x08000000#define SA_SIGINFO 4#define SA_NOCLDWAIT 2#define SA_NOCLDSTOP 1#define sa_sigaction __sigaction_handler.sa_sigaction#define sa_handler __sigaction_handler.sa_handler#define _BITS_SIGACTION_H 1#define FP_XSTATE_MAGIC2_SIZE sizeof(FP_XSTATE_MAGIC2)#define FP_XSTATE_MAGIC2 0x46505845U#define FP_XSTATE_MAGIC1 0x46505853U#define _BITS_SIGCONTEXT_H 1#define __stack_t_defined 1#define __NGREG 23#define __ctx(fld) fld#define REG_CR2 REG_CR2#define REG_OLDMASK REG_OLDMASK#define REG_TRAPNO REG_TRAPNO#define REG_ERR REG_ERR#define REG_CSGSFS REG_CSGSFS#define REG_EFL REG_EFL#define REG_RIP REG_RIP#define REG_RSP REG_RSP#define REG_RCX REG_RCX#define REG_RAX REG_RAX#define REG_RDX REG_RDX#define REG_RBX REG_RBX#define REG_RBP REG_RBP#define REG_RSI REG_RSI#define REG_RDI REG_RDI#define REG_R15 REG_R15#define REG_R14 REG_R14#define REG_R13 REG_R13#define REG_R12 REG_R12#define REG_R11 REG_R11#define REG_R10 REG_R10#define REG_R9 REG_R9#define REG_R8 REG_R8#define NGREG __NGREG#define _SYS_UCONTEXT_H 1#define SIGSTKSZ 8192#define MINSIGSTKSZ 2048#define _BITS_SIGSTACK_H 1#define SS_DISABLE SS_DISABLE#define SS_ONSTACK SS_ONSTACK#define _BITS_SS_FLAGS_H 1#define __sigstack_defined 1#define _BITS_SIGTHREAD_H 1#define SIGRTMAX (__libc_current_sigrtmax ())#define SIGRTMIN (__libc_current_sigrtmin ())#define NSIG _NSIG#define sigmask(sig) ((int)(1u << ((sig) - 1)))#define MAXHOSTNAMELEN 64#define NOGROUP (-1)#define EXEC_PAGESIZE 4096#define HZ 100#define __ASM_GENERIC_PARAM_H#define _LINUX_PARAM_H#define NCARGS 131072#define NOFILE 256#define MAXSYMLINKS 20#define _SYS_PARAM_H 1#define MAX(a,b) (((a)>(b))?(a):(b))#define MIN(a,b) (((a)<(b))?(a):(b))#define powerof2(x) ((((x) - 1) & (x)) == 0)#define roundup(x,y) (__builtin_constant_p (y) && powerof2 (y) ? (((x) + (y) - 1) & ~((y) - 1)) : ((((x) + ((y) - 1)) / (y)) * (y)))#define howmany(x,y) (((x) + ((y) - 1)) / (y))#define isclr(a,i) (((a)[(i)/NBBY] & (1<<((i)%NBBY))) == 0)#define isset(a,i) ((a)[(i)/NBBY] & (1<<((i)%NBBY)))#define clrbit(a,i) ((a)[(i)/NBBY] &= ~(1<<((i)%NBBY)))#define setbit(a,i) ((a)[(i)/NBBY] |= 1<<((i)%NBBY))#define DEV_BSIZE 512#define NODEV ((dev_t) -1)#define MAXPATHLEN PATH_MAX#define CANBSIZ MAX_CANON#define NGROUPS NGROUPS_MAX#define NBBY CHAR_BIT#define debug(fmt,b...) outf(4, fmt, ## b)#define warn(fmt,b...) outf(1, fmt, ## b)#define info(fmt,b...) outf(3, fmt, ## b)#define error(fmt,b...) outf(0, fmt, ## b)#define notice(fmt,b...) outf(2, fmt, ## b)#define MAX_LINE_LEN 500#define _RKCOMMON_H#define HEADER_OFFSET 0x40#define VALIDATION_WORD 0x31305341#define VER_MAJOR_IDX 2#define VER_MINOR_IDX 1#define HEADER_MAGIC be32_to_cpu(0x53544D32)#define HEADER_VERSION_V1 0x1#define HEADER_DEFAULT_OPTION (cpu_to_le32(0x00000001))#define HEADER_TYPE_UBOOT (cpu_to_le32(0x00000000))#define VER_VARIANT_IDX 0#define UBL_BLOCK_SIZE 2048#define UBL_IMAGE_SIZE (0x00003800u)#define UBL_MAGIC_DMA_IC_FAST (0x55)#define UBL_MAGIC_DMA_IC (0x44)#define UBL_MAGIC_FAST (0x33)#define UBL_MAGIC_IC (0x22)#define UBL_MAGIC_DMA (0x11)#define UBL_MAGIC_SAFE (0x00)#define UBL_MAGIC_BASE (0xA1ACED00)#define _UBLIMAGE_H_#define HEADER_REGINITS 256#define HEADER_INTERRUPT_VECTORS 8#define HEADER_INTERRUPT_DEFAULT (cpu_to_le32(0xeafffffe))#define HEADER_REGINIT_NULL (cpu_to_le32(0xffffffff))#define HEADER_WIDTHDETECTION (cpu_to_le32(0xaa995566))#define HEADER_IMAGEIDENTIFIER (cpu_to_le32(0x584c4e58))#define NEXT_CHAR(str,chr) ({ char *_n = strchr(str, chr); if (!_n) goto err; _n; })#define PART_ATTR_DEST_CPU_A53_0 0x000100#define PART_ATTR_DEST_CPU_R5_0 0x000500#define PART_ATTR_DEST_CPU_R5_L 0x000700#define PART_ATTR_DEST_DEVICE_PS 0x000010#define PART_ATTR_DEST_DEVICE_PL 0x000020#define PART_ATTR_TARGET_EL_SHIFT 1#define PART_ATTR_TZ_SECURE 0x000001#define PART_ATTR_PART_OWNER_UBOOT 0x010000#define PART_ATTR_DEST_CPU_NONE 0x000000#define PART_ATTR_DEST_CPU_A53_1 0x000200#define PART_ATTR_DEST_CPU_A53_2 0x000300#define PART_ATTR_DEST_CPU_A53_3 0x000400#define PART_ATTR_A53_EXEC_AARCH32 0x000008#define HEADER_CPU_SELECT_MASK (0x3 << 10)#define HEADER_CPU_SELECT_A53_32BIT (0x1 << 10)#define HEADER_CPU_SELECT_A53_64BIT (0x2 << 10)#define HEADER_CPU_SELECT_R5_SINGLE (0x0 << 10)#define HEADER_CPU_SELECT_R5_DUAL (0x3 << 10)#define PART_ATTR_DEST_CPU_SHIFT 8#define PART_ATTR_TARGET_EL_MASK 0x000006#define PART_ATTR_DEST_DEVICE_XIP 0x000040#define PART_ATTR_DEST_DEVICE_PMU 0x000030#define PART_ATTR_DEST_DEVICE_NONE 0x000000#define PART_ATTR_DEST_DEVICE_MASK 0x000070#define PART_ATTR_DEST_DEVICE_SHIFT 4#define PART_ATTR_ENCRYPTED 0x000080#define PART_ATTR_DEST_CPU_PMU 0x000800#define PART_ATTR_DEST_CPU_R5_1 0x000600#define PART_ATTR_DEST_CPU_MASK 0x000f00#define PART_ATTR_CHECKSUM_SHA3 0x003000#define PART_ATTR_CHECKSUM_SHA2 0x002000#define PART_ATTR_CHECKSUM_MD5 0x001000#define PART_ATTR_CHECKSUM_NONE 0x000000#define PART_ATTR_CHECKSUM_MASK 0x007000#define PART_ATTR_RSA_SIG 0x008000#define PART_ATTR_PART_OWNER_FSBL 0x000000#define PART_ATTR_PART_OWNER_MASK 0x030000#define PART_ATTR_BIG_ENDIAN 0x040000#define PART_ATTR_BS_BLOCK_SIZE_8MB 0x400000#define PART_ATTR_BS_BLOCK_SIZE_DEFAULT 0x000000#define PART_ATTR_BS_BLOCK_SIZE_MASK 0x700000#define PART_ATTR_VEC_LOCATION 0x800000#define _ZYNQMPIMAGE_H_ExprStmtif (...) ... if constexpr (...) ... while (...) ...goto ...computed goto ...continue;label ...:return ...do (...) ...for(...:...) ...for(...;...;...) ...case ...:default: switch (...) ... <handler>try { ... }{ ... }__try { ... } __except( ... ) { ... }__try { ... } __finally { ... }declarationasm statementVLA dimension sizeVLA declarationinitializer for SIG_TYPE_NONEinitializer for SIG_TYPE_MBRinitializer for SIG_TYPE_GUIDinitializer for SIG_TYPE_COUNTinitializer for IF_TYPE_UNKNOWNinitializer for IF_TYPE_IDEinitializer for IF_TYPE_SCSIinitializer for IF_TYPE_ATAPIinitializer for IF_TYPE_USBinitializer for IF_TYPE_DOCinitializer for IF_TYPE_MMCinitializer for IF_TYPE_SDinitializer for IF_TYPE_SATAinitializer for IF_TYPE_HOSTinitializer for IF_TYPE_NVMEinitializer for IF_TYPE_EFIinitializer for IF_TYPE_VIRTIOinitializer for IF_TYPE_COUNTinitializer for PCI_SIZE_8initializer for PCI_SIZE_16initializer for PCI_SIZE_32initializer for DISPLAY_FLAGS_HSYNC_LOWinitializer for DISPLAY_FLAGS_HSYNC_HIGHinitializer for DISPLAY_FLAGS_VSYNC_LOWinitializer for DISPLAY_FLAGS_VSYNC_HIGHinitializer for DISPLAY_FLAGS_DE_LOWinitializer for DISPLAY_FLAGS_DE_HIGHinitializer for DISPLAY_FLAGS_PIXDATA_POSEDGEinitializer for DISPLAY_FLAGS_PIXDATA_NEGEDGEinitializer for DISPLAY_FLAGS_INTERLACEDinitializer for DISPLAY_FLAGS_DOUBLESCANinitializer for DISPLAY_FLAGS_DOUBLECLKinitializer for COMPAT_UNKNOWNinitializer for COMPAT_NVIDIA_TEGRA20_EMCinitializer for COMPAT_NVIDIA_TEGRA20_EMC_TABLEinitializer for COMPAT_NVIDIA_TEGRA20_NANDinitializer for COMPAT_NVIDIA_TEGRA124_XUSB_PADCTLinitializer for COMPAT_NVIDIA_TEGRA210_XUSB_PADCTLinitializer for COMPAT_SMSC_LAN9215initializer for COMPAT_SAMSUNG_EXYNOS5_SROMCinitializer for COMPAT_SAMSUNG_EXYNOS_USB_PHYinitializer for COMPAT_SAMSUNG_EXYNOS5_USB3_PHYinitializer for COMPAT_SAMSUNG_EXYNOS_TMUinitializer for COMPAT_SAMSUNG_EXYNOS_MIPI_DSIinitializer for COMPAT_SAMSUNG_EXYNOS_DWMMCinitializer for COMPAT_GENERIC_SPI_FLASHinitializer for COMPAT_SAMSUNG_EXYNOS_SYSMMUinitializer for COMPAT_INTEL_MICROCODEinitializer for COMPAT_INTEL_QRK_MRCinitializer for COMPAT_ALTERA_SOCFPGA_DWMACinitializer for COMPAT_ALTERA_SOCFPGA_DWMMCinitializer for COMPAT_ALTERA_SOCFPGA_DWC2USBinitializer for COMPAT_INTEL_BAYTRAIL_FSPinitializer for COMPAT_INTEL_BAYTRAIL_FSP_MDPinitializer for COMPAT_INTEL_IVYBRIDGE_FSPinitializer for COMPAT_SUNXI_NANDinitializer for COMPAT_ALTERA_SOCFPGA_CLKinitializer for COMPAT_ALTERA_SOCFPGA_PINCTRL_SINGLEinitializer for COMPAT_ALTERA_SOCFPGA_H2F_BRGinitializer for COMPAT_ALTERA_SOCFPGA_LWH2F_BRGinitializer for COMPAT_ALTERA_SOCFPGA_F2H_BRGinitializer for COMPAT_ALTERA_SOCFPGA_F2SDR0initializer for COMPAT_ALTERA_SOCFPGA_F2SDR1initializer for COMPAT_ALTERA_SOCFPGA_F2SDR2initializer for COMPAT_ALTERA_SOCFPGA_FPGA0initializer for COMPAT_ALTERA_SOCFPGA_NOCinitializer for COMPAT_ALTERA_SOCFPGA_CLK_INITinitializer for COMPAT_COUNTinitializer for FDT_PCI_SPACE_CONFIGinitializer for FDT_PCI_SPACE_IOinitializer for FDT_PCI_SPACE_MEM32initializer for FDT_PCI_SPACE_MEM64initializer for FDT_PCI_SPACE_MEM32_PREFinitializer for FDT_PCI_SPACE_MEM64_PREFinitializer for CBL_DISABLE_CACHESinitializer for CBL_SHOW_BOOTSTAGE_REPORTinitializer for CBL_ALLinitializer for rinitializer for WB_SYNC_NONEinitializer for WB_SYNC_ALLinitializer for LED_OFFinitializer for LED_HALFinitializer for LED_FULLinitializer for DM_REMOVE_NORMALinitializer for DM_REMOVE_ACTIVE_DMAinitializer for DM_REMOVE_OS_PREPAREinitializer for DM_REMOVE_ACTIVE_ALLinitializer for OS_FILET_REGinitializer for OS_FILET_LNKinitializer for OS_FILET_DIRinitializer for OS_FILET_UNKNOWNinitializer for OS_FILET_COUNTinitializer for IOT_8initializer for IOT_16initializer for IOT_32initializer for IOT_READinitializer for IOT_WRITEinitializer for SYSRESET_WARMinitializer for SYSRESET_COLDinitializer for SYSRESET_POWERinitializer for SYSRESET_POWER_OFFinitializer for SYSRESET_COUNTinitializer for STATE_TERM_RAW_WITH_SIGSinitializer for STATE_TERM_RAWinitializer for STATE_TERM_COOKEDinitializer for STATE_TERM_COUNTinitializer for countinitializer for stateinitializer for fnameinitializer for __func__initializer for _linitializer for pleninitializer for __mptrinitializer for F_OWNER_TIDinitializer for F_OWNER_PIDinitializer for F_OWNER_PGRPinitializer for F_OWNER_GIDinitializer for SOCK_STREAMinitializer for SOCK_DGRAMinitializer for SOCK_RAWinitializer for SOCK_RDMinitializer for SOCK_SEQPACKETinitializer for SOCK_DCCPinitializer for SOCK_PACKETinitializer for SOCK_CLOEXECinitializer for SOCK_NONBLOCKinitializer for SCM_RIGHTSinitializer for SCM_CREDENTIALSinitializer for MSG_OOBinitializer for MSG_PEEKinitializer for MSG_DONTROUTEinitializer for MSG_TRYHARDinitializer for MSG_CTRUNCinitializer for MSG_PROXYinitializer for MSG_TRUNCinitializer for MSG_DONTWAITinitializer for MSG_EORinitializer for MSG_WAITALLinitializer for MSG_FINinitializer for MSG_SYNinitializer for MSG_CONFIRMinitializer for MSG_RSTinitializer for MSG_ERRQUEUEinitializer for MSG_NOSIGNALinitializer for MSG_MOREinitializer for MSG_WAITFORONEinitializer for MSG_BATCHinitializer for MSG_ZEROCOPYinitializer for MSG_FASTOPENinitializer for MSG_CMSG_CLOEXECinitializer for SHUT_RDinitializer for SHUT_WRinitializer for SHUT_RDWRinitializer for IFF_UPinitializer for IFF_BROADCASTinitializer for IFF_DEBUGinitializer for IFF_LOOPBACKinitializer for IFF_POINTOPOINTinitializer for IFF_NOTRAILERSinitializer for IFF_RUNNINGinitializer for IFF_NOARPinitializer for IFF_PROMISCinitializer for IFF_ALLMULTIinitializer for IFF_MASTERinitializer for IFF_SLAVEinitializer for IFF_MULTICASTinitializer for IFF_PORTSELinitializer for IFF_AUTOMEDIAinitializer for IFF_DYNAMICinitializer for IPPORT_ECHOinitializer for IPPORT_DISCARDinitializer for IPPORT_SYSTATinitializer for IPPORT_DAYTIMEinitializer for IPPORT_NETSTATinitializer for IPPORT_FTPinitializer for IPPORT_TELNETinitializer for IPPORT_SMTPinitializer for IPPORT_TIMESERVERinitializer for IPPORT_NAMESERVERinitializer for IPPORT_WHOISinitializer for IPPORT_MTPinitializer for IPPORT_TFTPinitializer for IPPORT_RJEinitializer for IPPORT_FINGERinitializer for IPPORT_TTYLINKinitializer for IPPORT_SUPDUPinitializer for IPPORT_EXECSERVERinitializer for IPPORT_LOGINSERVERinitializer for IPPORT_CMDSERVERinitializer for IPPORT_EFSSERVERinitializer for IPPORT_BIFFUDPinitializer for IPPORT_WHOSERVERinitializer for IPPORT_ROUTESERVERinitializer for IPPORT_RESERVEDinitializer for IPPORT_USERRESERVEDinitializer for IPPROTO_HOPOPTSinitializer for IPPROTO_ROUTINGinitializer for IPPROTO_FRAGMENTinitializer for IPPROTO_ICMPV6initializer for IPPROTO_NONEinitializer for IPPROTO_DSTOPTSinitializer for IPPROTO_MHinitializer for IPPROTO_IPinitializer for IPPROTO_ICMPinitializer for IPPROTO_IGMPinitializer for IPPROTO_IPIPinitializer for IPPROTO_TCPinitializer for IPPROTO_EGPinitializer for IPPROTO_PUPinitializer for IPPROTO_UDPinitializer for IPPROTO_IDPinitializer for IPPROTO_TPinitializer for IPPROTO_DCCPinitializer for IPPROTO_IPV6initializer for IPPROTO_RSVPinitializer for IPPROTO_GREinitializer for IPPROTO_ESPinitializer for IPPROTO_AHinitializer for IPPROTO_MTPinitializer for IPPROTO_BEETPHinitializer for IPPROTO_ENCAPinitializer for IPPROTO_PIMinitializer for IPPROTO_COMPinitializer for IPPROTO_SCTPinitializer for IPPROTO_UDPLITEinitializer for IPPROTO_MPLSinitializer for IPPROTO_RAWinitializer for IPPROTO_MAXinitializer for TPACKET_V1initializer for TPACKET_V2initializer for TPACKET_V3initializer for udphinitializer for iphinitializer for oneinitializer for fdinitializer for retinitializer for DT_UNKNOWNinitializer for DT_FIFOinitializer for DT_CHRinitializer for DT_DIRinitializer for DT_BLKinitializer for DT_REGinitializer for DT_LNKinitializer for DT_SOCKinitializer for DT_WHTinitializer for ITIMER_REALinitializer for ITIMER_VIRTUALinitializer for ITIMER_PROFinitializer for firstinitializer for pprevinitializer for nextinitializer for lastinitializer for new_firstinitializer for endinitializer for baseinitializer for page_sizeinitializer for tinitializer for prognameinitializer for leninitializer for argvinitializer for arginitializer for num_optionsinitializer for sb_optinitializer for parse_errinitializer for bufinitializer for os_dirent_typenameinitializer for DUMMY_ENUM_VALUEinitializer for SDL_FALSEinitializer for SDL_TRUEinitializer for SDL_ENOMEMinitializer for SDL_EFREADinitializer for SDL_EFWRITEinitializer for SDL_EFSEEKinitializer for SDL_UNSUPPORTEDinitializer for SDL_LASTERRORinitializer for SDL_AUDIO_STOPPEDinitializer for SDL_AUDIO_PLAYINGinitializer for SDL_AUDIO_PAUSEDinitializer for CD_TRAYEMPTYinitializer for CD_STOPPEDinitializer for CD_PLAYINGinitializer for CD_PAUSEDinitializer for CD_ERRORinitializer for KMOD_NONEinitializer for KMOD_LSHIFTinitializer for KMOD_RSHIFTinitializer for KMOD_LCTRLinitializer for KMOD_RCTRLinitializer for KMOD_LALTinitializer for KMOD_RALTinitializer for KMOD_LMETAinitializer for KMOD_RMETAinitializer for KMOD_NUMinitializer for KMOD_CAPSinitializer for KMOD_MODEinitializer for KMOD_RESERVEDinitializer for SDLK_UNKNOWNinitializer for SDLK_FIRSTinitializer for SDLK_BACKSPACEinitializer for SDLK_TABinitializer for SDLK_CLEARinitializer for SDLK_RETURNinitializer for SDLK_PAUSEinitializer for SDLK_ESCAPEinitializer for SDLK_SPACEinitializer for SDLK_EXCLAIMinitializer for SDLK_QUOTEDBLinitializer for SDLK_HASHinitializer for SDLK_DOLLARinitializer for SDLK_AMPERSANDinitializer for SDLK_QUOTEinitializer for SDLK_LEFTPARENinitializer for SDLK_RIGHTPARENinitializer for SDLK_ASTERISKinitializer for SDLK_PLUSinitializer for SDLK_COMMAinitializer for SDLK_MINUSinitializer for SDLK_PERIODinitializer for SDLK_SLASHinitializer for SDLK_0initializer for SDLK_1initializer for SDLK_2initializer for SDLK_3initializer for SDLK_4initializer for SDLK_5initializer for SDLK_6initializer for SDLK_7initializer for SDLK_8initializer for SDLK_9initializer for SDLK_COLONinitializer for SDLK_SEMICOLONinitializer for SDLK_LESSinitializer for SDLK_EQUALSinitializer for SDLK_GREATERinitializer for SDLK_QUESTIONinitializer for SDLK_ATinitializer for SDLK_LEFTBRACKETinitializer for SDLK_BACKSLASHinitializer for SDLK_RIGHTBRACKETinitializer for SDLK_CARETinitializer for SDLK_UNDERSCOREinitializer for SDLK_BACKQUOTEinitializer for SDLK_ainitializer for SDLK_binitializer for SDLK_cinitializer for SDLK_dinitializer for SDLK_einitializer for SDLK_finitializer for SDLK_ginitializer for SDLK_hinitializer for SDLK_iinitializer for SDLK_jinitializer for SDLK_kinitializer for SDLK_linitializer for SDLK_minitializer for SDLK_ninitializer for SDLK_oinitializer for SDLK_pinitializer for SDLK_qinitializer for SDLK_rinitializer for SDLK_sinitializer for SDLK_tinitializer for SDLK_uinitializer for SDLK_vinitializer for SDLK_winitializer for SDLK_xinitializer for SDLK_yinitializer for SDLK_zinitializer for SDLK_DELETEinitializer for SDLK_WORLD_0initializer for SDLK_WORLD_1initializer for SDLK_WORLD_2initializer for SDLK_WORLD_3initializer for SDLK_WORLD_4initializer for SDLK_WORLD_5initializer for SDLK_WORLD_6initializer for SDLK_WORLD_7initializer for SDLK_WORLD_8initializer for SDLK_WORLD_9initializer for SDLK_WORLD_10initializer for SDLK_WORLD_11initializer for SDLK_WORLD_12initializer for SDLK_WORLD_13initializer for SDLK_WORLD_14initializer for SDLK_WORLD_15initializer for SDLK_WORLD_16initializer for SDLK_WORLD_17initializer for SDLK_WORLD_18initializer for SDLK_WORLD_19initializer for SDLK_WORLD_20initializer for SDLK_WORLD_21initializer for SDLK_WORLD_22initializer for SDLK_WORLD_23initializer for SDLK_WORLD_24initializer for SDLK_WORLD_25initializer for SDLK_WORLD_26initializer for SDLK_WORLD_27initializer for SDLK_WORLD_28initializer for SDLK_WORLD_29initializer for SDLK_WORLD_30initializer for SDLK_WORLD_31initializer for SDLK_WORLD_32initializer for SDLK_WORLD_33initializer for SDLK_WORLD_34initializer for SDLK_WORLD_35initializer for SDLK_WORLD_36initializer for SDLK_WORLD_37initializer for SDLK_WORLD_38initializer for SDLK_WORLD_39initializer for SDLK_WORLD_40initializer for SDLK_WORLD_41initializer for SDLK_WORLD_42initializer for SDLK_WORLD_43initializer for SDLK_WORLD_44initializer for SDLK_WORLD_45initializer for SDLK_WORLD_46initializer for SDLK_WORLD_47initializer for SDLK_WORLD_48initializer for SDLK_WORLD_49initializer for SDLK_WORLD_50initializer for SDLK_WORLD_51initializer for SDLK_WORLD_52initializer for SDLK_WORLD_53initializer for SDLK_WORLD_54initializer for SDLK_WORLD_55initializer for SDLK_WORLD_56initializer for SDLK_WORLD_57initializer for SDLK_WORLD_58initializer for SDLK_WORLD_59initializer for SDLK_WORLD_60initializer for SDLK_WORLD_61initializer for SDLK_WORLD_62initializer for SDLK_WORLD_63initializer for SDLK_WORLD_64initializer for SDLK_WORLD_65initializer for SDLK_WORLD_66initializer for SDLK_WORLD_67initializer for SDLK_WORLD_68initializer for SDLK_WORLD_69initializer for SDLK_WORLD_70initializer for SDLK_WORLD_71initializer for SDLK_WORLD_72initializer for SDLK_WORLD_73initializer for SDLK_WORLD_74initializer for SDLK_WORLD_75initializer for SDLK_WORLD_76initializer for SDLK_WORLD_77initializer for SDLK_WORLD_78initializer for SDLK_WORLD_79initializer for SDLK_WORLD_80initializer for SDLK_WORLD_81initializer for SDLK_WORLD_82initializer for SDLK_WORLD_83initializer for SDLK_WORLD_84initializer for SDLK_WORLD_85initializer for SDLK_WORLD_86initializer for SDLK_WORLD_87initializer for SDLK_WORLD_88initializer for SDLK_WORLD_89initializer for SDLK_WORLD_90initializer for SDLK_WORLD_91initializer for SDLK_WORLD_92initializer for SDLK_WORLD_93initializer for SDLK_WORLD_94initializer for SDLK_WORLD_95initializer for SDLK_KP0initializer for SDLK_KP1initializer for SDLK_KP2initializer for SDLK_KP3initializer for SDLK_KP4initializer for SDLK_KP5initializer for SDLK_KP6initializer for SDLK_KP7initializer for SDLK_KP8initializer for SDLK_KP9initializer for SDLK_KP_PERIODinitializer for SDLK_KP_DIVIDEinitializer for SDLK_KP_MULTIPLYinitializer for SDLK_KP_MINUSinitializer for SDLK_KP_PLUSinitializer for SDLK_KP_ENTERinitializer for SDLK_KP_EQUALSinitializer for SDLK_UPinitializer for SDLK_DOWNinitializer for SDLK_RIGHTinitializer for SDLK_LEFTinitializer for SDLK_INSERTinitializer for SDLK_HOMEinitializer for SDLK_ENDinitializer for SDLK_PAGEUPinitializer for SDLK_PAGEDOWNinitializer for SDLK_F1initializer for SDLK_F2initializer for SDLK_F3initializer for SDLK_F4initializer for SDLK_F5initializer for SDLK_F6initializer for SDLK_F7initializer for SDLK_F8initializer for SDLK_F9initializer for SDLK_F10initializer for SDLK_F11initializer for SDLK_F12initializer for SDLK_F13initializer for SDLK_F14initializer for SDLK_F15initializer for SDLK_NUMLOCKinitializer for SDLK_CAPSLOCKinitializer for SDLK_SCROLLOCKinitializer for SDLK_RSHIFTinitializer for SDLK_LSHIFTinitializer for SDLK_RCTRLinitializer for SDLK_LCTRLinitializer for SDLK_RALTinitializer for SDLK_LALTinitializer for SDLK_RMETAinitializer for SDLK_LMETAinitializer for SDLK_LSUPERinitializer for SDLK_RSUPERinitializer for SDLK_MODEinitializer for SDLK_COMPOSEinitializer for SDLK_HELPinitializer for SDLK_PRINTinitializer for SDLK_SYSREQinitializer for SDLK_BREAKinitializer for SDLK_MENUinitializer for SDLK_POWERinitializer for SDLK_EUROinitializer for SDLK_UNDOinitializer for SDLK_LASTinitializer for SDL_GRAB_QUERYinitializer for SDL_GRAB_OFFinitializer for SDL_GRAB_ONinitializer for SDL_GRAB_FULLSCREENinitializer for SDL_GL_RED_SIZEinitializer for SDL_GL_GREEN_SIZEinitializer for SDL_GL_BLUE_SIZEinitializer for SDL_GL_ALPHA_SIZEinitializer for SDL_GL_BUFFER_SIZEinitializer for SDL_GL_DOUBLEBUFFERinitializer for SDL_GL_DEPTH_SIZEinitializer for SDL_GL_STENCIL_SIZEinitializer for SDL_GL_ACCUM_RED_SIZEinitializer for SDL_GL_ACCUM_GREEN_SIZEinitializer for SDL_GL_ACCUM_BLUE_SIZEinitializer for SDL_GL_ACCUM_ALPHA_SIZEinitializer for SDL_GL_STEREOinitializer for SDL_GL_MULTISAMPLEBUFFERSinitializer for SDL_GL_MULTISAMPLESAMPLESinitializer for SDL_GL_ACCELERATED_VISUALinitializer for SDL_GL_SWAP_CONTROLinitializer for SDL_ADDEVENTinitializer for SDL_PEEKEVENTinitializer for SDL_GETEVENTinitializer for SDL_ACTIVEEVENTMASKinitializer for SDL_KEYDOWNMASKinitializer for SDL_KEYUPMASKinitializer for SDL_KEYEVENTMASKinitializer for SDL_MOUSEMOTIONMASKinitializer for SDL_MOUSEBUTTONDOWNMASKinitializer for SDL_MOUSEBUTTONUPMASKinitializer for SDL_MOUSEEVENTMASKinitializer for SDL_JOYAXISMOTIONMASKinitializer for SDL_JOYBALLMOTIONMASKinitializer for SDL_JOYHATMOTIONMASKinitializer for SDL_JOYBUTTONDOWNMASKinitializer for SDL_JOYBUTTONUPMASKinitializer for SDL_JOYEVENTMASKinitializer for SDL_VIDEORESIZEMASKinitializer for SDL_VIDEOEXPOSEMASKinitializer for SDL_QUITMASKinitializer for SDL_SYSWMEVENTMASKinitializer for SDL_NOEVENTinitializer for SDL_ACTIVEEVENTinitializer for SDL_KEYDOWNinitializer for SDL_KEYUPinitializer for SDL_MOUSEMOTIONinitializer for SDL_MOUSEBUTTONDOWNinitializer for SDL_MOUSEBUTTONUPinitializer for SDL_JOYAXISMOTIONinitializer for SDL_JOYBALLMOTIONinitializer for SDL_JOYHATMOTIONinitializer for SDL_JOYBUTTONDOWNinitializer for SDL_JOYBUTTONUPinitializer for SDL_QUITinitializer for SDL_SYSWMEVENTinitializer for SDL_EVENT_RESERVEDAinitializer for SDL_EVENT_RESERVEDBinitializer for SDL_VIDEORESIZEinitializer for SDL_VIDEOEXPOSEinitializer for SDL_EVENT_RESERVED2initializer for SDL_EVENT_RESERVED3initializer for SDL_EVENT_RESERVED4initializer for SDL_EVENT_RESERVED5initializer for SDL_EVENT_RESERVED6initializer for SDL_EVENT_RESERVED7initializer for SDL_USEREVENTinitializer for SDL_NUMEVENTSinitializer for sdl_to_keycodeinitializer for fmtinitializer for retvalinitializer for _max1initializer for _max2initializer for optinitializer for sandbox_cmdline_option_show_of_platdata_ptrinitializer for sandbox_cmdline_option_show_of_platdatainitializer for sandbox_cmdline_option_log_level_ptrinitializer for sandbox_cmdline_option_log_levelinitializer for sandbox_cmdline_option_verbose_ptrinitializer for sandbox_cmdline_option_verboseinitializer for sandbox_cmdline_option_terminal_ptrinitializer for sandbox_cmdline_option_terminalinitializer for term_argsinitializer for sandbox_cmdline_option_show_lcd_ptrinitializer for sandbox_cmdline_option_show_lcdinitializer for sandbox_cmdline_option_ignore_missing_ptrinitializer for sandbox_cmdline_option_ignore_missinginitializer for sandbox_cmdline_option_write_ptrinitializer for sandbox_cmdline_option_writeinitializer for sandbox_cmdline_option_read_ptrinitializer for sandbox_cmdline_option_readinitializer for sandbox_cmdline_option_state_ptrinitializer for sandbox_cmdline_option_stateinitializer for sandbox_cmdline_option_rm_memory_ptrinitializer for sandbox_cmdline_option_rm_memoryinitializer for sandbox_cmdline_option_memory_ptrinitializer for sandbox_cmdline_option_memoryinitializer for sandbox_cmdline_option_jump_ptrinitializer for sandbox_cmdline_option_jumpinitializer for sandbox_cmdline_option_interactive_ptrinitializer for sandbox_cmdline_option_interactiveinitializer for sandbox_cmdline_option_default_fdt_ptrinitializer for sandbox_cmdline_option_default_fdtinitializer for sandbox_cmdline_option_fdt_ptrinitializer for sandbox_cmdline_option_fdtinitializer for sandbox_cmdline_option_command_ptrinitializer for sandbox_cmdline_option_commandinitializer for sandbox_cmdline_option_boot_ptrinitializer for sandbox_cmdline_option_bootinitializer for sandbox_cmdline_option_help_ptrinitializer for sandbox_cmdline_option_helpinitializer for blobinitializer for zimageinitializer for setup_sectsinitializer for syssizeinitializer for arm_hdrinitializer for opsinitializer for CBI_TAG_BOARD_VERSIONinitializer for CBI_TAG_OEM_IDinitializer for CBI_TAG_SKU_IDinitializer for CBI_TAG_COUNTinitializer for RWSIG_ACTION_ABORTinitializer for RWSIG_ACTION_CONTINUEinitializer for PD_SUSPENDinitializer for PD_RESUMEinitializer for PD_RESETinitializer for PD_CONTROL_DISABLEinitializer for PD_EXIT_MODEinitializer for PD_ENTER_MODEinitializer for PD_MODE_CMD_COUNTinitializer for OVERRIDE_DONT_CHARGEinitializer for OVERRIDE_OFFinitializer for USB_PD_FW_REBOOTinitializer for USB_PD_FW_FLASH_ERASEinitializer for USB_PD_FW_FLASH_WRITEinitializer for USB_PD_FW_ERASE_SIGinitializer for USB_PD_PORT_POWER_DISCONNECTEDinitializer for USB_PD_PORT_POWER_SOURCEinitializer for USB_PD_PORT_POWER_SINKinitializer for USB_PD_PORT_POWER_SINK_NOT_CHARGINGinitializer for USB_CHG_TYPE_NONEinitializer for USB_CHG_TYPE_PDinitializer for USB_CHG_TYPE_Cinitializer for USB_CHG_TYPE_PROPRIETARYinitializer for USB_CHG_TYPE_BC12_DCPinitializer for USB_CHG_TYPE_BC12_CDPinitializer for USB_CHG_TYPE_BC12_SDPinitializer for USB_CHG_TYPE_OTHERinitializer for USB_CHG_TYPE_VBUSinitializer for USB_CHG_TYPE_UNKNOWNinitializer for USB_PD_CTRL_SWAP_NONEinitializer for USB_PD_CTRL_SWAP_DATAinitializer for USB_PD_CTRL_SWAP_POWERinitializer for USB_PD_CTRL_SWAP_VCONNinitializer for USB_PD_CTRL_SWAP_COUNTinitializer for USB_PD_CTRL_MUX_NO_CHANGEinitializer for USB_PD_CTRL_MUX_NONEinitializer for USB_PD_CTRL_MUX_USBinitializer for USB_PD_CTRL_MUX_DPinitializer for USB_PD_CTRL_MUX_DOCKinitializer for USB_PD_CTRL_MUX_AUTOinitializer for USB_PD_CTRL_MUX_COUNTinitializer for USB_PD_CTRL_ROLE_NO_CHANGEinitializer for USB_PD_CTRL_ROLE_TOGGLE_ONinitializer for USB_PD_CTRL_ROLE_TOGGLE_OFFinitializer for USB_PD_CTRL_ROLE_FORCE_SINKinitializer for USB_PD_CTRL_ROLE_FORCE_SOURCEinitializer for USB_PD_CTRL_ROLE_COUNTinitializer for PD_CHARGE_NO_CHANGEinitializer for PD_CHARGE_NONEinitializer for PD_CHARGE_5Vinitializer for PD_CHARGE_MAXinitializer for EC_REBOOT_CANCELinitializer for EC_REBOOT_JUMP_ROinitializer for EC_REBOOT_JUMP_RWinitializer for EC_REBOOT_COLDinitializer for EC_REBOOT_DISABLE_JUMPinitializer for EC_REBOOT_HIBERNATEinitializer for EC_REBOOT_HIBERNATE_CLEAR_AP_OFFinitializer for EC_CMD_I2C_PASSTHRU_PROTECT_STATUSinitializer for EC_CMD_I2C_PASSTHRU_PROTECT_ENABLEinitializer for EC_SB_FW_UPDATE_PREPAREinitializer for EC_SB_FW_UPDATE_INFOinitializer for EC_SB_FW_UPDATE_BEGINinitializer for EC_SB_FW_UPDATE_WRITEinitializer for EC_SB_FW_UPDATE_ENDinitializer for EC_SB_FW_UPDATE_STATUSinitializer for EC_SB_FW_UPDATE_PROTECTinitializer for EC_SB_FW_UPDATE_MAXinitializer for BATTERY_VENDOR_PARAM_MODE_GETinitializer for BATTERY_VENDOR_PARAM_MODE_SETinitializer for EC_DEVICE_EVENT_PARAM_GET_CURRENT_EVENTSinitializer for EC_DEVICE_EVENT_PARAM_GET_ENABLED_EVENTSinitializer for EC_DEVICE_EVENT_PARAM_SET_ENABLED_EVENTSinitializer for EC_DEVICE_EVENT_TRACKPADinitializer for EC_DEVICE_EVENT_DSPinitializer for EC_DEVICE_EVENT_WIFIinitializer for HOST_SLEEP_EVENT_S3_SUSPENDinitializer for HOST_SLEEP_EVENT_S3_RESUMEinitializer for HOST_SLEEP_EVENT_S0IX_SUSPENDinitializer for HOST_SLEEP_EVENT_S0IX_RESUMEinitializer for CS_PARAM_CHG_VOLTAGEinitializer for CS_PARAM_CHG_CURRENTinitializer for CS_PARAM_CHG_INPUT_CURRENTinitializer for CS_PARAM_CHG_STATUSinitializer for CS_PARAM_CHG_OPTIONinitializer for CS_PARAM_LIMIT_POWERinitializer for CS_NUM_BASE_PARAMSinitializer for CS_PARAM_CUSTOM_PROFILE_MINinitializer for CS_PARAM_CUSTOM_PROFILE_MAXinitializer for CHARGE_STATE_CMD_GET_STATEinitializer for CHARGE_STATE_CMD_GET_PARAMinitializer for CHARGE_STATE_CMD_SET_PARAMinitializer for CHARGE_STATE_NUM_CMDSinitializer for EC_LDO_STATE_OFFinitializer for EC_LDO_STATE_ONinitializer for CONSOLE_READ_NEXTinitializer for CONSOLE_READ_RECENTinitializer for CHARGE_CONTROL_NORMALinitializer for CHARGE_CONTROL_IDLEinitializer for CHARGE_CONTROL_DISCHARGEinitializer for EC_GPIO_GET_BY_NAMEinitializer for EC_GPIO_GET_COUNTinitializer for EC_GPIO_GET_INFOinitializer for EC_HOST_EVENT_MAINinitializer for EC_HOST_EVENT_Binitializer for EC_HOST_EVENT_SCI_MASKinitializer for EC_HOST_EVENT_SMI_MASKinitializer for EC_HOST_EVENT_ALWAYS_REPORT_MASKinitializer for EC_HOST_EVENT_ACTIVE_WAKE_MASKinitializer for EC_HOST_EVENT_LAZY_WAKE_MASK_S0IXinitializer for EC_HOST_EVENT_LAZY_WAKE_MASK_S3initializer for EC_HOST_EVENT_LAZY_WAKE_MASK_S5initializer for EC_HOST_EVENT_GETinitializer for EC_HOST_EVENT_SETinitializer for EC_HOST_EVENT_CLEARinitializer for EC_MKBP_EVENT_KEY_MATRIXinitializer for EC_MKBP_EVENT_HOST_EVENTinitializer for EC_MKBP_EVENT_SENSOR_FIFOinitializer for EC_MKBP_EVENT_BUTTONinitializer for EC_MKBP_EVENT_SWITCHinitializer for EC_MKBP_EVENT_FINGERPRINTinitializer for EC_MKBP_EVENT_SYSRQinitializer for EC_MKBP_EVENT_COUNTinitializer for EC_KEYSCAN_SEQ_FLAG_DONEinitializer for EC_KEYSCAN_SEQ_STATUSinitializer for EC_KEYSCAN_SEQ_CLEARinitializer for EC_KEYSCAN_SEQ_ADDinitializer for EC_KEYSCAN_SEQ_STARTinitializer for EC_KEYSCAN_SEQ_COLLECTinitializer for EC_MKBP_VALID_SCAN_PERIODinitializer for EC_MKBP_VALID_POLL_TIMEOUTinitializer for EC_MKBP_VALID_MIN_POST_SCAN_DELAYinitializer for EC_MKBP_VALID_OUTPUT_SETTLEinitializer for EC_MKBP_VALID_DEBOUNCE_DOWNinitializer for EC_MKBP_VALID_DEBOUNCE_UPinitializer for EC_MKBP_VALID_FIFO_MAX_DEPTHinitializer for EC_MKBP_FLAGS_ENABLEinitializer for EC_MKBP_INFO_KBDinitializer for EC_MKBP_INFO_SUPPORTEDinitializer for EC_MKBP_INFO_CURRENTinitializer for EC_TEMP_THRESH_WARNinitializer for EC_TEMP_THRESH_HIGHinitializer for EC_TEMP_THRESH_HALTinitializer for EC_TEMP_THRESH_COUNTinitializer for EC_PORT80_GET_INFOinitializer for EC_PORT80_READ_BUFFERinitializer for EC_POWER_BUTTON_ENABLE_PULSEinitializer for MOTIONSENSE_SPOOF_MODE_DISABLEinitializer for MOTIONSENSE_SPOOF_MODE_CUSTOMinitializer for MOTIONSENSE_SPOOF_MODE_LOCK_CURRENTinitializer for MOTIONSENSE_SPOOF_MODE_QUERYinitializer for MOTIONSENSE_ACTIVITY_RESERVEDinitializer for MOTIONSENSE_ACTIVITY_SIG_MOTIONinitializer for MOTIONSENSE_ACTIVITY_DOUBLE_TAPinitializer for MOTIONSENSE_CHIP_KXCJ9initializer for MOTIONSENSE_CHIP_LSM6DS0initializer for MOTIONSENSE_CHIP_BMI160initializer for MOTIONSENSE_CHIP_SI1141initializer for MOTIONSENSE_CHIP_SI1142initializer for MOTIONSENSE_CHIP_SI1143initializer for MOTIONSENSE_CHIP_KX022initializer for MOTIONSENSE_CHIP_L3GD20Hinitializer for MOTIONSENSE_CHIP_BMA255initializer for MOTIONSENSE_CHIP_BMP280initializer for MOTIONSENSE_CHIP_OPT3001initializer for MOTIONSENSE_LOC_BASEinitializer for MOTIONSENSE_LOC_LIDinitializer for MOTIONSENSE_LOC_MAXinitializer for MOTIONSENSE_TYPE_ACCELinitializer for MOTIONSENSE_TYPE_GYROinitializer for MOTIONSENSE_TYPE_MAGinitializer for MOTIONSENSE_TYPE_PROXinitializer for MOTIONSENSE_TYPE_LIGHTinitializer for MOTIONSENSE_TYPE_ACTIVITYinitializer for MOTIONSENSE_TYPE_BAROinitializer for MOTIONSENSE_TYPE_MAXinitializer for MOTIONSENSE_CMD_DUMPinitializer for MOTIONSENSE_CMD_INFOinitializer for MOTIONSENSE_CMD_EC_RATEinitializer for MOTIONSENSE_CMD_SENSOR_ODRinitializer for MOTIONSENSE_CMD_SENSOR_RANGEinitializer for MOTIONSENSE_CMD_KB_WAKE_ANGLEinitializer for MOTIONSENSE_CMD_DATAinitializer for MOTIONSENSE_CMD_FIFO_INFOinitializer for MOTIONSENSE_CMD_FIFO_FLUSHinitializer for MOTIONSENSE_CMD_FIFO_READinitializer for MOTIONSENSE_CMD_PERFORM_CALIBinitializer for MOTIONSENSE_CMD_SENSOR_OFFSETinitializer for MOTIONSENSE_CMD_LIST_ACTIVITIESinitializer for MOTIONSENSE_CMD_SET_ACTIVITYinitializer for MOTIONSENSE_CMD_LID_ANGLEinitializer for MOTIONSENSE_CMD_FIFO_INT_ENABLEinitializer for MOTIONSENSE_CMD_SPOOFinitializer for MOTIONSENSE_NUM_CMDSinitializer for EC_VBOOT_HASH_STATUS_NONEinitializer for EC_VBOOT_HASH_STATUS_DONEinitializer for EC_VBOOT_HASH_STATUS_BUSYinitializer for EC_VBOOT_HASH_TYPE_SHA256initializer for EC_VBOOT_HASH_GETinitializer for EC_VBOOT_HASH_ABORTinitializer for EC_VBOOT_HASH_STARTinitializer for EC_VBOOT_HASH_RECALCinitializer for EC_LED_COLOR_REDinitializer for EC_LED_COLOR_GREENinitializer for EC_LED_COLOR_BLUEinitializer for EC_LED_COLOR_YELLOWinitializer for EC_LED_COLOR_WHITEinitializer for EC_LED_COLOR_AMBERinitializer for EC_LED_COLOR_COUNTinitializer for EC_LED_ID_BATTERY_LEDinitializer for EC_LED_ID_POWER_LEDinitializer for EC_LED_ID_ADAPTER_LEDinitializer for EC_LED_ID_LEFT_LEDinitializer for EC_LED_ID_RIGHT_LEDinitializer for EC_LED_ID_RECOVERY_HW_REINIT_LEDinitializer for EC_LED_ID_SYSRQ_DEBUG_LEDinitializer for EC_LED_ID_COUNTinitializer for LIGHTBAR_CMD_DUMPinitializer for LIGHTBAR_CMD_OFFinitializer for LIGHTBAR_CMD_ONinitializer for LIGHTBAR_CMD_INITinitializer for LIGHTBAR_CMD_SET_BRIGHTNESSinitializer for LIGHTBAR_CMD_SEQinitializer for LIGHTBAR_CMD_REGinitializer for LIGHTBAR_CMD_SET_RGBinitializer for LIGHTBAR_CMD_GET_SEQinitializer for LIGHTBAR_CMD_DEMOinitializer for LIGHTBAR_CMD_GET_PARAMS_V0initializer for LIGHTBAR_CMD_SET_PARAMS_V0initializer for LIGHTBAR_CMD_VERSIONinitializer for LIGHTBAR_CMD_GET_BRIGHTNESSinitializer for LIGHTBAR_CMD_GET_RGBinitializer for LIGHTBAR_CMD_GET_DEMOinitializer for LIGHTBAR_CMD_GET_PARAMS_V1initializer for LIGHTBAR_CMD_SET_PARAMS_V1initializer for LIGHTBAR_CMD_SET_PROGRAMinitializer for LIGHTBAR_CMD_MANUAL_SUSPEND_CTRLinitializer for LIGHTBAR_CMD_SUSPENDinitializer for LIGHTBAR_CMD_RESUMEinitializer for LIGHTBAR_CMD_GET_PARAMS_V2_TIMINGinitializer for LIGHTBAR_CMD_SET_PARAMS_V2_TIMINGinitializer for LIGHTBAR_CMD_GET_PARAMS_V2_TAPinitializer for LIGHTBAR_CMD_SET_PARAMS_V2_TAPinitializer for LIGHTBAR_CMD_GET_PARAMS_V2_OSCILLATIONinitializer for LIGHTBAR_CMD_SET_PARAMS_V2_OSCILLATIONinitializer for LIGHTBAR_CMD_GET_PARAMS_V2_BRIGHTNESSinitializer for LIGHTBAR_CMD_SET_PARAMS_V2_BRIGHTNESSinitializer for LIGHTBAR_CMD_GET_PARAMS_V2_THRESHOLDSinitializer for LIGHTBAR_CMD_SET_PARAMS_V2_THRESHOLDSinitializer for LIGHTBAR_CMD_GET_PARAMS_V2_COLORSinitializer for LIGHTBAR_CMD_SET_PARAMS_V2_COLORSinitializer for LIGHTBAR_NUM_CMDSinitializer for EC_PWM_TYPE_GENERICinitializer for EC_PWM_TYPE_KB_LIGHTinitializer for EC_PWM_TYPE_DISPLAY_LIGHTinitializer for EC_PWM_TYPE_COUNTinitializer for EC_VBNV_CONTEXT_OP_READinitializer for EC_VBNV_CONTEXT_OP_WRITEinitializer for EC_FLASH_REGION_ROinitializer for EC_FLASH_REGION_ACTIVEinitializer for EC_FLASH_REGION_WP_ROinitializer for EC_FLASH_REGION_UPDATEinitializer for EC_FLASH_REGION_COUNTinitializer for FLASH_ERASE_SECTORinitializer for FLASH_ERASE_SECTOR_ASYNCinitializer for FLASH_ERASE_GET_RESULTinitializer for EC_FEATURE_LIMITEDinitializer for EC_FEATURE_FLASHinitializer for EC_FEATURE_PWM_FANinitializer for EC_FEATURE_PWM_KEYBinitializer for EC_FEATURE_LIGHTBARinitializer for EC_FEATURE_LEDinitializer for EC_FEATURE_MOTION_SENSEinitializer for EC_FEATURE_KEYBinitializer for EC_FEATURE_PSTOREinitializer for EC_FEATURE_PORT80initializer for EC_FEATURE_THERMALinitializer for EC_FEATURE_BKLIGHT_SWITCHinitializer for EC_FEATURE_WIFI_SWITCHinitializer for EC_FEATURE_HOST_EVENTSinitializer for EC_FEATURE_GPIOinitializer for EC_FEATURE_I2Cinitializer for EC_FEATURE_CHARGERinitializer for EC_FEATURE_BATTERYinitializer for EC_FEATURE_SMART_BATTERYinitializer for EC_FEATURE_HANG_DETECTinitializer for EC_FEATURE_PMUinitializer for EC_FEATURE_SUB_MCUinitializer for EC_FEATURE_USB_PDinitializer for EC_FEATURE_USB_MUXinitializer for EC_FEATURE_MOTION_SENSE_FIFOinitializer for EC_FEATURE_VSTOREinitializer for EC_FEATURE_USBC_SS_MUX_VIRTUALinitializer for EC_FEATURE_RTCinitializer for EC_FEATURE_FINGERPRINTinitializer for EC_FEATURE_TOUCHPADinitializer for EC_FEATURE_RWSIGinitializer for EC_FEATURE_DEVICE_EVENTinitializer for EC_FEATURE_UNIFIED_WAKE_MASKSinitializer for EC_COMMS_STATUS_PROCESSINGinitializer for EC_IMAGE_UNKNOWNinitializer for EC_IMAGE_ROinitializer for EC_IMAGE_RWinitializer for EC_HOST_EVENT_LID_CLOSEDinitializer for EC_HOST_EVENT_LID_OPENinitializer for EC_HOST_EVENT_POWER_BUTTONinitializer for EC_HOST_EVENT_AC_CONNECTEDinitializer for EC_HOST_EVENT_AC_DISCONNECTEDinitializer for EC_HOST_EVENT_BATTERY_LOWinitializer for EC_HOST_EVENT_BATTERY_CRITICALinitializer for EC_HOST_EVENT_BATTERYinitializer for EC_HOST_EVENT_THERMAL_THRESHOLDinitializer for EC_HOST_EVENT_DEVICEinitializer for EC_HOST_EVENT_THERMALinitializer for EC_HOST_EVENT_USB_CHARGERinitializer for EC_HOST_EVENT_KEY_PRESSEDinitializer for EC_HOST_EVENT_INTERFACE_READYinitializer for EC_HOST_EVENT_KEYBOARD_RECOVERYinitializer for EC_HOST_EVENT_THERMAL_SHUTDOWNinitializer for EC_HOST_EVENT_BATTERY_SHUTDOWNinitializer for EC_HOST_EVENT_THROTTLE_STARTinitializer for EC_HOST_EVENT_THROTTLE_STOPinitializer for EC_HOST_EVENT_HANG_DETECTinitializer for EC_HOST_EVENT_HANG_REBOOTinitializer for EC_HOST_EVENT_PD_MCUinitializer for EC_HOST_EVENT_BATTERY_STATUSinitializer for EC_HOST_EVENT_PANICinitializer for EC_HOST_EVENT_KEYBOARD_FASTBOOTinitializer for EC_HOST_EVENT_RTCinitializer for EC_HOST_EVENT_MKBPinitializer for EC_HOST_EVENT_USB_MUXinitializer for EC_HOST_EVENT_MODE_CHANGEinitializer for EC_HOST_EVENT_KEYBOARD_RECOVERY_HW_REINITinitializer for EC_HOST_EVENT_EXTENDEDinitializer for EC_HOST_EVENT_INVALIDinitializer for EC_RES_SUCCESSinitializer for EC_RES_INVALID_COMMANDinitializer for EC_RES_ERRORinitializer for EC_RES_INVALID_PARAMinitializer for EC_RES_ACCESS_DENIEDinitializer for EC_RES_INVALID_RESPONSEinitializer for EC_RES_INVALID_VERSIONinitializer for EC_RES_INVALID_CHECKSUMinitializer for EC_RES_IN_PROGRESSinitializer for EC_RES_UNAVAILABLEinitializer for EC_RES_TIMEOUTinitializer for EC_RES_OVERFLOWinitializer for EC_RES_INVALID_HEADERinitializer for EC_RES_REQUEST_TRUNCATEDinitializer for EC_RES_RESPONSE_TOO_BIGinitializer for EC_RES_BUS_ERRORinitializer for EC_RES_BUSYinitializer for MSG_HEADERinitializer for MSG_HEADER_BYTESinitializer for MSG_TRAILER_BYTESinitializer for MSG_PROTO_BYTESinitializer for MSG_BYTESinitializer for GPIOF_INPUTinitializer for GPIOF_OUTPUTinitializer for GPIOF_UNUSEDinitializer for GPIOF_UNKNOWNinitializer for GPIOF_FUNCinitializer for GPIOF_COUNTinitializer for FMAP_HASH_NONEinitializer for FMAP_HASH_SHA1initializer for FMAP_HASH_SHA256initializer for FMAP_COMPRESS_NONEinitializer for FMAP_COMPRESS_LZ4initializer for CROS_EC_OKinitializer for CROS_EC_ERRinitializer for CROS_EC_ERR_FDT_DECODEinitializer for CROS_EC_ERR_CHECK_VERSIONinitializer for CROS_EC_ERR_READ_IDinitializer for CROS_EC_ERR_DEV_INITinitializer for LEDST_OFFinitializer for LEDST_ONinitializer for LEDST_TOGGLEinitializer for LEDST_BLINKinitializer for LEDST_COUNTinitializer for SIE_TEST_MODE_NONEinitializer for SIE_TEST_MODE_SINGLE_BYTEinitializer for SYSCON0initializer for SYSCON1initializer for SYSCON_COUNTinitializer for _u_boot_list_2_driver_info_2_gpio_sandboxinitializer for _u_boot_list_2_cmd_2_ab_selectinitializer for AVB_DESCRIPTOR_TAG_PROPERTYinitializer for AVB_DESCRIPTOR_TAG_HASHTREEinitializer for AVB_DESCRIPTOR_TAG_HASHinitializer for AVB_DESCRIPTOR_TAG_KERNEL_CMDLINEinitializer for AVB_DESCRIPTOR_TAG_CHAIN_PARTITIONinitializer for AVB_ALGORITHM_TYPE_NONEinitializer for AVB_ALGORITHM_TYPE_SHA256_RSA2048initializer for AVB_ALGORITHM_TYPE_SHA256_RSA4096initializer for AVB_ALGORITHM_TYPE_SHA256_RSA8192initializer for AVB_ALGORITHM_TYPE_SHA512_RSA2048initializer for AVB_ALGORITHM_TYPE_SHA512_RSA4096initializer for AVB_ALGORITHM_TYPE_SHA512_RSA8192initializer for _AVB_ALGORITHM_NUM_TYPESinitializer for AVB_DIGEST_TYPE_SHA256initializer for AVB_DIGEST_TYPE_SHA512initializer for AVB_HASH_DESCRIPTOR_FLAGS_DO_NOT_USE_ABinitializer for AVB_HASHTREE_DESCRIPTOR_FLAGS_DO_NOT_USE_ABinitializer for AVB_KERNEL_CMDLINE_FLAGS_USE_ONLY_IF_HASHTREE_NOT_DISABLEDinitializer for AVB_KERNEL_CMDLINE_FLAGS_USE_ONLY_IF_HASHTREE_DISABLEDinitializer for AVB_IO_RESULT_OKinitializer for AVB_IO_RESULT_ERROR_OOMinitializer for AVB_IO_RESULT_ERROR_IOinitializer for AVB_IO_RESULT_ERROR_NO_SUCH_PARTITIONinitializer for AVB_IO_RESULT_ERROR_RANGE_OUTSIDE_PARTITIONinitializer for AVB_IO_RESULT_ERROR_NO_SUCH_VALUEinitializer for AVB_IO_RESULT_ERROR_INVALID_VALUE_SIZEinitializer for AVB_IO_RESULT_ERROR_INSUFFICIENT_SPACEinitializer for AVB_VBMETA_VERIFY_RESULT_OKinitializer for AVB_VBMETA_VERIFY_RESULT_OK_NOT_SIGNEDinitializer for AVB_VBMETA_VERIFY_RESULT_INVALID_VBMETA_HEADERinitializer for AVB_VBMETA_VERIFY_RESULT_UNSUPPORTED_VERSIONinitializer for AVB_VBMETA_VERIFY_RESULT_HASH_MISMATCHinitializer for AVB_VBMETA_VERIFY_RESULT_SIGNATURE_MISMATCHinitializer for AVB_VBMETA_IMAGE_FLAGS_HASHTREE_DISABLEDinitializer for AVB_VBMETA_IMAGE_FLAGS_VERIFICATION_DISABLEDinitializer for AVB_SLOT_VERIFY_FLAGS_NONEinitializer for AVB_SLOT_VERIFY_FLAGS_ALLOW_VERIFICATION_ERRORinitializer for AVB_HASHTREE_ERROR_MODE_RESTART_AND_INVALIDATEinitializer for AVB_HASHTREE_ERROR_MODE_RESTARTinitializer for AVB_HASHTREE_ERROR_MODE_EIOinitializer for AVB_HASHTREE_ERROR_MODE_LOGGINGinitializer for AVB_SLOT_VERIFY_RESULT_OKinitializer for AVB_SLOT_VERIFY_RESULT_ERROR_OOMinitializer for AVB_SLOT_VERIFY_RESULT_ERROR_IOinitializer for AVB_SLOT_VERIFY_RESULT_ERROR_VERIFICATIONinitializer for AVB_SLOT_VERIFY_RESULT_ERROR_ROLLBACK_INDEXinitializer for AVB_SLOT_VERIFY_RESULT_ERROR_PUBLIC_KEY_REJECTEDinitializer for AVB_SLOT_VERIFY_RESULT_ERROR_INVALID_METADATAinitializer for AVB_SLOT_VERIFY_RESULT_ERROR_UNSUPPORTED_VERSIONinitializer for AVB_SLOT_VERIFY_RESULT_ERROR_INVALID_ARGUMENTinitializer for MMC_HWPART_CONF_CHECKinitializer for MMC_HWPART_CONF_SETinitializer for MMC_HWPART_CONF_COMPLETEinitializer for MMC_LEGACYinitializer for SD_LEGACYinitializer for MMC_HSinitializer for SD_HSinitializer for MMC_HS_52initializer for MMC_DDR_52initializer for UHS_SDR12initializer for UHS_SDR25initializer for UHS_SDR50initializer for UHS_DDR50initializer for UHS_SDR104initializer for MMC_HS_200initializer for MMC_HS_400initializer for MMC_HS_400_ESinitializer for MMC_MODES_ENDinitializer for MMC_SIGNAL_VOLTAGE_000initializer for MMC_SIGNAL_VOLTAGE_120initializer for MMC_SIGNAL_VOLTAGE_180initializer for MMC_SIGNAL_VOLTAGE_330initializer for part_sizeinitializer for IO_READinitializer for IO_WRITEinitializer for AVB_GREENinitializer for AVB_YELLOWinitializer for AVB_ORANGEinitializer for AVB_REDinitializer for unlockedinitializer for resinitializer for bytes_readinitializer for iinitializer for _u_boot_list_2_cmd_2_avbinitializer for cmd_avbinitializer for requested_partitionsinitializer for AXI_SIZE_8initializer for AXI_SIZE_16initializer for AXI_SIZE_32initializer for DISP_LINE_LENinitializer for linebytesinitializer for _u_boot_list_2_cmd_2_axiinitializer for axi_help_textinitializer for cmd_axi_subinitializer for dp_last_lengthinitializer for bdinitializer for _u_boot_list_2_cmd_2_bdinfoinitializer for indexinitializer for parentinitializer for _u_boot_list_2_cmd_2_unbindinitializer for _u_boot_list_2_cmd_2_bindinitializer for if_nameinitializer for devinitializer for addrinitializer for blkinitializer for cntinitializer for _u_boot_list_2_cmd_2_blkcacheinitializer for cmd_blkc_subinitializer for SPLASH_STORAGE_RAWinitializer for SPLASH_STORAGE_FSinitializer for SPLASH_STORAGE_FITinitializer for SPLASH_STORAGE_NANDinitializer for SPLASH_STORAGE_SFinitializer for SPLASH_STORAGE_MMCinitializer for SPLASH_STORAGE_USBinitializer for SPLASH_STORAGE_SATAinitializer for VIDEO_BPP1initializer for VIDEO_BPP2initializer for VIDEO_BPP4initializer for VIDEO_BPP8initializer for VIDEO_BPP16initializer for VIDEO_BPP32initializer for VIDEO_ACTIVE_HIGHinitializer for VIDEO_ACTIVE_LOWinitializer for bmpinitializer for bmp_alloc_addrinitializer for aligninitializer for xinitializer for yinitializer for _u_boot_list_2_cmd_2_bmpinitializer for cmd_bmp_subinitializer for rcodeinitializer for _u_boot_list_2_cmd_2_resetinitializer for _u_boot_list_2_cmd_2_goinitializer for bootcountinitializer for bootlimitinitializer for _u_boot_list_2_cmd_2_bootcountinitializer for bootcount_help_textinitializer for bootcount_subinitializer for EFIET_ENDinitializer for EFIET_MEMORY_MAPinitializer for EFIET_GOP_MODEinitializer for EFIET_SYS_TABLEinitializer for EFIET_MEMORY_COUNTinitializer for ALL_HANDLESinitializer for BY_REGISTER_NOTIFYinitializer for BY_PROTOCOLinitializer for EFI_RESERVED_MEMORY_TYPEinitializer for EFI_LOADER_CODEinitializer for EFI_LOADER_DATAinitializer for EFI_BOOT_SERVICES_CODEinitializer for EFI_BOOT_SERVICES_DATAinitializer for EFI_RUNTIME_SERVICES_CODEinitializer for EFI_RUNTIME_SERVICES_DATAinitializer for EFI_CONVENTIONAL_MEMORYinitializer for EFI_UNUSABLE_MEMORYinitializer for EFI_ACPI_RECLAIM_MEMORYinitializer for EFI_ACPI_MEMORY_NVSinitializer for EFI_MMAP_IOinitializer for EFI_MMAP_IO_PORTinitializer for EFI_PAL_CODEinitializer for EFI_PERSISTENT_MEMORY_TYPEinitializer for EFI_MAX_MEMORY_TYPEinitializer for EFI_TABLE_ENDinitializer for EFI_NETWORK_STOPPEDinitializer for EFI_NETWORK_STARTEDinitializer for EFI_NETWORK_INITIALIZEDinitializer for EFI_KEY_LCTRLinitializer for EFI_KEY_A0initializer for EFI_KEY_LALTinitializer for EFI_KEY_SPACE_BARinitializer for EFI_KEY_A2initializer for EFI_KEY_A3initializer for EFI_KEY_A4initializer for EFI_KEY_RCTRLinitializer for EFI_KEY_LEFT_ARROWinitializer for EFI_KEY_DOWN_ARROWinitializer for EFI_KEY_RIGHT_ARROWinitializer for EFI_KEY_ZEROinitializer for EFI_KEY_PERIODinitializer for EFI_KEY_ENTERinitializer for EFI_KEY_LSHIFTinitializer for EFI_KEY_B0initializer for EFI_KEY_B1initializer for EFI_KEY_B2initializer for EFI_KEY_B3initializer for EFI_KEY_B4initializer for EFI_KEY_B5initializer for EFI_KEY_B6initializer for EFI_KEY_B7initializer for EFI_KEY_B8initializer for EFI_KEY_B9initializer for EFI_KEY_B10initializer for EFI_KEY_RSHIFTinitializer for EFI_KEY_UP_ARROWinitializer for EFI_KEY_ONEinitializer for EFI_KEY_TWOinitializer for EFI_KEY_THREEinitializer for EFI_KEY_CAPS_LOCKinitializer for EFI_KEY_C1initializer for EFI_KEY_C2initializer for EFI_KEY_C3initializer for EFI_KEY_C4initializer for EFI_KEY_C5initializer for EFI_KEY_C6initializer for EFI_KEY_C7initializer for EFI_KEY_C8initializer for EFI_KEY_C9initializer for EFI_KEY_C10initializer for EFI_KEY_C11initializer for EFI_KEY_C12initializer for EFI_KEY_FOURinitializer for EFI_KEY_FIVEinitializer for EFI_KEY_SIXinitializer for EFI_KEY_PLUSinitializer for EFI_KEY_TABinitializer for EFI_KEY_D1initializer for EFI_KEY_D2initializer for EFI_KEY_D3initializer for EFI_KEY_D4initializer for EFI_KEY_D5initializer for EFI_KEY_D6initializer for EFI_KEY_D7initializer for EFI_KEY_D8initializer for EFI_KEY_D9initializer for EFI_KEY_D10initializer for EFI_KEY_D11initializer for EFI_KEY_D12initializer for EFI_KEY_D13initializer for EFI_KEY_DELinitializer for EFI_KEY_ENDinitializer for EFI_KEY_PG_DNinitializer for EFI_KEY_SEVENinitializer for EFI_KEY_EIGHTinitializer for EFI_KEY_NINEinitializer for EFI_KEY_E0initializer for EFI_KEY_E1initializer for EFI_KEY_E2initializer for EFI_KEY_E3initializer for EFI_KEY_E4initializer for EFI_KEY_E5initializer for EFI_KEY_E6initializer for EFI_KEY_E7initializer for EFI_KEY_E8initializer for EFI_KEY_E9initializer for EFI_KEY_E10initializer for EFI_KEY_E11initializer for EFI_KEY_E12initializer for EFI_KEY_BACK_SPACEinitializer for EFI_KEY_INSinitializer for EFI_KEY_HOMEinitializer for EFI_KEY_PG_UPinitializer for EFI_KEY_NLCKinitializer for EFI_KEY_SLASHinitializer for EFI_KEY_ASTERISKinitializer for EFI_KEY_MINUSinitializer for EFI_KEY_ESCinitializer for EFI_KEY_F1initializer for EFI_KEY_F2initializer for EFI_KEY_F3initializer for EFI_KEY_F4initializer for EFI_KEY_F5initializer for EFI_KEY_F6initializer for EFI_KEY_F7initializer for EFI_KEY_F8initializer for EFI_KEY_F9initializer for EFI_KEY_F10initializer for EFI_KEY_F11initializer for EFI_KEY_F12initializer for EFI_KEY_PRINTinitializer for EFI_KEY_SLCKinitializer for EFI_KEY_PAUSEinitializer for EFI_RESET_COLDinitializer for EFI_RESET_WARMinitializer for EFI_RESET_SHUTDOWNinitializer for EFI_RESET_PLATFORM_SPECIFICinitializer for EFI_TIMER_STOPinitializer for EFI_TIMER_PERIODICinitializer for EFI_TIMER_RELATIVEinitializer for EFI_OBJECT_TYPE_UNDEFINEDinitializer for EFI_OBJECT_TYPE_U_BOOT_FIRMWAREinitializer for EFI_OBJECT_TYPE_LOADED_IMAGEinitializer for EFI_OBJECT_TYPE_STARTED_IMAGEinitializer for EFI_EXECUTE_BEFORE_BOOTTIME_EXITinitializer for EFI_SETUP_BEFORE_BOOTTIME_EXITinitializer for EFI_SETUP_AFTER_BOOTTIME_EXITinitializer for image_tmpinitializer for file_pathinitializer for mem_handleinitializer for _rinitializer for exit_data_sizeinitializer for exit_datainitializer for imginitializer for ram_startinitializer for ram_sizeinitializer for fdt_ram_startinitializer for envinitializer for _u_boot_list_2_cmd_2_bootefiinitializer for bootefi_help_textinitializer for FINDinitializer for ENTERinitializer for env_op_createinitializer for env_op_deleteinitializer for env_op_overwriteinitializer for env_flags_varaccess_anyinitializer for env_flags_varaccess_readonlyinitializer for env_flags_varaccess_writeonceinitializer for env_flags_varaccess_changedefaultinitializer for env_flags_varaccess_endinitializer for env_flags_vartype_stringinitializer for env_flags_vartype_decimalinitializer for env_flags_vartype_hexinitializer for env_flags_vartype_boolinitializer for env_flags_vartype_ipaddrinitializer for env_flags_vartype_macaddrinitializer for env_flags_vartype_endinitializer for ENVOP_GET_CHARinitializer for ENVOP_INITinitializer for ENVOP_LOADinitializer for ENVOP_SAVEinitializer for ENVOP_ERASEinitializer for ENVL_UNKNOWNinitializer for ENVL_EEPROMinitializer for ENVL_EXT4initializer for ENVL_FATinitializer for ENVL_FLASHinitializer for ENVL_MMCinitializer for ENVL_NANDinitializer for ENVL_NVRAMinitializer for ENVL_ONENANDinitializer for ENVL_REMOTEinitializer for ENVL_SPI_FLASHinitializer for ENVL_UBIinitializer for ENVL_NOWHEREinitializer for ENVL_COUNTinitializer for ENV_INVALIDinitializer for ENV_VALIDinitializer for ENV_REDUNDinitializer for MTD_FILE_MODE_NORMALinitializer for MTD_FILE_MODE_OTP_FACTORYinitializer for MTD_FILE_MODE_OTP_USERinitializer for MTD_FILE_MODE_RAWinitializer for MTD_OPS_PLACE_OOBinitializer for MTD_OPS_AUTO_OOBinitializer for MTD_OPS_RAWinitializer for __baseinitializer for __resinitializer for __n_loinitializer for ___ninitializer for ___bitsinitializer for m_loinitializer for n_loinitializer for n_hiinitializer for m_hiinitializer for FL_READYinitializer for FL_STATUSinitializer for FL_CFI_QUERYinitializer for FL_JEDEC_QUERYinitializer for FL_ERASINGinitializer for FL_ERASE_SUSPENDINGinitializer for FL_ERASE_SUSPENDEDinitializer for FL_WRITINGinitializer for FL_WRITING_TO_BUFFERinitializer for FL_OTP_WRITEinitializer for FL_WRITE_SUSPENDINGinitializer for FL_WRITE_SUSPENDEDinitializer for FL_PM_SUSPENDEDinitializer for FL_SYNCINGinitializer for FL_UNLOADINGinitializer for FL_LOCKINGinitializer for FL_UNLOCKINGinitializer for FL_POINTinitializer for FL_XIP_WHILE_ERASINGinitializer for FL_XIP_WHILE_WRITINGinitializer for FL_SHUTDOWNinitializer for FL_READINGinitializer for FL_CACHEDPRGinitializer for FL_RESETINGinitializer for FL_OTPINGinitializer for FL_PREPARING_ERASEinitializer for FL_VERIFYING_ERASEinitializer for FL_UNKNOWNinitializer for NAND_SDR_IFACEinitializer for NAND_ECC_UNKNOWNinitializer for NAND_ECC_HAMMINGinitializer for NAND_ECC_BCHinitializer for NAND_ECC_NONEinitializer for NAND_ECC_SOFTinitializer for NAND_ECC_HWinitializer for NAND_ECC_HW_SYNDROMEinitializer for NAND_ECC_HW_OOB_FIRSTinitializer for NAND_ECC_SOFT_BCHinitializer for hdrinitializer for epinitializer for _u_boot_list_2_cmd_2_iminfoinitializer for _u_boot_list_2_cmd_2_bootdinitializer for _u_boot_list_2_cmd_2_bootinitializer for _u_boot_list_2_cmd_2_bootminitializer for bootm_help_textinitializer for cmd_bootm_subinitializer for _u_boot_list_2_cmd_2_bootstageinitializer for cmd_bootstage_subinitializer for _u_boot_list_2_cmd_2_bootzinitializer for bootz_help_textinitializer for _u_boot_list_2_cmd_2_btrsubvolinitializer for CBFS_HEADER_MAGICinitializer for CBFS_TYPE_BOOTBLOCKinitializer for CBFS_TYPE_CBFSHEADERinitializer for CBFS_TYPE_STAGEinitializer for CBFS_TYPE_PAYLOADinitializer for CBFS_TYPE_FITinitializer for CBFS_TYPE_OPTIONROMinitializer for CBFS_TYPE_BOOTSPLASHinitializer for CBFS_TYPE_RAWinitializer for CBFS_TYPE_VSAinitializer for CBFS_TYPE_MBIinitializer for CBFS_TYPE_MICROCODEinitializer for CBFS_TYPE_FSPinitializer for CBFS_TYPE_MRCinitializer for CBFS_TYPE_MMAinitializer for CBFS_TYPE_EFIinitializer for CBFS_TYPE_STRUCTinitializer for CBFS_TYPE_CMOS_DEFAULTinitializer for CBFS_TYPE_SPDinitializer for CBFS_TYPE_MRC_CACHEinitializer for CBFS_TYPE_CMOS_LAYOUTinitializer for CBFS_SUCCESSinitializer for CBFS_NOT_INITIALIZEDinitializer for CBFS_BAD_HEADERinitializer for CBFS_BAD_FILEinitializer for CBFS_FILE_NOT_FOUNDinitializer for headerinitializer for fileinitializer for typeinitializer for type_nameinitializer for filenameinitializer for filesinitializer for end_of_rominitializer for _u_boot_list_2_cmd_2_cbfsinfoinitializer for _u_boot_list_2_cmd_2_cbfslsinitializer for _u_boot_list_2_cmd_2_cbfsloadinitializer for _u_boot_list_2_cmd_2_cbfsinitinitializer for data_gzinitializer for data_sizeinitializer for _u_boot_list_2_cmd_2_configinitializer for listinitializer for _u_boot_list_2_cmd_2_coninfoinitializer for CPU_FEAT_L1_CACHEinitializer for CPU_FEAT_MMUinitializer for CPU_FEAT_UCODEinitializer for CPU_FEAT_DEVICE_IDinitializer for CPU_FEAT_COUNTinitializer for cinitializer for platinitializer for _u_boot_list_2_cmd_2_cpuinitializer for cmd_cpu_subinitializer for cpu_feature_nameinitializer for offsetinitializer for maskinitializer for linitializer for _u_boot_list_2_cmd_2_cramfslsinitializer for _u_boot_list_2_cmd_2_cramfsloadinitializer for eventsinitializer for regioninitializer for resultinitializer for sizeinitializer for _u_boot_list_2_cmd_2_crosecinitializer for ec_current_image_nameinitializer for I2C_M_TENinitializer for I2C_M_RDinitializer for I2C_M_STOPinitializer for I2C_M_NOSTARTinitializer for I2C_M_REV_DIR_ADDRinitializer for I2C_M_IGNORE_NAKinitializer for I2C_M_NO_RD_ACKinitializer for I2C_M_RECV_LENinitializer for DM_I2C_CHIP_10BITinitializer for DM_I2C_CHIP_RD_ADDRESSinitializer for DM_I2C_CHIP_WR_ADDRESSinitializer for _u_boot_list_2_cmd_2_dateinitializer for default_tminitializer for weekdaysinitializer for devnuminitializer for chinitializer for _u_boot_list_2_cmd_2_demoinitializer for demo_commandsinitializer for fit_hdrinitializer for _u_boot_list_2_cmd_2_dminitializer for test_commandsinitializer for pinitializer for prenlsinitializer for putnlinitializer for _u_boot_list_2_cmd_2_echoinitializer for ethsw_id_port_noinitializer for ethsw_id_vlan_noinitializer for ethsw_id_pvid_noinitializer for ethsw_id_add_del_noinitializer for ethsw_id_add_del_macinitializer for ethsw_id_aggr_noinitializer for ethsw_id_count_allinitializer for ethsw_id_key_endinitializer for ethsw_id_helpinitializer for ethsw_id_showinitializer for ethsw_id_portinitializer for ethsw_id_enableinitializer for ethsw_id_disableinitializer for ethsw_id_statisticsinitializer for ethsw_id_clearinitializer for ethsw_id_learninginitializer for ethsw_id_autoinitializer for ethsw_id_vlaninitializer for ethsw_id_fdbinitializer for ethsw_id_addinitializer for ethsw_id_delinitializer for ethsw_id_flushinitializer for ethsw_id_pvidinitializer for ethsw_id_untaggedinitializer for ethsw_id_allinitializer for ethsw_id_noneinitializer for ethsw_id_egressinitializer for ethsw_id_taginitializer for ethsw_id_classifiedinitializer for ethsw_id_sharedinitializer for ethsw_id_privateinitializer for ethsw_id_ingressinitializer for ethsw_id_filteringinitializer for ethsw_id_aggrinitializer for ethsw_id_countinitializer for rcinitializer for _u_boot_list_2_cmd_2_ethswinitializer for keywordinitializer for cmd_opt_definitializer for ethsw_cmd_definitializer for _u_boot_list_2_cmd_2_exitinitializer for _u_boot_list_2_cmd_2_ext2loadinitializer for _u_boot_list_2_cmd_2_ext2lsinitializer for maxpinitializer for USB3_LPM_U0initializer for USB3_LPM_U1initializer for USB3_LPM_U2initializer for USB3_LPM_U3initializer for USB_STATE_NOTATTACHEDinitializer for USB_STATE_ATTACHEDinitializer for USB_STATE_POWEREDinitializer for USB_STATE_RECONNECTINGinitializer for USB_STATE_UNAUTHENTICATEDinitializer for USB_STATE_DEFAULTinitializer for USB_STATE_ADDRESSinitializer for USB_STATE_CONFIGUREDinitializer for USB_STATE_SUSPENDEDinitializer for USB_SPEED_UNKNOWNinitializer for USB_SPEED_LOWinitializer for USB_SPEED_FULLinitializer for USB_SPEED_HIGHinitializer for USB_SPEED_WIRELESSinitializer for USB_SPEED_SUPERinitializer for USB_INIT_HOSTinitializer for USB_INIT_DEVICEinitializer for PACKET_SIZE_8initializer for PACKET_SIZE_16initializer for PACKET_SIZE_32initializer for PACKET_SIZE_64initializer for _u_boot_list_2_cmd_2_ext4loadinitializer for _u_boot_list_2_cmd_2_ext4lsinitializer for _u_boot_list_2_cmd_2_ext4sizeinitializer for _u_boot_list_2_cmd_2_ext4writeinitializer for FASTBOOT_COMMAND_GETVARinitializer for FASTBOOT_COMMAND_DOWNLOADinitializer for FASTBOOT_COMMAND_BOOTinitializer for FASTBOOT_COMMAND_CONTINUEinitializer for FASTBOOT_COMMAND_REBOOTinitializer for FASTBOOT_COMMAND_REBOOT_BOOTLOADERinitializer for FASTBOOT_COMMAND_SET_ACTIVEinitializer for FASTBOOT_COMMAND_COUNTinitializer for buf_addrinitializer for buf_sizeinitializer for errinitializer for _u_boot_list_2_cmd_2_fastbootinitializer for fastboot_help_textinitializer for tmpinitializer for vinitializer for ATA_DEV_ATAinitializer for ATA_DEV_ATAPIinitializer for ATA_DEV_PMPinitializer for ATA_DEV_UNKNOWNinitializer for ATA_IOC_GET_IO32initializer for ATA_IOC_SET_IO32initializer for ATA_PROT_UNKNOWNinitializer for ATA_PROT_NODATAinitializer for ATA_PROT_PIOinitializer for ATA_PROT_DMAinitializer for ATA_PROT_NCQinitializer for ATAPI_PROT_NODATAinitializer for ATAPI_PROT_PIOinitializer for ATAPI_PROT_DMAinitializer for ATA_MAX_DEVICESinitializer for ATA_MAX_PRDinitializer for ATA_SECT_SIZEinitializer for ATA_MAX_SECTORS_128initializer for ATA_MAX_SECTORSinitializer for ATA_MAX_SECTORS_LBA48initializer for ATA_MAX_SECTORS_TAPEinitializer for ATA_ID_WORDSinitializer for ATA_ID_SERNOinitializer for ATA_ID_FW_REVinitializer for ATA_ID_PRODinitializer for ATA_ID_OLD_PIO_MODESinitializer for ATA_ID_FIELD_VALIDinitializer for ATA_ID_LBA_SECTORSinitializer for ATA_ID_MWDMA_MODESinitializer for ATA_ID_PIO_MODESinitializer for ATA_ID_EIDE_DMA_MINinitializer for ATA_ID_EIDE_PIOinitializer for ATA_ID_EIDE_PIO_IORDYinitializer for ATA_ID_PIO4initializer for ATA_ID_QUEUE_DEPTHinitializer for ATA_ID_SATA_CAPinitializer for ATA_ID_SATA_FEATURESinitializer for ATA_ID_SATA_FEATURES_ENinitializer for ATA_ID_MAJOR_VERinitializer for ATA_ID_MINOR_VERinitializer for ATA_ID_UDMA_MODESinitializer for ATA_ID_LBA48_SECTORSinitializer for ATA_ID_SERNO_LENinitializer for ATA_ID_FW_REV_LENinitializer for ATA_ID_PROD_LENinitializer for ATA_PCI_CTL_OFSinitializer for ATA_PIO0initializer for ATA_PIO1initializer for ATA_PIO2initializer for ATA_PIO3initializer for ATA_PIO4initializer for ATA_PIO5initializer for ATA_PIO6initializer for ATA_SWDMA0initializer for ATA_SWDMA1initializer for ATA_SWDMA2initializer for ATA_SWDMA2_ONLYinitializer for ATA_MWDMA0initializer for ATA_MWDMA1initializer for ATA_MWDMA2initializer for ATA_MWDMA12_ONLYinitializer for ATA_MWDMA2_ONLYinitializer for ATA_UDMA0initializer for ATA_UDMA1initializer for ATA_UDMA2initializer for ATA_UDMA3initializer for ATA_UDMA4initializer for ATA_UDMA5initializer for ATA_UDMA6initializer for ATA_UDMA7initializer for ATA_UDMA_MASK_40Cinitializer for ATA_PRD_SZinitializer for ATA_PRD_TBL_SZinitializer for ATA_PRD_EOTinitializer for ATA_DMA_TABLE_OFSinitializer for ATA_DMA_STATUSinitializer for ATA_DMA_CMDinitializer for ATA_DMA_WRinitializer for ATA_DMA_STARTinitializer for ATA_DMA_INTRinitializer for ATA_DMA_ERRinitializer for ATA_DMA_ACTIVEinitializer for ATA_HOBinitializer for ATA_NIENinitializer for ATA_LBAinitializer for ATA_DEV1initializer for ATA_DEVICE_OBSinitializer for ATA_DEVCTL_OBSinitializer for ATA_BUSYinitializer for ATA_DRDYinitializer for ATA_DFinitializer for ATA_DRQinitializer for ATA_ERRinitializer for ATA_SRSTinitializer for ATA_ICRCinitializer for ATA_UNCinitializer for ATA_IDNFinitializer for ATA_ABORTEDinitializer for ATA_REG_DATAinitializer for ATA_REG_ERRinitializer for ATA_REG_NSECTinitializer for ATA_REG_LBALinitializer for ATA_REG_LBAMinitializer for ATA_REG_LBAHinitializer for ATA_REG_DEVICEinitializer for ATA_REG_STATUSinitializer for ATA_REG_FEATUREinitializer for ATA_REG_CMDinitializer for ATA_REG_BYTELinitializer for ATA_REG_BYTEHinitializer for ATA_REG_DEVSELinitializer for ATA_REG_IRQinitializer for ATA_CMD_DEV_RESETinitializer for ATA_CMD_CHK_POWERinitializer for ATA_CMD_STANDBYinitializer for ATA_CMD_IDLEinitializer for ATA_CMD_EDDinitializer for ATA_CMD_FLUSHinitializer for ATA_CMD_FLUSH_EXTinitializer for ATA_CMD_ID_ATAinitializer for ATA_CMD_ID_ATAPIinitializer for ATA_CMD_READinitializer for ATA_CMD_READ_EXTinitializer for ATA_CMD_WRITEinitializer for ATA_CMD_WRITE_EXTinitializer for ATA_CMD_WRITE_FUA_EXTinitializer for ATA_CMD_FPDMA_READinitializer for ATA_CMD_FPDMA_WRITEinitializer for ATA_CMD_PIO_READinitializer for ATA_CMD_PIO_READ_EXTinitializer for ATA_CMD_PIO_WRITEinitializer for ATA_CMD_PIO_WRITE_EXTinitializer for ATA_CMD_READ_MULTIinitializer for ATA_CMD_READ_MULTI_EXTinitializer for ATA_CMD_WRITE_MULTIinitializer for ATA_CMD_WRITE_MULTI_EXTinitializer for ATA_CMD_WRITE_MULTI_FUA_EXTinitializer for ATA_CMD_SET_FEATURESinitializer for ATA_CMD_SET_MULTIinitializer for ATA_CMD_PACKETinitializer for ATA_CMD_VERIFYinitializer for ATA_CMD_VERIFY_EXTinitializer for ATA_CMD_STANDBYNOW1initializer for ATA_CMD_IDLEIMMEDIATEinitializer for ATA_CMD_SLEEPinitializer for ATA_CMD_INIT_DEV_PARAMSinitializer for ATA_CMD_READ_NATIVE_MAXinitializer for ATA_CMD_READ_NATIVE_MAX_EXTinitializer for ATA_CMD_SET_MAXinitializer for ATA_CMD_SET_MAX_EXTinitializer for ATA_CMD_READ_LOG_EXTinitializer for ATA_CMD_PMP_READinitializer for ATA_CMD_PMP_WRITEinitializer for ATA_CMD_CONF_OVERLAYinitializer for ATA_CMD_SEC_FREEZE_LOCKinitializer for ATA_LOG_SATA_NCQinitializer for ATA_CMD_READ_LONGinitializer for ATA_CMD_READ_LONG_ONCEinitializer for ATA_CMD_WRITE_LONGinitializer for ATA_CMD_WRITE_LONG_ONCEinitializer for SETFEATURES_XFERinitializer for XFER_UDMA_7initializer for XFER_UDMA_6initializer for XFER_UDMA_5initializer for XFER_UDMA_4initializer for XFER_UDMA_3initializer for XFER_UDMA_2initializer for XFER_UDMA_1initializer for XFER_UDMA_0initializer for XFER_MW_DMA_4initializer for XFER_MW_DMA_3initializer for XFER_MW_DMA_2initializer for XFER_MW_DMA_1initializer for XFER_MW_DMA_0initializer for XFER_SW_DMA_2initializer for XFER_SW_DMA_1initializer for XFER_SW_DMA_0initializer for XFER_PIO_6initializer for XFER_PIO_5initializer for XFER_PIO_4initializer for XFER_PIO_3initializer for XFER_PIO_2initializer for XFER_PIO_1initializer for XFER_PIO_0initializer for XFER_PIO_SLOWinitializer for SETFEATURES_WC_ONinitializer for SETFEATURES_WC_OFFinitializer for SETFEATURES_SPINUPinitializer for SETFEATURES_SATA_ENABLEinitializer for SETFEATURES_SATA_DISABLEinitializer for SATA_ANinitializer for SATA_DIPMinitializer for ATA_SET_MAX_ADDRinitializer for ATA_SET_MAX_PASSWDinitializer for ATA_SET_MAX_LOCKinitializer for ATA_SET_MAX_UNLOCKinitializer for ATA_SET_MAX_FREEZE_LOCKinitializer for ATA_DCO_RESTOREinitializer for ATA_DCO_FREEZE_LOCKinitializer for ATA_DCO_IDENTIFYinitializer for ATA_DCO_SETinitializer for ATAPI_PKT_DMAinitializer for ATAPI_DMADIRinitializer for ATAPI_CDB_LENinitializer for SATA_PMP_MAX_PORTSinitializer for SATA_PMP_CTRL_PORTinitializer for SATA_PMP_GSCR_DWORDSinitializer for SATA_PMP_GSCR_PROD_IDinitializer for SATA_PMP_GSCR_REVinitializer for SATA_PMP_GSCR_PORT_INFOinitializer for SATA_PMP_GSCR_ERRORinitializer for SATA_PMP_GSCR_ERROR_ENinitializer for SATA_PMP_GSCR_FEATinitializer for SATA_PMP_GSCR_FEAT_ENinitializer for SATA_PMP_PSCR_STATUSinitializer for SATA_PMP_PSCR_ERRORinitializer for SATA_PMP_PSCR_CONTROLinitializer for SATA_PMP_FEAT_BISTinitializer for SATA_PMP_FEAT_PMREQinitializer for SATA_PMP_FEAT_DYNSSCinitializer for SATA_PMP_FEAT_NOTIFYinitializer for ATA_CBL_NONEinitializer for ATA_CBL_PATA40initializer for ATA_CBL_PATA80initializer for ATA_CBL_PATA40_SHORTinitializer for ATA_CBL_PATA_UNKinitializer for ATA_CBL_PATA_IGNinitializer for ATA_CBL_SATAinitializer for SCR_STATUSinitializer for SCR_ERRORinitializer for SCR_CONTROLinitializer for SCR_ACTIVEinitializer for SCR_NOTIFICATIONinitializer for SERR_DATA_RECOVEREDinitializer for SERR_COMM_RECOVEREDinitializer for SERR_DATAinitializer for SERR_PERSISTENTinitializer for SERR_PROTOCOLinitializer for SERR_INTERNALinitializer for SERR_PHYRDY_CHGinitializer for SERR_PHY_INT_ERRinitializer for SERR_COMM_WAKEinitializer for SERR_10B_8B_ERRinitializer for SERR_DISPARITYinitializer for SERR_CRCinitializer for SERR_HANDSHAKEinitializer for SERR_LINK_SEQ_ERRinitializer for SERR_TRANS_ST_ERRORinitializer for SERR_UNRECOG_FISinitializer for SERR_DEV_XCHGinitializer for ATA_TFLAG_LBA48initializer for ATA_TFLAG_ISADDRinitializer for ATA_TFLAG_DEVICEinitializer for ATA_TFLAG_WRITEinitializer for ATA_TFLAG_LBAinitializer for ATA_TFLAG_FUAinitializer for ATA_TFLAG_POLLINGinitializer for ATA_PROT_FLAG_PIOinitializer for ATA_PROT_FLAG_DMAinitializer for ATA_PROT_FLAG_DATAinitializer for ATA_PROT_FLAG_NCQinitializer for ATA_PROT_FLAG_ATAPIinitializer for partinitializer for dev_descinitializer for _u_boot_list_2_cmd_2_fatmkdirinitializer for _u_boot_list_2_cmd_2_fatrminitializer for _u_boot_list_2_cmd_2_fatwriteinitializer for _u_boot_list_2_cmd_2_fatinfoinitializer for _u_boot_list_2_cmd_2_fatlsinitializer for _u_boot_list_2_cmd_2_fatloadinitializer for _u_boot_list_2_cmd_2_fatsizeinitializer for levelinitializer for tabsinitializer for sinitializer for stridxinitializer for lengthinitializer for controlinitializer for reqIndexinitializer for startDepthinitializer for curDepthinitializer for curIndexinitializer for nextNodeOffsetinitializer for rootinitializer for depthinitializer for versioninitializer for totalinitializer for idxinitializer for initrd_startinitializer for initrd_endinitializer for fdtpinitializer for _u_boot_list_2_cmd_2_fdtinitializer for fdt_help_textinitializer for fdt_member_tableinitializer for _u_boot_list_2_cmd_2_protectinitializer for _u_boot_list_2_cmd_2_eraseinitializer for _u_boot_list_2_cmd_2_flinfoinitializer for _u_boot_list_2_cmd_2_fstypeinitializer for _u_boot_list_2_cmd_2_lninitializer for _u_boot_list_2_cmd_2_lsinitializer for _u_boot_list_2_cmd_2_saveinitializer for _u_boot_list_2_cmd_2_loadinitializer for _u_boot_list_2_cmd_2_sizeinitializer for valinitializer for _u_boot_list_2_cmd_2_gettimeinitializer for allinitializer for str_gpioinitializer for nvalinitializer for FLAG_SHOW_ALLinitializer for FLAG_SHOW_BANKinitializer for FLAG_SHOW_NEWLINEinitializer for GPIOC_INPUTinitializer for GPIOC_SETinitializer for GPIOC_CLEARinitializer for GPIOC_TOGGLEinitializer for _u_boot_list_2_cmd_2_gpioinitializer for blk_dev_descinitializer for numpartsinitializer for new_partitionsinitializer for part_countinitializer for ctr1initializer for ctr2initializer for partitionsinitializer for gpt_headinitializer for gpt_pteinitializer for max_str_partinitializer for errnoinitializer for valid_partsinitializer for posinitializer for partlistleninitializer for newinitializer for _u_boot_list_2_cmd_2_gptinitializer for disk_partitionsinitializer for flagsinitializer for _u_boot_list_2_cmd_2_hashinitializer for startinitializer for _ll_resultinitializer for _u_boot_list_2_cmd_2_question_markinitializer for _u_boot_list_2_cmd_2_helpinitializer for dev_strinitializer for min_devinitializer for max_devinitializer for _u_boot_list_2_cmd_2_hostinitializer for cmd_host_subinitializer for host_curr_deviceinitializer for EDID_CEA861_DB_AUDIOinitializer for EDID_CEA861_DB_VIDEOinitializer for EDID_CEA861_DB_VENDORinitializer for EDID_CEA861_DB_SPEAKERinitializer for EDID_MONITOR_DESCRIPTOR_SERIALinitializer for EDID_MONITOR_DESCRIPTOR_ASCIIinitializer for EDID_MONITOR_DESCRIPTOR_RANGEinitializer for EDID_MONITOR_DESCRIPTOR_NAMEinitializer for ASPECT_625initializer for ASPECT_75initializer for ASPECT_8initializer for ASPECT_5625initializer for chipinitializer for foundinitializer for I2C_ERR_READinitializer for I2C_ERR_WRITEinitializer for _u_boot_list_2_cmd_2_i2cinitializer for i2c_help_textinitializer for cmd_i2c_subinitializer for i2c_dp_last_lengthinitializer for _u_boot_list_2_cmd_2_diskbootinitializer for _u_boot_list_2_cmd_2_ideinitializer for _u_boot_list_2_cmd_2_iowinitializer for _u_boot_list_2_cmd_2_iodinitializer for cmdinitializer for _u_boot_list_2_cmd_2_iotraceinitializer for _u_boot_list_2_cmd_2_itestinitializer for op_tableinitializer for freq_msinitializer for _u_boot_list_2_cmd_2_ledinitializer for state_labelinitializer for _u_boot_list_2_cmd_2_licenseinitializer for store_addrinitializer for start_addrinitializer for end_addrinitializer for line_countinitializer for _u_boot_list_2_cmd_2_loadyinitializer for _u_boot_list_2_cmd_2_loadxinitializer for _u_boot_list_2_cmd_2_loadbinitializer for _u_boot_list_2_cmd_2_loadsinitializer for do_echoinitializer for strinitializer for ptrinitializer for _u_boot_list_2_cmd_2_loginitializer for log_help_textinitializer for log_subinitializer for log_fmt_charsinitializer for SZ_SEEK_SETinitializer for SZ_SEEK_CURinitializer for SZ_SEEK_ENDinitializer for dst_leninitializer for src_leninitializer for _u_boot_list_2_cmd_2_lzmadecinitializer for str_ptrinitializer for _u_boot_list_2_cmd_2_md5suminitializer for phydevinitializer for extendedinitializer for _u_boot_list_2_cmd_2_mdioinitializer for patterninitializer for iteration_limitinitializer for errsinitializer for alt_testinitializer for vbufinitializer for vdummyinitializer for bitpatterninitializer for _u_boot_list_2_cmd_2_randominitializer for _u_boot_list_2_cmd_2_meminfoinitializer for _u_boot_list_2_cmd_2_mtestinitializer for _u_boot_list_2_cmd_2_loopwinitializer for _u_boot_list_2_cmd_2_loopinitializer for _u_boot_list_2_cmd_2_baseinitializer for _u_boot_list_2_cmd_2_crc32initializer for _u_boot_list_2_cmd_2_cmpinitializer for _u_boot_list_2_cmd_2_cpinitializer for _u_boot_list_2_cmd_2_mwinitializer for _u_boot_list_2_cmd_2_nminitializer for _u_boot_list_2_cmd_2_mminitializer for _u_boot_list_2_cmd_2_mdinitializer for base_addressinitializer for capinitializer for ETH_RESET_MGMTinitializer for ETH_RESET_IRQinitializer for ETH_RESET_DMAinitializer for ETH_RESET_FILTERinitializer for ETH_RESET_OFFLOADinitializer for ETH_RESET_MACinitializer for ETH_RESET_PHYinitializer for ETH_RESET_RAMinitializer for ETH_RESET_DEDICATEDinitializer for ETH_RESET_ALLinitializer for ETHTOOL_F_UNSUPPORTED__BITinitializer for ETHTOOL_F_WISH__BITinitializer for ETHTOOL_F_COMPAT__BITinitializer for ETHTOOL_FLASH_ALL_REGIONSinitializer for ETH_FLAG_TXVLANinitializer for ETH_FLAG_RXVLANinitializer for ETH_FLAG_LROinitializer for ETH_FLAG_NTUPLEinitializer for ETH_FLAG_RXHASHinitializer for ETH_TEST_FL_OFFLINEinitializer for ETH_TEST_FL_FAILEDinitializer for ETH_SS_TESTinitializer for ETH_SS_STATSinitializer for ETH_SS_PRIV_FLAGSinitializer for ETH_SS_NTUPLE_FILTERSinitializer for ETH_SS_FEATURESinitializer for PHY_INTERFACE_MODE_MIIinitializer for PHY_INTERFACE_MODE_GMIIinitializer for PHY_INTERFACE_MODE_SGMIIinitializer for PHY_INTERFACE_MODE_SGMII_2500initializer for PHY_INTERFACE_MODE_QSGMIIinitializer for PHY_INTERFACE_MODE_TBIinitializer for PHY_INTERFACE_MODE_RMIIinitializer for PHY_INTERFACE_MODE_RGMIIinitializer for PHY_INTERFACE_MODE_RGMII_IDinitializer for PHY_INTERFACE_MODE_RGMII_RXIDinitializer for PHY_INTERFACE_MODE_RGMII_TXIDinitializer for PHY_INTERFACE_MODE_RTBIinitializer for PHY_INTERFACE_MODE_XGMIIinitializer for PHY_INTERFACE_MODE_XAUIinitializer for PHY_INTERFACE_MODE_RXAUIinitializer for PHY_INTERFACE_MODE_SFIinitializer for PHY_INTERFACE_MODE_INTERNALinitializer for PHY_INTERFACE_MODE_25G_AUIinitializer for PHY_INTERFACE_MODE_XLAUIinitializer for PHY_INTERFACE_MODE_CAUI2initializer for PHY_INTERFACE_MODE_CAUI4initializer for PHY_INTERFACE_MODE_NONEinitializer for PHY_INTERFACE_MODE_COUNTinitializer for phy_interface_stringsinitializer for drvinitializer for businitializer for okinitializer for speed_bitsinitializer for sel_bitsinitializer for reginitializer for _u_boot_list_2_cmd_2_miiinitializer for mii_reg_desc_tblinitializer for reg_10_desc_tblinitializer for reg_9_desc_tblinitializer for reg_5_desc_tblinitializer for reg_4_desc_tblinitializer for reg_3_desc_tblinitializer for reg_2_desc_tblinitializer for reg_1_desc_tblinitializer for reg_0_desc_tblinitializer for msecsinitializer for multinitializer for mdelayinitializer for _u_boot_list_2_cmd_2_timerinitializer for _u_boot_list_2_cmd_2_sleepinitializer for initializedinitializer for double_entryinitializer for maxleninitializer for tmp_listinitializer for current_save_neededinitializer for mtdinitializer for _u_boot_list_2_cmd_2_mtdpartsinitializer for mtdparts_help_textinitializer for _u_boot_list_2_cmd_2_chpartinitializer for current_mtd_partnuminitializer for current_mtd_devinitializer for mtdparts_defaultinitializer for mtdids_defaultinitializer for _u_boot_list_2_cmd_2_linklocalinitializer for _u_boot_list_2_cmd_2_dnsinitializer for _u_boot_list_2_cmd_2_sntpinitializer for _u_boot_list_2_cmd_2_cdpinitializer for _u_boot_list_2_cmd_2_pinginitializer for _u_boot_list_2_cmd_2_nfsinitializer for _u_boot_list_2_cmd_2_dhcpinitializer for _u_boot_list_2_cmd_2_rarpbootinitializer for _u_boot_list_2_cmd_2_tftpsrvinitializer for _u_boot_list_2_cmd_2_tftpputinitializer for _u_boot_list_2_cmd_2_tftpbootinitializer for _u_boot_list_2_cmd_2_bootpinitializer for sepinitializer for chkinitializer for crlf_is_lfinitializer for delinitializer for wlinitializer for env_flaginitializer for nameinitializer for _argvinitializer for accessinitializer for _u_boot_list_2_cmd_2_runinitializer for _u_boot_list_2_cmd_2_askenvinitializer for _u_boot_list_2_cmd_2_setenvinitializer for _u_boot_list_2_cmd_2_grepenvinitializer for _u_boot_list_2_cmd_2_printenvinitializer for _u_boot_list_2_cmd_2_editenvinitializer for _u_boot_list_2_cmd_2_envinitializer for env_help_textinitializer for cmd_env_subinitializer for env_idinitializer for _srcinitializer for hiinitializer for loinitializer for DUMP_PREFIX_NONEinitializer for DUMP_PREFIX_ADDRESSinitializer for DUMP_PREFIX_OFFSETinitializer for valueinitializer for var_name16initializer for tmp_bufinitializer for new_bufinitializer for efi_var_attrsinitializer for _u_boot_list_2_cmd_2_nvmeinitializer for _u_boot_list_2_cmd_2_osdinitializer for osd_help_textinitializer for cmd_osd_subinitializer for bootableinitializer for varinitializer for CMD_PART_INFO_STARTinitializer for CMD_PART_INFO_SIZEinitializer for CMD_PART_INFO_NUMBERinitializer for _u_boot_list_2_cmd_2_partinitializer for cmd_sizeinitializer for bdfinitializer for busnuminitializer for hoseinitializer for bdfsinitializer for _u_boot_list_2_cmd_2_pciinitializer for pci_help_textinitializer for pci_flag_infoinitializer for regs_cardbusinitializer for regs_bridgeinitializer for regs_normalinitializer for regs_restinitializer for regs_startinitializer for PIN_CONFIG_BIAS_BUS_HOLDinitializer for PIN_CONFIG_BIAS_DISABLEinitializer for PIN_CONFIG_BIAS_HIGH_IMPEDANCEinitializer for PIN_CONFIG_BIAS_PULL_DOWNinitializer for PIN_CONFIG_BIAS_PULL_PIN_DEFAULTinitializer for PIN_CONFIG_BIAS_PULL_UPinitializer for PIN_CONFIG_DRIVE_OPEN_DRAINinitializer for PIN_CONFIG_DRIVE_OPEN_SOURCEinitializer for PIN_CONFIG_DRIVE_PUSH_PULLinitializer for PIN_CONFIG_DRIVE_STRENGTHinitializer for PIN_CONFIG_DRIVE_STRENGTH_UAinitializer for PIN_CONFIG_INPUT_DEBOUNCEinitializer for PIN_CONFIG_INPUT_ENABLEinitializer for PIN_CONFIG_INPUT_SCHMITTinitializer for PIN_CONFIG_INPUT_SCHMITT_ENABLEinitializer for PIN_CONFIG_LOW_POWER_MODEinitializer for PIN_CONFIG_OUTPUT_ENABLEinitializer for PIN_CONFIG_OUTPUTinitializer for PIN_CONFIG_POWER_SOURCEinitializer for PIN_CONFIG_SLEEP_HARDWARE_STATEinitializer for PIN_CONFIG_SLEW_RATEinitializer for PIN_CONFIG_SKEW_DELAYinitializer for PIN_CONFIG_ENDinitializer for PIN_CONFIG_MAXinitializer for _retinitializer for _u_boot_list_2_cmd_2_pinmuxinitializer for pinmux_subcmdinitializer for UNKNOWNinitializer for EXT_SOURCEinitializer for CHARGEinitializer for NORMALinitializer for CHARGER_NOinitializer for CHARGER_TAinitializer for CHARGER_USBinitializer for CHARGER_TA_500initializer for CHARGER_UNKNOWNinitializer for PMIC_OP_GETinitializer for PMIC_OP_SETinitializer for PMIC_I2Cinitializer for PMIC_SPIinitializer for PMIC_NONEinitializer for _u_boot_list_2_cmd_2_pmicinitializer for subcmdinitializer for promptinitializer for default_numinitializer for bootm_argvinitializer for ip_strinitializer for mac_strinitializer for bootargsinitializer for fit_addrinitializer for fdtfileinitializer for fdtfilefreeinitializer for bootm_argcinitializer for labelinitializer for base_leninitializer for tftp_argvinitializer for path_leninitializer for L_NORMALinitializer for L_KEYWORDinitializer for L_SLITERALinitializer for T_EOLinitializer for T_STRINGinitializer for T_EOFinitializer for T_MENUinitializer for T_TITLEinitializer for T_TIMEOUTinitializer for T_LABELinitializer for T_KERNELinitializer for T_LINUXinitializer for T_APPENDinitializer for T_INITRDinitializer for T_LOCALBOOTinitializer for T_DEFAULTinitializer for T_PROMPTinitializer for T_INCLUDEinitializer for T_FDTinitializer for T_FDTDIRinitializer for T_ONTIMEOUTinitializer for T_IPAPPENDinitializer for T_BACKGROUNDinitializer for T_INVALIDinitializer for _u_boot_list_2_cmd_2_sysbootinitializer for _u_boot_list_2_cmd_2_pxeinitializer for cmd_pxe_subinitializer for keywordsinitializer for pxe_default_pathsinitializer for BIOS_LINKER_LOADER_ALLOC_ZONE_HIGHinitializer for BIOS_LINKER_LOADER_ALLOC_ZONE_FSEGinitializer for BIOS_LINKER_LOADER_COMMAND_ALLOCATEinitializer for BIOS_LINKER_LOADER_COMMAND_ADD_POINTERinitializer for BIOS_LINKER_LOADER_COMMAND_ADD_CHECKSUMinitializer for FW_CFG_SIGNATUREinitializer for FW_CFG_IDinitializer for FW_CFG_UUIDinitializer for FW_CFG_RAM_SIZEinitializer for FW_CFG_NOGRAPHICinitializer for FW_CFG_NB_CPUSinitializer for FW_CFG_MACHINE_IDinitializer for FW_CFG_KERNEL_ADDRinitializer for FW_CFG_KERNEL_SIZEinitializer for FW_CFG_KERNEL_CMDLINEinitializer for FW_CFG_INITRD_ADDRinitializer for FW_CFG_INITRD_SIZEinitializer for FW_CFG_BOOT_DEVICEinitializer for FW_CFG_NUMAinitializer for FW_CFG_BOOT_MENUinitializer for FW_CFG_MAX_CPUSinitializer for FW_CFG_KERNEL_ENTRYinitializer for FW_CFG_KERNEL_DATAinitializer for FW_CFG_INITRD_DATAinitializer for FW_CFG_CMDLINE_ADDRinitializer for FW_CFG_CMDLINE_SIZEinitializer for FW_CFG_CMDLINE_DATAinitializer for FW_CFG_SETUP_ADDRinitializer for FW_CFG_SETUP_SIZEinitializer for FW_CFG_SETUP_DATAinitializer for FW_CFG_FILE_DIRinitializer for FW_CFG_FILE_FIRSTinitializer for FW_CFG_WRITE_CHANNELinitializer for FW_CFG_ARCH_LOCALinitializer for FW_CFG_INVALIDinitializer for _u_boot_list_2_cmd_2_qfwinitializer for fwcfg_commandsinitializer for limitinitializer for _u_boot_list_2_cmd_2_readinitializer for REGULATOR_FLAG_AUTOSET_UVinitializer for REGULATOR_FLAG_AUTOSET_UAinitializer for REGULATOR_TYPE_LDOinitializer for REGULATOR_TYPE_BUCKinitializer for REGULATOR_TYPE_DVSinitializer for REGULATOR_TYPE_FIXEDinitializer for REGULATOR_TYPE_GPIOinitializer for REGULATOR_TYPE_OTHERinitializer for _u_boot_list_2_cmd_2_regulatorinitializer for RPROC_INTERNAL_MEMORY_MAPPEDinitializer for _u_boot_list_2_cmd_2_rprocinitializer for cmd_remoteproc_subinitializer for _u_boot_list_2_cmd_2_satainitializer for sata_curr_deviceinitializer for BOOT_DEVICE_BOARDinitializer for _u_boot_list_2_cmd_2_sbinitializer for cmd_sb_subinitializer for _u_boot_list_2_cmd_2_scsibootinitializer for _u_boot_list_2_cmd_2_scsiinitializer for datapinitializer for backrefinitializer for _u_boot_list_2_cmd_2_setexprinitializer for SNOR_F_USE_FSRinitializer for SNOR_F_HAS_SR_TBinitializer for SNOR_F_NO_OP_CHIP_ERASEinitializer for SNOR_F_S3AN_ADDR_DEFAULTinitializer for SNOR_F_READY_XSR_RDYinitializer for SNOR_F_USE_CLSRinitializer for SNOR_F_BROKEN_RESETinitializer for SPI_NOR_OPS_READinitializer for SPI_NOR_OPS_WRITEinitializer for SPI_NOR_OPS_ERASEinitializer for SPI_NOR_OPS_LOCKinitializer for SPI_NOR_OPS_UNLOCKinitializer for SNOR_PROTO_1_1_1initializer for SNOR_PROTO_1_1_2initializer for SNOR_PROTO_1_1_4initializer for SNOR_PROTO_1_1_8initializer for SNOR_PROTO_1_2_2initializer for SNOR_PROTO_1_4_4initializer for SNOR_PROTO_1_8_8initializer for SNOR_PROTO_2_2_2initializer for SNOR_PROTO_4_4_4initializer for SNOR_PROTO_8_8_8initializer for SNOR_PROTO_1_1_1_DTRinitializer for SNOR_PROTO_1_2_2_DTRinitializer for SNOR_PROTO_1_4_4_DTRinitializer for SNOR_PROTO_1_8_8_DTRinitializer for __min1initializer for __min2initializer for protinitializer for scaleinitializer for last_updateinitializer for err_operinitializer for start_bufinitializer for start_timeinitializer for skippedinitializer for csinitializer for speedinitializer for modeinitializer for STAGE_ERASEinitializer for STAGE_CHECKinitializer for STAGE_WRITEinitializer for STAGE_READinitializer for STAGE_COUNTinitializer for _u_boot_list_2_cmd_2_sfinitializer for stage_nameinitializer for AUDIO_COMPAT_SPIinitializer for AUDIO_COMPAT_I2Cinitializer for msecinitializer for freqinitializer for _u_boot_list_2_cmd_2_soundinitializer for cmd_sound_subinitializer for fit_unameinitializer for _u_boot_list_2_cmd_2_sourceinitializer for source_help_textinitializer for cpinitializer for _u_boot_list_2_cmd_2_sspiinitializer for _u_boot_list_2_cmd_2_trueinitializer for _u_boot_list_2_cmd_2_falseinitializer for _u_boot_list_2_cmd_2_testinitializer for op_advinitializer for repeatableinitializer for cyclesinitializer for _u_boot_list_2_cmd_2_timeinitializer for TPM_V1initializer for TPM_V2initializer for TPM_SHORTinitializer for TPM_MEDIUMinitializer for TPM_LONGinitializer for TPM_UNDEFINEDinitializer for TPM_DURATION_COUNTinitializer for print_newlineinitializer for TPM_BASEinitializer for TPM_NON_FATALinitializer for TPM_SUCCESSinitializer for TPM_AUTHFAILinitializer for TPM_BADINDEXinitializer for TPM_BAD_PARAMETERinitializer for TPM_AUDITFAILUREinitializer for TPM_CLEAR_DISABLEDinitializer for TPM_DEACTIVATEDinitializer for TPM_DISABLEDinitializer for TPM_DISABLED_CMDinitializer for TPM_FAILinitializer for TPM_BAD_ORDINALinitializer for TPM_INSTALL_DISABLEDinitializer for TPM_INVALID_KEYHANDLEinitializer for TPM_KEYNOTFOUNDinitializer for TPM_INAPPROPRIATE_ENCinitializer for TPM_MIGRATE_FAILinitializer for TPM_INVALID_PCR_INFOinitializer for TPM_NOSPACEinitializer for TPM_NOSRKinitializer for TPM_NOTSEALED_BLOBinitializer for TPM_OWNER_SETinitializer for TPM_RESOURCESinitializer for TPM_SHORTRANDOMinitializer for TPM_SIZEinitializer for TPM_WRONGPCRVALinitializer for TPM_BAD_PARAM_SIZEinitializer for TPM_SHA_THREADinitializer for TPM_SHA_ERRORinitializer for TPM_FAILEDSELFTESTinitializer for TPM_AUTH2FAILinitializer for TPM_BADTAGinitializer for TPM_IOERRORinitializer for TPM_ENCRYPT_ERRORinitializer for TPM_DECRYPT_ERRORinitializer for TPM_INVALID_AUTHHANDLEinitializer for TPM_NO_ENDORSEMENTinitializer for TPM_INVALID_KEYUSAGEinitializer for TPM_WRONG_ENTITYTYPEinitializer for TPM_INVALID_POSTINITinitializer for TPM_INAPPROPRIATE_SIGinitializer for TPM_BAD_KEY_PROPERTYinitializer for TPM_BAD_MIGRATIONinitializer for TPM_BAD_SCHEMEinitializer for TPM_BAD_DATASIZEinitializer for TPM_BAD_MODEinitializer for TPM_BAD_PRESENCEinitializer for TPM_BAD_VERSIONinitializer for TPM_NO_WRAP_TRANSPORTinitializer for TPM_AUDITFAIL_UNSUCCESSFULinitializer for TPM_AUDITFAIL_SUCCESSFULinitializer for TPM_NOTRESETABLEinitializer for TPM_NOTLOCALinitializer for TPM_BAD_TYPEinitializer for TPM_INVALID_RESOURCEinitializer for TPM_NOTFIPSinitializer for TPM_INVALID_FAMILYinitializer for TPM_NO_NV_PERMISSIONinitializer for TPM_REQUIRES_SIGNinitializer for TPM_KEY_NOTSUPPORTEDinitializer for TPM_AUTH_CONFLICTinitializer for TPM_AREA_LOCKEDinitializer for TPM_BAD_LOCALITYinitializer for TPM_READ_ONLYinitializer for TPM_PER_NOWRITEinitializer for TPM_FAMILY_COUNTinitializer for TPM_WRITE_LOCKEDinitializer for TPM_BAD_ATTRIBUTESinitializer for TPM_INVALID_STRUCTUREinitializer for TPM_KEY_OWNER_CONTROLinitializer for TPM_BAD_COUNTERinitializer for TPM_NOT_FULLWRITEinitializer for TPM_CONTEXT_GAPinitializer for TPM_MAXNVWRITESinitializer for TPM_NOOPERATORinitializer for TPM_RESOURCEMISSINGinitializer for TPM_DELEGATE_LOCKinitializer for TPM_DELEGATE_FAMILYinitializer for TPM_DELEGATE_ADMINinitializer for TPM_TRANSPORT_NOTEXCLUSIVEinitializer for TPM_OWNER_CONTROLinitializer for TPM_DAA_RESOURCESinitializer for TPM_DAA_INPUT_DATA0initializer for TPM_DAA_INPUT_DATA1initializer for TPM_DAA_ISSUER_SETTINGSinitializer for TPM_DAA_TPM_SETTINGSinitializer for TPM_DAA_STAGEinitializer for TPM_DAA_ISSUER_VALIDITYinitializer for TPM_DAA_WRONG_Winitializer for TPM_BAD_HANDLEinitializer for TPM_BAD_DELEGATEinitializer for TPM_BADCONTEXTinitializer for TPM_TOOMANYCONTEXTSinitializer for TPM_MA_TICKET_SIGNATUREinitializer for TPM_MA_DESTINATIONinitializer for TPM_MA_SOURCEinitializer for TPM_MA_AUTHORITYinitializer for TPM_PERMANENTEKinitializer for TPM_BAD_SIGNATUREinitializer for TPM_NOCONTEXTSPACEinitializer for TPM_RETRYinitializer for TPM_NEEDS_SELFTESTinitializer for TPM_DOING_SELFTESTinitializer for TPM_DEFEND_LOCK_RUNNINGinitializer for TPM_CMD_EXTENDinitializer for TPM_CMD_GET_CAPABILITYinitializer for TPM_CMD_NV_DEFINE_SPACEinitializer for TPM_CMD_NV_WRITE_VALUEinitializer for TPM_CMD_NV_READ_VALUEinitializer for TPM_PUBEK_SIZEinitializer for TPM_CAP_FLAG_PERMANENTinitializer for TPM_CAP_ORDinitializer for TPM_CAP_ALGinitializer for TPM_CAP_PIDinitializer for TPM_CAP_FLAGinitializer for TPM_CAP_PROPERTYinitializer for TPM_CAP_VERSIONinitializer for TPM_CAP_KEY_HANDLEinitializer for TPM_CAP_CHECK_LOADEDinitializer for TPM_CAP_SYM_MODEinitializer for TPM_CAP_KEY_STATUSinitializer for TPM_CAP_NV_LISTinitializer for TPM_CAP_MFRinitializer for TPM_CAP_NV_INDEXinitializer for TPM_CAP_TRANS_ALGinitializer for TPM_CAP_HANDLEinitializer for TPM_CAP_TRANS_ESinitializer for TPM_CAP_AUTH_ENCRYPTinitializer for TPM_CAP_SELECT_SIZEinitializer for TPM_CAP_DA_LOGICinitializer for TPM_CAP_VERSION_VALinitializer for TPM_RT_KEYinitializer for TPM_RT_AUTHinitializer for TPM_RT_HASHinitializer for TPM_RT_TRANSinitializer for TPM_RT_CONTEXTinitializer for TPM_RT_COUNTERinitializer for TPM_RT_DELEGATEinitializer for TPM_RT_DAA_TPMinitializer for TPM_RT_DAA_V0initializer for TPM_RT_DAA_V1initializer for TPM_NV_INDEX_LOCKinitializer for TPM_NV_INDEX_0initializer for TPM_NV_INDEX_DIRinitializer for TPM_PHYSICAL_PRESENCE_HW_DISABLEinitializer for TPM_PHYSICAL_PRESENCE_CMD_DISABLEinitializer for TPM_PHYSICAL_PRESENCE_LIFETIME_LOCKinitializer for TPM_PHYSICAL_PRESENCE_HW_ENABLEinitializer for TPM_PHYSICAL_PRESENCE_CMD_ENABLEinitializer for TPM_PHYSICAL_PRESENCE_NOTPRESENTinitializer for TPM_PHYSICAL_PRESENCE_PRESENTinitializer for TPM_PHYSICAL_PRESENCE_LOCKinitializer for TPM_ST_CLEARinitializer for TPM_ST_STATEinitializer for TPM_ST_DEACTIVATEDinitializer for TPM_REQUEST_HEADER_LENGTHinitializer for TPM_RESPONSE_HEADER_LENGTHinitializer for PCR_DIGEST_LENGTHinitializer for DIGEST_LENGTHinitializer for TPM_REQUEST_AUTH_LENGTHinitializer for TPM_RESPONSE_AUTH_LENGTHinitializer for TPM_KEY12_MAX_LENGTHinitializer for TPM_PUBKEY_MAX_LENGTHinitializer for response_lengthinitializer for _u_boot_list_2_cmd_2_tpminitializer for tpm1_commandsinitializer for TPMA_NV_PPWRITEinitializer for TPMA_NV_OWNERWRITEinitializer for TPMA_NV_AUTHWRITEinitializer for TPMA_NV_POLICYWRITEinitializer for TPMA_NV_COUNTERinitializer for TPMA_NV_BITSinitializer for TPMA_NV_EXTENDinitializer for TPMA_NV_POLICY_DELETEinitializer for TPMA_NV_WRITELOCKEDinitializer for TPMA_NV_WRITEALLinitializer for TPMA_NV_WRITEDEFINEinitializer for TPMA_NV_WRITE_STCLEARinitializer for TPMA_NV_GLOBALLOCKinitializer for TPMA_NV_PPREADinitializer for TPMA_NV_OWNERREADinitializer for TPMA_NV_AUTHREADinitializer for TPMA_NV_POLICYREADinitializer for TPMA_NV_NO_DAinitializer for TPMA_NV_ORDERLYinitializer for TPMA_NV_CLEAR_STCLEARinitializer for TPMA_NV_READLOCKEDinitializer for TPMA_NV_WRITTENinitializer for TPMA_NV_PLATFORMCREATEinitializer for TPMA_NV_READ_STCLEARinitializer for TPMA_NV_MASK_READinitializer for TPMA_NV_MASK_WRITEinitializer for TPM2_ALG_XORinitializer for TPM2_ALG_SHA256initializer for TPM2_ALG_SHA384initializer for TPM2_ALG_SHA512initializer for TPM2_ALG_NULLinitializer for TPM2_RC_SUCCESSinitializer for TPM2_RC_BAD_TAGinitializer for TPM2_RC_FMT1initializer for TPM2_RC_HASHinitializer for TPM2_RC_VALUEinitializer for TPM2_RC_SIZEinitializer for TPM2_RC_BAD_AUTHinitializer for TPM2_RC_HANDLEinitializer for TPM2_RC_VER1initializer for TPM2_RC_INITIALIZEinitializer for TPM2_RC_FAILUREinitializer for TPM2_RC_DISABLEDinitializer for TPM2_RC_AUTH_MISSINGinitializer for TPM2_RC_COMMAND_CODEinitializer for TPM2_RC_AUTHSIZEinitializer for TPM2_RC_AUTH_CONTEXTinitializer for TPM2_RC_NEEDS_TESTinitializer for TPM2_RC_WARNinitializer for TPM2_RC_TESTINGinitializer for TPM2_RC_REFERENCE_H0initializer for TPM2_RC_LOCKOUTinitializer for TPM2_CC_STARTUPinitializer for TPM2_CC_SELF_TESTinitializer for TPM2_CC_CLEARinitializer for TPM2_CC_CLEARCONTROLinitializer for TPM2_CC_HIERCHANGEAUTHinitializer for TPM2_CC_PCR_SETAUTHPOLinitializer for TPM2_CC_DAM_RESETinitializer for TPM2_CC_DAM_PARAMETERSinitializer for TPM2_CC_NV_READinitializer for TPM2_CC_GET_CAPABILITYinitializer for TPM2_CC_PCR_READinitializer for TPM2_CC_PCR_EXTENDinitializer for TPM2_CC_PCR_SETAUTHVALinitializer for TPM2_RH_OWNERinitializer for TPM2_RS_PWinitializer for TPM2_RH_LOCKOUTinitializer for TPM2_RH_ENDORSEMENTinitializer for TPM2_RH_PLATFORMinitializer for TPM2_SU_CLEARinitializer for TPM2_SU_STATEinitializer for TPMI_YESinitializer for TPMI_NOinitializer for TPM2_ST_NO_SESSIONSinitializer for TPM2_ST_SESSIONSinitializer for keyinitializer for pwinitializer for pw_szinitializer for key_szinitializer for newpwinitializer for newpw_szinitializer for oldpwinitializer for oldpw_szinitializer for digestinitializer for handleinitializer for _u_boot_list_2_cmd_2_tpm2initializer for tpm2_commandsinitializer for perminitializer for zeroinitializer for disableinitializer for deactivatedinitializer for _u_boot_list_2_cmd_2_tpmtestinitializer for cmd_cros_tpm_subinitializer for udevinitializer for packet_sizeinitializer for bufferinitializer for _u_boot_list_2_cmd_2_usbbootinitializer for _u_boot_list_2_cmd_2_usbinitializer for usb_stor_curr_devinitializer for _u_boot_list_2_cmd_2_versioninitializer for version_stringinitializer for uc_privinitializer for __ret_warn_oninitializer for __condinitializer for _u_boot_list_2_cmd_2_virtioinitializer for bus_ninitializer for dev_ninitializer for _u_boot_list_2_cmd_2_w1initializer for unameinitializer for destinitializer for toinitializer for frominitializer for unc_leninitializer for _u_boot_list_2_cmd_2_imxtractinitializer for imgextract_help_textinitializer for WIPE_PACKAGE_OFFSET_IN_MISCinitializer for BOOTLOADER_MESSAGE_OFFSET_IN_MISCinitializer for abcinitializer for store_neededinitializer for metadatainitializer for abortinitializer for name_sizeinitializer for paraminitializer for uuidinitializer for teeinitializer for io_cntinitializer for part_numinitializer for unalignedinitializer for newargsinitializer for cmdlineinitializer for avb_root_pubinitializer for __retinitializer for BLOBLISTT_NONEinitializer for BLOBLISTT_EC_HOSTEVENTinitializer for BLOBLISTT_SPL_HANDOFFinitializer for BLOBLISTT_VBOOT_CTXinitializer for BLOBLISTT_VBOOT_HANDOFFinitializer for BLOBLIST_VERSIONinitializer for BLOBLIST_MAGICinitializer for BLOBLIST_ALIGNinitializer for reloc_ofsinitializer for FUNCF_EXITinitializer for FUNCF_ENTRYinitializer for FUNCF_TEXTBASEinitializer for FUNCF_TIMESTAMP_MASKinitializer for TRACE_CHUNK_FUNCSinitializer for TRACE_CHUNK_CALLSinitializer for FUNC_SITE_SIZEinitializer for from_splinitializer for stashinitializer for init_sequence_finitializer for SERIAL_ADDRESS_SPACE_MEMORYinitializer for SERIAL_ADDRESS_SPACE_IOinitializer for SERIAL_CHIP_UNKNOWNinitializer for SERIAL_CHIP_16550_COMPATIBLEinitializer for SERIAL_HALF_STOPinitializer for SERIAL_ONE_STOPinitializer for SERIAL_ONE_HALF_STOPinitializer for SERIAL_TWO_STOPinitializer for SERIAL_5_BITSinitializer for SERIAL_6_BITSinitializer for SERIAL_7_BITSinitializer for SERIAL_8_BITSinitializer for SERIAL_PAR_NONEinitializer for SERIAL_PAR_ODDinitializer for SERIAL_PAR_EVENinitializer for timeoutinitializer for init_sequence_rinitializer for fit_uname_configinitializer for fit_uname_kernelinitializer for iflaginitializer for num_start_bytesinitializer for osinitializer for loadinitializer for image_leninitializer for flush_startinitializer for image_startinitializer for blob_endinitializer for blob_startinitializer for ep_foundinitializer for optee_hdrinitializer for confaddrinitializer for boot_osinitializer for datainitializer for recinitializer for rec1initializer for rec2initializer for start_usinitializer for BOOTSTAGE_VERSIONinitializer for BOOTSTAGE_MAGICinitializer for BOOTSTAGE_DIGITSinitializer for RECORD_COUNTinitializer for need_buffinitializer for buffinitializer for hush_flagsinitializer for noevalinitializer for ninitializer for name_leninitializer for res_strinitializer for res_str_leninitializer for doneinitializer for tempinitializer for codeinitializer for substinitializer for advanceinitializer for default_valinitializer for assigninitializer for expand_emptyinitializer for proginitializer for piinitializer for childinitializer for bottominitializer for indinitializer for ret_codeinitializer for blanksinitializer for flag_restoreinitializer for flag_repinitializer for if_codeinitializer for next_if_codeinitializer for skip_more_in_this_rmodeinitializer for flag_skipinitializer for save_listinitializer for save_nameinitializer for export_meinitializer for flaginitializer for ps_promptinitializer for old_datainitializer for RES_NONEinitializer for RES_IFinitializer for RES_THENinitializer for RES_ELIFinitializer for RES_ELSEinitializer for RES_FIinitializer for RES_FORinitializer for RES_WHILEinitializer for RES_UNTILinitializer for RES_DOinitializer for RES_DONEinitializer for RES_XXXXinitializer for RES_INinitializer for RES_SNTXinitializer for PIPE_SEQinitializer for PIPE_ANDinitializer for PIPE_ORinitializer for PIPE_BGinitializer for _u_boot_list_2_cmd_2_showvarinitializer for reserved_listinitializer for top_varsinitializer for do_repeatinitializer for flag_repeatinitializer for p_bufinitializer for init_leninitializer for numinitializer for eol_numinitializer for etimeinitializer for esc_leninitializer for ESC_REJECTinitializer for ESC_SAVEinitializer for ESC_CONVERTEDinitializer for actinitializer for insertinitializer for hist_curinitializer for tab_seqinitializer for erase_seqinitializer for lastcommandinitializer for inputcntinitializer for outputcntinitializer for varname_startinitializer for envcntinitializer for output_startinitializer for nargsinitializer for colinitializer for slinitializer for llinitializer for argcinitializer for cmdendinitializer for n_foundinitializer for cmdtp_tempinitializer for usageinitializer for inputdevinitializer for outputdevinitializer for errdevinitializer for iomux_errinitializer for previnitializer for ininitializer for outinitializer for errorinitializer for consoleinitializer for ctrlc_was_pressedinitializer for ctrlc_disabledinitializer for _u_boot_list_2_env_clbk_2_silentinitializer for _u_boot_list_2_env_clbk_2_consoleinitializer for availinitializer for navailinitializer for pageszinitializer for szinitializer for meminitializer for mzszinitializer for mzinitializer for oldtopinitializer for oldtopsizeinitializer for pagesizeinitializer for mcszinitializer for mcsrcinitializer for mcdstinitializer for sbrk_sizeinitializer for old_topinitializer for old_top_sizeinitializer for old_endinitializer for roominitializer for prvinitializer for oldinitializer for mmapped_meminitializer for n_mmapsinitializer for current_mallinfoinitializer for max_total_meminitializer for max_sbrked_meminitializer for sbrk_baseinitializer for mmap_thresholdinitializer for n_mmaps_maxinitializer for top_padinitializer for trim_thresholdinitializer for mem_malloc_brkinitializer for mem_malloc_endinitializer for mem_malloc_startinitializer for av_initializer for aspectinitializer for have_timinginitializer for bytesinitializer for timinginitializer for edidinitializer for infoinitializer for dbinitializer for ouiinitializer for checksuminitializer for hinitializer for pnodeinitializer for cellinitializer for prop32initializer for prop64initializer for phandleinitializer for offinitializer for ainitializer for fdt_memrsvinitializer for __FUNCTION__initializer for address_cellsinitializer for size_cellsinitializer for nodeoffinitializer for of_bussesinitializer for env_varinitializer for digitsinitializer for ctxinitializer for hash_algoinitializer for FIT_LOAD_IGNOREDinitializer for FIT_LOAD_OPTIONALinitializer for FIT_LOAD_OPTIONAL_NON_ZEROinitializer for FIT_LOAD_REQUIREDinitializer for IH_COMP_NONEinitializer for IH_COMP_GZIPinitializer for IH_COMP_BZIP2initializer for IH_COMP_LZMAinitializer for IH_COMP_LZOinitializer for IH_COMP_LZ4initializer for IH_COMP_COUNTinitializer for IH_TYPE_INVALIDinitializer for IH_TYPE_STANDALONEinitializer for IH_TYPE_KERNELinitializer for IH_TYPE_RAMDISKinitializer for IH_TYPE_MULTIinitializer for IH_TYPE_FIRMWAREinitializer for IH_TYPE_SCRIPTinitializer for IH_TYPE_FILESYSTEMinitializer for IH_TYPE_FLATDTinitializer for IH_TYPE_KWBIMAGEinitializer for IH_TYPE_IMXIMAGEinitializer for IH_TYPE_UBLIMAGEinitializer for IH_TYPE_OMAPIMAGEinitializer for IH_TYPE_AISIMAGEinitializer for IH_TYPE_KERNEL_NOLOADinitializer for IH_TYPE_PBLIMAGEinitializer for IH_TYPE_MXSIMAGEinitializer for IH_TYPE_GPIMAGEinitializer for IH_TYPE_ATMELIMAGEinitializer for IH_TYPE_SOCFPGAIMAGEinitializer for IH_TYPE_X86_SETUPinitializer for IH_TYPE_LPC32XXIMAGEinitializer for IH_TYPE_LOADABLEinitializer for IH_TYPE_RKIMAGEinitializer for IH_TYPE_RKSDinitializer for IH_TYPE_RKSPIinitializer for IH_TYPE_ZYNQIMAGEinitializer for IH_TYPE_ZYNQMPIMAGEinitializer for IH_TYPE_ZYNQMPBIFinitializer for IH_TYPE_FPGAinitializer for IH_TYPE_VYBRIDIMAGEinitializer for IH_TYPE_TEEinitializer for IH_TYPE_FIRMWARE_IVTinitializer for IH_TYPE_PMMCinitializer for IH_TYPE_STM32IMAGEinitializer for IH_TYPE_SOCFPGAIMAGE_V1initializer for IH_TYPE_MTKIMAGEinitializer for IH_TYPE_IMX8MIMAGEinitializer for IH_TYPE_IMX8IMAGEinitializer for IH_TYPE_COUNTinitializer for IH_ARCH_INVALIDinitializer for IH_ARCH_ALPHAinitializer for IH_ARCH_ARMinitializer for IH_ARCH_I386initializer for IH_ARCH_IA64initializer for IH_ARCH_MIPSinitializer for IH_ARCH_MIPS64initializer for IH_ARCH_PPCinitializer for IH_ARCH_S390initializer for IH_ARCH_SHinitializer for IH_ARCH_SPARCinitializer for IH_ARCH_SPARC64initializer for IH_ARCH_M68Kinitializer for IH_ARCH_NIOSinitializer for IH_ARCH_MICROBLAZEinitializer for IH_ARCH_NIOS2initializer for IH_ARCH_BLACKFINinitializer for IH_ARCH_AVR32initializer for IH_ARCH_ST200initializer for IH_ARCH_SANDBOXinitializer for IH_ARCH_NDS32initializer for IH_ARCH_OPENRISCinitializer for IH_ARCH_ARM64initializer for IH_ARCH_ARCinitializer for IH_ARCH_X86_64initializer for IH_ARCH_XTENSAinitializer for IH_ARCH_RISCVinitializer for IH_ARCH_COUNTinitializer for IH_OS_INVALIDinitializer for IH_OS_OPENBSDinitializer for IH_OS_NETBSDinitializer for IH_OS_FREEBSDinitializer for IH_OS_4_4BSDinitializer for IH_OS_LINUXinitializer for IH_OS_SVR4initializer for IH_OS_ESIXinitializer for IH_OS_SOLARISinitializer for IH_OS_IRIXinitializer for IH_OS_SCOinitializer for IH_OS_DELLinitializer for IH_OS_NCRinitializer for IH_OS_LYNXOSinitializer for IH_OS_VXWORKSinitializer for IH_OS_PSOSinitializer for IH_OS_QNXinitializer for IH_OS_U_BOOTinitializer for IH_OS_RTEMSinitializer for IH_OS_ARTOSinitializer for IH_OS_UNITYinitializer for IH_OS_INTEGRITYinitializer for IH_OS_OSEinitializer for IH_OS_PLAN9initializer for IH_OS_OPENRTOSinitializer for IH_OS_ARM_TRUSTED_FIRMWAREinitializer for IH_OS_TEEinitializer for IH_OS_COUNTinitializer for IH_ARCHinitializer for IH_COMPinitializer for IH_OSinitializer for IH_TYPEinitializer for IH_COUNTinitializer for os_verinitializer for os_lvlinitializer for kernel_addrinitializer for newbootargsinitializer for ihdrinitializer for selectinitializer for fit_uname_fdtinitializer for fdt_blobinitializer for of_leninitializer for desired_addrinitializer for of_startinitializer for disable_relocationinitializer for fit_uname_config_copyinitializer for next_configinitializer for max_decomp_leninitializer for conf_uname_copyinitializer for ndepthinitializer for best_match_offsetinitializer for best_match_posinitializer for cur_leninitializer for aarch32_supportinitializer for err_msginitializer for noffsetinitializer for verify_allinitializer for external_datainitializer for load64initializer for vdatainitializer for verifiedinitializer for exc_propinitializer for verify_countinitializer for padding_algosinitializer for crypto_algosinitializer for checksum_algosinitializer for BIT_FULLinitializer for BIT_PARTIALinitializer for BIT_NONEinitializer for fpga_min_typeinitializer for fpga_xilinxinitializer for fpga_alterainitializer for fpga_latticeinitializer for fpga_undefinedinitializer for min_xilinx_typeinitializer for xilinx_spartan2initializer for xilinx_virtexEinitializer for xilinx_virtex2initializer for xilinx_spartan3initializer for xilinx_zynqinitializer for xilinx_zynqmpinitializer for max_xilinx_typeinitializer for min_xilinx_iface_typeinitializer for slave_serialinitializer for master_serialinitializer for slave_parallelinitializer for jtag_modeinitializer for master_selectmapinitializer for slave_selectmapinitializer for devcfginitializer for csu_dmainitializer for max_xilinx_iface_typeinitializer for LZMA_STATUS_NOT_SPECIFIEDinitializer for LZMA_STATUS_FINISHED_WITH_MARKinitializer for LZMA_STATUS_NOT_FINISHEDinitializer for LZMA_STATUS_NEEDS_MORE_INPUTinitializer for LZMA_STATUS_MAYBE_FINISHED_WITHOUT_MARKinitializer for LZMA_FINISH_ANYinitializer for LZMA_FINISH_ENDinitializer for lmbinitializer for of_flat_treeinitializer for of_sizeinitializer for fit_loadable_handlerinitializer for fit_uname_ramdiskinitializer for unknown_strinitializer for tailinitializer for lzma_leninitializer for dcrcinitializer for _u_boot_list_2_env_clbk_2_loadaddrinitializer for load_addrinitializer for table_infoinitializer for uimage_compinitializer for uimage_typeinitializer for uimage_osinitializer for uimage_archinitializer for __yinitializer for __xinitializer for __ret_warn_onceinitializer for file_leninitializer for log_level_nameinitializer for log_cat_nameinitializer for _u_boot_list_2_log_driver_2_consoleinitializer for LOGF_CATinitializer for LOGF_LEVELinitializer for LOGF_FILEinitializer for LOGF_LINEinitializer for LOGF_FUNCinitializer for LOGF_MSGinitializer for LOGF_COUNTinitializer for LOGF_DEFAULTinitializer for LOGF_ALLinitializer for LOGFF_HAS_CATinitializer for LOGF_MAX_CATEGORIESinitializer for LOGC_FIRSTinitializer for LOGC_NONEinitializer for LOGC_ARCHinitializer for LOGC_BOARDinitializer for LOGC_COREinitializer for LOGC_DMinitializer for LOGC_DTinitializer for LOGC_EFIinitializer for LOGC_ALLOCinitializer for LOGC_SANDBOXinitializer for LOGC_BLOBLISTinitializer for LOGC_COUNTinitializer for LOGC_ENDinitializer for LOGL_EMERGinitializer for LOGL_ALERTinitializer for LOGL_CRITinitializer for LOGL_ERRinitializer for LOGL_WARNINGinitializer for LOGL_NOTICEinitializer for LOGL_INFOinitializer for LOGL_DEBUGinitializer for LOGL_DEBUG_CONTENTinitializer for LOGL_DEBUG_IOinitializer for LOGL_COUNTinitializer for LOGL_NONEinitializer for LOGL_FIRSTinitializer for LOGL_MAXinitializer for seedinitializer for NETLOOP_CONTINUEinitializer for NETLOOP_RESTARTinitializer for NETLOOP_SUCCESSinitializer for NETLOOP_FAILinitializer for BOOTPinitializer for RARPinitializer for ARPinitializer for TFTPGETinitializer for DHCPinitializer for PINGinitializer for DNSinitializer for NFSinitializer for CDPinitializer for NETCONSinitializer for SNTPinitializer for TFTPSRVinitializer for TFTPPUTinitializer for LINKLOCALinitializer for FASTBOOTinitializer for WOLinitializer for ETH_RECV_CHECK_DEVICEinitializer for ETH_STATE_INITinitializer for ETH_STATE_PASSIVEinitializer for ETH_STATE_ACTIVEinitializer for choice_iteminitializer for item_keyinitializer for default_splash_locationsinitializer for stdio_namesinitializer for stdio_devicesinitializer for tmpbufinitializer for mybufinitializer for oldlengthinitializer for if_faceinitializer for endpinitializer for if_descinitializer for __gu_pinitializer for setup_packetinitializer for portstsinitializer for delayinitializer for pgood_delayinitializer for statusinitializer for dtypeinitializer for _u_boot_list_2_usb_driver_entry_2_usb_generic_hubinitializer for hub_id_tableinitializer for _u_boot_list_2_uclass_2_usb_hubinitializer for _u_boot_list_2_driver_2_usb_generic_hubinitializer for usb_hub_idsinitializer for usb_scan_listinitializer for _min1initializer for _min2initializer for keycodeinitializer for ledsinitializer for ifaceinitializer for _u_boot_list_2_usb_driver_entry_2_usb_kbdinitializer for kbd_id_tableinitializer for _u_boot_list_2_driver_2_usb_kbdinitializer for usb_kbd_idsinitializer for usb_kbd_arrowinitializer for usb_kbd_num_keypadinitializer for usb_kbd_numkey_shiftedinitializer for usb_kbd_numkeyinitializer for pccbinitializer for usb_stor_bufinitializer for srbinitializer for retriesinitializer for cswinitializer for cbwinitializer for descinitializer for _u_boot_list_2_driver_2_usb_storage_blkinitializer for usb_storage_opsinitializer for _u_boot_list_2_usb_driver_entry_2_usb_mass_storageinitializer for mass_storage_id_tableinitializer for _u_boot_list_2_uclass_2_usb_mass_storageinitializer for _u_boot_list_2_driver_2_usb_mass_storageinitializer for usb_mass_storage_idsinitializer for us_directioninitializer for dummyinitializer for statinitializer for crc_retriesinitializer for hdr_foundinitializer for radixinitializer for dpinitializer for nowinitializer for dup_strinitializer for n_entsinitializer for bootinitializer for trdbinitializer for suminitializer for blockinitializer for _u_boot_list_2_part_driver_2_amigainitializer for bootcodeinitializer for rdbinitializer for lba_startinitializer for mbrinitializer for lba_sizeinitializer for _u_boot_list_2_part_driver_2_dosinitializer for pteinitializer for emptyinitializer for essinitializer for offset_blksinitializer for hdr_startinitializer for hdr_endinitializer for pte_startinitializer for pte_endinitializer for last_usable_lbainitializer for pte_blk_cntinitializer for p_mbrinitializer for legacymbrinitializer for crc32_backupinitializer for _u_boot_list_2_part_driver_2_a_efiinitializer for system_guidinitializer for partition_basic_data_guidinitializer for pprinitializer for pbrinitializer for pveinitializer for _u_boot_list_2_part_driver_2_isoinitializer for ddescinitializer for mpartinitializer for _u_boot_list_2_part_driver_2_macinitializer for ADC_DATA_FORMAT_BINinitializer for ADC_DATA_FORMAT_2Sinitializer for uc_pdatainitializer for raw64initializer for value_signinitializer for timeout_usinitializer for _u_boot_list_2_uclass_2_adcinitializer for SANDBOX_ADC_INACTIVEinitializer for SANDBOX_ADC_ACTIVEinitializer for SANDBOX_ADC_MODE_SINGLE_CHANNELinitializer for SANDBOX_ADC_MODE_MULTI_CHANNELinitializer for privinitializer for _u_boot_list_2_driver_2_sandbox_adcinitializer for sandbox_adc_idsinitializer for sandbox_adc_opsinitializer for _u_boot_list_2_driver_2_sata_blkinitializer for sata_blk_opsinitializer for _u_boot_list_2_uclass_2_axi_emulinitializer for _u_boot_list_2_uclass_2_axiinitializer for _u_boot_list_2_driver_2_axi_sandbox_businitializer for axi_sandbox_opsinitializer for axi_sandbox_idsinitializer for _u_boot_list_2_driver_2_sandbox_axi_storeinitializer for sandbox_store_opsinitializer for sandbox_store_idsinitializer for max_devnuminitializer for found_moreinitializer for _u_boot_list_2_uclass_2_blkinitializer for if_type_uclass_idinitializer for if_typename_strinitializer for nodeinitializer for srcinitializer for _statsinitializer for block_cacheinitializer for block_devinitializer for deviceinitializer for pwrsaveinitializer for _u_boot_list_2_uclass_2_ideinitializer for _u_boot_list_2_pci_driver_entry_2_ideinitializer for ide_supportedinitializer for _u_boot_list_2_driver_2_ideinitializer for _u_boot_list_2_driver_2_ide_blkinitializer for ide_blk_opsinitializer for ide_bus_offsetinitializer for host_devinitializer for _u_boot_list_2_driver_2_sandbox_host_blkinitializer for sandbox_host_blk_opsinitializer for _u_boot_list_2_uclass_2_boardinitializer for BOOL_CALLED_DETECTinitializer for INT_TEST1initializer for INT_TEST2initializer for STR_VACATIONSPOTinitializer for i1initializer for i2initializer for _u_boot_list_2_driver_2_board_sandboxinitializer for board_sandbox_opsinitializer for board_sandbox_idsinitializer for vacation_spotsinitializer for propnameinitializer for _u_boot_list_2_uclass_2_bootcountinitializer for _u_boot_list_2_driver_2_bootcount_rtcinitializer for bootcount_rtc_idsinitializer for bootcount_rtc_opsinitializer for bootcount_magicinitializer for _u_boot_list_2_driver_2_cache_sandboxinitializer for sandbox_cache_idsinitializer for sandbox_cache_opsinitializer for dividerinitializer for parent_rateinitializer for _tmpinitializer for _u_boot_list_2_driver_2_ccf_clk_dividerinitializer for clk_divider_opsinitializer for fixinitializer for _u_boot_list_2_driver_2_imx_clk_fixed_factorinitializer for ccf_clk_fixed_factor_opsinitializer for widthinitializer for muxinitializer for num_parentsinitializer for _u_boot_list_2_driver_2_ccf_clk_muxinitializer for clk_mux_opsinitializer for clkinitializer for ratesinitializer for _u_boot_list_2_uclass_2_clkinitializer for ffinitializer for _u_boot_list_2_driver_2_clk_fixed_factorinitializer for clk_fixed_factor_matchinitializer for clk_fixed_factor_opsinitializer for _u_boot_list_2_driver_2_clk_fixed_rateinitializer for clk_fixed_rate_matchinitializer for clk_fixed_rate_opsinitializer for SANDBOX_CLK_TEST_ID_FIXEDinitializer for SANDBOX_CLK_TEST_ID_SPIinitializer for SANDBOX_CLK_TEST_ID_I2Cinitializer for SANDBOX_CLK_TEST_ID_COUNTinitializer for SANDBOX_CLK_ID_SPIinitializer for SANDBOX_CLK_ID_I2Cinitializer for SANDBOX_CLK_ID_COUNTinitializer for _u_boot_list_2_driver_2_clk_sandboxinitializer for sandbox_clk_idsinitializer for sandbox_clk_opsinitializer for SANDBOX_PLLV3_GENERICinitializer for SANDBOX_PLLV3_USBinitializer for SANDBOX_CLK_PLL2initializer for SANDBOX_CLK_PLL3initializer for SANDBOX_CLK_PLL3_60Minitializer for SANDBOX_CLK_PLL3_80Minitializer for SANDBOX_CLK_ECSPI_ROOTinitializer for SANDBOX_CLK_ECSPI0initializer for SANDBOX_CLK_ECSPI1initializer for SANDBOX_CLK_USDHC1_SELinitializer for SANDBOX_CLK_USDHC2_SELinitializer for gateinitializer for drv_nameinitializer for _u_boot_list_2_driver_2_sandbox_clk_ccfinitializer for usdhc_selsinitializer for sandbox_clk_ccf_test_idsinitializer for _u_boot_list_2_driver_2_sandbox_clk_gate2initializer for clk_gate2_opsinitializer for _u_boot_list_2_driver_2_sandbox_clk_pll_genericinitializer for clk_pllv3_generic_opsinitializer for sbctinitializer for _u_boot_list_2_driver_2_sandbox_clk_testinitializer for sandbox_clk_test_idsinitializer for sandbox_clk_test_namesinitializer for IMX_PLLV3_GENERICinitializer for IMX_PLLV3_SYSinitializer for IMX_PLLV3_USBinitializer for IMX_PLLV3_USB_VF610initializer for IMX_PLLV3_AVinitializer for IMX_PLLV3_ENETinitializer for IMX_PLLV3_ENET_IMX7initializer for IMX_PLLV3_SYS_VF610initializer for IMX_PLLV3_DDR_IMX7initializer for _u_boot_list_2_driver_2_clk_gate2initializer for pfdinitializer for fracinitializer for _u_boot_list_2_driver_2_clk_pfdinitializer for clk_pfd_opsinitializer for pllinitializer for divinitializer for _u_boot_list_2_driver_2_clk_pllv3_genericinitializer for saved_retinitializer for fdtinitializer for platdata_sizeinitializer for allocinitializer for drinitializer for new_drinitializer for tot_sizeinitializer for driverinitializer for uclassinitializer for idinitializer for cur_indexinitializer for propinitializer for separatorinitializer for npinitializer for scoreinitializer for curvinitializer for ppinitializer for aliases_lookupinitializer for pp_lastinitializer for ooffsetinitializer for uc_nameinitializer for REGMAP_NATIVE_ENDIANinitializer for REGMAP_LITTLE_ENDIANinitializer for REGMAP_BIG_ENDIANinitializer for REGMAP_SIZE_8initializer for REGMAP_SIZE_16initializer for REGMAP_SIZE_32initializer for REGMAP_SIZE_64initializer for node_nameinitializer for _u_boot_list_2_uclass_2_rootinitializer for _u_boot_list_2_driver_2_root_driverinitializer for root_infoinitializer for _u_boot_list_2_driver_2_simple_bus_drvinitializer for generic_simple_bus_idsinitializer for _u_boot_list_2_uclass_2_simple_businitializer for _u_boot_list_2_driver_2_generic_sysconinitializer for generic_syscon_idsinitializer for _u_boot_list_2_uclass_2_sysconinitializer for uc_drvinitializer for ucinitializer for _u_boot_list_2_uclass_2_nopinitializer for _u_boot_list_2_uclass_2_cpuinitializer for _u_boot_list_2_driver_2_cpu_businitializer for _u_boot_list_2_driver_2_cpu_sandboxinitializer for cpu_sandbox_idsinitializer for cpu_sandbox_opsinitializer for _u_boot_list_2_driver_info_2_mod_exp_swinitializer for _u_boot_list_2_driver_2_mod_exp_swinitializer for mod_exp_ops_swinitializer for _u_boot_list_2_uclass_2_mod_expinitializer for _u_boot_list_2_driver_info_2_demo4initializer for _u_boot_list_2_driver_info_2_demo3initializer for _u_boot_list_2_driver_info_2_demo2initializer for _u_boot_list_2_driver_info_2_demo1initializer for _u_boot_list_2_driver_info_2_demo0initializer for yellow_hexagoninitializer for green_triangleinitializer for red_squareinitializer for pdatainitializer for colourinitializer for shapesinitializer for _u_boot_list_2_driver_2_demo_shape_drvinitializer for demo_shape_idinitializer for shape_opsinitializer for _u_boot_list_2_driver_2_demo_simple_drvinitializer for simple_opsinitializer for dninitializer for _u_boot_list_2_uclass_2_demoinitializer for DMA_MEM_TO_MEMinitializer for DMA_MEM_TO_DEVinitializer for DMA_DEV_TO_MEMinitializer for DMA_DEV_TO_DEVinitializer for _u_boot_list_2_uclass_2_dmainitializer for udinitializer for _u_boot_list_2_driver_2_sandbox_dmainitializer for sandbox_dma_idsinitializer for sandbox_dma_opsinitializer for commandsinitializer for bootm_argsinitializer for var_parameterinitializer for boardinitializer for getvar_dispatchinitializer for _u_boot_list_2_driver_2_sandbox_firmwareinitializer for generic_sandbox_firmware_idsinitializer for _u_boot_list_2_uclass_2_firmwareinitializer for vectorinitializer for bitmaskinitializer for _u_boot_list_2_uclass_2_gpioinitializer for gpio_functioninitializer for gpio_baseinitializer for _u_boot_list_2_driver_2_pwrkey_pm8941initializer for pm8941_pwrkey_idsinitializer for pm8941_pwrkey_opsinitializer for _u_boot_list_2_driver_2_gpio_pm8916initializer for pm8916_gpio_idsinitializer for pm8916_gpio_opsinitializer for gpioinitializer for _u_boot_list_2_driver_2_gpio_sandboxinitializer for sandbox_gpio_idsinitializer for gpio_sandbox_opsinitializer for _u_boot_list_2_uclass_2_hwspinlockinitializer for _u_boot_list_2_driver_2_hwspinlock_sandboxinitializer for sandbox_hwspinlock_idsinitializer for sandbox_hwspinlock_opsinitializer for TPS65090_ST1_OTCinitializer for TPS65090_ST1_OCCinitializer for TPS65090_ST1_STATE_SHIFTinitializer for TPS65090_ST1_STATE_MASKinitializer for IRQ1_VBATGinitializer for CG_CTRL0_ENC_MASKinitializer for MAX_FET_NUMinitializer for MAX_CTRL_READ_TRIESinitializer for FET_CTRL_TOFETinitializer for FET_CTRL_PGFETinitializer for FET_CTRL_WAITinitializer for FET_CTRL_ADENFETinitializer for FET_CTRL_ENFETinitializer for REG_IRQ1initializer for REG_CG_CTRL0initializer for REG_CG_STATUS1initializer for REG_FET_BASEinitializer for REG_FET1_CTRLinitializer for REG_FET2_CTRLinitializer for REG_FET3_CTRLinitializer for REG_FET4_CTRLinitializer for REG_FET5_CTRLinitializer for REG_FET6_CTRLinitializer for REG_FET7_CTRLinitializer for TPS65090_NUM_REGSinitializer for is_readinitializer for oninitializer for _u_boot_list_2_driver_2_cros_ec_ldoinitializer for cros_ec_i2c_idsinitializer for cros_ec_i2c_opsinitializer for i2c_businitializer for _u_boot_list_2_driver_2_cros_ec_tunnelinitializer for uc_platinitializer for _u_boot_list_2_driver_2_i2c_emul_parent_drvinitializer for i2c_emul_parent_idsinitializer for _u_boot_list_2_uclass_2_i2c_emul_parentinitializer for _u_boot_list_2_uclass_2_i2c_emulinitializer for sclinitializer for sdainitializer for next_is_readinitializer for failuresinitializer for PIN_SDAinitializer for PIN_SCLinitializer for PIN_COUNTinitializer for _u_boot_list_2_driver_2_i2c_gpioinitializer for i2c_gpio_idsinitializer for i2c_gpio_opsinitializer for classinitializer for i2cinitializer for maxinitializer for counterinitializer for minitializer for _u_boot_list_2_driver_2_i2c_generic_chip_drvinitializer for _u_boot_list_2_uclass_2_i2c_genericinitializer for _u_boot_list_2_uclass_2_i2cinitializer for waitinginitializer for _u_boot_list_2_driver_2_i2c_arbitratorinitializer for i2c_arbitrator_idsinitializer for i2c_arbitrator_opsinitializer for arrowinitializer for _u_boot_list_2_uclass_2_i2c_muxinitializer for _u_boot_list_2_driver_2_i2c_mux_businitializer for i2c_mux_bus_opsinitializer for _u_boot_list_2_driver_2_i2c_sandboxinitializer for sandbox_i2c_idsinitializer for sandbox_i2c_opsinitializer for inputinitializer for sdevinitializer for sameinitializer for KBC_MAX_KEYSinitializer for KBC_REPEAT_RATE_MSinitializer for KBC_REPEAT_DELAY_MSinitializer for _u_boot_list_2_driver_2_cros_ec_kbdinitializer for cros_ec_kbd_idsinitializer for cros_ec_kbd_opsinitializer for releaseinitializer for kbd_timeoutinitializer for QUIRK_DUP_PORinitializer for _u_boot_list_2_driver_2_i8042_kbdinitializer for i8042_kbd_idsinitializer for i8042_kbd_opsinitializer for ext_key_mapinitializer for INPUT_LED_SCROLLinitializer for INPUT_LED_NUMinitializer for INPUT_LED_CAPSinitializer for INPUT_MAX_MODIFIERSinitializer for INPUT_BUFFER_LENinitializer for is_repeatinitializer for ch_countinitializer for tabinitializer for flipinitializer for KBD_ENGLISHinitializer for KBD_GERMANinitializer for FLAG_SCROLL_LOCKinitializer for FLAG_NUM_LOCKinitializer for FLAG_CAPS_LOCKinitializer for KEY_RELEASEinitializer for KEY_MASKinitializer for kbd_to_ansi364initializer for kbd_entryinitializer for kbd_right_alt_xlate_germaninitializer for kbd_shift_xlate_germaninitializer for kbd_plain_xlate_germaninitializer for kbd_ctrl_xlateinitializer for kbd_shift_xlateinitializer for kbd_plain_xlateinitializer for key_in_same_colinitializer for key_in_same_rowinitializer for _u_boot_list_2_uclass_2_keyboardinitializer for _u_boot_list_2_uclass_2_ledinitializer for _u_boot_list_2_driver_2_led_gpioinitializer for led_gpio_idsinitializer for gpio_led_opsinitializer for _u_boot_list_2_uclass_2_mailboxinitializer for sbmtinitializer for _u_boot_list_2_driver_2_sandbox_mbox_testinitializer for sandbox_mbox_test_idsinitializer for sbminitializer for pmsginitializer for _u_boot_list_2_driver_2_sandbox_mboxinitializer for sandbox_mbox_mbox_opsinitializer for sandbox_mbox_idsinitializer for read_ptrinitializer for cdevinitializer for burstinitializer for dininitializer for respinitializer for rsinitializer for in_bytesinitializer for rqinitializer for out_bytesinitializer for CROS_EC_CMD_TIMEOUT_MSinitializer for CROS_EC_CMD_HASH_TIMEOUT_MSinitializer for _u_boot_list_2_uclass_2_cros_ecinitializer for event_mapinitializer for ec_request_i2cinitializer for ec_response_i2cinitializer for _u_boot_list_2_driver_2_cros_ec_i2cinitializer for cros_ec_idsinitializer for cros_ec_opsinitializer for args_addrinitializer for param_addrinitializer for cmd_addrinitializer for data_addrinitializer for _u_boot_list_2_driver_2_cros_ec_lpcinitializer for ecinitializer for req_hdrinitializer for req_datainitializer for resp_hdrinitializer for resp_datainitializer for reqinitializer for expectinitializer for matrixinitializer for _u_boot_list_2_driver_2_cros_ec_sandboxinitializer for _u_boot_list_2_state_io_2_cros_ecinitializer for slaveinitializer for _u_boot_list_2_driver_2_cros_ec_spiinitializer for write_sizeinitializer for _u_boot_list_2_uclass_2_i2c_eeprominitializer for _u_boot_list_2_driver_2_i2c_eeprom_stdinitializer for i2c_eeprom_std_idsinitializer for i2c_eeprom_std_opsinitializer for _u_boot_list_2_driver_2_sandbox_i2c_emulinitializer for sandbox_i2c_emul_opsinitializer for _u_boot_list_2_uclass_2_miscinitializer for _u_boot_list_2_driver_2_misc_sandboxinitializer for misc_sandbox_idsinitializer for misc_sandbox_opsinitializer for _u_boot_list_2_uclass_2_pwrseqinitializer for fw_listinitializer for OP_TO_LOWERinitializer for OP_TO_UPPERinitializer for OP_SWAPinitializer for MEM_TEXT_SIZEinitializer for _u_boot_list_2_pci_driver_entry_2_sandbox_swap_case_emulinitializer for sandbox_swap_case_supportedinitializer for _u_boot_list_2_driver_2_sandbox_swap_case_emulinitializer for sandbox_swap_case_idsinitializer for sandbox_swap_case_emul_opsinitializer for pci_ea_bar4_magicinitializer for pci_ea_bar2_magicinitializer for ea_regsinitializer for barinfoinitializer for _u_boot_list_2_driver_2_sandbox_sysconinitializer for sandbox_syscon_idsinitializer for mmc_devinitializer for uprivinitializer for mmcinitializer for _u_boot_list_2_uclass_2_mmcinitializer for _u_boot_list_2_driver_2_mmcinitializer for _u_boot_list_2_driver_2_mmc_blkinitializer for mmc_blk_opsinitializer for uhs_eninitializer for ext_csdinitializer for has_partsinitializer for mmc_versionsinitializer for test_csdinitializer for widthsinitializer for ssrinitializer for sd_au_sizeinitializer for switch_statusinitializer for scrinitializer for part_attrsinitializer for tot_enh_size_multinitializer for retryinitializer for is_part_switchinitializer for dev_numinitializer for blocks_todoinitializer for freqsinitializer for namesinitializer for ext_csd_bus_widthinitializer for mmc_modes_by_prefinitializer for sd_modes_by_prefinitializer for multipliersinitializer for fbaseinitializer for blk_rinitializer for cfginitializer for _u_boot_list_2_driver_2_mmc_sandboxinitializer for sandbox_mmc_idsinitializer for sandbox_mmc_opsinitializer for mtdidsinitializer for mtdpartsinitializer for UBI_VOLUME_ADDEDinitializer for UBI_VOLUME_REMOVEDinitializer for UBI_VOLUME_RESIZEDinitializer for UBI_VOLUME_RENAMEDinitializer for UBI_VOLUME_UPDATEDinitializer for UBI_READONLYinitializer for UBI_READWRITEinitializer for UBI_EXCLUSIVEinitializer for UBI_METAONLYinitializer for UBI_COMPAT_DELETEinitializer for UBI_COMPAT_ROinitializer for UBI_COMPAT_PRESERVEinitializer for UBI_COMPAT_REJECTinitializer for UBI_VTBL_AUTORESIZE_FLGinitializer for UBI_VID_DYNAMICinitializer for UBI_VID_STATICinitializer for UBI_VOL_PROP_DIRECT_WRITEinitializer for UBI_DYNAMIC_VOLUMEinitializer for UBI_STATIC_VOLUMEinitializer for POWER_CUT_EC_WRITEinitializer for POWER_CUT_VID_WRITEinitializer for UBI_NO_FASTMAPinitializer for UBI_BAD_FASTMAPinitializer for MOVE_CANCEL_RACEinitializer for MOVE_SOURCE_RD_ERRinitializer for MOVE_TARGET_RD_ERRinitializer for MOVE_TARGET_WR_ERRinitializer for MOVE_TARGET_BITFLIPSinitializer for MOVE_RETRYinitializer for UBI_IO_FFinitializer for UBI_IO_FF_BITFLIPSinitializer for UBI_IO_BAD_HDRinitializer for UBI_IO_BAD_HDR_EBADMSGinitializer for UBI_IO_BITFLIPSinitializer for sectioninitializer for nbytesinitializer for sbsfinitializer for rxinitializer for txinitializer for oldstateinitializer for specinitializer for statesinitializer for SF_CMDinitializer for SF_IDinitializer for SF_ADDRinitializer for SF_READinitializer for SF_WRITEinitializer for SF_ERASEinitializer for SF_READ_STATUSinitializer for SF_READ_STATUS1initializer for SF_WRITE_STATUSinitializer for _u_boot_list_2_driver_2_sandbox_sf_emulinitializer for sandbox_sf_idsinitializer for sandbox_sf_emul_opsinitializer for _u_boot_list_2_uclass_2_spi_norinitializer for flashinitializer for spiinitializer for _u_boot_list_2_driver_2_spi_flash_stdinitializer for spi_flash_std_idsinitializer for spi_flash_std_opsinitializer for SPI_MEM_DATA_INinitializer for SPI_MEM_DATA_OUTinitializer for srinitializer for hwcapsinitializer for best_matchinitializer for hwcaps_pp2cmdinitializer for hwcaps_read2cmdinitializer for norinitializer for auxinitializer for read_leninitializer for can_be_topinitializer for can_be_bottominitializer for shiftinitializer for opinitializer for fsrinitializer for need_wreninitializer for spi_nor_3to4_eraseinitializer for spi_nor_3to4_programinitializer for spi_nor_3to4_readinitializer for remaininginitializer for SNOR_CMD_PPinitializer for SNOR_CMD_PP_1_1_4initializer for SNOR_CMD_PP_1_4_4initializer for SNOR_CMD_PP_4_4_4initializer for SNOR_CMD_PP_1_1_8initializer for SNOR_CMD_PP_1_8_8initializer for SNOR_CMD_PP_8_8_8initializer for SNOR_CMD_PP_MAXinitializer for SNOR_CMD_READinitializer for SNOR_CMD_READ_FASTinitializer for SNOR_CMD_READ_1_1_1_DTRinitializer for SNOR_CMD_READ_1_1_2initializer for SNOR_CMD_READ_1_2_2initializer for SNOR_CMD_READ_2_2_2initializer for SNOR_CMD_READ_1_2_2_DTRinitializer for SNOR_CMD_READ_1_1_4initializer for SNOR_CMD_READ_1_4_4initializer for SNOR_CMD_READ_4_4_4initializer for SNOR_CMD_READ_1_4_4_DTRinitializer for SNOR_CMD_READ_1_1_8initializer for SNOR_CMD_READ_1_8_8initializer for SNOR_CMD_READ_8_8_8initializer for SNOR_CMD_READ_1_8_8_DTRinitializer for SNOR_CMD_READ_MAXinitializer for spi_nor_idsinitializer for WANT_NOTHINGinitializer for WANT_NODES_ONLYinitializer for WANT_NODES_AND_PROPSinitializer for WANT_ALL_NODES_AND_PROPSinitializer for _u_boot_list_2_driver_2_mdio_mux_sandboxinitializer for mdio_mux_sandbox_idsinitializer for mdio_mux_sandbox_opsinitializer for _u_boot_list_2_driver_2_mdio_sandboxinitializer for mdio_sandbox_idsinitializer for mdio_sandbox_opsinitializer for send_leninitializer for initedinitializer for net_loop_last_protocolinitializer for devadinitializer for phy_idinitializer for lpainitializer for gblpainitializer for estatusinitializer for mii_reginitializer for bmcrinitializer for ctlinitializer for changedinitializer for phy_driversinitializer for genphy_driverinitializer for skip_localhostinitializer for localinitializer for ub_ifname_pfxinitializer for _u_boot_list_2_driver_2_sandbox_eth_raw_businitializer for sandbox_eth_raw_bus_idsinitializer for arpinitializer for pktptrinitializer for ethinitializer for _u_boot_list_2_driver_2_eth_sandbox_rawinitializer for sb_eth_raw_idsinitializer for sb_eth_raw_opsinitializer for lcl_recv_packet_lengthinitializer for _u_boot_list_2_driver_2_eth_sandboxinitializer for sb_eth_idsinitializer for sb_eth_opsinitializer for val_loinitializer for val_hiinitializer for NVME_CC_ENABLEinitializer for NVME_CC_CSS_NVMinitializer for NVME_CC_MPS_SHIFTinitializer for NVME_CC_ARB_RRinitializer for NVME_CC_ARB_WRRUinitializer for NVME_CC_ARB_VSinitializer for NVME_CC_SHN_NONEinitializer for NVME_CC_SHN_NORMALinitializer for NVME_CC_SHN_ABRUPTinitializer for NVME_CC_SHN_MASKinitializer for NVME_CC_IOSQESinitializer for NVME_CC_IOCQESinitializer for NVME_CSTS_RDYinitializer for NVME_CSTS_CFSinitializer for NVME_CSTS_SHST_NORMALinitializer for NVME_CSTS_SHST_OCCURinitializer for NVME_CSTS_SHST_CMPLTinitializer for NVME_CSTS_SHST_MASKinitializer for NVME_SC_SUCCESSinitializer for NVME_SC_INVALID_OPCODEinitializer for NVME_SC_INVALID_FIELDinitializer for NVME_SC_CMDID_CONFLICTinitializer for NVME_SC_DATA_XFER_ERRORinitializer for NVME_SC_POWER_LOSSinitializer for NVME_SC_INTERNALinitializer for NVME_SC_ABORT_REQinitializer for NVME_SC_ABORT_QUEUEinitializer for NVME_SC_FUSED_FAILinitializer for NVME_SC_FUSED_MISSINGinitializer for NVME_SC_INVALID_NSinitializer for NVME_SC_CMD_SEQ_ERRORinitializer for NVME_SC_SGL_INVALID_LASTinitializer for NVME_SC_SGL_INVALID_COUNTinitializer for NVME_SC_SGL_INVALID_DATAinitializer for NVME_SC_SGL_INVALID_METADATAinitializer for NVME_SC_SGL_INVALID_TYPEinitializer for NVME_SC_LBA_RANGEinitializer for NVME_SC_CAP_EXCEEDEDinitializer for NVME_SC_NS_NOT_READYinitializer for NVME_SC_RESERVATION_CONFLICTinitializer for NVME_SC_CQ_INVALIDinitializer for NVME_SC_QID_INVALIDinitializer for NVME_SC_QUEUE_SIZEinitializer for NVME_SC_ABORT_LIMITinitializer for NVME_SC_ABORT_MISSINGinitializer for NVME_SC_ASYNC_LIMITinitializer for NVME_SC_FIRMWARE_SLOTinitializer for NVME_SC_FIRMWARE_IMAGEinitializer for NVME_SC_INVALID_VECTORinitializer for NVME_SC_INVALID_LOG_PAGEinitializer for NVME_SC_INVALID_FORMATinitializer for NVME_SC_FIRMWARE_NEEDS_RESETinitializer for NVME_SC_INVALID_QUEUEinitializer for NVME_SC_FEATURE_NOT_SAVEABLEinitializer for NVME_SC_FEATURE_NOT_CHANGEABLEinitializer for NVME_SC_FEATURE_NOT_PER_NSinitializer for NVME_SC_FW_NEEDS_RESET_SUBSYSinitializer for NVME_SC_BAD_ATTRIBUTESinitializer for NVME_SC_INVALID_PIinitializer for NVME_SC_READ_ONLYinitializer for NVME_SC_WRITE_FAULTinitializer for NVME_SC_READ_ERRORinitializer for NVME_SC_GUARD_CHECKinitializer for NVME_SC_APPTAG_CHECKinitializer for NVME_SC_REFTAG_CHECKinitializer for NVME_SC_COMPARE_FAILEDinitializer for NVME_SC_ACCESS_DENIEDinitializer for NVME_SC_DNRinitializer for NVME_QUEUE_PHYS_CONTIGinitializer for NVME_CQ_IRQ_ENABLEDinitializer for NVME_SQ_PRIO_URGENTinitializer for NVME_SQ_PRIO_HIGHinitializer for NVME_SQ_PRIO_MEDIUMinitializer for NVME_SQ_PRIO_LOWinitializer for NVME_FEAT_ARBITRATIONinitializer for NVME_FEAT_POWER_MGMTinitializer for NVME_FEAT_LBA_RANGEinitializer for NVME_FEAT_TEMP_THRESHinitializer for NVME_FEAT_ERR_RECOVERYinitializer for NVME_FEAT_VOLATILE_WCinitializer for NVME_FEAT_NUM_QUEUESinitializer for NVME_FEAT_IRQ_COALESCEinitializer for NVME_FEAT_IRQ_CONFIGinitializer for NVME_FEAT_WRITE_ATOMICinitializer for NVME_FEAT_ASYNC_EVENTinitializer for NVME_FEAT_AUTO_PSTinitializer for NVME_FEAT_SW_PROGRESSinitializer for NVME_FEAT_HOST_IDinitializer for NVME_FEAT_RESV_MASKinitializer for NVME_FEAT_RESV_PERSISTinitializer for NVME_LOG_ERRORinitializer for NVME_LOG_SMARTinitializer for NVME_LOG_FW_SLOTinitializer for NVME_LOG_RESERVATIONinitializer for NVME_FWACT_REPLinitializer for NVME_FWACT_REPL_ACTVinitializer for NVME_FWACT_ACTVinitializer for nvme_admin_delete_sqinitializer for nvme_admin_create_sqinitializer for nvme_admin_get_log_pageinitializer for nvme_admin_delete_cqinitializer for nvme_admin_create_cqinitializer for nvme_admin_identifyinitializer for nvme_admin_abort_cmdinitializer for nvme_admin_set_featuresinitializer for nvme_admin_get_featuresinitializer for nvme_admin_async_eventinitializer for nvme_admin_activate_fwinitializer for nvme_admin_download_fwinitializer for nvme_admin_format_nvminitializer for nvme_admin_security_sendinitializer for nvme_admin_security_recvinitializer for NVME_DSMGMT_IDRinitializer for NVME_DSMGMT_IDWinitializer for NVME_DSMGMT_ADinitializer for NVME_RW_LRinitializer for NVME_RW_FUAinitializer for NVME_RW_DSM_FREQ_UNSPECinitializer for NVME_RW_DSM_FREQ_TYPICALinitializer for NVME_RW_DSM_FREQ_RAREinitializer for NVME_RW_DSM_FREQ_READSinitializer for NVME_RW_DSM_FREQ_WRITESinitializer for NVME_RW_DSM_FREQ_RWinitializer for NVME_RW_DSM_FREQ_ONCEinitializer for NVME_RW_DSM_FREQ_PREFETCHinitializer for NVME_RW_DSM_FREQ_TEMPinitializer for NVME_RW_DSM_LATENCY_NONEinitializer for NVME_RW_DSM_LATENCY_IDLEinitializer for NVME_RW_DSM_LATENCY_NORMinitializer for NVME_RW_DSM_LATENCY_LOWinitializer for NVME_RW_DSM_SEQ_REQinitializer for NVME_RW_DSM_COMPRESSEDinitializer for NVME_RW_PRINFO_PRCHK_REFinitializer for NVME_RW_PRINFO_PRCHK_APPinitializer for NVME_RW_PRINFO_PRCHK_GUARDinitializer for NVME_RW_PRINFO_PRACTinitializer for nvme_cmd_flushinitializer for nvme_cmd_writeinitializer for nvme_cmd_readinitializer for nvme_cmd_write_uncorinitializer for nvme_cmd_compareinitializer for nvme_cmd_write_zeroesinitializer for nvme_cmd_dsminitializer for nvme_cmd_resv_registerinitializer for nvme_cmd_resv_reportinitializer for nvme_cmd_resv_acquireinitializer for nvme_cmd_resv_releaseinitializer for NVME_LBART_TYPE_FSinitializer for NVME_LBART_TYPE_RAIDinitializer for NVME_LBART_TYPE_CACHEinitializer for NVME_LBART_TYPE_SWAPinitializer for NVME_LBART_ATTRIB_TEMPinitializer for NVME_LBART_ATTRIB_HIDEinitializer for NVME_SMART_CRIT_SPAREinitializer for NVME_SMART_CRIT_TEMPERATUREinitializer for NVME_SMART_CRIT_RELIABILITYinitializer for NVME_SMART_CRIT_MEDIAinitializer for NVME_SMART_CRIT_VOLATILE_MEMORYinitializer for NVME_NS_FEAT_THINinitializer for NVME_NS_FLBAS_LBA_MASKinitializer for NVME_NS_FLBAS_META_EXTinitializer for NVME_LBAF_RP_BESTinitializer for NVME_LBAF_RP_BETTERinitializer for NVME_LBAF_RP_GOODinitializer for NVME_LBAF_RP_DEGRADEDinitializer for NVME_NS_DPC_PI_LASTinitializer for NVME_NS_DPC_PI_FIRSTinitializer for NVME_NS_DPC_PI_TYPE3initializer for NVME_NS_DPC_PI_TYPE2initializer for NVME_NS_DPC_PI_TYPE1initializer for NVME_NS_DPS_PI_FIRSTinitializer for NVME_NS_DPS_PI_MASKinitializer for NVME_NS_DPS_PI_TYPE1initializer for NVME_NS_DPS_PI_TYPE2initializer for NVME_NS_DPS_PI_TYPE3initializer for NVME_CTRL_ONCS_COMPAREinitializer for NVME_CTRL_ONCS_WRITE_UNCORRECTABLEinitializer for NVME_CTRL_ONCS_DSMinitializer for NVME_CTRL_VWC_PRESENTinitializer for NVME_PS_FLAGS_MAX_POWER_SCALEinitializer for NVME_PS_FLAGS_NON_OP_STATEinitializer for ndevinitializer for _u_boot_list_2_uclass_2_nvmeinitializer for total_leninitializer for nsinitializer for total_lbasinitializer for lbasinitializer for slbainitializer for temp_leninitializer for ctrlinitializer for q_countinitializer for page_shiftinitializer for dev_page_mininitializer for dev_page_maxinitializer for nvmeqinitializer for headinitializer for phaseinitializer for stopinitializer for bitinitializer for NVME_ADMIN_Qinitializer for NVME_IO_Qinitializer for NVME_Q_NUMinitializer for _u_boot_list_2_pci_driver_entry_2_nvmeinitializer for nvme_supportedinitializer for _u_boot_list_2_driver_2_nvmeinitializer for _u_boot_list_2_driver_2_nvme_blkinitializer for nvme_blk_opsinitializer for buf_ctrlinitializer for buf_nsinitializer for PCH_REQ_HDA_CONFIGinitializer for PCH_REQ_PMBASE_INFOinitializer for PCH_REQ_TEST1initializer for PCH_REQ_TEST2initializer for PCH_REQ_TEST3initializer for PCH_REQ_COUNTinitializer for _u_boot_list_2_uclass_2_pchinitializer for _u_boot_list_2_driver_2_pch7_drvinitializer for pch7_idsinitializer for pch7_opsinitializer for _u_boot_list_2_driver_2_pch9_drvinitializer for pch9_idsinitializer for pch9_opsinitializer for _u_boot_list_2_driver_2_sandbox_pch_drvinitializer for sandbox_pch_idsinitializer for sandbox_pch_opsinitializer for _u_boot_list_2_uclass_2_pci_emulinitializer for ttlinitializer for bar_idinitializer for bus_addrinitializer for phys_addrinitializer for pplatinitializer for _u_boot_list_2_driver_2_pci_generic_drvinitializer for pci_generic_idsinitializer for _u_boot_list_2_uclass_2_pci_genericinitializer for _u_boot_list_2_driver_2_pci_bridge_drvinitializer for pci_bridge_idsinitializer for pci_bridge_opsinitializer for _u_boot_list_2_uclass_2_pciinitializer for ctlrinitializer for ctlr_hoseinitializer for enum_onlyinitializer for sub_businitializer for cmdstatinitializer for found_mem64initializer for bar_resinitializer for bar_nrinitializer for found_multiinitializer for idsinitializer for PCI_ROM_EMULATEinitializer for PCI_ROM_USE_NATIVEinitializer for PCI_ROM_ALLOW_FALLBACKinitializer for rominitializer for raminitializer for vesa_modeinitializer for vesainitializer for image_sizeinitializer for _u_boot_list_2_driver_2_pci_sandboxinitializer for sandbox_pci_idsinitializer for sandbox_pci_opsinitializer for PCI_EP_IRQ_UNKNOWNinitializer for PCI_EP_IRQ_LEGACYinitializer for PCI_EP_IRQ_MSIinitializer for PCI_EP_IRQ_MSIXinitializer for BAR_0initializer for BAR_1initializer for BAR_2initializer for BAR_3initializer for BAR_4initializer for BAR_5initializer for PCI_INTERRUPT_UNKNOWNinitializer for PCI_INTERRUPT_INTAinitializer for PCI_INTERRUPT_INTBinitializer for PCI_INTERRUPT_INTCinitializer for PCI_INTERRUPT_INTDinitializer for _u_boot_list_2_uclass_2_pci_epinitializer for _u_boot_list_2_driver_2_pci_ep_sandboxinitializer for sandbox_pci_ep_opsinitializer for sandbox_pci_ep_idsinitializer for _u_boot_list_2_uclass_2_phyinitializer for _u_boot_list_2_driver_2_phy_sandboxinitializer for sandbox_phy_idsinitializer for sandbox_phy_opsinitializer for subnode_target_typeinitializer for is_groupinitializer for node_offsetinitializer for selectorinitializer for gnameinitializer for pnameinitializer for _u_boot_list_2_driver_2_sandbox_pinctrlinitializer for sandbox_pinctrl_matchinitializer for sandbox_pinctrl_opsinitializer for sandbox_conf_paramsinitializer for sandbox_functionsinitializer for sandbox_groupsinitializer for sandbox_pins_muxinginitializer for sandbox_pinsinitializer for pre_reloc_onlyinitializer for _u_boot_list_2_uclass_2_pinctrlinitializer for _u_boot_list_2_driver_2_pinconfig_genericinitializer for _u_boot_list_2_uclass_2_pinconfiginitializer for _u_boot_list_2_uclass_2_power_domaininitializer for sbrtinitializer for _u_boot_list_2_driver_2_sandbox_power_domain_testinitializer for sandbox_power_domain_test_idsinitializer for sbrinitializer for _u_boot_list_2_driver_2_sandbox_power_domaininitializer for sandbox_power_domain_opsinitializer for sandbox_power_domain_idsinitializer for _u_boot_list_2_driver_2_pmic_act8846initializer for act8846_idsinitializer for act8846_opsinitializer for pmic_children_infoinitializer for pmic_devinitializer for _u_boot_list_2_driver_2_sandbox_i2c_pmic_emulinitializer for sandbox_i2c_pmic_idsinitializer for sandbox_i2c_pmic_emul_opsinitializer for OPMODE_OFFinitializer for OPMODE_LPMinitializer for OPMODE_STANDBYinitializer for OPMODE_STANDBY_LPMinitializer for OPMODE_ONinitializer for LDO_OFFinitializer for LDO_ONinitializer for DIS_LDOinitializer for EN_LDOinitializer for REG_DISABLEinitializer for REG_ENABLEinitializer for MAX77686_REG_PMIC_IDinitializer for MAX77686_REG_PMIC_INTSRCinitializer for MAX77686_REG_PMIC_INT1initializer for MAX77686_REG_PMIC_INT2initializer for MAX77686_REG_PMIC_INT1MSKinitializer for MAX77686_REG_PMIC_INT2MSKinitializer for MAX77686_REG_PMIC_STATUS1initializer for MAX77686_REG_PMIC_STATUS2initializer for MAX77686_REG_PMIC_PWRONinitializer for MAX77686_REG_PMIC_ONOFFDELAYinitializer for MAX77686_REG_PMIC_MRSTBinitializer for MAX77686_REG_PMIC_BUCK1CRTLinitializer for MAX77686_REG_PMIC_BUCK1OUTinitializer for MAX77686_REG_PMIC_BUCK2CTRL1initializer for MAX77686_REG_PMIC_BUCK234FREQinitializer for MAX77686_REG_PMIC_BUCK2DVS1initializer for MAX77686_REG_PMIC_BUCK2DVS2initializer for MAX77686_REG_PMIC_BUCK2DVS3initializer for MAX77686_REG_PMIC_BUCK2DVS4initializer for MAX77686_REG_PMIC_BUCK2DVS5initializer for MAX77686_REG_PMIC_BUCK2DVS6initializer for MAX77686_REG_PMIC_BUCK2DVS7initializer for MAX77686_REG_PMIC_BUCK2DVS8initializer for MAX77686_REG_PMIC_BUCK3CTRLinitializer for MAX77686_REG_PMIC_BUCK3DVS1initializer for MAX77686_REG_PMIC_BUCK3DVS2initializer for MAX77686_REG_PMIC_BUCK3DVS3initializer for MAX77686_REG_PMIC_BUCK3DVS4initializer for MAX77686_REG_PMIC_BUCK3DVS5initializer for MAX77686_REG_PMIC_BUCK3DVS6initializer for MAX77686_REG_PMIC_BUCK3DVS7initializer for MAX77686_REG_PMIC_BUCK3DVS8initializer for MAX77686_REG_PMIC_BUCK4CTRL1initializer for MAX77686_REG_PMIC_BUCK4DVS1initializer for MAX77686_REG_PMIC_BUCK4DVS2initializer for MAX77686_REG_PMIC_BUCK4DVS3initializer for MAX77686_REG_PMIC_BUCK4DVS4initializer for MAX77686_REG_PMIC_BUCK4DVS5initializer for MAX77686_REG_PMIC_BUCK4DVS6initializer for MAX77686_REG_PMIC_BUCK4DVS7initializer for MAX77686_REG_PMIC_BUCK4DVS8initializer for MAX77686_REG_PMIC_BUCK5CTRLinitializer for MAX77686_REG_PMIC_BUCK5OUTinitializer for MAX77686_REG_PMIC_BUCK6CRTLinitializer for MAX77686_REG_PMIC_BUCK6OUTinitializer for MAX77686_REG_PMIC_BUCK7CRTLinitializer for MAX77686_REG_PMIC_BUCK7OUTinitializer for MAX77686_REG_PMIC_BUCK8CRTLinitializer for MAX77686_REG_PMIC_BUCK8OUTinitializer for MAX77686_REG_PMIC_BUCK9CRTLinitializer for MAX77686_REG_PMIC_BUCK9OUTinitializer for MAX77686_REG_PMIC_LDO1CTRL1initializer for MAX77686_REG_PMIC_LDO2CTRL1initializer for MAX77686_REG_PMIC_LDO3CTRL1initializer for MAX77686_REG_PMIC_LDO4CTRL1initializer for MAX77686_REG_PMIC_LDO5CTRL1initializer for MAX77686_REG_PMIC_LDO6CTRL1initializer for MAX77686_REG_PMIC_LDO7CTRL1initializer for MAX77686_REG_PMIC_LDO8CTRL1initializer for MAX77686_REG_PMIC_LDO9CTRL1initializer for MAX77686_REG_PMIC_LDO10CTRL1initializer for MAX77686_REG_PMIC_LDO11CTRL1initializer for MAX77686_REG_PMIC_LDO12CTRL1initializer for MAX77686_REG_PMIC_LDO13CTRL1initializer for MAX77686_REG_PMIC_LDO14CTRL1initializer for MAX77686_REG_PMIC_LDO15CTRL1initializer for MAX77686_REG_PMIC_LDO16CTRL1initializer for MAX77686_REG_PMIC_LDO17CTRL1initializer for MAX77686_REG_PMIC_LDO18CTRL1initializer for MAX77686_REG_PMIC_LDO19CTRL1initializer for MAX77686_REG_PMIC_LDO20CTRL1initializer for MAX77686_REG_PMIC_LDO21CTRL1initializer for MAX77686_REG_PMIC_LDO22CTRL1initializer for MAX77686_REG_PMIC_LDO23CTRL1initializer for MAX77686_REG_PMIC_LDO24CTRL1initializer for MAX77686_REG_PMIC_LDO25CTRL1initializer for MAX77686_REG_PMIC_LDO26CTRL1initializer for MAX77686_REG_PMIC_LDO1CTRL2initializer for MAX77686_REG_PMIC_LDO2CTRL2initializer for MAX77686_REG_PMIC_LDO3CTRL2initializer for MAX77686_REG_PMIC_LDO4CTRL2initializer for MAX77686_REG_PMIC_LDO5CTRL2initializer for MAX77686_REG_PMIC_LDO6CTRL2initializer for MAX77686_REG_PMIC_LDO7CTRL2initializer for MAX77686_REG_PMIC_LDO8CTRL2initializer for MAX77686_REG_PMIC_LDO9CTRL2initializer for MAX77686_REG_PMIC_LDO10CTRL2initializer for MAX77686_REG_PMIC_LDO11CTRL2initializer for MAX77686_REG_PMIC_LDO12CTRL2initializer for MAX77686_REG_PMIC_LDO13CTRL2initializer for MAX77686_REG_PMIC_LDO14CTRL2initializer for MAX77686_REG_PMIC_LDO15CTRL2initializer for MAX77686_REG_PMIC_LDO16CTRL2initializer for MAX77686_REG_PMIC_LDO17CTRL2initializer for MAX77686_REG_PMIC_LDO18CTRL2initializer for MAX77686_REG_PMIC_LDO19CTRL2initializer for MAX77686_REG_PMIC_LDO20CTRL2initializer for MAX77686_REG_PMIC_LDO21CTRL2initializer for MAX77686_REG_PMIC_LDO22CTRL2initializer for MAX77686_REG_PMIC_LDO23CTRL2initializer for MAX77686_REG_PMIC_LDO24CTRL2initializer for MAX77686_REG_PMIC_LDO25CTRL2initializer for MAX77686_REG_PMIC_LDO26CTRL2initializer for MAX77686_REG_PMIC_BBATinitializer for MAX77686_REG_PMIC_32KHZinitializer for MAX77686_NUM_OF_REGSinitializer for _u_boot_list_2_driver_2_pmic_max77686initializer for max77686_idsinitializer for max77686_opsinitializer for REG_INT_STATUS0initializer for REG_INT_MASK0initializer for REG_INT_SENSE0initializer for REG_INT_STATUS1initializer for REG_INT_MASK1initializer for REG_INT_SENSE1initializer for REG_PU_MODE_Sinitializer for REG_IDENTIFICATIONinitializer for REG_UNUSED0initializer for REG_ACC0initializer for REG_ACC1initializer for REG_UNUSED1initializer for REG_UNUSED2initializer for REG_POWER_CTL0initializer for REG_POWER_CTL1initializer for REG_POWER_CTL2initializer for REG_REGEN_ASSIGNinitializer for REG_UNUSED3initializer for REG_MEM_Ainitializer for REG_MEM_Binitializer for REG_RTC_TIMEinitializer for REG_RTC_ALARMinitializer for REG_RTC_DAYinitializer for REG_RTC_DAY_ALARMinitializer for REG_SW_0initializer for REG_SW_1initializer for REG_SW_2initializer for REG_SW_3initializer for REG_SW_4initializer for REG_SW_5initializer for REG_SETTING_0initializer for REG_SETTING_1initializer for REG_MODE_0initializer for REG_MODE_1initializer for REG_POWER_MISCinitializer for REG_UNUSED4initializer for REG_UNUSED5initializer for REG_UNUSED6initializer for REG_UNUSED7initializer for REG_UNUSED8initializer for REG_UNUSED9initializer for REG_UNUSED10initializer for REG_UNUSED11initializer for REG_ADC0initializer for REG_ADC1initializer for REG_ADC2initializer for REG_ADC3initializer for REG_ADC4initializer for REG_CHARGEinitializer for REG_USB0initializer for REG_USB1initializer for REG_LED_CTL0initializer for REG_LED_CTL1initializer for REG_LED_CTL2initializer for REG_LED_CTL3initializer for REG_UNUSED12initializer for REG_UNUSED13initializer for REG_TRIM0initializer for REG_TRIM1initializer for REG_TEST0initializer for REG_TEST1initializer for REG_TEST2initializer for REG_TEST3initializer for REG_TEST4initializer for PMIC_NUM_OF_REGSinitializer for _u_boot_list_2_driver_2_pmic_mc34708initializer for mc34708_idsinitializer for mc34708_opsinitializer for PFUZE100_DEVICEIDinitializer for PFUZE100_REVIDinitializer for PFUZE100_FABIDinitializer for PFUZE100_SW1ABVOLinitializer for PFUZE100_SW1ABSTBYinitializer for PFUZE100_SW1ABOFFinitializer for PFUZE100_SW1ABMODEinitializer for PFUZE100_SW1ABCONFinitializer for PFUZE100_SW1CVOLinitializer for PFUZE100_SW1CSTBYinitializer for PFUZE100_SW1COFFinitializer for PFUZE100_SW1CMODEinitializer for PFUZE100_SW1CCONFinitializer for PFUZE100_SW2VOLinitializer for PFUZE100_SW2STBYinitializer for PFUZE100_SW2OFFinitializer for PFUZE100_SW2MODEinitializer for PFUZE100_SW2CONFinitializer for PFUZE100_SW3AVOLinitializer for PFUZE100_SW3ASTBYinitializer for PFUZE100_SW3AOFFinitializer for PFUZE100_SW3AMODEinitializer for PFUZE100_SW3ACONFinitializer for PFUZE100_SW3BVOLinitializer for PFUZE100_SW3BSTBYinitializer for PFUZE100_SW3BOFFinitializer for PFUZE100_SW3BMODEinitializer for PFUZE100_SW3BCONFinitializer for PFUZE100_SW4VOLinitializer for PFUZE100_SW4STBYinitializer for PFUZE100_SW4OFFinitializer for PFUZE100_SW4MODEinitializer for PFUZE100_SW4CONFinitializer for PFUZE100_SWBSTCON1initializer for PFUZE100_VREFDDRCONinitializer for PFUZE100_VSNVSVOLinitializer for PFUZE100_VGEN1VOLinitializer for PFUZE100_VGEN2VOLinitializer for PFUZE100_VGEN3VOLinitializer for PFUZE100_VGEN4VOLinitializer for PFUZE100_VGEN5VOLinitializer for PFUZE100_VGEN6VOLinitializer for PFUZE100_NUM_OF_REGSinitializer for PFUZE100initializer for PFUZE200initializer for PFUZE3000initializer for PFUZE3000_DEVICEIDinitializer for PFUZE3000_REVIDinitializer for PFUZE3000_FABIDinitializer for PFUZE3000_INTSTAT0initializer for PFUZE3000_INTMASK0initializer for PFUZE3000_INTSENSE0initializer for PFUZE3000_INTSTAT1initializer for PFUZE3000_INTMASK1initializer for PFUZE3000_INTSENSE1initializer for PFUZE3000_INTSTAT3initializer for PFUZE3000_INTMASK3initializer for PFUZE3000_INTSENSE3initializer for PFUZE3000_INTSTAT4initializer for PFUZE3000_INTMASK4initializer for PFUZE3000_INTSENSE4initializer for PFUZE3000_COINCTLinitializer for PFUZE3000_PWRCTLinitializer for PFUZE3000_MEMAinitializer for PFUZE3000_MEMBinitializer for PFUZE3000_MEMCinitializer for PFUZE3000_MEMDinitializer for PFUZE3000_SW1AVOLTinitializer for PFUZE3000_SW1ASTBYinitializer for PFUZE3000_SW1AOFFinitializer for PFUZE3000_SW1AMODEinitializer for PFUZE3000_SW1ACONFinitializer for PFUZE3000_SW1BVOLTinitializer for PFUZE3000_SW1BSTBYinitializer for PFUZE3000_SW1BOFFinitializer for PFUZE3000_SW1BMODEinitializer for PFUZE3000_SW1BCONFinitializer for PFUZE3000_SW2VOLTinitializer for PFUZE3000_SW2STBYinitializer for PFUZE3000_SW2OFFinitializer for PFUZE3000_SW2MODEinitializer for PFUZE3000_SW2CONFinitializer for PFUZE3000_SW3VOLTinitializer for PFUZE3000_SW3STBYinitializer for PFUZE3000_SW3OFFinitializer for PFUZE3000_SW3MODEinitializer for PFUZE3000_SW3CONFinitializer for PFUZE3000_SWBSTCTLinitializer for PFUZE3000_LDOGCTLinitializer for PFUZE3000_VREFDDRCTLinitializer for PFUZE3000_VSNVSCTLinitializer for PFUZE3000_VLDO1CTLinitializer for PFUZE3000_VLDO2CTLinitializer for PFUZE3000_VCC_SDCTLinitializer for PFUZE3000_V33CTLinitializer for PFUZE3000_VLDO3CTLinitializer for PFUZE3000_VLD4CTLinitializer for PFUZE3000_NUM_OF_REGSinitializer for _u_boot_list_2_driver_2_pmic_pfuze100initializer for pfuze100_idsinitializer for pfuze100_opsinitializer for _u_boot_list_2_driver_2_pmic_pm8916initializer for pm8916_idsinitializer for pm8916_opsinitializer for pmic_privinitializer for bind_countinitializer for _u_boot_list_2_uclass_2_pmicinitializer for RK805_IDinitializer for RK808_IDinitializer for RK818_IDinitializer for REG_SECONDSinitializer for REG_MINUTESinitializer for REG_HOURSinitializer for REG_DAYSinitializer for REG_MONTHSinitializer for REG_YEARSinitializer for REG_WEEKSinitializer for REG_ALARM_SECONDSinitializer for REG_ALARM_MINUTESinitializer for REG_ALARM_HOURSinitializer for REG_ALARM_DAYSinitializer for REG_ALARM_MONTHSinitializer for REG_ALARM_YEARSinitializer for REG_RTC_CTRLinitializer for REG_RTC_STATUSinitializer for REG_RTC_INTinitializer for REG_RTC_COMP_LSBinitializer for REG_RTC_COMP_MSBinitializer for ID_MSBinitializer for ID_LSBinitializer for REG_CLK32OUTinitializer for REG_VB_MONinitializer for REG_THERMALinitializer for REG_DCDC_ENinitializer for REG_LDO_ENinitializer for REG_SLEEP_SET_OFF1initializer for REG_SLEEP_SET_OFF2initializer for REG_DCDC_UV_STSinitializer for REG_DCDC_UV_ACTinitializer for REG_LDO_UV_STSinitializer for REG_LDO_UV_ACTinitializer for REG_DCDC_PGinitializer for REG_LDO_PGinitializer for REG_VOUT_MON_TDBinitializer for REG_BUCK1_CONFIGinitializer for REG_BUCK1_ON_VSELinitializer for REG_BUCK1_SLP_VSELinitializer for REG_BUCK1_DVS_VSELinitializer for REG_BUCK2_CONFIGinitializer for REG_BUCK2_ON_VSELinitializer for REG_BUCK2_SLP_VSELinitializer for REG_BUCK2_DVS_VSELinitializer for REG_BUCK3_CONFIGinitializer for REG_BUCK4_CONFIGinitializer for REG_BUCK4_ON_VSELinitializer for REG_BUCK4_SLP_VSELinitializer for REG_BOOST_CONFIG_REGinitializer for REG_LDO1_ON_VSELinitializer for REG_LDO1_SLP_VSELinitializer for REG_LDO2_ON_VSELinitializer for REG_LDO2_SLP_VSELinitializer for REG_LDO3_ON_VSELinitializer for REG_LDO3_SLP_VSELinitializer for REG_LDO4_ON_VSELinitializer for REG_LDO4_SLP_VSELinitializer for REG_LDO5_ON_VSELinitializer for REG_LDO5_SLP_VSELinitializer for REG_LDO6_ON_VSELinitializer for REG_LDO6_SLP_VSELinitializer for REG_LDO7_ON_VSELinitializer for REG_LDO7_SLP_VSELinitializer for REG_LDO8_ON_VSELinitializer for REG_LDO8_SLP_VSELinitializer for REG_DEVCTRLinitializer for REG_INT_STS1initializer for REG_INT_STS_MSK1initializer for REG_INT_STS2initializer for REG_INT_STS_MSK2initializer for REG_IO_POLinitializer for REG_OTP_VDD_ENinitializer for REG_H5V_ENinitializer for REG_SLEEP_SET_OFFinitializer for REG_BOOST_LDO9_ON_VSELinitializer for REG_BOOST_LDO9_SLP_VSELinitializer for REG_BOOST_CTRLinitializer for REG_DCDC_ILMAXinitializer for REG_CHRG_COMPinitializer for REG_SUP_STSinitializer for REG_USB_CTRLinitializer for REG1_CHRG_CTRLinitializer for REG2_CHRG_CTRLinitializer for REG3_CHRG_CTRLinitializer for REG_BAT_CTRLinitializer for REG_BAT_HTS_TS1initializer for REG_BAT_LTS_TS1initializer for REG_BAT_HTS_TS2initializer for REG_BAT_LTS_TS2initializer for REG_TS_CTRLinitializer for REG_ADC_CTRLinitializer for REG_ON_SOURCEinitializer for REG_OFF_SOURCEinitializer for REG_GGCONinitializer for REG_GGSTSinitializer for REG_FRAME_SMP_INTERVinitializer for REG_AUTO_SLP_CUR_THRinitializer for REG3_GASCNT_CALinitializer for REG2_GASCNT_CALinitializer for REG1_GASCNT_CALinitializer for REG0_GASCNT_CALinitializer for REG3_GASCNTinitializer for REG2_GASCNTinitializer for REG1_GASCNTinitializer for REG0_GASCNTinitializer for REGH_BAT_CUR_AVGinitializer for REGL_BAT_CUR_AVGinitializer for REGH_TS1_ADCinitializer for REGL_TS1_ADCinitializer for REGH_TS2_ADCinitializer for REGL_TS2_ADCinitializer for REGH_BAT_OCVinitializer for REGL_BAT_OCVinitializer for REGH_BAT_VOLinitializer for REGL_BAT_VOLinitializer for REGH_RELAX_ENTRY_THRESinitializer for REGL_RELAX_ENTRY_THRESinitializer for REGH_RELAX_EXIT_THRESinitializer for REGL_RELAX_EXIT_THRESinitializer for REGH_RELAX_VOL1initializer for REGL_RELAX_VOL1initializer for REGH_RELAX_VOL2initializer for REGL_RELAX_VOL2initializer for REGH_BAT_CUR_R_CALCinitializer for REGL_BAT_CUR_R_CALCinitializer for REGH_BAT_VOL_R_CALCinitializer for REGL_BAT_VOL_R_CALCinitializer for REGH_CAL_OFFSETinitializer for REGL_CAL_OFFSETinitializer for REG_NON_ACT_TIMER_CNTinitializer for REGH_VCALIB0initializer for REGL_VCALIB0initializer for REGH_VCALIB1initializer for REGL_VCALIB1initializer for REGH_IOFFSETinitializer for REGL_IOFFSETinitializer for REG_SOCinitializer for REG3_REMAIN_CAPinitializer for REG2_REMAIN_CAPinitializer for REG1_REMAIN_CAPinitializer for REG0_REMAIN_CAPinitializer for REG_UPDAT_LEVEinitializer for REG3_NEW_FCCinitializer for REG2_NEW_FCCinitializer for REG1_NEW_FCCinitializer for REG0_NEW_FCCinitializer for REG_NON_ACT_TIMER_CNT_SAVEinitializer for REG_OCV_VOL_VALIDinitializer for REG_REBOOT_CNTinitializer for REG_POFFSETinitializer for REG_MISC_MARKinitializer for REG_HALT_CNTinitializer for REGH_CALC_RESTinitializer for REGL_CALC_RESTinitializer for SAVE_DATA19initializer for RK808_NUM_OF_REGSinitializer for _u_boot_list_2_driver_2_pmic_rk8xxinitializer for rk8xx_idsinitializer for rk8xx_opsinitializer for OP_OFFinitializer for OP_LPMinitializer for OP_STANDBYinitializer for OP_STANDBY_LPMinitializer for OP_ONinitializer for S2MPS11_REG_IDinitializer for S2MPS11_REG_INT1initializer for S2MPS11_REG_INT2initializer for S2MPS11_REG_INT3initializer for S2MPS11_REG_INT1Minitializer for S2MPS11_REG_INT2Minitializer for S2MPS11_REG_INT3Minitializer for S2MPS11_REG_STATUS1initializer for S2MPS11_REG_STATUS2initializer for S2MPS11_REG_OFFSRCinitializer for S2MPS11_REG_PWRONSRCinitializer for S2MPS11_REG_RTC_CTRLinitializer for S2MPS11_REG_CTRL1initializer for S2MPS11_REG_ETC_TESTinitializer for S2MPS11_REG_RSVD3initializer for S2MPS11_REG_BU_CHGinitializer for S2MPS11_REG                